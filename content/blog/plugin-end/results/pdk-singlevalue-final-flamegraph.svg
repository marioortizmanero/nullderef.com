<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="106876"><g><title>___pthread_cond_timedwait (46 samples, 0.04%)</title><rect x="0.0243%" y="821" width="0.0430%" height="15" fill="rgb(227,0,7)" fg:x="26" fg:w="46"/><text x="0.2743%" y="831.50"></text></g><g><title>__futex_abstimed_wait_common (40 samples, 0.04%)</title><rect x="0.0299%" y="805" width="0.0374%" height="15" fill="rgb(217,0,24)" fg:x="32" fg:w="40"/><text x="0.2799%" y="815.50"></text></g><g><title>__GI___clone (66 samples, 0.06%)</title><rect x="0.0075%" y="1141" width="0.0618%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="66"/><text x="0.2575%" y="1151.50"></text></g><g><title>start_thread (66 samples, 0.06%)</title><rect x="0.0075%" y="1125" width="0.0618%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="66"/><text x="0.2575%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (66 samples, 0.06%)</title><rect x="0.0075%" y="1109" width="0.0618%" height="15" fill="rgb(208,68,35)" fg:x="8" fg:w="66"/><text x="0.2575%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (66 samples, 0.06%)</title><rect x="0.0075%" y="1093" width="0.0618%" height="15" fill="rgb(232,128,0)" fg:x="8" fg:w="66"/><text x="0.2575%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (66 samples, 0.06%)</title><rect x="0.0075%" y="1077" width="0.0618%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="66"/><text x="0.2575%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (66 samples, 0.06%)</title><rect x="0.0075%" y="1061" width="0.0618%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="66"/><text x="0.2575%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (66 samples, 0.06%)</title><rect x="0.0075%" y="1045" width="0.0618%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="66"/><text x="0.2575%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (66 samples, 0.06%)</title><rect x="0.0075%" y="1029" width="0.0618%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="66"/><text x="0.2575%" y="1039.50"></text></g><g><title>std::panicking::try (66 samples, 0.06%)</title><rect x="0.0075%" y="1013" width="0.0618%" height="15" fill="rgb(250,228,42)" fg:x="8" fg:w="66"/><text x="0.2575%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (66 samples, 0.06%)</title><rect x="0.0075%" y="997" width="0.0618%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="66"/><text x="0.2575%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (66 samples, 0.06%)</title><rect x="0.0075%" y="981" width="0.0618%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="66"/><text x="0.2575%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (66 samples, 0.06%)</title><rect x="0.0075%" y="965" width="0.0618%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="66"/><text x="0.2575%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (66 samples, 0.06%)</title><rect x="0.0075%" y="949" width="0.0618%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="66"/><text x="0.2575%" y="959.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (66 samples, 0.06%)</title><rect x="0.0075%" y="933" width="0.0618%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="66"/><text x="0.2575%" y="943.50"></text></g><g><title>async_io::driver::main_loop (66 samples, 0.06%)</title><rect x="0.0075%" y="917" width="0.0618%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="66"/><text x="0.2575%" y="927.50"></text></g><g><title>parking::Parker::park_timeout (52 samples, 0.05%)</title><rect x="0.0206%" y="901" width="0.0487%" height="15" fill="rgb(210,31,41)" fg:x="22" fg:w="52"/><text x="0.2706%" y="911.50"></text></g><g><title>parking::Inner::park (52 samples, 0.05%)</title><rect x="0.0206%" y="885" width="0.0487%" height="15" fill="rgb(221,200,47)" fg:x="22" fg:w="52"/><text x="0.2706%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (52 samples, 0.05%)</title><rect x="0.0206%" y="869" width="0.0487%" height="15" fill="rgb(226,26,5)" fg:x="22" fg:w="52"/><text x="0.2706%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (50 samples, 0.05%)</title><rect x="0.0225%" y="853" width="0.0468%" height="15" fill="rgb(249,33,26)" fg:x="24" fg:w="50"/><text x="0.2725%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (50 samples, 0.05%)</title><rect x="0.0225%" y="837" width="0.0468%" height="15" fill="rgb(235,183,28)" fg:x="24" fg:w="50"/><text x="0.2725%" y="847.50"></text></g><g><title>async-io (72 samples, 0.07%)</title><rect x="0.0028%" y="1157" width="0.0674%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="72"/><text x="0.2528%" y="1167.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="0.4753%" y="1141" width="0.0112%" height="15" fill="rgb(247,18,42)" fg:x="508" fg:w="12"/><text x="0.7253%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="0.4865%" y="1141" width="0.0253%" height="15" fill="rgb(241,131,45)" fg:x="520" fg:w="27"/><text x="0.7365%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (104 samples, 0.10%)</title><rect x="0.5118%" y="1141" width="0.0973%" height="15" fill="rgb(249,31,29)" fg:x="547" fg:w="104"/><text x="0.7618%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (102 samples, 0.10%)</title><rect x="0.5137%" y="1125" width="0.0954%" height="15" fill="rgb(225,111,53)" fg:x="549" fg:w="102"/><text x="0.7637%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (38 samples, 0.04%)</title><rect x="0.6849%" y="1109" width="0.0356%" height="15" fill="rgb(238,160,17)" fg:x="732" fg:w="38"/><text x="0.9349%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (23 samples, 0.02%)</title><rect x="0.7205%" y="1077" width="0.0215%" height="15" fill="rgb(214,148,48)" fg:x="770" fg:w="23"/><text x="0.9705%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (23 samples, 0.02%)</title><rect x="0.7205%" y="1061" width="0.0215%" height="15" fill="rgb(232,36,49)" fg:x="770" fg:w="23"/><text x="0.9705%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (23 samples, 0.02%)</title><rect x="0.7205%" y="1045" width="0.0215%" height="15" fill="rgb(209,103,24)" fg:x="770" fg:w="23"/><text x="0.9705%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (23 samples, 0.02%)</title><rect x="0.7205%" y="1029" width="0.0215%" height="15" fill="rgb(229,88,8)" fg:x="770" fg:w="23"/><text x="0.9705%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="0.7205%" y="1013" width="0.0215%" height="15" fill="rgb(213,181,19)" fg:x="770" fg:w="23"/><text x="0.9705%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="0.7205%" y="997" width="0.0215%" height="15" fill="rgb(254,191,54)" fg:x="770" fg:w="23"/><text x="0.9705%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (23 samples, 0.02%)</title><rect x="0.7205%" y="981" width="0.0215%" height="15" fill="rgb(241,83,37)" fg:x="770" fg:w="23"/><text x="0.9705%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.02%)</title><rect x="0.7205%" y="965" width="0.0215%" height="15" fill="rgb(233,36,39)" fg:x="770" fg:w="23"/><text x="0.9705%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.02%)</title><rect x="0.7205%" y="949" width="0.0215%" height="15" fill="rgb(226,3,54)" fg:x="770" fg:w="23"/><text x="0.9705%" y="959.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.02%)</title><rect x="0.7205%" y="933" width="0.0215%" height="15" fill="rgb(245,192,40)" fg:x="770" fg:w="23"/><text x="0.9705%" y="943.50"></text></g><g><title>__rg_alloc (23 samples, 0.02%)</title><rect x="0.7205%" y="917" width="0.0215%" height="15" fill="rgb(238,167,29)" fg:x="770" fg:w="23"/><text x="0.9705%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (23 samples, 0.02%)</title><rect x="0.7205%" y="901" width="0.0215%" height="15" fill="rgb(232,182,51)" fg:x="770" fg:w="23"/><text x="0.9705%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="0.7420%" y="1061" width="0.0215%" height="15" fill="rgb(231,60,39)" fg:x="793" fg:w="23"/><text x="0.9920%" y="1071.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (23 samples, 0.02%)</title><rect x="0.7420%" y="1045" width="0.0215%" height="15" fill="rgb(208,69,12)" fg:x="793" fg:w="23"/><text x="0.9920%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (23 samples, 0.02%)</title><rect x="0.7635%" y="1061" width="0.0215%" height="15" fill="rgb(235,93,37)" fg:x="816" fg:w="23"/><text x="1.0135%" y="1071.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (23 samples, 0.02%)</title><rect x="0.7635%" y="1045" width="0.0215%" height="15" fill="rgb(213,116,39)" fg:x="816" fg:w="23"/><text x="1.0135%" y="1055.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (211 samples, 0.20%)</title><rect x="0.6101%" y="1125" width="0.1974%" height="15" fill="rgb(222,207,29)" fg:x="652" fg:w="211"/><text x="0.8601%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (93 samples, 0.09%)</title><rect x="0.7205%" y="1109" width="0.0870%" height="15" fill="rgb(206,96,30)" fg:x="770" fg:w="93"/><text x="0.9705%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (93 samples, 0.09%)</title><rect x="0.7205%" y="1093" width="0.0870%" height="15" fill="rgb(218,138,4)" fg:x="770" fg:w="93"/><text x="0.9705%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (70 samples, 0.07%)</title><rect x="0.7420%" y="1077" width="0.0655%" height="15" fill="rgb(250,191,14)" fg:x="793" fg:w="70"/><text x="0.9920%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="0.7850%" y="1061" width="0.0225%" height="15" fill="rgb(239,60,40)" fg:x="839" fg:w="24"/><text x="1.0350%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="0.7850%" y="1045" width="0.0225%" height="15" fill="rgb(206,27,48)" fg:x="839" fg:w="24"/><text x="1.0350%" y="1055.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="0.7850%" y="1029" width="0.0225%" height="15" fill="rgb(225,35,8)" fg:x="839" fg:w="24"/><text x="1.0350%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (39 samples, 0.04%)</title><rect x="0.8093%" y="1109" width="0.0365%" height="15" fill="rgb(250,213,24)" fg:x="865" fg:w="39"/><text x="1.0593%" y="1119.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (39 samples, 0.04%)</title><rect x="0.8093%" y="1093" width="0.0365%" height="15" fill="rgb(247,123,22)" fg:x="865" fg:w="39"/><text x="1.0593%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (39 samples, 0.04%)</title><rect x="0.8093%" y="1077" width="0.0365%" height="15" fill="rgb(231,138,38)" fg:x="865" fg:w="39"/><text x="1.0593%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (39 samples, 0.04%)</title><rect x="0.8093%" y="1061" width="0.0365%" height="15" fill="rgb(231,145,46)" fg:x="865" fg:w="39"/><text x="1.0593%" y="1071.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (50 samples, 0.05%)</title><rect x="0.8075%" y="1125" width="0.0468%" height="15" fill="rgb(251,118,11)" fg:x="863" fg:w="50"/><text x="1.0575%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="0.8580%" y="1125" width="0.0103%" height="15" fill="rgb(217,147,25)" fg:x="917" fg:w="11"/><text x="1.1080%" y="1135.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (133 samples, 0.12%)</title><rect x="0.8683%" y="1125" width="0.1244%" height="15" fill="rgb(247,81,37)" fg:x="928" fg:w="133"/><text x="1.1183%" y="1135.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (28 samples, 0.03%)</title><rect x="0.9665%" y="1109" width="0.0262%" height="15" fill="rgb(209,12,38)" fg:x="1033" fg:w="28"/><text x="1.2165%" y="1119.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (33 samples, 0.03%)</title><rect x="1.0508%" y="1109" width="0.0309%" height="15" fill="rgb(227,1,9)" fg:x="1123" fg:w="33"/><text x="1.3008%" y="1119.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (22 samples, 0.02%)</title><rect x="1.0610%" y="1093" width="0.0206%" height="15" fill="rgb(248,47,43)" fg:x="1134" fg:w="22"/><text x="1.3110%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (54 samples, 0.05%)</title><rect x="1.0816%" y="1109" width="0.0505%" height="15" fill="rgb(221,10,30)" fg:x="1156" fg:w="54"/><text x="1.3316%" y="1119.50"></text></g><g><title>core::mem::replace (54 samples, 0.05%)</title><rect x="1.0816%" y="1093" width="0.0505%" height="15" fill="rgb(210,229,1)" fg:x="1156" fg:w="54"/><text x="1.3316%" y="1103.50"></text></g><g><title>core::ptr::read (54 samples, 0.05%)</title><rect x="1.0816%" y="1077" width="0.0505%" height="15" fill="rgb(222,148,37)" fg:x="1156" fg:w="54"/><text x="1.3316%" y="1087.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (153 samples, 0.14%)</title><rect x="1.0002%" y="1125" width="0.1432%" height="15" fill="rgb(234,67,33)" fg:x="1069" fg:w="153"/><text x="1.2502%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (12 samples, 0.01%)</title><rect x="1.1322%" y="1109" width="0.0112%" height="15" fill="rgb(247,98,35)" fg:x="1210" fg:w="12"/><text x="1.3822%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (53 samples, 0.05%)</title><rect x="1.4727%" y="1093" width="0.0496%" height="15" fill="rgb(247,138,52)" fg:x="1574" fg:w="53"/><text x="1.7227%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (53 samples, 0.05%)</title><rect x="1.4727%" y="1077" width="0.0496%" height="15" fill="rgb(213,79,30)" fg:x="1574" fg:w="53"/><text x="1.7227%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (97 samples, 0.09%)</title><rect x="1.4447%" y="1109" width="0.0908%" height="15" fill="rgb(246,177,23)" fg:x="1544" fg:w="97"/><text x="1.6947%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (14 samples, 0.01%)</title><rect x="1.5223%" y="1093" width="0.0131%" height="15" fill="rgb(230,62,27)" fg:x="1627" fg:w="14"/><text x="1.7723%" y="1103.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="1.5354%" y="1093" width="0.0225%" height="15" fill="rgb(216,154,8)" fg:x="1641" fg:w="24"/><text x="1.7854%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="1.5410%" y="1077" width="0.0168%" height="15" fill="rgb(244,35,45)" fg:x="1647" fg:w="18"/><text x="1.7910%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (18 samples, 0.02%)</title><rect x="1.5410%" y="1061" width="0.0168%" height="15" fill="rgb(251,115,12)" fg:x="1647" fg:w="18"/><text x="1.7910%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (18 samples, 0.02%)</title><rect x="1.5410%" y="1045" width="0.0168%" height="15" fill="rgb(240,54,50)" fg:x="1647" fg:w="18"/><text x="1.7910%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 0.02%)</title><rect x="1.5410%" y="1029" width="0.0168%" height="15" fill="rgb(233,84,52)" fg:x="1647" fg:w="18"/><text x="1.7910%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="1.5410%" y="1013" width="0.0168%" height="15" fill="rgb(207,117,47)" fg:x="1647" fg:w="18"/><text x="1.7910%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="1.5410%" y="997" width="0.0168%" height="15" fill="rgb(249,43,39)" fg:x="1647" fg:w="18"/><text x="1.7910%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="1.5410%" y="981" width="0.0168%" height="15" fill="rgb(209,38,44)" fg:x="1647" fg:w="18"/><text x="1.7910%" y="991.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (17 samples, 0.02%)</title><rect x="1.5420%" y="965" width="0.0159%" height="15" fill="rgb(236,212,23)" fg:x="1648" fg:w="17"/><text x="1.7920%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="1.5420%" y="949" width="0.0159%" height="15" fill="rgb(242,79,21)" fg:x="1648" fg:w="17"/><text x="1.7920%" y="959.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (43 samples, 0.04%)</title><rect x="1.5354%" y="1109" width="0.0402%" height="15" fill="rgb(211,96,35)" fg:x="1641" fg:w="43"/><text x="1.7854%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (19 samples, 0.02%)</title><rect x="1.5579%" y="1093" width="0.0178%" height="15" fill="rgb(253,215,40)" fg:x="1665" fg:w="19"/><text x="1.8079%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (19 samples, 0.02%)</title><rect x="1.5579%" y="1077" width="0.0178%" height="15" fill="rgb(211,81,21)" fg:x="1665" fg:w="19"/><text x="1.8079%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (19 samples, 0.02%)</title><rect x="1.5579%" y="1061" width="0.0178%" height="15" fill="rgb(208,190,38)" fg:x="1665" fg:w="19"/><text x="1.8079%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19 samples, 0.02%)</title><rect x="1.5579%" y="1045" width="0.0178%" height="15" fill="rgb(235,213,38)" fg:x="1665" fg:w="19"/><text x="1.8079%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="1.5579%" y="1029" width="0.0178%" height="15" fill="rgb(237,122,38)" fg:x="1665" fg:w="19"/><text x="1.8079%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="1.5579%" y="1013" width="0.0178%" height="15" fill="rgb(244,218,35)" fg:x="1665" fg:w="19"/><text x="1.8079%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="1.5579%" y="997" width="0.0178%" height="15" fill="rgb(240,68,47)" fg:x="1665" fg:w="19"/><text x="1.8079%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (19 samples, 0.02%)</title><rect x="1.5757%" y="1109" width="0.0178%" height="15" fill="rgb(210,16,53)" fg:x="1684" fg:w="19"/><text x="1.8257%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="1.5757%" y="1093" width="0.0178%" height="15" fill="rgb(235,124,12)" fg:x="1684" fg:w="19"/><text x="1.8257%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="1.5757%" y="1077" width="0.0178%" height="15" fill="rgb(224,169,11)" fg:x="1684" fg:w="19"/><text x="1.8257%" y="1087.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="1.5757%" y="1061" width="0.0178%" height="15" fill="rgb(250,166,2)" fg:x="1684" fg:w="19"/><text x="1.8257%" y="1071.50"></text></g><g><title>async_task::runnable::Runnable::run (17 samples, 0.02%)</title><rect x="1.5775%" y="1045" width="0.0159%" height="15" fill="rgb(242,216,29)" fg:x="1686" fg:w="17"/><text x="1.8275%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (21 samples, 0.02%)</title><rect x="1.6047%" y="1109" width="0.0196%" height="15" fill="rgb(230,116,27)" fg:x="1715" fg:w="21"/><text x="1.8547%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (21 samples, 0.02%)</title><rect x="1.6047%" y="1093" width="0.0196%" height="15" fill="rgb(228,99,48)" fg:x="1715" fg:w="21"/><text x="1.8547%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (14 samples, 0.01%)</title><rect x="1.6112%" y="1077" width="0.0131%" height="15" fill="rgb(253,11,6)" fg:x="1722" fg:w="14"/><text x="1.8612%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="1.6112%" y="1061" width="0.0131%" height="15" fill="rgb(247,143,39)" fg:x="1722" fg:w="14"/><text x="1.8612%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="1.6112%" y="1045" width="0.0131%" height="15" fill="rgb(236,97,10)" fg:x="1722" fg:w="14"/><text x="1.8612%" y="1055.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="1.6112%" y="1029" width="0.0131%" height="15" fill="rgb(233,208,19)" fg:x="1722" fg:w="14"/><text x="1.8612%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (27 samples, 0.03%)</title><rect x="1.6898%" y="1093" width="0.0253%" height="15" fill="rgb(216,164,2)" fg:x="1806" fg:w="27"/><text x="1.9398%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.02%)</title><rect x="1.6992%" y="1077" width="0.0159%" height="15" fill="rgb(220,129,5)" fg:x="1816" fg:w="17"/><text x="1.9492%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="1.6992%" y="1061" width="0.0159%" height="15" fill="rgb(242,17,10)" fg:x="1816" fg:w="17"/><text x="1.9492%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="1.6992%" y="1045" width="0.0159%" height="15" fill="rgb(242,107,0)" fg:x="1816" fg:w="17"/><text x="1.9492%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="1.6992%" y="1029" width="0.0159%" height="15" fill="rgb(251,28,31)" fg:x="1816" fg:w="17"/><text x="1.9492%" y="1039.50"></text></g><g><title>__rg_alloc (17 samples, 0.02%)</title><rect x="1.6992%" y="1013" width="0.0159%" height="15" fill="rgb(233,223,10)" fg:x="1816" fg:w="17"/><text x="1.9492%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.02%)</title><rect x="1.6992%" y="997" width="0.0159%" height="15" fill="rgb(215,21,27)" fg:x="1816" fg:w="17"/><text x="1.9492%" y="1007.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (111 samples, 0.10%)</title><rect x="1.6243%" y="1109" width="0.1039%" height="15" fill="rgb(232,23,21)" fg:x="1736" fg:w="111"/><text x="1.8743%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (14 samples, 0.01%)</title><rect x="1.7151%" y="1093" width="0.0131%" height="15" fill="rgb(244,5,23)" fg:x="1833" fg:w="14"/><text x="1.9651%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (20 samples, 0.02%)</title><rect x="1.7282%" y="1109" width="0.0187%" height="15" fill="rgb(226,81,46)" fg:x="1847" fg:w="20"/><text x="1.9782%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (42 samples, 0.04%)</title><rect x="1.7469%" y="1109" width="0.0393%" height="15" fill="rgb(247,70,30)" fg:x="1867" fg:w="42"/><text x="1.9969%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="1.8367%" y="1093" width="0.0103%" height="15" fill="rgb(212,68,19)" fg:x="1963" fg:w="11"/><text x="2.0867%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="1.8367%" y="1077" width="0.0103%" height="15" fill="rgb(240,187,13)" fg:x="1963" fg:w="11"/><text x="2.0867%" y="1087.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (11 samples, 0.01%)</title><rect x="1.8367%" y="1061" width="0.0103%" height="15" fill="rgb(223,113,26)" fg:x="1963" fg:w="11"/><text x="2.0867%" y="1071.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="1.8367%" y="1045" width="0.0103%" height="15" fill="rgb(206,192,2)" fg:x="1963" fg:w="11"/><text x="2.0867%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (774 samples, 0.72%)</title><rect x="1.1434%" y="1125" width="0.7242%" height="15" fill="rgb(241,108,4)" fg:x="1222" fg:w="774"/><text x="1.3934%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (87 samples, 0.08%)</title><rect x="1.7862%" y="1109" width="0.0814%" height="15" fill="rgb(247,173,49)" fg:x="1909" fg:w="87"/><text x="2.0362%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (12 samples, 0.01%)</title><rect x="1.8564%" y="1093" width="0.0112%" height="15" fill="rgb(224,114,35)" fg:x="1984" fg:w="12"/><text x="2.1064%" y="1103.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="1.8564%" y="1077" width="0.0112%" height="15" fill="rgb(245,159,27)" fg:x="1984" fg:w="12"/><text x="2.1064%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (24 samples, 0.02%)</title><rect x="1.9265%" y="1109" width="0.0225%" height="15" fill="rgb(245,172,44)" fg:x="2059" fg:w="24"/><text x="2.1765%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (24 samples, 0.02%)</title><rect x="1.9265%" y="1093" width="0.0225%" height="15" fill="rgb(236,23,11)" fg:x="2059" fg:w="24"/><text x="2.1765%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="1.9265%" y="1077" width="0.0225%" height="15" fill="rgb(205,117,38)" fg:x="2059" fg:w="24"/><text x="2.1765%" y="1087.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (24 samples, 0.02%)</title><rect x="1.9265%" y="1061" width="0.0225%" height="15" fill="rgb(237,72,25)" fg:x="2059" fg:w="24"/><text x="2.1765%" y="1071.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (24 samples, 0.02%)</title><rect x="1.9265%" y="1045" width="0.0225%" height="15" fill="rgb(244,70,9)" fg:x="2059" fg:w="24"/><text x="2.1765%" y="1055.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (111 samples, 0.10%)</title><rect x="1.8676%" y="1125" width="0.1039%" height="15" fill="rgb(217,125,39)" fg:x="1996" fg:w="111"/><text x="2.1176%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (24 samples, 0.02%)</title><rect x="1.9490%" y="1109" width="0.0225%" height="15" fill="rgb(235,36,10)" fg:x="2083" fg:w="24"/><text x="2.1990%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="1.9490%" y="1093" width="0.0225%" height="15" fill="rgb(251,123,47)" fg:x="2083" fg:w="24"/><text x="2.1990%" y="1103.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.02%)</title><rect x="1.9490%" y="1077" width="0.0225%" height="15" fill="rgb(221,13,13)" fg:x="2083" fg:w="24"/><text x="2.1990%" y="1087.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (24 samples, 0.02%)</title><rect x="1.9490%" y="1061" width="0.0225%" height="15" fill="rgb(238,131,9)" fg:x="2083" fg:w="24"/><text x="2.1990%" y="1071.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (44 samples, 0.04%)</title><rect x="2.0201%" y="1077" width="0.0412%" height="15" fill="rgb(211,50,8)" fg:x="2159" fg:w="44"/><text x="2.2701%" y="1087.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (92 samples, 0.09%)</title><rect x="1.9789%" y="1125" width="0.0861%" height="15" fill="rgb(245,182,24)" fg:x="2115" fg:w="92"/><text x="2.2289%" y="1135.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (68 samples, 0.06%)</title><rect x="2.0014%" y="1109" width="0.0636%" height="15" fill="rgb(242,14,37)" fg:x="2139" fg:w="68"/><text x="2.2514%" y="1119.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (59 samples, 0.06%)</title><rect x="2.0098%" y="1093" width="0.0552%" height="15" fill="rgb(246,228,12)" fg:x="2148" fg:w="59"/><text x="2.2598%" y="1103.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (25 samples, 0.02%)</title><rect x="2.0706%" y="1125" width="0.0234%" height="15" fill="rgb(213,55,15)" fg:x="2213" fg:w="25"/><text x="2.3206%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (101 samples, 0.09%)</title><rect x="2.0940%" y="1125" width="0.0945%" height="15" fill="rgb(209,9,3)" fg:x="2238" fg:w="101"/><text x="2.3440%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (54 samples, 0.05%)</title><rect x="2.1380%" y="1109" width="0.0505%" height="15" fill="rgb(230,59,30)" fg:x="2285" fg:w="54"/><text x="2.3880%" y="1119.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (45 samples, 0.04%)</title><rect x="2.1464%" y="1093" width="0.0421%" height="15" fill="rgb(209,121,21)" fg:x="2294" fg:w="45"/><text x="2.3964%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.02%)</title><rect x="2.1698%" y="1077" width="0.0187%" height="15" fill="rgb(220,109,13)" fg:x="2319" fg:w="20"/><text x="2.4198%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (14 samples, 0.01%)</title><rect x="2.1754%" y="1061" width="0.0131%" height="15" fill="rgb(232,18,1)" fg:x="2325" fg:w="14"/><text x="2.4254%" y="1071.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (14 samples, 0.01%)</title><rect x="2.1754%" y="1045" width="0.0131%" height="15" fill="rgb(215,41,42)" fg:x="2325" fg:w="14"/><text x="2.4254%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="2.1754%" y="1029" width="0.0131%" height="15" fill="rgb(224,123,36)" fg:x="2325" fg:w="14"/><text x="2.4254%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="2.1754%" y="1013" width="0.0131%" height="15" fill="rgb(240,125,3)" fg:x="2325" fg:w="14"/><text x="2.4254%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="2.1754%" y="997" width="0.0131%" height="15" fill="rgb(205,98,50)" fg:x="2325" fg:w="14"/><text x="2.4254%" y="1007.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="2.1754%" y="981" width="0.0131%" height="15" fill="rgb(205,185,37)" fg:x="2325" fg:w="14"/><text x="2.4254%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="2.1754%" y="965" width="0.0131%" height="15" fill="rgb(238,207,15)" fg:x="2325" fg:w="14"/><text x="2.4254%" y="975.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="2.2063%" y="1077" width="0.0122%" height="15" fill="rgb(213,199,42)" fg:x="2358" fg:w="13"/><text x="2.4563%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="2.2063%" y="1061" width="0.0122%" height="15" fill="rgb(235,201,11)" fg:x="2358" fg:w="13"/><text x="2.4563%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="2.2063%" y="1045" width="0.0122%" height="15" fill="rgb(207,46,11)" fg:x="2358" fg:w="13"/><text x="2.4563%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="2.2063%" y="1029" width="0.0122%" height="15" fill="rgb(241,35,35)" fg:x="2358" fg:w="13"/><text x="2.4563%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="2.2063%" y="1013" width="0.0122%" height="15" fill="rgb(243,32,47)" fg:x="2358" fg:w="13"/><text x="2.4563%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="2.2063%" y="997" width="0.0122%" height="15" fill="rgb(247,202,23)" fg:x="2358" fg:w="13"/><text x="2.4563%" y="1007.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="2.2063%" y="981" width="0.0122%" height="15" fill="rgb(219,102,11)" fg:x="2358" fg:w="13"/><text x="2.4563%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="2.2063%" y="965" width="0.0122%" height="15" fill="rgb(243,110,44)" fg:x="2358" fg:w="13"/><text x="2.4563%" y="975.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (42 samples, 0.04%)</title><rect x="2.1885%" y="1125" width="0.0393%" height="15" fill="rgb(222,74,54)" fg:x="2339" fg:w="42"/><text x="2.4385%" y="1135.50"></text></g><g><title>value_trait::Builder::object (23 samples, 0.02%)</title><rect x="2.2063%" y="1109" width="0.0215%" height="15" fill="rgb(216,99,12)" fg:x="2358" fg:w="23"/><text x="2.4563%" y="1119.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (23 samples, 0.02%)</title><rect x="2.2063%" y="1093" width="0.0215%" height="15" fill="rgb(226,22,26)" fg:x="2358" fg:w="23"/><text x="2.4563%" y="1103.50"></text></g><g><title>__GI___pthread_mutex_trylock (11 samples, 0.01%)</title><rect x="2.2484%" y="1125" width="0.0103%" height="15" fill="rgb(217,163,10)" fg:x="2403" fg:w="11"/><text x="2.4984%" y="1135.50"></text></g><g><title>___pthread_mutex_lock (46 samples, 0.04%)</title><rect x="2.2652%" y="1125" width="0.0430%" height="15" fill="rgb(213,25,53)" fg:x="2421" fg:w="46"/><text x="2.5152%" y="1135.50"></text></g><g><title>__clock_gettime_2 (30 samples, 0.03%)</title><rect x="2.3195%" y="1125" width="0.0281%" height="15" fill="rgb(252,105,26)" fg:x="2479" fg:w="30"/><text x="2.5695%" y="1135.50"></text></g><g><title>__futex_abstimed_wait_common (11 samples, 0.01%)</title><rect x="2.3476%" y="1125" width="0.0103%" height="15" fill="rgb(220,39,43)" fg:x="2509" fg:w="11"/><text x="2.5976%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (32 samples, 0.03%)</title><rect x="2.3588%" y="1125" width="0.0299%" height="15" fill="rgb(229,68,48)" fg:x="2521" fg:w="32"/><text x="2.6088%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (14 samples, 0.01%)</title><rect x="2.3906%" y="1125" width="0.0131%" height="15" fill="rgb(252,8,32)" fg:x="2555" fg:w="14"/><text x="2.6406%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (28 samples, 0.03%)</title><rect x="2.4037%" y="1125" width="0.0262%" height="15" fill="rgb(223,20,43)" fg:x="2569" fg:w="28"/><text x="2.6537%" y="1135.50"></text></g><g><title>abi_stable::erased_types::iterator::next (25 samples, 0.02%)</title><rect x="2.4299%" y="1125" width="0.0234%" height="15" fill="rgb(229,81,49)" fg:x="2597" fg:w="25"/><text x="2.6799%" y="1135.50"></text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (15 samples, 0.01%)</title><rect x="2.4599%" y="1125" width="0.0140%" height="15" fill="rgb(236,28,36)" fg:x="2629" fg:w="15"/><text x="2.7099%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (40 samples, 0.04%)</title><rect x="2.5263%" y="1109" width="0.0374%" height="15" fill="rgb(249,185,26)" fg:x="2700" fg:w="40"/><text x="2.7763%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (40 samples, 0.04%)</title><rect x="2.5263%" y="1093" width="0.0374%" height="15" fill="rgb(249,174,33)" fg:x="2700" fg:w="40"/><text x="2.7763%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (40 samples, 0.04%)</title><rect x="2.5263%" y="1077" width="0.0374%" height="15" fill="rgb(233,201,37)" fg:x="2700" fg:w="40"/><text x="2.7763%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="2.5637%" y="1109" width="0.0122%" height="15" fill="rgb(221,78,26)" fg:x="2740" fg:w="13"/><text x="2.8137%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="2.5637%" y="1093" width="0.0122%" height="15" fill="rgb(250,127,30)" fg:x="2740" fg:w="13"/><text x="2.8137%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="2.5637%" y="1077" width="0.0122%" height="15" fill="rgb(230,49,44)" fg:x="2740" fg:w="13"/><text x="2.8137%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="2.5637%" y="1061" width="0.0122%" height="15" fill="rgb(229,67,23)" fg:x="2740" fg:w="13"/><text x="2.8137%" y="1071.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="2.5637%" y="1045" width="0.0122%" height="15" fill="rgb(249,83,47)" fg:x="2740" fg:w="13"/><text x="2.8137%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="2.5637%" y="1029" width="0.0122%" height="15" fill="rgb(215,43,3)" fg:x="2740" fg:w="13"/><text x="2.8137%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="2.5759%" y="1109" width="0.0168%" height="15" fill="rgb(238,154,13)" fg:x="2753" fg:w="18"/><text x="2.8259%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (18 samples, 0.02%)</title><rect x="2.5759%" y="1093" width="0.0168%" height="15" fill="rgb(219,56,2)" fg:x="2753" fg:w="18"/><text x="2.8259%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="2.5759%" y="1077" width="0.0168%" height="15" fill="rgb(233,0,4)" fg:x="2753" fg:w="18"/><text x="2.8259%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="2.5759%" y="1061" width="0.0168%" height="15" fill="rgb(235,30,7)" fg:x="2753" fg:w="18"/><text x="2.8259%" y="1071.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="2.5759%" y="1045" width="0.0168%" height="15" fill="rgb(250,79,13)" fg:x="2753" fg:w="18"/><text x="2.8259%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="2.5759%" y="1029" width="0.0168%" height="15" fill="rgb(211,146,34)" fg:x="2753" fg:w="18"/><text x="2.8259%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (130 samples, 0.12%)</title><rect x="2.4739%" y="1125" width="0.1216%" height="15" fill="rgb(228,22,38)" fg:x="2644" fg:w="130"/><text x="2.7239%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (90 samples, 0.08%)</title><rect x="2.5955%" y="1125" width="0.0842%" height="15" fill="rgb(235,168,5)" fg:x="2774" fg:w="90"/><text x="2.8455%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (27 samples, 0.03%)</title><rect x="2.6545%" y="1109" width="0.0253%" height="15" fill="rgb(221,155,16)" fg:x="2837" fg:w="27"/><text x="2.9045%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (27 samples, 0.03%)</title><rect x="2.6545%" y="1093" width="0.0253%" height="15" fill="rgb(215,215,53)" fg:x="2837" fg:w="27"/><text x="2.9045%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (27 samples, 0.03%)</title><rect x="2.6545%" y="1077" width="0.0253%" height="15" fill="rgb(223,4,10)" fg:x="2837" fg:w="27"/><text x="2.9045%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (27 samples, 0.03%)</title><rect x="2.6545%" y="1061" width="0.0253%" height="15" fill="rgb(234,103,6)" fg:x="2837" fg:w="27"/><text x="2.9045%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (27 samples, 0.03%)</title><rect x="2.6545%" y="1045" width="0.0253%" height="15" fill="rgb(227,97,0)" fg:x="2837" fg:w="27"/><text x="2.9045%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (27 samples, 0.03%)</title><rect x="2.6545%" y="1029" width="0.0253%" height="15" fill="rgb(234,150,53)" fg:x="2837" fg:w="27"/><text x="2.9045%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (27 samples, 0.03%)</title><rect x="2.6545%" y="1013" width="0.0253%" height="15" fill="rgb(228,201,54)" fg:x="2837" fg:w="27"/><text x="2.9045%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.03%)</title><rect x="2.6545%" y="997" width="0.0253%" height="15" fill="rgb(222,22,37)" fg:x="2837" fg:w="27"/><text x="2.9045%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.03%)</title><rect x="2.6545%" y="981" width="0.0253%" height="15" fill="rgb(237,53,32)" fg:x="2837" fg:w="27"/><text x="2.9045%" y="991.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.03%)</title><rect x="2.6545%" y="965" width="0.0253%" height="15" fill="rgb(233,25,53)" fg:x="2837" fg:w="27"/><text x="2.9045%" y="975.50"></text></g><g><title>__rg_alloc (27 samples, 0.03%)</title><rect x="2.6545%" y="949" width="0.0253%" height="15" fill="rgb(210,40,34)" fg:x="2837" fg:w="27"/><text x="2.9045%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (27 samples, 0.03%)</title><rect x="2.6545%" y="933" width="0.0253%" height="15" fill="rgb(241,220,44)" fg:x="2837" fg:w="27"/><text x="2.9045%" y="943.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (35 samples, 0.03%)</title><rect x="2.6797%" y="1125" width="0.0327%" height="15" fill="rgb(235,28,35)" fg:x="2864" fg:w="35"/><text x="2.9297%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (23 samples, 0.02%)</title><rect x="2.6910%" y="1109" width="0.0215%" height="15" fill="rgb(210,56,17)" fg:x="2876" fg:w="23"/><text x="2.9410%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (23 samples, 0.02%)</title><rect x="2.6910%" y="1093" width="0.0215%" height="15" fill="rgb(224,130,29)" fg:x="2876" fg:w="23"/><text x="2.9410%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (23 samples, 0.02%)</title><rect x="2.6910%" y="1077" width="0.0215%" height="15" fill="rgb(235,212,8)" fg:x="2876" fg:w="23"/><text x="2.9410%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (90 samples, 0.08%)</title><rect x="2.7237%" y="1125" width="0.0842%" height="15" fill="rgb(223,33,50)" fg:x="2911" fg:w="90"/><text x="2.9737%" y="1135.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (67 samples, 0.06%)</title><rect x="2.7452%" y="1109" width="0.0627%" height="15" fill="rgb(219,149,13)" fg:x="2934" fg:w="67"/><text x="2.9952%" y="1119.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (67 samples, 0.06%)</title><rect x="2.7452%" y="1093" width="0.0627%" height="15" fill="rgb(250,156,29)" fg:x="2934" fg:w="67"/><text x="2.9952%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="2.8547%" y="917" width="0.0103%" height="15" fill="rgb(216,193,19)" fg:x="3051" fg:w="11"/><text x="3.1047%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="2.8547%" y="901" width="0.0103%" height="15" fill="rgb(216,135,14)" fg:x="3051" fg:w="11"/><text x="3.1047%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="2.8547%" y="885" width="0.0103%" height="15" fill="rgb(241,47,5)" fg:x="3051" fg:w="11"/><text x="3.1047%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="2.8547%" y="869" width="0.0103%" height="15" fill="rgb(233,42,35)" fg:x="3051" fg:w="11"/><text x="3.1047%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="2.8547%" y="853" width="0.0103%" height="15" fill="rgb(231,13,6)" fg:x="3051" fg:w="11"/><text x="3.1047%" y="863.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="2.8547%" y="837" width="0.0103%" height="15" fill="rgb(207,181,40)" fg:x="3051" fg:w="11"/><text x="3.1047%" y="847.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="2.8547%" y="821" width="0.0103%" height="15" fill="rgb(254,173,49)" fg:x="3051" fg:w="11"/><text x="3.1047%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="2.8547%" y="805" width="0.0103%" height="15" fill="rgb(221,1,38)" fg:x="3051" fg:w="11"/><text x="3.1047%" y="815.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="2.8547%" y="1029" width="0.0168%" height="15" fill="rgb(206,124,46)" fg:x="3051" fg:w="18"/><text x="3.1047%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (18 samples, 0.02%)</title><rect x="2.8547%" y="1013" width="0.0168%" height="15" fill="rgb(249,21,11)" fg:x="3051" fg:w="18"/><text x="3.1047%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (18 samples, 0.02%)</title><rect x="2.8547%" y="997" width="0.0168%" height="15" fill="rgb(222,201,40)" fg:x="3051" fg:w="18"/><text x="3.1047%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 0.02%)</title><rect x="2.8547%" y="981" width="0.0168%" height="15" fill="rgb(235,61,29)" fg:x="3051" fg:w="18"/><text x="3.1047%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="2.8547%" y="965" width="0.0168%" height="15" fill="rgb(219,207,3)" fg:x="3051" fg:w="18"/><text x="3.1047%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="2.8547%" y="949" width="0.0168%" height="15" fill="rgb(222,56,46)" fg:x="3051" fg:w="18"/><text x="3.1047%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="2.8547%" y="933" width="0.0168%" height="15" fill="rgb(239,76,54)" fg:x="3051" fg:w="18"/><text x="3.1047%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (79 samples, 0.07%)</title><rect x="2.8079%" y="1125" width="0.0739%" height="15" fill="rgb(231,124,27)" fg:x="3001" fg:w="79"/><text x="3.0579%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (29 samples, 0.03%)</title><rect x="2.8547%" y="1109" width="0.0271%" height="15" fill="rgb(249,195,6)" fg:x="3051" fg:w="29"/><text x="3.1047%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (29 samples, 0.03%)</title><rect x="2.8547%" y="1093" width="0.0271%" height="15" fill="rgb(237,174,47)" fg:x="3051" fg:w="29"/><text x="3.1047%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29 samples, 0.03%)</title><rect x="2.8547%" y="1077" width="0.0271%" height="15" fill="rgb(206,201,31)" fg:x="3051" fg:w="29"/><text x="3.1047%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (29 samples, 0.03%)</title><rect x="2.8547%" y="1061" width="0.0271%" height="15" fill="rgb(231,57,52)" fg:x="3051" fg:w="29"/><text x="3.1047%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29 samples, 0.03%)</title><rect x="2.8547%" y="1045" width="0.0271%" height="15" fill="rgb(248,177,22)" fg:x="3051" fg:w="29"/><text x="3.1047%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="2.8716%" y="1029" width="0.0103%" height="15" fill="rgb(215,211,37)" fg:x="3069" fg:w="11"/><text x="3.1216%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="2.8716%" y="1013" width="0.0103%" height="15" fill="rgb(241,128,51)" fg:x="3069" fg:w="11"/><text x="3.1216%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="2.8716%" y="997" width="0.0103%" height="15" fill="rgb(227,165,31)" fg:x="3069" fg:w="11"/><text x="3.1216%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="2.8716%" y="981" width="0.0103%" height="15" fill="rgb(228,167,24)" fg:x="3069" fg:w="11"/><text x="3.1216%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="2.8716%" y="965" width="0.0103%" height="15" fill="rgb(228,143,12)" fg:x="3069" fg:w="11"/><text x="3.1216%" y="975.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="2.8716%" y="949" width="0.0103%" height="15" fill="rgb(249,149,8)" fg:x="3069" fg:w="11"/><text x="3.1216%" y="959.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="2.8716%" y="933" width="0.0103%" height="15" fill="rgb(243,35,44)" fg:x="3069" fg:w="11"/><text x="3.1216%" y="943.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="2.8716%" y="917" width="0.0103%" height="15" fill="rgb(246,89,9)" fg:x="3069" fg:w="11"/><text x="3.1216%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (132 samples, 0.12%)</title><rect x="2.9530%" y="1061" width="0.1235%" height="15" fill="rgb(233,213,13)" fg:x="3156" fg:w="132"/><text x="3.2030%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (132 samples, 0.12%)</title><rect x="2.9530%" y="1045" width="0.1235%" height="15" fill="rgb(233,141,41)" fg:x="3156" fg:w="132"/><text x="3.2030%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (132 samples, 0.12%)</title><rect x="2.9530%" y="1029" width="0.1235%" height="15" fill="rgb(239,167,4)" fg:x="3156" fg:w="132"/><text x="3.2030%" y="1039.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (132 samples, 0.12%)</title><rect x="2.9530%" y="1013" width="0.1235%" height="15" fill="rgb(209,217,16)" fg:x="3156" fg:w="132"/><text x="3.2030%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (148 samples, 0.14%)</title><rect x="2.9530%" y="1077" width="0.1385%" height="15" fill="rgb(219,88,35)" fg:x="3156" fg:w="148"/><text x="3.2030%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="3.0765%" y="1061" width="0.0150%" height="15" fill="rgb(220,193,23)" fg:x="3288" fg:w="16"/><text x="3.3265%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="3.0765%" y="1045" width="0.0150%" height="15" fill="rgb(230,90,52)" fg:x="3288" fg:w="16"/><text x="3.3265%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="3.0765%" y="1029" width="0.0150%" height="15" fill="rgb(252,106,19)" fg:x="3288" fg:w="16"/><text x="3.3265%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="3.0765%" y="1013" width="0.0150%" height="15" fill="rgb(206,74,20)" fg:x="3288" fg:w="16"/><text x="3.3265%" y="1023.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="3.0765%" y="997" width="0.0150%" height="15" fill="rgb(230,138,44)" fg:x="3288" fg:w="16"/><text x="3.3265%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="3.0765%" y="981" width="0.0150%" height="15" fill="rgb(235,182,43)" fg:x="3288" fg:w="16"/><text x="3.3265%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="3.0914%" y="1061" width="0.0533%" height="15" fill="rgb(242,16,51)" fg:x="3304" fg:w="57"/><text x="3.3414%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (57 samples, 0.05%)</title><rect x="3.0914%" y="1045" width="0.0533%" height="15" fill="rgb(248,9,4)" fg:x="3304" fg:w="57"/><text x="3.3414%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (57 samples, 0.05%)</title><rect x="3.0914%" y="1029" width="0.0533%" height="15" fill="rgb(210,31,22)" fg:x="3304" fg:w="57"/><text x="3.3414%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (57 samples, 0.05%)</title><rect x="3.0914%" y="1013" width="0.0533%" height="15" fill="rgb(239,54,39)" fg:x="3304" fg:w="57"/><text x="3.3414%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (57 samples, 0.05%)</title><rect x="3.0914%" y="997" width="0.0533%" height="15" fill="rgb(230,99,41)" fg:x="3304" fg:w="57"/><text x="3.3414%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (67 samples, 0.06%)</title><rect x="3.0914%" y="1077" width="0.0627%" height="15" fill="rgb(253,106,12)" fg:x="3304" fg:w="67"/><text x="3.3414%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (296 samples, 0.28%)</title><rect x="2.8818%" y="1125" width="0.2770%" height="15" fill="rgb(213,46,41)" fg:x="3080" fg:w="296"/><text x="3.1318%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (220 samples, 0.21%)</title><rect x="2.9530%" y="1109" width="0.2058%" height="15" fill="rgb(215,133,35)" fg:x="3156" fg:w="220"/><text x="3.2030%" y="1119.50"></text></g><g><title>core::mem::drop (220 samples, 0.21%)</title><rect x="2.9530%" y="1093" width="0.2058%" height="15" fill="rgb(213,28,5)" fg:x="3156" fg:w="220"/><text x="3.2030%" y="1103.50"></text></g><g><title>async_executor::Ticker::sleep (30 samples, 0.03%)</title><rect x="3.1813%" y="1125" width="0.0281%" height="15" fill="rgb(215,77,49)" fg:x="3400" fg:w="30"/><text x="3.4313%" y="1135.50"></text></g><g><title>async_executor::steal (87 samples, 0.08%)</title><rect x="3.2159%" y="1125" width="0.0814%" height="15" fill="rgb(248,100,22)" fg:x="3437" fg:w="87"/><text x="3.4659%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (35 samples, 0.03%)</title><rect x="3.2973%" y="1125" width="0.0327%" height="15" fill="rgb(208,67,9)" fg:x="3524" fg:w="35"/><text x="3.5473%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (41 samples, 0.04%)</title><rect x="3.3300%" y="1125" width="0.0384%" height="15" fill="rgb(219,133,21)" fg:x="3559" fg:w="41"/><text x="3.5800%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (22 samples, 0.02%)</title><rect x="3.3787%" y="1125" width="0.0206%" height="15" fill="rgb(246,46,29)" fg:x="3611" fg:w="22"/><text x="3.6287%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (104 samples, 0.10%)</title><rect x="3.3993%" y="1125" width="0.0973%" height="15" fill="rgb(246,185,52)" fg:x="3633" fg:w="104"/><text x="3.6493%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (106 samples, 0.10%)</title><rect x="3.4966%" y="1125" width="0.0992%" height="15" fill="rgb(252,136,11)" fg:x="3737" fg:w="106"/><text x="3.7466%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (23 samples, 0.02%)</title><rect x="3.5958%" y="1125" width="0.0215%" height="15" fill="rgb(219,138,53)" fg:x="3843" fg:w="23"/><text x="3.8458%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (16 samples, 0.01%)</title><rect x="3.6220%" y="1125" width="0.0150%" height="15" fill="rgb(211,51,23)" fg:x="3871" fg:w="16"/><text x="3.8720%" y="1135.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="3.6220%" y="1109" width="0.0150%" height="15" fill="rgb(247,221,28)" fg:x="3871" fg:w="16"/><text x="3.8720%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (51 samples, 0.05%)</title><rect x="3.6425%" y="1125" width="0.0477%" height="15" fill="rgb(251,222,45)" fg:x="3893" fg:w="51"/><text x="3.8925%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (37 samples, 0.03%)</title><rect x="3.6556%" y="1109" width="0.0346%" height="15" fill="rgb(217,162,53)" fg:x="3907" fg:w="37"/><text x="3.9056%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (59 samples, 0.06%)</title><rect x="3.6903%" y="1125" width="0.0552%" height="15" fill="rgb(229,93,14)" fg:x="3944" fg:w="59"/><text x="3.9403%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (30 samples, 0.03%)</title><rect x="3.7539%" y="1125" width="0.0281%" height="15" fill="rgb(209,67,49)" fg:x="4012" fg:w="30"/><text x="4.0039%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (20 samples, 0.02%)</title><rect x="3.7820%" y="1125" width="0.0187%" height="15" fill="rgb(213,87,29)" fg:x="4042" fg:w="20"/><text x="4.0320%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (11 samples, 0.01%)</title><rect x="3.8007%" y="1125" width="0.0103%" height="15" fill="rgb(205,151,52)" fg:x="4062" fg:w="11"/><text x="4.0507%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (11 samples, 0.01%)</title><rect x="3.8007%" y="1109" width="0.0103%" height="15" fill="rgb(253,215,39)" fg:x="4062" fg:w="11"/><text x="4.0507%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="3.8007%" y="1093" width="0.0103%" height="15" fill="rgb(221,220,41)" fg:x="4062" fg:w="11"/><text x="4.0507%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (11 samples, 0.01%)</title><rect x="3.8007%" y="1077" width="0.0103%" height="15" fill="rgb(218,133,21)" fg:x="4062" fg:w="11"/><text x="4.0507%" y="1087.50"></text></g><g><title>event_listener::Event::listen (13 samples, 0.01%)</title><rect x="3.8128%" y="1125" width="0.0122%" height="15" fill="rgb(221,193,43)" fg:x="4075" fg:w="13"/><text x="4.0628%" y="1135.50"></text></g><g><title>event_listener::Event::notify (213 samples, 0.20%)</title><rect x="3.8250%" y="1125" width="0.1993%" height="15" fill="rgb(240,128,52)" fg:x="4088" fg:w="213"/><text x="4.0750%" y="1135.50"></text></g><g><title>event_listener::full_fence (118 samples, 0.11%)</title><rect x="3.9139%" y="1109" width="0.1104%" height="15" fill="rgb(253,114,12)" fg:x="4183" fg:w="118"/><text x="4.1639%" y="1119.50"></text></g><g><title>event_listener::List::notify (34 samples, 0.03%)</title><rect x="4.0243%" y="1125" width="0.0318%" height="15" fill="rgb(215,223,47)" fg:x="4301" fg:w="34"/><text x="4.2743%" y="1135.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (33 samples, 0.03%)</title><rect x="4.0561%" y="1125" width="0.0309%" height="15" fill="rgb(248,225,23)" fg:x="4335" fg:w="33"/><text x="4.3061%" y="1135.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (11 samples, 0.01%)</title><rect x="4.0767%" y="1109" width="0.0103%" height="15" fill="rgb(250,108,0)" fg:x="4357" fg:w="11"/><text x="4.3267%" y="1119.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (11 samples, 0.01%)</title><rect x="4.0767%" y="1093" width="0.0103%" height="15" fill="rgb(228,208,7)" fg:x="4357" fg:w="11"/><text x="4.3267%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.01%)</title><rect x="4.0767%" y="1077" width="0.0103%" height="15" fill="rgb(244,45,10)" fg:x="4357" fg:w="11"/><text x="4.3267%" y="1087.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (11 samples, 0.01%)</title><rect x="4.0767%" y="1061" width="0.0103%" height="15" fill="rgb(207,125,25)" fg:x="4357" fg:w="11"/><text x="4.3267%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.01%)</title><rect x="4.0767%" y="1045" width="0.0103%" height="15" fill="rgb(210,195,18)" fg:x="4357" fg:w="11"/><text x="4.3267%" y="1055.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (11 samples, 0.01%)</title><rect x="4.0767%" y="1029" width="0.0103%" height="15" fill="rgb(249,80,12)" fg:x="4357" fg:w="11"/><text x="4.3267%" y="1039.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (11 samples, 0.01%)</title><rect x="4.0767%" y="1013" width="0.0103%" height="15" fill="rgb(221,65,9)" fg:x="4357" fg:w="11"/><text x="4.3267%" y="1023.50"></text></g><g><title>parking::Inner::park (38 samples, 0.04%)</title><rect x="4.0926%" y="1125" width="0.0356%" height="15" fill="rgb(235,49,36)" fg:x="4374" fg:w="38"/><text x="4.3426%" y="1135.50"></text></g><g><title>parking::Unparker::unpark (13 samples, 0.01%)</title><rect x="4.1281%" y="1125" width="0.0122%" height="15" fill="rgb(225,32,20)" fg:x="4412" fg:w="13"/><text x="4.3781%" y="1135.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="4.1525%" y="1125" width="0.0159%" height="15" fill="rgb(215,141,46)" fg:x="4438" fg:w="17"/><text x="4.4025%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (41 samples, 0.04%)</title><rect x="4.1965%" y="1125" width="0.0384%" height="15" fill="rgb(250,160,47)" fg:x="4485" fg:w="41"/><text x="4.4465%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (50 samples, 0.05%)</title><rect x="4.2348%" y="1125" width="0.0468%" height="15" fill="rgb(216,222,40)" fg:x="4526" fg:w="50"/><text x="4.4848%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28 samples, 0.03%)</title><rect x="4.2816%" y="1125" width="0.0262%" height="15" fill="rgb(234,217,39)" fg:x="4576" fg:w="28"/><text x="4.5316%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.01%)</title><rect x="4.2966%" y="1109" width="0.0112%" height="15" fill="rgb(207,178,40)" fg:x="4592" fg:w="12"/><text x="4.5466%" y="1119.50"></text></g><g><title>tremor_common::time::nanotime (45 samples, 0.04%)</title><rect x="4.3078%" y="1125" width="0.0421%" height="15" fill="rgb(221,136,13)" fg:x="4604" fg:w="45"/><text x="4.5578%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (45 samples, 0.04%)</title><rect x="4.3078%" y="1109" width="0.0421%" height="15" fill="rgb(249,199,10)" fg:x="4604" fg:w="45"/><text x="4.5578%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (45 samples, 0.04%)</title><rect x="4.3078%" y="1093" width="0.0421%" height="15" fill="rgb(249,222,13)" fg:x="4604" fg:w="45"/><text x="4.5578%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (45 samples, 0.04%)</title><rect x="4.3078%" y="1077" width="0.0421%" height="15" fill="rgb(244,185,38)" fg:x="4604" fg:w="45"/><text x="4.5578%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (56 samples, 0.05%)</title><rect x="4.3565%" y="1125" width="0.0524%" height="15" fill="rgb(236,202,9)" fg:x="4656" fg:w="56"/><text x="4.6065%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (21 samples, 0.02%)</title><rect x="4.3892%" y="1109" width="0.0196%" height="15" fill="rgb(250,229,37)" fg:x="4691" fg:w="21"/><text x="4.6392%" y="1119.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (21 samples, 0.02%)</title><rect x="4.3892%" y="1093" width="0.0196%" height="15" fill="rgb(206,174,23)" fg:x="4691" fg:w="21"/><text x="4.6392%" y="1103.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="4.3892%" y="1077" width="0.0196%" height="15" fill="rgb(211,33,43)" fg:x="4691" fg:w="21"/><text x="4.6392%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="4.3892%" y="1061" width="0.0196%" height="15" fill="rgb(245,58,50)" fg:x="4691" fg:w="21"/><text x="4.6392%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="4.3892%" y="1045" width="0.0196%" height="15" fill="rgb(244,68,36)" fg:x="4691" fg:w="21"/><text x="4.6392%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="4.3948%" y="1029" width="0.0140%" height="15" fill="rgb(232,229,15)" fg:x="4697" fg:w="15"/><text x="4.6448%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="4.3948%" y="1013" width="0.0140%" height="15" fill="rgb(254,30,23)" fg:x="4697" fg:w="15"/><text x="4.6448%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="4.3948%" y="997" width="0.0140%" height="15" fill="rgb(235,160,14)" fg:x="4697" fg:w="15"/><text x="4.6448%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="4.3948%" y="981" width="0.0140%" height="15" fill="rgb(212,155,44)" fg:x="4697" fg:w="15"/><text x="4.6448%" y="991.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="4.3948%" y="965" width="0.0140%" height="15" fill="rgb(226,2,50)" fg:x="4697" fg:w="15"/><text x="4.6448%" y="975.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="4.3948%" y="949" width="0.0140%" height="15" fill="rgb(234,177,6)" fg:x="4697" fg:w="15"/><text x="4.6448%" y="959.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="4.4622%" y="1109" width="0.0131%" height="15" fill="rgb(217,24,9)" fg:x="4769" fg:w="14"/><text x="4.7122%" y="1119.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="4.4800%" y="1077" width="0.0159%" height="15" fill="rgb(220,13,46)" fg:x="4788" fg:w="17"/><text x="4.7300%" y="1087.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="4.4800%" y="1061" width="0.0159%" height="15" fill="rgb(239,221,27)" fg:x="4788" fg:w="17"/><text x="4.7300%" y="1071.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (17 samples, 0.02%)</title><rect x="4.4800%" y="1045" width="0.0159%" height="15" fill="rgb(222,198,25)" fg:x="4788" fg:w="17"/><text x="4.7300%" y="1055.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (17 samples, 0.02%)</title><rect x="4.4800%" y="1029" width="0.0159%" height="15" fill="rgb(211,99,13)" fg:x="4788" fg:w="17"/><text x="4.7300%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="4.4753%" y="1109" width="0.0271%" height="15" fill="rgb(232,111,31)" fg:x="4783" fg:w="29"/><text x="4.7253%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (29 samples, 0.03%)</title><rect x="4.4753%" y="1093" width="0.0271%" height="15" fill="rgb(245,82,37)" fg:x="4783" fg:w="29"/><text x="4.7253%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (11 samples, 0.01%)</title><rect x="4.5062%" y="1109" width="0.0103%" height="15" fill="rgb(227,149,46)" fg:x="4816" fg:w="11"/><text x="4.7562%" y="1119.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="4.5062%" y="1093" width="0.0103%" height="15" fill="rgb(218,36,50)" fg:x="4816" fg:w="11"/><text x="4.7562%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (11 samples, 0.01%)</title><rect x="4.5062%" y="1077" width="0.0103%" height="15" fill="rgb(226,80,48)" fg:x="4816" fg:w="11"/><text x="4.7562%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="4.5062%" y="1061" width="0.0103%" height="15" fill="rgb(238,224,15)" fg:x="4816" fg:w="11"/><text x="4.7562%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="4.5062%" y="1045" width="0.0103%" height="15" fill="rgb(241,136,10)" fg:x="4816" fg:w="11"/><text x="4.7562%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="4.5062%" y="1029" width="0.0103%" height="15" fill="rgb(208,32,45)" fg:x="4816" fg:w="11"/><text x="4.7562%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="4.5062%" y="1013" width="0.0103%" height="15" fill="rgb(207,135,9)" fg:x="4816" fg:w="11"/><text x="4.7562%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="4.5062%" y="997" width="0.0103%" height="15" fill="rgb(206,86,44)" fg:x="4816" fg:w="11"/><text x="4.7562%" y="1007.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="4.5062%" y="981" width="0.0103%" height="15" fill="rgb(245,177,15)" fg:x="4816" fg:w="11"/><text x="4.7562%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="4.5062%" y="965" width="0.0103%" height="15" fill="rgb(206,64,50)" fg:x="4816" fg:w="11"/><text x="4.7562%" y="975.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (148 samples, 0.14%)</title><rect x="4.4088%" y="1125" width="0.1385%" height="15" fill="rgb(234,36,40)" fg:x="4712" fg:w="148"/><text x="4.6588%" y="1135.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (33 samples, 0.03%)</title><rect x="4.5164%" y="1109" width="0.0309%" height="15" fill="rgb(213,64,8)" fg:x="4827" fg:w="33"/><text x="4.7664%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (22 samples, 0.02%)</title><rect x="4.5267%" y="1093" width="0.0206%" height="15" fill="rgb(210,75,36)" fg:x="4838" fg:w="22"/><text x="4.7767%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="4.5267%" y="1077" width="0.0206%" height="15" fill="rgb(229,88,21)" fg:x="4838" fg:w="22"/><text x="4.7767%" y="1087.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="4.5267%" y="1061" width="0.0206%" height="15" fill="rgb(252,204,47)" fg:x="4838" fg:w="22"/><text x="4.7767%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (28 samples, 0.03%)</title><rect x="4.5473%" y="1125" width="0.0262%" height="15" fill="rgb(208,77,27)" fg:x="4860" fg:w="28"/><text x="4.7973%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (60 samples, 0.06%)</title><rect x="4.5735%" y="1125" width="0.0561%" height="15" fill="rgb(221,76,26)" fg:x="4888" fg:w="60"/><text x="4.8235%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="4.7073%" y="981" width="0.0131%" height="15" fill="rgb(225,139,18)" fg:x="5031" fg:w="14"/><text x="4.9573%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="4.7073%" y="965" width="0.0131%" height="15" fill="rgb(230,137,11)" fg:x="5031" fg:w="14"/><text x="4.9573%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="4.7073%" y="949" width="0.0131%" height="15" fill="rgb(212,28,1)" fg:x="5031" fg:w="14"/><text x="4.9573%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="4.7073%" y="933" width="0.0131%" height="15" fill="rgb(248,164,17)" fg:x="5031" fg:w="14"/><text x="4.9573%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="4.7073%" y="917" width="0.0131%" height="15" fill="rgb(222,171,42)" fg:x="5031" fg:w="14"/><text x="4.9573%" y="927.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="4.7073%" y="901" width="0.0131%" height="15" fill="rgb(243,84,45)" fg:x="5031" fg:w="14"/><text x="4.9573%" y="911.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="4.7073%" y="885" width="0.0131%" height="15" fill="rgb(252,49,23)" fg:x="5031" fg:w="14"/><text x="4.9573%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="4.7073%" y="869" width="0.0131%" height="15" fill="rgb(215,19,7)" fg:x="5031" fg:w="14"/><text x="4.9573%" y="879.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="4.6989%" y="1109" width="0.0365%" height="15" fill="rgb(238,81,41)" fg:x="5022" fg:w="39"/><text x="4.9489%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="4.7073%" y="1093" width="0.0281%" height="15" fill="rgb(210,199,37)" fg:x="5031" fg:w="30"/><text x="4.9573%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (30 samples, 0.03%)</title><rect x="4.7073%" y="1077" width="0.0281%" height="15" fill="rgb(244,192,49)" fg:x="5031" fg:w="30"/><text x="4.9573%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (30 samples, 0.03%)</title><rect x="4.7073%" y="1061" width="0.0281%" height="15" fill="rgb(226,211,11)" fg:x="5031" fg:w="30"/><text x="4.9573%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (30 samples, 0.03%)</title><rect x="4.7073%" y="1045" width="0.0281%" height="15" fill="rgb(236,162,54)" fg:x="5031" fg:w="30"/><text x="4.9573%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30 samples, 0.03%)</title><rect x="4.7073%" y="1029" width="0.0281%" height="15" fill="rgb(220,229,9)" fg:x="5031" fg:w="30"/><text x="4.9573%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.03%)</title><rect x="4.7073%" y="1013" width="0.0281%" height="15" fill="rgb(250,87,22)" fg:x="5031" fg:w="30"/><text x="4.9573%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 0.03%)</title><rect x="4.7073%" y="997" width="0.0281%" height="15" fill="rgb(239,43,17)" fg:x="5031" fg:w="30"/><text x="4.9573%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (16 samples, 0.01%)</title><rect x="4.7204%" y="981" width="0.0150%" height="15" fill="rgb(231,177,25)" fg:x="5045" fg:w="16"/><text x="4.9704%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="4.7204%" y="965" width="0.0150%" height="15" fill="rgb(219,179,1)" fg:x="5045" fg:w="16"/><text x="4.9704%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (11 samples, 0.01%)</title><rect x="4.7541%" y="1093" width="0.0103%" height="15" fill="rgb(238,219,53)" fg:x="5081" fg:w="11"/><text x="5.0041%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="4.7541%" y="1077" width="0.0103%" height="15" fill="rgb(232,167,36)" fg:x="5081" fg:w="11"/><text x="5.0041%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (11 samples, 0.01%)</title><rect x="4.7541%" y="1061" width="0.0103%" height="15" fill="rgb(244,19,51)" fg:x="5081" fg:w="11"/><text x="5.0041%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (162 samples, 0.15%)</title><rect x="4.6297%" y="1125" width="0.1516%" height="15" fill="rgb(224,6,22)" fg:x="4948" fg:w="162"/><text x="4.8797%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (29 samples, 0.03%)</title><rect x="4.7541%" y="1109" width="0.0271%" height="15" fill="rgb(224,145,5)" fg:x="5081" fg:w="29"/><text x="5.0041%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (18 samples, 0.02%)</title><rect x="4.7644%" y="1093" width="0.0168%" height="15" fill="rgb(234,130,49)" fg:x="5092" fg:w="18"/><text x="5.0144%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (18 samples, 0.02%)</title><rect x="4.7644%" y="1077" width="0.0168%" height="15" fill="rgb(254,6,2)" fg:x="5092" fg:w="18"/><text x="5.0144%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (26 samples, 0.02%)</title><rect x="4.7812%" y="1125" width="0.0243%" height="15" fill="rgb(208,96,46)" fg:x="5110" fg:w="26"/><text x="5.0312%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="4.8692%" y="1109" width="0.0103%" height="15" fill="rgb(239,3,39)" fg:x="5204" fg:w="11"/><text x="5.1192%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.02%)</title><rect x="4.9001%" y="1077" width="0.0234%" height="15" fill="rgb(233,210,1)" fg:x="5237" fg:w="25"/><text x="5.1501%" y="1087.50"></text></g><g><title>core::ptr::write (25 samples, 0.02%)</title><rect x="4.9001%" y="1061" width="0.0234%" height="15" fill="rgb(244,137,37)" fg:x="5237" fg:w="25"/><text x="5.1501%" y="1071.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (137 samples, 0.13%)</title><rect x="4.8102%" y="1125" width="0.1282%" height="15" fill="rgb(240,136,2)" fg:x="5141" fg:w="137"/><text x="5.0602%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 0.06%)</title><rect x="4.8795%" y="1109" width="0.0589%" height="15" fill="rgb(239,18,37)" fg:x="5215" fg:w="63"/><text x="5.1295%" y="1119.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (63 samples, 0.06%)</title><rect x="4.8795%" y="1093" width="0.0589%" height="15" fill="rgb(218,185,22)" fg:x="5215" fg:w="63"/><text x="5.1295%" y="1103.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (13 samples, 0.01%)</title><rect x="4.9263%" y="1077" width="0.0122%" height="15" fill="rgb(225,218,4)" fg:x="5265" fg:w="13"/><text x="5.1763%" y="1087.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (13 samples, 0.01%)</title><rect x="4.9263%" y="1061" width="0.0122%" height="15" fill="rgb(230,182,32)" fg:x="5265" fg:w="13"/><text x="5.1763%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="4.9263%" y="1045" width="0.0122%" height="15" fill="rgb(242,56,43)" fg:x="5265" fg:w="13"/><text x="5.1763%" y="1055.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="4.9263%" y="1029" width="0.0122%" height="15" fill="rgb(233,99,24)" fg:x="5265" fg:w="13"/><text x="5.1763%" y="1039.50"></text></g><g><title>[anon] (4,653 samples, 4.35%)</title><rect x="0.6101%" y="1141" width="4.3536%" height="15" fill="rgb(234,209,42)" fg:x="652" fg:w="4653"/><text x="0.8601%" y="1151.50">[anon]</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (18 samples, 0.02%)</title><rect x="4.9469%" y="1125" width="0.0168%" height="15" fill="rgb(227,7,12)" fg:x="5287" fg:w="18"/><text x="5.1969%" y="1135.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="4.9637%" y="1141" width="0.0131%" height="15" fill="rgb(245,203,43)" fg:x="5305" fg:w="14"/><text x="5.2137%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="4.9768%" y="1125" width="0.0281%" height="15" fill="rgb(238,205,33)" fg:x="5319" fg:w="30"/><text x="5.2268%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.01%)</title><rect x="4.9918%" y="1109" width="0.0131%" height="15" fill="rgb(231,56,7)" fg:x="5335" fg:w="14"/><text x="5.2418%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="4.9918%" y="1093" width="0.0131%" height="15" fill="rgb(244,186,29)" fg:x="5335" fg:w="14"/><text x="5.2418%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="5.0105%" y="1125" width="0.0122%" height="15" fill="rgb(234,111,31)" fg:x="5355" fg:w="13"/><text x="5.2605%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.07%)</title><rect x="5.0320%" y="1125" width="0.0711%" height="15" fill="rgb(241,149,10)" fg:x="5378" fg:w="76"/><text x="5.2820%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (86 samples, 0.08%)</title><rect x="5.1031%" y="1125" width="0.0805%" height="15" fill="rgb(249,206,44)" fg:x="5454" fg:w="86"/><text x="5.3531%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (28 samples, 0.03%)</title><rect x="5.1574%" y="1109" width="0.0262%" height="15" fill="rgb(251,153,30)" fg:x="5512" fg:w="28"/><text x="5.4074%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.02%)</title><rect x="5.1836%" y="1125" width="0.0215%" height="15" fill="rgb(239,152,38)" fg:x="5540" fg:w="23"/><text x="5.4336%" y="1135.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="5.2051%" y="1125" width="0.0112%" height="15" fill="rgb(249,139,47)" fg:x="5563" fg:w="12"/><text x="5.4551%" y="1135.50"></text></g><g><title>__clock_gettime_2 (12 samples, 0.01%)</title><rect x="5.2163%" y="1125" width="0.0112%" height="15" fill="rgb(244,64,35)" fg:x="5575" fg:w="12"/><text x="5.4663%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="5.2276%" y="1125" width="0.0103%" height="15" fill="rgb(216,46,15)" fg:x="5587" fg:w="11"/><text x="5.4776%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (108 samples, 0.10%)</title><rect x="5.2397%" y="1125" width="0.1011%" height="15" fill="rgb(250,74,19)" fg:x="5600" fg:w="108"/><text x="5.4897%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (97 samples, 0.09%)</title><rect x="5.2500%" y="1109" width="0.0908%" height="15" fill="rgb(249,42,33)" fg:x="5611" fg:w="97"/><text x="5.5000%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (97 samples, 0.09%)</title><rect x="5.2500%" y="1093" width="0.0908%" height="15" fill="rgb(242,149,17)" fg:x="5611" fg:w="97"/><text x="5.5000%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (97 samples, 0.09%)</title><rect x="5.2500%" y="1077" width="0.0908%" height="15" fill="rgb(244,29,21)" fg:x="5611" fg:w="97"/><text x="5.5000%" y="1087.50"></text></g><g><title>abi_stable::erased_types::iterator::next (19 samples, 0.02%)</title><rect x="5.3408%" y="1125" width="0.0178%" height="15" fill="rgb(220,130,37)" fg:x="5708" fg:w="19"/><text x="5.5908%" y="1135.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (13 samples, 0.01%)</title><rect x="5.3585%" y="1125" width="0.0122%" height="15" fill="rgb(211,67,2)" fg:x="5727" fg:w="13"/><text x="5.6085%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (38 samples, 0.04%)</title><rect x="5.3866%" y="1109" width="0.0356%" height="15" fill="rgb(235,68,52)" fg:x="5757" fg:w="38"/><text x="5.6366%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (38 samples, 0.04%)</title><rect x="5.3866%" y="1093" width="0.0356%" height="15" fill="rgb(246,142,3)" fg:x="5757" fg:w="38"/><text x="5.6366%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (38 samples, 0.04%)</title><rect x="5.3866%" y="1077" width="0.0356%" height="15" fill="rgb(241,25,7)" fg:x="5757" fg:w="38"/><text x="5.6366%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (52 samples, 0.05%)</title><rect x="5.4222%" y="1109" width="0.0487%" height="15" fill="rgb(242,119,39)" fg:x="5795" fg:w="52"/><text x="5.6722%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (52 samples, 0.05%)</title><rect x="5.4222%" y="1093" width="0.0487%" height="15" fill="rgb(241,98,45)" fg:x="5795" fg:w="52"/><text x="5.6722%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52 samples, 0.05%)</title><rect x="5.4222%" y="1077" width="0.0487%" height="15" fill="rgb(254,28,30)" fg:x="5795" fg:w="52"/><text x="5.6722%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (52 samples, 0.05%)</title><rect x="5.4222%" y="1061" width="0.0487%" height="15" fill="rgb(241,142,54)" fg:x="5795" fg:w="52"/><text x="5.6722%" y="1071.50"></text></g><g><title>__rg_dealloc (52 samples, 0.05%)</title><rect x="5.4222%" y="1045" width="0.0487%" height="15" fill="rgb(222,85,15)" fg:x="5795" fg:w="52"/><text x="5.6722%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (52 samples, 0.05%)</title><rect x="5.4222%" y="1029" width="0.0487%" height="15" fill="rgb(210,85,47)" fg:x="5795" fg:w="52"/><text x="5.6722%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (120 samples, 0.11%)</title><rect x="5.3726%" y="1125" width="0.1123%" height="15" fill="rgb(224,206,25)" fg:x="5742" fg:w="120"/><text x="5.6226%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (28 samples, 0.03%)</title><rect x="5.4849%" y="1125" width="0.0262%" height="15" fill="rgb(243,201,19)" fg:x="5862" fg:w="28"/><text x="5.7349%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (20 samples, 0.02%)</title><rect x="5.5176%" y="1125" width="0.0187%" height="15" fill="rgb(236,59,4)" fg:x="5897" fg:w="20"/><text x="5.7676%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="5.5363%" y="1125" width="0.0178%" height="15" fill="rgb(254,179,45)" fg:x="5917" fg:w="19"/><text x="5.7863%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (19 samples, 0.02%)</title><rect x="5.5363%" y="1109" width="0.0178%" height="15" fill="rgb(226,14,10)" fg:x="5917" fg:w="19"/><text x="5.7863%" y="1119.50"></text></g><g><title>event_listener::Event::notify (25 samples, 0.02%)</title><rect x="5.5635%" y="1125" width="0.0234%" height="15" fill="rgb(244,27,41)" fg:x="5946" fg:w="25"/><text x="5.8135%" y="1135.50"></text></g><g><title>event_listener::full_fence (12 samples, 0.01%)</title><rect x="5.5756%" y="1109" width="0.0112%" height="15" fill="rgb(235,35,32)" fg:x="5959" fg:w="12"/><text x="5.8256%" y="1119.50"></text></g><g><title>rust_alloc (54 samples, 0.05%)</title><rect x="5.5868%" y="1125" width="0.0505%" height="15" fill="rgb(218,68,31)" fg:x="5971" fg:w="54"/><text x="5.8368%" y="1135.50"></text></g><g><title>[tremor-pdk-singlevalue-final] (739 samples, 0.69%)</title><rect x="4.9768%" y="1141" width="0.6915%" height="15" fill="rgb(207,120,37)" fg:x="5319" fg:w="739"/><text x="5.2268%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="5.6683%" y="1125" width="0.0589%" height="15" fill="rgb(227,98,0)" fg:x="6058" fg:w="63"/><text x="5.9183%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (22 samples, 0.02%)</title><rect x="5.7272%" y="1125" width="0.0206%" height="15" fill="rgb(207,7,3)" fg:x="6121" fg:w="22"/><text x="5.9772%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="5.7497%" y="1125" width="0.0187%" height="15" fill="rgb(206,98,19)" fg:x="6145" fg:w="20"/><text x="5.9997%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (20 samples, 0.02%)</title><rect x="5.7497%" y="1109" width="0.0187%" height="15" fill="rgb(217,5,26)" fg:x="6145" fg:w="20"/><text x="5.9997%" y="1119.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="5.7497%" y="1093" width="0.0187%" height="15" fill="rgb(235,190,38)" fg:x="6145" fg:w="20"/><text x="5.9997%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (20 samples, 0.02%)</title><rect x="5.7497%" y="1077" width="0.0187%" height="15" fill="rgb(247,86,24)" fg:x="6145" fg:w="20"/><text x="5.9997%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="5.7497%" y="1061" width="0.0187%" height="15" fill="rgb(205,101,16)" fg:x="6145" fg:w="20"/><text x="5.9997%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="5.7497%" y="1045" width="0.0187%" height="15" fill="rgb(246,168,33)" fg:x="6145" fg:w="20"/><text x="5.9997%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="5.7497%" y="1029" width="0.0187%" height="15" fill="rgb(231,114,1)" fg:x="6145" fg:w="20"/><text x="5.9997%" y="1039.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="5.7497%" y="1013" width="0.0187%" height="15" fill="rgb(207,184,53)" fg:x="6145" fg:w="20"/><text x="5.9997%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="5.7497%" y="997" width="0.0187%" height="15" fill="rgb(224,95,51)" fg:x="6145" fg:w="20"/><text x="5.9997%" y="1007.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (110 samples, 0.10%)</title><rect x="5.7684%" y="1125" width="0.1029%" height="15" fill="rgb(212,188,45)" fg:x="6165" fg:w="110"/><text x="6.0184%" y="1135.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="5.8713%" y="1125" width="0.0187%" height="15" fill="rgb(223,154,38)" fg:x="6275" fg:w="20"/><text x="6.1213%" y="1135.50"></text></g><g><title>snmalloc::FreeListIter::empty (11 samples, 0.01%)</title><rect x="6.2081%" y="437" width="0.0103%" height="15" fill="rgb(251,22,52)" fg:x="6635" fg:w="11"/><text x="6.4581%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (11 samples, 0.01%)</title><rect x="6.2081%" y="421" width="0.0103%" height="15" fill="rgb(229,209,22)" fg:x="6635" fg:w="11"/><text x="6.4581%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (265 samples, 0.25%)</title><rect x="6.1875%" y="485" width="0.2480%" height="15" fill="rgb(234,138,34)" fg:x="6613" fg:w="265"/><text x="6.4375%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (265 samples, 0.25%)</title><rect x="6.1875%" y="469" width="0.2480%" height="15" fill="rgb(212,95,11)" fg:x="6613" fg:w="265"/><text x="6.4375%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (255 samples, 0.24%)</title><rect x="6.1969%" y="453" width="0.2386%" height="15" fill="rgb(240,179,47)" fg:x="6623" fg:w="255"/><text x="6.4469%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (232 samples, 0.22%)</title><rect x="6.2184%" y="437" width="0.2171%" height="15" fill="rgb(240,163,11)" fg:x="6646" fg:w="232"/><text x="6.4684%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (232 samples, 0.22%)</title><rect x="6.2184%" y="421" width="0.2171%" height="15" fill="rgb(236,37,12)" fg:x="6646" fg:w="232"/><text x="6.4684%" y="431.50"></text></g><g><title>alloc::alloc::exchange_malloc (279 samples, 0.26%)</title><rect x="6.1782%" y="597" width="0.2611%" height="15" fill="rgb(232,164,16)" fg:x="6603" fg:w="279"/><text x="6.4282%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (279 samples, 0.26%)</title><rect x="6.1782%" y="581" width="0.2611%" height="15" fill="rgb(244,205,15)" fg:x="6603" fg:w="279"/><text x="6.4282%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (279 samples, 0.26%)</title><rect x="6.1782%" y="565" width="0.2611%" height="15" fill="rgb(223,117,47)" fg:x="6603" fg:w="279"/><text x="6.4282%" y="575.50"></text></g><g><title>alloc::alloc::alloc (277 samples, 0.26%)</title><rect x="6.1801%" y="549" width="0.2592%" height="15" fill="rgb(244,107,35)" fg:x="6605" fg:w="277"/><text x="6.4301%" y="559.50"></text></g><g><title>__rg_alloc (277 samples, 0.26%)</title><rect x="6.1801%" y="533" width="0.2592%" height="15" fill="rgb(205,140,8)" fg:x="6605" fg:w="277"/><text x="6.4301%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (277 samples, 0.26%)</title><rect x="6.1801%" y="517" width="0.2592%" height="15" fill="rgb(228,84,46)" fg:x="6605" fg:w="277"/><text x="6.4301%" y="527.50"></text></g><g><title>rust_alloc (276 samples, 0.26%)</title><rect x="6.1810%" y="501" width="0.2582%" height="15" fill="rgb(254,188,9)" fg:x="6606" fg:w="276"/><text x="6.4310%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="6.4449%" y="597" width="0.0112%" height="15" fill="rgb(206,112,54)" fg:x="6888" fg:w="12"/><text x="6.6949%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="6.4561%" y="597" width="0.0140%" height="15" fill="rgb(216,84,49)" fg:x="6900" fg:w="15"/><text x="6.7061%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="6.4561%" y="581" width="0.0140%" height="15" fill="rgb(214,194,35)" fg:x="6900" fg:w="15"/><text x="6.7061%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="6.4561%" y="565" width="0.0140%" height="15" fill="rgb(249,28,3)" fg:x="6900" fg:w="15"/><text x="6.7061%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="6.4580%" y="549" width="0.0122%" height="15" fill="rgb(222,56,52)" fg:x="6902" fg:w="13"/><text x="6.7080%" y="559.50"></text></g><g><title>core::time::Duration::as_nanos (11 samples, 0.01%)</title><rect x="6.5010%" y="581" width="0.0103%" height="15" fill="rgb(245,217,50)" fg:x="6948" fg:w="11"/><text x="6.7510%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (53 samples, 0.05%)</title><rect x="6.5506%" y="533" width="0.0496%" height="15" fill="rgb(213,201,24)" fg:x="7001" fg:w="53"/><text x="6.8006%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::ge (53 samples, 0.05%)</title><rect x="6.5506%" y="517" width="0.0496%" height="15" fill="rgb(248,116,28)" fg:x="7001" fg:w="53"/><text x="6.8006%" y="527.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (51 samples, 0.05%)</title><rect x="6.5525%" y="501" width="0.0477%" height="15" fill="rgb(219,72,43)" fg:x="7003" fg:w="51"/><text x="6.8025%" y="511.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (51 samples, 0.05%)</title><rect x="6.5525%" y="485" width="0.0477%" height="15" fill="rgb(209,138,14)" fg:x="7003" fg:w="51"/><text x="6.8025%" y="495.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (51 samples, 0.05%)</title><rect x="6.5525%" y="469" width="0.0477%" height="15" fill="rgb(222,18,33)" fg:x="7003" fg:w="51"/><text x="6.8025%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (30 samples, 0.03%)</title><rect x="6.5721%" y="453" width="0.0281%" height="15" fill="rgb(213,199,7)" fg:x="7024" fg:w="30"/><text x="6.8221%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (107 samples, 0.10%)</title><rect x="6.5113%" y="565" width="0.1001%" height="15" fill="rgb(250,110,10)" fg:x="6959" fg:w="107"/><text x="6.7613%" y="575.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (107 samples, 0.10%)</title><rect x="6.5113%" y="549" width="0.1001%" height="15" fill="rgb(248,123,6)" fg:x="6959" fg:w="107"/><text x="6.7613%" y="559.50"></text></g><g><title>core::time::Duration::new (12 samples, 0.01%)</title><rect x="6.6002%" y="533" width="0.0112%" height="15" fill="rgb(206,91,31)" fg:x="7054" fg:w="12"/><text x="6.8502%" y="543.50"></text></g><g><title>std::time::SystemTime::duration_since (114 samples, 0.11%)</title><rect x="6.5113%" y="581" width="0.1067%" height="15" fill="rgb(211,154,13)" fg:x="6959" fg:w="114"/><text x="6.7613%" y="591.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (1,168 samples, 1.09%)</title><rect x="6.0098%" y="981" width="1.0929%" height="15" fill="rgb(225,148,7)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,168 samples, 1.09%)</title><rect x="6.0098%" y="965" width="1.0929%" height="15" fill="rgb(220,160,43)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="975.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,168 samples, 1.09%)</title><rect x="6.0098%" y="949" width="1.0929%" height="15" fill="rgb(213,52,39)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="959.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,168 samples, 1.09%)</title><rect x="6.0098%" y="933" width="1.0929%" height="15" fill="rgb(243,137,7)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,168 samples, 1.09%)</title><rect x="6.0098%" y="917" width="1.0929%" height="15" fill="rgb(230,79,13)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="927.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,168 samples, 1.09%)</title><rect x="6.0098%" y="901" width="1.0929%" height="15" fill="rgb(247,105,23)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,168 samples, 1.09%)</title><rect x="6.0098%" y="885" width="1.0929%" height="15" fill="rgb(223,179,41)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="895.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,168 samples, 1.09%)</title><rect x="6.0098%" y="869" width="1.0929%" height="15" fill="rgb(218,9,34)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="879.50"></text></g><g><title>std::panic::catch_unwind (1,168 samples, 1.09%)</title><rect x="6.0098%" y="853" width="1.0929%" height="15" fill="rgb(222,106,8)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="863.50"></text></g><g><title>std::panicking::try (1,168 samples, 1.09%)</title><rect x="6.0098%" y="837" width="1.0929%" height="15" fill="rgb(211,220,0)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="847.50"></text></g><g><title>std::panicking::try::do_call (1,168 samples, 1.09%)</title><rect x="6.0098%" y="821" width="1.0929%" height="15" fill="rgb(229,52,16)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,168 samples, 1.09%)</title><rect x="6.0098%" y="805" width="1.0929%" height="15" fill="rgb(212,155,18)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,168 samples, 1.09%)</title><rect x="6.0098%" y="789" width="1.0929%" height="15" fill="rgb(242,21,14)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,168 samples, 1.09%)</title><rect x="6.0098%" y="773" width="1.0929%" height="15" fill="rgb(222,19,48)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="783.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,168 samples, 1.09%)</title><rect x="6.0098%" y="757" width="1.0929%" height="15" fill="rgb(232,45,27)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,168 samples, 1.09%)</title><rect x="6.0098%" y="741" width="1.0929%" height="15" fill="rgb(249,103,42)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,168 samples, 1.09%)</title><rect x="6.0098%" y="725" width="1.0929%" height="15" fill="rgb(246,81,33)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,168 samples, 1.09%)</title><rect x="6.0098%" y="709" width="1.0929%" height="15" fill="rgb(252,33,42)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="719.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,168 samples, 1.09%)</title><rect x="6.0098%" y="693" width="1.0929%" height="15" fill="rgb(209,212,41)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,168 samples, 1.09%)</title><rect x="6.0098%" y="677" width="1.0929%" height="15" fill="rgb(207,154,6)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="687.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,168 samples, 1.09%)</title><rect x="6.0098%" y="661" width="1.0929%" height="15" fill="rgb(223,64,47)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,168 samples, 1.09%)</title><rect x="6.0098%" y="645" width="1.0929%" height="15" fill="rgb(211,161,38)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="655.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,168 samples, 1.09%)</title><rect x="6.0098%" y="629" width="1.0929%" height="15" fill="rgb(219,138,40)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="639.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,168 samples, 1.09%)</title><rect x="6.0098%" y="613" width="1.0929%" height="15" fill="rgb(241,228,46)" fg:x="6423" fg:w="1168"/><text x="6.2598%" y="623.50"></text></g><g><title>tremor_common::time::nanotime (671 samples, 0.63%)</title><rect x="6.4748%" y="597" width="0.6278%" height="15" fill="rgb(223,209,38)" fg:x="6920" fg:w="671"/><text x="6.7248%" y="607.50"></text></g><g><title>std::time::SystemTime::now (518 samples, 0.48%)</title><rect x="6.6179%" y="581" width="0.4847%" height="15" fill="rgb(236,164,45)" fg:x="7073" fg:w="518"/><text x="6.8679%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (518 samples, 0.48%)</title><rect x="6.6179%" y="565" width="0.4847%" height="15" fill="rgb(231,15,5)" fg:x="7073" fg:w="518"/><text x="6.8679%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::now (518 samples, 0.48%)</title><rect x="6.6179%" y="549" width="0.4847%" height="15" fill="rgb(252,35,15)" fg:x="7073" fg:w="518"/><text x="6.8679%" y="559.50"></text></g><g><title>__clock_gettime_2 (421 samples, 0.39%)</title><rect x="6.7087%" y="533" width="0.3939%" height="15" fill="rgb(248,181,18)" fg:x="7170" fg:w="421"/><text x="6.9587%" y="543.50"></text></g><g><title>__vdso_clock_gettime (407 samples, 0.38%)</title><rect x="6.7218%" y="517" width="0.3808%" height="15" fill="rgb(233,39,42)" fg:x="7184" fg:w="407"/><text x="6.9718%" y="527.50"></text></g><g><title>[[vdso]] (281 samples, 0.26%)</title><rect x="6.8397%" y="501" width="0.2629%" height="15" fill="rgb(238,110,33)" fg:x="7310" fg:w="281"/><text x="7.0897%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (91 samples, 0.09%)</title><rect x="7.1167%" y="885" width="0.0851%" height="15" fill="rgb(233,195,10)" fg:x="7606" fg:w="91"/><text x="7.3667%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (388 samples, 0.36%)</title><rect x="7.4788%" y="805" width="0.3630%" height="15" fill="rgb(254,105,3)" fg:x="7993" fg:w="388"/><text x="7.7288%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (388 samples, 0.36%)</title><rect x="7.4788%" y="789" width="0.3630%" height="15" fill="rgb(221,225,9)" fg:x="7993" fg:w="388"/><text x="7.7288%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (339 samples, 0.32%)</title><rect x="7.8418%" y="805" width="0.3172%" height="15" fill="rgb(224,227,45)" fg:x="8381" fg:w="339"/><text x="8.0918%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (334 samples, 0.31%)</title><rect x="7.8465%" y="789" width="0.3125%" height="15" fill="rgb(229,198,43)" fg:x="8386" fg:w="334"/><text x="8.0965%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (893 samples, 0.84%)</title><rect x="7.3309%" y="837" width="0.8355%" height="15" fill="rgb(206,209,35)" fg:x="7835" fg:w="893"/><text x="7.5809%" y="847.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (826 samples, 0.77%)</title><rect x="7.3936%" y="821" width="0.7729%" height="15" fill="rgb(245,195,53)" fg:x="7902" fg:w="826"/><text x="7.6436%" y="831.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (49 samples, 0.05%)</title><rect x="8.1880%" y="741" width="0.0458%" height="15" fill="rgb(240,92,26)" fg:x="8751" fg:w="49"/><text x="8.4380%" y="751.50"></text></g><g><title>__GI___lll_lock_wake (11 samples, 0.01%)</title><rect x="8.2235%" y="725" width="0.0103%" height="15" fill="rgb(207,40,23)" fg:x="8789" fg:w="11"/><text x="8.4735%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (57 samples, 0.05%)</title><rect x="8.1814%" y="821" width="0.0533%" height="15" fill="rgb(223,111,35)" fg:x="8744" fg:w="57"/><text x="8.4314%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (55 samples, 0.05%)</title><rect x="8.1833%" y="805" width="0.0515%" height="15" fill="rgb(229,147,28)" fg:x="8746" fg:w="55"/><text x="8.4333%" y="815.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="8.1833%" y="789" width="0.0515%" height="15" fill="rgb(211,29,28)" fg:x="8746" fg:w="55"/><text x="8.4333%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (53 samples, 0.05%)</title><rect x="8.1852%" y="773" width="0.0496%" height="15" fill="rgb(228,72,33)" fg:x="8748" fg:w="53"/><text x="8.4352%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (50 samples, 0.05%)</title><rect x="8.1880%" y="757" width="0.0468%" height="15" fill="rgb(205,214,31)" fg:x="8751" fg:w="50"/><text x="8.4380%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (38 samples, 0.04%)</title><rect x="8.2348%" y="821" width="0.0356%" height="15" fill="rgb(224,111,15)" fg:x="8801" fg:w="38"/><text x="8.4848%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (38 samples, 0.04%)</title><rect x="8.2348%" y="805" width="0.0356%" height="15" fill="rgb(253,21,26)" fg:x="8801" fg:w="38"/><text x="8.4848%" y="815.50"></text></g><g><title>event_listener::Inner::lock (112 samples, 0.10%)</title><rect x="8.2722%" y="821" width="0.1048%" height="15" fill="rgb(245,139,43)" fg:x="8841" fg:w="112"/><text x="8.5222%" y="831.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (112 samples, 0.10%)</title><rect x="8.2722%" y="805" width="0.1048%" height="15" fill="rgb(252,170,7)" fg:x="8841" fg:w="112"/><text x="8.5222%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (106 samples, 0.10%)</title><rect x="8.2778%" y="789" width="0.0992%" height="15" fill="rgb(231,118,14)" fg:x="8847" fg:w="106"/><text x="8.5278%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (98 samples, 0.09%)</title><rect x="8.2853%" y="773" width="0.0917%" height="15" fill="rgb(238,83,0)" fg:x="8855" fg:w="98"/><text x="8.5353%" y="783.50"></text></g><g><title>___pthread_mutex_lock (98 samples, 0.09%)</title><rect x="8.2853%" y="757" width="0.0917%" height="15" fill="rgb(221,39,39)" fg:x="8855" fg:w="98"/><text x="8.5353%" y="767.50"></text></g><g><title>__GI___lll_lock_wait (12 samples, 0.01%)</title><rect x="8.3658%" y="741" width="0.0112%" height="15" fill="rgb(222,119,46)" fg:x="8941" fg:w="12"/><text x="8.6158%" y="751.50"></text></g><g><title>event_listener::List::notify (15 samples, 0.01%)</title><rect x="8.3770%" y="821" width="0.0140%" height="15" fill="rgb(222,165,49)" fg:x="8953" fg:w="15"/><text x="8.6270%" y="831.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (1,828 samples, 1.71%)</title><rect x="7.3094%" y="853" width="1.7104%" height="15" fill="rgb(219,113,52)" fg:x="7812" fg:w="1828"/><text x="7.5594%" y="863.50"></text></g><g><title>event_listener::Event::notify (912 samples, 0.85%)</title><rect x="8.1665%" y="837" width="0.8533%" height="15" fill="rgb(214,7,15)" fg:x="8728" fg:w="912"/><text x="8.4165%" y="847.50"></text></g><g><title>event_listener::full_fence (672 samples, 0.63%)</title><rect x="8.3910%" y="821" width="0.6288%" height="15" fill="rgb(235,32,4)" fg:x="8968" fg:w="672"/><text x="8.6410%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (667 samples, 0.62%)</title><rect x="8.3957%" y="805" width="0.6241%" height="15" fill="rgb(238,90,54)" fg:x="8973" fg:w="667"/><text x="8.6457%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (667 samples, 0.62%)</title><rect x="8.3957%" y="789" width="0.6241%" height="15" fill="rgb(213,208,19)" fg:x="8973" fg:w="667"/><text x="8.6457%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (22 samples, 0.02%)</title><rect x="9.0198%" y="853" width="0.0206%" height="15" fill="rgb(233,156,4)" fg:x="9640" fg:w="22"/><text x="9.2698%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (11 samples, 0.01%)</title><rect x="9.0404%" y="853" width="0.0103%" height="15" fill="rgb(207,194,5)" fg:x="9662" fg:w="11"/><text x="9.2904%" y="863.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="9.0404%" y="837" width="0.0103%" height="15" fill="rgb(206,111,30)" fg:x="9662" fg:w="11"/><text x="9.2904%" y="847.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,135 samples, 2.00%)</title><rect x="7.2636%" y="869" width="1.9976%" height="15" fill="rgb(243,70,54)" fg:x="7763" fg:w="2135"/><text x="7.5136%" y="879.50">&lt;..</text></g><g><title>event_listener::Event::notify (225 samples, 0.21%)</title><rect x="9.0507%" y="853" width="0.2105%" height="15" fill="rgb(242,28,8)" fg:x="9673" fg:w="225"/><text x="9.3007%" y="863.50"></text></g><g><title>event_listener::full_fence (214 samples, 0.20%)</title><rect x="9.0610%" y="837" width="0.2002%" height="15" fill="rgb(219,106,18)" fg:x="9684" fg:w="214"/><text x="9.3110%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (208 samples, 0.19%)</title><rect x="9.0666%" y="821" width="0.1946%" height="15" fill="rgb(244,222,10)" fg:x="9690" fg:w="208"/><text x="9.3166%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (208 samples, 0.19%)</title><rect x="9.0666%" y="805" width="0.1946%" height="15" fill="rgb(236,179,52)" fg:x="9690" fg:w="208"/><text x="9.3166%" y="815.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="9.2696%" y="821" width="0.0168%" height="15" fill="rgb(213,23,39)" fg:x="9907" fg:w="18"/><text x="9.5196%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,334 samples, 2.18%)</title><rect x="7.1036%" y="901" width="2.1838%" height="15" fill="rgb(238,48,10)" fg:x="7592" fg:w="2334"/><text x="7.3536%" y="911.50">&lt;..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,229 samples, 2.09%)</title><rect x="7.2018%" y="885" width="2.0856%" height="15" fill="rgb(251,196,23)" fg:x="7697" fg:w="2229"/><text x="7.4518%" y="895.50">t..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (28 samples, 0.03%)</title><rect x="9.2612%" y="869" width="0.0262%" height="15" fill="rgb(250,152,24)" fg:x="9898" fg:w="28"/><text x="9.5112%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (19 samples, 0.02%)</title><rect x="9.2696%" y="853" width="0.0178%" height="15" fill="rgb(209,150,17)" fg:x="9907" fg:w="19"/><text x="9.5196%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (19 samples, 0.02%)</title><rect x="9.2696%" y="837" width="0.0178%" height="15" fill="rgb(234,202,34)" fg:x="9907" fg:w="19"/><text x="9.5196%" y="847.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (17 samples, 0.02%)</title><rect x="9.2874%" y="901" width="0.0159%" height="15" fill="rgb(253,148,53)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (17 samples, 0.02%)</title><rect x="9.2874%" y="885" width="0.0159%" height="15" fill="rgb(218,129,16)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (17 samples, 0.02%)</title><rect x="9.2874%" y="869" width="0.0159%" height="15" fill="rgb(216,85,19)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (17 samples, 0.02%)</title><rect x="9.2874%" y="853" width="0.0159%" height="15" fill="rgb(235,228,7)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 0.02%)</title><rect x="9.2874%" y="837" width="0.0159%" height="15" fill="rgb(245,175,0)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="9.2874%" y="821" width="0.0159%" height="15" fill="rgb(208,168,36)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="9.2874%" y="805" width="0.0159%" height="15" fill="rgb(246,171,24)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="9.2874%" y="789" width="0.0159%" height="15" fill="rgb(215,142,24)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="9.2874%" y="773" width="0.0159%" height="15" fill="rgb(250,187,7)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="9.2874%" y="757" width="0.0159%" height="15" fill="rgb(228,66,33)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="9.2874%" y="741" width="0.0159%" height="15" fill="rgb(234,215,21)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="9.2874%" y="725" width="0.0159%" height="15" fill="rgb(222,191,20)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="9.2874%" y="709" width="0.0159%" height="15" fill="rgb(245,79,54)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="719.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="9.2874%" y="693" width="0.0159%" height="15" fill="rgb(240,10,37)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="703.50"></text></g><g><title>__rg_alloc (17 samples, 0.02%)</title><rect x="9.2874%" y="677" width="0.0159%" height="15" fill="rgb(214,192,32)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.02%)</title><rect x="9.2874%" y="661" width="0.0159%" height="15" fill="rgb(209,36,54)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="671.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="9.2874%" y="645" width="0.0159%" height="15" fill="rgb(220,10,11)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="9.2874%" y="629" width="0.0159%" height="15" fill="rgb(221,106,17)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="9.2874%" y="613" width="0.0159%" height="15" fill="rgb(251,142,44)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="9.2874%" y="597" width="0.0159%" height="15" fill="rgb(238,13,15)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="9.2874%" y="581" width="0.0159%" height="15" fill="rgb(208,107,27)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (17 samples, 0.02%)</title><rect x="9.2874%" y="565" width="0.0159%" height="15" fill="rgb(205,136,37)" fg:x="9926" fg:w="17"/><text x="9.5374%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (15 samples, 0.01%)</title><rect x="9.2893%" y="549" width="0.0140%" height="15" fill="rgb(250,205,27)" fg:x="9928" fg:w="15"/><text x="9.5393%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (11 samples, 0.01%)</title><rect x="9.2930%" y="533" width="0.0103%" height="15" fill="rgb(210,80,43)" fg:x="9932" fg:w="11"/><text x="9.5430%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="9.2930%" y="517" width="0.0103%" height="15" fill="rgb(247,160,36)" fg:x="9932" fg:w="11"/><text x="9.5430%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="9.2930%" y="501" width="0.0103%" height="15" fill="rgb(234,13,49)" fg:x="9932" fg:w="11"/><text x="9.5430%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (22 samples, 0.02%)</title><rect x="9.3239%" y="613" width="0.0206%" height="15" fill="rgb(234,122,0)" fg:x="9965" fg:w="22"/><text x="9.5739%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (22 samples, 0.02%)</title><rect x="9.3239%" y="597" width="0.0206%" height="15" fill="rgb(207,146,38)" fg:x="9965" fg:w="22"/><text x="9.5739%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (51 samples, 0.05%)</title><rect x="9.3117%" y="661" width="0.0477%" height="15" fill="rgb(207,177,25)" fg:x="9952" fg:w="51"/><text x="9.5617%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (51 samples, 0.05%)</title><rect x="9.3117%" y="645" width="0.0477%" height="15" fill="rgb(211,178,42)" fg:x="9952" fg:w="51"/><text x="9.5617%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (42 samples, 0.04%)</title><rect x="9.3201%" y="629" width="0.0393%" height="15" fill="rgb(230,69,54)" fg:x="9961" fg:w="42"/><text x="9.5701%" y="639.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (16 samples, 0.01%)</title><rect x="9.3445%" y="613" width="0.0150%" height="15" fill="rgb(214,135,41)" fg:x="9987" fg:w="16"/><text x="9.5945%" y="623.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (16 samples, 0.01%)</title><rect x="9.3445%" y="597" width="0.0150%" height="15" fill="rgb(237,67,25)" fg:x="9987" fg:w="16"/><text x="9.5945%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (70 samples, 0.07%)</title><rect x="9.3117%" y="677" width="0.0655%" height="15" fill="rgb(222,189,50)" fg:x="9952" fg:w="70"/><text x="9.5617%" y="687.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="9.3594%" y="661" width="0.0178%" height="15" fill="rgb(245,148,34)" fg:x="10003" fg:w="19"/><text x="9.6094%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="9.3594%" y="645" width="0.0178%" height="15" fill="rgb(222,29,6)" fg:x="10003" fg:w="19"/><text x="9.6094%" y="655.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (19 samples, 0.02%)</title><rect x="9.3594%" y="629" width="0.0178%" height="15" fill="rgb(221,189,43)" fg:x="10003" fg:w="19"/><text x="9.6094%" y="639.50"></text></g><g><title>snmalloc::bits::align_down (19 samples, 0.02%)</title><rect x="9.3594%" y="613" width="0.0178%" height="15" fill="rgb(207,36,27)" fg:x="10003" fg:w="19"/><text x="9.6094%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (97 samples, 0.09%)</title><rect x="9.3042%" y="693" width="0.0908%" height="15" fill="rgb(217,90,24)" fg:x="9944" fg:w="97"/><text x="9.5542%" y="703.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="9.3800%" y="677" width="0.0150%" height="15" fill="rgb(224,66,35)" fg:x="10025" fg:w="16"/><text x="9.6300%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="9.3800%" y="661" width="0.0150%" height="15" fill="rgb(221,13,50)" fg:x="10025" fg:w="16"/><text x="9.6300%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (16 samples, 0.01%)</title><rect x="9.3800%" y="645" width="0.0150%" height="15" fill="rgb(236,68,49)" fg:x="10025" fg:w="16"/><text x="9.6300%" y="655.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.01%)</title><rect x="9.3800%" y="629" width="0.0150%" height="15" fill="rgb(229,146,28)" fg:x="10025" fg:w="16"/><text x="9.6300%" y="639.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (79 samples, 0.07%)</title><rect x="9.4418%" y="677" width="0.0739%" height="15" fill="rgb(225,31,38)" fg:x="10091" fg:w="79"/><text x="9.6918%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (660 samples, 0.62%)</title><rect x="9.3033%" y="725" width="0.6175%" height="15" fill="rgb(250,208,3)" fg:x="9943" fg:w="660"/><text x="9.5533%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (660 samples, 0.62%)</title><rect x="9.3033%" y="709" width="0.6175%" height="15" fill="rgb(246,54,23)" fg:x="9943" fg:w="660"/><text x="9.5533%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (562 samples, 0.53%)</title><rect x="9.3950%" y="693" width="0.5258%" height="15" fill="rgb(243,76,11)" fg:x="10041" fg:w="562"/><text x="9.6450%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (433 samples, 0.41%)</title><rect x="9.5157%" y="677" width="0.4051%" height="15" fill="rgb(245,21,50)" fg:x="10170" fg:w="433"/><text x="9.7657%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (433 samples, 0.41%)</title><rect x="9.5157%" y="661" width="0.4051%" height="15" fill="rgb(228,9,43)" fg:x="10170" fg:w="433"/><text x="9.7657%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (433 samples, 0.41%)</title><rect x="9.5157%" y="645" width="0.4051%" height="15" fill="rgb(208,100,47)" fg:x="10170" fg:w="433"/><text x="9.7657%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (667 samples, 0.62%)</title><rect x="9.3033%" y="901" width="0.6241%" height="15" fill="rgb(232,26,8)" fg:x="9943" fg:w="667"/><text x="9.5533%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (667 samples, 0.62%)</title><rect x="9.3033%" y="885" width="0.6241%" height="15" fill="rgb(216,166,38)" fg:x="9943" fg:w="667"/><text x="9.5533%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (667 samples, 0.62%)</title><rect x="9.3033%" y="869" width="0.6241%" height="15" fill="rgb(251,202,51)" fg:x="9943" fg:w="667"/><text x="9.5533%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (667 samples, 0.62%)</title><rect x="9.3033%" y="853" width="0.6241%" height="15" fill="rgb(254,216,34)" fg:x="9943" fg:w="667"/><text x="9.5533%" y="863.50"></text></g><g><title>alloc::alloc::alloc (667 samples, 0.62%)</title><rect x="9.3033%" y="837" width="0.6241%" height="15" fill="rgb(251,32,27)" fg:x="9943" fg:w="667"/><text x="9.5533%" y="847.50"></text></g><g><title>__rg_alloc (667 samples, 0.62%)</title><rect x="9.3033%" y="821" width="0.6241%" height="15" fill="rgb(208,127,28)" fg:x="9943" fg:w="667"/><text x="9.5533%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (667 samples, 0.62%)</title><rect x="9.3033%" y="805" width="0.6241%" height="15" fill="rgb(224,137,22)" fg:x="9943" fg:w="667"/><text x="9.5533%" y="815.50"></text></g><g><title>rust_alloc (667 samples, 0.62%)</title><rect x="9.3033%" y="789" width="0.6241%" height="15" fill="rgb(254,70,32)" fg:x="9943" fg:w="667"/><text x="9.5533%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (667 samples, 0.62%)</title><rect x="9.3033%" y="773" width="0.6241%" height="15" fill="rgb(229,75,37)" fg:x="9943" fg:w="667"/><text x="9.5533%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (667 samples, 0.62%)</title><rect x="9.3033%" y="757" width="0.6241%" height="15" fill="rgb(252,64,23)" fg:x="9943" fg:w="667"/><text x="9.5533%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (667 samples, 0.62%)</title><rect x="9.3033%" y="741" width="0.6241%" height="15" fill="rgb(232,162,48)" fg:x="9943" fg:w="667"/><text x="9.5533%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (3,034 samples, 2.84%)</title><rect x="7.1026%" y="981" width="2.8388%" height="15" fill="rgb(246,160,12)" fg:x="7591" fg:w="3034"/><text x="7.3526%" y="991.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,034 samples, 2.84%)</title><rect x="7.1026%" y="965" width="2.8388%" height="15" fill="rgb(247,166,0)" fg:x="7591" fg:w="3034"/><text x="7.3526%" y="975.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,033 samples, 2.84%)</title><rect x="7.1036%" y="949" width="2.8379%" height="15" fill="rgb(249,219,21)" fg:x="7592" fg:w="3033"/><text x="7.3536%" y="959.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,033 samples, 2.84%)</title><rect x="7.1036%" y="933" width="2.8379%" height="15" fill="rgb(205,209,3)" fg:x="7592" fg:w="3033"/><text x="7.3536%" y="943.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,033 samples, 2.84%)</title><rect x="7.1036%" y="917" width="2.8379%" height="15" fill="rgb(243,44,1)" fg:x="7592" fg:w="3033"/><text x="7.3536%" y="927.50">tr..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (15 samples, 0.01%)</title><rect x="9.9274%" y="901" width="0.0140%" height="15" fill="rgb(206,159,16)" fg:x="10610" fg:w="15"/><text x="10.1774%" y="911.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (69 samples, 0.06%)</title><rect x="10.0453%" y="917" width="0.0646%" height="15" fill="rgb(244,77,30)" fg:x="10736" fg:w="69"/><text x="10.2953%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (63 samples, 0.06%)</title><rect x="10.0509%" y="901" width="0.0589%" height="15" fill="rgb(218,69,12)" fg:x="10742" fg:w="63"/><text x="10.3009%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (11 samples, 0.01%)</title><rect x="10.0996%" y="885" width="0.0103%" height="15" fill="rgb(212,87,7)" fg:x="10794" fg:w="11"/><text x="10.3496%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (939 samples, 0.88%)</title><rect x="9.9760%" y="933" width="0.8786%" height="15" fill="rgb(245,114,25)" fg:x="10662" fg:w="939"/><text x="10.2260%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (796 samples, 0.74%)</title><rect x="10.1098%" y="917" width="0.7448%" height="15" fill="rgb(210,61,42)" fg:x="10805" fg:w="796"/><text x="10.3598%" y="927.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,426 samples, 1.33%)</title><rect x="9.9414%" y="965" width="1.3343%" height="15" fill="rgb(211,52,33)" fg:x="10625" fg:w="1426"/><text x="10.1914%" y="975.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,426 samples, 1.33%)</title><rect x="9.9414%" y="949" width="1.3343%" height="15" fill="rgb(234,58,33)" fg:x="10625" fg:w="1426"/><text x="10.1914%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (450 samples, 0.42%)</title><rect x="10.8546%" y="933" width="0.4210%" height="15" fill="rgb(220,115,36)" fg:x="11601" fg:w="450"/><text x="11.1046%" y="943.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,651 samples, 5.29%)</title><rect x="6.0098%" y="1109" width="5.2874%" height="15" fill="rgb(243,153,54)" fg:x="6423" fg:w="5651"/><text x="6.2598%" y="1119.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5,651 samples, 5.29%)</title><rect x="6.0098%" y="1093" width="5.2874%" height="15" fill="rgb(251,47,18)" fg:x="6423" fg:w="5651"/><text x="6.2598%" y="1103.50">&lt;async..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5,651 samples, 5.29%)</title><rect x="6.0098%" y="1077" width="5.2874%" height="15" fill="rgb(242,102,42)" fg:x="6423" fg:w="5651"/><text x="6.2598%" y="1087.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,651 samples, 5.29%)</title><rect x="6.0098%" y="1061" width="5.2874%" height="15" fill="rgb(234,31,38)" fg:x="6423" fg:w="5651"/><text x="6.2598%" y="1071.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,651 samples, 5.29%)</title><rect x="6.0098%" y="1045" width="5.2874%" height="15" fill="rgb(221,117,51)" fg:x="6423" fg:w="5651"/><text x="6.2598%" y="1055.50">std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,651 samples, 5.29%)</title><rect x="6.0098%" y="1029" width="5.2874%" height="15" fill="rgb(212,20,18)" fg:x="6423" fg:w="5651"/><text x="6.2598%" y="1039.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,651 samples, 5.29%)</title><rect x="6.0098%" y="1013" width="5.2874%" height="15" fill="rgb(245,133,36)" fg:x="6423" fg:w="5651"/><text x="6.2598%" y="1023.50">&lt;async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,651 samples, 5.29%)</title><rect x="6.0098%" y="997" width="5.2874%" height="15" fill="rgb(212,6,19)" fg:x="6423" fg:w="5651"/><text x="6.2598%" y="1007.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,449 samples, 1.36%)</title><rect x="9.9414%" y="981" width="1.3558%" height="15" fill="rgb(218,1,36)" fg:x="10625" fg:w="1449"/><text x="10.1914%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="11.2757%" y="965" width="0.0215%" height="15" fill="rgb(246,84,54)" fg:x="12051" fg:w="23"/><text x="11.5257%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (23 samples, 0.02%)</title><rect x="11.2757%" y="949" width="0.0215%" height="15" fill="rgb(242,110,6)" fg:x="12051" fg:w="23"/><text x="11.5257%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (23 samples, 0.02%)</title><rect x="11.2757%" y="933" width="0.0215%" height="15" fill="rgb(214,47,5)" fg:x="12051" fg:w="23"/><text x="11.5257%" y="943.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="11.2757%" y="917" width="0.0215%" height="15" fill="rgb(218,159,25)" fg:x="12051" fg:w="23"/><text x="11.5257%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (23 samples, 0.02%)</title><rect x="11.2757%" y="901" width="0.0215%" height="15" fill="rgb(215,211,28)" fg:x="12051" fg:w="23"/><text x="11.5257%" y="911.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="11.2757%" y="885" width="0.0215%" height="15" fill="rgb(238,59,32)" fg:x="12051" fg:w="23"/><text x="11.5257%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.01%)</title><rect x="11.2869%" y="869" width="0.0103%" height="15" fill="rgb(226,82,3)" fg:x="12063" fg:w="11"/><text x="11.5369%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.01%)</title><rect x="11.2869%" y="853" width="0.0103%" height="15" fill="rgb(240,164,32)" fg:x="12063" fg:w="11"/><text x="11.5369%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,780 samples, 5.41%)</title><rect x="5.8900%" y="1125" width="5.4081%" height="15" fill="rgb(232,46,7)" fg:x="6295" fg:w="5780"/><text x="6.1400%" y="1135.50">&lt;core::..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (49 samples, 0.05%)</title><rect x="11.2981%" y="1125" width="0.0458%" height="15" fill="rgb(229,129,53)" fg:x="12075" fg:w="49"/><text x="11.5481%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (11 samples, 0.01%)</title><rect x="11.3468%" y="1125" width="0.0103%" height="15" fill="rgb(234,188,29)" fg:x="12127" fg:w="11"/><text x="11.5968%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (54 samples, 0.05%)</title><rect x="11.3580%" y="1125" width="0.0505%" height="15" fill="rgb(246,141,4)" fg:x="12139" fg:w="54"/><text x="11.6080%" y="1135.50"></text></g><g><title>__clock_gettime_2 (110 samples, 0.10%)</title><rect x="11.4226%" y="1125" width="0.1029%" height="15" fill="rgb(229,23,39)" fg:x="12208" fg:w="110"/><text x="11.6726%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (158 samples, 0.15%)</title><rect x="11.5274%" y="1125" width="0.1478%" height="15" fill="rgb(206,12,3)" fg:x="12320" fg:w="158"/><text x="11.7774%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (15 samples, 0.01%)</title><rect x="11.6790%" y="1125" width="0.0140%" height="15" fill="rgb(252,226,20)" fg:x="12482" fg:w="15"/><text x="11.9290%" y="1135.50"></text></g><g><title>abi_stable::erased_types::iterator::next (11 samples, 0.01%)</title><rect x="11.6930%" y="1125" width="0.0103%" height="15" fill="rgb(216,123,35)" fg:x="12497" fg:w="11"/><text x="11.9430%" y="1135.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (21 samples, 0.02%)</title><rect x="11.7117%" y="1125" width="0.0196%" height="15" fill="rgb(212,68,40)" fg:x="12517" fg:w="21"/><text x="11.9617%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="11.7117%" y="1109" width="0.0196%" height="15" fill="rgb(254,125,32)" fg:x="12517" fg:w="21"/><text x="11.9617%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (21 samples, 0.02%)</title><rect x="11.7117%" y="1093" width="0.0196%" height="15" fill="rgb(253,97,22)" fg:x="12517" fg:w="21"/><text x="11.9617%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="11.7117%" y="1077" width="0.0196%" height="15" fill="rgb(241,101,14)" fg:x="12517" fg:w="21"/><text x="11.9617%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="11.7117%" y="1061" width="0.0196%" height="15" fill="rgb(238,103,29)" fg:x="12517" fg:w="21"/><text x="11.9617%" y="1071.50"></text></g><g><title>__rg_dealloc (21 samples, 0.02%)</title><rect x="11.7117%" y="1045" width="0.0196%" height="15" fill="rgb(233,195,47)" fg:x="12517" fg:w="21"/><text x="11.9617%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (21 samples, 0.02%)</title><rect x="11.7117%" y="1029" width="0.0196%" height="15" fill="rgb(246,218,30)" fg:x="12517" fg:w="21"/><text x="11.9617%" y="1039.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (12 samples, 0.01%)</title><rect x="11.7379%" y="1125" width="0.0112%" height="15" fill="rgb(219,145,47)" fg:x="12545" fg:w="12"/><text x="11.9879%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="11.7828%" y="917" width="0.0103%" height="15" fill="rgb(243,12,26)" fg:x="12593" fg:w="11"/><text x="12.0328%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="11.7828%" y="901" width="0.0103%" height="15" fill="rgb(214,87,16)" fg:x="12593" fg:w="11"/><text x="12.0328%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="11.7828%" y="885" width="0.0103%" height="15" fill="rgb(208,99,42)" fg:x="12593" fg:w="11"/><text x="12.0328%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="11.7828%" y="869" width="0.0103%" height="15" fill="rgb(253,99,2)" fg:x="12593" fg:w="11"/><text x="12.0328%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="11.7828%" y="853" width="0.0103%" height="15" fill="rgb(220,168,23)" fg:x="12593" fg:w="11"/><text x="12.0328%" y="863.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="11.7828%" y="837" width="0.0103%" height="15" fill="rgb(242,38,24)" fg:x="12593" fg:w="11"/><text x="12.0328%" y="847.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="11.7828%" y="821" width="0.0103%" height="15" fill="rgb(225,182,9)" fg:x="12593" fg:w="11"/><text x="12.0328%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="11.7828%" y="805" width="0.0103%" height="15" fill="rgb(243,178,37)" fg:x="12593" fg:w="11"/><text x="12.0328%" y="815.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="11.7828%" y="1029" width="0.0159%" height="15" fill="rgb(232,139,19)" fg:x="12593" fg:w="17"/><text x="12.0328%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (17 samples, 0.02%)</title><rect x="11.7828%" y="1013" width="0.0159%" height="15" fill="rgb(225,201,24)" fg:x="12593" fg:w="17"/><text x="12.0328%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (17 samples, 0.02%)</title><rect x="11.7828%" y="997" width="0.0159%" height="15" fill="rgb(221,47,46)" fg:x="12593" fg:w="17"/><text x="12.0328%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 0.02%)</title><rect x="11.7828%" y="981" width="0.0159%" height="15" fill="rgb(249,23,13)" fg:x="12593" fg:w="17"/><text x="12.0328%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="11.7828%" y="965" width="0.0159%" height="15" fill="rgb(219,9,5)" fg:x="12593" fg:w="17"/><text x="12.0328%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="11.7828%" y="949" width="0.0159%" height="15" fill="rgb(254,171,16)" fg:x="12593" fg:w="17"/><text x="12.0328%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="11.7828%" y="933" width="0.0159%" height="15" fill="rgb(230,171,20)" fg:x="12593" fg:w="17"/><text x="12.0328%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (51 samples, 0.05%)</title><rect x="11.7519%" y="1125" width="0.0477%" height="15" fill="rgb(210,71,41)" fg:x="12560" fg:w="51"/><text x="12.0019%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (18 samples, 0.02%)</title><rect x="11.7828%" y="1109" width="0.0168%" height="15" fill="rgb(206,173,20)" fg:x="12593" fg:w="18"/><text x="12.0328%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 0.02%)</title><rect x="11.7828%" y="1093" width="0.0168%" height="15" fill="rgb(233,88,34)" fg:x="12593" fg:w="18"/><text x="12.0328%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="11.7828%" y="1077" width="0.0168%" height="15" fill="rgb(223,209,46)" fg:x="12593" fg:w="18"/><text x="12.0328%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="11.7828%" y="1061" width="0.0168%" height="15" fill="rgb(250,43,18)" fg:x="12593" fg:w="18"/><text x="12.0328%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="11.7828%" y="1045" width="0.0168%" height="15" fill="rgb(208,13,10)" fg:x="12593" fg:w="18"/><text x="12.0328%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="11.8249%" y="1061" width="0.0168%" height="15" fill="rgb(212,200,36)" fg:x="12638" fg:w="18"/><text x="12.0749%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (18 samples, 0.02%)</title><rect x="11.8249%" y="1045" width="0.0168%" height="15" fill="rgb(225,90,30)" fg:x="12638" fg:w="18"/><text x="12.0749%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (18 samples, 0.02%)</title><rect x="11.8249%" y="1029" width="0.0168%" height="15" fill="rgb(236,182,39)" fg:x="12638" fg:w="18"/><text x="12.0749%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (18 samples, 0.02%)</title><rect x="11.8249%" y="1013" width="0.0168%" height="15" fill="rgb(212,144,35)" fg:x="12638" fg:w="18"/><text x="12.0749%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (18 samples, 0.02%)</title><rect x="11.8249%" y="997" width="0.0168%" height="15" fill="rgb(228,63,44)" fg:x="12638" fg:w="18"/><text x="12.0749%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (24 samples, 0.02%)</title><rect x="11.8249%" y="1077" width="0.0225%" height="15" fill="rgb(228,109,6)" fg:x="12638" fg:w="24"/><text x="12.0749%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (63 samples, 0.06%)</title><rect x="11.7997%" y="1125" width="0.0589%" height="15" fill="rgb(238,117,24)" fg:x="12611" fg:w="63"/><text x="12.0497%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (45 samples, 0.04%)</title><rect x="11.8165%" y="1109" width="0.0421%" height="15" fill="rgb(242,26,26)" fg:x="12629" fg:w="45"/><text x="12.0665%" y="1119.50"></text></g><g><title>core::mem::drop (45 samples, 0.04%)</title><rect x="11.8165%" y="1093" width="0.0421%" height="15" fill="rgb(221,92,48)" fg:x="12629" fg:w="45"/><text x="12.0665%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="11.8474%" y="1077" width="0.0112%" height="15" fill="rgb(209,209,32)" fg:x="12662" fg:w="12"/><text x="12.0974%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="11.8474%" y="1061" width="0.0112%" height="15" fill="rgb(221,70,22)" fg:x="12662" fg:w="12"/><text x="12.0974%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="11.8474%" y="1045" width="0.0112%" height="15" fill="rgb(248,145,5)" fg:x="12662" fg:w="12"/><text x="12.0974%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="11.8474%" y="1029" width="0.0112%" height="15" fill="rgb(226,116,26)" fg:x="12662" fg:w="12"/><text x="12.0974%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="11.8474%" y="1013" width="0.0112%" height="15" fill="rgb(244,5,17)" fg:x="12662" fg:w="12"/><text x="12.0974%" y="1023.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="11.8474%" y="997" width="0.0112%" height="15" fill="rgb(252,159,33)" fg:x="12662" fg:w="12"/><text x="12.0974%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="11.8474%" y="981" width="0.0112%" height="15" fill="rgb(206,71,0)" fg:x="12662" fg:w="12"/><text x="12.0974%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (19 samples, 0.02%)</title><rect x="11.8586%" y="1125" width="0.0178%" height="15" fill="rgb(233,118,54)" fg:x="12674" fg:w="19"/><text x="12.1086%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="11.8595%" y="1109" width="0.0168%" height="15" fill="rgb(234,83,48)" fg:x="12675" fg:w="18"/><text x="12.1095%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (18 samples, 0.02%)</title><rect x="11.8595%" y="1093" width="0.0168%" height="15" fill="rgb(228,3,54)" fg:x="12675" fg:w="18"/><text x="12.1095%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (18 samples, 0.02%)</title><rect x="11.8595%" y="1077" width="0.0168%" height="15" fill="rgb(226,155,13)" fg:x="12675" fg:w="18"/><text x="12.1095%" y="1087.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (34 samples, 0.03%)</title><rect x="11.8764%" y="1125" width="0.0318%" height="15" fill="rgb(241,28,37)" fg:x="12693" fg:w="34"/><text x="12.1264%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="11.8951%" y="1109" width="0.0131%" height="15" fill="rgb(233,93,10)" fg:x="12713" fg:w="14"/><text x="12.1451%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (66 samples, 0.06%)</title><rect x="12.0289%" y="517" width="0.0618%" height="15" fill="rgb(225,113,19)" fg:x="12856" fg:w="66"/><text x="12.2789%" y="527.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="12.3657%" y="501" width="0.0374%" height="15" fill="rgb(241,2,18)" fg:x="13216" fg:w="40"/><text x="12.6157%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.01%)</title><rect x="12.4163%" y="485" width="0.0122%" height="15" fill="rgb(228,207,21)" fg:x="13270" fg:w="13"/><text x="12.6663%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="12.4163%" y="469" width="0.0122%" height="15" fill="rgb(213,211,35)" fg:x="13270" fg:w="13"/><text x="12.6663%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.01%)</title><rect x="12.4163%" y="453" width="0.0122%" height="15" fill="rgb(209,83,10)" fg:x="13270" fg:w="13"/><text x="12.6663%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (12 samples, 0.01%)</title><rect x="12.4172%" y="437" width="0.0112%" height="15" fill="rgb(209,164,1)" fg:x="13271" fg:w="12"/><text x="12.6672%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="12.4172%" y="421" width="0.0112%" height="15" fill="rgb(213,184,43)" fg:x="13271" fg:w="12"/><text x="12.6672%" y="431.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (34 samples, 0.03%)</title><rect x="12.4032%" y="501" width="0.0318%" height="15" fill="rgb(231,61,34)" fg:x="13256" fg:w="34"/><text x="12.6532%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::deref::Deref for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::deref (22 samples, 0.02%)</title><rect x="12.4350%" y="501" width="0.0206%" height="15" fill="rgb(235,75,3)" fg:x="13290" fg:w="22"/><text x="12.6850%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (22 samples, 0.02%)</title><rect x="12.4350%" y="485" width="0.0206%" height="15" fill="rgb(220,106,47)" fg:x="13290" fg:w="22"/><text x="12.6850%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="12.4612%" y="437" width="0.0299%" height="15" fill="rgb(210,196,33)" fg:x="13318" fg:w="32"/><text x="12.7112%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (47 samples, 0.04%)</title><rect x="12.4602%" y="501" width="0.0440%" height="15" fill="rgb(229,154,42)" fg:x="13317" fg:w="47"/><text x="12.7102%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (47 samples, 0.04%)</title><rect x="12.4602%" y="485" width="0.0440%" height="15" fill="rgb(228,114,26)" fg:x="13317" fg:w="47"/><text x="12.7102%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 0.04%)</title><rect x="12.4602%" y="469" width="0.0440%" height="15" fill="rgb(208,144,1)" fg:x="13317" fg:w="47"/><text x="12.7102%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (47 samples, 0.04%)</title><rect x="12.4602%" y="453" width="0.0440%" height="15" fill="rgb(239,112,37)" fg:x="13317" fg:w="47"/><text x="12.7102%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (14 samples, 0.01%)</title><rect x="12.4911%" y="437" width="0.0131%" height="15" fill="rgb(210,96,50)" fg:x="13350" fg:w="14"/><text x="12.7411%" y="447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (14 samples, 0.01%)</title><rect x="12.4911%" y="421" width="0.0131%" height="15" fill="rgb(222,178,2)" fg:x="13350" fg:w="14"/><text x="12.7411%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="12.5828%" y="245" width="0.0103%" height="15" fill="rgb(226,74,18)" fg:x="13448" fg:w="11"/><text x="12.8328%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="12.5828%" y="229" width="0.0103%" height="15" fill="rgb(225,67,54)" fg:x="13448" fg:w="11"/><text x="12.8328%" y="239.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="12.5828%" y="213" width="0.0103%" height="15" fill="rgb(251,92,32)" fg:x="13448" fg:w="11"/><text x="12.8328%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="12.5828%" y="197" width="0.0103%" height="15" fill="rgb(228,149,22)" fg:x="13448" fg:w="11"/><text x="12.8328%" y="207.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (56 samples, 0.05%)</title><rect x="12.5444%" y="341" width="0.0524%" height="15" fill="rgb(243,54,13)" fg:x="13407" fg:w="56"/><text x="12.7944%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (56 samples, 0.05%)</title><rect x="12.5444%" y="325" width="0.0524%" height="15" fill="rgb(243,180,28)" fg:x="13407" fg:w="56"/><text x="12.7944%" y="335.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="12.5828%" y="309" width="0.0140%" height="15" fill="rgb(208,167,24)" fg:x="13448" fg:w="15"/><text x="12.8328%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="12.5828%" y="293" width="0.0140%" height="15" fill="rgb(245,73,45)" fg:x="13448" fg:w="15"/><text x="12.8328%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="12.5828%" y="277" width="0.0140%" height="15" fill="rgb(237,203,48)" fg:x="13448" fg:w="15"/><text x="12.8328%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="12.5828%" y="261" width="0.0140%" height="15" fill="rgb(211,197,16)" fg:x="13448" fg:w="15"/><text x="12.8328%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (35 samples, 0.03%)</title><rect x="12.6848%" y="197" width="0.0327%" height="15" fill="rgb(243,99,51)" fg:x="13557" fg:w="35"/><text x="12.9348%" y="207.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (30 samples, 0.03%)</title><rect x="12.6895%" y="181" width="0.0281%" height="15" fill="rgb(215,123,29)" fg:x="13562" fg:w="30"/><text x="12.9395%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (120 samples, 0.11%)</title><rect x="12.6127%" y="245" width="0.1123%" height="15" fill="rgb(239,186,37)" fg:x="13480" fg:w="120"/><text x="12.8627%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (120 samples, 0.11%)</title><rect x="12.6127%" y="229" width="0.1123%" height="15" fill="rgb(252,136,39)" fg:x="13480" fg:w="120"/><text x="12.8627%" y="239.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (97 samples, 0.09%)</title><rect x="12.6343%" y="213" width="0.0908%" height="15" fill="rgb(223,213,32)" fg:x="13503" fg:w="97"/><text x="12.8843%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (161 samples, 0.15%)</title><rect x="12.6053%" y="277" width="0.1506%" height="15" fill="rgb(233,115,5)" fg:x="13472" fg:w="161"/><text x="12.8553%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (161 samples, 0.15%)</title><rect x="12.6053%" y="261" width="0.1506%" height="15" fill="rgb(207,226,44)" fg:x="13472" fg:w="161"/><text x="12.8553%" y="271.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (33 samples, 0.03%)</title><rect x="12.7250%" y="245" width="0.0309%" height="15" fill="rgb(208,126,0)" fg:x="13600" fg:w="33"/><text x="12.9750%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (169 samples, 0.16%)</title><rect x="12.6053%" y="309" width="0.1581%" height="15" fill="rgb(244,66,21)" fg:x="13472" fg:w="169"/><text x="12.8553%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (169 samples, 0.16%)</title><rect x="12.6053%" y="293" width="0.1581%" height="15" fill="rgb(222,97,12)" fg:x="13472" fg:w="169"/><text x="12.8553%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (172 samples, 0.16%)</title><rect x="12.6053%" y="325" width="0.1609%" height="15" fill="rgb(219,213,19)" fg:x="13472" fg:w="172"/><text x="12.8553%" y="335.50"></text></g><g><title>rust_dealloc (191 samples, 0.18%)</title><rect x="12.5968%" y="341" width="0.1787%" height="15" fill="rgb(252,169,30)" fg:x="13463" fg:w="191"/><text x="12.8468%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (34 samples, 0.03%)</title><rect x="12.7765%" y="325" width="0.0318%" height="15" fill="rgb(206,32,51)" fg:x="13655" fg:w="34"/><text x="13.0265%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (314 samples, 0.29%)</title><rect x="12.5182%" y="405" width="0.2938%" height="15" fill="rgb(250,172,42)" fg:x="13379" fg:w="314"/><text x="12.7682%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (309 samples, 0.29%)</title><rect x="12.5229%" y="389" width="0.2891%" height="15" fill="rgb(209,34,43)" fg:x="13384" fg:w="309"/><text x="12.7729%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (299 samples, 0.28%)</title><rect x="12.5323%" y="373" width="0.2798%" height="15" fill="rgb(223,11,35)" fg:x="13394" fg:w="299"/><text x="12.7823%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (299 samples, 0.28%)</title><rect x="12.5323%" y="357" width="0.2798%" height="15" fill="rgb(251,219,26)" fg:x="13394" fg:w="299"/><text x="12.7823%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (39 samples, 0.04%)</title><rect x="12.7756%" y="341" width="0.0365%" height="15" fill="rgb(231,119,3)" fg:x="13654" fg:w="39"/><text x="13.0256%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="12.8120%" y="373" width="0.0150%" height="15" fill="rgb(216,97,11)" fg:x="13693" fg:w="16"/><text x="13.0620%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="12.8120%" y="357" width="0.0150%" height="15" fill="rgb(223,59,9)" fg:x="13693" fg:w="16"/><text x="13.0620%" y="367.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="12.8120%" y="341" width="0.0150%" height="15" fill="rgb(233,93,31)" fg:x="13693" fg:w="16"/><text x="13.0620%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="12.8120%" y="325" width="0.0150%" height="15" fill="rgb(239,81,33)" fg:x="13693" fg:w="16"/><text x="13.0620%" y="335.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (342 samples, 0.32%)</title><rect x="12.5080%" y="469" width="0.3200%" height="15" fill="rgb(213,120,34)" fg:x="13368" fg:w="342"/><text x="12.7580%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (337 samples, 0.32%)</title><rect x="12.5126%" y="453" width="0.3153%" height="15" fill="rgb(243,49,53)" fg:x="13373" fg:w="337"/><text x="12.7626%" y="463.50"></text></g><g><title>core::mem::drop (331 samples, 0.31%)</title><rect x="12.5182%" y="437" width="0.3097%" height="15" fill="rgb(247,216,33)" fg:x="13379" fg:w="331"/><text x="12.7682%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (331 samples, 0.31%)</title><rect x="12.5182%" y="421" width="0.3097%" height="15" fill="rgb(226,26,14)" fg:x="13379" fg:w="331"/><text x="12.7682%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="12.8120%" y="405" width="0.0159%" height="15" fill="rgb(215,49,53)" fg:x="13693" fg:w="17"/><text x="13.0620%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="12.8120%" y="389" width="0.0159%" height="15" fill="rgb(245,162,40)" fg:x="13693" fg:w="17"/><text x="13.0620%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (21 samples, 0.02%)</title><rect x="12.8495%" y="373" width="0.0196%" height="15" fill="rgb(229,68,17)" fg:x="13733" fg:w="21"/><text x="13.0995%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (21 samples, 0.02%)</title><rect x="12.8495%" y="357" width="0.0196%" height="15" fill="rgb(213,182,10)" fg:x="13733" fg:w="21"/><text x="13.0995%" y="367.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (20 samples, 0.02%)</title><rect x="12.8504%" y="341" width="0.0187%" height="15" fill="rgb(245,125,30)" fg:x="13734" fg:w="20"/><text x="13.1004%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (37 samples, 0.03%)</title><rect x="12.8401%" y="405" width="0.0346%" height="15" fill="rgb(232,202,2)" fg:x="13723" fg:w="37"/><text x="13.0901%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (37 samples, 0.03%)</title><rect x="12.8401%" y="389" width="0.0346%" height="15" fill="rgb(237,140,51)" fg:x="13723" fg:w="37"/><text x="13.0901%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (403 samples, 0.38%)</title><rect x="12.5042%" y="501" width="0.3771%" height="15" fill="rgb(236,157,25)" fg:x="13364" fg:w="403"/><text x="12.7542%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (403 samples, 0.38%)</title><rect x="12.5042%" y="485" width="0.3771%" height="15" fill="rgb(219,209,0)" fg:x="13364" fg:w="403"/><text x="12.7542%" y="495.50"></text></g><g><title>rust_dealloc (57 samples, 0.05%)</title><rect x="12.8280%" y="469" width="0.0533%" height="15" fill="rgb(240,116,54)" fg:x="13710" fg:w="57"/><text x="13.0780%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (48 samples, 0.04%)</title><rect x="12.8364%" y="453" width="0.0449%" height="15" fill="rgb(216,10,36)" fg:x="13719" fg:w="48"/><text x="13.0864%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (44 samples, 0.04%)</title><rect x="12.8401%" y="437" width="0.0412%" height="15" fill="rgb(222,72,44)" fg:x="13723" fg:w="44"/><text x="13.0901%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (44 samples, 0.04%)</title><rect x="12.8401%" y="421" width="0.0412%" height="15" fill="rgb(232,159,9)" fg:x="13723" fg:w="44"/><text x="13.0901%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="12.9262%" y="309" width="0.0112%" height="15" fill="rgb(210,39,32)" fg:x="13815" fg:w="12"/><text x="13.1762%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="12.9262%" y="293" width="0.0112%" height="15" fill="rgb(216,194,45)" fg:x="13815" fg:w="12"/><text x="13.1762%" y="303.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="12.9262%" y="277" width="0.0112%" height="15" fill="rgb(218,18,35)" fg:x="13815" fg:w="12"/><text x="13.1762%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="12.9262%" y="261" width="0.0112%" height="15" fill="rgb(207,83,51)" fg:x="13815" fg:w="12"/><text x="13.1762%" y="271.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (31 samples, 0.03%)</title><rect x="12.9103%" y="405" width="0.0290%" height="15" fill="rgb(225,63,43)" fg:x="13798" fg:w="31"/><text x="13.1603%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (31 samples, 0.03%)</title><rect x="12.9103%" y="389" width="0.0290%" height="15" fill="rgb(207,57,36)" fg:x="13798" fg:w="31"/><text x="13.1603%" y="399.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="12.9262%" y="373" width="0.0131%" height="15" fill="rgb(216,99,33)" fg:x="13815" fg:w="14"/><text x="13.1762%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="12.9262%" y="357" width="0.0131%" height="15" fill="rgb(225,42,16)" fg:x="13815" fg:w="14"/><text x="13.1762%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="12.9262%" y="341" width="0.0131%" height="15" fill="rgb(220,201,45)" fg:x="13815" fg:w="14"/><text x="13.1762%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="12.9262%" y="325" width="0.0131%" height="15" fill="rgb(225,33,4)" fg:x="13815" fg:w="14"/><text x="13.1762%" y="335.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="12.9580%" y="373" width="0.0103%" height="15" fill="rgb(224,33,50)" fg:x="13849" fg:w="11"/><text x="13.2080%" y="383.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="12.9580%" y="357" width="0.0103%" height="15" fill="rgb(246,198,51)" fg:x="13849" fg:w="11"/><text x="13.2080%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (12 samples, 0.01%)</title><rect x="13.0591%" y="277" width="0.0112%" height="15" fill="rgb(205,22,4)" fg:x="13957" fg:w="12"/><text x="13.3091%" y="287.50"></text></g><g><title> (12 samples, 0.01%)</title><rect x="13.0591%" y="261" width="0.0112%" height="15" fill="rgb(206,3,8)" fg:x="13957" fg:w="12"/><text x="13.3091%" y="271.50"></text></g><g><title>snmalloc::Remote::set_info (27 samples, 0.03%)</title><rect x="13.0703%" y="277" width="0.0253%" height="15" fill="rgb(251,23,15)" fg:x="13969" fg:w="27"/><text x="13.3203%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (117 samples, 0.11%)</title><rect x="12.9908%" y="309" width="0.1095%" height="15" fill="rgb(252,88,28)" fg:x="13884" fg:w="117"/><text x="13.2408%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (101 samples, 0.09%)</title><rect x="13.0057%" y="293" width="0.0945%" height="15" fill="rgb(212,127,14)" fg:x="13900" fg:w="101"/><text x="13.2557%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (152 samples, 0.14%)</title><rect x="12.9683%" y="341" width="0.1422%" height="15" fill="rgb(247,145,37)" fg:x="13860" fg:w="152"/><text x="13.2183%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (152 samples, 0.14%)</title><rect x="12.9683%" y="325" width="0.1422%" height="15" fill="rgb(209,117,53)" fg:x="13860" fg:w="152"/><text x="13.2183%" y="335.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="13.1002%" y="309" width="0.0103%" height="15" fill="rgb(212,90,42)" fg:x="14001" fg:w="11"/><text x="13.3502%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (167 samples, 0.16%)</title><rect x="12.9683%" y="373" width="0.1563%" height="15" fill="rgb(218,164,37)" fg:x="13860" fg:w="167"/><text x="13.2183%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (167 samples, 0.16%)</title><rect x="12.9683%" y="357" width="0.1563%" height="15" fill="rgb(246,65,34)" fg:x="13860" fg:w="167"/><text x="13.2183%" y="367.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="13.1105%" y="341" width="0.0140%" height="15" fill="rgb(231,100,33)" fg:x="14012" fg:w="15"/><text x="13.3605%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="13.1105%" y="325" width="0.0140%" height="15" fill="rgb(228,126,14)" fg:x="14012" fg:w="15"/><text x="13.3605%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (15 samples, 0.01%)</title><rect x="13.1105%" y="309" width="0.0140%" height="15" fill="rgb(215,173,21)" fg:x="14012" fg:w="15"/><text x="13.3605%" y="319.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="13.1105%" y="293" width="0.0140%" height="15" fill="rgb(210,6,40)" fg:x="14012" fg:w="15"/><text x="13.3605%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (203 samples, 0.19%)</title><rect x="12.9487%" y="389" width="0.1899%" height="15" fill="rgb(212,48,18)" fg:x="13839" fg:w="203"/><text x="13.1987%" y="399.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="13.1246%" y="373" width="0.0140%" height="15" fill="rgb(230,214,11)" fg:x="14027" fg:w="15"/><text x="13.3746%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="13.1246%" y="357" width="0.0140%" height="15" fill="rgb(254,105,39)" fg:x="14027" fg:w="15"/><text x="13.3746%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="13.1246%" y="341" width="0.0140%" height="15" fill="rgb(245,158,5)" fg:x="14027" fg:w="15"/><text x="13.3746%" y="351.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="13.1246%" y="325" width="0.0140%" height="15" fill="rgb(249,208,11)" fg:x="14027" fg:w="15"/><text x="13.3746%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (258 samples, 0.24%)</title><rect x="12.9037%" y="453" width="0.2414%" height="15" fill="rgb(210,39,28)" fg:x="13791" fg:w="258"/><text x="13.1537%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (258 samples, 0.24%)</title><rect x="12.9037%" y="437" width="0.2414%" height="15" fill="rgb(211,56,53)" fg:x="13791" fg:w="258"/><text x="13.1537%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (258 samples, 0.24%)</title><rect x="12.9037%" y="421" width="0.2414%" height="15" fill="rgb(226,201,30)" fg:x="13791" fg:w="258"/><text x="13.1537%" y="431.50"></text></g><g><title>rust_dealloc (220 samples, 0.21%)</title><rect x="12.9393%" y="405" width="0.2058%" height="15" fill="rgb(239,101,34)" fg:x="13829" fg:w="220"/><text x="13.1893%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (11 samples, 0.01%)</title><rect x="13.6523%" y="277" width="0.0103%" height="15" fill="rgb(226,209,5)" fg:x="14591" fg:w="11"/><text x="13.9023%" y="287.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (11 samples, 0.01%)</title><rect x="13.6523%" y="261" width="0.0103%" height="15" fill="rgb(250,105,47)" fg:x="14591" fg:w="11"/><text x="13.9023%" y="271.50"></text></g><g><title>rust_dealloc (24 samples, 0.02%)</title><rect x="13.6822%" y="181" width="0.0225%" height="15" fill="rgb(230,72,3)" fg:x="14623" fg:w="24"/><text x="13.9322%" y="191.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (20 samples, 0.02%)</title><rect x="13.7739%" y="149" width="0.0187%" height="15" fill="rgb(232,218,39)" fg:x="14721" fg:w="20"/><text x="14.0239%" y="159.50"></text></g><g><title> (20 samples, 0.02%)</title><rect x="13.7739%" y="133" width="0.0187%" height="15" fill="rgb(248,166,6)" fg:x="14721" fg:w="20"/><text x="14.0239%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (105 samples, 0.10%)</title><rect x="13.7103%" y="181" width="0.0982%" height="15" fill="rgb(247,89,20)" fg:x="14653" fg:w="105"/><text x="13.9603%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (96 samples, 0.09%)</title><rect x="13.7187%" y="165" width="0.0898%" height="15" fill="rgb(248,130,54)" fg:x="14662" fg:w="96"/><text x="13.9687%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (14 samples, 0.01%)</title><rect x="13.7954%" y="149" width="0.0131%" height="15" fill="rgb(234,196,4)" fg:x="14744" fg:w="14"/><text x="14.0454%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (148 samples, 0.14%)</title><rect x="13.6813%" y="213" width="0.1385%" height="15" fill="rgb(250,143,31)" fg:x="14622" fg:w="148"/><text x="13.9313%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (148 samples, 0.14%)</title><rect x="13.6813%" y="197" width="0.1385%" height="15" fill="rgb(211,110,34)" fg:x="14622" fg:w="148"/><text x="13.9313%" y="207.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="13.8085%" y="181" width="0.0112%" height="15" fill="rgb(215,124,48)" fg:x="14758" fg:w="12"/><text x="14.0585%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (151 samples, 0.14%)</title><rect x="13.6813%" y="245" width="0.1413%" height="15" fill="rgb(216,46,13)" fg:x="14622" fg:w="151"/><text x="13.9313%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (151 samples, 0.14%)</title><rect x="13.6813%" y="229" width="0.1413%" height="15" fill="rgb(205,184,25)" fg:x="14622" fg:w="151"/><text x="13.9313%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (171 samples, 0.16%)</title><rect x="13.6710%" y="261" width="0.1600%" height="15" fill="rgb(228,1,10)" fg:x="14611" fg:w="171"/><text x="13.9210%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (720 samples, 0.67%)</title><rect x="13.1667%" y="357" width="0.6737%" height="15" fill="rgb(213,116,27)" fg:x="14072" fg:w="720"/><text x="13.4167%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (716 samples, 0.67%)</title><rect x="13.1704%" y="341" width="0.6699%" height="15" fill="rgb(241,95,50)" fg:x="14076" fg:w="716"/><text x="13.4204%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (708 samples, 0.66%)</title><rect x="13.1779%" y="325" width="0.6624%" height="15" fill="rgb(238,48,32)" fg:x="14084" fg:w="708"/><text x="13.4279%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (708 samples, 0.66%)</title><rect x="13.1779%" y="309" width="0.6624%" height="15" fill="rgb(235,113,49)" fg:x="14084" fg:w="708"/><text x="13.4279%" y="319.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (708 samples, 0.66%)</title><rect x="13.1779%" y="293" width="0.6624%" height="15" fill="rgb(205,127,43)" fg:x="14084" fg:w="708"/><text x="13.4279%" y="303.50"></text></g><g><title>rust_dealloc (190 samples, 0.18%)</title><rect x="13.6626%" y="277" width="0.1778%" height="15" fill="rgb(250,162,2)" fg:x="14602" fg:w="190"/><text x="13.9126%" y="287.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (757 samples, 0.71%)</title><rect x="13.1479%" y="421" width="0.7083%" height="15" fill="rgb(220,13,41)" fg:x="14052" fg:w="757"/><text x="13.3979%" y="431.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (752 samples, 0.70%)</title><rect x="13.1526%" y="405" width="0.7036%" height="15" fill="rgb(249,221,25)" fg:x="14057" fg:w="752"/><text x="13.4026%" y="415.50"></text></g><g><title>core::mem::drop (737 samples, 0.69%)</title><rect x="13.1667%" y="389" width="0.6896%" height="15" fill="rgb(215,208,19)" fg:x="14072" fg:w="737"/><text x="13.4167%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (737 samples, 0.69%)</title><rect x="13.1667%" y="373" width="0.6896%" height="15" fill="rgb(236,175,2)" fg:x="14072" fg:w="737"/><text x="13.4167%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (17 samples, 0.02%)</title><rect x="13.8403%" y="357" width="0.0159%" height="15" fill="rgb(241,52,2)" fg:x="14792" fg:w="17"/><text x="14.0903%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="13.8403%" y="341" width="0.0159%" height="15" fill="rgb(248,140,14)" fg:x="14792" fg:w="17"/><text x="14.0903%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="13.8403%" y="325" width="0.0159%" height="15" fill="rgb(253,22,42)" fg:x="14792" fg:w="17"/><text x="14.0903%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="13.8403%" y="309" width="0.0159%" height="15" fill="rgb(234,61,47)" fg:x="14792" fg:w="17"/><text x="14.0903%" y="319.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="13.8403%" y="293" width="0.0159%" height="15" fill="rgb(208,226,15)" fg:x="14792" fg:w="17"/><text x="14.0903%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="13.8403%" y="277" width="0.0159%" height="15" fill="rgb(217,221,4)" fg:x="14792" fg:w="17"/><text x="14.0903%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="13.9021%" y="293" width="0.0140%" height="15" fill="rgb(212,174,34)" fg:x="14858" fg:w="15"/><text x="14.1521%" y="303.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="13.9021%" y="277" width="0.0140%" height="15" fill="rgb(253,83,4)" fg:x="14858" fg:w="15"/><text x="14.1521%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (50 samples, 0.05%)</title><rect x="13.8796%" y="325" width="0.0468%" height="15" fill="rgb(250,195,49)" fg:x="14834" fg:w="50"/><text x="14.1296%" y="335.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (44 samples, 0.04%)</title><rect x="13.8853%" y="309" width="0.0412%" height="15" fill="rgb(241,192,25)" fg:x="14840" fg:w="44"/><text x="14.1353%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="13.9161%" y="293" width="0.0103%" height="15" fill="rgb(208,124,10)" fg:x="14873" fg:w="11"/><text x="14.1661%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (63 samples, 0.06%)</title><rect x="13.8740%" y="357" width="0.0589%" height="15" fill="rgb(222,33,0)" fg:x="14828" fg:w="63"/><text x="14.1240%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (63 samples, 0.06%)</title><rect x="13.8740%" y="341" width="0.0589%" height="15" fill="rgb(234,209,28)" fg:x="14828" fg:w="63"/><text x="14.1240%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (87 samples, 0.08%)</title><rect x="13.8647%" y="405" width="0.0814%" height="15" fill="rgb(224,11,23)" fg:x="14818" fg:w="87"/><text x="14.1147%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (77 samples, 0.07%)</title><rect x="13.8740%" y="389" width="0.0720%" height="15" fill="rgb(232,99,1)" fg:x="14828" fg:w="77"/><text x="14.1240%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (77 samples, 0.07%)</title><rect x="13.8740%" y="373" width="0.0720%" height="15" fill="rgb(237,95,45)" fg:x="14828" fg:w="77"/><text x="14.1240%" y="383.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="13.9330%" y="357" width="0.0131%" height="15" fill="rgb(208,109,11)" fg:x="14891" fg:w="14"/><text x="14.1830%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="13.9330%" y="341" width="0.0131%" height="15" fill="rgb(216,190,48)" fg:x="14891" fg:w="14"/><text x="14.1830%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="13.9330%" y="325" width="0.0131%" height="15" fill="rgb(251,171,36)" fg:x="14891" fg:w="14"/><text x="14.1830%" y="335.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="13.9330%" y="309" width="0.0131%" height="15" fill="rgb(230,62,22)" fg:x="14891" fg:w="14"/><text x="14.1830%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,130 samples, 1.06%)</title><rect x="12.8906%" y="485" width="1.0573%" height="15" fill="rgb(225,114,35)" fg:x="13777" fg:w="1130"/><text x="13.1406%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,116 samples, 1.04%)</title><rect x="12.9037%" y="469" width="1.0442%" height="15" fill="rgb(215,118,42)" fg:x="13791" fg:w="1116"/><text x="13.1537%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (858 samples, 0.80%)</title><rect x="13.1451%" y="453" width="0.8028%" height="15" fill="rgb(243,119,21)" fg:x="14049" fg:w="858"/><text x="13.3951%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (858 samples, 0.80%)</title><rect x="13.1451%" y="437" width="0.8028%" height="15" fill="rgb(252,177,53)" fg:x="14049" fg:w="858"/><text x="13.3951%" y="447.50"></text></g><g><title>rust_dealloc (98 samples, 0.09%)</title><rect x="13.8562%" y="421" width="0.0917%" height="15" fill="rgb(237,209,29)" fg:x="14809" fg:w="98"/><text x="14.1062%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (26 samples, 0.02%)</title><rect x="13.9479%" y="485" width="0.0243%" height="15" fill="rgb(212,65,23)" fg:x="14907" fg:w="26"/><text x="14.1979%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (25 samples, 0.02%)</title><rect x="13.9489%" y="469" width="0.0234%" height="15" fill="rgb(230,222,46)" fg:x="14908" fg:w="25"/><text x="14.1989%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (25 samples, 0.02%)</title><rect x="13.9489%" y="453" width="0.0234%" height="15" fill="rgb(215,135,32)" fg:x="14908" fg:w="25"/><text x="14.1989%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (25 samples, 0.02%)</title><rect x="13.9489%" y="437" width="0.0234%" height="15" fill="rgb(246,101,22)" fg:x="14908" fg:w="25"/><text x="14.1989%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (25 samples, 0.02%)</title><rect x="13.9489%" y="421" width="0.0234%" height="15" fill="rgb(206,107,13)" fg:x="14908" fg:w="25"/><text x="14.1989%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (43 samples, 0.04%)</title><rect x="13.9723%" y="485" width="0.0402%" height="15" fill="rgb(250,100,44)" fg:x="14933" fg:w="43"/><text x="14.2223%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (43 samples, 0.04%)</title><rect x="13.9723%" y="469" width="0.0402%" height="15" fill="rgb(231,147,38)" fg:x="14933" fg:w="43"/><text x="14.2223%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (43 samples, 0.04%)</title><rect x="13.9723%" y="453" width="0.0402%" height="15" fill="rgb(229,8,40)" fg:x="14933" fg:w="43"/><text x="14.2223%" y="463.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (43 samples, 0.04%)</title><rect x="13.9723%" y="437" width="0.0402%" height="15" fill="rgb(221,135,30)" fg:x="14933" fg:w="43"/><text x="14.2223%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::_::&lt;impl abi_stable::std_types::boxed::BoxVtable_Ref&lt;T&gt;&gt;::destructor (39 samples, 0.04%)</title><rect x="13.9760%" y="421" width="0.0365%" height="15" fill="rgb(249,193,18)" fg:x="14937" fg:w="39"/><text x="14.2260%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (313 samples, 0.29%)</title><rect x="14.1856%" y="389" width="0.2929%" height="15" fill="rgb(209,133,39)" fg:x="15161" fg:w="313"/><text x="14.4356%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (313 samples, 0.29%)</title><rect x="14.1856%" y="373" width="0.2929%" height="15" fill="rgb(232,100,14)" fg:x="15161" fg:w="313"/><text x="14.4356%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (313 samples, 0.29%)</title><rect x="14.1856%" y="357" width="0.2929%" height="15" fill="rgb(224,185,1)" fg:x="15161" fg:w="313"/><text x="14.4356%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (313 samples, 0.29%)</title><rect x="14.1856%" y="341" width="0.2929%" height="15" fill="rgb(223,139,8)" fg:x="15161" fg:w="313"/><text x="14.4356%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (313 samples, 0.29%)</title><rect x="14.1856%" y="325" width="0.2929%" height="15" fill="rgb(232,213,38)" fg:x="15161" fg:w="313"/><text x="14.4356%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (308 samples, 0.29%)</title><rect x="14.1903%" y="309" width="0.2882%" height="15" fill="rgb(207,94,22)" fg:x="15166" fg:w="308"/><text x="14.4403%" y="319.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (348 samples, 0.33%)</title><rect x="14.1706%" y="405" width="0.3256%" height="15" fill="rgb(219,183,54)" fg:x="15145" fg:w="348"/><text x="14.4206%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="14.4785%" y="389" width="0.0178%" height="15" fill="rgb(216,185,54)" fg:x="15474" fg:w="19"/><text x="14.7285%" y="399.50"></text></g><g><title>alloc::alloc::box_free (19 samples, 0.02%)</title><rect x="14.4785%" y="373" width="0.0178%" height="15" fill="rgb(254,217,39)" fg:x="15474" fg:w="19"/><text x="14.7285%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="14.4785%" y="357" width="0.0178%" height="15" fill="rgb(240,178,23)" fg:x="15474" fg:w="19"/><text x="14.7285%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="14.4785%" y="341" width="0.0178%" height="15" fill="rgb(218,11,47)" fg:x="15474" fg:w="19"/><text x="14.7285%" y="351.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="14.4785%" y="325" width="0.0178%" height="15" fill="rgb(218,51,51)" fg:x="15474" fg:w="19"/><text x="14.7285%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="14.4785%" y="309" width="0.0178%" height="15" fill="rgb(238,126,27)" fg:x="15474" fg:w="19"/><text x="14.7285%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (37 samples, 0.03%)</title><rect x="14.5281%" y="309" width="0.0346%" height="15" fill="rgb(249,202,22)" fg:x="15527" fg:w="37"/><text x="14.7781%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (28 samples, 0.03%)</title><rect x="14.5365%" y="293" width="0.0262%" height="15" fill="rgb(254,195,49)" fg:x="15536" fg:w="28"/><text x="14.7865%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (50 samples, 0.05%)</title><rect x="14.5168%" y="341" width="0.0468%" height="15" fill="rgb(208,123,14)" fg:x="15515" fg:w="50"/><text x="14.7668%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (50 samples, 0.05%)</title><rect x="14.5168%" y="325" width="0.0468%" height="15" fill="rgb(224,200,8)" fg:x="15515" fg:w="50"/><text x="14.7668%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (56 samples, 0.05%)</title><rect x="14.5168%" y="373" width="0.0524%" height="15" fill="rgb(217,61,36)" fg:x="15515" fg:w="56"/><text x="14.7668%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (56 samples, 0.05%)</title><rect x="14.5168%" y="357" width="0.0524%" height="15" fill="rgb(206,35,45)" fg:x="15515" fg:w="56"/><text x="14.7668%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (74 samples, 0.07%)</title><rect x="14.5084%" y="389" width="0.0692%" height="15" fill="rgb(217,65,33)" fg:x="15506" fg:w="74"/><text x="14.7584%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (587 samples, 0.55%)</title><rect x="14.0303%" y="453" width="0.5492%" height="15" fill="rgb(222,158,48)" fg:x="14995" fg:w="587"/><text x="14.2803%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (587 samples, 0.55%)</title><rect x="14.0303%" y="437" width="0.5492%" height="15" fill="rgb(254,2,54)" fg:x="14995" fg:w="587"/><text x="14.2803%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (587 samples, 0.55%)</title><rect x="14.0303%" y="421" width="0.5492%" height="15" fill="rgb(250,143,38)" fg:x="14995" fg:w="587"/><text x="14.2803%" y="431.50"></text></g><g><title>rust_dealloc (89 samples, 0.08%)</title><rect x="14.4962%" y="405" width="0.0833%" height="15" fill="rgb(248,25,0)" fg:x="15493" fg:w="89"/><text x="14.7462%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (612 samples, 0.57%)</title><rect x="14.0125%" y="469" width="0.5726%" height="15" fill="rgb(206,152,27)" fg:x="14976" fg:w="612"/><text x="14.2625%" y="479.50"></text></g><g><title>abi_stable::std_types::arc::private::RArc&lt;T&gt;::data (373 samples, 0.35%)</title><rect x="14.6590%" y="309" width="0.3490%" height="15" fill="rgb(240,77,30)" fg:x="15667" fg:w="373"/><text x="14.9090%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="15.0333%" y="181" width="0.0150%" height="15" fill="rgb(231,5,3)" fg:x="16067" fg:w="16"/><text x="15.2833%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="15.0333%" y="165" width="0.0150%" height="15" fill="rgb(207,226,32)" fg:x="16067" fg:w="16"/><text x="15.2833%" y="175.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="15.0333%" y="149" width="0.0150%" height="15" fill="rgb(222,207,47)" fg:x="16067" fg:w="16"/><text x="15.2833%" y="159.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="15.0333%" y="133" width="0.0150%" height="15" fill="rgb(229,115,45)" fg:x="16067" fg:w="16"/><text x="15.2833%" y="143.50"></text></g><g><title>core::mem::drop (566 samples, 0.53%)</title><rect x="15.0324%" y="229" width="0.5296%" height="15" fill="rgb(224,191,6)" fg:x="16066" fg:w="566"/><text x="15.2824%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (566 samples, 0.53%)</title><rect x="15.0324%" y="213" width="0.5296%" height="15" fill="rgb(230,227,24)" fg:x="16066" fg:w="566"/><text x="15.2824%" y="223.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (566 samples, 0.53%)</title><rect x="15.0324%" y="197" width="0.5296%" height="15" fill="rgb(228,80,19)" fg:x="16066" fg:w="566"/><text x="15.2824%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (549 samples, 0.51%)</title><rect x="15.0483%" y="181" width="0.5137%" height="15" fill="rgb(247,229,0)" fg:x="16083" fg:w="549"/><text x="15.2983%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_sub (549 samples, 0.51%)</title><rect x="15.0483%" y="165" width="0.5137%" height="15" fill="rgb(237,194,15)" fg:x="16083" fg:w="549"/><text x="15.2983%" y="175.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (17 samples, 0.02%)</title><rect x="15.5863%" y="181" width="0.0159%" height="15" fill="rgb(219,203,20)" fg:x="16658" fg:w="17"/><text x="15.8363%" y="191.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (17 samples, 0.02%)</title><rect x="15.5863%" y="165" width="0.0159%" height="15" fill="rgb(234,128,8)" fg:x="16658" fg:w="17"/><text x="15.8363%" y="175.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (24 samples, 0.02%)</title><rect x="15.6770%" y="53" width="0.0225%" height="15" fill="rgb(248,202,8)" fg:x="16755" fg:w="24"/><text x="15.9270%" y="63.50"></text></g><g><title> (24 samples, 0.02%)</title><rect x="15.6770%" y="37" width="0.0225%" height="15" fill="rgb(206,104,37)" fg:x="16755" fg:w="24"/><text x="15.9270%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (96 samples, 0.09%)</title><rect x="15.6246%" y="85" width="0.0898%" height="15" fill="rgb(223,8,27)" fg:x="16699" fg:w="96"/><text x="15.8746%" y="95.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (88 samples, 0.08%)</title><rect x="15.6321%" y="69" width="0.0823%" height="15" fill="rgb(216,217,28)" fg:x="16707" fg:w="88"/><text x="15.8821%" y="79.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="15.7032%" y="53" width="0.0112%" height="15" fill="rgb(249,199,1)" fg:x="16783" fg:w="12"/><text x="15.9532%" y="63.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (132 samples, 0.12%)</title><rect x="15.6144%" y="117" width="0.1235%" height="15" fill="rgb(240,85,17)" fg:x="16688" fg:w="132"/><text x="15.8644%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (132 samples, 0.12%)</title><rect x="15.6144%" y="101" width="0.1235%" height="15" fill="rgb(206,108,45)" fg:x="16688" fg:w="132"/><text x="15.8644%" y="111.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (25 samples, 0.02%)</title><rect x="15.7145%" y="85" width="0.0234%" height="15" fill="rgb(245,210,41)" fg:x="16795" fg:w="25"/><text x="15.9645%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (141 samples, 0.13%)</title><rect x="15.6144%" y="149" width="0.1319%" height="15" fill="rgb(206,13,37)" fg:x="16688" fg:w="141"/><text x="15.8644%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (141 samples, 0.13%)</title><rect x="15.6144%" y="133" width="0.1319%" height="15" fill="rgb(250,61,18)" fg:x="16688" fg:w="141"/><text x="15.8644%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (156 samples, 0.15%)</title><rect x="15.6069%" y="165" width="0.1460%" height="15" fill="rgb(235,172,48)" fg:x="16680" fg:w="156"/><text x="15.8569%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (787 samples, 0.74%)</title><rect x="15.0240%" y="245" width="0.7364%" height="15" fill="rgb(249,201,17)" fg:x="16057" fg:w="787"/><text x="15.2740%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (212 samples, 0.20%)</title><rect x="15.5620%" y="229" width="0.1984%" height="15" fill="rgb(219,208,6)" fg:x="16632" fg:w="212"/><text x="15.8120%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (212 samples, 0.20%)</title><rect x="15.5620%" y="213" width="0.1984%" height="15" fill="rgb(248,31,23)" fg:x="16632" fg:w="212"/><text x="15.8120%" y="223.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (212 samples, 0.20%)</title><rect x="15.5620%" y="197" width="0.1984%" height="15" fill="rgb(245,15,42)" fg:x="16632" fg:w="212"/><text x="15.8120%" y="207.50"></text></g><g><title>rust_dealloc (169 samples, 0.16%)</title><rect x="15.6022%" y="181" width="0.1581%" height="15" fill="rgb(222,217,39)" fg:x="16675" fg:w="169"/><text x="15.8522%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (816 samples, 0.76%)</title><rect x="15.7603%" y="245" width="0.7635%" height="15" fill="rgb(210,219,27)" fg:x="16844" fg:w="816"/><text x="16.0103%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_sub (816 samples, 0.76%)</title><rect x="15.7603%" y="229" width="0.7635%" height="15" fill="rgb(252,166,36)" fg:x="16844" fg:w="816"/><text x="16.0103%" y="239.50"></text></g><g><title>size_to_sizeclass (19 samples, 0.02%)</title><rect x="16.5463%" y="213" width="0.0178%" height="15" fill="rgb(245,132,34)" fg:x="17684" fg:w="19"/><text x="16.7963%" y="223.50"></text></g><g><title>sizeclass_to_size (15 samples, 0.01%)</title><rect x="16.5715%" y="149" width="0.0140%" height="15" fill="rgb(236,54,3)" fg:x="17711" fg:w="15"/><text x="16.8215%" y="159.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (15 samples, 0.01%)</title><rect x="16.5715%" y="133" width="0.0140%" height="15" fill="rgb(241,173,43)" fg:x="17711" fg:w="15"/><text x="16.8215%" y="143.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="16.6071%" y="117" width="0.0168%" height="15" fill="rgb(215,190,9)" fg:x="17749" fg:w="18"/><text x="16.8571%" y="127.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="16.6071%" y="101" width="0.0168%" height="15" fill="rgb(242,101,16)" fg:x="17749" fg:w="18"/><text x="16.8571%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (53 samples, 0.05%)</title><rect x="16.5856%" y="149" width="0.0496%" height="15" fill="rgb(223,190,21)" fg:x="17726" fg:w="53"/><text x="16.8356%" y="159.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (42 samples, 0.04%)</title><rect x="16.5959%" y="133" width="0.0393%" height="15" fill="rgb(215,228,25)" fg:x="17737" fg:w="42"/><text x="16.8459%" y="143.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="16.6239%" y="117" width="0.0112%" height="15" fill="rgb(225,36,22)" fg:x="17767" fg:w="12"/><text x="16.8739%" y="127.50"></text></g><g><title>rust_dealloc (120 samples, 0.11%)</title><rect x="16.5238%" y="245" width="0.1123%" height="15" fill="rgb(251,106,46)" fg:x="17660" fg:w="120"/><text x="16.7738%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (105 samples, 0.10%)</title><rect x="16.5379%" y="229" width="0.0982%" height="15" fill="rgb(208,90,1)" fg:x="17675" fg:w="105"/><text x="16.7879%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (77 samples, 0.07%)</title><rect x="16.5641%" y="213" width="0.0720%" height="15" fill="rgb(243,10,4)" fg:x="17703" fg:w="77"/><text x="16.8141%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (77 samples, 0.07%)</title><rect x="16.5641%" y="197" width="0.0720%" height="15" fill="rgb(212,137,27)" fg:x="17703" fg:w="77"/><text x="16.8141%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (77 samples, 0.07%)</title><rect x="16.5641%" y="181" width="0.0720%" height="15" fill="rgb(231,220,49)" fg:x="17703" fg:w="77"/><text x="16.8141%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (77 samples, 0.07%)</title><rect x="16.5641%" y="165" width="0.0720%" height="15" fill="rgb(237,96,20)" fg:x="17703" fg:w="77"/><text x="16.8141%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,169 samples, 2.03%)</title><rect x="14.6085%" y="373" width="2.0295%" height="15" fill="rgb(239,229,30)" fg:x="15613" fg:w="2169"/><text x="14.8585%" y="383.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (2,167 samples, 2.03%)</title><rect x="14.6104%" y="357" width="2.0276%" height="15" fill="rgb(219,65,33)" fg:x="15615" fg:w="2167"/><text x="14.8604%" y="367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (2,141 samples, 2.00%)</title><rect x="14.6347%" y="341" width="2.0033%" height="15" fill="rgb(243,134,7)" fg:x="15641" fg:w="2141"/><text x="14.8847%" y="351.50">c..</text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (2,141 samples, 2.00%)</title><rect x="14.6347%" y="325" width="2.0033%" height="15" fill="rgb(216,177,54)" fg:x="15641" fg:w="2141"/><text x="14.8847%" y="335.50">a..</text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (1,742 samples, 1.63%)</title><rect x="15.0080%" y="309" width="1.6299%" height="15" fill="rgb(211,160,20)" fg:x="16040" fg:w="1742"/><text x="15.2580%" y="319.50"></text></g><g><title>core::mem::drop (1,728 samples, 1.62%)</title><rect x="15.0211%" y="293" width="1.6168%" height="15" fill="rgb(239,85,39)" fg:x="16054" fg:w="1728"/><text x="15.2711%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,728 samples, 1.62%)</title><rect x="15.0211%" y="277" width="1.6168%" height="15" fill="rgb(232,125,22)" fg:x="16054" fg:w="1728"/><text x="15.2711%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,728 samples, 1.62%)</title><rect x="15.0211%" y="261" width="1.6168%" height="15" fill="rgb(244,57,34)" fg:x="16054" fg:w="1728"/><text x="15.2711%" y="271.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (2,202 samples, 2.06%)</title><rect x="14.5851%" y="437" width="2.0603%" height="15" fill="rgb(214,203,32)" fg:x="15588" fg:w="2202"/><text x="14.8351%" y="447.50">a..</text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (2,191 samples, 2.05%)</title><rect x="14.5954%" y="421" width="2.0500%" height="15" fill="rgb(207,58,43)" fg:x="15599" fg:w="2191"/><text x="14.8454%" y="431.50">a..</text></g><g><title>core::mem::drop (2,177 samples, 2.04%)</title><rect x="14.6085%" y="405" width="2.0369%" height="15" fill="rgb(215,193,15)" fg:x="15613" fg:w="2177"/><text x="14.8585%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,177 samples, 2.04%)</title><rect x="14.6085%" y="389" width="2.0369%" height="15" fill="rgb(232,15,44)" fg:x="15613" fg:w="2177"/><text x="14.8585%" y="399.50">c..</text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="16.6567%" y="341" width="0.0112%" height="15" fill="rgb(212,3,48)" fg:x="17802" fg:w="12"/><text x="16.9067%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (48 samples, 0.04%)</title><rect x="16.6688%" y="341" width="0.0449%" height="15" fill="rgb(218,128,7)" fg:x="17815" fg:w="48"/><text x="16.9188%" y="351.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (36 samples, 0.03%)</title><rect x="16.6801%" y="325" width="0.0337%" height="15" fill="rgb(226,216,39)" fg:x="17827" fg:w="36"/><text x="16.9301%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (65 samples, 0.06%)</title><rect x="16.6558%" y="373" width="0.0608%" height="15" fill="rgb(243,47,51)" fg:x="17801" fg:w="65"/><text x="16.9058%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (65 samples, 0.06%)</title><rect x="16.6558%" y="357" width="0.0608%" height="15" fill="rgb(241,183,40)" fg:x="17801" fg:w="65"/><text x="16.9058%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (74 samples, 0.07%)</title><rect x="16.6558%" y="405" width="0.0692%" height="15" fill="rgb(231,217,32)" fg:x="17801" fg:w="74"/><text x="16.9058%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (74 samples, 0.07%)</title><rect x="16.6558%" y="389" width="0.0692%" height="15" fill="rgb(229,61,38)" fg:x="17801" fg:w="74"/><text x="16.9058%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (84 samples, 0.08%)</title><rect x="16.6558%" y="421" width="0.0786%" height="15" fill="rgb(225,210,5)" fg:x="17801" fg:w="84"/><text x="16.9058%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,300 samples, 2.15%)</title><rect x="14.5851%" y="469" width="2.1520%" height="15" fill="rgb(231,79,45)" fg:x="15588" fg:w="2300"/><text x="14.8351%" y="479.50">c..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (2,300 samples, 2.15%)</title><rect x="14.5851%" y="453" width="2.1520%" height="15" fill="rgb(224,100,7)" fg:x="15588" fg:w="2300"/><text x="14.8351%" y="463.50">a..</text></g><g><title>rust_dealloc (98 samples, 0.09%)</title><rect x="16.6455%" y="437" width="0.0917%" height="15" fill="rgb(241,198,18)" fg:x="17790" fg:w="98"/><text x="16.8955%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (38 samples, 0.04%)</title><rect x="16.7437%" y="453" width="0.0356%" height="15" fill="rgb(252,97,53)" fg:x="17895" fg:w="38"/><text x="16.9937%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="16.7839%" y="437" width="0.0196%" height="15" fill="rgb(220,88,7)" fg:x="17938" fg:w="21"/><text x="17.0339%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (21 samples, 0.02%)</title><rect x="16.7839%" y="421" width="0.0196%" height="15" fill="rgb(213,176,14)" fg:x="17938" fg:w="21"/><text x="17.0339%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (82 samples, 0.08%)</title><rect x="16.7372%" y="469" width="0.0767%" height="15" fill="rgb(246,73,7)" fg:x="17888" fg:w="82"/><text x="16.9872%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (37 samples, 0.03%)</title><rect x="16.7793%" y="453" width="0.0346%" height="15" fill="rgb(245,64,36)" fg:x="17933" fg:w="37"/><text x="17.0293%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::slices::private::RSlice&lt;u8&gt;,abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="16.8036%" y="437" width="0.0103%" height="15" fill="rgb(245,80,10)" fg:x="17959" fg:w="11"/><text x="17.0536%" y="447.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="16.8242%" y="437" width="0.0103%" height="15" fill="rgb(232,107,50)" fg:x="17981" fg:w="11"/><text x="17.0742%" y="447.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="16.8242%" y="421" width="0.0103%" height="15" fill="rgb(253,3,0)" fg:x="17981" fg:w="11"/><text x="17.0742%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (52 samples, 0.05%)</title><rect x="16.8410%" y="373" width="0.0487%" height="15" fill="rgb(212,99,53)" fg:x="17999" fg:w="52"/><text x="17.0910%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (40 samples, 0.04%)</title><rect x="16.8522%" y="357" width="0.0374%" height="15" fill="rgb(249,111,54)" fg:x="18011" fg:w="40"/><text x="17.1022%" y="367.50"></text></g><g><title>snmalloc::Remote::set_info (18 samples, 0.02%)</title><rect x="16.8728%" y="341" width="0.0168%" height="15" fill="rgb(249,55,30)" fg:x="18033" fg:w="18"/><text x="17.1228%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (62 samples, 0.06%)</title><rect x="16.8345%" y="437" width="0.0580%" height="15" fill="rgb(237,47,42)" fg:x="17992" fg:w="62"/><text x="17.0845%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (62 samples, 0.06%)</title><rect x="16.8345%" y="421" width="0.0580%" height="15" fill="rgb(211,20,18)" fg:x="17992" fg:w="62"/><text x="17.0845%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (62 samples, 0.06%)</title><rect x="16.8345%" y="405" width="0.0580%" height="15" fill="rgb(231,203,46)" fg:x="17992" fg:w="62"/><text x="17.0845%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (62 samples, 0.06%)</title><rect x="16.8345%" y="389" width="0.0580%" height="15" fill="rgb(237,142,3)" fg:x="17992" fg:w="62"/><text x="17.0845%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (83 samples, 0.08%)</title><rect x="16.8232%" y="453" width="0.0777%" height="15" fill="rgb(241,107,1)" fg:x="17980" fg:w="83"/><text x="17.0732%" y="463.50"></text></g><g><title>rust_dealloc (105 samples, 0.10%)</title><rect x="16.8139%" y="469" width="0.0982%" height="15" fill="rgb(229,83,13)" fg:x="17970" fg:w="105"/><text x="17.0639%" y="479.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="16.9009%" y="453" width="0.0112%" height="15" fill="rgb(241,91,40)" fg:x="18063" fg:w="12"/><text x="17.1509%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (4,309 samples, 4.03%)</title><rect x="12.8813%" y="501" width="4.0318%" height="15" fill="rgb(225,3,45)" fg:x="13767" fg:w="4309"/><text x="13.1313%" y="511.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (3,100 samples, 2.90%)</title><rect x="14.0125%" y="485" width="2.9006%" height="15" fill="rgb(244,223,14)" fg:x="14976" fg:w="3100"/><text x="14.2625%" y="495.50">co..</text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (20 samples, 0.02%)</title><rect x="17.0955%" y="421" width="0.0187%" height="15" fill="rgb(224,124,37)" fg:x="18271" fg:w="20"/><text x="17.3455%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (19 samples, 0.02%)</title><rect x="17.0964%" y="405" width="0.0178%" height="15" fill="rgb(251,171,30)" fg:x="18272" fg:w="19"/><text x="17.3464%" y="415.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (51 samples, 0.05%)</title><rect x="17.0759%" y="437" width="0.0477%" height="15" fill="rgb(236,46,54)" fg:x="18250" fg:w="51"/><text x="17.3259%" y="447.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (57 samples, 0.05%)</title><rect x="17.0712%" y="453" width="0.0533%" height="15" fill="rgb(245,213,5)" fg:x="18245" fg:w="57"/><text x="17.3212%" y="463.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (221 samples, 0.21%)</title><rect x="16.9252%" y="501" width="0.2068%" height="15" fill="rgb(230,144,27)" fg:x="18089" fg:w="221"/><text x="17.1752%" y="511.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (215 samples, 0.20%)</title><rect x="16.9308%" y="485" width="0.2012%" height="15" fill="rgb(220,86,6)" fg:x="18095" fg:w="215"/><text x="17.1808%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (215 samples, 0.20%)</title><rect x="16.9308%" y="469" width="0.2012%" height="15" fill="rgb(240,20,13)" fg:x="18095" fg:w="215"/><text x="17.1808%" y="479.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (11 samples, 0.01%)</title><rect x="17.1966%" y="373" width="0.0103%" height="15" fill="rgb(217,89,34)" fg:x="18379" fg:w="11"/><text x="17.4466%" y="383.50"></text></g><g><title> (11 samples, 0.01%)</title><rect x="17.1966%" y="357" width="0.0103%" height="15" fill="rgb(229,13,5)" fg:x="18379" fg:w="11"/><text x="17.4466%" y="367.50"></text></g><g><title>snmalloc::Remote::set_info (13 samples, 0.01%)</title><rect x="17.2069%" y="373" width="0.0122%" height="15" fill="rgb(244,67,35)" fg:x="18390" fg:w="13"/><text x="17.4569%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (72 samples, 0.07%)</title><rect x="17.1554%" y="405" width="0.0674%" height="15" fill="rgb(221,40,2)" fg:x="18335" fg:w="72"/><text x="17.4054%" y="415.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (60 samples, 0.06%)</title><rect x="17.1666%" y="389" width="0.0561%" height="15" fill="rgb(237,157,21)" fg:x="18347" fg:w="60"/><text x="17.4166%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (93 samples, 0.09%)</title><rect x="17.1479%" y="437" width="0.0870%" height="15" fill="rgb(222,94,11)" fg:x="18327" fg:w="93"/><text x="17.3979%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (93 samples, 0.09%)</title><rect x="17.1479%" y="421" width="0.0870%" height="15" fill="rgb(249,113,6)" fg:x="18327" fg:w="93"/><text x="17.3979%" y="431.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="17.2228%" y="405" width="0.0122%" height="15" fill="rgb(238,137,36)" fg:x="18407" fg:w="13"/><text x="17.4728%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (94 samples, 0.09%)</title><rect x="17.1479%" y="469" width="0.0880%" height="15" fill="rgb(210,102,26)" fg:x="18327" fg:w="94"/><text x="17.3979%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (94 samples, 0.09%)</title><rect x="17.1479%" y="453" width="0.0880%" height="15" fill="rgb(218,30,30)" fg:x="18327" fg:w="94"/><text x="17.3979%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (102 samples, 0.10%)</title><rect x="17.1432%" y="485" width="0.0954%" height="15" fill="rgb(214,67,26)" fg:x="18322" fg:w="102"/><text x="17.3932%" y="495.50"></text></g><g><title>rust_dealloc (127 samples, 0.12%)</title><rect x="17.1320%" y="501" width="0.1188%" height="15" fill="rgb(251,9,53)" fg:x="18310" fg:w="127"/><text x="17.3820%" y="511.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="17.2387%" y="485" width="0.0122%" height="15" fill="rgb(228,204,25)" fg:x="18424" fg:w="13"/><text x="17.4887%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (76 samples, 0.07%)</title><rect x="17.3453%" y="437" width="0.0711%" height="15" fill="rgb(207,153,8)" fg:x="18538" fg:w="76"/><text x="17.5953%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::ge (76 samples, 0.07%)</title><rect x="17.3453%" y="421" width="0.0711%" height="15" fill="rgb(242,9,16)" fg:x="18538" fg:w="76"/><text x="17.5953%" y="431.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (73 samples, 0.07%)</title><rect x="17.3481%" y="405" width="0.0683%" height="15" fill="rgb(217,211,10)" fg:x="18541" fg:w="73"/><text x="17.5981%" y="415.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (73 samples, 0.07%)</title><rect x="17.3481%" y="389" width="0.0683%" height="15" fill="rgb(219,228,52)" fg:x="18541" fg:w="73"/><text x="17.5981%" y="399.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (73 samples, 0.07%)</title><rect x="17.3481%" y="373" width="0.0683%" height="15" fill="rgb(231,92,29)" fg:x="18541" fg:w="73"/><text x="17.5981%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (44 samples, 0.04%)</title><rect x="17.3753%" y="357" width="0.0412%" height="15" fill="rgb(232,8,23)" fg:x="18570" fg:w="44"/><text x="17.6253%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (147 samples, 0.14%)</title><rect x="17.2948%" y="469" width="0.1375%" height="15" fill="rgb(216,211,34)" fg:x="18484" fg:w="147"/><text x="17.5448%" y="479.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (147 samples, 0.14%)</title><rect x="17.2948%" y="453" width="0.1375%" height="15" fill="rgb(236,151,0)" fg:x="18484" fg:w="147"/><text x="17.5448%" y="463.50"></text></g><g><title>core::time::Duration::new (17 samples, 0.02%)</title><rect x="17.4164%" y="437" width="0.0159%" height="15" fill="rgb(209,168,3)" fg:x="18614" fg:w="17"/><text x="17.6664%" y="447.50"></text></g><g><title>std::time::SystemTime::duration_since (162 samples, 0.15%)</title><rect x="17.2948%" y="485" width="0.1516%" height="15" fill="rgb(208,129,28)" fg:x="18484" fg:w="162"/><text x="17.5448%" y="495.50"></text></g><g><title>tremor_common::time::nanotime (15 samples, 0.01%)</title><rect x="17.4324%" y="469" width="0.0140%" height="15" fill="rgb(229,78,22)" fg:x="18631" fg:w="15"/><text x="17.6824%" y="479.50"></text></g><g><title>tremor_common::time::nanotime (918 samples, 0.86%)</title><rect x="17.2518%" y="501" width="0.8589%" height="15" fill="rgb(228,187,13)" fg:x="18438" fg:w="918"/><text x="17.5018%" y="511.50"></text></g><g><title>std::time::SystemTime::now (710 samples, 0.66%)</title><rect x="17.4464%" y="485" width="0.6643%" height="15" fill="rgb(240,119,24)" fg:x="18646" fg:w="710"/><text x="17.6964%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (710 samples, 0.66%)</title><rect x="17.4464%" y="469" width="0.6643%" height="15" fill="rgb(209,194,42)" fg:x="18646" fg:w="710"/><text x="17.6964%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::now (710 samples, 0.66%)</title><rect x="17.4464%" y="453" width="0.6643%" height="15" fill="rgb(247,200,46)" fg:x="18646" fg:w="710"/><text x="17.6964%" y="463.50"></text></g><g><title>__clock_gettime_2 (572 samples, 0.54%)</title><rect x="17.5755%" y="437" width="0.5352%" height="15" fill="rgb(218,76,16)" fg:x="18784" fg:w="572"/><text x="17.8255%" y="447.50"></text></g><g><title>__vdso_clock_gettime (545 samples, 0.51%)</title><rect x="17.6008%" y="421" width="0.5099%" height="15" fill="rgb(225,21,48)" fg:x="18811" fg:w="545"/><text x="17.8508%" y="431.50"></text></g><g><title>[[vdso]] (335 samples, 0.31%)</title><rect x="17.7973%" y="405" width="0.3134%" height="15" fill="rgb(239,223,50)" fg:x="19021" fg:w="335"/><text x="18.0473%" y="415.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (186 samples, 0.17%)</title><rect x="18.1191%" y="485" width="0.1740%" height="15" fill="rgb(244,45,21)" fg:x="19365" fg:w="186"/><text x="18.3691%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (6,795 samples, 6.36%)</title><rect x="11.9503%" y="757" width="6.3578%" height="15" fill="rgb(232,33,43)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="767.50">tremor_r..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,795 samples, 6.36%)</title><rect x="11.9503%" y="741" width="6.3578%" height="15" fill="rgb(209,8,3)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="751.50">&lt;async_f..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,795 samples, 6.36%)</title><rect x="11.9503%" y="725" width="6.3578%" height="15" fill="rgb(214,25,53)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="735.50">&lt;async_f..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (6,795 samples, 6.36%)</title><rect x="11.9503%" y="709" width="6.3578%" height="15" fill="rgb(254,186,54)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="719.50">&lt;core::t..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,795 samples, 6.36%)</title><rect x="11.9503%" y="693" width="6.3578%" height="15" fill="rgb(208,174,49)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="703.50">&lt;async_f..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (6,795 samples, 6.36%)</title><rect x="11.9503%" y="677" width="6.3578%" height="15" fill="rgb(233,191,51)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="687.50">async_ff..</text></g><g><title>std::panic::catch_unwind (6,795 samples, 6.36%)</title><rect x="11.9503%" y="661" width="6.3578%" height="15" fill="rgb(222,134,10)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="671.50">std::pan..</text></g><g><title>std::panicking::try (6,795 samples, 6.36%)</title><rect x="11.9503%" y="645" width="6.3578%" height="15" fill="rgb(230,226,20)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="655.50">std::pan..</text></g><g><title>std::panicking::try::do_call (6,795 samples, 6.36%)</title><rect x="11.9503%" y="629" width="6.3578%" height="15" fill="rgb(251,111,25)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="639.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,795 samples, 6.36%)</title><rect x="11.9503%" y="613" width="6.3578%" height="15" fill="rgb(224,40,46)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="623.50">&lt;core::p..</text></g><g><title>core::ops::function::FnOnce::call_once (6,795 samples, 6.36%)</title><rect x="11.9503%" y="597" width="6.3578%" height="15" fill="rgb(236,108,47)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="607.50">core::op..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (6,795 samples, 6.36%)</title><rect x="11.9503%" y="581" width="6.3578%" height="15" fill="rgb(234,93,0)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="591.50">async_ff..</text></g><g><title>async_ffi::FfiContext::with_context (6,795 samples, 6.36%)</title><rect x="11.9503%" y="565" width="6.3578%" height="15" fill="rgb(224,213,32)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="575.50">async_ff..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (6,795 samples, 6.36%)</title><rect x="11.9503%" y="549" width="6.3578%" height="15" fill="rgb(251,11,48)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="559.50">async_ff..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,795 samples, 6.36%)</title><rect x="11.9503%" y="533" width="6.3578%" height="15" fill="rgb(236,173,5)" fg:x="12772" fg:w="6795"/><text x="12.2003%" y="543.50">&lt;core::f..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (6,645 samples, 6.22%)</title><rect x="12.0906%" y="517" width="6.2175%" height="15" fill="rgb(230,95,12)" fg:x="12922" fg:w="6645"/><text x="12.3406%" y="527.50">&lt;tremor_..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (211 samples, 0.20%)</title><rect x="18.1107%" y="501" width="0.1974%" height="15" fill="rgb(232,209,1)" fg:x="19356" fg:w="211"/><text x="18.3607%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::_::&lt;impl tremor_runtime::connectors::sink::EventSerializerOpaque_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::serialize (16 samples, 0.01%)</title><rect x="18.2932%" y="485" width="0.0150%" height="15" fill="rgb(232,6,1)" fg:x="19551" fg:w="16"/><text x="18.5432%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (33 samples, 0.03%)</title><rect x="18.5355%" y="725" width="0.0309%" height="15" fill="rgb(210,224,50)" fg:x="19810" fg:w="33"/><text x="18.7855%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (33 samples, 0.03%)</title><rect x="18.5355%" y="709" width="0.0309%" height="15" fill="rgb(228,127,35)" fg:x="19810" fg:w="33"/><text x="18.7855%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (33 samples, 0.03%)</title><rect x="18.5355%" y="693" width="0.0309%" height="15" fill="rgb(245,102,45)" fg:x="19810" fg:w="33"/><text x="18.7855%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (13 samples, 0.01%)</title><rect x="18.5542%" y="677" width="0.0122%" height="15" fill="rgb(214,1,49)" fg:x="19830" fg:w="13"/><text x="18.8042%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (13 samples, 0.01%)</title><rect x="18.5542%" y="661" width="0.0122%" height="15" fill="rgb(226,163,40)" fg:x="19830" fg:w="13"/><text x="18.8042%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (29 samples, 0.03%)</title><rect x="18.6001%" y="645" width="0.0271%" height="15" fill="rgb(239,212,28)" fg:x="19879" fg:w="29"/><text x="18.8501%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (29 samples, 0.03%)</title><rect x="18.6001%" y="629" width="0.0271%" height="15" fill="rgb(220,20,13)" fg:x="19879" fg:w="29"/><text x="18.8501%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (29 samples, 0.03%)</title><rect x="18.6001%" y="613" width="0.0271%" height="15" fill="rgb(210,164,35)" fg:x="19879" fg:w="29"/><text x="18.8501%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (29 samples, 0.03%)</title><rect x="18.6001%" y="597" width="0.0271%" height="15" fill="rgb(248,109,41)" fg:x="19879" fg:w="29"/><text x="18.8501%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="18.6001%" y="581" width="0.0271%" height="15" fill="rgb(238,23,50)" fg:x="19879" fg:w="29"/><text x="18.8501%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (14 samples, 0.01%)</title><rect x="18.6141%" y="565" width="0.0131%" height="15" fill="rgb(211,48,49)" fg:x="19894" fg:w="14"/><text x="18.8641%" y="575.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (69 samples, 0.06%)</title><rect x="18.5795%" y="661" width="0.0646%" height="15" fill="rgb(223,36,21)" fg:x="19857" fg:w="69"/><text x="18.8295%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="18.6272%" y="645" width="0.0168%" height="15" fill="rgb(207,123,46)" fg:x="19908" fg:w="18"/><text x="18.8772%" y="655.50"></text></g><g><title>alloc::alloc::box_free (18 samples, 0.02%)</title><rect x="18.6272%" y="629" width="0.0168%" height="15" fill="rgb(240,218,32)" fg:x="19908" fg:w="18"/><text x="18.8772%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="18.6272%" y="613" width="0.0168%" height="15" fill="rgb(252,5,43)" fg:x="19908" fg:w="18"/><text x="18.8772%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="18.6272%" y="597" width="0.0168%" height="15" fill="rgb(252,84,19)" fg:x="19908" fg:w="18"/><text x="18.8772%" y="607.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="18.6272%" y="581" width="0.0168%" height="15" fill="rgb(243,152,39)" fg:x="19908" fg:w="18"/><text x="18.8772%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="18.6272%" y="565" width="0.0168%" height="15" fill="rgb(234,160,15)" fg:x="19908" fg:w="18"/><text x="18.8772%" y="575.50"></text></g><g><title>sizeclass_to_size (13 samples, 0.01%)</title><rect x="18.6693%" y="565" width="0.0122%" height="15" fill="rgb(237,34,20)" fg:x="19953" fg:w="13"/><text x="18.9193%" y="575.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (13 samples, 0.01%)</title><rect x="18.6693%" y="549" width="0.0122%" height="15" fill="rgb(229,97,13)" fg:x="19953" fg:w="13"/><text x="18.9193%" y="559.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (66 samples, 0.06%)</title><rect x="18.7264%" y="517" width="0.0618%" height="15" fill="rgb(234,71,50)" fg:x="20014" fg:w="66"/><text x="18.9764%" y="527.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (66 samples, 0.06%)</title><rect x="18.7264%" y="501" width="0.0618%" height="15" fill="rgb(253,155,4)" fg:x="20014" fg:w="66"/><text x="18.9764%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (117 samples, 0.11%)</title><rect x="18.6833%" y="565" width="0.1095%" height="15" fill="rgb(222,185,37)" fg:x="19968" fg:w="117"/><text x="18.9333%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (117 samples, 0.11%)</title><rect x="18.6833%" y="549" width="0.1095%" height="15" fill="rgb(251,177,13)" fg:x="19968" fg:w="117"/><text x="18.9333%" y="559.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (117 samples, 0.11%)</title><rect x="18.6833%" y="533" width="0.1095%" height="15" fill="rgb(250,179,40)" fg:x="19968" fg:w="117"/><text x="18.9333%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (151 samples, 0.14%)</title><rect x="18.6646%" y="597" width="0.1413%" height="15" fill="rgb(242,44,2)" fg:x="19948" fg:w="151"/><text x="18.9146%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (151 samples, 0.14%)</title><rect x="18.6646%" y="581" width="0.1413%" height="15" fill="rgb(216,177,13)" fg:x="19948" fg:w="151"/><text x="18.9146%" y="591.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="18.7928%" y="565" width="0.0131%" height="15" fill="rgb(216,106,43)" fg:x="20085" fg:w="14"/><text x="19.0428%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (152 samples, 0.14%)</title><rect x="18.6646%" y="629" width="0.1422%" height="15" fill="rgb(216,183,2)" fg:x="19948" fg:w="152"/><text x="18.9146%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (152 samples, 0.14%)</title><rect x="18.6646%" y="613" width="0.1422%" height="15" fill="rgb(249,75,3)" fg:x="19948" fg:w="152"/><text x="18.9146%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (170 samples, 0.16%)</title><rect x="18.6534%" y="645" width="0.1591%" height="15" fill="rgb(219,67,39)" fg:x="19936" fg:w="170"/><text x="18.9034%" y="655.50"></text></g><g><title>rust_dealloc (185 samples, 0.17%)</title><rect x="18.6440%" y="661" width="0.1731%" height="15" fill="rgb(253,228,2)" fg:x="19926" fg:w="185"/><text x="18.8940%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,353 samples, 6.88%)</title><rect x="11.9381%" y="773" width="6.8799%" height="15" fill="rgb(235,138,27)" fg:x="12759" fg:w="7353"/><text x="12.1881%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (544 samples, 0.51%)</title><rect x="18.3091%" y="757" width="0.5090%" height="15" fill="rgb(236,97,51)" fg:x="19568" fg:w="544"/><text x="18.5591%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (302 samples, 0.28%)</title><rect x="18.5355%" y="741" width="0.2826%" height="15" fill="rgb(240,80,30)" fg:x="19810" fg:w="302"/><text x="18.7855%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (269 samples, 0.25%)</title><rect x="18.5664%" y="725" width="0.2517%" height="15" fill="rgb(230,178,19)" fg:x="19843" fg:w="269"/><text x="18.8164%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (269 samples, 0.25%)</title><rect x="18.5664%" y="709" width="0.2517%" height="15" fill="rgb(210,190,27)" fg:x="19843" fg:w="269"/><text x="18.8164%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (269 samples, 0.25%)</title><rect x="18.5664%" y="693" width="0.2517%" height="15" fill="rgb(222,107,31)" fg:x="19843" fg:w="269"/><text x="18.8164%" y="703.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (269 samples, 0.25%)</title><rect x="18.5664%" y="677" width="0.2517%" height="15" fill="rgb(216,127,34)" fg:x="19843" fg:w="269"/><text x="18.8164%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (17 samples, 0.02%)</title><rect x="18.8293%" y="645" width="0.0159%" height="15" fill="rgb(234,116,52)" fg:x="20124" fg:w="17"/><text x="19.0793%" y="655.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="18.8705%" y="469" width="0.0159%" height="15" fill="rgb(222,124,15)" fg:x="20168" fg:w="17"/><text x="19.1205%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="18.8892%" y="453" width="0.0150%" height="15" fill="rgb(231,179,28)" fg:x="20188" fg:w="16"/><text x="19.1392%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (16 samples, 0.01%)</title><rect x="18.8892%" y="437" width="0.0150%" height="15" fill="rgb(226,93,45)" fg:x="20188" fg:w="16"/><text x="19.1392%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (14 samples, 0.01%)</title><rect x="18.8911%" y="421" width="0.0131%" height="15" fill="rgb(215,8,51)" fg:x="20190" fg:w="14"/><text x="19.1411%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (12 samples, 0.01%)</title><rect x="18.8929%" y="405" width="0.0112%" height="15" fill="rgb(223,106,5)" fg:x="20192" fg:w="12"/><text x="19.1429%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="18.8929%" y="389" width="0.0112%" height="15" fill="rgb(250,191,5)" fg:x="20192" fg:w="12"/><text x="19.1429%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="18.8929%" y="373" width="0.0112%" height="15" fill="rgb(242,132,44)" fg:x="20192" fg:w="12"/><text x="19.1429%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (16 samples, 0.01%)</title><rect x="18.9042%" y="453" width="0.0150%" height="15" fill="rgb(251,152,29)" fg:x="20204" fg:w="16"/><text x="19.1542%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (16 samples, 0.01%)</title><rect x="18.9042%" y="437" width="0.0150%" height="15" fill="rgb(218,179,5)" fg:x="20204" fg:w="16"/><text x="19.1542%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (274 samples, 0.26%)</title><rect x="18.8686%" y="501" width="0.2564%" height="15" fill="rgb(227,67,19)" fg:x="20166" fg:w="274"/><text x="19.1186%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (272 samples, 0.25%)</title><rect x="18.8705%" y="485" width="0.2545%" height="15" fill="rgb(233,119,31)" fg:x="20168" fg:w="272"/><text x="19.1205%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (254 samples, 0.24%)</title><rect x="18.8873%" y="469" width="0.2377%" height="15" fill="rgb(241,120,22)" fg:x="20186" fg:w="254"/><text x="19.1373%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (220 samples, 0.21%)</title><rect x="18.9191%" y="453" width="0.2058%" height="15" fill="rgb(224,102,30)" fg:x="20220" fg:w="220"/><text x="19.1691%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (220 samples, 0.21%)</title><rect x="18.9191%" y="437" width="0.2058%" height="15" fill="rgb(210,164,37)" fg:x="20220" fg:w="220"/><text x="19.1691%" y="447.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (324 samples, 0.30%)</title><rect x="18.8293%" y="661" width="0.3032%" height="15" fill="rgb(226,191,16)" fg:x="20124" fg:w="324"/><text x="19.0793%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (307 samples, 0.29%)</title><rect x="18.8452%" y="645" width="0.2872%" height="15" fill="rgb(214,40,45)" fg:x="20141" fg:w="307"/><text x="19.0952%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (307 samples, 0.29%)</title><rect x="18.8452%" y="629" width="0.2872%" height="15" fill="rgb(244,29,26)" fg:x="20141" fg:w="307"/><text x="19.0952%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (300 samples, 0.28%)</title><rect x="18.8518%" y="613" width="0.2807%" height="15" fill="rgb(216,16,5)" fg:x="20148" fg:w="300"/><text x="19.1018%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (300 samples, 0.28%)</title><rect x="18.8518%" y="597" width="0.2807%" height="15" fill="rgb(249,76,35)" fg:x="20148" fg:w="300"/><text x="19.1018%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (300 samples, 0.28%)</title><rect x="18.8518%" y="581" width="0.2807%" height="15" fill="rgb(207,11,44)" fg:x="20148" fg:w="300"/><text x="19.1018%" y="591.50"></text></g><g><title>alloc::alloc::alloc (300 samples, 0.28%)</title><rect x="18.8518%" y="565" width="0.2807%" height="15" fill="rgb(228,190,49)" fg:x="20148" fg:w="300"/><text x="19.1018%" y="575.50"></text></g><g><title>__rg_alloc (300 samples, 0.28%)</title><rect x="18.8518%" y="549" width="0.2807%" height="15" fill="rgb(214,173,12)" fg:x="20148" fg:w="300"/><text x="19.1018%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (300 samples, 0.28%)</title><rect x="18.8518%" y="533" width="0.2807%" height="15" fill="rgb(218,26,35)" fg:x="20148" fg:w="300"/><text x="19.1018%" y="543.50"></text></g><g><title>rust_alloc (288 samples, 0.27%)</title><rect x="18.8630%" y="517" width="0.2695%" height="15" fill="rgb(220,200,19)" fg:x="20160" fg:w="288"/><text x="19.1130%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (13 samples, 0.01%)</title><rect x="19.1362%" y="597" width="0.0122%" height="15" fill="rgb(239,95,49)" fg:x="20452" fg:w="13"/><text x="19.3862%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (11 samples, 0.01%)</title><rect x="19.1381%" y="581" width="0.0103%" height="15" fill="rgb(235,85,53)" fg:x="20454" fg:w="11"/><text x="19.3881%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (16 samples, 0.01%)</title><rect x="19.1484%" y="597" width="0.0150%" height="15" fill="rgb(233,133,31)" fg:x="20465" fg:w="16"/><text x="19.3984%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (16 samples, 0.01%)</title><rect x="19.1484%" y="581" width="0.0150%" height="15" fill="rgb(218,25,20)" fg:x="20465" fg:w="16"/><text x="19.3984%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (34 samples, 0.03%)</title><rect x="19.1362%" y="613" width="0.0318%" height="15" fill="rgb(252,210,38)" fg:x="20452" fg:w="34"/><text x="19.3862%" y="623.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (375 samples, 0.35%)</title><rect x="18.8181%" y="741" width="0.3509%" height="15" fill="rgb(242,134,21)" fg:x="20112" fg:w="375"/><text x="19.0681%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (367 samples, 0.34%)</title><rect x="18.8256%" y="725" width="0.3434%" height="15" fill="rgb(213,28,48)" fg:x="20120" fg:w="367"/><text x="19.0756%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (363 samples, 0.34%)</title><rect x="18.8293%" y="709" width="0.3396%" height="15" fill="rgb(250,196,2)" fg:x="20124" fg:w="363"/><text x="19.0793%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (363 samples, 0.34%)</title><rect x="18.8293%" y="693" width="0.3396%" height="15" fill="rgb(227,5,17)" fg:x="20124" fg:w="363"/><text x="19.0793%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (363 samples, 0.34%)</title><rect x="18.8293%" y="677" width="0.3396%" height="15" fill="rgb(221,226,24)" fg:x="20124" fg:w="363"/><text x="19.0793%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (39 samples, 0.04%)</title><rect x="19.1325%" y="661" width="0.0365%" height="15" fill="rgb(211,5,48)" fg:x="20448" fg:w="39"/><text x="19.3825%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (39 samples, 0.04%)</title><rect x="19.1325%" y="645" width="0.0365%" height="15" fill="rgb(219,150,6)" fg:x="20448" fg:w="39"/><text x="19.3825%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (39 samples, 0.04%)</title><rect x="19.1325%" y="629" width="0.0365%" height="15" fill="rgb(251,46,16)" fg:x="20448" fg:w="39"/><text x="19.3825%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="19.4899%" y="613" width="0.0140%" height="15" fill="rgb(220,204,40)" fg:x="20830" fg:w="15"/><text x="19.7399%" y="623.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (16 samples, 0.01%)</title><rect x="19.4899%" y="629" width="0.0150%" height="15" fill="rgb(211,85,2)" fg:x="20830" fg:w="16"/><text x="19.7399%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (38 samples, 0.04%)</title><rect x="19.4899%" y="693" width="0.0356%" height="15" fill="rgb(229,17,7)" fg:x="20830" fg:w="38"/><text x="19.7399%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new (38 samples, 0.04%)</title><rect x="19.4899%" y="677" width="0.0356%" height="15" fill="rgb(239,72,28)" fg:x="20830" fg:w="38"/><text x="19.7399%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (38 samples, 0.04%)</title><rect x="19.4899%" y="661" width="0.0356%" height="15" fill="rgb(230,47,54)" fg:x="20830" fg:w="38"/><text x="19.7399%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (38 samples, 0.04%)</title><rect x="19.4899%" y="645" width="0.0356%" height="15" fill="rgb(214,50,8)" fg:x="20830" fg:w="38"/><text x="19.7399%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (22 samples, 0.02%)</title><rect x="19.5048%" y="629" width="0.0206%" height="15" fill="rgb(216,198,43)" fg:x="20846" fg:w="22"/><text x="19.7548%" y="639.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="19.5582%" y="501" width="0.0122%" height="15" fill="rgb(234,20,35)" fg:x="20903" fg:w="13"/><text x="19.8082%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.02%)</title><rect x="19.5797%" y="453" width="0.0243%" height="15" fill="rgb(254,45,19)" fg:x="20926" fg:w="26"/><text x="19.8297%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (26 samples, 0.02%)</title><rect x="19.5797%" y="437" width="0.0243%" height="15" fill="rgb(219,14,44)" fg:x="20926" fg:w="26"/><text x="19.8297%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (23 samples, 0.02%)</title><rect x="19.5825%" y="421" width="0.0215%" height="15" fill="rgb(217,220,26)" fg:x="20929" fg:w="23"/><text x="19.8325%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (17 samples, 0.02%)</title><rect x="19.5881%" y="405" width="0.0159%" height="15" fill="rgb(213,158,28)" fg:x="20935" fg:w="17"/><text x="19.8381%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="19.5881%" y="389" width="0.0159%" height="15" fill="rgb(252,51,52)" fg:x="20935" fg:w="17"/><text x="19.8381%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="19.5881%" y="373" width="0.0159%" height="15" fill="rgb(246,89,16)" fg:x="20935" fg:w="17"/><text x="19.8381%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="19.6040%" y="453" width="0.0103%" height="15" fill="rgb(216,158,49)" fg:x="20952" fg:w="11"/><text x="19.8540%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (95 samples, 0.09%)</title><rect x="19.5703%" y="501" width="0.0889%" height="15" fill="rgb(236,107,19)" fg:x="20916" fg:w="95"/><text x="19.8203%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (95 samples, 0.09%)</title><rect x="19.5703%" y="485" width="0.0889%" height="15" fill="rgb(228,185,30)" fg:x="20916" fg:w="95"/><text x="19.8203%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (85 samples, 0.08%)</title><rect x="19.5797%" y="469" width="0.0795%" height="15" fill="rgb(246,134,8)" fg:x="20926" fg:w="85"/><text x="19.8297%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (48 samples, 0.04%)</title><rect x="19.6143%" y="453" width="0.0449%" height="15" fill="rgb(214,143,50)" fg:x="20963" fg:w="48"/><text x="19.8643%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (48 samples, 0.04%)</title><rect x="19.6143%" y="437" width="0.0449%" height="15" fill="rgb(228,75,8)" fg:x="20963" fg:w="48"/><text x="19.8643%" y="447.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (188 samples, 0.18%)</title><rect x="19.4899%" y="709" width="0.1759%" height="15" fill="rgb(207,175,4)" fg:x="20830" fg:w="188"/><text x="19.7399%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (150 samples, 0.14%)</title><rect x="19.5254%" y="693" width="0.1403%" height="15" fill="rgb(205,108,24)" fg:x="20868" fg:w="150"/><text x="19.7754%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (150 samples, 0.14%)</title><rect x="19.5254%" y="677" width="0.1403%" height="15" fill="rgb(244,120,49)" fg:x="20868" fg:w="150"/><text x="19.7754%" y="687.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (142 samples, 0.13%)</title><rect x="19.5329%" y="661" width="0.1329%" height="15" fill="rgb(223,47,38)" fg:x="20876" fg:w="142"/><text x="19.7829%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (142 samples, 0.13%)</title><rect x="19.5329%" y="645" width="0.1329%" height="15" fill="rgb(229,179,11)" fg:x="20876" fg:w="142"/><text x="19.7829%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (142 samples, 0.13%)</title><rect x="19.5329%" y="629" width="0.1329%" height="15" fill="rgb(231,122,1)" fg:x="20876" fg:w="142"/><text x="19.7829%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (124 samples, 0.12%)</title><rect x="19.5498%" y="613" width="0.1160%" height="15" fill="rgb(245,119,9)" fg:x="20894" fg:w="124"/><text x="19.7998%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (124 samples, 0.12%)</title><rect x="19.5498%" y="597" width="0.1160%" height="15" fill="rgb(241,163,25)" fg:x="20894" fg:w="124"/><text x="19.7998%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (124 samples, 0.12%)</title><rect x="19.5498%" y="581" width="0.1160%" height="15" fill="rgb(217,214,3)" fg:x="20894" fg:w="124"/><text x="19.7998%" y="591.50"></text></g><g><title>alloc::alloc::alloc (115 samples, 0.11%)</title><rect x="19.5582%" y="565" width="0.1076%" height="15" fill="rgb(240,86,28)" fg:x="20903" fg:w="115"/><text x="19.8082%" y="575.50"></text></g><g><title>__rg_alloc (115 samples, 0.11%)</title><rect x="19.5582%" y="549" width="0.1076%" height="15" fill="rgb(215,47,9)" fg:x="20903" fg:w="115"/><text x="19.8082%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (115 samples, 0.11%)</title><rect x="19.5582%" y="533" width="0.1076%" height="15" fill="rgb(252,25,45)" fg:x="20903" fg:w="115"/><text x="19.8082%" y="543.50"></text></g><g><title>rust_alloc (115 samples, 0.11%)</title><rect x="19.5582%" y="517" width="0.1076%" height="15" fill="rgb(251,164,9)" fg:x="20903" fg:w="115"/><text x="19.8082%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (12 samples, 0.01%)</title><rect x="19.6967%" y="661" width="0.0112%" height="15" fill="rgb(233,194,0)" fg:x="21051" fg:w="12"/><text x="19.9467%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="19.6967%" y="645" width="0.0112%" height="15" fill="rgb(249,111,24)" fg:x="21051" fg:w="12"/><text x="19.9467%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (12 samples, 0.01%)</title><rect x="19.6967%" y="629" width="0.0112%" height="15" fill="rgb(250,223,3)" fg:x="21051" fg:w="12"/><text x="19.9467%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="19.7229%" y="565" width="0.0159%" height="15" fill="rgb(236,178,37)" fg:x="21079" fg:w="17"/><text x="19.9729%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="19.7229%" y="629" width="0.0178%" height="15" fill="rgb(241,158,50)" fg:x="21079" fg:w="19"/><text x="19.9729%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="19.7229%" y="613" width="0.0178%" height="15" fill="rgb(213,121,41)" fg:x="21079" fg:w="19"/><text x="19.9729%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="19.7229%" y="597" width="0.0178%" height="15" fill="rgb(240,92,3)" fg:x="21079" fg:w="19"/><text x="19.9729%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="19.7229%" y="581" width="0.0178%" height="15" fill="rgb(205,123,3)" fg:x="21079" fg:w="19"/><text x="19.9729%" y="591.50"></text></g><g><title>abi_stable::erased_types::iterator::next (37 samples, 0.03%)</title><rect x="19.7088%" y="661" width="0.0346%" height="15" fill="rgb(205,97,47)" fg:x="21064" fg:w="37"/><text x="19.9588%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (22 samples, 0.02%)</title><rect x="19.7229%" y="645" width="0.0206%" height="15" fill="rgb(247,152,14)" fg:x="21079" fg:w="22"/><text x="19.9729%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="19.7434%" y="629" width="0.0122%" height="15" fill="rgb(248,195,53)" fg:x="21101" fg:w="13"/><text x="19.9934%" y="639.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (13 samples, 0.01%)</title><rect x="19.7434%" y="613" width="0.0122%" height="15" fill="rgb(226,201,16)" fg:x="21101" fg:w="13"/><text x="19.9934%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.08%)</title><rect x="19.6845%" y="693" width="0.0786%" height="15" fill="rgb(205,98,0)" fg:x="21038" fg:w="84"/><text x="19.9345%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (84 samples, 0.08%)</title><rect x="19.6845%" y="677" width="0.0786%" height="15" fill="rgb(214,191,48)" fg:x="21038" fg:w="84"/><text x="19.9345%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (21 samples, 0.02%)</title><rect x="19.7434%" y="661" width="0.0196%" height="15" fill="rgb(237,112,39)" fg:x="21101" fg:w="21"/><text x="19.9934%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (21 samples, 0.02%)</title><rect x="19.7434%" y="645" width="0.0196%" height="15" fill="rgb(247,203,27)" fg:x="21101" fg:w="21"/><text x="19.9934%" y="655.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_ref (16 samples, 0.01%)</title><rect x="19.7715%" y="661" width="0.0150%" height="15" fill="rgb(235,124,28)" fg:x="21131" fg:w="16"/><text x="20.0215%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (14 samples, 0.01%)</title><rect x="19.7865%" y="661" width="0.0131%" height="15" fill="rgb(208,207,46)" fg:x="21147" fg:w="14"/><text x="20.0365%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (14 samples, 0.01%)</title><rect x="19.7865%" y="645" width="0.0131%" height="15" fill="rgb(234,176,4)" fg:x="21147" fg:w="14"/><text x="20.0365%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="19.7884%" y="629" width="0.0112%" height="15" fill="rgb(230,133,28)" fg:x="21149" fg:w="12"/><text x="20.0384%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="19.7884%" y="613" width="0.0112%" height="15" fill="rgb(211,137,40)" fg:x="21149" fg:w="12"/><text x="20.0384%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="19.7884%" y="597" width="0.0112%" height="15" fill="rgb(254,35,13)" fg:x="21149" fg:w="12"/><text x="20.0384%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="19.7884%" y="581" width="0.0112%" height="15" fill="rgb(225,49,51)" fg:x="21149" fg:w="12"/><text x="20.0384%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (57 samples, 0.05%)</title><rect x="19.7631%" y="693" width="0.0533%" height="15" fill="rgb(251,10,15)" fg:x="21122" fg:w="57"/><text x="20.0131%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (57 samples, 0.05%)</title><rect x="19.7631%" y="677" width="0.0533%" height="15" fill="rgb(228,207,15)" fg:x="21122" fg:w="57"/><text x="20.0131%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (18 samples, 0.02%)</title><rect x="19.7996%" y="661" width="0.0168%" height="15" fill="rgb(241,99,19)" fg:x="21161" fg:w="18"/><text x="20.0496%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (18 samples, 0.02%)</title><rect x="19.7996%" y="645" width="0.0168%" height="15" fill="rgb(207,104,49)" fg:x="21161" fg:w="18"/><text x="20.0496%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (11 samples, 0.01%)</title><rect x="19.8548%" y="581" width="0.0103%" height="15" fill="rgb(234,99,18)" fg:x="21220" fg:w="11"/><text x="20.1048%" y="591.50"></text></g><g><title>rust_dealloc (26 samples, 0.02%)</title><rect x="19.8810%" y="485" width="0.0243%" height="15" fill="rgb(213,191,49)" fg:x="21248" fg:w="26"/><text x="20.1310%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (25 samples, 0.02%)</title><rect x="19.9147%" y="437" width="0.0234%" height="15" fill="rgb(210,226,19)" fg:x="21284" fg:w="25"/><text x="20.1647%" y="447.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="19.9250%" y="421" width="0.0131%" height="15" fill="rgb(229,97,18)" fg:x="21295" fg:w="14"/><text x="20.1750%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="19.9053%" y="485" width="0.0374%" height="15" fill="rgb(211,167,15)" fg:x="21274" fg:w="40"/><text x="20.1553%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="19.9053%" y="469" width="0.0374%" height="15" fill="rgb(210,169,34)" fg:x="21274" fg:w="40"/><text x="20.1553%" y="479.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (39 samples, 0.04%)</title><rect x="19.9062%" y="453" width="0.0365%" height="15" fill="rgb(241,121,31)" fg:x="21275" fg:w="39"/><text x="20.1562%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (72 samples, 0.07%)</title><rect x="19.8791%" y="517" width="0.0674%" height="15" fill="rgb(232,40,11)" fg:x="21246" fg:w="72"/><text x="20.1291%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (72 samples, 0.07%)</title><rect x="19.8791%" y="501" width="0.0674%" height="15" fill="rgb(205,86,26)" fg:x="21246" fg:w="72"/><text x="20.1291%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (77 samples, 0.07%)</title><rect x="19.8791%" y="549" width="0.0720%" height="15" fill="rgb(231,126,28)" fg:x="21246" fg:w="77"/><text x="20.1291%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (77 samples, 0.07%)</title><rect x="19.8791%" y="533" width="0.0720%" height="15" fill="rgb(219,221,18)" fg:x="21246" fg:w="77"/><text x="20.1291%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (89 samples, 0.08%)</title><rect x="19.8726%" y="565" width="0.0833%" height="15" fill="rgb(211,40,0)" fg:x="21239" fg:w="89"/><text x="20.1226%" y="575.50"></text></g><g><title>rust_dealloc (105 samples, 0.10%)</title><rect x="19.8651%" y="581" width="0.0982%" height="15" fill="rgb(239,85,43)" fg:x="21231" fg:w="105"/><text x="20.1151%" y="591.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,228 samples, 1.15%)</title><rect x="18.8181%" y="773" width="1.1490%" height="15" fill="rgb(231,55,21)" fg:x="20112" fg:w="1228"/><text x="19.0681%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,228 samples, 1.15%)</title><rect x="18.8181%" y="757" width="1.1490%" height="15" fill="rgb(225,184,43)" fg:x="20112" fg:w="1228"/><text x="19.0681%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (853 samples, 0.80%)</title><rect x="19.1689%" y="741" width="0.7981%" height="15" fill="rgb(251,158,41)" fg:x="20487" fg:w="853"/><text x="19.4189%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (514 samples, 0.48%)</title><rect x="19.4861%" y="725" width="0.4809%" height="15" fill="rgb(234,159,37)" fg:x="20826" fg:w="514"/><text x="19.7361%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (322 samples, 0.30%)</title><rect x="19.6658%" y="709" width="0.3013%" height="15" fill="rgb(216,204,22)" fg:x="21018" fg:w="322"/><text x="19.9158%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (151 samples, 0.14%)</title><rect x="19.8258%" y="693" width="0.1413%" height="15" fill="rgb(214,17,3)" fg:x="21189" fg:w="151"/><text x="20.0758%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (151 samples, 0.14%)</title><rect x="19.8258%" y="677" width="0.1413%" height="15" fill="rgb(212,111,17)" fg:x="21189" fg:w="151"/><text x="20.0758%" y="687.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (151 samples, 0.14%)</title><rect x="19.8258%" y="661" width="0.1413%" height="15" fill="rgb(221,157,24)" fg:x="21189" fg:w="151"/><text x="20.0758%" y="671.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (151 samples, 0.14%)</title><rect x="19.8258%" y="645" width="0.1413%" height="15" fill="rgb(252,16,13)" fg:x="21189" fg:w="151"/><text x="20.0758%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (131 samples, 0.12%)</title><rect x="19.8445%" y="629" width="0.1226%" height="15" fill="rgb(221,62,2)" fg:x="21209" fg:w="131"/><text x="20.0945%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (131 samples, 0.12%)</title><rect x="19.8445%" y="613" width="0.1226%" height="15" fill="rgb(247,87,22)" fg:x="21209" fg:w="131"/><text x="20.0945%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (131 samples, 0.12%)</title><rect x="19.8445%" y="597" width="0.1226%" height="15" fill="rgb(215,73,9)" fg:x="21209" fg:w="131"/><text x="20.0945%" y="607.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (24 samples, 0.02%)</title><rect x="19.9905%" y="629" width="0.0225%" height="15" fill="rgb(207,175,33)" fg:x="21365" fg:w="24"/><text x="20.2405%" y="639.50"></text></g><g><title>aligned_size (17 samples, 0.02%)</title><rect x="20.0251%" y="485" width="0.0159%" height="15" fill="rgb(243,129,54)" fg:x="21402" fg:w="17"/><text x="20.2751%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::empty (21 samples, 0.02%)</title><rect x="20.0719%" y="437" width="0.0196%" height="15" fill="rgb(227,119,45)" fg:x="21452" fg:w="21"/><text x="20.3219%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (21 samples, 0.02%)</title><rect x="20.0719%" y="421" width="0.0196%" height="15" fill="rgb(205,109,36)" fg:x="21452" fg:w="21"/><text x="20.3219%" y="431.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (335 samples, 0.31%)</title><rect x="19.9905%" y="645" width="0.3134%" height="15" fill="rgb(205,6,39)" fg:x="21365" fg:w="335"/><text x="20.2405%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (311 samples, 0.29%)</title><rect x="20.0129%" y="629" width="0.2910%" height="15" fill="rgb(221,32,16)" fg:x="21389" fg:w="311"/><text x="20.2629%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (311 samples, 0.29%)</title><rect x="20.0129%" y="613" width="0.2910%" height="15" fill="rgb(228,144,50)" fg:x="21389" fg:w="311"/><text x="20.2629%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (301 samples, 0.28%)</title><rect x="20.0223%" y="597" width="0.2816%" height="15" fill="rgb(229,201,53)" fg:x="21399" fg:w="301"/><text x="20.2723%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (301 samples, 0.28%)</title><rect x="20.0223%" y="581" width="0.2816%" height="15" fill="rgb(249,153,27)" fg:x="21399" fg:w="301"/><text x="20.2723%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (301 samples, 0.28%)</title><rect x="20.0223%" y="565" width="0.2816%" height="15" fill="rgb(227,106,25)" fg:x="21399" fg:w="301"/><text x="20.2723%" y="575.50"></text></g><g><title>alloc::alloc::alloc (301 samples, 0.28%)</title><rect x="20.0223%" y="549" width="0.2816%" height="15" fill="rgb(230,65,29)" fg:x="21399" fg:w="301"/><text x="20.2723%" y="559.50"></text></g><g><title>__rg_alloc (301 samples, 0.28%)</title><rect x="20.0223%" y="533" width="0.2816%" height="15" fill="rgb(221,57,46)" fg:x="21399" fg:w="301"/><text x="20.2723%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (301 samples, 0.28%)</title><rect x="20.0223%" y="517" width="0.2816%" height="15" fill="rgb(229,161,17)" fg:x="21399" fg:w="301"/><text x="20.2723%" y="527.50"></text></g><g><title>rust_alloc (298 samples, 0.28%)</title><rect x="20.0251%" y="501" width="0.2788%" height="15" fill="rgb(222,213,11)" fg:x="21402" fg:w="298"/><text x="20.2751%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (277 samples, 0.26%)</title><rect x="20.0447%" y="485" width="0.2592%" height="15" fill="rgb(235,35,13)" fg:x="21423" fg:w="277"/><text x="20.2947%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (277 samples, 0.26%)</title><rect x="20.0447%" y="469" width="0.2592%" height="15" fill="rgb(233,158,34)" fg:x="21423" fg:w="277"/><text x="20.2947%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (264 samples, 0.25%)</title><rect x="20.0569%" y="453" width="0.2470%" height="15" fill="rgb(215,151,48)" fg:x="21436" fg:w="264"/><text x="20.3069%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (227 samples, 0.21%)</title><rect x="20.0915%" y="437" width="0.2124%" height="15" fill="rgb(229,84,14)" fg:x="21473" fg:w="227"/><text x="20.3415%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (227 samples, 0.21%)</title><rect x="20.0915%" y="421" width="0.2124%" height="15" fill="rgb(229,68,14)" fg:x="21473" fg:w="227"/><text x="20.3415%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (103 samples, 0.10%)</title><rect x="20.3629%" y="581" width="0.0964%" height="15" fill="rgb(243,106,26)" fg:x="21763" fg:w="103"/><text x="20.6129%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (103 samples, 0.10%)</title><rect x="20.3629%" y="565" width="0.0964%" height="15" fill="rgb(206,45,38)" fg:x="21763" fg:w="103"/><text x="20.6129%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (120 samples, 0.11%)</title><rect x="20.3554%" y="597" width="0.1123%" height="15" fill="rgb(226,6,15)" fg:x="21755" fg:w="120"/><text x="20.6054%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (714 samples, 0.67%)</title><rect x="19.9699%" y="725" width="0.6681%" height="15" fill="rgb(232,22,54)" fg:x="21343" fg:w="714"/><text x="20.2199%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (694 samples, 0.65%)</title><rect x="19.9886%" y="709" width="0.6494%" height="15" fill="rgb(229,222,32)" fg:x="21363" fg:w="694"/><text x="20.2386%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (692 samples, 0.65%)</title><rect x="19.9905%" y="693" width="0.6475%" height="15" fill="rgb(228,62,29)" fg:x="21365" fg:w="692"/><text x="20.2405%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (692 samples, 0.65%)</title><rect x="19.9905%" y="677" width="0.6475%" height="15" fill="rgb(251,103,34)" fg:x="21365" fg:w="692"/><text x="20.2405%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (692 samples, 0.65%)</title><rect x="19.9905%" y="661" width="0.6475%" height="15" fill="rgb(233,12,30)" fg:x="21365" fg:w="692"/><text x="20.2405%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (357 samples, 0.33%)</title><rect x="20.3039%" y="645" width="0.3340%" height="15" fill="rgb(238,52,0)" fg:x="21700" fg:w="357"/><text x="20.5539%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (357 samples, 0.33%)</title><rect x="20.3039%" y="629" width="0.3340%" height="15" fill="rgb(223,98,5)" fg:x="21700" fg:w="357"/><text x="20.5539%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (357 samples, 0.33%)</title><rect x="20.3039%" y="613" width="0.3340%" height="15" fill="rgb(228,75,37)" fg:x="21700" fg:w="357"/><text x="20.5539%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (182 samples, 0.17%)</title><rect x="20.4676%" y="597" width="0.1703%" height="15" fill="rgb(205,115,49)" fg:x="21875" fg:w="182"/><text x="20.7176%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="20.9504%" y="693" width="0.0112%" height="15" fill="rgb(250,154,43)" fg:x="22391" fg:w="12"/><text x="21.2004%" y="703.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="20.9617%" y="597" width="0.0112%" height="15" fill="rgb(226,43,29)" fg:x="22403" fg:w="12"/><text x="21.2117%" y="607.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (13 samples, 0.01%)</title><rect x="20.9617%" y="613" width="0.0122%" height="15" fill="rgb(249,228,39)" fg:x="22403" fg:w="13"/><text x="21.2117%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (31 samples, 0.03%)</title><rect x="20.9617%" y="677" width="0.0290%" height="15" fill="rgb(216,79,43)" fg:x="22403" fg:w="31"/><text x="21.2117%" y="687.50"></text></g><g><title>std::collections::hash::map::RandomState::new (31 samples, 0.03%)</title><rect x="20.9617%" y="661" width="0.0290%" height="15" fill="rgb(228,95,12)" fg:x="22403" fg:w="31"/><text x="21.2117%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (31 samples, 0.03%)</title><rect x="20.9617%" y="645" width="0.0290%" height="15" fill="rgb(249,221,15)" fg:x="22403" fg:w="31"/><text x="21.2117%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.03%)</title><rect x="20.9617%" y="629" width="0.0290%" height="15" fill="rgb(233,34,13)" fg:x="22403" fg:w="31"/><text x="21.2117%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (18 samples, 0.02%)</title><rect x="20.9738%" y="613" width="0.0168%" height="15" fill="rgb(214,103,39)" fg:x="22416" fg:w="18"/><text x="21.2238%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="21.0421%" y="437" width="0.0178%" height="15" fill="rgb(251,126,39)" fg:x="22489" fg:w="19"/><text x="21.2921%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (19 samples, 0.02%)</title><rect x="21.0421%" y="421" width="0.0178%" height="15" fill="rgb(214,216,36)" fg:x="22489" fg:w="19"/><text x="21.2921%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (14 samples, 0.01%)</title><rect x="21.0468%" y="405" width="0.0131%" height="15" fill="rgb(220,221,8)" fg:x="22494" fg:w="14"/><text x="21.2968%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (54 samples, 0.05%)</title><rect x="21.0375%" y="485" width="0.0505%" height="15" fill="rgb(240,216,3)" fg:x="22484" fg:w="54"/><text x="21.2875%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (54 samples, 0.05%)</title><rect x="21.0375%" y="469" width="0.0505%" height="15" fill="rgb(232,218,17)" fg:x="22484" fg:w="54"/><text x="21.2875%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.05%)</title><rect x="21.0421%" y="453" width="0.0458%" height="15" fill="rgb(229,163,45)" fg:x="22489" fg:w="49"/><text x="21.2921%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (25 samples, 0.02%)</title><rect x="21.0646%" y="437" width="0.0234%" height="15" fill="rgb(231,110,42)" fg:x="22513" fg:w="25"/><text x="21.3146%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (25 samples, 0.02%)</title><rect x="21.0646%" y="421" width="0.0234%" height="15" fill="rgb(208,170,48)" fg:x="22513" fg:w="25"/><text x="21.3146%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (141 samples, 0.13%)</title><rect x="20.9617%" y="693" width="0.1319%" height="15" fill="rgb(239,116,25)" fg:x="22403" fg:w="141"/><text x="21.2117%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (110 samples, 0.10%)</title><rect x="20.9907%" y="677" width="0.1029%" height="15" fill="rgb(219,200,50)" fg:x="22434" fg:w="110"/><text x="21.2407%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (110 samples, 0.10%)</title><rect x="20.9907%" y="661" width="0.1029%" height="15" fill="rgb(245,200,0)" fg:x="22434" fg:w="110"/><text x="21.2407%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (103 samples, 0.10%)</title><rect x="20.9972%" y="645" width="0.0964%" height="15" fill="rgb(245,119,33)" fg:x="22441" fg:w="103"/><text x="21.2472%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (103 samples, 0.10%)</title><rect x="20.9972%" y="629" width="0.0964%" height="15" fill="rgb(231,125,12)" fg:x="22441" fg:w="103"/><text x="21.2472%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (101 samples, 0.09%)</title><rect x="20.9991%" y="613" width="0.0945%" height="15" fill="rgb(216,96,41)" fg:x="22443" fg:w="101"/><text x="21.2491%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (75 samples, 0.07%)</title><rect x="21.0234%" y="597" width="0.0702%" height="15" fill="rgb(248,43,45)" fg:x="22469" fg:w="75"/><text x="21.2734%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (75 samples, 0.07%)</title><rect x="21.0234%" y="581" width="0.0702%" height="15" fill="rgb(217,222,7)" fg:x="22469" fg:w="75"/><text x="21.2734%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (75 samples, 0.07%)</title><rect x="21.0234%" y="565" width="0.0702%" height="15" fill="rgb(233,28,6)" fg:x="22469" fg:w="75"/><text x="21.2734%" y="575.50"></text></g><g><title>alloc::alloc::alloc (65 samples, 0.06%)</title><rect x="21.0328%" y="549" width="0.0608%" height="15" fill="rgb(231,218,15)" fg:x="22479" fg:w="65"/><text x="21.2828%" y="559.50"></text></g><g><title>__rg_alloc (65 samples, 0.06%)</title><rect x="21.0328%" y="533" width="0.0608%" height="15" fill="rgb(226,171,48)" fg:x="22479" fg:w="65"/><text x="21.2828%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (65 samples, 0.06%)</title><rect x="21.0328%" y="517" width="0.0608%" height="15" fill="rgb(235,201,9)" fg:x="22479" fg:w="65"/><text x="21.2828%" y="527.50"></text></g><g><title>rust_alloc (65 samples, 0.06%)</title><rect x="21.0328%" y="501" width="0.0608%" height="15" fill="rgb(217,80,15)" fg:x="22479" fg:w="65"/><text x="21.2828%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (18 samples, 0.02%)</title><rect x="21.1245%" y="645" width="0.0168%" height="15" fill="rgb(219,152,8)" fg:x="22577" fg:w="18"/><text x="21.3745%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.02%)</title><rect x="21.1245%" y="629" width="0.0168%" height="15" fill="rgb(243,107,38)" fg:x="22577" fg:w="18"/><text x="21.3745%" y="639.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (18 samples, 0.02%)</title><rect x="21.1245%" y="613" width="0.0168%" height="15" fill="rgb(231,17,5)" fg:x="22577" fg:w="18"/><text x="21.3745%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="21.1582%" y="549" width="0.0140%" height="15" fill="rgb(209,25,54)" fg:x="22613" fg:w="15"/><text x="21.4082%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.1582%" y="613" width="0.0196%" height="15" fill="rgb(219,0,2)" fg:x="22613" fg:w="21"/><text x="21.4082%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.1582%" y="597" width="0.0196%" height="15" fill="rgb(246,9,5)" fg:x="22613" fg:w="21"/><text x="21.4082%" y="607.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.1582%" y="581" width="0.0196%" height="15" fill="rgb(226,159,4)" fg:x="22613" fg:w="21"/><text x="21.4082%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.1582%" y="565" width="0.0196%" height="15" fill="rgb(219,175,34)" fg:x="22613" fg:w="21"/><text x="21.4082%" y="575.50"></text></g><g><title>abi_stable::erased_types::iterator::next (37 samples, 0.03%)</title><rect x="21.1441%" y="645" width="0.0346%" height="15" fill="rgb(236,10,46)" fg:x="22598" fg:w="37"/><text x="21.3941%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (22 samples, 0.02%)</title><rect x="21.1582%" y="629" width="0.0206%" height="15" fill="rgb(240,211,16)" fg:x="22613" fg:w="22"/><text x="21.4082%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="21.1806%" y="613" width="0.0131%" height="15" fill="rgb(205,3,43)" fg:x="22637" fg:w="14"/><text x="21.4306%" y="623.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (14 samples, 0.01%)</title><rect x="21.1806%" y="597" width="0.0131%" height="15" fill="rgb(245,7,22)" fg:x="22637" fg:w="14"/><text x="21.4306%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.09%)</title><rect x="21.1142%" y="677" width="0.0851%" height="15" fill="rgb(239,132,32)" fg:x="22566" fg:w="91"/><text x="21.3642%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (91 samples, 0.09%)</title><rect x="21.1142%" y="661" width="0.0851%" height="15" fill="rgb(228,202,34)" fg:x="22566" fg:w="91"/><text x="21.3642%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (22 samples, 0.02%)</title><rect x="21.1787%" y="645" width="0.0206%" height="15" fill="rgb(254,200,22)" fg:x="22635" fg:w="22"/><text x="21.4287%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (20 samples, 0.02%)</title><rect x="21.1806%" y="629" width="0.0187%" height="15" fill="rgb(219,10,39)" fg:x="22637" fg:w="20"/><text x="21.4306%" y="639.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (21 samples, 0.02%)</title><rect x="21.2049%" y="645" width="0.0196%" height="15" fill="rgb(226,210,39)" fg:x="22663" fg:w="21"/><text x="21.4549%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (20 samples, 0.02%)</title><rect x="21.2059%" y="629" width="0.0187%" height="15" fill="rgb(208,219,16)" fg:x="22664" fg:w="20"/><text x="21.4559%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (13 samples, 0.01%)</title><rect x="21.2124%" y="613" width="0.0122%" height="15" fill="rgb(216,158,51)" fg:x="22671" fg:w="13"/><text x="21.4624%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (13 samples, 0.01%)</title><rect x="21.2124%" y="597" width="0.0122%" height="15" fill="rgb(233,14,44)" fg:x="22671" fg:w="13"/><text x="21.4624%" y="607.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (13 samples, 0.01%)</title><rect x="21.2124%" y="581" width="0.0122%" height="15" fill="rgb(237,97,39)" fg:x="22671" fg:w="13"/><text x="21.4624%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (13 samples, 0.01%)</title><rect x="21.2124%" y="565" width="0.0122%" height="15" fill="rgb(218,198,43)" fg:x="22671" fg:w="13"/><text x="21.4624%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="21.2246%" y="613" width="0.0122%" height="15" fill="rgb(231,104,20)" fg:x="22684" fg:w="13"/><text x="21.4746%" y="623.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (13 samples, 0.01%)</title><rect x="21.2246%" y="597" width="0.0122%" height="15" fill="rgb(254,36,13)" fg:x="22684" fg:w="13"/><text x="21.4746%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="21.1993%" y="677" width="0.0402%" height="15" fill="rgb(248,14,50)" fg:x="22657" fg:w="43"/><text x="21.4493%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (43 samples, 0.04%)</title><rect x="21.1993%" y="661" width="0.0402%" height="15" fill="rgb(217,107,29)" fg:x="22657" fg:w="43"/><text x="21.4493%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (16 samples, 0.01%)</title><rect x="21.2246%" y="645" width="0.0150%" height="15" fill="rgb(251,169,33)" fg:x="22684" fg:w="16"/><text x="21.4746%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (16 samples, 0.01%)</title><rect x="21.2246%" y="629" width="0.0150%" height="15" fill="rgb(217,108,32)" fg:x="22684" fg:w="16"/><text x="21.4746%" y="639.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (12 samples, 0.01%)</title><rect x="21.2742%" y="565" width="0.0112%" height="15" fill="rgb(219,66,42)" fg:x="22737" fg:w="12"/><text x="21.5242%" y="575.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="21.2994%" y="469" width="0.0103%" height="15" fill="rgb(206,180,7)" fg:x="22764" fg:w="11"/><text x="21.5494%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (50 samples, 0.05%)</title><rect x="21.3369%" y="421" width="0.0468%" height="15" fill="rgb(208,226,31)" fg:x="22804" fg:w="50"/><text x="21.5869%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (48 samples, 0.04%)</title><rect x="21.3387%" y="405" width="0.0449%" height="15" fill="rgb(218,26,49)" fg:x="22806" fg:w="48"/><text x="21.5887%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (86 samples, 0.08%)</title><rect x="21.3135%" y="469" width="0.0805%" height="15" fill="rgb(233,197,48)" fg:x="22779" fg:w="86"/><text x="21.5635%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (86 samples, 0.08%)</title><rect x="21.3135%" y="453" width="0.0805%" height="15" fill="rgb(252,181,51)" fg:x="22779" fg:w="86"/><text x="21.5635%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (86 samples, 0.08%)</title><rect x="21.3135%" y="437" width="0.0805%" height="15" fill="rgb(253,90,19)" fg:x="22779" fg:w="86"/><text x="21.5635%" y="447.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="21.3837%" y="421" width="0.0103%" height="15" fill="rgb(215,171,30)" fg:x="22854" fg:w="11"/><text x="21.6337%" y="431.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="21.3837%" y="405" width="0.0103%" height="15" fill="rgb(214,222,9)" fg:x="22854" fg:w="11"/><text x="21.6337%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (110 samples, 0.10%)</title><rect x="21.2985%" y="501" width="0.1029%" height="15" fill="rgb(223,3,22)" fg:x="22763" fg:w="110"/><text x="21.5485%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (110 samples, 0.10%)</title><rect x="21.2985%" y="485" width="0.1029%" height="15" fill="rgb(225,196,46)" fg:x="22763" fg:w="110"/><text x="21.5485%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (119 samples, 0.11%)</title><rect x="21.2985%" y="533" width="0.1113%" height="15" fill="rgb(209,110,37)" fg:x="22763" fg:w="119"/><text x="21.5485%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (119 samples, 0.11%)</title><rect x="21.2985%" y="517" width="0.1113%" height="15" fill="rgb(249,89,12)" fg:x="22763" fg:w="119"/><text x="21.5485%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (129 samples, 0.12%)</title><rect x="21.2929%" y="549" width="0.1207%" height="15" fill="rgb(226,27,33)" fg:x="22757" fg:w="129"/><text x="21.5429%" y="559.50"></text></g><g><title>rust_dealloc (141 samples, 0.13%)</title><rect x="21.2854%" y="565" width="0.1319%" height="15" fill="rgb(213,82,22)" fg:x="22749" fg:w="141"/><text x="21.5354%" y="575.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (1,553 samples, 1.45%)</title><rect x="19.9671%" y="773" width="1.4531%" height="15" fill="rgb(248,140,0)" fg:x="21340" fg:w="1553"/><text x="20.2171%" y="783.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,553 samples, 1.45%)</title><rect x="19.9671%" y="757" width="1.4531%" height="15" fill="rgb(228,106,3)" fg:x="21340" fg:w="1553"/><text x="20.2171%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,553 samples, 1.45%)</title><rect x="19.9671%" y="741" width="1.4531%" height="15" fill="rgb(209,23,37)" fg:x="21340" fg:w="1553"/><text x="20.2171%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (836 samples, 0.78%)</title><rect x="20.6379%" y="725" width="0.7822%" height="15" fill="rgb(241,93,50)" fg:x="22057" fg:w="836"/><text x="20.8879%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (502 samples, 0.47%)</title><rect x="20.9504%" y="709" width="0.4697%" height="15" fill="rgb(253,46,43)" fg:x="22391" fg:w="502"/><text x="21.2004%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (349 samples, 0.33%)</title><rect x="21.0936%" y="693" width="0.3265%" height="15" fill="rgb(226,206,43)" fg:x="22544" fg:w="349"/><text x="21.3436%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (183 samples, 0.17%)</title><rect x="21.2489%" y="677" width="0.1712%" height="15" fill="rgb(217,54,7)" fg:x="22710" fg:w="183"/><text x="21.4989%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (183 samples, 0.17%)</title><rect x="21.2489%" y="661" width="0.1712%" height="15" fill="rgb(223,5,52)" fg:x="22710" fg:w="183"/><text x="21.4989%" y="671.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (183 samples, 0.17%)</title><rect x="21.2489%" y="645" width="0.1712%" height="15" fill="rgb(206,52,46)" fg:x="22710" fg:w="183"/><text x="21.4989%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (183 samples, 0.17%)</title><rect x="21.2489%" y="629" width="0.1712%" height="15" fill="rgb(253,136,11)" fg:x="22710" fg:w="183"/><text x="21.4989%" y="639.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (172 samples, 0.16%)</title><rect x="21.2592%" y="613" width="0.1609%" height="15" fill="rgb(208,106,33)" fg:x="22721" fg:w="172"/><text x="21.5092%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (172 samples, 0.16%)</title><rect x="21.2592%" y="597" width="0.1609%" height="15" fill="rgb(206,54,4)" fg:x="22721" fg:w="172"/><text x="21.5092%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (172 samples, 0.16%)</title><rect x="21.2592%" y="581" width="0.1609%" height="15" fill="rgb(213,3,15)" fg:x="22721" fg:w="172"/><text x="21.5092%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="21.4258%" y="549" width="0.0178%" height="15" fill="rgb(252,211,39)" fg:x="22899" fg:w="19"/><text x="21.6758%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.4258%" y="629" width="0.0196%" height="15" fill="rgb(223,6,36)" fg:x="22899" fg:w="21"/><text x="21.6758%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.4258%" y="613" width="0.0196%" height="15" fill="rgb(252,169,45)" fg:x="22899" fg:w="21"/><text x="21.6758%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.4258%" y="597" width="0.0196%" height="15" fill="rgb(212,48,26)" fg:x="22899" fg:w="21"/><text x="21.6758%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.4258%" y="581" width="0.0196%" height="15" fill="rgb(251,102,48)" fg:x="22899" fg:w="21"/><text x="21.6758%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.4258%" y="565" width="0.0196%" height="15" fill="rgb(243,208,16)" fg:x="22899" fg:w="21"/><text x="21.6758%" y="575.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;abi_stable::std_types::tuple::Tuple2&lt;K,V&gt;&gt;&gt;::extend (33 samples, 0.03%)</title><rect x="21.4202%" y="757" width="0.0309%" height="15" fill="rgb(219,96,24)" fg:x="22893" fg:w="33"/><text x="21.6702%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (33 samples, 0.03%)</title><rect x="21.4202%" y="741" width="0.0309%" height="15" fill="rgb(219,33,29)" fg:x="22893" fg:w="33"/><text x="21.6702%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="21.4202%" y="725" width="0.0309%" height="15" fill="rgb(223,176,5)" fg:x="22893" fg:w="33"/><text x="21.6702%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="21.4202%" y="709" width="0.0309%" height="15" fill="rgb(228,140,14)" fg:x="22893" fg:w="33"/><text x="21.6702%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="21.4202%" y="693" width="0.0309%" height="15" fill="rgb(217,179,31)" fg:x="22893" fg:w="33"/><text x="21.6702%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (33 samples, 0.03%)</title><rect x="21.4202%" y="677" width="0.0309%" height="15" fill="rgb(230,9,30)" fg:x="22893" fg:w="33"/><text x="21.6702%" y="687.50"></text></g><g><title>abi_stable::erased_types::iterator::next (33 samples, 0.03%)</title><rect x="21.4202%" y="661" width="0.0309%" height="15" fill="rgb(230,136,20)" fg:x="22893" fg:w="33"/><text x="21.6702%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (27 samples, 0.03%)</title><rect x="21.4258%" y="645" width="0.0253%" height="15" fill="rgb(215,210,22)" fg:x="22899" fg:w="27"/><text x="21.6758%" y="655.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (13 samples, 0.01%)</title><rect x="21.4510%" y="677" width="0.0122%" height="15" fill="rgb(218,43,5)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="21.4510%" y="661" width="0.0122%" height="15" fill="rgb(216,11,5)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="21.4510%" y="645" width="0.0122%" height="15" fill="rgb(209,82,29)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="21.4510%" y="629" width="0.0122%" height="15" fill="rgb(244,115,12)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="21.4510%" y="613" width="0.0122%" height="15" fill="rgb(222,82,18)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="21.4510%" y="597" width="0.0122%" height="15" fill="rgb(249,227,8)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="607.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="21.4510%" y="581" width="0.0122%" height="15" fill="rgb(253,141,45)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="591.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="21.4510%" y="565" width="0.0122%" height="15" fill="rgb(234,184,4)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="21.4510%" y="549" width="0.0122%" height="15" fill="rgb(218,194,23)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="559.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="21.4510%" y="533" width="0.0122%" height="15" fill="rgb(235,66,41)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="21.4510%" y="517" width="0.0122%" height="15" fill="rgb(245,217,1)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="21.4510%" y="501" width="0.0122%" height="15" fill="rgb(229,91,1)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="21.4510%" y="485" width="0.0122%" height="15" fill="rgb(207,101,30)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="21.4510%" y="469" width="0.0122%" height="15" fill="rgb(223,82,49)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (13 samples, 0.01%)</title><rect x="21.4510%" y="453" width="0.0122%" height="15" fill="rgb(218,167,17)" fg:x="22926" fg:w="13"/><text x="21.7010%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (12 samples, 0.01%)</title><rect x="21.4520%" y="437" width="0.0112%" height="15" fill="rgb(208,103,14)" fg:x="22927" fg:w="12"/><text x="21.7020%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (10,188 samples, 9.53%)</title><rect x="11.9381%" y="789" width="9.5325%" height="15" fill="rgb(238,20,8)" fg:x="12759" fg:w="10188"/><text x="12.1881%" y="799.50">tremor_runtime..</text></g><g><title>tremor_pipeline::OpMeta::merge (54 samples, 0.05%)</title><rect x="21.4202%" y="773" width="0.0505%" height="15" fill="rgb(218,80,54)" fg:x="22893" fg:w="54"/><text x="21.6702%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (21 samples, 0.02%)</title><rect x="21.4510%" y="757" width="0.0196%" height="15" fill="rgb(240,144,17)" fg:x="22926" fg:w="21"/><text x="21.7010%" y="767.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (21 samples, 0.02%)</title><rect x="21.4510%" y="741" width="0.0196%" height="15" fill="rgb(245,27,50)" fg:x="22926" fg:w="21"/><text x="21.7010%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (21 samples, 0.02%)</title><rect x="21.4510%" y="725" width="0.0196%" height="15" fill="rgb(251,51,7)" fg:x="22926" fg:w="21"/><text x="21.7010%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (21 samples, 0.02%)</title><rect x="21.4510%" y="709" width="0.0196%" height="15" fill="rgb(245,217,29)" fg:x="22926" fg:w="21"/><text x="21.7010%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (21 samples, 0.02%)</title><rect x="21.4510%" y="693" width="0.0196%" height="15" fill="rgb(221,176,29)" fg:x="22926" fg:w="21"/><text x="21.7010%" y="703.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="21.6260%" y="741" width="0.0122%" height="15" fill="rgb(212,180,24)" fg:x="23113" fg:w="13"/><text x="21.8760%" y="751.50"></text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="21.6475%" y="677" width="0.0159%" height="15" fill="rgb(254,24,2)" fg:x="23136" fg:w="17"/><text x="21.8975%" y="687.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (26 samples, 0.02%)</title><rect x="21.7168%" y="645" width="0.0243%" height="15" fill="rgb(230,100,2)" fg:x="23210" fg:w="26"/><text x="21.9668%" y="655.50"></text></g><g><title> (26 samples, 0.02%)</title><rect x="21.7168%" y="629" width="0.0243%" height="15" fill="rgb(219,142,25)" fg:x="23210" fg:w="26"/><text x="21.9668%" y="639.50"></text></g><g><title>snmalloc::Remote::set_info (15 samples, 0.01%)</title><rect x="21.7411%" y="645" width="0.0140%" height="15" fill="rgb(240,73,43)" fg:x="23236" fg:w="15"/><text x="21.9911%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (101 samples, 0.09%)</title><rect x="21.6672%" y="677" width="0.0945%" height="15" fill="rgb(214,114,15)" fg:x="23157" fg:w="101"/><text x="21.9172%" y="687.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (85 samples, 0.08%)</title><rect x="21.6821%" y="661" width="0.0795%" height="15" fill="rgb(207,130,4)" fg:x="23173" fg:w="85"/><text x="21.9321%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (165 samples, 0.15%)</title><rect x="21.6475%" y="709" width="0.1544%" height="15" fill="rgb(221,25,40)" fg:x="23136" fg:w="165"/><text x="21.8975%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (165 samples, 0.15%)</title><rect x="21.6475%" y="693" width="0.1544%" height="15" fill="rgb(241,184,7)" fg:x="23136" fg:w="165"/><text x="21.8975%" y="703.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (38 samples, 0.04%)</title><rect x="21.7663%" y="677" width="0.0356%" height="15" fill="rgb(235,159,4)" fg:x="23263" fg:w="38"/><text x="22.0163%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (167 samples, 0.16%)</title><rect x="21.6475%" y="741" width="0.1563%" height="15" fill="rgb(214,87,48)" fg:x="23136" fg:w="167"/><text x="21.8975%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (167 samples, 0.16%)</title><rect x="21.6475%" y="725" width="0.1563%" height="15" fill="rgb(246,198,24)" fg:x="23136" fg:w="167"/><text x="21.8975%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (200 samples, 0.19%)</title><rect x="21.6251%" y="757" width="0.1871%" height="15" fill="rgb(209,66,40)" fg:x="23112" fg:w="200"/><text x="21.8751%" y="767.50"></text></g><g><title>rust_dealloc (218 samples, 0.20%)</title><rect x="21.6176%" y="773" width="0.2040%" height="15" fill="rgb(233,147,39)" fg:x="23104" fg:w="218"/><text x="21.8676%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (380 samples, 0.36%)</title><rect x="21.4707%" y="789" width="0.3556%" height="15" fill="rgb(231,145,52)" fg:x="22947" fg:w="380"/><text x="21.7207%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="23.1652%" y="773" width="0.0168%" height="15" fill="rgb(206,20,26)" fg:x="24758" fg:w="18"/><text x="23.4152%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="23.2877%" y="757" width="0.0140%" height="15" fill="rgb(238,220,4)" fg:x="24889" fg:w="15"/><text x="23.5377%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (603 samples, 0.56%)</title><rect x="23.5450%" y="741" width="0.5642%" height="15" fill="rgb(252,195,42)" fg:x="25164" fg:w="603"/><text x="23.7950%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (397 samples, 0.37%)</title><rect x="24.1092%" y="741" width="0.3715%" height="15" fill="rgb(209,10,6)" fg:x="25767" fg:w="397"/><text x="24.3592%" y="751.50"></text></g><g><title>core::ptr::write (374 samples, 0.35%)</title><rect x="24.1308%" y="725" width="0.3499%" height="15" fill="rgb(229,3,52)" fg:x="25790" fg:w="374"/><text x="24.3808%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (373 samples, 0.35%)</title><rect x="24.1317%" y="709" width="0.3490%" height="15" fill="rgb(253,49,37)" fg:x="25791" fg:w="373"/><text x="24.3817%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (45 samples, 0.04%)</title><rect x="24.4807%" y="741" width="0.0421%" height="15" fill="rgb(240,103,49)" fg:x="26164" fg:w="45"/><text x="24.7307%" y="751.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="24.5406%" y="709" width="0.0103%" height="15" fill="rgb(250,182,30)" fg:x="26228" fg:w="11"/><text x="24.7906%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="24.5406%" y="693" width="0.0103%" height="15" fill="rgb(248,8,30)" fg:x="26228" fg:w="11"/><text x="24.7906%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (820 samples, 0.77%)</title><rect x="24.5593%" y="645" width="0.7672%" height="15" fill="rgb(237,120,30)" fg:x="26248" fg:w="820"/><text x="24.8093%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (715 samples, 0.67%)</title><rect x="24.6575%" y="629" width="0.6690%" height="15" fill="rgb(221,146,34)" fg:x="26353" fg:w="715"/><text x="24.9075%" y="639.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (841 samples, 0.79%)</title><rect x="24.5406%" y="725" width="0.7869%" height="15" fill="rgb(242,55,13)" fg:x="26228" fg:w="841"/><text x="24.7906%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (821 samples, 0.77%)</title><rect x="24.5593%" y="709" width="0.7682%" height="15" fill="rgb(242,112,31)" fg:x="26248" fg:w="821"/><text x="24.8093%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (821 samples, 0.77%)</title><rect x="24.5593%" y="693" width="0.7682%" height="15" fill="rgb(249,192,27)" fg:x="26248" fg:w="821"/><text x="24.8093%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (821 samples, 0.77%)</title><rect x="24.5593%" y="677" width="0.7682%" height="15" fill="rgb(208,204,44)" fg:x="26248" fg:w="821"/><text x="24.8093%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (821 samples, 0.77%)</title><rect x="24.5593%" y="661" width="0.7682%" height="15" fill="rgb(208,93,54)" fg:x="26248" fg:w="821"/><text x="24.8093%" y="671.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (877 samples, 0.82%)</title><rect x="24.5228%" y="741" width="0.8206%" height="15" fill="rgb(242,1,31)" fg:x="26209" fg:w="877"/><text x="24.7728%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (17 samples, 0.02%)</title><rect x="25.3275%" y="725" width="0.0159%" height="15" fill="rgb(241,83,25)" fg:x="27069" fg:w="17"/><text x="25.5775%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (14 samples, 0.01%)</title><rect x="25.3556%" y="725" width="0.0131%" height="15" fill="rgb(205,169,50)" fg:x="27099" fg:w="14"/><text x="25.6056%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse::revswap (14 samples, 0.01%)</title><rect x="25.3556%" y="709" width="0.0131%" height="15" fill="rgb(239,186,37)" fg:x="27099" fg:w="14"/><text x="25.6056%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14 samples, 0.01%)</title><rect x="25.3556%" y="693" width="0.0131%" height="15" fill="rgb(205,221,10)" fg:x="27099" fg:w="14"/><text x="25.6056%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14 samples, 0.01%)</title><rect x="25.3556%" y="677" width="0.0131%" height="15" fill="rgb(218,196,15)" fg:x="27099" fg:w="14"/><text x="25.6056%" y="687.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="26.0554%" y="709" width="0.0225%" height="15" fill="rgb(218,196,35)" fg:x="27847" fg:w="24"/><text x="26.3054%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (63 samples, 0.06%)</title><rect x="26.0835%" y="709" width="0.0589%" height="15" fill="rgb(233,63,24)" fg:x="27877" fg:w="63"/><text x="26.3335%" y="719.50"></text></g><g><title>core::ptr::read (29 samples, 0.03%)</title><rect x="26.1153%" y="693" width="0.0271%" height="15" fill="rgb(225,8,4)" fg:x="27911" fg:w="29"/><text x="26.3653%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (440 samples, 0.41%)</title><rect x="26.1424%" y="709" width="0.4117%" height="15" fill="rgb(234,105,35)" fg:x="27940" fg:w="440"/><text x="26.3924%" y="719.50"></text></g><g><title>core::ptr::write (438 samples, 0.41%)</title><rect x="26.1443%" y="693" width="0.4098%" height="15" fill="rgb(236,21,32)" fg:x="27942" fg:w="438"/><text x="26.3943%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (423 samples, 0.40%)</title><rect x="26.1584%" y="677" width="0.3958%" height="15" fill="rgb(228,109,6)" fg:x="27957" fg:w="423"/><text x="26.4084%" y="687.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,289 samples, 1.21%)</title><rect x="25.3687%" y="725" width="1.2061%" height="15" fill="rgb(229,215,31)" fg:x="27113" fg:w="1289"/><text x="25.6187%" y="735.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (19 samples, 0.02%)</title><rect x="26.5569%" y="709" width="0.0178%" height="15" fill="rgb(221,52,54)" fg:x="28383" fg:w="19"/><text x="26.8069%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,363 samples, 1.28%)</title><rect x="25.3434%" y="741" width="1.2753%" height="15" fill="rgb(252,129,43)" fg:x="27086" fg:w="1363"/><text x="25.5934%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (47 samples, 0.04%)</title><rect x="26.5747%" y="725" width="0.0440%" height="15" fill="rgb(248,183,27)" fg:x="28402" fg:w="47"/><text x="26.8247%" y="735.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,547 samples, 3.32%)</title><rect x="23.3018%" y="757" width="3.3188%" height="15" fill="rgb(250,0,22)" fg:x="24904" fg:w="3547"/><text x="23.5518%" y="767.50">tre..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (38 samples, 0.04%)</title><rect x="26.6206%" y="757" width="0.0356%" height="15" fill="rgb(213,166,10)" fg:x="28451" fg:w="38"/><text x="26.8706%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,764 samples, 3.52%)</title><rect x="23.1820%" y="773" width="3.5218%" height="15" fill="rgb(207,163,36)" fg:x="24776" fg:w="3764"/><text x="23.4320%" y="783.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (51 samples, 0.05%)</title><rect x="26.6561%" y="757" width="0.0477%" height="15" fill="rgb(208,122,22)" fg:x="28489" fg:w="51"/><text x="26.9061%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,391 samples, 1.30%)</title><rect x="26.7038%" y="773" width="1.3015%" height="15" fill="rgb(207,104,49)" fg:x="28540" fg:w="1391"/><text x="26.9538%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (37 samples, 0.03%)</title><rect x="28.0054%" y="773" width="0.0346%" height="15" fill="rgb(248,211,50)" fg:x="29931" fg:w="37"/><text x="28.2554%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="28.0054%" y="757" width="0.0346%" height="15" fill="rgb(217,13,45)" fg:x="29931" fg:w="37"/><text x="28.2554%" y="767.50"></text></g><g><title>async_global_executor::reactor::block_on (17,224 samples, 16.12%)</title><rect x="11.9381%" y="1125" width="16.1159%" height="15" fill="rgb(211,216,49)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="1135.50">async_global_executor::re..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (17,224 samples, 16.12%)</title><rect x="11.9381%" y="1109" width="16.1159%" height="15" fill="rgb(221,58,53)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="1119.50">async_global_executor::re..</text></g><g><title>async_io::driver::block_on (17,224 samples, 16.12%)</title><rect x="11.9381%" y="1093" width="16.1159%" height="15" fill="rgb(220,112,41)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="1103.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,224 samples, 16.12%)</title><rect x="11.9381%" y="1077" width="16.1159%" height="15" fill="rgb(236,38,28)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="1087.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,224 samples, 16.12%)</title><rect x="11.9381%" y="1061" width="16.1159%" height="15" fill="rgb(227,195,22)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="1071.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}} (17,224 samples, 16.12%)</title><rect x="11.9381%" y="1045" width="16.1159%" height="15" fill="rgb(214,55,33)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="1055.50">async_executor::Executor:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,224 samples, 16.12%)</title><rect x="11.9381%" y="1029" width="16.1159%" height="15" fill="rgb(248,80,13)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="1039.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,224 samples, 16.12%)</title><rect x="11.9381%" y="1013" width="16.1159%" height="15" fill="rgb(238,52,6)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="1023.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (17,224 samples, 16.12%)</title><rect x="11.9381%" y="997" width="16.1159%" height="15" fill="rgb(224,198,47)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="1007.50">async_executor::Executor:..</text></g><g><title>async_task::runnable::Runnable::run (17,224 samples, 16.12%)</title><rect x="11.9381%" y="981" width="16.1159%" height="15" fill="rgb(233,171,20)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="991.50">async_task::runnable::Run..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (17,224 samples, 16.12%)</title><rect x="11.9381%" y="965" width="16.1159%" height="15" fill="rgb(241,30,25)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="975.50">async_task::raw::RawTask&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (17,224 samples, 16.12%)</title><rect x="11.9381%" y="949" width="16.1159%" height="15" fill="rgb(207,171,38)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="959.50">&lt;core::pin::Pin&lt;P&gt; as cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,224 samples, 16.12%)</title><rect x="11.9381%" y="933" width="16.1159%" height="15" fill="rgb(234,70,1)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="943.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (17,224 samples, 16.12%)</title><rect x="11.9381%" y="917" width="16.1159%" height="15" fill="rgb(232,178,18)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="927.50">async_executor::Executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (17,224 samples, 16.12%)</title><rect x="11.9381%" y="901" width="16.1159%" height="15" fill="rgb(241,78,40)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="911.50">&lt;async_std::task::builder..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (17,224 samples, 16.12%)</title><rect x="11.9381%" y="885" width="16.1159%" height="15" fill="rgb(222,35,25)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="895.50">async_std::task::task_loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17,224 samples, 16.12%)</title><rect x="11.9381%" y="869" width="16.1159%" height="15" fill="rgb(207,92,16)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="879.50">std::thread::local::Local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17,224 samples, 16.12%)</title><rect x="11.9381%" y="853" width="16.1159%" height="15" fill="rgb(216,59,51)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="863.50">std::thread::local::Local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (17,224 samples, 16.12%)</title><rect x="11.9381%" y="837" width="16.1159%" height="15" fill="rgb(213,80,28)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="847.50">async_std::task::task_loc..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (17,224 samples, 16.12%)</title><rect x="11.9381%" y="821" width="16.1159%" height="15" fill="rgb(220,93,7)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="831.50">&lt;async_std::task::builder..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,224 samples, 16.12%)</title><rect x="11.9381%" y="805" width="16.1159%" height="15" fill="rgb(225,24,44)" fg:x="12759" fg:w="17224"/><text x="12.1881%" y="815.50">&lt;core::future::from_gener..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,656 samples, 6.23%)</title><rect x="21.8262%" y="789" width="6.2278%" height="15" fill="rgb(243,74,40)" fg:x="23327" fg:w="6656"/><text x="22.0762%" y="799.50">tremor_r..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (64 samples, 0.06%)</title><rect x="28.0540%" y="661" width="0.0599%" height="15" fill="rgb(228,39,7)" fg:x="29983" fg:w="64"/><text x="28.3040%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="28.3899%" y="645" width="0.0140%" height="15" fill="rgb(227,79,8)" fg:x="30342" fg:w="15"/><text x="28.6399%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (15 samples, 0.01%)</title><rect x="28.3899%" y="629" width="0.0140%" height="15" fill="rgb(236,58,11)" fg:x="30342" fg:w="15"/><text x="28.6399%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (60 samples, 0.06%)</title><rect x="29.6680%" y="613" width="0.0561%" height="15" fill="rgb(249,63,35)" fg:x="31708" fg:w="60"/><text x="29.9180%" y="623.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (60 samples, 0.06%)</title><rect x="29.6680%" y="597" width="0.0561%" height="15" fill="rgb(252,114,16)" fg:x="31708" fg:w="60"/><text x="29.9180%" y="607.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (179 samples, 0.17%)</title><rect x="29.7242%" y="581" width="0.1675%" height="15" fill="rgb(254,151,24)" fg:x="31768" fg:w="179"/><text x="29.9742%" y="591.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (176 samples, 0.16%)</title><rect x="29.7270%" y="565" width="0.1647%" height="15" fill="rgb(253,54,39)" fg:x="31771" fg:w="176"/><text x="29.9770%" y="575.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (176 samples, 0.16%)</title><rect x="29.7270%" y="549" width="0.1647%" height="15" fill="rgb(243,25,45)" fg:x="31771" fg:w="176"/><text x="29.9770%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (31 samples, 0.03%)</title><rect x="29.9225%" y="533" width="0.0290%" height="15" fill="rgb(234,134,9)" fg:x="31980" fg:w="31"/><text x="30.1725%" y="543.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (31 samples, 0.03%)</title><rect x="29.9225%" y="517" width="0.0290%" height="15" fill="rgb(227,166,31)" fg:x="31980" fg:w="31"/><text x="30.1725%" y="527.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (31 samples, 0.03%)</title><rect x="29.9225%" y="501" width="0.0290%" height="15" fill="rgb(245,143,41)" fg:x="31980" fg:w="31"/><text x="30.1725%" y="511.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="29.9515%" y="485" width="0.0253%" height="15" fill="rgb(238,181,32)" fg:x="32011" fg:w="27"/><text x="30.2015%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.03%)</title><rect x="29.9515%" y="469" width="0.0253%" height="15" fill="rgb(224,113,18)" fg:x="32011" fg:w="27"/><text x="30.2015%" y="479.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (27 samples, 0.03%)</title><rect x="29.9515%" y="453" width="0.0253%" height="15" fill="rgb(240,229,28)" fg:x="32011" fg:w="27"/><text x="30.2015%" y="463.50"></text></g><g><title>async_ffi::FfiContext::with_context (16 samples, 0.01%)</title><rect x="29.9618%" y="437" width="0.0150%" height="15" fill="rgb(250,185,3)" fg:x="32022" fg:w="16"/><text x="30.2118%" y="447.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,365 samples, 1.28%)</title><rect x="29.9029%" y="565" width="1.2772%" height="15" fill="rgb(212,59,25)" fg:x="31959" fg:w="1365"/><text x="30.1529%" y="575.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,354 samples, 1.27%)</title><rect x="29.9132%" y="549" width="1.2669%" height="15" fill="rgb(221,87,20)" fg:x="31970" fg:w="1354"/><text x="30.1632%" y="559.50"></text></g><g><title>std::panic::catch_unwind (1,313 samples, 1.23%)</title><rect x="29.9515%" y="533" width="1.2285%" height="15" fill="rgb(213,74,28)" fg:x="32011" fg:w="1313"/><text x="30.2015%" y="543.50"></text></g><g><title>std::panicking::try (1,313 samples, 1.23%)</title><rect x="29.9515%" y="517" width="1.2285%" height="15" fill="rgb(224,132,34)" fg:x="32011" fg:w="1313"/><text x="30.2015%" y="527.50"></text></g><g><title>std::panicking::try::do_call (1,313 samples, 1.23%)</title><rect x="29.9515%" y="501" width="1.2285%" height="15" fill="rgb(222,101,24)" fg:x="32011" fg:w="1313"/><text x="30.2015%" y="511.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1,286 samples, 1.20%)</title><rect x="29.9768%" y="485" width="1.2033%" height="15" fill="rgb(254,142,4)" fg:x="32038" fg:w="1286"/><text x="30.2268%" y="495.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,388 samples, 1.30%)</title><rect x="29.8917%" y="581" width="1.2987%" height="15" fill="rgb(230,229,49)" fg:x="31947" fg:w="1388"/><text x="30.1417%" y="591.50"></text></g><g><title>core::task::wake::Context::waker (11 samples, 0.01%)</title><rect x="31.1801%" y="565" width="0.0103%" height="15" fill="rgb(238,70,47)" fg:x="33324" fg:w="11"/><text x="31.4301%" y="575.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,766 samples, 1.65%)</title><rect x="29.7242%" y="613" width="1.6524%" height="15" fill="rgb(231,160,17)" fg:x="31768" fg:w="1766"/><text x="29.9742%" y="623.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,766 samples, 1.65%)</title><rect x="29.7242%" y="597" width="1.6524%" height="15" fill="rgb(218,68,53)" fg:x="31768" fg:w="1766"/><text x="29.9742%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (199 samples, 0.19%)</title><rect x="31.1904%" y="581" width="0.1862%" height="15" fill="rgb(236,111,10)" fg:x="33335" fg:w="199"/><text x="31.4404%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (677 samples, 0.63%)</title><rect x="31.3765%" y="613" width="0.6334%" height="15" fill="rgb(224,34,41)" fg:x="33534" fg:w="677"/><text x="31.6265%" y="623.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (68 samples, 0.06%)</title><rect x="32.0100%" y="613" width="0.0636%" height="15" fill="rgb(241,118,19)" fg:x="34211" fg:w="68"/><text x="32.2600%" y="623.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (19 samples, 0.02%)</title><rect x="32.0736%" y="565" width="0.0178%" height="15" fill="rgb(238,129,25)" fg:x="34279" fg:w="19"/><text x="32.3236%" y="575.50"></text></g><g><title>async_ffi::DropBomb::with (19 samples, 0.02%)</title><rect x="32.0736%" y="549" width="0.0178%" height="15" fill="rgb(238,22,31)" fg:x="34279" fg:w="19"/><text x="32.3236%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (41 samples, 0.04%)</title><rect x="32.1054%" y="469" width="0.0384%" height="15" fill="rgb(222,174,48)" fg:x="34313" fg:w="41"/><text x="32.3554%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (41 samples, 0.04%)</title><rect x="32.1054%" y="453" width="0.0384%" height="15" fill="rgb(206,152,40)" fg:x="34313" fg:w="41"/><text x="32.3554%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (41 samples, 0.04%)</title><rect x="32.1054%" y="437" width="0.0384%" height="15" fill="rgb(218,99,54)" fg:x="34313" fg:w="41"/><text x="32.3554%" y="447.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="32.1326%" y="421" width="0.0112%" height="15" fill="rgb(220,174,26)" fg:x="34342" fg:w="12"/><text x="32.3826%" y="431.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="32.1326%" y="405" width="0.0112%" height="15" fill="rgb(245,116,9)" fg:x="34342" fg:w="12"/><text x="32.3826%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (54 samples, 0.05%)</title><rect x="32.1008%" y="501" width="0.0505%" height="15" fill="rgb(209,72,35)" fg:x="34308" fg:w="54"/><text x="32.3508%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (54 samples, 0.05%)</title><rect x="32.1008%" y="485" width="0.0505%" height="15" fill="rgb(226,126,21)" fg:x="34308" fg:w="54"/><text x="32.3508%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (60 samples, 0.06%)</title><rect x="32.1008%" y="533" width="0.0561%" height="15" fill="rgb(227,192,1)" fg:x="34308" fg:w="60"/><text x="32.3508%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (60 samples, 0.06%)</title><rect x="32.1008%" y="517" width="0.0561%" height="15" fill="rgb(237,180,29)" fg:x="34308" fg:w="60"/><text x="32.3508%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (66 samples, 0.06%)</title><rect x="32.0998%" y="549" width="0.0618%" height="15" fill="rgb(230,197,35)" fg:x="34307" fg:w="66"/><text x="32.3498%" y="559.50"></text></g><g><title>rust_dealloc (81 samples, 0.08%)</title><rect x="32.0914%" y="565" width="0.0758%" height="15" fill="rgb(246,193,31)" fg:x="34298" fg:w="81"/><text x="32.3414%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (15 samples, 0.01%)</title><rect x="32.1691%" y="549" width="0.0140%" height="15" fill="rgb(241,36,4)" fg:x="34381" fg:w="15"/><text x="32.4191%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (118 samples, 0.11%)</title><rect x="32.0736%" y="613" width="0.1104%" height="15" fill="rgb(241,130,17)" fg:x="34279" fg:w="118"/><text x="32.3236%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (118 samples, 0.11%)</title><rect x="32.0736%" y="597" width="0.1104%" height="15" fill="rgb(206,137,32)" fg:x="34279" fg:w="118"/><text x="32.3236%" y="607.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (118 samples, 0.11%)</title><rect x="32.0736%" y="581" width="0.1104%" height="15" fill="rgb(237,228,51)" fg:x="34279" fg:w="118"/><text x="32.3236%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (18 samples, 0.02%)</title><rect x="32.1672%" y="565" width="0.0168%" height="15" fill="rgb(243,6,42)" fg:x="34379" fg:w="18"/><text x="32.4172%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (157 samples, 0.15%)</title><rect x="32.6752%" y="597" width="0.1469%" height="15" fill="rgb(251,74,28)" fg:x="34922" fg:w="157"/><text x="32.9252%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (203 samples, 0.19%)</title><rect x="32.8661%" y="501" width="0.1899%" height="15" fill="rgb(218,20,49)" fg:x="35126" fg:w="203"/><text x="33.1161%" y="511.50"></text></g><g><title>rust_alloc (41 samples, 0.04%)</title><rect x="33.0748%" y="357" width="0.0384%" height="15" fill="rgb(238,28,14)" fg:x="35349" fg:w="41"/><text x="33.3248%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (17 samples, 0.02%)</title><rect x="33.1262%" y="341" width="0.0159%" height="15" fill="rgb(229,40,46)" fg:x="35404" fg:w="17"/><text x="33.3762%" y="351.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (17 samples, 0.02%)</title><rect x="33.1262%" y="325" width="0.0159%" height="15" fill="rgb(244,195,20)" fg:x="35404" fg:w="17"/><text x="33.3762%" y="335.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (17 samples, 0.02%)</title><rect x="33.1262%" y="309" width="0.0159%" height="15" fill="rgb(253,56,35)" fg:x="35404" fg:w="17"/><text x="33.3762%" y="319.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="33.1262%" y="293" width="0.0159%" height="15" fill="rgb(210,149,44)" fg:x="35404" fg:w="17"/><text x="33.3762%" y="303.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="33.1262%" y="277" width="0.0159%" height="15" fill="rgb(240,135,12)" fg:x="35404" fg:w="17"/><text x="33.3762%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="33.1440%" y="277" width="0.0122%" height="15" fill="rgb(251,24,50)" fg:x="35423" fg:w="13"/><text x="33.3940%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="33.1440%" y="261" width="0.0122%" height="15" fill="rgb(243,200,47)" fg:x="35423" fg:w="13"/><text x="33.3940%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (16 samples, 0.01%)</title><rect x="33.1440%" y="293" width="0.0150%" height="15" fill="rgb(224,166,26)" fg:x="35423" fg:w="16"/><text x="33.3940%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (20 samples, 0.02%)</title><rect x="33.1421%" y="309" width="0.0187%" height="15" fill="rgb(233,0,47)" fg:x="35421" fg:w="20"/><text x="33.3921%" y="319.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (17 samples, 0.02%)</title><rect x="33.1655%" y="293" width="0.0159%" height="15" fill="rgb(253,80,5)" fg:x="35446" fg:w="17"/><text x="33.4155%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (182 samples, 0.17%)</title><rect x="33.1421%" y="341" width="0.1703%" height="15" fill="rgb(214,133,25)" fg:x="35421" fg:w="182"/><text x="33.3921%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (182 samples, 0.17%)</title><rect x="33.1421%" y="325" width="0.1703%" height="15" fill="rgb(209,27,14)" fg:x="35421" fg:w="182"/><text x="33.3921%" y="335.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (162 samples, 0.15%)</title><rect x="33.1609%" y="309" width="0.1516%" height="15" fill="rgb(219,102,51)" fg:x="35441" fg:w="162"/><text x="33.4109%" y="319.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (140 samples, 0.13%)</title><rect x="33.1814%" y="293" width="0.1310%" height="15" fill="rgb(237,18,16)" fg:x="35463" fg:w="140"/><text x="33.4314%" y="303.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (140 samples, 0.13%)</title><rect x="33.1814%" y="277" width="0.1310%" height="15" fill="rgb(241,85,17)" fg:x="35463" fg:w="140"/><text x="33.4314%" y="287.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (140 samples, 0.13%)</title><rect x="33.1814%" y="261" width="0.1310%" height="15" fill="rgb(236,90,42)" fg:x="35463" fg:w="140"/><text x="33.4314%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (22 samples, 0.02%)</title><rect x="33.3227%" y="309" width="0.0206%" height="15" fill="rgb(249,57,21)" fg:x="35614" fg:w="22"/><text x="33.5727%" y="319.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (22 samples, 0.02%)</title><rect x="33.3227%" y="293" width="0.0206%" height="15" fill="rgb(243,12,36)" fg:x="35614" fg:w="22"/><text x="33.5727%" y="303.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="33.3237%" y="277" width="0.0196%" height="15" fill="rgb(253,128,47)" fg:x="35615" fg:w="21"/><text x="33.5737%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::take (35 samples, 0.03%)</title><rect x="33.3433%" y="309" width="0.0327%" height="15" fill="rgb(207,33,20)" fg:x="35636" fg:w="35"/><text x="33.5933%" y="319.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (35 samples, 0.03%)</title><rect x="33.3433%" y="293" width="0.0327%" height="15" fill="rgb(233,215,35)" fg:x="35636" fg:w="35"/><text x="33.5933%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (78 samples, 0.07%)</title><rect x="33.3124%" y="341" width="0.0730%" height="15" fill="rgb(249,188,52)" fg:x="35603" fg:w="78"/><text x="33.5624%" y="351.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (68 samples, 0.06%)</title><rect x="33.3218%" y="325" width="0.0636%" height="15" fill="rgb(225,12,32)" fg:x="35613" fg:w="68"/><text x="33.5718%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="33.3854%" y="341" width="0.0112%" height="15" fill="rgb(247,98,14)" fg:x="35681" fg:w="12"/><text x="33.6354%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="33.3864%" y="325" width="0.0103%" height="15" fill="rgb(247,219,48)" fg:x="35682" fg:w="11"/><text x="33.6364%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::empty (91 samples, 0.09%)</title><rect x="33.3966%" y="341" width="0.0851%" height="15" fill="rgb(253,60,48)" fg:x="35693" fg:w="91"/><text x="33.6466%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (91 samples, 0.09%)</title><rect x="33.3966%" y="325" width="0.0851%" height="15" fill="rgb(245,15,52)" fg:x="35693" fg:w="91"/><text x="33.6466%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (859 samples, 0.80%)</title><rect x="33.0748%" y="389" width="0.8037%" height="15" fill="rgb(220,133,28)" fg:x="35349" fg:w="859"/><text x="33.3248%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (859 samples, 0.80%)</title><rect x="33.0748%" y="373" width="0.8037%" height="15" fill="rgb(217,180,4)" fg:x="35349" fg:w="859"/><text x="33.3248%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (818 samples, 0.77%)</title><rect x="33.1131%" y="357" width="0.7654%" height="15" fill="rgb(251,24,1)" fg:x="35390" fg:w="818"/><text x="33.3631%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (424 samples, 0.40%)</title><rect x="33.4818%" y="341" width="0.3967%" height="15" fill="rgb(212,185,49)" fg:x="35784" fg:w="424"/><text x="33.7318%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (424 samples, 0.40%)</title><rect x="33.4818%" y="325" width="0.3967%" height="15" fill="rgb(215,175,22)" fg:x="35784" fg:w="424"/><text x="33.7318%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,104 samples, 1.03%)</title><rect x="32.8465%" y="517" width="1.0330%" height="15" fill="rgb(250,205,14)" fg:x="35105" fg:w="1104"/><text x="33.0965%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (880 samples, 0.82%)</title><rect x="33.0561%" y="501" width="0.8234%" height="15" fill="rgb(225,211,22)" fg:x="35329" fg:w="880"/><text x="33.3061%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (880 samples, 0.82%)</title><rect x="33.0561%" y="485" width="0.8234%" height="15" fill="rgb(251,179,42)" fg:x="35329" fg:w="880"/><text x="33.3061%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (880 samples, 0.82%)</title><rect x="33.0561%" y="469" width="0.8234%" height="15" fill="rgb(208,216,51)" fg:x="35329" fg:w="880"/><text x="33.3061%" y="479.50"></text></g><g><title>alloc::alloc::alloc (880 samples, 0.82%)</title><rect x="33.0561%" y="453" width="0.8234%" height="15" fill="rgb(235,36,11)" fg:x="35329" fg:w="880"/><text x="33.3061%" y="463.50"></text></g><g><title>__rg_alloc (880 samples, 0.82%)</title><rect x="33.0561%" y="437" width="0.8234%" height="15" fill="rgb(213,189,28)" fg:x="35329" fg:w="880"/><text x="33.3061%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (880 samples, 0.82%)</title><rect x="33.0561%" y="421" width="0.8234%" height="15" fill="rgb(227,203,42)" fg:x="35329" fg:w="880"/><text x="33.3061%" y="431.50"></text></g><g><title>rust_alloc (871 samples, 0.81%)</title><rect x="33.0645%" y="405" width="0.8150%" height="15" fill="rgb(244,72,36)" fg:x="35338" fg:w="871"/><text x="33.3145%" y="415.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (1,129 samples, 1.06%)</title><rect x="32.8296%" y="597" width="1.0564%" height="15" fill="rgb(213,53,17)" fg:x="35087" fg:w="1129"/><text x="33.0796%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (1,111 samples, 1.04%)</title><rect x="32.8465%" y="581" width="1.0395%" height="15" fill="rgb(207,167,3)" fg:x="35105" fg:w="1111"/><text x="33.0965%" y="591.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (1,111 samples, 1.04%)</title><rect x="32.8465%" y="565" width="1.0395%" height="15" fill="rgb(216,98,30)" fg:x="35105" fg:w="1111"/><text x="33.0965%" y="575.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (1,111 samples, 1.04%)</title><rect x="32.8465%" y="549" width="1.0395%" height="15" fill="rgb(236,123,15)" fg:x="35105" fg:w="1111"/><text x="33.0965%" y="559.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (1,111 samples, 1.04%)</title><rect x="32.8465%" y="533" width="1.0395%" height="15" fill="rgb(248,81,50)" fg:x="35105" fg:w="1111"/><text x="33.0965%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (5,557 samples, 5.20%)</title><rect x="28.7136%" y="629" width="5.1995%" height="15" fill="rgb(214,120,4)" fg:x="30688" fg:w="5557"/><text x="28.9636%" y="639.50">tremor..</text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (1,848 samples, 1.73%)</title><rect x="32.1840%" y="613" width="1.7291%" height="15" fill="rgb(208,179,34)" fg:x="34397" fg:w="1848"/><text x="32.4340%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::_::&lt;impl tremor_runtime::connectors::sink::RawSink_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::on_event (29 samples, 0.03%)</title><rect x="33.8860%" y="597" width="0.0271%" height="15" fill="rgb(227,140,7)" fg:x="36216" fg:w="29"/><text x="34.1360%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,869 samples, 5.49%)</title><rect x="28.4227%" y="645" width="5.4914%" height="15" fill="rgb(214,22,6)" fg:x="30377" fg:w="5869"/><text x="28.6727%" y="655.50">&lt;core::..</text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="33.9141%" y="645" width="0.0271%" height="15" fill="rgb(207,137,27)" fg:x="36246" fg:w="29"/><text x="34.1641%" y="655.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (95 samples, 0.09%)</title><rect x="33.9637%" y="629" width="0.0889%" height="15" fill="rgb(210,8,46)" fg:x="36299" fg:w="95"/><text x="34.2137%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (70 samples, 0.07%)</title><rect x="33.9871%" y="613" width="0.0655%" height="15" fill="rgb(240,16,54)" fg:x="36324" fg:w="70"/><text x="34.2371%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (36 samples, 0.03%)</title><rect x="34.0189%" y="597" width="0.0337%" height="15" fill="rgb(211,209,29)" fg:x="36358" fg:w="36"/><text x="34.2689%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (36 samples, 0.03%)</title><rect x="34.0189%" y="581" width="0.0337%" height="15" fill="rgb(226,228,24)" fg:x="36358" fg:w="36"/><text x="34.2689%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36 samples, 0.03%)</title><rect x="34.0189%" y="565" width="0.0337%" height="15" fill="rgb(222,84,9)" fg:x="36358" fg:w="36"/><text x="34.2689%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (36 samples, 0.03%)</title><rect x="34.0189%" y="549" width="0.0337%" height="15" fill="rgb(234,203,30)" fg:x="36358" fg:w="36"/><text x="34.2689%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (36 samples, 0.03%)</title><rect x="34.0189%" y="533" width="0.0337%" height="15" fill="rgb(238,109,14)" fg:x="36358" fg:w="36"/><text x="34.2689%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (36 samples, 0.03%)</title><rect x="34.0189%" y="517" width="0.0337%" height="15" fill="rgb(233,206,34)" fg:x="36358" fg:w="36"/><text x="34.2689%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.02%)</title><rect x="34.0292%" y="501" width="0.0234%" height="15" fill="rgb(220,167,47)" fg:x="36369" fg:w="25"/><text x="34.2792%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.02%)</title><rect x="34.0348%" y="485" width="0.0178%" height="15" fill="rgb(238,105,10)" fg:x="36375" fg:w="19"/><text x="34.2848%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array (19 samples, 0.02%)</title><rect x="34.0348%" y="469" width="0.0178%" height="15" fill="rgb(213,227,17)" fg:x="36375" fg:w="19"/><text x="34.2848%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (18 samples, 0.02%)</title><rect x="34.0357%" y="453" width="0.0168%" height="15" fill="rgb(217,132,38)" fg:x="36376" fg:w="18"/><text x="34.2857%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (18 samples, 0.02%)</title><rect x="34.0357%" y="437" width="0.0168%" height="15" fill="rgb(242,146,4)" fg:x="36376" fg:w="18"/><text x="34.2857%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="34.0525%" y="629" width="0.0262%" height="15" fill="rgb(212,61,9)" fg:x="36394" fg:w="28"/><text x="34.3025%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (159 samples, 0.15%)</title><rect x="33.9412%" y="645" width="0.1488%" height="15" fill="rgb(247,126,22)" fg:x="36275" fg:w="159"/><text x="34.1912%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (12 samples, 0.01%)</title><rect x="34.0787%" y="629" width="0.0112%" height="15" fill="rgb(220,196,2)" fg:x="36422" fg:w="12"/><text x="34.3287%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,813 samples, 1.70%)</title><rect x="34.0900%" y="645" width="1.6964%" height="15" fill="rgb(208,46,4)" fg:x="36434" fg:w="1813"/><text x="34.3400%" y="655.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="35.7938%" y="469" width="0.0140%" height="15" fill="rgb(252,104,46)" fg:x="38255" fg:w="15"/><text x="36.0438%" y="479.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (37 samples, 0.03%)</title><rect x="35.9201%" y="357" width="0.0346%" height="15" fill="rgb(237,152,48)" fg:x="38390" fg:w="37"/><text x="36.1701%" y="367.50"></text></g><g><title> (37 samples, 0.03%)</title><rect x="35.9201%" y="341" width="0.0346%" height="15" fill="rgb(221,59,37)" fg:x="38390" fg:w="37"/><text x="36.1701%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (150 samples, 0.14%)</title><rect x="35.8219%" y="389" width="0.1403%" height="15" fill="rgb(209,202,51)" fg:x="38285" fg:w="150"/><text x="36.0719%" y="399.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (139 samples, 0.13%)</title><rect x="35.8322%" y="373" width="0.1301%" height="15" fill="rgb(228,81,30)" fg:x="38296" fg:w="139"/><text x="36.0822%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (201 samples, 0.19%)</title><rect x="35.8116%" y="421" width="0.1881%" height="15" fill="rgb(227,42,39)" fg:x="38274" fg:w="201"/><text x="36.0616%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (201 samples, 0.19%)</title><rect x="35.8116%" y="405" width="0.1881%" height="15" fill="rgb(221,26,2)" fg:x="38274" fg:w="201"/><text x="36.0616%" y="415.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (37 samples, 0.03%)</title><rect x="35.9650%" y="389" width="0.0346%" height="15" fill="rgb(254,61,31)" fg:x="38438" fg:w="37"/><text x="36.2150%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (204 samples, 0.19%)</title><rect x="35.8116%" y="453" width="0.1909%" height="15" fill="rgb(222,173,38)" fg:x="38274" fg:w="204"/><text x="36.0616%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (204 samples, 0.19%)</title><rect x="35.8116%" y="437" width="0.1909%" height="15" fill="rgb(218,50,12)" fg:x="38274" fg:w="204"/><text x="36.0616%" y="447.50"></text></g><g><title>rust_dealloc (225 samples, 0.21%)</title><rect x="35.7929%" y="485" width="0.2105%" height="15" fill="rgb(223,88,40)" fg:x="38254" fg:w="225"/><text x="36.0429%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (209 samples, 0.20%)</title><rect x="35.8079%" y="469" width="0.1956%" height="15" fill="rgb(237,54,19)" fg:x="38270" fg:w="209"/><text x="36.0579%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (233 samples, 0.22%)</title><rect x="35.7863%" y="645" width="0.2180%" height="15" fill="rgb(251,129,25)" fg:x="38247" fg:w="233"/><text x="36.0363%" y="655.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (233 samples, 0.22%)</title><rect x="35.7863%" y="629" width="0.2180%" height="15" fill="rgb(238,97,19)" fg:x="38247" fg:w="233"/><text x="36.0363%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (226 samples, 0.21%)</title><rect x="35.7929%" y="613" width="0.2115%" height="15" fill="rgb(240,169,18)" fg:x="38254" fg:w="226"/><text x="36.0429%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (226 samples, 0.21%)</title><rect x="35.7929%" y="597" width="0.2115%" height="15" fill="rgb(230,187,49)" fg:x="38254" fg:w="226"/><text x="36.0429%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (226 samples, 0.21%)</title><rect x="35.7929%" y="581" width="0.2115%" height="15" fill="rgb(209,44,26)" fg:x="38254" fg:w="226"/><text x="36.0429%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (226 samples, 0.21%)</title><rect x="35.7929%" y="565" width="0.2115%" height="15" fill="rgb(244,0,6)" fg:x="38254" fg:w="226"/><text x="36.0429%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (226 samples, 0.21%)</title><rect x="35.7929%" y="549" width="0.2115%" height="15" fill="rgb(248,18,21)" fg:x="38254" fg:w="226"/><text x="36.0429%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (226 samples, 0.21%)</title><rect x="35.7929%" y="533" width="0.2115%" height="15" fill="rgb(245,180,19)" fg:x="38254" fg:w="226"/><text x="36.0429%" y="543.50"></text></g><g><title>__rg_dealloc (226 samples, 0.21%)</title><rect x="35.7929%" y="517" width="0.2115%" height="15" fill="rgb(252,118,36)" fg:x="38254" fg:w="226"/><text x="36.0429%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (226 samples, 0.21%)</title><rect x="35.7929%" y="501" width="0.2115%" height="15" fill="rgb(210,224,19)" fg:x="38254" fg:w="226"/><text x="36.0429%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="36.0043%" y="629" width="0.0215%" height="15" fill="rgb(218,30,24)" fg:x="38480" fg:w="23"/><text x="36.2543%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (30 samples, 0.03%)</title><rect x="36.0043%" y="645" width="0.0281%" height="15" fill="rgb(219,75,50)" fg:x="38480" fg:w="30"/><text x="36.2543%" y="655.50"></text></g><g><title>core::time::Duration::as_nanos (29 samples, 0.03%)</title><rect x="36.0792%" y="629" width="0.0271%" height="15" fill="rgb(234,72,50)" fg:x="38560" fg:w="29"/><text x="36.3292%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (131 samples, 0.12%)</title><rect x="36.2018%" y="581" width="0.1226%" height="15" fill="rgb(219,100,48)" fg:x="38691" fg:w="131"/><text x="36.4518%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (131 samples, 0.12%)</title><rect x="36.2018%" y="565" width="0.1226%" height="15" fill="rgb(253,5,41)" fg:x="38691" fg:w="131"/><text x="36.4518%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (128 samples, 0.12%)</title><rect x="36.2046%" y="549" width="0.1198%" height="15" fill="rgb(247,181,11)" fg:x="38694" fg:w="128"/><text x="36.4546%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (128 samples, 0.12%)</title><rect x="36.2046%" y="533" width="0.1198%" height="15" fill="rgb(222,223,25)" fg:x="38694" fg:w="128"/><text x="36.4546%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (128 samples, 0.12%)</title><rect x="36.2046%" y="517" width="0.1198%" height="15" fill="rgb(214,198,28)" fg:x="38694" fg:w="128"/><text x="36.4546%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (69 samples, 0.06%)</title><rect x="36.2598%" y="501" width="0.0646%" height="15" fill="rgb(230,46,43)" fg:x="38753" fg:w="69"/><text x="36.5098%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (279 samples, 0.26%)</title><rect x="36.1063%" y="613" width="0.2611%" height="15" fill="rgb(233,65,53)" fg:x="38589" fg:w="279"/><text x="36.3563%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (279 samples, 0.26%)</title><rect x="36.1063%" y="597" width="0.2611%" height="15" fill="rgb(221,121,27)" fg:x="38589" fg:w="279"/><text x="36.3563%" y="607.50"></text></g><g><title>core::time::Duration::new (46 samples, 0.04%)</title><rect x="36.3243%" y="581" width="0.0430%" height="15" fill="rgb(247,70,47)" fg:x="38822" fg:w="46"/><text x="36.5743%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (308 samples, 0.29%)</title><rect x="36.1063%" y="629" width="0.2882%" height="15" fill="rgb(228,85,35)" fg:x="38589" fg:w="308"/><text x="36.3563%" y="639.50"></text></g><g><title>tremor_common::time::nanotime (29 samples, 0.03%)</title><rect x="36.3674%" y="613" width="0.0271%" height="15" fill="rgb(209,50,18)" fg:x="38868" fg:w="29"/><text x="36.6174%" y="623.50"></text></g><g><title>__clock_gettime_2 (1,124 samples, 1.05%)</title><rect x="36.6209%" y="581" width="1.0517%" height="15" fill="rgb(250,19,35)" fg:x="39139" fg:w="1124"/><text x="36.8709%" y="591.50"></text></g><g><title>__vdso_clock_gettime (991 samples, 0.93%)</title><rect x="36.7454%" y="565" width="0.9272%" height="15" fill="rgb(253,107,29)" fg:x="39272" fg:w="991"/><text x="36.9954%" y="575.50"></text></g><g><title>[[vdso]] (661 samples, 0.62%)</title><rect x="37.0542%" y="549" width="0.6185%" height="15" fill="rgb(252,179,29)" fg:x="39602" fg:w="661"/><text x="37.3042%" y="559.50"></text></g><g><title>tremor_common::time::nanotime (1,754 samples, 1.64%)</title><rect x="36.0324%" y="645" width="1.6412%" height="15" fill="rgb(238,194,6)" fg:x="38510" fg:w="1754"/><text x="36.2824%" y="655.50"></text></g><g><title>std::time::SystemTime::now (1,367 samples, 1.28%)</title><rect x="36.3945%" y="629" width="1.2791%" height="15" fill="rgb(238,164,29)" fg:x="38897" fg:w="1367"/><text x="36.6445%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,367 samples, 1.28%)</title><rect x="36.3945%" y="613" width="1.2791%" height="15" fill="rgb(224,25,9)" fg:x="38897" fg:w="1367"/><text x="36.6445%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (1,367 samples, 1.28%)</title><rect x="36.3945%" y="597" width="1.2791%" height="15" fill="rgb(244,153,23)" fg:x="38897" fg:w="1367"/><text x="36.6445%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (12 samples, 0.01%)</title><rect x="37.6857%" y="533" width="0.0112%" height="15" fill="rgb(212,203,14)" fg:x="40277" fg:w="12"/><text x="37.9357%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="37.6857%" y="517" width="0.0112%" height="15" fill="rgb(220,164,20)" fg:x="40277" fg:w="12"/><text x="37.9357%" y="527.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (12 samples, 0.01%)</title><rect x="37.6857%" y="501" width="0.0112%" height="15" fill="rgb(222,203,48)" fg:x="40277" fg:w="12"/><text x="37.9357%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.03%)</title><rect x="37.6820%" y="597" width="0.0346%" height="15" fill="rgb(215,159,22)" fg:x="40273" fg:w="37"/><text x="37.9320%" y="607.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.03%)</title><rect x="37.6820%" y="581" width="0.0346%" height="15" fill="rgb(216,183,47)" fg:x="40273" fg:w="37"/><text x="37.9320%" y="591.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.03%)</title><rect x="37.6820%" y="565" width="0.0346%" height="15" fill="rgb(229,195,25)" fg:x="40273" fg:w="37"/><text x="37.9320%" y="575.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (33 samples, 0.03%)</title><rect x="37.6857%" y="549" width="0.0309%" height="15" fill="rgb(224,132,51)" fg:x="40277" fg:w="33"/><text x="37.9357%" y="559.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (11 samples, 0.01%)</title><rect x="37.7063%" y="533" width="0.0103%" height="15" fill="rgb(240,63,7)" fg:x="40299" fg:w="11"/><text x="37.9563%" y="543.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (11 samples, 0.01%)</title><rect x="37.7063%" y="517" width="0.0103%" height="15" fill="rgb(249,182,41)" fg:x="40299" fg:w="11"/><text x="37.9563%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="37.7063%" y="501" width="0.0103%" height="15" fill="rgb(243,47,26)" fg:x="40299" fg:w="11"/><text x="37.9563%" y="511.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (11 samples, 0.01%)</title><rect x="37.7063%" y="485" width="0.0103%" height="15" fill="rgb(233,48,2)" fg:x="40299" fg:w="11"/><text x="37.9563%" y="495.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_ref (11 samples, 0.01%)</title><rect x="37.7372%" y="533" width="0.0103%" height="15" fill="rgb(244,165,34)" fg:x="40332" fg:w="11"/><text x="37.9872%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (48 samples, 0.04%)</title><rect x="37.7166%" y="597" width="0.0449%" height="15" fill="rgb(207,89,7)" fg:x="40310" fg:w="48"/><text x="37.9666%" y="607.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (48 samples, 0.04%)</title><rect x="37.7166%" y="581" width="0.0449%" height="15" fill="rgb(244,117,36)" fg:x="40310" fg:w="48"/><text x="37.9666%" y="591.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (48 samples, 0.04%)</title><rect x="37.7166%" y="565" width="0.0449%" height="15" fill="rgb(226,144,34)" fg:x="40310" fg:w="48"/><text x="37.9666%" y="575.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (48 samples, 0.04%)</title><rect x="37.7166%" y="549" width="0.0449%" height="15" fill="rgb(213,23,19)" fg:x="40310" fg:w="48"/><text x="37.9666%" y="559.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;abi_stable::std_types::tuple::Tuple2&lt;K,V&gt;&gt;&gt;::extend (128 samples, 0.12%)</title><rect x="37.6736%" y="629" width="0.1198%" height="15" fill="rgb(217,75,12)" fg:x="40264" fg:w="128"/><text x="37.9236%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (128 samples, 0.12%)</title><rect x="37.6736%" y="613" width="0.1198%" height="15" fill="rgb(224,159,17)" fg:x="40264" fg:w="128"/><text x="37.9236%" y="623.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (34 samples, 0.03%)</title><rect x="37.7615%" y="597" width="0.0318%" height="15" fill="rgb(217,118,1)" fg:x="40358" fg:w="34"/><text x="38.0115%" y="607.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (22 samples, 0.02%)</title><rect x="37.7727%" y="581" width="0.0206%" height="15" fill="rgb(232,180,48)" fg:x="40370" fg:w="22"/><text x="38.0227%" y="591.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (22 samples, 0.02%)</title><rect x="37.7727%" y="565" width="0.0206%" height="15" fill="rgb(230,27,33)" fg:x="40370" fg:w="22"/><text x="38.0227%" y="575.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (22 samples, 0.02%)</title><rect x="37.7727%" y="549" width="0.0206%" height="15" fill="rgb(205,31,21)" fg:x="40370" fg:w="22"/><text x="38.0227%" y="559.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (22 samples, 0.02%)</title><rect x="37.7727%" y="533" width="0.0206%" height="15" fill="rgb(253,59,4)" fg:x="40370" fg:w="22"/><text x="38.0227%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (22 samples, 0.02%)</title><rect x="37.7727%" y="517" width="0.0206%" height="15" fill="rgb(224,201,9)" fg:x="40370" fg:w="22"/><text x="38.0227%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (22 samples, 0.02%)</title><rect x="37.7727%" y="501" width="0.0206%" height="15" fill="rgb(229,206,30)" fg:x="40370" fg:w="22"/><text x="38.0227%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (22 samples, 0.02%)</title><rect x="37.7727%" y="485" width="0.0206%" height="15" fill="rgb(212,67,47)" fg:x="40370" fg:w="22"/><text x="38.0227%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (28 samples, 0.03%)</title><rect x="38.2668%" y="501" width="0.0262%" height="15" fill="rgb(211,96,50)" fg:x="40898" fg:w="28"/><text x="38.5168%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (54 samples, 0.05%)</title><rect x="38.2995%" y="469" width="0.0505%" height="15" fill="rgb(252,114,18)" fg:x="40933" fg:w="54"/><text x="38.5495%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (54 samples, 0.05%)</title><rect x="38.2995%" y="453" width="0.0505%" height="15" fill="rgb(223,58,37)" fg:x="40933" fg:w="54"/><text x="38.5495%" y="463.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (11 samples, 0.01%)</title><rect x="38.3501%" y="453" width="0.0103%" height="15" fill="rgb(237,70,4)" fg:x="40987" fg:w="11"/><text x="38.6001%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (86 samples, 0.08%)</title><rect x="38.2995%" y="485" width="0.0805%" height="15" fill="rgb(244,85,46)" fg:x="40933" fg:w="86"/><text x="38.5495%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (32 samples, 0.03%)</title><rect x="38.3501%" y="469" width="0.0299%" height="15" fill="rgb(223,39,52)" fg:x="40987" fg:w="32"/><text x="38.6001%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (21 samples, 0.02%)</title><rect x="38.3603%" y="453" width="0.0196%" height="15" fill="rgb(218,200,14)" fg:x="40998" fg:w="21"/><text x="38.6103%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (21 samples, 0.02%)</title><rect x="38.3603%" y="437" width="0.0196%" height="15" fill="rgb(208,171,16)" fg:x="40998" fg:w="21"/><text x="38.6103%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (662 samples, 0.62%)</title><rect x="37.8074%" y="549" width="0.6194%" height="15" fill="rgb(234,200,18)" fg:x="40407" fg:w="662"/><text x="38.0574%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (616 samples, 0.58%)</title><rect x="37.8504%" y="533" width="0.5764%" height="15" fill="rgb(228,45,11)" fg:x="40453" fg:w="616"/><text x="38.1004%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (182 samples, 0.17%)</title><rect x="38.2565%" y="517" width="0.1703%" height="15" fill="rgb(237,182,11)" fg:x="40887" fg:w="182"/><text x="38.5065%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (143 samples, 0.13%)</title><rect x="38.2930%" y="501" width="0.1338%" height="15" fill="rgb(241,175,49)" fg:x="40926" fg:w="143"/><text x="38.5430%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (50 samples, 0.05%)</title><rect x="38.3800%" y="485" width="0.0468%" height="15" fill="rgb(247,38,35)" fg:x="41019" fg:w="50"/><text x="38.6300%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.04%)</title><rect x="38.4661%" y="389" width="0.0449%" height="15" fill="rgb(228,39,49)" fg:x="41111" fg:w="48"/><text x="38.7161%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.04%)</title><rect x="38.4661%" y="373" width="0.0449%" height="15" fill="rgb(226,101,26)" fg:x="41111" fg:w="48"/><text x="38.7161%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (45 samples, 0.04%)</title><rect x="38.4689%" y="357" width="0.0421%" height="15" fill="rgb(206,141,19)" fg:x="41114" fg:w="45"/><text x="38.7189%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (43 samples, 0.04%)</title><rect x="38.4708%" y="341" width="0.0402%" height="15" fill="rgb(211,200,13)" fg:x="41116" fg:w="43"/><text x="38.7208%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (43 samples, 0.04%)</title><rect x="38.4708%" y="325" width="0.0402%" height="15" fill="rgb(241,121,6)" fg:x="41116" fg:w="43"/><text x="38.7208%" y="335.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (98 samples, 0.09%)</title><rect x="38.4268%" y="549" width="0.0917%" height="15" fill="rgb(234,221,29)" fg:x="41069" fg:w="98"/><text x="38.6768%" y="559.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (98 samples, 0.09%)</title><rect x="38.4268%" y="533" width="0.0917%" height="15" fill="rgb(229,136,5)" fg:x="41069" fg:w="98"/><text x="38.6768%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (98 samples, 0.09%)</title><rect x="38.4268%" y="517" width="0.0917%" height="15" fill="rgb(238,36,11)" fg:x="41069" fg:w="98"/><text x="38.6768%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (83 samples, 0.08%)</title><rect x="38.4408%" y="501" width="0.0777%" height="15" fill="rgb(251,55,41)" fg:x="41084" fg:w="83"/><text x="38.6908%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.08%)</title><rect x="38.4408%" y="485" width="0.0777%" height="15" fill="rgb(242,34,40)" fg:x="41084" fg:w="83"/><text x="38.6908%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.08%)</title><rect x="38.4408%" y="469" width="0.0777%" height="15" fill="rgb(215,42,17)" fg:x="41084" fg:w="83"/><text x="38.6908%" y="479.50"></text></g><g><title>alloc::alloc::alloc (80 samples, 0.07%)</title><rect x="38.4436%" y="453" width="0.0749%" height="15" fill="rgb(207,44,46)" fg:x="41087" fg:w="80"/><text x="38.6936%" y="463.50"></text></g><g><title>__rg_alloc (80 samples, 0.07%)</title><rect x="38.4436%" y="437" width="0.0749%" height="15" fill="rgb(211,206,28)" fg:x="41087" fg:w="80"/><text x="38.6936%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (80 samples, 0.07%)</title><rect x="38.4436%" y="421" width="0.0749%" height="15" fill="rgb(237,167,16)" fg:x="41087" fg:w="80"/><text x="38.6936%" y="431.50"></text></g><g><title>rust_alloc (66 samples, 0.06%)</title><rect x="38.4567%" y="405" width="0.0618%" height="15" fill="rgb(233,66,6)" fg:x="41101" fg:w="66"/><text x="38.7067%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (20 samples, 0.02%)</title><rect x="38.5456%" y="485" width="0.0187%" height="15" fill="rgb(246,123,29)" fg:x="41196" fg:w="20"/><text x="38.7956%" y="495.50"></text></g><g><title>rust_dealloc (20 samples, 0.02%)</title><rect x="38.5849%" y="389" width="0.0187%" height="15" fill="rgb(209,62,40)" fg:x="41238" fg:w="20"/><text x="38.8349%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="38.6186%" y="341" width="0.0299%" height="15" fill="rgb(218,4,25)" fg:x="41274" fg:w="32"/><text x="38.8686%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (31 samples, 0.03%)</title><rect x="38.6195%" y="325" width="0.0290%" height="15" fill="rgb(253,91,49)" fg:x="41275" fg:w="31"/><text x="38.8695%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (61 samples, 0.06%)</title><rect x="38.6046%" y="389" width="0.0571%" height="15" fill="rgb(228,155,29)" fg:x="41259" fg:w="61"/><text x="38.8546%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (61 samples, 0.06%)</title><rect x="38.6046%" y="373" width="0.0571%" height="15" fill="rgb(243,57,37)" fg:x="41259" fg:w="61"/><text x="38.8546%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (61 samples, 0.06%)</title><rect x="38.6046%" y="357" width="0.0571%" height="15" fill="rgb(244,167,17)" fg:x="41259" fg:w="61"/><text x="38.8546%" y="367.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="38.6485%" y="341" width="0.0131%" height="15" fill="rgb(207,181,38)" fg:x="41306" fg:w="14"/><text x="38.8985%" y="351.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="38.6485%" y="325" width="0.0131%" height="15" fill="rgb(211,8,23)" fg:x="41306" fg:w="14"/><text x="38.8985%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (86 samples, 0.08%)</title><rect x="38.5849%" y="421" width="0.0805%" height="15" fill="rgb(235,11,44)" fg:x="41238" fg:w="86"/><text x="38.8349%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (86 samples, 0.08%)</title><rect x="38.5849%" y="405" width="0.0805%" height="15" fill="rgb(248,18,52)" fg:x="41238" fg:w="86"/><text x="38.8349%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (89 samples, 0.08%)</title><rect x="38.5849%" y="453" width="0.0833%" height="15" fill="rgb(208,4,7)" fg:x="41238" fg:w="89"/><text x="38.8349%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (89 samples, 0.08%)</title><rect x="38.5849%" y="437" width="0.0833%" height="15" fill="rgb(240,17,39)" fg:x="41238" fg:w="89"/><text x="38.8349%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (104 samples, 0.10%)</title><rect x="38.5765%" y="469" width="0.0973%" height="15" fill="rgb(207,170,3)" fg:x="41229" fg:w="104"/><text x="38.8265%" y="479.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (163 samples, 0.15%)</title><rect x="38.5278%" y="501" width="0.1525%" height="15" fill="rgb(236,100,52)" fg:x="41177" fg:w="163"/><text x="38.7778%" y="511.50"></text></g><g><title>rust_dealloc (124 samples, 0.12%)</title><rect x="38.5643%" y="485" width="0.1160%" height="15" fill="rgb(246,78,51)" fg:x="41216" fg:w="124"/><text x="38.8143%" y="495.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,005 samples, 0.94%)</title><rect x="37.7933%" y="629" width="0.9403%" height="15" fill="rgb(211,17,15)" fg:x="40392" fg:w="1005"/><text x="38.0433%" y="639.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (1,005 samples, 0.94%)</title><rect x="37.7933%" y="613" width="0.9403%" height="15" fill="rgb(209,59,46)" fg:x="40392" fg:w="1005"/><text x="38.0433%" y="623.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (993 samples, 0.93%)</title><rect x="37.8046%" y="597" width="0.9291%" height="15" fill="rgb(210,92,25)" fg:x="40404" fg:w="993"/><text x="38.0546%" y="607.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (990 samples, 0.93%)</title><rect x="37.8074%" y="581" width="0.9263%" height="15" fill="rgb(238,174,52)" fg:x="40407" fg:w="990"/><text x="38.0574%" y="591.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (990 samples, 0.93%)</title><rect x="37.8074%" y="565" width="0.9263%" height="15" fill="rgb(230,73,7)" fg:x="40407" fg:w="990"/><text x="38.0574%" y="575.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (220 samples, 0.21%)</title><rect x="38.5278%" y="549" width="0.2058%" height="15" fill="rgb(243,124,40)" fg:x="41177" fg:w="220"/><text x="38.7778%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (220 samples, 0.21%)</title><rect x="38.5278%" y="533" width="0.2058%" height="15" fill="rgb(244,170,11)" fg:x="41177" fg:w="220"/><text x="38.7778%" y="543.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (220 samples, 0.21%)</title><rect x="38.5278%" y="517" width="0.2058%" height="15" fill="rgb(207,114,54)" fg:x="41177" fg:w="220"/><text x="38.7778%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (57 samples, 0.05%)</title><rect x="38.6803%" y="501" width="0.0533%" height="15" fill="rgb(205,42,20)" fg:x="41340" fg:w="57"/><text x="38.9303%" y="511.50"></text></g><g><title>core::ptr::read (57 samples, 0.05%)</title><rect x="38.6803%" y="485" width="0.0533%" height="15" fill="rgb(230,30,28)" fg:x="41340" fg:w="57"/><text x="38.9303%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="38.7617%" y="501" width="0.0243%" height="15" fill="rgb(205,73,54)" fg:x="41427" fg:w="26"/><text x="39.0117%" y="511.50"></text></g><g><title>alloc::alloc::box_free (26 samples, 0.02%)</title><rect x="38.7617%" y="485" width="0.0243%" height="15" fill="rgb(254,227,23)" fg:x="41427" fg:w="26"/><text x="39.0117%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.02%)</title><rect x="38.7617%" y="469" width="0.0243%" height="15" fill="rgb(228,202,34)" fg:x="41427" fg:w="26"/><text x="39.0117%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.02%)</title><rect x="38.7617%" y="453" width="0.0243%" height="15" fill="rgb(222,225,37)" fg:x="41427" fg:w="26"/><text x="39.0117%" y="463.50"></text></g><g><title>__rg_dealloc (26 samples, 0.02%)</title><rect x="38.7617%" y="437" width="0.0243%" height="15" fill="rgb(221,14,54)" fg:x="41427" fg:w="26"/><text x="39.0117%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (26 samples, 0.02%)</title><rect x="38.7617%" y="421" width="0.0243%" height="15" fill="rgb(254,102,2)" fg:x="41427" fg:w="26"/><text x="39.0117%" y="431.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (60 samples, 0.06%)</title><rect x="38.7505%" y="517" width="0.0561%" height="15" fill="rgb(232,104,17)" fg:x="41415" fg:w="60"/><text x="39.0005%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="38.7861%" y="501" width="0.0206%" height="15" fill="rgb(250,220,14)" fg:x="41453" fg:w="22"/><text x="39.0361%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (22 samples, 0.02%)</title><rect x="38.7861%" y="485" width="0.0206%" height="15" fill="rgb(241,158,9)" fg:x="41453" fg:w="22"/><text x="39.0361%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (22 samples, 0.02%)</title><rect x="38.7861%" y="469" width="0.0206%" height="15" fill="rgb(246,9,43)" fg:x="41453" fg:w="22"/><text x="39.0361%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (22 samples, 0.02%)</title><rect x="38.7861%" y="453" width="0.0206%" height="15" fill="rgb(206,73,33)" fg:x="41453" fg:w="22"/><text x="39.0361%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="38.7936%" y="437" width="0.0131%" height="15" fill="rgb(222,79,8)" fg:x="41461" fg:w="14"/><text x="39.0436%" y="447.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="38.8179%" y="485" width="0.0112%" height="15" fill="rgb(234,8,54)" fg:x="41487" fg:w="12"/><text x="39.0679%" y="495.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="38.8188%" y="469" width="0.0103%" height="15" fill="rgb(209,134,38)" fg:x="41488" fg:w="11"/><text x="39.0688%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (28 samples, 0.03%)</title><rect x="38.8796%" y="373" width="0.0262%" height="15" fill="rgb(230,127,29)" fg:x="41553" fg:w="28"/><text x="39.1296%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (28 samples, 0.03%)</title><rect x="38.8796%" y="357" width="0.0262%" height="15" fill="rgb(242,44,41)" fg:x="41553" fg:w="28"/><text x="39.1296%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (73 samples, 0.07%)</title><rect x="38.8422%" y="421" width="0.0683%" height="15" fill="rgb(222,56,43)" fg:x="41513" fg:w="73"/><text x="39.0922%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (73 samples, 0.07%)</title><rect x="38.8422%" y="405" width="0.0683%" height="15" fill="rgb(238,39,47)" fg:x="41513" fg:w="73"/><text x="39.0922%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (72 samples, 0.07%)</title><rect x="38.8431%" y="389" width="0.0674%" height="15" fill="rgb(226,79,43)" fg:x="41514" fg:w="72"/><text x="39.0931%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (91 samples, 0.09%)</title><rect x="38.8291%" y="485" width="0.0851%" height="15" fill="rgb(242,105,53)" fg:x="41499" fg:w="91"/><text x="39.0791%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (91 samples, 0.09%)</title><rect x="38.8291%" y="469" width="0.0851%" height="15" fill="rgb(251,132,46)" fg:x="41499" fg:w="91"/><text x="39.0791%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (91 samples, 0.09%)</title><rect x="38.8291%" y="453" width="0.0851%" height="15" fill="rgb(231,77,14)" fg:x="41499" fg:w="91"/><text x="39.0791%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (91 samples, 0.09%)</title><rect x="38.8291%" y="437" width="0.0851%" height="15" fill="rgb(240,135,9)" fg:x="41499" fg:w="91"/><text x="39.0791%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (115 samples, 0.11%)</title><rect x="38.8151%" y="501" width="0.1076%" height="15" fill="rgb(248,109,14)" fg:x="41484" fg:w="115"/><text x="39.0651%" y="511.50"></text></g><g><title>rust_dealloc (138 samples, 0.13%)</title><rect x="38.8067%" y="517" width="0.1291%" height="15" fill="rgb(227,146,52)" fg:x="41475" fg:w="138"/><text x="39.0567%" y="527.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="38.9227%" y="501" width="0.0131%" height="15" fill="rgb(232,54,3)" fg:x="41599" fg:w="14"/><text x="39.1727%" y="511.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (1,350 samples, 1.26%)</title><rect x="37.6736%" y="645" width="1.2631%" height="15" fill="rgb(229,201,43)" fg:x="40264" fg:w="1350"/><text x="37.9236%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (217 samples, 0.20%)</title><rect x="38.7337%" y="629" width="0.2030%" height="15" fill="rgb(252,161,33)" fg:x="41397" fg:w="217"/><text x="38.9837%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (217 samples, 0.20%)</title><rect x="38.7337%" y="613" width="0.2030%" height="15" fill="rgb(226,146,40)" fg:x="41397" fg:w="217"/><text x="38.9837%" y="623.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (217 samples, 0.20%)</title><rect x="38.7337%" y="597" width="0.2030%" height="15" fill="rgb(219,47,25)" fg:x="41397" fg:w="217"/><text x="38.9837%" y="607.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (215 samples, 0.20%)</title><rect x="38.7355%" y="581" width="0.2012%" height="15" fill="rgb(250,135,13)" fg:x="41399" fg:w="215"/><text x="38.9855%" y="591.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (206 samples, 0.19%)</title><rect x="38.7440%" y="565" width="0.1927%" height="15" fill="rgb(219,229,18)" fg:x="41408" fg:w="206"/><text x="38.9940%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (206 samples, 0.19%)</title><rect x="38.7440%" y="549" width="0.1927%" height="15" fill="rgb(217,152,27)" fg:x="41408" fg:w="206"/><text x="38.9940%" y="559.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (206 samples, 0.19%)</title><rect x="38.7440%" y="533" width="0.1927%" height="15" fill="rgb(225,71,47)" fg:x="41408" fg:w="206"/><text x="38.9940%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies (33 samples, 0.03%)</title><rect x="38.9386%" y="645" width="0.0309%" height="15" fill="rgb(220,139,14)" fg:x="41616" fg:w="33"/><text x="39.1886%" y="655.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (14 samples, 0.01%)</title><rect x="38.9695%" y="645" width="0.0131%" height="15" fill="rgb(247,54,32)" fg:x="41649" fg:w="14"/><text x="39.2195%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (11,618 samples, 10.87%)</title><rect x="28.1139%" y="661" width="10.8705%" height="15" fill="rgb(252,131,39)" fg:x="30047" fg:w="11618"/><text x="28.3639%" y="671.50">tremor_runtime::..</text></g><g><title>async_global_executor::threading::thread_main_loop (11,693 samples, 10.94%)</title><rect x="28.0540%" y="1125" width="10.9407%" height="15" fill="rgb(210,108,39)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="1135.50">async_global_exe..</text></g><g><title>std::panic::catch_unwind (11,693 samples, 10.94%)</title><rect x="28.0540%" y="1109" width="10.9407%" height="15" fill="rgb(205,23,29)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="1119.50">std::panic::catc..</text></g><g><title>std::panicking::try (11,693 samples, 10.94%)</title><rect x="28.0540%" y="1093" width="10.9407%" height="15" fill="rgb(246,139,46)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="1103.50">std::panicking::..</text></g><g><title>std::panicking::try::do_call (11,693 samples, 10.94%)</title><rect x="28.0540%" y="1077" width="10.9407%" height="15" fill="rgb(250,81,26)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="1087.50">std::panicking::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (11,693 samples, 10.94%)</title><rect x="28.0540%" y="1061" width="10.9407%" height="15" fill="rgb(214,104,7)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="1071.50">async_global_exe..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,693 samples, 10.94%)</title><rect x="28.0540%" y="1045" width="10.9407%" height="15" fill="rgb(233,189,8)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="1055.50">std::thread::loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,693 samples, 10.94%)</title><rect x="28.0540%" y="1029" width="10.9407%" height="15" fill="rgb(228,141,17)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="1039.50">std::thread::loc..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (11,693 samples, 10.94%)</title><rect x="28.0540%" y="1013" width="10.9407%" height="15" fill="rgb(247,157,1)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="1023.50">async_global_exe..</text></g><g><title>async_global_executor::reactor::block_on (11,693 samples, 10.94%)</title><rect x="28.0540%" y="997" width="10.9407%" height="15" fill="rgb(249,225,5)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="1007.50">async_global_exe..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (11,693 samples, 10.94%)</title><rect x="28.0540%" y="981" width="10.9407%" height="15" fill="rgb(242,55,13)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="991.50">async_global_exe..</text></g><g><title>async_io::driver::block_on (11,693 samples, 10.94%)</title><rect x="28.0540%" y="965" width="10.9407%" height="15" fill="rgb(230,49,50)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="975.50">async_io::driver..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,693 samples, 10.94%)</title><rect x="28.0540%" y="949" width="10.9407%" height="15" fill="rgb(241,111,38)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="959.50">&lt;futures_lite::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,693 samples, 10.94%)</title><rect x="28.0540%" y="933" width="10.9407%" height="15" fill="rgb(252,155,4)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="943.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::run::{{closure}} (11,693 samples, 10.94%)</title><rect x="28.0540%" y="917" width="10.9407%" height="15" fill="rgb(212,69,32)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="927.50">async_executor::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,693 samples, 10.94%)</title><rect x="28.0540%" y="901" width="10.9407%" height="15" fill="rgb(243,107,47)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="911.50">&lt;futures_lite::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,693 samples, 10.94%)</title><rect x="28.0540%" y="885" width="10.9407%" height="15" fill="rgb(247,130,12)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="895.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11,693 samples, 10.94%)</title><rect x="28.0540%" y="869" width="10.9407%" height="15" fill="rgb(233,74,16)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="879.50">async_executor::..</text></g><g><title>async_task::runnable::Runnable::run (11,693 samples, 10.94%)</title><rect x="28.0540%" y="853" width="10.9407%" height="15" fill="rgb(208,58,18)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="863.50">async_task::runn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (11,693 samples, 10.94%)</title><rect x="28.0540%" y="837" width="10.9407%" height="15" fill="rgb(242,225,1)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="847.50">async_task::raw:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,693 samples, 10.94%)</title><rect x="28.0540%" y="821" width="10.9407%" height="15" fill="rgb(249,39,40)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="831.50">&lt;core::pin::Pin&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,693 samples, 10.94%)</title><rect x="28.0540%" y="805" width="10.9407%" height="15" fill="rgb(207,72,44)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="815.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (11,693 samples, 10.94%)</title><rect x="28.0540%" y="789" width="10.9407%" height="15" fill="rgb(215,193,12)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="799.50">async_executor::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (11,693 samples, 10.94%)</title><rect x="28.0540%" y="773" width="10.9407%" height="15" fill="rgb(248,41,39)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="783.50">&lt;async_std::task..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (11,693 samples, 10.94%)</title><rect x="28.0540%" y="757" width="10.9407%" height="15" fill="rgb(253,85,4)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="767.50">async_std::task:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,693 samples, 10.94%)</title><rect x="28.0540%" y="741" width="10.9407%" height="15" fill="rgb(243,70,31)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="751.50">std::thread::loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,693 samples, 10.94%)</title><rect x="28.0540%" y="725" width="10.9407%" height="15" fill="rgb(253,195,26)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="735.50">std::thread::loc..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (11,693 samples, 10.94%)</title><rect x="28.0540%" y="709" width="10.9407%" height="15" fill="rgb(243,42,11)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="719.50">async_std::task:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11,693 samples, 10.94%)</title><rect x="28.0540%" y="693" width="10.9407%" height="15" fill="rgb(239,66,17)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="703.50">&lt;async_std::task..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,693 samples, 10.94%)</title><rect x="28.0540%" y="677" width="10.9407%" height="15" fill="rgb(217,132,21)" fg:x="29983" fg:w="11693"/><text x="28.3040%" y="687.50">&lt;core::future::f..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (11 samples, 0.01%)</title><rect x="38.9844%" y="661" width="0.0103%" height="15" fill="rgb(252,202,21)" fg:x="41665" fg:w="11"/><text x="39.2344%" y="671.50"></text></g><g><title>__rust_probestack (11 samples, 0.01%)</title><rect x="38.9844%" y="645" width="0.0103%" height="15" fill="rgb(233,98,36)" fg:x="41665" fg:w="11"/><text x="39.2344%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (592 samples, 0.55%)</title><rect x="39.0827%" y="741" width="0.5539%" height="15" fill="rgb(216,153,54)" fg:x="41770" fg:w="592"/><text x="39.3327%" y="751.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (632 samples, 0.59%)</title><rect x="39.0546%" y="757" width="0.5913%" height="15" fill="rgb(250,99,7)" fg:x="41740" fg:w="632"/><text x="39.3046%" y="767.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,070 samples, 1.00%)</title><rect x="39.0219%" y="773" width="1.0012%" height="15" fill="rgb(207,56,50)" fg:x="41705" fg:w="1070"/><text x="39.2719%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (403 samples, 0.38%)</title><rect x="39.6459%" y="757" width="0.3771%" height="15" fill="rgb(244,61,34)" fg:x="42372" fg:w="403"/><text x="39.8959%" y="767.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,099 samples, 1.03%)</title><rect x="38.9966%" y="805" width="1.0283%" height="15" fill="rgb(241,50,38)" fg:x="41678" fg:w="1099"/><text x="39.2466%" y="815.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,099 samples, 1.03%)</title><rect x="38.9966%" y="789" width="1.0283%" height="15" fill="rgb(212,166,30)" fg:x="41678" fg:w="1099"/><text x="39.2466%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.02%)</title><rect x="40.0268%" y="469" width="0.0187%" height="15" fill="rgb(249,127,32)" fg:x="42779" fg:w="20"/><text x="40.2768%" y="479.50"></text></g><g><title>&lt;abi_stable::std_types::result::RResult&lt;T,E&gt; as core::convert::From&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::from (20 samples, 0.02%)</title><rect x="40.0268%" y="453" width="0.0187%" height="15" fill="rgb(209,103,0)" fg:x="42779" fg:w="20"/><text x="40.2768%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (17 samples, 0.02%)</title><rect x="40.0604%" y="437" width="0.0159%" height="15" fill="rgb(238,209,51)" fg:x="42815" fg:w="17"/><text x="40.3104%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (89 samples, 0.08%)</title><rect x="40.0511%" y="469" width="0.0833%" height="15" fill="rgb(237,56,23)" fg:x="42805" fg:w="89"/><text x="40.3011%" y="479.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (79 samples, 0.07%)</title><rect x="40.0604%" y="453" width="0.0739%" height="15" fill="rgb(215,153,46)" fg:x="42815" fg:w="79"/><text x="40.3104%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (62 samples, 0.06%)</title><rect x="40.0764%" y="437" width="0.0580%" height="15" fill="rgb(224,49,31)" fg:x="42832" fg:w="62"/><text x="40.3264%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (62 samples, 0.06%)</title><rect x="40.0764%" y="421" width="0.0580%" height="15" fill="rgb(250,18,42)" fg:x="42832" fg:w="62"/><text x="40.3264%" y="431.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (62 samples, 0.06%)</title><rect x="40.0764%" y="405" width="0.0580%" height="15" fill="rgb(215,176,39)" fg:x="42832" fg:w="62"/><text x="40.3264%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (22 samples, 0.02%)</title><rect x="40.1138%" y="389" width="0.0206%" height="15" fill="rgb(223,77,29)" fg:x="42872" fg:w="22"/><text x="40.3638%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (22 samples, 0.02%)</title><rect x="40.1138%" y="373" width="0.0206%" height="15" fill="rgb(234,94,52)" fg:x="42872" fg:w="22"/><text x="40.3638%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (18 samples, 0.02%)</title><rect x="40.1709%" y="453" width="0.0168%" height="15" fill="rgb(220,154,50)" fg:x="42933" fg:w="18"/><text x="40.4209%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (18 samples, 0.02%)</title><rect x="40.1709%" y="437" width="0.0168%" height="15" fill="rgb(212,11,10)" fg:x="42933" fg:w="18"/><text x="40.4209%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (548 samples, 0.51%)</title><rect x="40.1877%" y="453" width="0.5127%" height="15" fill="rgb(205,166,19)" fg:x="42951" fg:w="548"/><text x="40.4377%" y="463.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (1,834 samples, 1.72%)</title><rect x="38.9966%" y="821" width="1.7160%" height="15" fill="rgb(244,198,16)" fg:x="41678" fg:w="1834"/><text x="39.2466%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (735 samples, 0.69%)</title><rect x="40.0249%" y="805" width="0.6877%" height="15" fill="rgb(219,69,12)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="815.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (735 samples, 0.69%)</title><rect x="40.0249%" y="789" width="0.6877%" height="15" fill="rgb(245,30,7)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="799.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (735 samples, 0.69%)</title><rect x="40.0249%" y="773" width="0.6877%" height="15" fill="rgb(218,221,48)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="783.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (735 samples, 0.69%)</title><rect x="40.0249%" y="757" width="0.6877%" height="15" fill="rgb(216,66,15)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="767.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (735 samples, 0.69%)</title><rect x="40.0249%" y="741" width="0.6877%" height="15" fill="rgb(226,122,50)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="751.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (735 samples, 0.69%)</title><rect x="40.0249%" y="725" width="0.6877%" height="15" fill="rgb(239,156,16)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (735 samples, 0.69%)</title><rect x="40.0249%" y="709" width="0.6877%" height="15" fill="rgb(224,27,38)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="719.50"></text></g><g><title>std::panic::catch_unwind (735 samples, 0.69%)</title><rect x="40.0249%" y="693" width="0.6877%" height="15" fill="rgb(224,39,27)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="703.50"></text></g><g><title>std::panicking::try (735 samples, 0.69%)</title><rect x="40.0249%" y="677" width="0.6877%" height="15" fill="rgb(215,92,29)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="687.50"></text></g><g><title>std::panicking::try::do_call (735 samples, 0.69%)</title><rect x="40.0249%" y="661" width="0.6877%" height="15" fill="rgb(207,159,16)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="671.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (735 samples, 0.69%)</title><rect x="40.0249%" y="645" width="0.6877%" height="15" fill="rgb(238,163,47)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (735 samples, 0.69%)</title><rect x="40.0249%" y="629" width="0.6877%" height="15" fill="rgb(219,91,49)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="639.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (735 samples, 0.69%)</title><rect x="40.0249%" y="613" width="0.6877%" height="15" fill="rgb(227,167,31)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="623.50"></text></g><g><title>async_ffi::FfiContext::with_context (735 samples, 0.69%)</title><rect x="40.0249%" y="597" width="0.6877%" height="15" fill="rgb(234,80,54)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (735 samples, 0.69%)</title><rect x="40.0249%" y="581" width="0.6877%" height="15" fill="rgb(212,114,2)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (735 samples, 0.69%)</title><rect x="40.0249%" y="565" width="0.6877%" height="15" fill="rgb(234,50,24)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="575.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (735 samples, 0.69%)</title><rect x="40.0249%" y="549" width="0.6877%" height="15" fill="rgb(221,68,8)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="559.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (735 samples, 0.69%)</title><rect x="40.0249%" y="533" width="0.6877%" height="15" fill="rgb(254,180,31)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (735 samples, 0.69%)</title><rect x="40.0249%" y="517" width="0.6877%" height="15" fill="rgb(247,130,50)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (735 samples, 0.69%)</title><rect x="40.0249%" y="501" width="0.6877%" height="15" fill="rgb(211,109,4)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="511.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (735 samples, 0.69%)</title><rect x="40.0249%" y="485" width="0.6877%" height="15" fill="rgb(238,50,21)" fg:x="42777" fg:w="735"/><text x="40.2749%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (618 samples, 0.58%)</title><rect x="40.1344%" y="469" width="0.5782%" height="15" fill="rgb(225,57,45)" fg:x="42894" fg:w="618"/><text x="40.3844%" y="479.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (22 samples, 0.02%)</title><rect x="40.7126%" y="821" width="0.0206%" height="15" fill="rgb(209,196,50)" fg:x="43512" fg:w="22"/><text x="40.9626%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (224 samples, 0.21%)</title><rect x="42.0113%" y="773" width="0.2096%" height="15" fill="rgb(242,140,13)" fg:x="44900" fg:w="224"/><text x="42.2613%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (214 samples, 0.20%)</title><rect x="42.0207%" y="757" width="0.2002%" height="15" fill="rgb(217,111,7)" fg:x="44910" fg:w="214"/><text x="42.2707%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (192 samples, 0.18%)</title><rect x="42.0412%" y="741" width="0.1796%" height="15" fill="rgb(253,193,51)" fg:x="44932" fg:w="192"/><text x="42.2912%" y="751.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (293 samples, 0.27%)</title><rect x="42.2256%" y="709" width="0.2741%" height="15" fill="rgb(252,70,29)" fg:x="45129" fg:w="293"/><text x="42.4756%" y="719.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (316 samples, 0.30%)</title><rect x="42.2209%" y="741" width="0.2957%" height="15" fill="rgb(232,127,12)" fg:x="45124" fg:w="316"/><text x="42.4709%" y="751.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (311 samples, 0.29%)</title><rect x="42.2256%" y="725" width="0.2910%" height="15" fill="rgb(211,180,21)" fg:x="45129" fg:w="311"/><text x="42.4756%" y="735.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (18 samples, 0.02%)</title><rect x="42.4997%" y="709" width="0.0168%" height="15" fill="rgb(229,72,13)" fg:x="45422" fg:w="18"/><text x="42.7497%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (251 samples, 0.23%)</title><rect x="42.5718%" y="693" width="0.2349%" height="15" fill="rgb(240,211,49)" fg:x="45499" fg:w="251"/><text x="42.8218%" y="703.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (251 samples, 0.23%)</title><rect x="42.5718%" y="677" width="0.2349%" height="15" fill="rgb(219,149,40)" fg:x="45499" fg:w="251"/><text x="42.8218%" y="687.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (251 samples, 0.23%)</title><rect x="42.5718%" y="661" width="0.2349%" height="15" fill="rgb(210,127,46)" fg:x="45499" fg:w="251"/><text x="42.8218%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (225 samples, 0.21%)</title><rect x="42.5961%" y="645" width="0.2105%" height="15" fill="rgb(220,106,7)" fg:x="45525" fg:w="225"/><text x="42.8461%" y="655.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="42.8066%" y="645" width="0.0103%" height="15" fill="rgb(249,31,22)" fg:x="45750" fg:w="11"/><text x="43.0566%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.01%)</title><rect x="42.8066%" y="629" width="0.0103%" height="15" fill="rgb(253,1,49)" fg:x="45750" fg:w="11"/><text x="43.0566%" y="639.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (11 samples, 0.01%)</title><rect x="42.8066%" y="613" width="0.0103%" height="15" fill="rgb(227,144,33)" fg:x="45750" fg:w="11"/><text x="43.0566%" y="623.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,025 samples, 0.96%)</title><rect x="42.5166%" y="741" width="0.9591%" height="15" fill="rgb(249,163,44)" fg:x="45440" fg:w="1025"/><text x="42.7666%" y="751.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,006 samples, 0.94%)</title><rect x="42.5343%" y="725" width="0.9413%" height="15" fill="rgb(234,15,39)" fg:x="45459" fg:w="1006"/><text x="42.7843%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (990 samples, 0.93%)</title><rect x="42.5493%" y="709" width="0.9263%" height="15" fill="rgb(207,66,16)" fg:x="45475" fg:w="990"/><text x="42.7993%" y="719.50"></text></g><g><title>std::panic::catch_unwind (715 samples, 0.67%)</title><rect x="42.8066%" y="693" width="0.6690%" height="15" fill="rgb(233,112,24)" fg:x="45750" fg:w="715"/><text x="43.0566%" y="703.50"></text></g><g><title>std::panicking::try (715 samples, 0.67%)</title><rect x="42.8066%" y="677" width="0.6690%" height="15" fill="rgb(230,90,22)" fg:x="45750" fg:w="715"/><text x="43.0566%" y="687.50"></text></g><g><title>std::panicking::try::do_call (715 samples, 0.67%)</title><rect x="42.8066%" y="661" width="0.6690%" height="15" fill="rgb(229,61,13)" fg:x="45750" fg:w="715"/><text x="43.0566%" y="671.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (704 samples, 0.66%)</title><rect x="42.8169%" y="645" width="0.6587%" height="15" fill="rgb(225,57,24)" fg:x="45761" fg:w="704"/><text x="43.0669%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (389 samples, 0.36%)</title><rect x="43.1116%" y="629" width="0.3640%" height="15" fill="rgb(208,169,48)" fg:x="46076" fg:w="389"/><text x="43.3616%" y="639.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,546 samples, 1.45%)</title><rect x="42.2209%" y="773" width="1.4465%" height="15" fill="rgb(244,218,51)" fg:x="45124" fg:w="1546"/><text x="42.4709%" y="783.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,546 samples, 1.45%)</title><rect x="42.2209%" y="757" width="1.4465%" height="15" fill="rgb(214,148,10)" fg:x="45124" fg:w="1546"/><text x="42.4709%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (205 samples, 0.19%)</title><rect x="43.4756%" y="741" width="0.1918%" height="15" fill="rgb(225,174,27)" fg:x="46465" fg:w="205"/><text x="43.7256%" y="751.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (46 samples, 0.04%)</title><rect x="43.6674%" y="773" width="0.0430%" height="15" fill="rgb(230,96,26)" fg:x="46670" fg:w="46"/><text x="43.9174%" y="783.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="43.7301%" y="645" width="0.0103%" height="15" fill="rgb(232,10,30)" fg:x="46737" fg:w="11"/><text x="43.9801%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="43.7301%" y="629" width="0.0103%" height="15" fill="rgb(222,8,50)" fg:x="46737" fg:w="11"/><text x="43.9801%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="43.7301%" y="613" width="0.0103%" height="15" fill="rgb(213,81,27)" fg:x="46737" fg:w="11"/><text x="43.9801%" y="623.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="43.7301%" y="597" width="0.0103%" height="15" fill="rgb(245,50,10)" fg:x="46737" fg:w="11"/><text x="43.9801%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="43.7301%" y="581" width="0.0103%" height="15" fill="rgb(216,100,18)" fg:x="46737" fg:w="11"/><text x="43.9801%" y="591.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (26 samples, 0.02%)</title><rect x="43.7236%" y="725" width="0.0243%" height="15" fill="rgb(236,147,54)" fg:x="46730" fg:w="26"/><text x="43.9736%" y="735.50"></text></g><g><title>async_ffi::DropBomb::with (20 samples, 0.02%)</title><rect x="43.7292%" y="709" width="0.0187%" height="15" fill="rgb(205,143,26)" fg:x="46736" fg:w="20"/><text x="43.9792%" y="719.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (19 samples, 0.02%)</title><rect x="43.7301%" y="693" width="0.0178%" height="15" fill="rgb(236,26,9)" fg:x="46737" fg:w="19"/><text x="43.9801%" y="703.50"></text></g><g><title>core::mem::drop (19 samples, 0.02%)</title><rect x="43.7301%" y="677" width="0.0178%" height="15" fill="rgb(221,165,53)" fg:x="46737" fg:w="19"/><text x="43.9801%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}}&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="43.7301%" y="661" width="0.0178%" height="15" fill="rgb(214,110,17)" fg:x="46737" fg:w="19"/><text x="43.9801%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="43.7816%" y="581" width="0.0131%" height="15" fill="rgb(237,197,12)" fg:x="46792" fg:w="14"/><text x="44.0316%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (32 samples, 0.03%)</title><rect x="43.7704%" y="629" width="0.0299%" height="15" fill="rgb(205,84,17)" fg:x="46780" fg:w="32"/><text x="44.0204%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (32 samples, 0.03%)</title><rect x="43.7704%" y="613" width="0.0299%" height="15" fill="rgb(237,18,45)" fg:x="46780" fg:w="32"/><text x="44.0204%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (30 samples, 0.03%)</title><rect x="43.7722%" y="597" width="0.0281%" height="15" fill="rgb(221,87,14)" fg:x="46782" fg:w="30"/><text x="44.0222%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (53 samples, 0.05%)</title><rect x="43.7582%" y="661" width="0.0496%" height="15" fill="rgb(238,186,15)" fg:x="46767" fg:w="53"/><text x="44.0082%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (53 samples, 0.05%)</title><rect x="43.7582%" y="645" width="0.0496%" height="15" fill="rgb(208,115,11)" fg:x="46767" fg:w="53"/><text x="44.0082%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (57 samples, 0.05%)</title><rect x="43.7582%" y="693" width="0.0533%" height="15" fill="rgb(254,175,0)" fg:x="46767" fg:w="57"/><text x="44.0082%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (57 samples, 0.05%)</title><rect x="43.7582%" y="677" width="0.0533%" height="15" fill="rgb(227,24,42)" fg:x="46767" fg:w="57"/><text x="44.0082%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (66 samples, 0.06%)</title><rect x="43.7563%" y="709" width="0.0618%" height="15" fill="rgb(223,211,37)" fg:x="46765" fg:w="66"/><text x="44.0063%" y="719.50"></text></g><g><title>rust_dealloc (80 samples, 0.07%)</title><rect x="43.7479%" y="725" width="0.0749%" height="15" fill="rgb(235,49,27)" fg:x="46756" fg:w="80"/><text x="43.9979%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (127 samples, 0.12%)</title><rect x="43.7105%" y="773" width="0.1188%" height="15" fill="rgb(254,97,51)" fg:x="46716" fg:w="127"/><text x="43.9605%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (127 samples, 0.12%)</title><rect x="43.7105%" y="757" width="0.1188%" height="15" fill="rgb(249,51,40)" fg:x="46716" fg:w="127"/><text x="43.9605%" y="767.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (127 samples, 0.12%)</title><rect x="43.7105%" y="741" width="0.1188%" height="15" fill="rgb(210,128,45)" fg:x="46716" fg:w="127"/><text x="43.9605%" y="751.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="43.8686%" y="517" width="0.0140%" height="15" fill="rgb(224,137,50)" fg:x="46885" fg:w="15"/><text x="44.1186%" y="527.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="43.8686%" y="501" width="0.0140%" height="15" fill="rgb(242,15,9)" fg:x="46885" fg:w="15"/><text x="44.1186%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (11 samples, 0.01%)</title><rect x="43.8882%" y="469" width="0.0103%" height="15" fill="rgb(233,187,41)" fg:x="46906" fg:w="11"/><text x="44.1382%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (92 samples, 0.09%)</title><rect x="43.8882%" y="501" width="0.0861%" height="15" fill="rgb(227,2,29)" fg:x="46906" fg:w="92"/><text x="44.1382%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (92 samples, 0.09%)</title><rect x="43.8882%" y="485" width="0.0861%" height="15" fill="rgb(222,70,3)" fg:x="46906" fg:w="92"/><text x="44.1382%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (81 samples, 0.08%)</title><rect x="43.8985%" y="469" width="0.0758%" height="15" fill="rgb(213,11,42)" fg:x="46917" fg:w="81"/><text x="44.1485%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (64 samples, 0.06%)</title><rect x="43.9144%" y="453" width="0.0599%" height="15" fill="rgb(225,150,9)" fg:x="46934" fg:w="64"/><text x="44.1644%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (64 samples, 0.06%)</title><rect x="43.9144%" y="437" width="0.0599%" height="15" fill="rgb(230,162,45)" fg:x="46934" fg:w="64"/><text x="44.1644%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (64 samples, 0.06%)</title><rect x="43.9144%" y="421" width="0.0599%" height="15" fill="rgb(222,14,52)" fg:x="46934" fg:w="64"/><text x="44.1644%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="43.9790%" y="501" width="0.0150%" height="15" fill="rgb(254,198,14)" fg:x="47003" fg:w="16"/><text x="44.2290%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="43.9790%" y="485" width="0.0150%" height="15" fill="rgb(220,217,30)" fg:x="47003" fg:w="16"/><text x="44.2290%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="43.9790%" y="469" width="0.0150%" height="15" fill="rgb(215,146,41)" fg:x="47003" fg:w="16"/><text x="44.2290%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (184 samples, 0.17%)</title><rect x="43.8667%" y="549" width="0.1722%" height="15" fill="rgb(217,27,36)" fg:x="46883" fg:w="184"/><text x="44.1167%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (184 samples, 0.17%)</title><rect x="43.8667%" y="533" width="0.1722%" height="15" fill="rgb(219,218,39)" fg:x="46883" fg:w="184"/><text x="44.1167%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (167 samples, 0.16%)</title><rect x="43.8826%" y="517" width="0.1563%" height="15" fill="rgb(219,4,42)" fg:x="46900" fg:w="167"/><text x="44.1326%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (45 samples, 0.04%)</title><rect x="43.9968%" y="501" width="0.0421%" height="15" fill="rgb(249,119,36)" fg:x="47022" fg:w="45"/><text x="44.2468%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (45 samples, 0.04%)</title><rect x="43.9968%" y="485" width="0.0421%" height="15" fill="rgb(209,23,33)" fg:x="47022" fg:w="45"/><text x="44.2468%" y="495.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (224 samples, 0.21%)</title><rect x="43.8368%" y="757" width="0.2096%" height="15" fill="rgb(211,10,0)" fg:x="46851" fg:w="224"/><text x="44.0868%" y="767.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (208 samples, 0.19%)</title><rect x="43.8518%" y="741" width="0.1946%" height="15" fill="rgb(208,99,37)" fg:x="46867" fg:w="208"/><text x="44.1018%" y="751.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (208 samples, 0.19%)</title><rect x="43.8518%" y="725" width="0.1946%" height="15" fill="rgb(213,132,31)" fg:x="46867" fg:w="208"/><text x="44.1018%" y="735.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (208 samples, 0.19%)</title><rect x="43.8518%" y="709" width="0.1946%" height="15" fill="rgb(243,129,40)" fg:x="46867" fg:w="208"/><text x="44.1018%" y="719.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (208 samples, 0.19%)</title><rect x="43.8518%" y="693" width="0.1946%" height="15" fill="rgb(210,66,33)" fg:x="46867" fg:w="208"/><text x="44.1018%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (208 samples, 0.19%)</title><rect x="43.8518%" y="677" width="0.1946%" height="15" fill="rgb(209,189,4)" fg:x="46867" fg:w="208"/><text x="44.1018%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (205 samples, 0.19%)</title><rect x="43.8546%" y="661" width="0.1918%" height="15" fill="rgb(214,107,37)" fg:x="46870" fg:w="205"/><text x="44.1046%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (205 samples, 0.19%)</title><rect x="43.8546%" y="645" width="0.1918%" height="15" fill="rgb(245,88,54)" fg:x="46870" fg:w="205"/><text x="44.1046%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (205 samples, 0.19%)</title><rect x="43.8546%" y="629" width="0.1918%" height="15" fill="rgb(205,146,20)" fg:x="46870" fg:w="205"/><text x="44.1046%" y="639.50"></text></g><g><title>alloc::alloc::alloc (201 samples, 0.19%)</title><rect x="43.8583%" y="613" width="0.1881%" height="15" fill="rgb(220,161,25)" fg:x="46874" fg:w="201"/><text x="44.1083%" y="623.50"></text></g><g><title>__rg_alloc (201 samples, 0.19%)</title><rect x="43.8583%" y="597" width="0.1881%" height="15" fill="rgb(215,152,15)" fg:x="46874" fg:w="201"/><text x="44.1083%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (201 samples, 0.19%)</title><rect x="43.8583%" y="581" width="0.1881%" height="15" fill="rgb(233,192,44)" fg:x="46874" fg:w="201"/><text x="44.1083%" y="591.50"></text></g><g><title>rust_alloc (201 samples, 0.19%)</title><rect x="43.8583%" y="565" width="0.1881%" height="15" fill="rgb(240,170,46)" fg:x="46874" fg:w="201"/><text x="44.1083%" y="575.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::_::&lt;impl tremor_runtime::connectors::source::RawSource_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::pull_data (40 samples, 0.04%)</title><rect x="44.0501%" y="757" width="0.0374%" height="15" fill="rgb(207,104,33)" fg:x="47079" fg:w="40"/><text x="44.3001%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (2,913 samples, 2.73%)</title><rect x="41.3704%" y="789" width="2.7256%" height="15" fill="rgb(219,21,39)" fg:x="44215" fg:w="2913"/><text x="41.6204%" y="799.50">tr..</text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::pull_data (285 samples, 0.27%)</title><rect x="43.8293%" y="773" width="0.2667%" height="15" fill="rgb(214,133,29)" fg:x="46843" fg:w="285"/><text x="44.0793%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::control_plane::{{closure}} (290 samples, 0.27%)</title><rect x="44.0960%" y="789" width="0.2713%" height="15" fill="rgb(226,93,6)" fg:x="47128" fg:w="290"/><text x="44.3460%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::needs_control_plane_msg (248 samples, 0.23%)</title><rect x="44.1353%" y="773" width="0.2320%" height="15" fill="rgb(252,222,34)" fg:x="47170" fg:w="248"/><text x="44.3853%" y="783.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (218 samples, 0.20%)</title><rect x="44.1633%" y="757" width="0.2040%" height="15" fill="rgb(252,92,48)" fg:x="47200" fg:w="218"/><text x="44.4133%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (218 samples, 0.20%)</title><rect x="44.1633%" y="741" width="0.2040%" height="15" fill="rgb(245,223,24)" fg:x="47200" fg:w="218"/><text x="44.4133%" y="751.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (122 samples, 0.11%)</title><rect x="44.2532%" y="725" width="0.1142%" height="15" fill="rgb(205,176,3)" fg:x="47296" fg:w="122"/><text x="44.5032%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (107 samples, 0.10%)</title><rect x="44.2672%" y="709" width="0.1001%" height="15" fill="rgb(235,151,15)" fg:x="47311" fg:w="107"/><text x="44.5172%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (107 samples, 0.10%)</title><rect x="44.2672%" y="693" width="0.1001%" height="15" fill="rgb(237,209,11)" fg:x="47311" fg:w="107"/><text x="44.5172%" y="703.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (12 samples, 0.01%)</title><rect x="45.2936%" y="757" width="0.0112%" height="15" fill="rgb(243,227,24)" fg:x="48408" fg:w="12"/><text x="45.5436%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::utypeid::UTypeId as core::cmp::PartialEq&gt;::eq (208 samples, 0.19%)</title><rect x="45.3535%" y="709" width="0.1946%" height="15" fill="rgb(239,193,16)" fg:x="48472" fg:w="208"/><text x="45.6035%" y="719.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (203 samples, 0.19%)</title><rect x="45.3582%" y="693" width="0.1899%" height="15" fill="rgb(231,27,9)" fg:x="48477" fg:w="203"/><text x="45.6082%" y="703.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (203 samples, 0.19%)</title><rect x="45.3582%" y="677" width="0.1899%" height="15" fill="rgb(219,169,10)" fg:x="48477" fg:w="203"/><text x="45.6082%" y="687.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (48 samples, 0.04%)</title><rect x="45.5481%" y="709" width="0.0449%" height="15" fill="rgb(244,229,43)" fg:x="48680" fg:w="48"/><text x="45.7981%" y="719.50"></text></g><g><title>abi_stable::std_types::utypeid::new_utypeid (32 samples, 0.03%)</title><rect x="45.5631%" y="693" width="0.0299%" height="15" fill="rgb(254,38,20)" fg:x="48696" fg:w="32"/><text x="45.8131%" y="703.50"></text></g><g><title>abi_stable::std_types::utypeid::UTypeId::new (29 samples, 0.03%)</title><rect x="45.5659%" y="677" width="0.0271%" height="15" fill="rgb(250,47,30)" fg:x="48699" fg:w="29"/><text x="45.8159%" y="687.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (258 samples, 0.24%)</title><rect x="45.3535%" y="725" width="0.2414%" height="15" fill="rgb(224,124,36)" fg:x="48472" fg:w="258"/><text x="45.6035%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (585 samples, 0.55%)</title><rect x="45.0662%" y="773" width="0.5474%" height="15" fill="rgb(246,68,51)" fg:x="48165" fg:w="585"/><text x="45.3162%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::convert::From&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (330 samples, 0.31%)</title><rect x="45.3048%" y="757" width="0.3088%" height="15" fill="rgb(253,43,49)" fg:x="48420" fg:w="330"/><text x="45.5548%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (315 samples, 0.29%)</title><rect x="45.3189%" y="741" width="0.2947%" height="15" fill="rgb(219,54,36)" fg:x="48435" fg:w="315"/><text x="45.5689%" y="751.50"></text></g><g><title>core::ptr::eq (11 samples, 0.01%)</title><rect x="45.6033%" y="725" width="0.0103%" height="15" fill="rgb(227,133,34)" fg:x="48739" fg:w="11"/><text x="45.8533%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="45.6136%" y="773" width="0.0103%" height="15" fill="rgb(247,227,15)" fg:x="48750" fg:w="11"/><text x="45.8636%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (670 samples, 0.63%)</title><rect x="45.6314%" y="773" width="0.6269%" height="15" fill="rgb(229,96,14)" fg:x="48769" fg:w="670"/><text x="45.8814%" y="783.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="46.4108%" y="565" width="0.0103%" height="15" fill="rgb(220,79,17)" fg:x="49602" fg:w="11"/><text x="46.6608%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (55 samples, 0.05%)</title><rect x="46.4304%" y="517" width="0.0515%" height="15" fill="rgb(205,131,53)" fg:x="49623" fg:w="55"/><text x="46.6804%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (55 samples, 0.05%)</title><rect x="46.4304%" y="501" width="0.0515%" height="15" fill="rgb(209,50,29)" fg:x="49623" fg:w="55"/><text x="46.6804%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (50 samples, 0.05%)</title><rect x="46.4351%" y="485" width="0.0468%" height="15" fill="rgb(245,86,46)" fg:x="49628" fg:w="50"/><text x="46.6851%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (35 samples, 0.03%)</title><rect x="46.4492%" y="469" width="0.0327%" height="15" fill="rgb(235,66,46)" fg:x="49643" fg:w="35"/><text x="46.6992%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (35 samples, 0.03%)</title><rect x="46.4492%" y="453" width="0.0327%" height="15" fill="rgb(232,148,31)" fg:x="49643" fg:w="35"/><text x="46.6992%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (35 samples, 0.03%)</title><rect x="46.4492%" y="437" width="0.0327%" height="15" fill="rgb(217,149,8)" fg:x="49643" fg:w="35"/><text x="46.6992%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (169 samples, 0.16%)</title><rect x="46.4220%" y="565" width="0.1581%" height="15" fill="rgb(209,183,11)" fg:x="49614" fg:w="169"/><text x="46.6720%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (169 samples, 0.16%)</title><rect x="46.4220%" y="549" width="0.1581%" height="15" fill="rgb(208,55,20)" fg:x="49614" fg:w="169"/><text x="46.6720%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (160 samples, 0.15%)</title><rect x="46.4304%" y="533" width="0.1497%" height="15" fill="rgb(218,39,14)" fg:x="49623" fg:w="160"/><text x="46.6804%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (87 samples, 0.08%)</title><rect x="46.4987%" y="517" width="0.0814%" height="15" fill="rgb(216,169,33)" fg:x="49696" fg:w="87"/><text x="46.7487%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (87 samples, 0.08%)</title><rect x="46.4987%" y="501" width="0.0814%" height="15" fill="rgb(233,80,24)" fg:x="49696" fg:w="87"/><text x="46.7487%" y="511.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (313 samples, 0.29%)</title><rect x="46.2938%" y="709" width="0.2929%" height="15" fill="rgb(213,179,31)" fg:x="49477" fg:w="313"/><text x="46.5438%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (313 samples, 0.29%)</title><rect x="46.2938%" y="693" width="0.2929%" height="15" fill="rgb(209,19,5)" fg:x="49477" fg:w="313"/><text x="46.5438%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (190 samples, 0.18%)</title><rect x="46.4089%" y="677" width="0.1778%" height="15" fill="rgb(219,18,35)" fg:x="49600" fg:w="190"/><text x="46.6589%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (190 samples, 0.18%)</title><rect x="46.4089%" y="661" width="0.1778%" height="15" fill="rgb(209,169,16)" fg:x="49600" fg:w="190"/><text x="46.6589%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (190 samples, 0.18%)</title><rect x="46.4089%" y="645" width="0.1778%" height="15" fill="rgb(245,90,51)" fg:x="49600" fg:w="190"/><text x="46.6589%" y="655.50"></text></g><g><title>alloc::alloc::alloc (188 samples, 0.18%)</title><rect x="46.4108%" y="629" width="0.1759%" height="15" fill="rgb(220,99,45)" fg:x="49602" fg:w="188"/><text x="46.6608%" y="639.50"></text></g><g><title>__rg_alloc (188 samples, 0.18%)</title><rect x="46.4108%" y="613" width="0.1759%" height="15" fill="rgb(249,89,25)" fg:x="49602" fg:w="188"/><text x="46.6608%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (188 samples, 0.18%)</title><rect x="46.4108%" y="597" width="0.1759%" height="15" fill="rgb(239,193,0)" fg:x="49602" fg:w="188"/><text x="46.6608%" y="607.50"></text></g><g><title>rust_alloc (188 samples, 0.18%)</title><rect x="46.4108%" y="581" width="0.1759%" height="15" fill="rgb(231,126,1)" fg:x="49602" fg:w="188"/><text x="46.6608%" y="591.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (17 samples, 0.02%)</title><rect x="46.5867%" y="613" width="0.0159%" height="15" fill="rgb(243,166,3)" fg:x="49790" fg:w="17"/><text x="46.8367%" y="623.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (16 samples, 0.01%)</title><rect x="46.6026%" y="613" width="0.0150%" height="15" fill="rgb(223,22,34)" fg:x="49807" fg:w="16"/><text x="46.8526%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (39 samples, 0.04%)</title><rect x="46.5867%" y="677" width="0.0365%" height="15" fill="rgb(251,52,51)" fg:x="49790" fg:w="39"/><text x="46.8367%" y="687.50"></text></g><g><title>std::collections::hash::map::RandomState::new (39 samples, 0.04%)</title><rect x="46.5867%" y="661" width="0.0365%" height="15" fill="rgb(221,165,28)" fg:x="49790" fg:w="39"/><text x="46.8367%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.04%)</title><rect x="46.5867%" y="645" width="0.0365%" height="15" fill="rgb(218,121,47)" fg:x="49790" fg:w="39"/><text x="46.8367%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.04%)</title><rect x="46.5867%" y="629" width="0.0365%" height="15" fill="rgb(209,120,9)" fg:x="49790" fg:w="39"/><text x="46.8367%" y="639.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="46.6644%" y="453" width="0.0103%" height="15" fill="rgb(236,68,12)" fg:x="49873" fg:w="11"/><text x="46.9144%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (14 samples, 0.01%)</title><rect x="46.6924%" y="373" width="0.0131%" height="15" fill="rgb(225,194,26)" fg:x="49903" fg:w="14"/><text x="46.9424%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (14 samples, 0.01%)</title><rect x="46.6924%" y="357" width="0.0131%" height="15" fill="rgb(231,84,39)" fg:x="49903" fg:w="14"/><text x="46.9424%" y="367.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (14 samples, 0.01%)</title><rect x="46.6924%" y="341" width="0.0131%" height="15" fill="rgb(210,11,45)" fg:x="49903" fg:w="14"/><text x="46.9424%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (22 samples, 0.02%)</title><rect x="46.6924%" y="389" width="0.0206%" height="15" fill="rgb(224,54,52)" fg:x="49903" fg:w="22"/><text x="46.9424%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (33 samples, 0.03%)</title><rect x="46.6868%" y="405" width="0.0309%" height="15" fill="rgb(238,102,14)" fg:x="49897" fg:w="33"/><text x="46.9368%" y="415.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (30 samples, 0.03%)</title><rect x="46.7270%" y="389" width="0.0281%" height="15" fill="rgb(243,160,52)" fg:x="49940" fg:w="30"/><text x="46.9770%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.19%)</title><rect x="46.6868%" y="437" width="0.1881%" height="15" fill="rgb(216,114,19)" fg:x="49897" fg:w="201"/><text x="46.9368%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (201 samples, 0.19%)</title><rect x="46.6868%" y="421" width="0.1881%" height="15" fill="rgb(244,166,37)" fg:x="49897" fg:w="201"/><text x="46.9368%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (168 samples, 0.16%)</title><rect x="46.7177%" y="405" width="0.1572%" height="15" fill="rgb(246,29,44)" fg:x="49930" fg:w="168"/><text x="46.9677%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (128 samples, 0.12%)</title><rect x="46.7551%" y="389" width="0.1198%" height="15" fill="rgb(215,56,53)" fg:x="49970" fg:w="128"/><text x="47.0051%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (128 samples, 0.12%)</title><rect x="46.7551%" y="373" width="0.1198%" height="15" fill="rgb(217,60,2)" fg:x="49970" fg:w="128"/><text x="47.0051%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (128 samples, 0.12%)</title><rect x="46.7551%" y="357" width="0.1198%" height="15" fill="rgb(207,26,24)" fg:x="49970" fg:w="128"/><text x="47.0051%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="46.8749%" y="437" width="0.0150%" height="15" fill="rgb(252,210,15)" fg:x="50098" fg:w="16"/><text x="47.1249%" y="447.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (15 samples, 0.01%)</title><rect x="46.8758%" y="421" width="0.0140%" height="15" fill="rgb(253,209,26)" fg:x="50099" fg:w="15"/><text x="47.1258%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (11 samples, 0.01%)</title><rect x="46.8796%" y="405" width="0.0103%" height="15" fill="rgb(238,170,14)" fg:x="50103" fg:w="11"/><text x="47.1296%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (11 samples, 0.01%)</title><rect x="46.8796%" y="389" width="0.0103%" height="15" fill="rgb(216,178,15)" fg:x="50103" fg:w="11"/><text x="47.1296%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::empty (11 samples, 0.01%)</title><rect x="46.8899%" y="437" width="0.0103%" height="15" fill="rgb(250,197,2)" fg:x="50114" fg:w="11"/><text x="47.1399%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (11 samples, 0.01%)</title><rect x="46.8899%" y="421" width="0.0103%" height="15" fill="rgb(212,70,42)" fg:x="50114" fg:w="11"/><text x="47.1399%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (404 samples, 0.38%)</title><rect x="46.6634%" y="485" width="0.3780%" height="15" fill="rgb(227,213,9)" fg:x="49872" fg:w="404"/><text x="46.9134%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (404 samples, 0.38%)</title><rect x="46.6634%" y="469" width="0.3780%" height="15" fill="rgb(245,99,25)" fg:x="49872" fg:w="404"/><text x="46.9134%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (392 samples, 0.37%)</title><rect x="46.6747%" y="453" width="0.3668%" height="15" fill="rgb(250,82,29)" fg:x="49884" fg:w="392"/><text x="46.9247%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (151 samples, 0.14%)</title><rect x="46.9001%" y="437" width="0.1413%" height="15" fill="rgb(241,226,54)" fg:x="50125" fg:w="151"/><text x="47.1501%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (151 samples, 0.14%)</title><rect x="46.9001%" y="421" width="0.1413%" height="15" fill="rgb(221,99,41)" fg:x="50125" fg:w="151"/><text x="47.1501%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (437 samples, 0.41%)</title><rect x="46.6344%" y="613" width="0.4089%" height="15" fill="rgb(213,90,21)" fg:x="49841" fg:w="437"/><text x="46.8844%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (414 samples, 0.39%)</title><rect x="46.6559%" y="597" width="0.3874%" height="15" fill="rgb(205,208,24)" fg:x="49864" fg:w="414"/><text x="46.9059%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (414 samples, 0.39%)</title><rect x="46.6559%" y="581" width="0.3874%" height="15" fill="rgb(246,31,12)" fg:x="49864" fg:w="414"/><text x="46.9059%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (414 samples, 0.39%)</title><rect x="46.6559%" y="565" width="0.3874%" height="15" fill="rgb(213,154,6)" fg:x="49864" fg:w="414"/><text x="46.9059%" y="575.50"></text></g><g><title>alloc::alloc::alloc (414 samples, 0.39%)</title><rect x="46.6559%" y="549" width="0.3874%" height="15" fill="rgb(222,163,29)" fg:x="49864" fg:w="414"/><text x="46.9059%" y="559.50"></text></g><g><title>__rg_alloc (414 samples, 0.39%)</title><rect x="46.6559%" y="533" width="0.3874%" height="15" fill="rgb(227,201,8)" fg:x="49864" fg:w="414"/><text x="46.9059%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (414 samples, 0.39%)</title><rect x="46.6559%" y="517" width="0.3874%" height="15" fill="rgb(233,9,32)" fg:x="49864" fg:w="414"/><text x="46.9059%" y="527.50"></text></g><g><title>rust_alloc (413 samples, 0.39%)</title><rect x="46.6569%" y="501" width="0.3864%" height="15" fill="rgb(217,54,24)" fg:x="49865" fg:w="413"/><text x="46.9069%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (490 samples, 0.46%)</title><rect x="46.5867%" y="693" width="0.4585%" height="15" fill="rgb(235,192,0)" fg:x="49790" fg:w="490"/><text x="46.8367%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (451 samples, 0.42%)</title><rect x="46.6232%" y="677" width="0.4220%" height="15" fill="rgb(235,45,9)" fg:x="49829" fg:w="451"/><text x="46.8732%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (451 samples, 0.42%)</title><rect x="46.6232%" y="661" width="0.4220%" height="15" fill="rgb(246,42,40)" fg:x="49829" fg:w="451"/><text x="46.8732%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (439 samples, 0.41%)</title><rect x="46.6344%" y="645" width="0.4108%" height="15" fill="rgb(248,111,24)" fg:x="49841" fg:w="439"/><text x="46.8844%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (439 samples, 0.41%)</title><rect x="46.6344%" y="629" width="0.4108%" height="15" fill="rgb(249,65,22)" fg:x="49841" fg:w="439"/><text x="46.8844%" y="639.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (523 samples, 0.49%)</title><rect x="46.5867%" y="709" width="0.4894%" height="15" fill="rgb(238,111,51)" fg:x="49790" fg:w="523"/><text x="46.8367%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (33 samples, 0.03%)</title><rect x="47.0452%" y="693" width="0.0309%" height="15" fill="rgb(250,118,22)" fg:x="50280" fg:w="33"/><text x="47.2952%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (27 samples, 0.03%)</title><rect x="47.0508%" y="677" width="0.0253%" height="15" fill="rgb(234,84,26)" fg:x="50286" fg:w="27"/><text x="47.3008%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (27 samples, 0.03%)</title><rect x="47.0508%" y="661" width="0.0253%" height="15" fill="rgb(243,172,12)" fg:x="50286" fg:w="27"/><text x="47.3008%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (19 samples, 0.02%)</title><rect x="47.0583%" y="645" width="0.0178%" height="15" fill="rgb(236,150,49)" fg:x="50294" fg:w="19"/><text x="47.3083%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (19 samples, 0.02%)</title><rect x="47.0583%" y="629" width="0.0178%" height="15" fill="rgb(225,197,26)" fg:x="50294" fg:w="19"/><text x="47.3083%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (19 samples, 0.02%)</title><rect x="47.0583%" y="613" width="0.0178%" height="15" fill="rgb(214,17,42)" fg:x="50294" fg:w="19"/><text x="47.3083%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (19 samples, 0.02%)</title><rect x="47.0583%" y="597" width="0.0178%" height="15" fill="rgb(224,165,40)" fg:x="50294" fg:w="19"/><text x="47.3083%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="47.0583%" y="581" width="0.0178%" height="15" fill="rgb(246,100,4)" fg:x="50294" fg:w="19"/><text x="47.3083%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (868 samples, 0.81%)</title><rect x="46.2761%" y="757" width="0.8122%" height="15" fill="rgb(222,103,0)" fg:x="49458" fg:w="868"/><text x="46.5261%" y="767.50"></text></g><g><title>value_trait::Builder::object (850 samples, 0.80%)</title><rect x="46.2929%" y="741" width="0.7953%" height="15" fill="rgb(227,189,26)" fg:x="49476" fg:w="850"/><text x="46.5429%" y="751.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (849 samples, 0.79%)</title><rect x="46.2938%" y="725" width="0.7944%" height="15" fill="rgb(214,202,17)" fg:x="49477" fg:w="849"/><text x="46.5438%" y="735.50"></text></g><g><title>tremor_value::value::Value::Object (13 samples, 0.01%)</title><rect x="47.0761%" y="709" width="0.0122%" height="15" fill="rgb(229,111,3)" fg:x="50313" fg:w="13"/><text x="47.3261%" y="719.50"></text></g><g><title>abi_stable::std_types::option::ROption&lt;T&gt;::unwrap_or_else (889 samples, 0.83%)</title><rect x="46.2676%" y="773" width="0.8318%" height="15" fill="rgb(229,172,15)" fg:x="49449" fg:w="889"/><text x="46.5176%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (12 samples, 0.01%)</title><rect x="47.0882%" y="757" width="0.0112%" height="15" fill="rgb(230,224,35)" fg:x="50326" fg:w="12"/><text x="47.3382%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="47.1004%" y="773" width="0.0122%" height="15" fill="rgb(251,141,6)" fg:x="50339" fg:w="13"/><text x="47.3504%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt; (11 samples, 0.01%)</title><rect x="47.1022%" y="757" width="0.0103%" height="15" fill="rgb(225,208,6)" fg:x="50341" fg:w="11"/><text x="47.3522%" y="767.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (39 samples, 0.04%)</title><rect x="47.1949%" y="661" width="0.0365%" height="15" fill="rgb(246,181,16)" fg:x="50440" fg:w="39"/><text x="47.4449%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="47.2173%" y="645" width="0.0140%" height="15" fill="rgb(227,129,36)" fg:x="50464" fg:w="15"/><text x="47.4673%" y="655.50"></text></g><g><title>alloc::alloc::box_free (15 samples, 0.01%)</title><rect x="47.2173%" y="629" width="0.0140%" height="15" fill="rgb(248,117,24)" fg:x="50464" fg:w="15"/><text x="47.4673%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="47.2173%" y="613" width="0.0140%" height="15" fill="rgb(214,185,35)" fg:x="50464" fg:w="15"/><text x="47.4673%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="47.2173%" y="597" width="0.0140%" height="15" fill="rgb(236,150,34)" fg:x="50464" fg:w="15"/><text x="47.4673%" y="607.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="47.2173%" y="581" width="0.0140%" height="15" fill="rgb(243,228,27)" fg:x="50464" fg:w="15"/><text x="47.4673%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="47.2173%" y="565" width="0.0140%" height="15" fill="rgb(245,77,44)" fg:x="50464" fg:w="15"/><text x="47.4673%" y="575.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (25 samples, 0.02%)</title><rect x="47.2978%" y="517" width="0.0234%" height="15" fill="rgb(235,214,42)" fg:x="50550" fg:w="25"/><text x="47.5478%" y="527.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="47.2987%" y="501" width="0.0225%" height="15" fill="rgb(221,74,3)" fg:x="50551" fg:w="24"/><text x="47.5487%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (68 samples, 0.06%)</title><rect x="47.2679%" y="565" width="0.0636%" height="15" fill="rgb(206,121,29)" fg:x="50518" fg:w="68"/><text x="47.5179%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (68 samples, 0.06%)</title><rect x="47.2679%" y="549" width="0.0636%" height="15" fill="rgb(249,131,53)" fg:x="50518" fg:w="68"/><text x="47.5179%" y="559.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (60 samples, 0.06%)</title><rect x="47.2753%" y="533" width="0.0561%" height="15" fill="rgb(236,170,29)" fg:x="50526" fg:w="60"/><text x="47.5253%" y="543.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="47.3212%" y="517" width="0.0103%" height="15" fill="rgb(247,96,15)" fg:x="50575" fg:w="11"/><text x="47.5712%" y="527.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="47.3212%" y="501" width="0.0103%" height="15" fill="rgb(211,210,7)" fg:x="50575" fg:w="11"/><text x="47.5712%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (86 samples, 0.08%)</title><rect x="47.2548%" y="597" width="0.0805%" height="15" fill="rgb(240,88,50)" fg:x="50504" fg:w="86"/><text x="47.5048%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (86 samples, 0.08%)</title><rect x="47.2548%" y="581" width="0.0805%" height="15" fill="rgb(209,229,26)" fg:x="50504" fg:w="86"/><text x="47.5048%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (89 samples, 0.08%)</title><rect x="47.2548%" y="629" width="0.0833%" height="15" fill="rgb(210,68,23)" fg:x="50504" fg:w="89"/><text x="47.5048%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (89 samples, 0.08%)</title><rect x="47.2548%" y="613" width="0.0833%" height="15" fill="rgb(229,180,13)" fg:x="50504" fg:w="89"/><text x="47.5048%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (102 samples, 0.10%)</title><rect x="47.2445%" y="645" width="0.0954%" height="15" fill="rgb(236,53,44)" fg:x="50493" fg:w="102"/><text x="47.4945%" y="655.50"></text></g><g><title>rust_dealloc (120 samples, 0.11%)</title><rect x="47.2314%" y="661" width="0.1123%" height="15" fill="rgb(244,214,29)" fg:x="50479" fg:w="120"/><text x="47.4814%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (185 samples, 0.17%)</title><rect x="47.1846%" y="709" width="0.1731%" height="15" fill="rgb(220,75,29)" fg:x="50429" fg:w="185"/><text x="47.4346%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (185 samples, 0.17%)</title><rect x="47.1846%" y="693" width="0.1731%" height="15" fill="rgb(214,183,37)" fg:x="50429" fg:w="185"/><text x="47.4346%" y="703.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (185 samples, 0.17%)</title><rect x="47.1846%" y="677" width="0.1731%" height="15" fill="rgb(239,117,29)" fg:x="50429" fg:w="185"/><text x="47.4346%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (15 samples, 0.01%)</title><rect x="47.3437%" y="661" width="0.0140%" height="15" fill="rgb(237,171,35)" fg:x="50599" fg:w="15"/><text x="47.5937%" y="671.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (14 samples, 0.01%)</title><rect x="47.3446%" y="645" width="0.0131%" height="15" fill="rgb(229,178,53)" fg:x="50600" fg:w="14"/><text x="47.5946%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (211 samples, 0.20%)</title><rect x="47.1668%" y="725" width="0.1974%" height="15" fill="rgb(210,102,19)" fg:x="50410" fg:w="211"/><text x="47.4168%" y="735.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (34 samples, 0.03%)</title><rect x="47.4082%" y="581" width="0.0318%" height="15" fill="rgb(235,127,22)" fg:x="50668" fg:w="34"/><text x="47.6582%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (27 samples, 0.03%)</title><rect x="47.4148%" y="565" width="0.0253%" height="15" fill="rgb(244,31,31)" fg:x="50675" fg:w="27"/><text x="47.6648%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (77 samples, 0.07%)</title><rect x="47.3801%" y="661" width="0.0720%" height="15" fill="rgb(231,43,21)" fg:x="50638" fg:w="77"/><text x="47.6301%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (77 samples, 0.07%)</title><rect x="47.3801%" y="645" width="0.0720%" height="15" fill="rgb(217,131,35)" fg:x="50638" fg:w="77"/><text x="47.6301%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (64 samples, 0.06%)</title><rect x="47.3923%" y="629" width="0.0599%" height="15" fill="rgb(221,149,4)" fg:x="50651" fg:w="64"/><text x="47.6423%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (64 samples, 0.06%)</title><rect x="47.3923%" y="613" width="0.0599%" height="15" fill="rgb(232,170,28)" fg:x="50651" fg:w="64"/><text x="47.6423%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (62 samples, 0.06%)</title><rect x="47.3942%" y="597" width="0.0580%" height="15" fill="rgb(238,56,10)" fg:x="50653" fg:w="62"/><text x="47.6442%" y="607.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="47.4400%" y="581" width="0.0122%" height="15" fill="rgb(235,196,14)" fg:x="50702" fg:w="13"/><text x="47.6900%" y="591.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="47.4400%" y="565" width="0.0122%" height="15" fill="rgb(216,45,48)" fg:x="50702" fg:w="13"/><text x="47.6900%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (79 samples, 0.07%)</title><rect x="47.3801%" y="693" width="0.0739%" height="15" fill="rgb(238,213,17)" fg:x="50638" fg:w="79"/><text x="47.6301%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (79 samples, 0.07%)</title><rect x="47.3801%" y="677" width="0.0739%" height="15" fill="rgb(212,13,2)" fg:x="50638" fg:w="79"/><text x="47.6301%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (94 samples, 0.09%)</title><rect x="47.3689%" y="709" width="0.0880%" height="15" fill="rgb(240,114,20)" fg:x="50626" fg:w="94"/><text x="47.6189%" y="719.50"></text></g><g><title>rust_dealloc (103 samples, 0.10%)</title><rect x="47.3642%" y="725" width="0.0964%" height="15" fill="rgb(228,41,40)" fg:x="50621" fg:w="103"/><text x="47.6142%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (365 samples, 0.34%)</title><rect x="47.1200%" y="773" width="0.3415%" height="15" fill="rgb(244,132,35)" fg:x="50360" fg:w="365"/><text x="47.3700%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (355 samples, 0.33%)</title><rect x="47.1294%" y="757" width="0.3322%" height="15" fill="rgb(253,189,4)" fg:x="50370" fg:w="355"/><text x="47.3794%" y="767.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (355 samples, 0.33%)</title><rect x="47.1294%" y="741" width="0.3322%" height="15" fill="rgb(224,37,19)" fg:x="50370" fg:w="355"/><text x="47.3794%" y="751.50"></text></g><g><title>core::time::Duration::as_nanos (11 samples, 0.01%)</title><rect x="47.4877%" y="757" width="0.0103%" height="15" fill="rgb(235,223,18)" fg:x="50753" fg:w="11"/><text x="47.7377%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (65 samples, 0.06%)</title><rect x="47.5420%" y="709" width="0.0608%" height="15" fill="rgb(235,163,25)" fg:x="50811" fg:w="65"/><text x="47.7920%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (65 samples, 0.06%)</title><rect x="47.5420%" y="693" width="0.0608%" height="15" fill="rgb(217,145,28)" fg:x="50811" fg:w="65"/><text x="47.7920%" y="703.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (65 samples, 0.06%)</title><rect x="47.5420%" y="677" width="0.0608%" height="15" fill="rgb(223,223,32)" fg:x="50811" fg:w="65"/><text x="47.7920%" y="687.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (65 samples, 0.06%)</title><rect x="47.5420%" y="661" width="0.0608%" height="15" fill="rgb(227,189,39)" fg:x="50811" fg:w="65"/><text x="47.7920%" y="671.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (65 samples, 0.06%)</title><rect x="47.5420%" y="645" width="0.0608%" height="15" fill="rgb(248,10,22)" fg:x="50811" fg:w="65"/><text x="47.7920%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (34 samples, 0.03%)</title><rect x="47.5710%" y="629" width="0.0318%" height="15" fill="rgb(248,46,39)" fg:x="50842" fg:w="34"/><text x="47.8210%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (141 samples, 0.13%)</title><rect x="47.4980%" y="741" width="0.1319%" height="15" fill="rgb(248,113,48)" fg:x="50764" fg:w="141"/><text x="47.7480%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (141 samples, 0.13%)</title><rect x="47.4980%" y="725" width="0.1319%" height="15" fill="rgb(245,16,25)" fg:x="50764" fg:w="141"/><text x="47.7480%" y="735.50"></text></g><g><title>core::time::Duration::new (29 samples, 0.03%)</title><rect x="47.6028%" y="709" width="0.0271%" height="15" fill="rgb(249,152,16)" fg:x="50876" fg:w="29"/><text x="47.8528%" y="719.50"></text></g><g><title>std::time::SystemTime::duration_since (149 samples, 0.14%)</title><rect x="47.4980%" y="757" width="0.1394%" height="15" fill="rgb(250,16,1)" fg:x="50764" fg:w="149"/><text x="47.7480%" y="767.50"></text></g><g><title>tremor_common::time::nanotime (718 samples, 0.67%)</title><rect x="47.4615%" y="773" width="0.6718%" height="15" fill="rgb(249,138,3)" fg:x="50725" fg:w="718"/><text x="47.7115%" y="783.50"></text></g><g><title>std::time::SystemTime::now (530 samples, 0.50%)</title><rect x="47.6374%" y="757" width="0.4959%" height="15" fill="rgb(227,71,41)" fg:x="50913" fg:w="530"/><text x="47.8874%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (530 samples, 0.50%)</title><rect x="47.6374%" y="741" width="0.4959%" height="15" fill="rgb(209,184,23)" fg:x="50913" fg:w="530"/><text x="47.8874%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (530 samples, 0.50%)</title><rect x="47.6374%" y="725" width="0.4959%" height="15" fill="rgb(223,215,31)" fg:x="50913" fg:w="530"/><text x="47.8874%" y="735.50"></text></g><g><title>__clock_gettime_2 (442 samples, 0.41%)</title><rect x="47.7198%" y="709" width="0.4136%" height="15" fill="rgb(210,146,28)" fg:x="51001" fg:w="442"/><text x="47.9698%" y="719.50"></text></g><g><title>__vdso_clock_gettime (396 samples, 0.37%)</title><rect x="47.7628%" y="693" width="0.3705%" height="15" fill="rgb(209,183,41)" fg:x="51047" fg:w="396"/><text x="48.0128%" y="703.50"></text></g><g><title>[[vdso]] (254 samples, 0.24%)</title><rect x="47.8957%" y="677" width="0.2377%" height="15" fill="rgb(209,224,45)" fg:x="51189" fg:w="254"/><text x="48.1457%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (41 samples, 0.04%)</title><rect x="48.1334%" y="773" width="0.0384%" height="15" fill="rgb(224,209,51)" fg:x="51443" fg:w="41"/><text x="48.3834%" y="783.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (41 samples, 0.04%)</title><rect x="48.2222%" y="693" width="0.0384%" height="15" fill="rgb(223,17,39)" fg:x="51538" fg:w="41"/><text x="48.4722%" y="703.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (4,181 samples, 3.91%)</title><rect x="44.3673%" y="789" width="3.9120%" height="15" fill="rgb(234,204,37)" fg:x="47418" fg:w="4181"/><text x="44.6173%" y="799.50">trem..</text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (115 samples, 0.11%)</title><rect x="48.1717%" y="773" width="0.1076%" height="15" fill="rgb(236,120,5)" fg:x="51484" fg:w="115"/><text x="48.4217%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (90 samples, 0.08%)</title><rect x="48.1951%" y="757" width="0.0842%" height="15" fill="rgb(248,97,27)" fg:x="51509" fg:w="90"/><text x="48.4451%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (81 samples, 0.08%)</title><rect x="48.2035%" y="741" width="0.0758%" height="15" fill="rgb(240,66,17)" fg:x="51518" fg:w="81"/><text x="48.4535%" y="751.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (81 samples, 0.08%)</title><rect x="48.2035%" y="725" width="0.0758%" height="15" fill="rgb(210,79,3)" fg:x="51518" fg:w="81"/><text x="48.4535%" y="735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (81 samples, 0.08%)</title><rect x="48.2035%" y="709" width="0.0758%" height="15" fill="rgb(214,176,27)" fg:x="51518" fg:w="81"/><text x="48.4535%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (20 samples, 0.02%)</title><rect x="48.2606%" y="693" width="0.0187%" height="15" fill="rgb(235,185,3)" fg:x="51579" fg:w="20"/><text x="48.5106%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,676 samples, 7.18%)</title><rect x="41.1383%" y="805" width="7.1822%" height="15" fill="rgb(227,24,12)" fg:x="43967" fg:w="7676"/><text x="41.3883%" y="815.50">&lt;core::fut..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (44 samples, 0.04%)</title><rect x="48.2793%" y="789" width="0.0412%" height="15" fill="rgb(252,169,48)" fg:x="51599" fg:w="44"/><text x="48.5293%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (713 samples, 0.67%)</title><rect x="48.3205%" y="805" width="0.6671%" height="15" fill="rgb(212,65,1)" fg:x="51643" fg:w="713"/><text x="48.5705%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="48.9904%" y="789" width="0.0234%" height="15" fill="rgb(242,39,24)" fg:x="52359" fg:w="25"/><text x="49.2404%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (37 samples, 0.03%)</title><rect x="48.9904%" y="805" width="0.0346%" height="15" fill="rgb(249,32,23)" fg:x="52359" fg:w="37"/><text x="49.2404%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="49.0138%" y="789" width="0.0112%" height="15" fill="rgb(251,195,23)" fg:x="52384" fg:w="12"/><text x="49.2638%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (8,897 samples, 8.32%)</title><rect x="40.7332%" y="821" width="8.3246%" height="15" fill="rgb(236,174,8)" fg:x="43534" fg:w="8897"/><text x="40.9832%" y="831.50">tremor_runti..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::should_pull_data (35 samples, 0.03%)</title><rect x="49.0250%" y="805" width="0.0327%" height="15" fill="rgb(220,197,8)" fg:x="52396" fg:w="35"/><text x="49.2750%" y="815.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (40 samples, 0.04%)</title><rect x="49.0671%" y="757" width="0.0374%" height="15" fill="rgb(240,108,37)" fg:x="52441" fg:w="40"/><text x="49.3171%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (35 samples, 0.03%)</title><rect x="49.0718%" y="741" width="0.0327%" height="15" fill="rgb(232,176,24)" fg:x="52446" fg:w="35"/><text x="49.3218%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (35 samples, 0.03%)</title><rect x="49.0718%" y="725" width="0.0327%" height="15" fill="rgb(243,35,29)" fg:x="52446" fg:w="35"/><text x="49.3218%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (35 samples, 0.03%)</title><rect x="49.0718%" y="709" width="0.0327%" height="15" fill="rgb(210,37,18)" fg:x="52446" fg:w="35"/><text x="49.3218%" y="719.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (51 samples, 0.05%)</title><rect x="49.0578%" y="821" width="0.0477%" height="15" fill="rgb(224,184,40)" fg:x="52431" fg:w="51"/><text x="49.3078%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (51 samples, 0.05%)</title><rect x="49.0578%" y="805" width="0.0477%" height="15" fill="rgb(236,39,29)" fg:x="52431" fg:w="51"/><text x="49.3078%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (51 samples, 0.05%)</title><rect x="49.0578%" y="789" width="0.0477%" height="15" fill="rgb(232,48,39)" fg:x="52431" fg:w="51"/><text x="49.3078%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (51 samples, 0.05%)</title><rect x="49.0578%" y="773" width="0.0477%" height="15" fill="rgb(236,34,42)" fg:x="52431" fg:w="51"/><text x="49.3078%" y="783.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,807 samples, 10.11%)</title><rect x="38.9947%" y="1109" width="10.1117%" height="15" fill="rgb(243,106,37)" fg:x="41676" fg:w="10807"/><text x="39.2447%" y="1119.50">&lt;futures_lite::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,805 samples, 10.11%)</title><rect x="38.9966%" y="1093" width="10.1098%" height="15" fill="rgb(218,96,6)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="1103.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::run::{{closure}} (10,805 samples, 10.11%)</title><rect x="38.9966%" y="1077" width="10.1098%" height="15" fill="rgb(235,130,12)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="1087.50">async_executor:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,805 samples, 10.11%)</title><rect x="38.9966%" y="1061" width="10.1098%" height="15" fill="rgb(231,95,0)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="1071.50">&lt;futures_lite::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,805 samples, 10.11%)</title><rect x="38.9966%" y="1045" width="10.1098%" height="15" fill="rgb(228,12,23)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="1055.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (10,805 samples, 10.11%)</title><rect x="38.9966%" y="1029" width="10.1098%" height="15" fill="rgb(216,12,1)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="1039.50">async_executor:..</text></g><g><title>async_task::runnable::Runnable::run (10,805 samples, 10.11%)</title><rect x="38.9966%" y="1013" width="10.1098%" height="15" fill="rgb(219,59,3)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="1023.50">async_task::run..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (10,805 samples, 10.11%)</title><rect x="38.9966%" y="997" width="10.1098%" height="15" fill="rgb(215,208,46)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="1007.50">async_task::raw..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10,805 samples, 10.11%)</title><rect x="38.9966%" y="981" width="10.1098%" height="15" fill="rgb(254,224,29)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="991.50">&lt;core::pin::Pin..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,805 samples, 10.11%)</title><rect x="38.9966%" y="965" width="10.1098%" height="15" fill="rgb(232,14,29)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="975.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (10,805 samples, 10.11%)</title><rect x="38.9966%" y="949" width="10.1098%" height="15" fill="rgb(208,45,52)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="959.50">async_executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (10,805 samples, 10.11%)</title><rect x="38.9966%" y="933" width="10.1098%" height="15" fill="rgb(234,191,28)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="943.50">&lt;async_std::tas..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (10,805 samples, 10.11%)</title><rect x="38.9966%" y="917" width="10.1098%" height="15" fill="rgb(244,67,43)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="927.50">async_std::task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,805 samples, 10.11%)</title><rect x="38.9966%" y="901" width="10.1098%" height="15" fill="rgb(236,189,24)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="911.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,805 samples, 10.11%)</title><rect x="38.9966%" y="885" width="10.1098%" height="15" fill="rgb(239,214,33)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="895.50">std::thread::lo..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (10,805 samples, 10.11%)</title><rect x="38.9966%" y="869" width="10.1098%" height="15" fill="rgb(226,176,41)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="879.50">async_std::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (10,805 samples, 10.11%)</title><rect x="38.9966%" y="853" width="10.1098%" height="15" fill="rgb(248,47,8)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="863.50">&lt;async_std::tas..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,805 samples, 10.11%)</title><rect x="38.9966%" y="837" width="10.1098%" height="15" fill="rgb(218,81,44)" fg:x="41678" fg:w="10805"/><text x="39.2466%" y="847.50">&lt;core::future::..</text></g><g><title>async_io::driver::block_on (10,813 samples, 10.12%)</title><rect x="38.9947%" y="1125" width="10.1173%" height="15" fill="rgb(213,98,6)" fg:x="41676" fg:w="10813"/><text x="39.2447%" y="1135.50">async_io::drive..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (15 samples, 0.01%)</title><rect x="49.2477%" y="437" width="0.0140%" height="15" fill="rgb(222,85,22)" fg:x="52634" fg:w="15"/><text x="49.4977%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="49.2777%" y="389" width="0.0187%" height="15" fill="rgb(239,46,39)" fg:x="52666" fg:w="20"/><text x="49.5277%" y="399.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="49.2852%" y="373" width="0.0112%" height="15" fill="rgb(237,12,29)" fg:x="52674" fg:w="12"/><text x="49.5352%" y="383.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="49.2964%" y="373" width="0.0103%" height="15" fill="rgb(214,77,8)" fg:x="52686" fg:w="11"/><text x="49.5464%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (18 samples, 0.02%)</title><rect x="49.2964%" y="389" width="0.0168%" height="15" fill="rgb(217,168,37)" fg:x="52686" fg:w="18"/><text x="49.5464%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="49.3825%" y="85" width="0.0140%" height="15" fill="rgb(221,217,23)" fg:x="52778" fg:w="15"/><text x="49.6325%" y="95.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="49.3834%" y="69" width="0.0131%" height="15" fill="rgb(243,229,36)" fg:x="52779" fg:w="14"/><text x="49.6334%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (39 samples, 0.04%)</title><rect x="49.3684%" y="133" width="0.0365%" height="15" fill="rgb(251,163,40)" fg:x="52763" fg:w="39"/><text x="49.6184%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (39 samples, 0.04%)</title><rect x="49.3684%" y="117" width="0.0365%" height="15" fill="rgb(237,222,12)" fg:x="52763" fg:w="39"/><text x="49.6184%" y="127.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (39 samples, 0.04%)</title><rect x="49.3684%" y="101" width="0.0365%" height="15" fill="rgb(248,132,6)" fg:x="52763" fg:w="39"/><text x="49.6184%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (62 samples, 0.06%)</title><rect x="49.3572%" y="165" width="0.0580%" height="15" fill="rgb(227,167,50)" fg:x="52751" fg:w="62"/><text x="49.6072%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (62 samples, 0.06%)</title><rect x="49.3572%" y="149" width="0.0580%" height="15" fill="rgb(242,84,37)" fg:x="52751" fg:w="62"/><text x="49.6072%" y="159.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="49.4049%" y="133" width="0.0103%" height="15" fill="rgb(212,4,50)" fg:x="52802" fg:w="11"/><text x="49.6549%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (83 samples, 0.08%)</title><rect x="49.3469%" y="213" width="0.0777%" height="15" fill="rgb(230,228,32)" fg:x="52740" fg:w="83"/><text x="49.5969%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (72 samples, 0.07%)</title><rect x="49.3572%" y="197" width="0.0674%" height="15" fill="rgb(248,217,23)" fg:x="52751" fg:w="72"/><text x="49.6072%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (72 samples, 0.07%)</title><rect x="49.3572%" y="181" width="0.0674%" height="15" fill="rgb(238,197,32)" fg:x="52751" fg:w="72"/><text x="49.6072%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (111 samples, 0.10%)</title><rect x="49.3216%" y="357" width="0.1039%" height="15" fill="rgb(236,106,1)" fg:x="52713" fg:w="111"/><text x="49.5716%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.10%)</title><rect x="49.3216%" y="341" width="0.1039%" height="15" fill="rgb(219,228,13)" fg:x="52713" fg:w="111"/><text x="49.5716%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (111 samples, 0.10%)</title><rect x="49.3216%" y="325" width="0.1039%" height="15" fill="rgb(238,30,35)" fg:x="52713" fg:w="111"/><text x="49.5716%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.10%)</title><rect x="49.3216%" y="309" width="0.1039%" height="15" fill="rgb(236,70,23)" fg:x="52713" fg:w="111"/><text x="49.5716%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (111 samples, 0.10%)</title><rect x="49.3216%" y="293" width="0.1039%" height="15" fill="rgb(249,104,48)" fg:x="52713" fg:w="111"/><text x="49.5716%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (102 samples, 0.10%)</title><rect x="49.3301%" y="277" width="0.0954%" height="15" fill="rgb(254,117,50)" fg:x="52722" fg:w="102"/><text x="49.5801%" y="287.50"></text></g><g><title>__rg_dealloc (102 samples, 0.10%)</title><rect x="49.3301%" y="261" width="0.0954%" height="15" fill="rgb(223,152,4)" fg:x="52722" fg:w="102"/><text x="49.5801%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (102 samples, 0.10%)</title><rect x="49.3301%" y="245" width="0.0954%" height="15" fill="rgb(245,6,2)" fg:x="52722" fg:w="102"/><text x="49.5801%" y="255.50"></text></g><g><title>rust_dealloc (92 samples, 0.09%)</title><rect x="49.3394%" y="229" width="0.0861%" height="15" fill="rgb(249,150,24)" fg:x="52732" fg:w="92"/><text x="49.5894%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (133 samples, 0.12%)</title><rect x="49.3132%" y="389" width="0.1244%" height="15" fill="rgb(228,185,42)" fg:x="52704" fg:w="133"/><text x="49.5632%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 samples, 0.12%)</title><rect x="49.3132%" y="373" width="0.1244%" height="15" fill="rgb(226,39,33)" fg:x="52704" fg:w="133"/><text x="49.5632%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (13 samples, 0.01%)</title><rect x="49.4255%" y="357" width="0.0122%" height="15" fill="rgb(221,166,19)" fg:x="52824" fg:w="13"/><text x="49.6755%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (182 samples, 0.17%)</title><rect x="49.2683%" y="437" width="0.1703%" height="15" fill="rgb(209,109,2)" fg:x="52656" fg:w="182"/><text x="49.5183%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (178 samples, 0.17%)</title><rect x="49.2721%" y="421" width="0.1665%" height="15" fill="rgb(252,216,26)" fg:x="52660" fg:w="178"/><text x="49.5221%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (172 samples, 0.16%)</title><rect x="49.2777%" y="405" width="0.1609%" height="15" fill="rgb(227,173,36)" fg:x="52666" fg:w="172"/><text x="49.5277%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (207 samples, 0.19%)</title><rect x="49.2477%" y="453" width="0.1937%" height="15" fill="rgb(209,90,7)" fg:x="52634" fg:w="207"/><text x="49.4977%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (100 samples, 0.09%)</title><rect x="49.4414%" y="453" width="0.0936%" height="15" fill="rgb(250,194,11)" fg:x="52841" fg:w="100"/><text x="49.6914%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (71 samples, 0.07%)</title><rect x="49.4685%" y="437" width="0.0664%" height="15" fill="rgb(220,72,50)" fg:x="52870" fg:w="71"/><text x="49.7185%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (71 samples, 0.07%)</title><rect x="49.4685%" y="421" width="0.0664%" height="15" fill="rgb(222,106,48)" fg:x="52870" fg:w="71"/><text x="49.7185%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="49.5780%" y="245" width="0.0112%" height="15" fill="rgb(216,220,45)" fg:x="52987" fg:w="12"/><text x="49.8280%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (12 samples, 0.01%)</title><rect x="49.5780%" y="229" width="0.0112%" height="15" fill="rgb(234,112,18)" fg:x="52987" fg:w="12"/><text x="49.8280%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::empty (35 samples, 0.03%)</title><rect x="49.5958%" y="245" width="0.0327%" height="15" fill="rgb(206,179,9)" fg:x="53006" fg:w="35"/><text x="49.8458%" y="255.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (35 samples, 0.03%)</title><rect x="49.5958%" y="229" width="0.0327%" height="15" fill="rgb(215,115,40)" fg:x="53006" fg:w="35"/><text x="49.8458%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (410 samples, 0.38%)</title><rect x="49.5584%" y="293" width="0.3836%" height="15" fill="rgb(222,69,34)" fg:x="52966" fg:w="410"/><text x="49.8084%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (410 samples, 0.38%)</title><rect x="49.5584%" y="277" width="0.3836%" height="15" fill="rgb(209,161,10)" fg:x="52966" fg:w="410"/><text x="49.8084%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (398 samples, 0.37%)</title><rect x="49.5696%" y="261" width="0.3724%" height="15" fill="rgb(217,6,38)" fg:x="52978" fg:w="398"/><text x="49.8196%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::take (335 samples, 0.31%)</title><rect x="49.6285%" y="245" width="0.3134%" height="15" fill="rgb(229,229,48)" fg:x="53041" fg:w="335"/><text x="49.8785%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (335 samples, 0.31%)</title><rect x="49.6285%" y="229" width="0.3134%" height="15" fill="rgb(225,21,28)" fg:x="53041" fg:w="335"/><text x="49.8785%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (433 samples, 0.41%)</title><rect x="49.5425%" y="389" width="0.4051%" height="15" fill="rgb(206,33,13)" fg:x="52949" fg:w="433"/><text x="49.7925%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (433 samples, 0.41%)</title><rect x="49.5425%" y="373" width="0.4051%" height="15" fill="rgb(242,178,17)" fg:x="52949" fg:w="433"/><text x="49.7925%" y="383.50"></text></g><g><title>alloc::alloc::alloc (426 samples, 0.40%)</title><rect x="49.5490%" y="357" width="0.3986%" height="15" fill="rgb(220,162,5)" fg:x="52956" fg:w="426"/><text x="49.7990%" y="367.50"></text></g><g><title>__rg_alloc (426 samples, 0.40%)</title><rect x="49.5490%" y="341" width="0.3986%" height="15" fill="rgb(210,33,43)" fg:x="52956" fg:w="426"/><text x="49.7990%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (426 samples, 0.40%)</title><rect x="49.5490%" y="325" width="0.3986%" height="15" fill="rgb(216,116,54)" fg:x="52956" fg:w="426"/><text x="49.7990%" y="335.50"></text></g><g><title>rust_alloc (422 samples, 0.39%)</title><rect x="49.5528%" y="309" width="0.3949%" height="15" fill="rgb(249,92,24)" fg:x="52960" fg:w="422"/><text x="49.8028%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (453 samples, 0.42%)</title><rect x="49.5425%" y="405" width="0.4239%" height="15" fill="rgb(231,189,14)" fg:x="52949" fg:w="453"/><text x="49.7925%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (20 samples, 0.02%)</title><rect x="49.9476%" y="389" width="0.0187%" height="15" fill="rgb(230,8,41)" fg:x="53382" fg:w="20"/><text x="50.1976%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (16 samples, 0.01%)</title><rect x="49.9513%" y="373" width="0.0150%" height="15" fill="rgb(249,7,27)" fg:x="53386" fg:w="16"/><text x="50.2013%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (16 samples, 0.01%)</title><rect x="49.9513%" y="357" width="0.0150%" height="15" fill="rgb(232,86,5)" fg:x="53386" fg:w="16"/><text x="50.2013%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (920 samples, 0.86%)</title><rect x="49.1139%" y="597" width="0.8608%" height="15" fill="rgb(224,175,18)" fg:x="52491" fg:w="920"/><text x="49.3639%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (920 samples, 0.86%)</title><rect x="49.1139%" y="581" width="0.8608%" height="15" fill="rgb(220,129,12)" fg:x="52491" fg:w="920"/><text x="49.3639%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (920 samples, 0.86%)</title><rect x="49.1139%" y="565" width="0.8608%" height="15" fill="rgb(210,19,36)" fg:x="52491" fg:w="920"/><text x="49.3639%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (920 samples, 0.86%)</title><rect x="49.1139%" y="549" width="0.8608%" height="15" fill="rgb(219,96,14)" fg:x="52491" fg:w="920"/><text x="49.3639%" y="559.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (920 samples, 0.86%)</title><rect x="49.1139%" y="533" width="0.8608%" height="15" fill="rgb(249,106,1)" fg:x="52491" fg:w="920"/><text x="49.3639%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (920 samples, 0.86%)</title><rect x="49.1139%" y="517" width="0.8608%" height="15" fill="rgb(249,155,20)" fg:x="52491" fg:w="920"/><text x="49.3639%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (920 samples, 0.86%)</title><rect x="49.1139%" y="501" width="0.8608%" height="15" fill="rgb(244,168,9)" fg:x="52491" fg:w="920"/><text x="49.3639%" y="511.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (920 samples, 0.86%)</title><rect x="49.1139%" y="485" width="0.8608%" height="15" fill="rgb(216,23,50)" fg:x="52491" fg:w="920"/><text x="49.3639%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (777 samples, 0.73%)</title><rect x="49.2477%" y="469" width="0.7270%" height="15" fill="rgb(224,219,20)" fg:x="52634" fg:w="777"/><text x="49.4977%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (470 samples, 0.44%)</title><rect x="49.5350%" y="453" width="0.4398%" height="15" fill="rgb(222,156,15)" fg:x="52941" fg:w="470"/><text x="49.7850%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (470 samples, 0.44%)</title><rect x="49.5350%" y="437" width="0.4398%" height="15" fill="rgb(231,97,17)" fg:x="52941" fg:w="470"/><text x="49.7850%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (462 samples, 0.43%)</title><rect x="49.5425%" y="421" width="0.4323%" height="15" fill="rgb(218,70,48)" fg:x="52949" fg:w="462"/><text x="49.7925%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (931 samples, 0.87%)</title><rect x="50.0084%" y="565" width="0.8711%" height="15" fill="rgb(212,196,52)" fg:x="53447" fg:w="931"/><text x="50.2584%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (11 samples, 0.01%)</title><rect x="50.9179%" y="469" width="0.0103%" height="15" fill="rgb(243,203,18)" fg:x="54419" fg:w="11"/><text x="51.1679%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (17 samples, 0.02%)</title><rect x="50.9329%" y="453" width="0.0159%" height="15" fill="rgb(252,125,41)" fg:x="54435" fg:w="17"/><text x="51.1829%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (136 samples, 0.13%)</title><rect x="50.9179%" y="501" width="0.1273%" height="15" fill="rgb(223,180,33)" fg:x="54419" fg:w="136"/><text x="51.1679%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (136 samples, 0.13%)</title><rect x="50.9179%" y="485" width="0.1273%" height="15" fill="rgb(254,159,46)" fg:x="54419" fg:w="136"/><text x="51.1679%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (125 samples, 0.12%)</title><rect x="50.9282%" y="469" width="0.1170%" height="15" fill="rgb(254,38,10)" fg:x="54430" fg:w="125"/><text x="51.1782%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (103 samples, 0.10%)</title><rect x="50.9488%" y="453" width="0.0964%" height="15" fill="rgb(208,217,32)" fg:x="54452" fg:w="103"/><text x="51.1988%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (103 samples, 0.10%)</title><rect x="50.9488%" y="437" width="0.0964%" height="15" fill="rgb(221,120,13)" fg:x="54452" fg:w="103"/><text x="51.1988%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (103 samples, 0.10%)</title><rect x="50.9488%" y="421" width="0.0964%" height="15" fill="rgb(246,54,52)" fg:x="54452" fg:w="103"/><text x="51.1988%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (15 samples, 0.01%)</title><rect x="51.0517%" y="469" width="0.0140%" height="15" fill="rgb(242,34,25)" fg:x="54562" fg:w="15"/><text x="51.3017%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (14 samples, 0.01%)</title><rect x="51.0526%" y="453" width="0.0131%" height="15" fill="rgb(247,209,9)" fg:x="54563" fg:w="14"/><text x="51.3026%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="51.0526%" y="437" width="0.0131%" height="15" fill="rgb(228,71,26)" fg:x="54563" fg:w="14"/><text x="51.3026%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (14 samples, 0.01%)</title><rect x="51.0657%" y="469" width="0.0131%" height="15" fill="rgb(222,145,49)" fg:x="54577" fg:w="14"/><text x="51.3157%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (14 samples, 0.01%)</title><rect x="51.0657%" y="453" width="0.0131%" height="15" fill="rgb(218,121,17)" fg:x="54577" fg:w="14"/><text x="51.3157%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="51.0451%" y="501" width="0.0384%" height="15" fill="rgb(244,50,7)" fg:x="54555" fg:w="41"/><text x="51.2951%" y="511.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (34 samples, 0.03%)</title><rect x="51.0517%" y="485" width="0.0318%" height="15" fill="rgb(246,229,37)" fg:x="54562" fg:w="34"/><text x="51.3017%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="51.0835%" y="501" width="0.0374%" height="15" fill="rgb(225,18,5)" fg:x="54596" fg:w="40"/><text x="51.3335%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.04%)</title><rect x="51.0854%" y="485" width="0.0356%" height="15" fill="rgb(213,204,8)" fg:x="54598" fg:w="38"/><text x="51.3354%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (33 samples, 0.03%)</title><rect x="51.0900%" y="469" width="0.0309%" height="15" fill="rgb(238,103,6)" fg:x="54603" fg:w="33"/><text x="51.3400%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="51.1031%" y="453" width="0.0178%" height="15" fill="rgb(222,25,35)" fg:x="54617" fg:w="19"/><text x="51.3531%" y="463.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (16 samples, 0.01%)</title><rect x="51.1060%" y="437" width="0.0150%" height="15" fill="rgb(213,203,35)" fg:x="54620" fg:w="16"/><text x="51.3560%" y="447.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (11 samples, 0.01%)</title><rect x="51.1106%" y="421" width="0.0103%" height="15" fill="rgb(221,79,53)" fg:x="54625" fg:w="11"/><text x="51.3606%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="51.1106%" y="405" width="0.0103%" height="15" fill="rgb(243,200,35)" fg:x="54625" fg:w="11"/><text x="51.3606%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (19 samples, 0.02%)</title><rect x="51.1209%" y="501" width="0.0178%" height="15" fill="rgb(248,60,25)" fg:x="54636" fg:w="19"/><text x="51.3709%" y="511.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (19 samples, 0.02%)</title><rect x="51.1209%" y="485" width="0.0178%" height="15" fill="rgb(227,53,46)" fg:x="54636" fg:w="19"/><text x="51.3709%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,378 samples, 2.23%)</title><rect x="49.1139%" y="949" width="2.2250%" height="15" fill="rgb(216,120,32)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="959.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,378 samples, 2.23%)</title><rect x="49.1139%" y="933" width="2.2250%" height="15" fill="rgb(220,134,1)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="943.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (2,378 samples, 2.23%)</title><rect x="49.1139%" y="917" width="2.2250%" height="15" fill="rgb(237,168,5)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="927.50">t..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,378 samples, 2.23%)</title><rect x="49.1139%" y="901" width="2.2250%" height="15" fill="rgb(231,100,33)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="911.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,378 samples, 2.23%)</title><rect x="49.1139%" y="885" width="2.2250%" height="15" fill="rgb(236,177,47)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="895.50">&lt;..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (2,378 samples, 2.23%)</title><rect x="49.1139%" y="869" width="2.2250%" height="15" fill="rgb(235,7,49)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="879.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,378 samples, 2.23%)</title><rect x="49.1139%" y="853" width="2.2250%" height="15" fill="rgb(232,119,22)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="863.50">&lt;..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (2,378 samples, 2.23%)</title><rect x="49.1139%" y="837" width="2.2250%" height="15" fill="rgb(254,73,53)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="847.50">a..</text></g><g><title>std::panic::catch_unwind (2,378 samples, 2.23%)</title><rect x="49.1139%" y="821" width="2.2250%" height="15" fill="rgb(251,35,20)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="831.50">s..</text></g><g><title>std::panicking::try (2,378 samples, 2.23%)</title><rect x="49.1139%" y="805" width="2.2250%" height="15" fill="rgb(241,119,20)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="815.50">s..</text></g><g><title>std::panicking::try::do_call (2,378 samples, 2.23%)</title><rect x="49.1139%" y="789" width="2.2250%" height="15" fill="rgb(207,102,14)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="799.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,378 samples, 2.23%)</title><rect x="49.1139%" y="773" width="2.2250%" height="15" fill="rgb(248,201,50)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="783.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once (2,378 samples, 2.23%)</title><rect x="49.1139%" y="757" width="2.2250%" height="15" fill="rgb(222,185,44)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="767.50">c..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (2,378 samples, 2.23%)</title><rect x="49.1139%" y="741" width="2.2250%" height="15" fill="rgb(218,107,18)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="751.50">a..</text></g><g><title>async_ffi::FfiContext::with_context (2,378 samples, 2.23%)</title><rect x="49.1139%" y="725" width="2.2250%" height="15" fill="rgb(237,177,39)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="735.50">a..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (2,378 samples, 2.23%)</title><rect x="49.1139%" y="709" width="2.2250%" height="15" fill="rgb(246,69,6)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="719.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,378 samples, 2.23%)</title><rect x="49.1139%" y="693" width="2.2250%" height="15" fill="rgb(234,208,37)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="703.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (2,378 samples, 2.23%)</title><rect x="49.1139%" y="677" width="2.2250%" height="15" fill="rgb(225,4,6)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="687.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (2,378 samples, 2.23%)</title><rect x="49.1139%" y="661" width="2.2250%" height="15" fill="rgb(233,45,0)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="671.50">t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (2,378 samples, 2.23%)</title><rect x="49.1139%" y="645" width="2.2250%" height="15" fill="rgb(226,136,5)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="655.50">t..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (2,378 samples, 2.23%)</title><rect x="49.1139%" y="629" width="2.2250%" height="15" fill="rgb(211,91,47)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="639.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (2,378 samples, 2.23%)</title><rect x="49.1139%" y="613" width="2.2250%" height="15" fill="rgb(242,88,51)" fg:x="52491" fg:w="2378"/><text x="49.3639%" y="623.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,458 samples, 1.36%)</title><rect x="49.9747%" y="597" width="1.3642%" height="15" fill="rgb(230,91,28)" fg:x="53411" fg:w="1458"/><text x="50.2247%" y="607.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (1,458 samples, 1.36%)</title><rect x="49.9747%" y="581" width="1.3642%" height="15" fill="rgb(254,186,29)" fg:x="53411" fg:w="1458"/><text x="50.2247%" y="591.50"></text></g><g><title>rust_alloc (491 samples, 0.46%)</title><rect x="50.8795%" y="565" width="0.4594%" height="15" fill="rgb(238,6,4)" fg:x="54378" fg:w="491"/><text x="51.1295%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (483 samples, 0.45%)</title><rect x="50.8870%" y="549" width="0.4519%" height="15" fill="rgb(221,151,16)" fg:x="54386" fg:w="483"/><text x="51.1370%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (483 samples, 0.45%)</title><rect x="50.8870%" y="533" width="0.4519%" height="15" fill="rgb(251,143,52)" fg:x="54386" fg:w="483"/><text x="51.1370%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (469 samples, 0.44%)</title><rect x="50.9001%" y="517" width="0.4388%" height="15" fill="rgb(206,90,15)" fg:x="54400" fg:w="469"/><text x="51.1501%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (214 samples, 0.20%)</title><rect x="51.1387%" y="501" width="0.2002%" height="15" fill="rgb(218,35,8)" fg:x="54655" fg:w="214"/><text x="51.3887%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (214 samples, 0.20%)</title><rect x="51.1387%" y="485" width="0.2002%" height="15" fill="rgb(239,215,6)" fg:x="54655" fg:w="214"/><text x="51.3887%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (11 samples, 0.01%)</title><rect x="52.9773%" y="309" width="0.0103%" height="15" fill="rgb(245,116,39)" fg:x="56620" fg:w="11"/><text x="53.2273%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (57 samples, 0.05%)</title><rect x="52.9773%" y="341" width="0.0533%" height="15" fill="rgb(242,65,28)" fg:x="56620" fg:w="57"/><text x="53.2273%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (57 samples, 0.05%)</title><rect x="52.9773%" y="325" width="0.0533%" height="15" fill="rgb(252,132,53)" fg:x="56620" fg:w="57"/><text x="53.2273%" y="335.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (46 samples, 0.04%)</title><rect x="52.9876%" y="309" width="0.0430%" height="15" fill="rgb(224,159,50)" fg:x="56631" fg:w="46"/><text x="53.2376%" y="319.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (34 samples, 0.03%)</title><rect x="52.9988%" y="293" width="0.0318%" height="15" fill="rgb(224,93,4)" fg:x="56643" fg:w="34"/><text x="53.2488%" y="303.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="52.9988%" y="277" width="0.0318%" height="15" fill="rgb(208,81,34)" fg:x="56643" fg:w="34"/><text x="53.2488%" y="287.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="52.9988%" y="261" width="0.0318%" height="15" fill="rgb(233,92,54)" fg:x="56643" fg:w="34"/><text x="53.2488%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::empty (59 samples, 0.06%)</title><rect x="53.0381%" y="341" width="0.0552%" height="15" fill="rgb(237,21,14)" fg:x="56685" fg:w="59"/><text x="53.2881%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (59 samples, 0.06%)</title><rect x="53.0381%" y="325" width="0.0552%" height="15" fill="rgb(249,128,51)" fg:x="56685" fg:w="59"/><text x="53.2881%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (712 samples, 0.67%)</title><rect x="52.9483%" y="389" width="0.6662%" height="15" fill="rgb(223,129,24)" fg:x="56589" fg:w="712"/><text x="53.1983%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (700 samples, 0.65%)</title><rect x="52.9595%" y="373" width="0.6550%" height="15" fill="rgb(231,168,25)" fg:x="56601" fg:w="700"/><text x="53.2095%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (691 samples, 0.65%)</title><rect x="52.9679%" y="357" width="0.6465%" height="15" fill="rgb(224,39,20)" fg:x="56610" fg:w="691"/><text x="53.2179%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (557 samples, 0.52%)</title><rect x="53.0933%" y="341" width="0.5212%" height="15" fill="rgb(225,152,53)" fg:x="56744" fg:w="557"/><text x="53.3433%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (557 samples, 0.52%)</title><rect x="53.0933%" y="325" width="0.5212%" height="15" fill="rgb(252,17,24)" fg:x="56744" fg:w="557"/><text x="53.3433%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (754 samples, 0.71%)</title><rect x="52.9230%" y="533" width="0.7055%" height="15" fill="rgb(250,114,30)" fg:x="56562" fg:w="754"/><text x="53.1730%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (754 samples, 0.71%)</title><rect x="52.9230%" y="517" width="0.7055%" height="15" fill="rgb(229,5,4)" fg:x="56562" fg:w="754"/><text x="53.1730%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (752 samples, 0.70%)</title><rect x="52.9249%" y="501" width="0.7036%" height="15" fill="rgb(225,176,49)" fg:x="56564" fg:w="752"/><text x="53.1749%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (752 samples, 0.70%)</title><rect x="52.9249%" y="485" width="0.7036%" height="15" fill="rgb(224,221,49)" fg:x="56564" fg:w="752"/><text x="53.1749%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (752 samples, 0.70%)</title><rect x="52.9249%" y="469" width="0.7036%" height="15" fill="rgb(253,169,27)" fg:x="56564" fg:w="752"/><text x="53.1749%" y="479.50"></text></g><g><title>alloc::alloc::alloc (748 samples, 0.70%)</title><rect x="52.9286%" y="453" width="0.6999%" height="15" fill="rgb(211,206,16)" fg:x="56568" fg:w="748"/><text x="53.1786%" y="463.50"></text></g><g><title>__rg_alloc (748 samples, 0.70%)</title><rect x="52.9286%" y="437" width="0.6999%" height="15" fill="rgb(244,87,35)" fg:x="56568" fg:w="748"/><text x="53.1786%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (748 samples, 0.70%)</title><rect x="52.9286%" y="421" width="0.6999%" height="15" fill="rgb(246,28,10)" fg:x="56568" fg:w="748"/><text x="53.1786%" y="431.50"></text></g><g><title>rust_alloc (732 samples, 0.68%)</title><rect x="52.9436%" y="405" width="0.6849%" height="15" fill="rgb(229,12,44)" fg:x="56584" fg:w="732"/><text x="53.1936%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="53.6145%" y="389" width="0.0140%" height="15" fill="rgb(210,145,37)" fg:x="57301" fg:w="15"/><text x="53.8645%" y="399.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (847 samples, 0.79%)</title><rect x="52.8781%" y="645" width="0.7925%" height="15" fill="rgb(227,112,52)" fg:x="56514" fg:w="847"/><text x="53.1281%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (823 samples, 0.77%)</title><rect x="52.9006%" y="629" width="0.7701%" height="15" fill="rgb(238,155,34)" fg:x="56538" fg:w="823"/><text x="53.1506%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (799 samples, 0.75%)</title><rect x="52.9230%" y="613" width="0.7476%" height="15" fill="rgb(239,226,36)" fg:x="56562" fg:w="799"/><text x="53.1730%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (799 samples, 0.75%)</title><rect x="52.9230%" y="597" width="0.7476%" height="15" fill="rgb(230,16,23)" fg:x="56562" fg:w="799"/><text x="53.1730%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (799 samples, 0.75%)</title><rect x="52.9230%" y="581" width="0.7476%" height="15" fill="rgb(236,171,36)" fg:x="56562" fg:w="799"/><text x="53.1730%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (799 samples, 0.75%)</title><rect x="52.9230%" y="565" width="0.7476%" height="15" fill="rgb(221,22,14)" fg:x="56562" fg:w="799"/><text x="53.1730%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (799 samples, 0.75%)</title><rect x="52.9230%" y="549" width="0.7476%" height="15" fill="rgb(242,43,11)" fg:x="56562" fg:w="799"/><text x="53.1730%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (45 samples, 0.04%)</title><rect x="53.6285%" y="533" width="0.0421%" height="15" fill="rgb(232,69,23)" fg:x="57316" fg:w="45"/><text x="53.8785%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45 samples, 0.04%)</title><rect x="53.6285%" y="517" width="0.0421%" height="15" fill="rgb(216,180,54)" fg:x="57316" fg:w="45"/><text x="53.8785%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (44 samples, 0.04%)</title><rect x="53.6294%" y="501" width="0.0412%" height="15" fill="rgb(216,5,24)" fg:x="57317" fg:w="44"/><text x="53.8794%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (21 samples, 0.02%)</title><rect x="53.6809%" y="629" width="0.0196%" height="15" fill="rgb(225,89,9)" fg:x="57372" fg:w="21"/><text x="53.9309%" y="639.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="53.7258%" y="261" width="0.0103%" height="15" fill="rgb(243,75,33)" fg:x="57420" fg:w="11"/><text x="53.9758%" y="271.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="53.7258%" y="245" width="0.0103%" height="15" fill="rgb(247,141,45)" fg:x="57420" fg:w="11"/><text x="53.9758%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (11 samples, 0.01%)</title><rect x="53.7361%" y="213" width="0.0103%" height="15" fill="rgb(232,177,36)" fg:x="57431" fg:w="11"/><text x="53.9861%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.06%)</title><rect x="53.7361%" y="245" width="0.0561%" height="15" fill="rgb(219,125,36)" fg:x="57431" fg:w="60"/><text x="53.9861%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (60 samples, 0.06%)</title><rect x="53.7361%" y="229" width="0.0561%" height="15" fill="rgb(227,94,9)" fg:x="57431" fg:w="60"/><text x="53.9861%" y="239.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (49 samples, 0.05%)</title><rect x="53.7464%" y="213" width="0.0458%" height="15" fill="rgb(240,34,52)" fg:x="57442" fg:w="49"/><text x="53.9964%" y="223.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (37 samples, 0.03%)</title><rect x="53.7576%" y="197" width="0.0346%" height="15" fill="rgb(216,45,12)" fg:x="57454" fg:w="37"/><text x="54.0076%" y="207.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (37 samples, 0.03%)</title><rect x="53.7576%" y="181" width="0.0346%" height="15" fill="rgb(246,21,19)" fg:x="57454" fg:w="37"/><text x="54.0076%" y="191.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (37 samples, 0.03%)</title><rect x="53.7576%" y="165" width="0.0346%" height="15" fill="rgb(213,98,42)" fg:x="57454" fg:w="37"/><text x="54.0076%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (167 samples, 0.16%)</title><rect x="53.7249%" y="293" width="0.1563%" height="15" fill="rgb(250,136,47)" fg:x="57419" fg:w="167"/><text x="53.9749%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (167 samples, 0.16%)</title><rect x="53.7249%" y="277" width="0.1563%" height="15" fill="rgb(251,124,27)" fg:x="57419" fg:w="167"/><text x="53.9749%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (155 samples, 0.15%)</title><rect x="53.7361%" y="261" width="0.1450%" height="15" fill="rgb(229,180,14)" fg:x="57431" fg:w="155"/><text x="53.9861%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::take (83 samples, 0.08%)</title><rect x="53.8035%" y="245" width="0.0777%" height="15" fill="rgb(245,216,25)" fg:x="57503" fg:w="83"/><text x="54.0535%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (83 samples, 0.08%)</title><rect x="53.8035%" y="229" width="0.0777%" height="15" fill="rgb(251,43,5)" fg:x="57503" fg:w="83"/><text x="54.0535%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (201 samples, 0.19%)</title><rect x="53.7006%" y="437" width="0.1881%" height="15" fill="rgb(250,128,24)" fg:x="57393" fg:w="201"/><text x="53.9506%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (201 samples, 0.19%)</title><rect x="53.7006%" y="421" width="0.1881%" height="15" fill="rgb(217,117,27)" fg:x="57393" fg:w="201"/><text x="53.9506%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (191 samples, 0.18%)</title><rect x="53.7099%" y="405" width="0.1787%" height="15" fill="rgb(245,147,4)" fg:x="57403" fg:w="191"/><text x="53.9599%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (191 samples, 0.18%)</title><rect x="53.7099%" y="389" width="0.1787%" height="15" fill="rgb(242,201,35)" fg:x="57403" fg:w="191"/><text x="53.9599%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (191 samples, 0.18%)</title><rect x="53.7099%" y="373" width="0.1787%" height="15" fill="rgb(218,181,1)" fg:x="57403" fg:w="191"/><text x="53.9599%" y="383.50"></text></g><g><title>alloc::alloc::alloc (188 samples, 0.18%)</title><rect x="53.7127%" y="357" width="0.1759%" height="15" fill="rgb(222,6,29)" fg:x="57406" fg:w="188"/><text x="53.9627%" y="367.50"></text></g><g><title>__rg_alloc (188 samples, 0.18%)</title><rect x="53.7127%" y="341" width="0.1759%" height="15" fill="rgb(208,186,3)" fg:x="57406" fg:w="188"/><text x="53.9627%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (188 samples, 0.18%)</title><rect x="53.7127%" y="325" width="0.1759%" height="15" fill="rgb(216,36,26)" fg:x="57406" fg:w="188"/><text x="53.9627%" y="335.50"></text></g><g><title>rust_alloc (182 samples, 0.17%)</title><rect x="53.7183%" y="309" width="0.1703%" height="15" fill="rgb(248,201,23)" fg:x="57412" fg:w="182"/><text x="53.9683%" y="319.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (249 samples, 0.23%)</title><rect x="53.7006%" y="549" width="0.2330%" height="15" fill="rgb(251,170,31)" fg:x="57393" fg:w="249"/><text x="53.9506%" y="559.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (249 samples, 0.23%)</title><rect x="53.7006%" y="533" width="0.2330%" height="15" fill="rgb(207,110,25)" fg:x="57393" fg:w="249"/><text x="53.9506%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (249 samples, 0.23%)</title><rect x="53.7006%" y="517" width="0.2330%" height="15" fill="rgb(250,54,15)" fg:x="57393" fg:w="249"/><text x="53.9506%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (249 samples, 0.23%)</title><rect x="53.7006%" y="501" width="0.2330%" height="15" fill="rgb(227,68,33)" fg:x="57393" fg:w="249"/><text x="53.9506%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (249 samples, 0.23%)</title><rect x="53.7006%" y="485" width="0.2330%" height="15" fill="rgb(238,34,41)" fg:x="57393" fg:w="249"/><text x="53.9506%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (249 samples, 0.23%)</title><rect x="53.7006%" y="469" width="0.2330%" height="15" fill="rgb(220,11,15)" fg:x="57393" fg:w="249"/><text x="53.9506%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (249 samples, 0.23%)</title><rect x="53.7006%" y="453" width="0.2330%" height="15" fill="rgb(246,111,35)" fg:x="57393" fg:w="249"/><text x="53.9506%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (48 samples, 0.04%)</title><rect x="53.8886%" y="437" width="0.0449%" height="15" fill="rgb(209,88,53)" fg:x="57594" fg:w="48"/><text x="54.1386%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.04%)</title><rect x="53.8924%" y="421" width="0.0412%" height="15" fill="rgb(231,185,47)" fg:x="57598" fg:w="44"/><text x="54.1424%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (37 samples, 0.03%)</title><rect x="53.8989%" y="405" width="0.0346%" height="15" fill="rgb(233,154,1)" fg:x="57605" fg:w="37"/><text x="54.1489%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="53.9335%" y="549" width="0.0131%" height="15" fill="rgb(225,15,46)" fg:x="57642" fg:w="14"/><text x="54.1835%" y="559.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="53.9794%" y="373" width="0.0103%" height="15" fill="rgb(211,135,41)" fg:x="57691" fg:w="11"/><text x="54.2294%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.06%)</title><rect x="53.9915%" y="357" width="0.0580%" height="15" fill="rgb(208,54,0)" fg:x="57704" fg:w="62"/><text x="54.2415%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (62 samples, 0.06%)</title><rect x="53.9915%" y="341" width="0.0580%" height="15" fill="rgb(244,136,14)" fg:x="57704" fg:w="62"/><text x="54.2415%" y="351.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (55 samples, 0.05%)</title><rect x="53.9981%" y="325" width="0.0515%" height="15" fill="rgb(241,56,14)" fg:x="57711" fg:w="55"/><text x="54.2481%" y="335.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (45 samples, 0.04%)</title><rect x="54.0074%" y="309" width="0.0421%" height="15" fill="rgb(205,80,24)" fg:x="57721" fg:w="45"/><text x="54.2574%" y="319.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (45 samples, 0.04%)</title><rect x="54.0074%" y="293" width="0.0421%" height="15" fill="rgb(220,57,4)" fg:x="57721" fg:w="45"/><text x="54.2574%" y="303.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (45 samples, 0.04%)</title><rect x="54.0074%" y="277" width="0.0421%" height="15" fill="rgb(226,193,50)" fg:x="57721" fg:w="45"/><text x="54.2574%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (162 samples, 0.15%)</title><rect x="53.9784%" y="405" width="0.1516%" height="15" fill="rgb(231,168,22)" fg:x="57690" fg:w="162"/><text x="54.2284%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (161 samples, 0.15%)</title><rect x="53.9794%" y="389" width="0.1506%" height="15" fill="rgb(254,215,14)" fg:x="57691" fg:w="161"/><text x="54.2294%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.14%)</title><rect x="53.9906%" y="373" width="0.1394%" height="15" fill="rgb(211,115,16)" fg:x="57703" fg:w="149"/><text x="54.2406%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (80 samples, 0.07%)</title><rect x="54.0552%" y="357" width="0.0749%" height="15" fill="rgb(236,210,16)" fg:x="57772" fg:w="80"/><text x="54.3052%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (80 samples, 0.07%)</title><rect x="54.0552%" y="341" width="0.0749%" height="15" fill="rgb(221,94,12)" fg:x="57772" fg:w="80"/><text x="54.3052%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (187 samples, 0.17%)</title><rect x="53.9560%" y="501" width="0.1750%" height="15" fill="rgb(235,218,49)" fg:x="57666" fg:w="187"/><text x="54.2060%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (187 samples, 0.17%)</title><rect x="53.9560%" y="485" width="0.1750%" height="15" fill="rgb(217,114,14)" fg:x="57666" fg:w="187"/><text x="54.2060%" y="495.50"></text></g><g><title>alloc::alloc::alloc (182 samples, 0.17%)</title><rect x="53.9607%" y="469" width="0.1703%" height="15" fill="rgb(216,145,22)" fg:x="57671" fg:w="182"/><text x="54.2107%" y="479.50"></text></g><g><title>__rg_alloc (182 samples, 0.17%)</title><rect x="53.9607%" y="453" width="0.1703%" height="15" fill="rgb(217,112,39)" fg:x="57671" fg:w="182"/><text x="54.2107%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (182 samples, 0.17%)</title><rect x="53.9607%" y="437" width="0.1703%" height="15" fill="rgb(225,85,32)" fg:x="57671" fg:w="182"/><text x="54.2107%" y="447.50"></text></g><g><title>rust_alloc (174 samples, 0.16%)</title><rect x="53.9682%" y="421" width="0.1628%" height="15" fill="rgb(245,209,47)" fg:x="57679" fg:w="174"/><text x="54.2182%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (206 samples, 0.19%)</title><rect x="53.9466%" y="549" width="0.1927%" height="15" fill="rgb(218,220,15)" fg:x="57656" fg:w="206"/><text x="54.1966%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (196 samples, 0.18%)</title><rect x="53.9560%" y="533" width="0.1834%" height="15" fill="rgb(222,202,31)" fg:x="57666" fg:w="196"/><text x="54.2060%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (196 samples, 0.18%)</title><rect x="53.9560%" y="517" width="0.1834%" height="15" fill="rgb(243,203,4)" fg:x="57666" fg:w="196"/><text x="54.2060%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (482 samples, 0.45%)</title><rect x="53.7006%" y="565" width="0.4510%" height="15" fill="rgb(237,92,17)" fg:x="57393" fg:w="482"/><text x="53.9506%" y="575.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (13 samples, 0.01%)</title><rect x="54.1394%" y="549" width="0.0122%" height="15" fill="rgb(231,119,7)" fg:x="57862" fg:w="13"/><text x="54.3894%" y="559.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (2,000 samples, 1.87%)</title><rect x="52.2914%" y="661" width="1.8713%" height="15" fill="rgb(237,82,41)" fg:x="55887" fg:w="2000"/><text x="52.5414%" y="671.50">&lt;..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (526 samples, 0.49%)</title><rect x="53.6706%" y="645" width="0.4922%" height="15" fill="rgb(226,81,48)" fg:x="57361" fg:w="526"/><text x="53.9206%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (494 samples, 0.46%)</title><rect x="53.7006%" y="629" width="0.4622%" height="15" fill="rgb(234,70,51)" fg:x="57393" fg:w="494"/><text x="53.9506%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (494 samples, 0.46%)</title><rect x="53.7006%" y="613" width="0.4622%" height="15" fill="rgb(251,86,4)" fg:x="57393" fg:w="494"/><text x="53.9506%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (494 samples, 0.46%)</title><rect x="53.7006%" y="597" width="0.4622%" height="15" fill="rgb(244,144,28)" fg:x="57393" fg:w="494"/><text x="53.9506%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (494 samples, 0.46%)</title><rect x="53.7006%" y="581" width="0.4622%" height="15" fill="rgb(232,161,39)" fg:x="57393" fg:w="494"/><text x="53.9506%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (12 samples, 0.01%)</title><rect x="54.1515%" y="565" width="0.0112%" height="15" fill="rgb(247,34,51)" fg:x="57875" fg:w="12"/><text x="54.4015%" y="575.50"></text></g><g><title>rust_alloc (22 samples, 0.02%)</title><rect x="54.3115%" y="373" width="0.0206%" height="15" fill="rgb(225,132,2)" fg:x="58046" fg:w="22"/><text x="54.5615%" y="383.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="54.3574%" y="245" width="0.0103%" height="15" fill="rgb(209,159,44)" fg:x="58095" fg:w="11"/><text x="54.6074%" y="255.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="54.3574%" y="229" width="0.0103%" height="15" fill="rgb(251,214,1)" fg:x="58095" fg:w="11"/><text x="54.6074%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (29 samples, 0.03%)</title><rect x="54.3527%" y="293" width="0.0271%" height="15" fill="rgb(247,84,47)" fg:x="58090" fg:w="29"/><text x="54.6027%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (29 samples, 0.03%)</title><rect x="54.3527%" y="277" width="0.0271%" height="15" fill="rgb(240,111,43)" fg:x="58090" fg:w="29"/><text x="54.6027%" y="287.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (26 samples, 0.02%)</title><rect x="54.3555%" y="261" width="0.0243%" height="15" fill="rgb(215,214,35)" fg:x="58093" fg:w="26"/><text x="54.6055%" y="271.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="54.3677%" y="245" width="0.0122%" height="15" fill="rgb(248,207,23)" fg:x="58106" fg:w="13"/><text x="54.6177%" y="255.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="54.3677%" y="229" width="0.0122%" height="15" fill="rgb(214,186,4)" fg:x="58106" fg:w="13"/><text x="54.6177%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (39 samples, 0.04%)</title><rect x="54.3527%" y="309" width="0.0365%" height="15" fill="rgb(220,133,22)" fg:x="58090" fg:w="39"/><text x="54.6027%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (60 samples, 0.06%)</title><rect x="54.3471%" y="325" width="0.0561%" height="15" fill="rgb(239,134,19)" fg:x="58084" fg:w="60"/><text x="54.5971%" y="335.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="54.3892%" y="309" width="0.0140%" height="15" fill="rgb(250,140,9)" fg:x="58129" fg:w="15"/><text x="54.6392%" y="319.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="54.3892%" y="293" width="0.0140%" height="15" fill="rgb(225,59,14)" fg:x="58129" fg:w="15"/><text x="54.6392%" y="303.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="54.3892%" y="277" width="0.0140%" height="15" fill="rgb(214,152,51)" fg:x="58129" fg:w="15"/><text x="54.6392%" y="287.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="54.3892%" y="261" width="0.0140%" height="15" fill="rgb(251,227,43)" fg:x="58129" fg:w="15"/><text x="54.6392%" y="271.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (58 samples, 0.05%)</title><rect x="54.4313%" y="309" width="0.0543%" height="15" fill="rgb(241,96,17)" fg:x="58174" fg:w="58"/><text x="54.6813%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (560 samples, 0.52%)</title><rect x="54.3462%" y="357" width="0.5240%" height="15" fill="rgb(234,198,43)" fg:x="58083" fg:w="560"/><text x="54.5962%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (560 samples, 0.52%)</title><rect x="54.3462%" y="341" width="0.5240%" height="15" fill="rgb(220,108,29)" fg:x="58083" fg:w="560"/><text x="54.5962%" y="351.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (499 samples, 0.47%)</title><rect x="54.4032%" y="325" width="0.4669%" height="15" fill="rgb(226,163,33)" fg:x="58144" fg:w="499"/><text x="54.6532%" y="335.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (411 samples, 0.38%)</title><rect x="54.4856%" y="309" width="0.3846%" height="15" fill="rgb(205,194,45)" fg:x="58232" fg:w="411"/><text x="54.7356%" y="319.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (411 samples, 0.38%)</title><rect x="54.4856%" y="293" width="0.3846%" height="15" fill="rgb(206,143,44)" fg:x="58232" fg:w="411"/><text x="54.7356%" y="303.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (411 samples, 0.38%)</title><rect x="54.4856%" y="277" width="0.3846%" height="15" fill="rgb(236,136,36)" fg:x="58232" fg:w="411"/><text x="54.7356%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::take (17 samples, 0.02%)</title><rect x="54.8832%" y="325" width="0.0159%" height="15" fill="rgb(249,172,42)" fg:x="58657" fg:w="17"/><text x="55.1332%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (17 samples, 0.02%)</title><rect x="54.8832%" y="309" width="0.0159%" height="15" fill="rgb(216,139,23)" fg:x="58657" fg:w="17"/><text x="55.1332%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="54.8701%" y="357" width="0.0337%" height="15" fill="rgb(207,166,20)" fg:x="58643" fg:w="36"/><text x="55.1201%" y="367.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (32 samples, 0.03%)</title><rect x="54.8739%" y="341" width="0.0299%" height="15" fill="rgb(210,209,22)" fg:x="58647" fg:w="32"/><text x="55.1239%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (19 samples, 0.02%)</title><rect x="54.9047%" y="309" width="0.0178%" height="15" fill="rgb(232,118,20)" fg:x="58680" fg:w="19"/><text x="55.1547%" y="319.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (17 samples, 0.02%)</title><rect x="54.9066%" y="293" width="0.0159%" height="15" fill="rgb(238,113,42)" fg:x="58682" fg:w="17"/><text x="55.1566%" y="303.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (15 samples, 0.01%)</title><rect x="54.9085%" y="277" width="0.0140%" height="15" fill="rgb(231,42,5)" fg:x="58684" fg:w="15"/><text x="55.1585%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="54.9225%" y="309" width="0.0206%" height="15" fill="rgb(243,166,24)" fg:x="58699" fg:w="22"/><text x="55.1725%" y="319.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (14 samples, 0.01%)</title><rect x="54.9300%" y="293" width="0.0131%" height="15" fill="rgb(237,226,12)" fg:x="58707" fg:w="14"/><text x="55.1800%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="54.9047%" y="325" width="0.0393%" height="15" fill="rgb(229,133,24)" fg:x="58680" fg:w="42"/><text x="55.1547%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="54.9038%" y="357" width="0.0412%" height="15" fill="rgb(238,33,43)" fg:x="58679" fg:w="44"/><text x="55.1538%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="54.9038%" y="341" width="0.0412%" height="15" fill="rgb(227,59,38)" fg:x="58679" fg:w="44"/><text x="55.1538%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (47 samples, 0.04%)</title><rect x="54.9450%" y="357" width="0.0440%" height="15" fill="rgb(230,97,0)" fg:x="58723" fg:w="47"/><text x="55.1950%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (47 samples, 0.04%)</title><rect x="54.9450%" y="341" width="0.0440%" height="15" fill="rgb(250,173,50)" fg:x="58723" fg:w="47"/><text x="55.1950%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (934 samples, 0.87%)</title><rect x="54.2807%" y="549" width="0.8739%" height="15" fill="rgb(240,15,50)" fg:x="58013" fg:w="934"/><text x="54.5307%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (934 samples, 0.87%)</title><rect x="54.2807%" y="533" width="0.8739%" height="15" fill="rgb(221,93,22)" fg:x="58013" fg:w="934"/><text x="54.5307%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (934 samples, 0.87%)</title><rect x="54.2807%" y="517" width="0.8739%" height="15" fill="rgb(245,180,53)" fg:x="58013" fg:w="934"/><text x="54.5307%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (934 samples, 0.87%)</title><rect x="54.2807%" y="501" width="0.8739%" height="15" fill="rgb(231,88,51)" fg:x="58013" fg:w="934"/><text x="54.5307%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (930 samples, 0.87%)</title><rect x="54.2844%" y="485" width="0.8702%" height="15" fill="rgb(240,58,21)" fg:x="58017" fg:w="930"/><text x="54.5344%" y="495.50"></text></g><g><title>alloc::alloc::alloc (930 samples, 0.87%)</title><rect x="54.2844%" y="469" width="0.8702%" height="15" fill="rgb(237,21,10)" fg:x="58017" fg:w="930"/><text x="54.5344%" y="479.50"></text></g><g><title>__rg_alloc (930 samples, 0.87%)</title><rect x="54.2844%" y="453" width="0.8702%" height="15" fill="rgb(218,43,11)" fg:x="58017" fg:w="930"/><text x="54.5344%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (930 samples, 0.87%)</title><rect x="54.2844%" y="437" width="0.8702%" height="15" fill="rgb(218,221,29)" fg:x="58017" fg:w="930"/><text x="54.5344%" y="447.50"></text></g><g><title>rust_alloc (917 samples, 0.86%)</title><rect x="54.2966%" y="421" width="0.8580%" height="15" fill="rgb(214,118,42)" fg:x="58030" fg:w="917"/><text x="54.5466%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (901 samples, 0.84%)</title><rect x="54.3115%" y="405" width="0.8430%" height="15" fill="rgb(251,200,26)" fg:x="58046" fg:w="901"/><text x="54.5615%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (901 samples, 0.84%)</title><rect x="54.3115%" y="389" width="0.8430%" height="15" fill="rgb(237,101,39)" fg:x="58046" fg:w="901"/><text x="54.5615%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (878 samples, 0.82%)</title><rect x="54.3331%" y="373" width="0.8215%" height="15" fill="rgb(251,117,11)" fg:x="58069" fg:w="878"/><text x="54.5831%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (177 samples, 0.17%)</title><rect x="54.9890%" y="357" width="0.1656%" height="15" fill="rgb(216,223,23)" fg:x="58770" fg:w="177"/><text x="55.2390%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (177 samples, 0.17%)</title><rect x="54.9890%" y="341" width="0.1656%" height="15" fill="rgb(251,54,12)" fg:x="58770" fg:w="177"/><text x="55.2390%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,321 samples, 1.24%)</title><rect x="54.2807%" y="565" width="1.2360%" height="15" fill="rgb(254,176,54)" fg:x="58013" fg:w="1321"/><text x="54.5307%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (387 samples, 0.36%)</title><rect x="55.1546%" y="549" width="0.3621%" height="15" fill="rgb(210,32,8)" fg:x="58947" fg:w="387"/><text x="55.4046%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (387 samples, 0.36%)</title><rect x="55.1546%" y="533" width="0.3621%" height="15" fill="rgb(235,52,38)" fg:x="58947" fg:w="387"/><text x="55.4046%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (382 samples, 0.36%)</title><rect x="55.1592%" y="517" width="0.3574%" height="15" fill="rgb(231,4,44)" fg:x="58952" fg:w="382"/><text x="55.4092%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (1,371 samples, 1.28%)</title><rect x="54.2376%" y="645" width="1.2828%" height="15" fill="rgb(249,2,32)" fg:x="57967" fg:w="1371"/><text x="54.4876%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (1,325 samples, 1.24%)</title><rect x="54.2807%" y="629" width="1.2398%" height="15" fill="rgb(224,65,26)" fg:x="58013" fg:w="1325"/><text x="54.5307%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,325 samples, 1.24%)</title><rect x="54.2807%" y="613" width="1.2398%" height="15" fill="rgb(250,73,40)" fg:x="58013" fg:w="1325"/><text x="54.5307%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,325 samples, 1.24%)</title><rect x="54.2807%" y="597" width="1.2398%" height="15" fill="rgb(253,177,16)" fg:x="58013" fg:w="1325"/><text x="54.5307%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1,325 samples, 1.24%)</title><rect x="54.2807%" y="581" width="1.2398%" height="15" fill="rgb(217,32,34)" fg:x="58013" fg:w="1325"/><text x="54.5307%" y="591.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (4,482 samples, 4.19%)</title><rect x="51.3389%" y="917" width="4.1936%" height="15" fill="rgb(212,7,10)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="927.50">tremo..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,482 samples, 4.19%)</title><rect x="51.3389%" y="901" width="4.1936%" height="15" fill="rgb(245,89,8)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="911.50">&lt;asyn..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,482 samples, 4.19%)</title><rect x="51.3389%" y="885" width="4.1936%" height="15" fill="rgb(237,16,53)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="895.50">&lt;asyn..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (4,482 samples, 4.19%)</title><rect x="51.3389%" y="869" width="4.1936%" height="15" fill="rgb(250,204,30)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="879.50">&lt;core..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,482 samples, 4.19%)</title><rect x="51.3389%" y="853" width="4.1936%" height="15" fill="rgb(208,77,27)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="863.50">&lt;asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (4,482 samples, 4.19%)</title><rect x="51.3389%" y="837" width="4.1936%" height="15" fill="rgb(250,204,28)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="847.50">async..</text></g><g><title>std::panic::catch_unwind (4,482 samples, 4.19%)</title><rect x="51.3389%" y="821" width="4.1936%" height="15" fill="rgb(244,63,21)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="831.50">std::..</text></g><g><title>std::panicking::try (4,482 samples, 4.19%)</title><rect x="51.3389%" y="805" width="4.1936%" height="15" fill="rgb(236,85,44)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="815.50">std::..</text></g><g><title>std::panicking::try::do_call (4,482 samples, 4.19%)</title><rect x="51.3389%" y="789" width="4.1936%" height="15" fill="rgb(215,98,4)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="799.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,482 samples, 4.19%)</title><rect x="51.3389%" y="773" width="4.1936%" height="15" fill="rgb(235,38,11)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="783.50">&lt;core..</text></g><g><title>core::ops::function::FnOnce::call_once (4,482 samples, 4.19%)</title><rect x="51.3389%" y="757" width="4.1936%" height="15" fill="rgb(254,186,25)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="767.50">core:..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (4,482 samples, 4.19%)</title><rect x="51.3389%" y="741" width="4.1936%" height="15" fill="rgb(225,55,31)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="751.50">async..</text></g><g><title>async_ffi::FfiContext::with_context (4,482 samples, 4.19%)</title><rect x="51.3389%" y="725" width="4.1936%" height="15" fill="rgb(211,15,21)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="735.50">async..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (4,482 samples, 4.19%)</title><rect x="51.3389%" y="709" width="4.1936%" height="15" fill="rgb(215,187,41)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="719.50">async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,482 samples, 4.19%)</title><rect x="51.3389%" y="693" width="4.1936%" height="15" fill="rgb(248,69,32)" fg:x="54869" fg:w="4482"/><text x="51.5889%" y="703.50">&lt;core..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (4,377 samples, 4.10%)</title><rect x="51.4372%" y="677" width="4.0954%" height="15" fill="rgb(252,102,52)" fg:x="54974" fg:w="4377"/><text x="51.6872%" y="687.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,464 samples, 1.37%)</title><rect x="54.1628%" y="661" width="1.3698%" height="15" fill="rgb(253,140,32)" fg:x="57887" fg:w="1464"/><text x="54.4128%" y="671.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::deref::Deref for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::deref (13 samples, 0.01%)</title><rect x="55.5204%" y="645" width="0.0122%" height="15" fill="rgb(216,56,42)" fg:x="59338" fg:w="13"/><text x="55.7704%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (13 samples, 0.01%)</title><rect x="55.5204%" y="629" width="0.0122%" height="15" fill="rgb(216,184,14)" fg:x="59338" fg:w="13"/><text x="55.7704%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="55.5429%" y="885" width="0.0225%" height="15" fill="rgb(237,187,27)" fg:x="59362" fg:w="24"/><text x="55.7929%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.01%)</title><rect x="55.7599%" y="869" width="0.0150%" height="15" fill="rgb(219,65,3)" fg:x="59594" fg:w="16"/><text x="56.0099%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (345 samples, 0.32%)</title><rect x="55.7805%" y="869" width="0.3228%" height="15" fill="rgb(245,83,25)" fg:x="59616" fg:w="345"/><text x="56.0305%" y="879.50"></text></g><g><title>core::ptr::read (314 samples, 0.29%)</title><rect x="55.8095%" y="853" width="0.2938%" height="15" fill="rgb(214,205,45)" fg:x="59647" fg:w="314"/><text x="56.0595%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (305 samples, 0.29%)</title><rect x="55.8180%" y="837" width="0.2854%" height="15" fill="rgb(241,20,18)" fg:x="59656" fg:w="305"/><text x="56.0680%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="56.1099%" y="869" width="0.0215%" height="15" fill="rgb(232,163,23)" fg:x="59968" fg:w="23"/><text x="56.3599%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="56.1351%" y="709" width="0.0103%" height="15" fill="rgb(214,5,46)" fg:x="59995" fg:w="11"/><text x="56.3851%" y="719.50"></text></g><g><title>rust_alloc (20 samples, 0.02%)</title><rect x="56.1651%" y="565" width="0.0187%" height="15" fill="rgb(229,78,17)" fg:x="60027" fg:w="20"/><text x="56.4151%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::empty (49 samples, 0.05%)</title><rect x="56.2016%" y="549" width="0.0458%" height="15" fill="rgb(248,89,10)" fg:x="60066" fg:w="49"/><text x="56.4516%" y="559.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (49 samples, 0.05%)</title><rect x="56.2016%" y="533" width="0.0458%" height="15" fill="rgb(248,54,15)" fg:x="60066" fg:w="49"/><text x="56.4516%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (359 samples, 0.34%)</title><rect x="56.1651%" y="597" width="0.3359%" height="15" fill="rgb(223,116,6)" fg:x="60027" fg:w="359"/><text x="56.4151%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (359 samples, 0.34%)</title><rect x="56.1651%" y="581" width="0.3359%" height="15" fill="rgb(205,125,38)" fg:x="60027" fg:w="359"/><text x="56.4151%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (331 samples, 0.31%)</title><rect x="56.1913%" y="565" width="0.3097%" height="15" fill="rgb(251,78,38)" fg:x="60055" fg:w="331"/><text x="56.4413%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (271 samples, 0.25%)</title><rect x="56.2474%" y="549" width="0.2536%" height="15" fill="rgb(253,78,28)" fg:x="60115" fg:w="271"/><text x="56.4974%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (271 samples, 0.25%)</title><rect x="56.2474%" y="533" width="0.2536%" height="15" fill="rgb(209,120,3)" fg:x="60115" fg:w="271"/><text x="56.4974%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (399 samples, 0.37%)</title><rect x="56.1351%" y="741" width="0.3733%" height="15" fill="rgb(238,229,9)" fg:x="59995" fg:w="399"/><text x="56.3851%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (399 samples, 0.37%)</title><rect x="56.1351%" y="725" width="0.3733%" height="15" fill="rgb(253,159,18)" fg:x="59995" fg:w="399"/><text x="56.3851%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (388 samples, 0.36%)</title><rect x="56.1454%" y="709" width="0.3630%" height="15" fill="rgb(244,42,34)" fg:x="60006" fg:w="388"/><text x="56.3954%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (388 samples, 0.36%)</title><rect x="56.1454%" y="693" width="0.3630%" height="15" fill="rgb(224,8,7)" fg:x="60006" fg:w="388"/><text x="56.3954%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (388 samples, 0.36%)</title><rect x="56.1454%" y="677" width="0.3630%" height="15" fill="rgb(210,201,45)" fg:x="60006" fg:w="388"/><text x="56.3954%" y="687.50"></text></g><g><title>alloc::alloc::alloc (374 samples, 0.35%)</title><rect x="56.1585%" y="661" width="0.3499%" height="15" fill="rgb(252,185,21)" fg:x="60020" fg:w="374"/><text x="56.4085%" y="671.50"></text></g><g><title>__rg_alloc (374 samples, 0.35%)</title><rect x="56.1585%" y="645" width="0.3499%" height="15" fill="rgb(223,131,1)" fg:x="60020" fg:w="374"/><text x="56.4085%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (374 samples, 0.35%)</title><rect x="56.1585%" y="629" width="0.3499%" height="15" fill="rgb(245,141,16)" fg:x="60020" fg:w="374"/><text x="56.4085%" y="639.50"></text></g><g><title>rust_alloc (374 samples, 0.35%)</title><rect x="56.1585%" y="613" width="0.3499%" height="15" fill="rgb(229,55,45)" fg:x="60020" fg:w="374"/><text x="56.4085%" y="623.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (424 samples, 0.40%)</title><rect x="56.1351%" y="869" width="0.3967%" height="15" fill="rgb(208,92,15)" fg:x="59995" fg:w="424"/><text x="56.3851%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (424 samples, 0.40%)</title><rect x="56.1351%" y="853" width="0.3967%" height="15" fill="rgb(234,185,47)" fg:x="59995" fg:w="424"/><text x="56.3851%" y="863.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (424 samples, 0.40%)</title><rect x="56.1351%" y="837" width="0.3967%" height="15" fill="rgb(253,104,50)" fg:x="59995" fg:w="424"/><text x="56.3851%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (424 samples, 0.40%)</title><rect x="56.1351%" y="821" width="0.3967%" height="15" fill="rgb(205,70,7)" fg:x="59995" fg:w="424"/><text x="56.3851%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (424 samples, 0.40%)</title><rect x="56.1351%" y="805" width="0.3967%" height="15" fill="rgb(240,178,43)" fg:x="59995" fg:w="424"/><text x="56.3851%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (424 samples, 0.40%)</title><rect x="56.1351%" y="789" width="0.3967%" height="15" fill="rgb(214,112,2)" fg:x="59995" fg:w="424"/><text x="56.3851%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (424 samples, 0.40%)</title><rect x="56.1351%" y="773" width="0.3967%" height="15" fill="rgb(206,46,17)" fg:x="59995" fg:w="424"/><text x="56.3851%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (424 samples, 0.40%)</title><rect x="56.1351%" y="757" width="0.3967%" height="15" fill="rgb(225,220,16)" fg:x="59995" fg:w="424"/><text x="56.3851%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (25 samples, 0.02%)</title><rect x="56.5085%" y="741" width="0.0234%" height="15" fill="rgb(238,65,40)" fg:x="60394" fg:w="25"/><text x="56.7585%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.02%)</title><rect x="56.5085%" y="725" width="0.0234%" height="15" fill="rgb(230,151,21)" fg:x="60394" fg:w="25"/><text x="56.7585%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (19 samples, 0.02%)</title><rect x="56.5141%" y="709" width="0.0178%" height="15" fill="rgb(218,58,49)" fg:x="60400" fg:w="19"/><text x="56.7641%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (639 samples, 0.60%)</title><rect x="56.5319%" y="869" width="0.5979%" height="15" fill="rgb(219,179,14)" fg:x="60419" fg:w="639"/><text x="56.7819%" y="879.50"></text></g><g><title>__memcpy_avx_unaligned_erms (389 samples, 0.36%)</title><rect x="57.1475%" y="853" width="0.3640%" height="15" fill="rgb(223,72,1)" fg:x="61077" fg:w="389"/><text x="57.3975%" y="863.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (18 samples, 0.02%)</title><rect x="57.5499%" y="661" width="0.0168%" height="15" fill="rgb(238,126,10)" fg:x="61507" fg:w="18"/><text x="57.7999%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (18 samples, 0.02%)</title><rect x="57.5499%" y="645" width="0.0168%" height="15" fill="rgb(224,206,38)" fg:x="61507" fg:w="18"/><text x="57.7999%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="57.5508%" y="629" width="0.0159%" height="15" fill="rgb(212,201,54)" fg:x="61508" fg:w="17"/><text x="57.8008%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::take (31 samples, 0.03%)</title><rect x="57.5667%" y="661" width="0.0290%" height="15" fill="rgb(218,154,48)" fg:x="61525" fg:w="31"/><text x="57.8167%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (31 samples, 0.03%)</title><rect x="57.5667%" y="645" width="0.0290%" height="15" fill="rgb(232,93,24)" fg:x="61525" fg:w="31"/><text x="57.8167%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (55 samples, 0.05%)</title><rect x="57.5471%" y="693" width="0.0515%" height="15" fill="rgb(245,30,21)" fg:x="61504" fg:w="55"/><text x="57.7971%" y="703.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (52 samples, 0.05%)</title><rect x="57.5499%" y="677" width="0.0487%" height="15" fill="rgb(242,148,29)" fg:x="61507" fg:w="52"/><text x="57.7999%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="57.5995%" y="645" width="0.0103%" height="15" fill="rgb(244,153,54)" fg:x="61560" fg:w="11"/><text x="57.8495%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="57.5985%" y="693" width="0.0122%" height="15" fill="rgb(252,87,22)" fg:x="61559" fg:w="13"/><text x="57.8485%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="57.5995%" y="677" width="0.0112%" height="15" fill="rgb(210,51,29)" fg:x="61560" fg:w="12"/><text x="57.8495%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="57.5995%" y="661" width="0.0112%" height="15" fill="rgb(242,136,47)" fg:x="61560" fg:w="12"/><text x="57.8495%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (222 samples, 0.21%)</title><rect x="57.5321%" y="741" width="0.2077%" height="15" fill="rgb(238,68,4)" fg:x="61488" fg:w="222"/><text x="57.7821%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (222 samples, 0.21%)</title><rect x="57.5321%" y="725" width="0.2077%" height="15" fill="rgb(242,161,30)" fg:x="61488" fg:w="222"/><text x="57.7821%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (212 samples, 0.20%)</title><rect x="57.5414%" y="709" width="0.1984%" height="15" fill="rgb(218,58,44)" fg:x="61498" fg:w="212"/><text x="57.7914%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (128 samples, 0.12%)</title><rect x="57.6200%" y="693" width="0.1198%" height="15" fill="rgb(252,125,32)" fg:x="61582" fg:w="128"/><text x="57.8700%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (128 samples, 0.12%)</title><rect x="57.6200%" y="677" width="0.1198%" height="15" fill="rgb(219,178,0)" fg:x="61582" fg:w="128"/><text x="57.8700%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (657 samples, 0.61%)</title><rect x="57.1298%" y="869" width="0.6147%" height="15" fill="rgb(213,152,7)" fg:x="61058" fg:w="657"/><text x="57.3798%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (249 samples, 0.23%)</title><rect x="57.5115%" y="853" width="0.2330%" height="15" fill="rgb(249,109,34)" fg:x="61466" fg:w="249"/><text x="57.7615%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (249 samples, 0.23%)</title><rect x="57.5115%" y="837" width="0.2330%" height="15" fill="rgb(232,96,21)" fg:x="61466" fg:w="249"/><text x="57.7615%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (249 samples, 0.23%)</title><rect x="57.5115%" y="821" width="0.2330%" height="15" fill="rgb(228,27,39)" fg:x="61466" fg:w="249"/><text x="57.7615%" y="831.50"></text></g><g><title>alloc::alloc::alloc (249 samples, 0.23%)</title><rect x="57.5115%" y="805" width="0.2330%" height="15" fill="rgb(211,182,52)" fg:x="61466" fg:w="249"/><text x="57.7615%" y="815.50"></text></g><g><title>__rg_alloc (249 samples, 0.23%)</title><rect x="57.5115%" y="789" width="0.2330%" height="15" fill="rgb(234,178,38)" fg:x="61466" fg:w="249"/><text x="57.7615%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (249 samples, 0.23%)</title><rect x="57.5115%" y="773" width="0.2330%" height="15" fill="rgb(221,111,3)" fg:x="61466" fg:w="249"/><text x="57.7615%" y="783.50"></text></g><g><title>rust_alloc (241 samples, 0.23%)</title><rect x="57.5190%" y="757" width="0.2255%" height="15" fill="rgb(228,175,21)" fg:x="61474" fg:w="241"/><text x="57.7690%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (15 samples, 0.01%)</title><rect x="57.7623%" y="837" width="0.0140%" height="15" fill="rgb(228,174,43)" fg:x="61734" fg:w="15"/><text x="58.0123%" y="847.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="57.7623%" y="821" width="0.0140%" height="15" fill="rgb(211,191,0)" fg:x="61734" fg:w="15"/><text x="58.0123%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (15 samples, 0.01%)</title><rect x="57.7623%" y="805" width="0.0140%" height="15" fill="rgb(253,117,3)" fg:x="61734" fg:w="15"/><text x="58.0123%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="57.7623%" y="789" width="0.0140%" height="15" fill="rgb(241,127,19)" fg:x="61734" fg:w="15"/><text x="58.0123%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="57.7623%" y="773" width="0.0140%" height="15" fill="rgb(218,103,12)" fg:x="61734" fg:w="15"/><text x="58.0123%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="57.7445%" y="853" width="0.0384%" height="15" fill="rgb(236,214,43)" fg:x="61715" fg:w="41"/><text x="57.9945%" y="863.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="57.7960%" y="757" width="0.0112%" height="15" fill="rgb(244,144,19)" fg:x="61770" fg:w="12"/><text x="58.0460%" y="767.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (22 samples, 0.02%)</title><rect x="57.8250%" y="709" width="0.0206%" height="15" fill="rgb(246,188,10)" fg:x="61801" fg:w="22"/><text x="58.0750%" y="719.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="57.8334%" y="693" width="0.0122%" height="15" fill="rgb(212,193,33)" fg:x="61810" fg:w="13"/><text x="58.0834%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (46 samples, 0.04%)</title><rect x="57.8090%" y="757" width="0.0430%" height="15" fill="rgb(241,51,29)" fg:x="61784" fg:w="46"/><text x="58.0590%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (46 samples, 0.04%)</title><rect x="57.8090%" y="741" width="0.0430%" height="15" fill="rgb(211,58,19)" fg:x="61784" fg:w="46"/><text x="58.0590%" y="751.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (41 samples, 0.04%)</title><rect x="57.8137%" y="725" width="0.0384%" height="15" fill="rgb(229,111,26)" fg:x="61789" fg:w="41"/><text x="58.0637%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (79 samples, 0.07%)</title><rect x="57.7960%" y="789" width="0.0739%" height="15" fill="rgb(213,115,40)" fg:x="61770" fg:w="79"/><text x="58.0460%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (79 samples, 0.07%)</title><rect x="57.7960%" y="773" width="0.0739%" height="15" fill="rgb(209,56,44)" fg:x="61770" fg:w="79"/><text x="58.0460%" y="783.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (19 samples, 0.02%)</title><rect x="57.8521%" y="757" width="0.0178%" height="15" fill="rgb(230,108,32)" fg:x="61830" fg:w="19"/><text x="58.1021%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (87 samples, 0.08%)</title><rect x="57.7960%" y="821" width="0.0814%" height="15" fill="rgb(216,165,31)" fg:x="61770" fg:w="87"/><text x="58.0460%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (87 samples, 0.08%)</title><rect x="57.7960%" y="805" width="0.0814%" height="15" fill="rgb(218,122,21)" fg:x="61770" fg:w="87"/><text x="58.0460%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (97 samples, 0.09%)</title><rect x="57.7913%" y="837" width="0.0908%" height="15" fill="rgb(223,224,47)" fg:x="61765" fg:w="97"/><text x="58.0413%" y="847.50"></text></g><g><title>rust_dealloc (115 samples, 0.11%)</title><rect x="57.7829%" y="853" width="0.1076%" height="15" fill="rgb(238,102,44)" fg:x="61756" fg:w="115"/><text x="58.0329%" y="863.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (24 samples, 0.02%)</title><rect x="57.8933%" y="837" width="0.0225%" height="15" fill="rgb(236,46,40)" fg:x="61874" fg:w="24"/><text x="58.1433%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (194 samples, 0.18%)</title><rect x="57.7445%" y="869" width="0.1815%" height="15" fill="rgb(247,202,50)" fg:x="61715" fg:w="194"/><text x="57.9945%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (38 samples, 0.04%)</title><rect x="57.8905%" y="853" width="0.0356%" height="15" fill="rgb(209,99,20)" fg:x="61871" fg:w="38"/><text x="58.1405%" y="863.50"></text></g><g><title>snmalloc::Superslab::is_full (11 samples, 0.01%)</title><rect x="57.9157%" y="837" width="0.0103%" height="15" fill="rgb(252,27,34)" fg:x="61898" fg:w="11"/><text x="58.1657%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (13 samples, 0.01%)</title><rect x="57.9382%" y="869" width="0.0122%" height="15" fill="rgb(215,206,23)" fg:x="61922" fg:w="13"/><text x="58.1882%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (51 samples, 0.05%)</title><rect x="57.9503%" y="869" width="0.0477%" height="15" fill="rgb(212,135,36)" fg:x="61935" fg:w="51"/><text x="58.2003%" y="879.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (51 samples, 0.05%)</title><rect x="57.9503%" y="853" width="0.0477%" height="15" fill="rgb(240,189,1)" fg:x="61935" fg:w="51"/><text x="58.2003%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (49 samples, 0.05%)</title><rect x="57.9522%" y="837" width="0.0458%" height="15" fill="rgb(242,56,20)" fg:x="61937" fg:w="49"/><text x="58.2022%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (49 samples, 0.05%)</title><rect x="57.9522%" y="821" width="0.0458%" height="15" fill="rgb(247,132,33)" fg:x="61937" fg:w="49"/><text x="58.2022%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (29 samples, 0.03%)</title><rect x="57.9709%" y="805" width="0.0271%" height="15" fill="rgb(208,149,11)" fg:x="61957" fg:w="29"/><text x="58.2209%" y="815.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (29 samples, 0.03%)</title><rect x="57.9709%" y="789" width="0.0271%" height="15" fill="rgb(211,33,11)" fg:x="61957" fg:w="29"/><text x="58.2209%" y="799.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (29 samples, 0.03%)</title><rect x="57.9709%" y="773" width="0.0271%" height="15" fill="rgb(221,29,38)" fg:x="61957" fg:w="29"/><text x="58.2209%" y="783.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (27 samples, 0.03%)</title><rect x="57.9728%" y="757" width="0.0253%" height="15" fill="rgb(206,182,49)" fg:x="61959" fg:w="27"/><text x="58.2228%" y="767.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (19 samples, 0.02%)</title><rect x="57.9803%" y="741" width="0.0178%" height="15" fill="rgb(216,140,1)" fg:x="61967" fg:w="19"/><text x="58.2303%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,198 samples, 6.73%)</title><rect x="51.3389%" y="949" width="6.7349%" height="15" fill="rgb(232,57,40)" fg:x="54869" fg:w="7198"/><text x="51.5889%" y="959.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,198 samples, 6.73%)</title><rect x="51.3389%" y="933" width="6.7349%" height="15" fill="rgb(224,186,18)" fg:x="54869" fg:w="7198"/><text x="51.5889%" y="943.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (2,716 samples, 2.54%)</title><rect x="55.5326%" y="917" width="2.5413%" height="15" fill="rgb(215,121,11)" fg:x="59351" fg:w="2716"/><text x="55.7826%" y="927.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,716 samples, 2.54%)</title><rect x="55.5326%" y="901" width="2.5413%" height="15" fill="rgb(245,147,10)" fg:x="59351" fg:w="2716"/><text x="55.7826%" y="911.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (2,681 samples, 2.51%)</title><rect x="55.5653%" y="885" width="2.5085%" height="15" fill="rgb(238,153,13)" fg:x="59386" fg:w="2681"/><text x="55.8153%" y="895.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (77 samples, 0.07%)</title><rect x="58.0018%" y="869" width="0.0720%" height="15" fill="rgb(233,108,0)" fg:x="61990" fg:w="77"/><text x="58.2518%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (77 samples, 0.07%)</title><rect x="58.0018%" y="853" width="0.0720%" height="15" fill="rgb(212,157,17)" fg:x="61990" fg:w="77"/><text x="58.2518%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (77 samples, 0.07%)</title><rect x="58.0018%" y="837" width="0.0720%" height="15" fill="rgb(225,213,38)" fg:x="61990" fg:w="77"/><text x="58.2518%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (45 samples, 0.04%)</title><rect x="58.0317%" y="821" width="0.0421%" height="15" fill="rgb(248,16,11)" fg:x="62022" fg:w="45"/><text x="58.2817%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (223 samples, 0.21%)</title><rect x="58.1337%" y="917" width="0.2087%" height="15" fill="rgb(241,33,4)" fg:x="62131" fg:w="223"/><text x="58.3837%" y="927.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (25 samples, 0.02%)</title><rect x="58.4734%" y="901" width="0.0234%" height="15" fill="rgb(222,26,43)" fg:x="62494" fg:w="25"/><text x="58.7234%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.03%)</title><rect x="58.4968%" y="885" width="0.0337%" height="15" fill="rgb(243,29,36)" fg:x="62519" fg:w="36"/><text x="58.7468%" y="895.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (270 samples, 0.25%)</title><rect x="58.4968%" y="901" width="0.2526%" height="15" fill="rgb(241,9,27)" fg:x="62519" fg:w="270"/><text x="58.7468%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (234 samples, 0.22%)</title><rect x="58.5304%" y="885" width="0.2189%" height="15" fill="rgb(205,117,26)" fg:x="62555" fg:w="234"/><text x="58.7804%" y="895.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (228 samples, 0.21%)</title><rect x="58.5361%" y="869" width="0.2133%" height="15" fill="rgb(209,80,39)" fg:x="62561" fg:w="228"/><text x="58.7861%" y="879.50"></text></g><g><title>core::ptr::read (228 samples, 0.21%)</title><rect x="58.5361%" y="853" width="0.2133%" height="15" fill="rgb(239,155,6)" fg:x="62561" fg:w="228"/><text x="58.7861%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (225 samples, 0.21%)</title><rect x="58.5389%" y="837" width="0.2105%" height="15" fill="rgb(212,104,12)" fg:x="62564" fg:w="225"/><text x="58.7889%" y="847.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="58.7494%" y="901" width="0.0131%" height="15" fill="rgb(234,204,3)" fg:x="62789" fg:w="14"/><text x="58.9994%" y="911.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="58.7765%" y="629" width="0.0122%" height="15" fill="rgb(251,218,7)" fg:x="62818" fg:w="13"/><text x="59.0265%" y="639.50"></text></g><g><title>rust_alloc (20 samples, 0.02%)</title><rect x="58.7887%" y="597" width="0.0187%" height="15" fill="rgb(221,81,32)" fg:x="62831" fg:w="20"/><text x="59.0387%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (26 samples, 0.02%)</title><rect x="58.8224%" y="517" width="0.0243%" height="15" fill="rgb(214,152,26)" fg:x="62867" fg:w="26"/><text x="59.0724%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (26 samples, 0.02%)</title><rect x="58.8224%" y="501" width="0.0243%" height="15" fill="rgb(223,22,3)" fg:x="62867" fg:w="26"/><text x="59.0724%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (23 samples, 0.02%)</title><rect x="58.8252%" y="485" width="0.0215%" height="15" fill="rgb(207,174,7)" fg:x="62870" fg:w="23"/><text x="59.0752%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (39 samples, 0.04%)</title><rect x="58.8224%" y="533" width="0.0365%" height="15" fill="rgb(224,19,52)" fg:x="62867" fg:w="39"/><text x="59.0724%" y="543.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="58.8467%" y="517" width="0.0122%" height="15" fill="rgb(228,24,14)" fg:x="62893" fg:w="13"/><text x="59.0967%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="58.8467%" y="501" width="0.0122%" height="15" fill="rgb(230,153,43)" fg:x="62893" fg:w="13"/><text x="59.0967%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="58.8467%" y="485" width="0.0122%" height="15" fill="rgb(231,106,12)" fg:x="62893" fg:w="13"/><text x="59.0967%" y="495.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="58.8467%" y="469" width="0.0122%" height="15" fill="rgb(215,92,2)" fg:x="62893" fg:w="13"/><text x="59.0967%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (49 samples, 0.05%)</title><rect x="58.8186%" y="549" width="0.0458%" height="15" fill="rgb(249,143,25)" fg:x="62863" fg:w="49"/><text x="59.0686%" y="559.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (22 samples, 0.02%)</title><rect x="58.8785%" y="533" width="0.0206%" height="15" fill="rgb(252,7,35)" fg:x="62927" fg:w="22"/><text x="59.1285%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (289 samples, 0.27%)</title><rect x="58.8186%" y="581" width="0.2704%" height="15" fill="rgb(216,69,40)" fg:x="62863" fg:w="289"/><text x="59.0686%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (289 samples, 0.27%)</title><rect x="58.8186%" y="565" width="0.2704%" height="15" fill="rgb(240,36,33)" fg:x="62863" fg:w="289"/><text x="59.0686%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (240 samples, 0.22%)</title><rect x="58.8645%" y="549" width="0.2246%" height="15" fill="rgb(231,128,14)" fg:x="62912" fg:w="240"/><text x="59.1145%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (203 samples, 0.19%)</title><rect x="58.8991%" y="533" width="0.1899%" height="15" fill="rgb(245,143,14)" fg:x="62949" fg:w="203"/><text x="59.1491%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (203 samples, 0.19%)</title><rect x="58.8991%" y="517" width="0.1899%" height="15" fill="rgb(222,130,28)" fg:x="62949" fg:w="203"/><text x="59.1491%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (203 samples, 0.19%)</title><rect x="58.8991%" y="501" width="0.1899%" height="15" fill="rgb(212,10,48)" fg:x="62949" fg:w="203"/><text x="59.1491%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (75 samples, 0.07%)</title><rect x="59.0909%" y="581" width="0.0702%" height="15" fill="rgb(254,118,45)" fg:x="63154" fg:w="75"/><text x="59.3409%" y="591.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (75 samples, 0.07%)</title><rect x="59.0909%" y="565" width="0.0702%" height="15" fill="rgb(228,6,45)" fg:x="63154" fg:w="75"/><text x="59.3409%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (975 samples, 0.91%)</title><rect x="58.7887%" y="629" width="0.9123%" height="15" fill="rgb(241,18,35)" fg:x="62831" fg:w="975"/><text x="59.0387%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (975 samples, 0.91%)</title><rect x="58.7887%" y="613" width="0.9123%" height="15" fill="rgb(227,214,53)" fg:x="62831" fg:w="975"/><text x="59.0387%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (946 samples, 0.89%)</title><rect x="58.8158%" y="597" width="0.8851%" height="15" fill="rgb(224,107,51)" fg:x="62860" fg:w="946"/><text x="59.0658%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (577 samples, 0.54%)</title><rect x="59.1611%" y="581" width="0.5399%" height="15" fill="rgb(248,60,28)" fg:x="63229" fg:w="577"/><text x="59.4111%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (577 samples, 0.54%)</title><rect x="59.1611%" y="565" width="0.5399%" height="15" fill="rgb(249,101,23)" fg:x="63229" fg:w="577"/><text x="59.4111%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,016 samples, 0.95%)</title><rect x="58.7625%" y="773" width="0.9506%" height="15" fill="rgb(228,51,19)" fg:x="62803" fg:w="1016"/><text x="59.0125%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,016 samples, 0.95%)</title><rect x="58.7625%" y="757" width="0.9506%" height="15" fill="rgb(213,20,6)" fg:x="62803" fg:w="1016"/><text x="59.0125%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,011 samples, 0.95%)</title><rect x="58.7672%" y="741" width="0.9460%" height="15" fill="rgb(212,124,10)" fg:x="62808" fg:w="1011"/><text x="59.0172%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,011 samples, 0.95%)</title><rect x="58.7672%" y="725" width="0.9460%" height="15" fill="rgb(248,3,40)" fg:x="62808" fg:w="1011"/><text x="59.0172%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,011 samples, 0.95%)</title><rect x="58.7672%" y="709" width="0.9460%" height="15" fill="rgb(223,178,23)" fg:x="62808" fg:w="1011"/><text x="59.0172%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1,002 samples, 0.94%)</title><rect x="58.7756%" y="693" width="0.9375%" height="15" fill="rgb(240,132,45)" fg:x="62817" fg:w="1002"/><text x="59.0256%" y="703.50"></text></g><g><title>__rg_alloc (1,002 samples, 0.94%)</title><rect x="58.7756%" y="677" width="0.9375%" height="15" fill="rgb(245,164,36)" fg:x="62817" fg:w="1002"/><text x="59.0256%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,002 samples, 0.94%)</title><rect x="58.7756%" y="661" width="0.9375%" height="15" fill="rgb(231,188,53)" fg:x="62817" fg:w="1002"/><text x="59.0256%" y="671.50"></text></g><g><title>rust_alloc (1,001 samples, 0.94%)</title><rect x="58.7765%" y="645" width="0.9366%" height="15" fill="rgb(237,198,39)" fg:x="62818" fg:w="1001"/><text x="59.0265%" y="655.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="59.7010%" y="629" width="0.0122%" height="15" fill="rgb(223,120,35)" fg:x="63806" fg:w="13"/><text x="59.9510%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,063 samples, 0.99%)</title><rect x="58.7625%" y="789" width="0.9946%" height="15" fill="rgb(253,107,49)" fg:x="62803" fg:w="1063"/><text x="59.0125%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (47 samples, 0.04%)</title><rect x="59.7131%" y="773" width="0.0440%" height="15" fill="rgb(216,44,31)" fg:x="63819" fg:w="47"/><text x="59.9631%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.04%)</title><rect x="59.7131%" y="757" width="0.0440%" height="15" fill="rgb(253,87,21)" fg:x="63819" fg:w="47"/><text x="59.9631%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (35 samples, 0.03%)</title><rect x="59.7244%" y="741" width="0.0327%" height="15" fill="rgb(226,18,2)" fg:x="63831" fg:w="35"/><text x="59.9744%" y="751.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,064 samples, 1.00%)</title><rect x="58.7625%" y="901" width="0.9955%" height="15" fill="rgb(216,8,46)" fg:x="62803" fg:w="1064"/><text x="59.0125%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,064 samples, 1.00%)</title><rect x="58.7625%" y="885" width="0.9955%" height="15" fill="rgb(226,140,39)" fg:x="62803" fg:w="1064"/><text x="59.0125%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,064 samples, 1.00%)</title><rect x="58.7625%" y="869" width="0.9955%" height="15" fill="rgb(221,194,54)" fg:x="62803" fg:w="1064"/><text x="59.0125%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,064 samples, 1.00%)</title><rect x="58.7625%" y="853" width="0.9955%" height="15" fill="rgb(213,92,11)" fg:x="62803" fg:w="1064"/><text x="59.0125%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,064 samples, 1.00%)</title><rect x="58.7625%" y="837" width="0.9955%" height="15" fill="rgb(229,162,46)" fg:x="62803" fg:w="1064"/><text x="59.0125%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,064 samples, 1.00%)</title><rect x="58.7625%" y="821" width="0.9955%" height="15" fill="rgb(214,111,36)" fg:x="62803" fg:w="1064"/><text x="59.0125%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1,064 samples, 1.00%)</title><rect x="58.7625%" y="805" width="0.9955%" height="15" fill="rgb(207,6,21)" fg:x="62803" fg:w="1064"/><text x="59.0125%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,130 samples, 1.06%)</title><rect x="59.7580%" y="901" width="1.0573%" height="15" fill="rgb(213,127,38)" fg:x="63867" fg:w="1130"/><text x="60.0080%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (18 samples, 0.02%)</title><rect x="60.8153%" y="901" width="0.0168%" height="15" fill="rgb(238,118,32)" fg:x="64997" fg:w="18"/><text x="61.0653%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="60.8359%" y="901" width="0.0159%" height="15" fill="rgb(240,139,39)" fg:x="65019" fg:w="17"/><text x="61.0859%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (17 samples, 0.02%)</title><rect x="60.8518%" y="901" width="0.0159%" height="15" fill="rgb(235,10,37)" fg:x="65036" fg:w="17"/><text x="61.1018%" y="911.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (15 samples, 0.01%)</title><rect x="60.8893%" y="853" width="0.0140%" height="15" fill="rgb(249,171,38)" fg:x="65076" fg:w="15"/><text x="61.1393%" y="863.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (273 samples, 0.26%)</title><rect x="60.8893%" y="869" width="0.2554%" height="15" fill="rgb(242,144,32)" fg:x="65076" fg:w="273"/><text x="61.1393%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (258 samples, 0.24%)</title><rect x="60.9033%" y="853" width="0.2414%" height="15" fill="rgb(217,117,21)" fg:x="65091" fg:w="258"/><text x="61.1533%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (258 samples, 0.24%)</title><rect x="60.9033%" y="837" width="0.2414%" height="15" fill="rgb(249,87,1)" fg:x="65091" fg:w="258"/><text x="61.1533%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (258 samples, 0.24%)</title><rect x="60.9033%" y="821" width="0.2414%" height="15" fill="rgb(248,196,48)" fg:x="65091" fg:w="258"/><text x="61.1533%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (258 samples, 0.24%)</title><rect x="60.9033%" y="805" width="0.2414%" height="15" fill="rgb(251,206,33)" fg:x="65091" fg:w="258"/><text x="61.1533%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (258 samples, 0.24%)</title><rect x="60.9033%" y="789" width="0.2414%" height="15" fill="rgb(232,141,28)" fg:x="65091" fg:w="258"/><text x="61.1533%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (181 samples, 0.17%)</title><rect x="60.9753%" y="773" width="0.1694%" height="15" fill="rgb(209,167,14)" fg:x="65168" fg:w="181"/><text x="61.2253%" y="783.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (299 samples, 0.28%)</title><rect x="60.8677%" y="901" width="0.2798%" height="15" fill="rgb(225,11,50)" fg:x="65053" fg:w="299"/><text x="61.1177%" y="911.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (281 samples, 0.26%)</title><rect x="60.8846%" y="885" width="0.2629%" height="15" fill="rgb(209,50,20)" fg:x="65071" fg:w="281"/><text x="61.1346%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (12,880 samples, 12.05%)</title><rect x="49.1130%" y="1125" width="12.0513%" height="15" fill="rgb(212,17,46)" fg:x="52490" fg:w="12880"/><text x="49.3630%" y="1135.50">async_task::raw::R..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12,879 samples, 12.05%)</title><rect x="49.1139%" y="1109" width="12.0504%" height="15" fill="rgb(216,101,39)" fg:x="52491" fg:w="12879"/><text x="49.3639%" y="1119.50">&lt;core::pin::Pin&lt;P&gt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,879 samples, 12.05%)</title><rect x="49.1139%" y="1093" width="12.0504%" height="15" fill="rgb(212,228,48)" fg:x="52491" fg:w="12879"/><text x="49.3639%" y="1103.50">&lt;core::future::fro..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (12,879 samples, 12.05%)</title><rect x="49.1139%" y="1077" width="12.0504%" height="15" fill="rgb(250,6,50)" fg:x="52491" fg:w="12879"/><text x="49.3639%" y="1087.50">async_executor::Ex..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (12,879 samples, 12.05%)</title><rect x="49.1139%" y="1061" width="12.0504%" height="15" fill="rgb(250,160,48)" fg:x="52491" fg:w="12879"/><text x="49.3639%" y="1071.50">&lt;async_std::task::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (12,879 samples, 12.05%)</title><rect x="49.1139%" y="1045" width="12.0504%" height="15" fill="rgb(244,216,33)" fg:x="52491" fg:w="12879"/><text x="49.3639%" y="1055.50">async_std::task::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12,879 samples, 12.05%)</title><rect x="49.1139%" y="1029" width="12.0504%" height="15" fill="rgb(207,157,5)" fg:x="52491" fg:w="12879"/><text x="49.3639%" y="1039.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12,879 samples, 12.05%)</title><rect x="49.1139%" y="1013" width="12.0504%" height="15" fill="rgb(228,199,8)" fg:x="52491" fg:w="12879"/><text x="49.3639%" y="1023.50">std::thread::local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (12,879 samples, 12.05%)</title><rect x="49.1139%" y="997" width="12.0504%" height="15" fill="rgb(227,80,20)" fg:x="52491" fg:w="12879"/><text x="49.3639%" y="1007.50">async_std::task::t..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (12,879 samples, 12.05%)</title><rect x="49.1139%" y="981" width="12.0504%" height="15" fill="rgb(222,9,33)" fg:x="52491" fg:w="12879"/><text x="49.3639%" y="991.50">&lt;async_std::task::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,879 samples, 12.05%)</title><rect x="49.1139%" y="965" width="12.0504%" height="15" fill="rgb(239,44,28)" fg:x="52491" fg:w="12879"/><text x="49.3639%" y="975.50">&lt;core::future::fro..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,303 samples, 3.09%)</title><rect x="58.0738%" y="949" width="3.0905%" height="15" fill="rgb(249,187,43)" fg:x="62067" fg:w="3303"/><text x="58.3238%" y="959.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,303 samples, 3.09%)</title><rect x="58.0738%" y="933" width="3.0905%" height="15" fill="rgb(216,141,28)" fg:x="62067" fg:w="3303"/><text x="58.3238%" y="943.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,016 samples, 2.82%)</title><rect x="58.3424%" y="917" width="2.8220%" height="15" fill="rgb(230,154,53)" fg:x="62354" fg:w="3016"/><text x="58.5924%" y="927.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (18 samples, 0.02%)</title><rect x="61.1475%" y="901" width="0.0168%" height="15" fill="rgb(227,82,4)" fg:x="65352" fg:w="18"/><text x="61.3975%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="61.1475%" y="885" width="0.0168%" height="15" fill="rgb(220,107,16)" fg:x="65352" fg:w="18"/><text x="61.3975%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="61.1475%" y="869" width="0.0168%" height="15" fill="rgb(207,187,2)" fg:x="65352" fg:w="18"/><text x="61.3975%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.01%)</title><rect x="61.1522%" y="853" width="0.0122%" height="15" fill="rgb(210,162,52)" fg:x="65357" fg:w="13"/><text x="61.4022%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (20 samples, 0.02%)</title><rect x="61.1821%" y="1125" width="0.0187%" height="15" fill="rgb(217,216,49)" fg:x="65389" fg:w="20"/><text x="61.4321%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="61.2008%" y="1125" width="0.0112%" height="15" fill="rgb(218,146,49)" fg:x="65409" fg:w="12"/><text x="61.4508%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="61.2121%" y="1125" width="0.0140%" height="15" fill="rgb(216,55,40)" fg:x="65421" fg:w="15"/><text x="61.4621%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="61.2317%" y="1125" width="0.0206%" height="15" fill="rgb(208,196,21)" fg:x="65442" fg:w="22"/><text x="61.4817%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="61.2523%" y="1125" width="0.0187%" height="15" fill="rgb(242,117,42)" fg:x="65464" fg:w="20"/><text x="61.5023%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (13 samples, 0.01%)</title><rect x="61.2710%" y="1125" width="0.0122%" height="15" fill="rgb(210,11,23)" fg:x="65484" fg:w="13"/><text x="61.5210%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (19 samples, 0.02%)</title><rect x="61.2907%" y="1125" width="0.0178%" height="15" fill="rgb(217,110,2)" fg:x="65505" fg:w="19"/><text x="61.5407%" y="1135.50"></text></g><g><title>event_listener::Event::inner (11 samples, 0.01%)</title><rect x="61.3094%" y="1109" width="0.0103%" height="15" fill="rgb(229,77,54)" fg:x="65525" fg:w="11"/><text x="61.5594%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (11 samples, 0.01%)</title><rect x="61.3094%" y="1093" width="0.0103%" height="15" fill="rgb(218,53,16)" fg:x="65525" fg:w="11"/><text x="61.5594%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="61.3094%" y="1077" width="0.0103%" height="15" fill="rgb(215,38,13)" fg:x="65525" fg:w="11"/><text x="61.5594%" y="1087.50"></text></g><g><title>event_listener::Event::listen (14 samples, 0.01%)</title><rect x="61.3084%" y="1125" width="0.0131%" height="15" fill="rgb(235,42,18)" fg:x="65524" fg:w="14"/><text x="61.5584%" y="1135.50"></text></g><g><title>event_listener::Event::notify (58 samples, 0.05%)</title><rect x="61.3215%" y="1125" width="0.0543%" height="15" fill="rgb(219,66,54)" fg:x="65538" fg:w="58"/><text x="61.5715%" y="1135.50"></text></g><g><title>event_listener::full_fence (38 samples, 0.04%)</title><rect x="61.3402%" y="1109" width="0.0356%" height="15" fill="rgb(222,205,4)" fg:x="65558" fg:w="38"/><text x="61.5902%" y="1119.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (17 samples, 0.02%)</title><rect x="61.3786%" y="1125" width="0.0159%" height="15" fill="rgb(227,213,46)" fg:x="65599" fg:w="17"/><text x="61.6286%" y="1135.50"></text></g><g><title>polling::epoll::Poller::wait (16 samples, 0.01%)</title><rect x="61.4076%" y="1125" width="0.0150%" height="15" fill="rgb(250,145,42)" fg:x="65630" fg:w="16"/><text x="61.6576%" y="1135.50"></text></g><g><title>rust_alloc (90 samples, 0.08%)</title><rect x="61.4226%" y="1125" width="0.0842%" height="15" fill="rgb(219,15,2)" fg:x="65646" fg:w="90"/><text x="61.6726%" y="1135.50"></text></g><g><title>rust_dealloc (19 samples, 0.02%)</title><rect x="61.5068%" y="1125" width="0.0178%" height="15" fill="rgb(231,181,52)" fg:x="65736" fg:w="19"/><text x="61.7568%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (15 samples, 0.01%)</title><rect x="61.5105%" y="1109" width="0.0140%" height="15" fill="rgb(235,1,42)" fg:x="65740" fg:w="15"/><text x="61.7605%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (15 samples, 0.01%)</title><rect x="61.5105%" y="1093" width="0.0140%" height="15" fill="rgb(249,88,27)" fg:x="65740" fg:w="15"/><text x="61.7605%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (15 samples, 0.01%)</title><rect x="61.5105%" y="1077" width="0.0140%" height="15" fill="rgb(235,145,16)" fg:x="65740" fg:w="15"/><text x="61.7605%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (15 samples, 0.01%)</title><rect x="61.5105%" y="1061" width="0.0140%" height="15" fill="rgb(237,114,19)" fg:x="65740" fg:w="15"/><text x="61.7605%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (15 samples, 0.01%)</title><rect x="61.5105%" y="1045" width="0.0140%" height="15" fill="rgb(238,51,50)" fg:x="65740" fg:w="15"/><text x="61.7605%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (15 samples, 0.01%)</title><rect x="61.5105%" y="1029" width="0.0140%" height="15" fill="rgb(205,194,25)" fg:x="65740" fg:w="15"/><text x="61.7605%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (15 samples, 0.01%)</title><rect x="61.5105%" y="1013" width="0.0140%" height="15" fill="rgb(215,203,17)" fg:x="65740" fg:w="15"/><text x="61.7605%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (15 samples, 0.01%)</title><rect x="61.5105%" y="997" width="0.0140%" height="15" fill="rgb(233,112,49)" fg:x="65740" fg:w="15"/><text x="61.7605%" y="1007.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (14 samples, 0.01%)</title><rect x="61.5377%" y="1125" width="0.0131%" height="15" fill="rgb(241,130,26)" fg:x="65769" fg:w="14"/><text x="61.7877%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (39 samples, 0.04%)</title><rect x="61.5583%" y="1125" width="0.0365%" height="15" fill="rgb(252,223,19)" fg:x="65791" fg:w="39"/><text x="61.8083%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (62 samples, 0.06%)</title><rect x="61.6481%" y="933" width="0.0580%" height="15" fill="rgb(211,95,25)" fg:x="65887" fg:w="62"/><text x="61.8981%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.06%)</title><rect x="61.6481%" y="917" width="0.0580%" height="15" fill="rgb(251,182,27)" fg:x="65887" fg:w="62"/><text x="61.8981%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (61 samples, 0.06%)</title><rect x="61.6490%" y="901" width="0.0571%" height="15" fill="rgb(238,24,4)" fg:x="65888" fg:w="61"/><text x="61.8990%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (48 samples, 0.04%)</title><rect x="61.6612%" y="885" width="0.0449%" height="15" fill="rgb(224,220,25)" fg:x="65901" fg:w="48"/><text x="61.9112%" y="895.50"></text></g><g><title>___pthread_mutex_lock (48 samples, 0.04%)</title><rect x="61.6612%" y="869" width="0.0449%" height="15" fill="rgb(239,133,26)" fg:x="65901" fg:w="48"/><text x="61.9112%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (99 samples, 0.09%)</title><rect x="61.6256%" y="949" width="0.0926%" height="15" fill="rgb(211,94,48)" fg:x="65863" fg:w="99"/><text x="61.8756%" y="959.50"></text></g><g><title>event_listener::List::remove (13 samples, 0.01%)</title><rect x="61.7061%" y="933" width="0.0122%" height="15" fill="rgb(239,87,6)" fg:x="65949" fg:w="13"/><text x="61.9561%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (976 samples, 0.91%)</title><rect x="61.7183%" y="949" width="0.9132%" height="15" fill="rgb(227,62,0)" fg:x="65962" fg:w="976"/><text x="61.9683%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (711 samples, 0.67%)</title><rect x="62.6661%" y="933" width="0.6653%" height="15" fill="rgb(211,226,4)" fg:x="66975" fg:w="711"/><text x="62.9161%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (384 samples, 0.36%)</title><rect x="63.5166%" y="901" width="0.3593%" height="15" fill="rgb(253,38,52)" fg:x="67884" fg:w="384"/><text x="63.7666%" y="911.50"></text></g><g><title>concurrent_queue::full_fence (19 samples, 0.02%)</title><rect x="63.8759%" y="901" width="0.0178%" height="15" fill="rgb(229,126,40)" fg:x="68268" fg:w="19"/><text x="64.1259%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (19 samples, 0.02%)</title><rect x="63.8759%" y="885" width="0.0178%" height="15" fill="rgb(229,165,44)" fg:x="68268" fg:w="19"/><text x="64.1259%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (19 samples, 0.02%)</title><rect x="63.8759%" y="869" width="0.0178%" height="15" fill="rgb(247,95,47)" fg:x="68268" fg:w="19"/><text x="64.1259%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="63.8759%" y="853" width="0.0178%" height="15" fill="rgb(216,140,30)" fg:x="68268" fg:w="19"/><text x="64.1259%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (447 samples, 0.42%)</title><rect x="63.8937%" y="901" width="0.4182%" height="15" fill="rgb(246,214,8)" fg:x="68287" fg:w="447"/><text x="64.1437%" y="911.50"></text></g><g><title>core::ptr::read (447 samples, 0.42%)</title><rect x="63.8937%" y="885" width="0.4182%" height="15" fill="rgb(227,224,15)" fg:x="68287" fg:w="447"/><text x="64.1437%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (447 samples, 0.42%)</title><rect x="63.8937%" y="869" width="0.4182%" height="15" fill="rgb(233,175,4)" fg:x="68287" fg:w="447"/><text x="64.1437%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (529 samples, 0.49%)</title><rect x="64.3119%" y="901" width="0.4950%" height="15" fill="rgb(221,66,45)" fg:x="68734" fg:w="529"/><text x="64.5619%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (529 samples, 0.49%)</title><rect x="64.3119%" y="885" width="0.4950%" height="15" fill="rgb(221,178,18)" fg:x="68734" fg:w="529"/><text x="64.5619%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,863 samples, 1.74%)</title><rect x="63.3313%" y="933" width="1.7431%" height="15" fill="rgb(213,81,29)" fg:x="67686" fg:w="1863"/><text x="63.5813%" y="943.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,820 samples, 1.70%)</title><rect x="63.3716%" y="917" width="1.7029%" height="15" fill="rgb(220,89,49)" fg:x="67729" fg:w="1820"/><text x="63.6216%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (286 samples, 0.27%)</title><rect x="64.8069%" y="901" width="0.2676%" height="15" fill="rgb(227,60,33)" fg:x="69263" fg:w="286"/><text x="65.0569%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (284 samples, 0.27%)</title><rect x="64.8088%" y="885" width="0.2657%" height="15" fill="rgb(205,113,12)" fg:x="69265" fg:w="284"/><text x="65.0588%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (37 samples, 0.03%)</title><rect x="65.0848%" y="837" width="0.0346%" height="15" fill="rgb(211,32,1)" fg:x="69560" fg:w="37"/><text x="65.3348%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (43 samples, 0.04%)</title><rect x="65.0801%" y="917" width="0.0402%" height="15" fill="rgb(246,2,12)" fg:x="69555" fg:w="43"/><text x="65.3301%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (39 samples, 0.04%)</title><rect x="65.0838%" y="901" width="0.0365%" height="15" fill="rgb(243,37,27)" fg:x="69559" fg:w="39"/><text x="65.3338%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="65.0838%" y="885" width="0.0365%" height="15" fill="rgb(248,211,31)" fg:x="69559" fg:w="39"/><text x="65.3338%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (39 samples, 0.04%)</title><rect x="65.0838%" y="869" width="0.0365%" height="15" fill="rgb(242,146,47)" fg:x="69559" fg:w="39"/><text x="65.3338%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (38 samples, 0.04%)</title><rect x="65.0848%" y="853" width="0.0356%" height="15" fill="rgb(206,70,20)" fg:x="69560" fg:w="38"/><text x="65.3348%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (25 samples, 0.02%)</title><rect x="65.1203%" y="917" width="0.0234%" height="15" fill="rgb(215,10,51)" fg:x="69598" fg:w="25"/><text x="65.3703%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (25 samples, 0.02%)</title><rect x="65.1203%" y="901" width="0.0234%" height="15" fill="rgb(243,178,53)" fg:x="69598" fg:w="25"/><text x="65.3703%" y="911.50"></text></g><g><title>event_listener::Inner::lock (70 samples, 0.07%)</title><rect x="65.1447%" y="917" width="0.0655%" height="15" fill="rgb(233,221,20)" fg:x="69624" fg:w="70"/><text x="65.3947%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (70 samples, 0.07%)</title><rect x="65.1447%" y="901" width="0.0655%" height="15" fill="rgb(218,95,35)" fg:x="69624" fg:w="70"/><text x="65.3947%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (68 samples, 0.06%)</title><rect x="65.1465%" y="885" width="0.0636%" height="15" fill="rgb(229,13,5)" fg:x="69626" fg:w="68"/><text x="65.3965%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (61 samples, 0.06%)</title><rect x="65.1531%" y="869" width="0.0571%" height="15" fill="rgb(252,164,30)" fg:x="69633" fg:w="61"/><text x="65.4031%" y="879.50"></text></g><g><title>___pthread_mutex_lock (61 samples, 0.06%)</title><rect x="65.1531%" y="853" width="0.0571%" height="15" fill="rgb(232,68,36)" fg:x="69633" fg:w="61"/><text x="65.4031%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (15 samples, 0.01%)</title><rect x="65.2317%" y="821" width="0.0140%" height="15" fill="rgb(219,59,54)" fg:x="69717" fg:w="15"/><text x="65.4817%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="65.2317%" y="805" width="0.0140%" height="15" fill="rgb(250,92,33)" fg:x="69717" fg:w="15"/><text x="65.4817%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="65.2317%" y="789" width="0.0140%" height="15" fill="rgb(229,162,54)" fg:x="69717" fg:w="15"/><text x="65.4817%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="65.2317%" y="773" width="0.0140%" height="15" fill="rgb(244,114,52)" fg:x="69717" fg:w="15"/><text x="65.4817%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (15 samples, 0.01%)</title><rect x="65.2317%" y="757" width="0.0140%" height="15" fill="rgb(212,211,43)" fg:x="69717" fg:w="15"/><text x="65.4817%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (18 samples, 0.02%)</title><rect x="65.2728%" y="741" width="0.0168%" height="15" fill="rgb(226,147,8)" fg:x="69761" fg:w="18"/><text x="65.5228%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (18 samples, 0.02%)</title><rect x="65.2728%" y="725" width="0.0168%" height="15" fill="rgb(226,23,13)" fg:x="69761" fg:w="18"/><text x="65.5228%" y="735.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (34 samples, 0.03%)</title><rect x="65.2897%" y="741" width="0.0318%" height="15" fill="rgb(240,63,4)" fg:x="69779" fg:w="34"/><text x="65.5397%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (34 samples, 0.03%)</title><rect x="65.2897%" y="725" width="0.0318%" height="15" fill="rgb(221,1,32)" fg:x="69779" fg:w="34"/><text x="65.5397%" y="735.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (34 samples, 0.03%)</title><rect x="65.2897%" y="709" width="0.0318%" height="15" fill="rgb(242,117,10)" fg:x="69779" fg:w="34"/><text x="65.5397%" y="719.50"></text></g><g><title>__GI___pthread_cond_signal (34 samples, 0.03%)</title><rect x="65.2897%" y="693" width="0.0318%" height="15" fill="rgb(249,172,44)" fg:x="69779" fg:w="34"/><text x="65.5397%" y="703.50"></text></g><g><title>parking::Unparker::unpark (84 samples, 0.08%)</title><rect x="65.2597%" y="773" width="0.0786%" height="15" fill="rgb(244,46,45)" fg:x="69747" fg:w="84"/><text x="65.5097%" y="783.50"></text></g><g><title>parking::Inner::unpark (77 samples, 0.07%)</title><rect x="65.2663%" y="757" width="0.0720%" height="15" fill="rgb(206,43,17)" fg:x="69754" fg:w="77"/><text x="65.5163%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="65.3215%" y="741" width="0.0168%" height="15" fill="rgb(239,218,39)" fg:x="69813" fg:w="18"/><text x="65.5715%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.02%)</title><rect x="65.3215%" y="725" width="0.0168%" height="15" fill="rgb(208,169,54)" fg:x="69813" fg:w="18"/><text x="65.5715%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (18 samples, 0.02%)</title><rect x="65.3215%" y="709" width="0.0168%" height="15" fill="rgb(247,25,42)" fg:x="69813" fg:w="18"/><text x="65.5715%" y="719.50"></text></g><g><title>___pthread_mutex_lock (18 samples, 0.02%)</title><rect x="65.3215%" y="693" width="0.0168%" height="15" fill="rgb(226,23,31)" fg:x="69813" fg:w="18"/><text x="65.5715%" y="703.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (95 samples, 0.09%)</title><rect x="65.2523%" y="789" width="0.0889%" height="15" fill="rgb(247,16,28)" fg:x="69739" fg:w="95"/><text x="65.5023%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (106 samples, 0.10%)</title><rect x="65.2523%" y="821" width="0.0992%" height="15" fill="rgb(231,147,38)" fg:x="69739" fg:w="106"/><text x="65.5023%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (106 samples, 0.10%)</title><rect x="65.2523%" y="805" width="0.0992%" height="15" fill="rgb(253,81,48)" fg:x="69739" fg:w="106"/><text x="65.5023%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="65.3411%" y="789" width="0.0103%" height="15" fill="rgb(249,222,43)" fg:x="69834" fg:w="11"/><text x="65.5911%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="65.3411%" y="773" width="0.0103%" height="15" fill="rgb(221,3,27)" fg:x="69834" fg:w="11"/><text x="65.5911%" y="783.50"></text></g><g><title>async_executor::State::notify (156 samples, 0.15%)</title><rect x="65.2242%" y="837" width="0.1460%" height="15" fill="rgb(228,180,5)" fg:x="69709" fg:w="156"/><text x="65.4742%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="65.3514%" y="821" width="0.0187%" height="15" fill="rgb(227,131,42)" fg:x="69845" fg:w="20"/><text x="65.6014%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (19 samples, 0.02%)</title><rect x="65.3524%" y="805" width="0.0178%" height="15" fill="rgb(212,3,39)" fg:x="69846" fg:w="19"/><text x="65.6024%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (19 samples, 0.02%)</title><rect x="65.3524%" y="789" width="0.0178%" height="15" fill="rgb(226,45,5)" fg:x="69846" fg:w="19"/><text x="65.6024%" y="799.50"></text></g><g><title>___pthread_mutex_lock (19 samples, 0.02%)</title><rect x="65.3524%" y="773" width="0.0178%" height="15" fill="rgb(215,167,45)" fg:x="69846" fg:w="19"/><text x="65.6024%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (31 samples, 0.03%)</title><rect x="65.3823%" y="805" width="0.0290%" height="15" fill="rgb(250,218,53)" fg:x="69878" fg:w="31"/><text x="65.6323%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (31 samples, 0.03%)</title><rect x="65.3823%" y="789" width="0.0290%" height="15" fill="rgb(207,140,0)" fg:x="69878" fg:w="31"/><text x="65.6323%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (13 samples, 0.01%)</title><rect x="65.4113%" y="805" width="0.0122%" height="15" fill="rgb(238,133,51)" fg:x="69909" fg:w="13"/><text x="65.6613%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_or (13 samples, 0.01%)</title><rect x="65.4113%" y="789" width="0.0122%" height="15" fill="rgb(218,203,53)" fg:x="69909" fg:w="13"/><text x="65.6613%" y="799.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (214 samples, 0.20%)</title><rect x="65.2242%" y="853" width="0.2002%" height="15" fill="rgb(226,184,25)" fg:x="69709" fg:w="214"/><text x="65.4742%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (58 samples, 0.05%)</title><rect x="65.3701%" y="837" width="0.0543%" height="15" fill="rgb(231,121,21)" fg:x="69865" fg:w="58"/><text x="65.6201%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (52 samples, 0.05%)</title><rect x="65.3758%" y="821" width="0.0487%" height="15" fill="rgb(251,14,34)" fg:x="69871" fg:w="52"/><text x="65.6258%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (22 samples, 0.02%)</title><rect x="65.4244%" y="853" width="0.0206%" height="15" fill="rgb(249,193,11)" fg:x="69923" fg:w="22"/><text x="65.6744%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (22 samples, 0.02%)</title><rect x="65.4244%" y="837" width="0.0206%" height="15" fill="rgb(220,172,37)" fg:x="69923" fg:w="22"/><text x="65.6744%" y="847.50"></text></g><g><title>event_listener::List::notify (253 samples, 0.24%)</title><rect x="65.2102%" y="917" width="0.2367%" height="15" fill="rgb(231,229,43)" fg:x="69694" fg:w="253"/><text x="65.4602%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (247 samples, 0.23%)</title><rect x="65.2158%" y="901" width="0.2311%" height="15" fill="rgb(250,161,5)" fg:x="69700" fg:w="247"/><text x="65.4658%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (247 samples, 0.23%)</title><rect x="65.2158%" y="885" width="0.2311%" height="15" fill="rgb(218,225,18)" fg:x="69700" fg:w="247"/><text x="65.4658%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (240 samples, 0.22%)</title><rect x="65.2223%" y="869" width="0.2246%" height="15" fill="rgb(245,45,42)" fg:x="69707" fg:w="240"/><text x="65.4723%" y="879.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3,359 samples, 3.14%)</title><rect x="62.6315%" y="949" width="3.1429%" height="15" fill="rgb(211,115,1)" fg:x="66938" fg:w="3359"/><text x="62.8815%" y="959.50">asy..</text></g><g><title>event_listener::Event::notify (748 samples, 0.70%)</title><rect x="65.0745%" y="933" width="0.6999%" height="15" fill="rgb(248,133,52)" fg:x="69549" fg:w="748"/><text x="65.3245%" y="943.50"></text></g><g><title>event_listener::full_fence (350 samples, 0.33%)</title><rect x="65.4469%" y="917" width="0.3275%" height="15" fill="rgb(238,100,21)" fg:x="69947" fg:w="350"/><text x="65.6969%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (335 samples, 0.31%)</title><rect x="65.4609%" y="901" width="0.3134%" height="15" fill="rgb(247,144,11)" fg:x="69962" fg:w="335"/><text x="65.7109%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (335 samples, 0.31%)</title><rect x="65.4609%" y="885" width="0.3134%" height="15" fill="rgb(206,164,16)" fg:x="69962" fg:w="335"/><text x="65.7109%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (22 samples, 0.02%)</title><rect x="65.7772%" y="949" width="0.0206%" height="15" fill="rgb(222,34,3)" fg:x="70300" fg:w="22"/><text x="66.0272%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (12 samples, 0.01%)</title><rect x="65.7865%" y="933" width="0.0112%" height="15" fill="rgb(248,82,4)" fg:x="70310" fg:w="12"/><text x="66.0365%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="65.7996%" y="933" width="0.0187%" height="15" fill="rgb(228,81,46)" fg:x="70324" fg:w="20"/><text x="66.0496%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="65.7996%" y="917" width="0.0187%" height="15" fill="rgb(227,67,47)" fg:x="70324" fg:w="20"/><text x="66.0496%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="65.7996%" y="901" width="0.0187%" height="15" fill="rgb(215,93,53)" fg:x="70324" fg:w="20"/><text x="66.0496%" y="911.50"></text></g><g><title>event_listener::Inner::lock (26 samples, 0.02%)</title><rect x="65.8286%" y="933" width="0.0243%" height="15" fill="rgb(248,194,39)" fg:x="70355" fg:w="26"/><text x="66.0786%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (26 samples, 0.02%)</title><rect x="65.8286%" y="917" width="0.0243%" height="15" fill="rgb(215,5,19)" fg:x="70355" fg:w="26"/><text x="66.0786%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (25 samples, 0.02%)</title><rect x="65.8296%" y="901" width="0.0234%" height="15" fill="rgb(226,215,51)" fg:x="70356" fg:w="25"/><text x="66.0796%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (25 samples, 0.02%)</title><rect x="65.8296%" y="885" width="0.0234%" height="15" fill="rgb(225,56,26)" fg:x="70356" fg:w="25"/><text x="66.0796%" y="895.50"></text></g><g><title>___pthread_mutex_lock (25 samples, 0.02%)</title><rect x="65.8296%" y="869" width="0.0234%" height="15" fill="rgb(222,75,29)" fg:x="70356" fg:w="25"/><text x="66.0796%" y="879.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (4,558 samples, 4.26%)</title><rect x="61.5957%" y="1045" width="4.2648%" height="15" fill="rgb(236,139,6)" fg:x="65831" fg:w="4558"/><text x="61.8457%" y="1055.50">tremo..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,558 samples, 4.26%)</title><rect x="61.5957%" y="1029" width="4.2648%" height="15" fill="rgb(223,137,36)" fg:x="65831" fg:w="4558"/><text x="61.8457%" y="1039.50">&lt;asyn..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (4,558 samples, 4.26%)</title><rect x="61.5957%" y="1013" width="4.2648%" height="15" fill="rgb(226,99,2)" fg:x="65831" fg:w="4558"/><text x="61.8457%" y="1023.50">&lt;trem..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,558 samples, 4.26%)</title><rect x="61.5957%" y="997" width="4.2648%" height="15" fill="rgb(206,133,23)" fg:x="65831" fg:w="4558"/><text x="61.8457%" y="1007.50">&lt;asyn..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,558 samples, 4.26%)</title><rect x="61.5957%" y="981" width="4.2648%" height="15" fill="rgb(243,173,15)" fg:x="65831" fg:w="4558"/><text x="61.8457%" y="991.50">&lt;asyn..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,558 samples, 4.26%)</title><rect x="61.5957%" y="965" width="4.2648%" height="15" fill="rgb(228,69,28)" fg:x="65831" fg:w="4558"/><text x="61.8457%" y="975.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (67 samples, 0.06%)</title><rect x="65.7977%" y="949" width="0.0627%" height="15" fill="rgb(212,51,22)" fg:x="70322" fg:w="67"/><text x="66.0477%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (14 samples, 0.01%)</title><rect x="65.8679%" y="837" width="0.0131%" height="15" fill="rgb(227,113,0)" fg:x="70397" fg:w="14"/><text x="66.1179%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.01%)</title><rect x="65.8679%" y="821" width="0.0131%" height="15" fill="rgb(252,84,27)" fg:x="70397" fg:w="14"/><text x="66.1179%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.01%)</title><rect x="65.8679%" y="805" width="0.0131%" height="15" fill="rgb(223,145,39)" fg:x="70397" fg:w="14"/><text x="66.1179%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (52 samples, 0.05%)</title><rect x="65.8951%" y="725" width="0.0487%" height="15" fill="rgb(239,219,30)" fg:x="70426" fg:w="52"/><text x="66.1451%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (53 samples, 0.05%)</title><rect x="65.8951%" y="789" width="0.0496%" height="15" fill="rgb(224,196,39)" fg:x="70426" fg:w="53"/><text x="66.1451%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.05%)</title><rect x="65.8951%" y="773" width="0.0496%" height="15" fill="rgb(205,35,43)" fg:x="70426" fg:w="53"/><text x="66.1451%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (53 samples, 0.05%)</title><rect x="65.8951%" y="757" width="0.0496%" height="15" fill="rgb(228,201,21)" fg:x="70426" fg:w="53"/><text x="66.1451%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (53 samples, 0.05%)</title><rect x="65.8951%" y="741" width="0.0496%" height="15" fill="rgb(237,118,16)" fg:x="70426" fg:w="53"/><text x="66.1451%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (21 samples, 0.02%)</title><rect x="65.9446%" y="789" width="0.0196%" height="15" fill="rgb(241,17,19)" fg:x="70479" fg:w="21"/><text x="66.1946%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (21 samples, 0.02%)</title><rect x="65.9446%" y="773" width="0.0196%" height="15" fill="rgb(214,10,25)" fg:x="70479" fg:w="21"/><text x="66.1946%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (22 samples, 0.02%)</title><rect x="65.9961%" y="709" width="0.0206%" height="15" fill="rgb(238,37,29)" fg:x="70534" fg:w="22"/><text x="66.2461%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (22 samples, 0.02%)</title><rect x="65.9961%" y="693" width="0.0206%" height="15" fill="rgb(253,83,25)" fg:x="70534" fg:w="22"/><text x="66.2461%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (40 samples, 0.04%)</title><rect x="66.0167%" y="709" width="0.0374%" height="15" fill="rgb(234,192,12)" fg:x="70556" fg:w="40"/><text x="66.2667%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (40 samples, 0.04%)</title><rect x="66.0167%" y="693" width="0.0374%" height="15" fill="rgb(241,216,45)" fg:x="70556" fg:w="40"/><text x="66.2667%" y="703.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (40 samples, 0.04%)</title><rect x="66.0167%" y="677" width="0.0374%" height="15" fill="rgb(242,22,33)" fg:x="70556" fg:w="40"/><text x="66.2667%" y="687.50"></text></g><g><title>__GI___pthread_cond_signal (40 samples, 0.04%)</title><rect x="66.0167%" y="661" width="0.0374%" height="15" fill="rgb(231,105,49)" fg:x="70556" fg:w="40"/><text x="66.2667%" y="671.50"></text></g><g><title>parking::Unparker::unpark (120 samples, 0.11%)</title><rect x="65.9755%" y="741" width="0.1123%" height="15" fill="rgb(218,204,15)" fg:x="70512" fg:w="120"/><text x="66.2255%" y="751.50"></text></g><g><title>parking::Inner::unpark (107 samples, 0.10%)</title><rect x="65.9877%" y="725" width="0.1001%" height="15" fill="rgb(235,138,41)" fg:x="70525" fg:w="107"/><text x="66.2377%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (36 samples, 0.03%)</title><rect x="66.0541%" y="709" width="0.0337%" height="15" fill="rgb(246,0,9)" fg:x="70596" fg:w="36"/><text x="66.3041%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (36 samples, 0.03%)</title><rect x="66.0541%" y="693" width="0.0337%" height="15" fill="rgb(210,74,4)" fg:x="70596" fg:w="36"/><text x="66.3041%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (34 samples, 0.03%)</title><rect x="66.0560%" y="677" width="0.0318%" height="15" fill="rgb(250,60,41)" fg:x="70598" fg:w="34"/><text x="66.3060%" y="687.50"></text></g><g><title>___pthread_mutex_lock (34 samples, 0.03%)</title><rect x="66.0560%" y="661" width="0.0318%" height="15" fill="rgb(220,115,12)" fg:x="70598" fg:w="34"/><text x="66.3060%" y="671.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (137 samples, 0.13%)</title><rect x="65.9652%" y="757" width="0.1282%" height="15" fill="rgb(237,100,13)" fg:x="70501" fg:w="137"/><text x="66.2152%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (177 samples, 0.17%)</title><rect x="65.9643%" y="789" width="0.1656%" height="15" fill="rgb(213,55,26)" fg:x="70500" fg:w="177"/><text x="66.2143%" y="799.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (176 samples, 0.16%)</title><rect x="65.9652%" y="773" width="0.1647%" height="15" fill="rgb(216,17,4)" fg:x="70501" fg:w="176"/><text x="66.2152%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (39 samples, 0.04%)</title><rect x="66.0934%" y="757" width="0.0365%" height="15" fill="rgb(220,153,47)" fg:x="70638" fg:w="39"/><text x="66.3434%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="66.0934%" y="741" width="0.0365%" height="15" fill="rgb(215,131,9)" fg:x="70638" fg:w="39"/><text x="66.3434%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (37 samples, 0.03%)</title><rect x="66.0953%" y="725" width="0.0346%" height="15" fill="rgb(233,46,42)" fg:x="70640" fg:w="37"/><text x="66.3453%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (37 samples, 0.03%)</title><rect x="66.0953%" y="709" width="0.0346%" height="15" fill="rgb(226,86,7)" fg:x="70640" fg:w="37"/><text x="66.3453%" y="719.50"></text></g><g><title>async_executor::State::notify (327 samples, 0.31%)</title><rect x="65.8838%" y="805" width="0.3060%" height="15" fill="rgb(239,226,21)" fg:x="70414" fg:w="327"/><text x="66.1338%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (64 samples, 0.06%)</title><rect x="66.1299%" y="789" width="0.0599%" height="15" fill="rgb(244,137,22)" fg:x="70677" fg:w="64"/><text x="66.3799%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (61 samples, 0.06%)</title><rect x="66.1327%" y="773" width="0.0571%" height="15" fill="rgb(211,139,35)" fg:x="70680" fg:w="61"/><text x="66.3827%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (54 samples, 0.05%)</title><rect x="66.1393%" y="757" width="0.0505%" height="15" fill="rgb(214,62,50)" fg:x="70687" fg:w="54"/><text x="66.3893%" y="767.50"></text></g><g><title>___pthread_mutex_lock (54 samples, 0.05%)</title><rect x="66.1393%" y="741" width="0.0505%" height="15" fill="rgb(212,113,44)" fg:x="70687" fg:w="54"/><text x="66.3893%" y="751.50"></text></g><g><title>__GI___lll_lock_wait (14 samples, 0.01%)</title><rect x="66.1767%" y="725" width="0.0131%" height="15" fill="rgb(226,150,43)" fg:x="70727" fg:w="14"/><text x="66.4267%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (64 samples, 0.06%)</title><rect x="66.2048%" y="773" width="0.0599%" height="15" fill="rgb(250,71,37)" fg:x="70757" fg:w="64"/><text x="66.4548%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (64 samples, 0.06%)</title><rect x="66.2048%" y="757" width="0.0599%" height="15" fill="rgb(219,76,19)" fg:x="70757" fg:w="64"/><text x="66.4548%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (20 samples, 0.02%)</title><rect x="66.2656%" y="773" width="0.0187%" height="15" fill="rgb(250,39,11)" fg:x="70822" fg:w="20"/><text x="66.5156%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_or (20 samples, 0.02%)</title><rect x="66.2656%" y="757" width="0.0187%" height="15" fill="rgb(230,64,31)" fg:x="70822" fg:w="20"/><text x="66.5156%" y="767.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (430 samples, 0.40%)</title><rect x="65.8829%" y="821" width="0.4023%" height="15" fill="rgb(208,222,23)" fg:x="70413" fg:w="430"/><text x="66.1329%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (102 samples, 0.10%)</title><rect x="66.1898%" y="805" width="0.0954%" height="15" fill="rgb(227,125,18)" fg:x="70741" fg:w="102"/><text x="66.4398%" y="815.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (98 samples, 0.09%)</title><rect x="66.1935%" y="789" width="0.0917%" height="15" fill="rgb(234,210,9)" fg:x="70745" fg:w="98"/><text x="66.4435%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (56 samples, 0.05%)</title><rect x="66.2852%" y="821" width="0.0524%" height="15" fill="rgb(217,127,24)" fg:x="70843" fg:w="56"/><text x="66.5352%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (56 samples, 0.05%)</title><rect x="66.2852%" y="805" width="0.0524%" height="15" fill="rgb(239,141,48)" fg:x="70843" fg:w="56"/><text x="66.5352%" y="815.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (527 samples, 0.49%)</title><rect x="65.8679%" y="917" width="0.4931%" height="15" fill="rgb(227,109,8)" fg:x="70397" fg:w="527"/><text x="66.1179%" y="927.50"></text></g><g><title>event_listener::Event::notify (527 samples, 0.49%)</title><rect x="65.8679%" y="901" width="0.4931%" height="15" fill="rgb(235,184,23)" fg:x="70397" fg:w="527"/><text x="66.1179%" y="911.50"></text></g><g><title>event_listener::List::notify (527 samples, 0.49%)</title><rect x="65.8679%" y="885" width="0.4931%" height="15" fill="rgb(227,226,48)" fg:x="70397" fg:w="527"/><text x="66.1179%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (527 samples, 0.49%)</title><rect x="65.8679%" y="869" width="0.4931%" height="15" fill="rgb(206,150,11)" fg:x="70397" fg:w="527"/><text x="66.1179%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (527 samples, 0.49%)</title><rect x="65.8679%" y="853" width="0.4931%" height="15" fill="rgb(254,2,33)" fg:x="70397" fg:w="527"/><text x="66.1179%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (513 samples, 0.48%)</title><rect x="65.8810%" y="837" width="0.4800%" height="15" fill="rgb(243,160,20)" fg:x="70411" fg:w="513"/><text x="66.1310%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (25 samples, 0.02%)</title><rect x="66.3376%" y="821" width="0.0234%" height="15" fill="rgb(218,208,30)" fg:x="70899" fg:w="25"/><text x="66.5876%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (25 samples, 0.02%)</title><rect x="66.3376%" y="805" width="0.0234%" height="15" fill="rgb(224,120,49)" fg:x="70899" fg:w="25"/><text x="66.5876%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (557 samples, 0.52%)</title><rect x="65.8614%" y="997" width="0.5212%" height="15" fill="rgb(246,12,2)" fg:x="70390" fg:w="557"/><text x="66.1114%" y="1007.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (557 samples, 0.52%)</title><rect x="65.8614%" y="981" width="0.5212%" height="15" fill="rgb(236,117,3)" fg:x="70390" fg:w="557"/><text x="66.1114%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (557 samples, 0.52%)</title><rect x="65.8614%" y="965" width="0.5212%" height="15" fill="rgb(216,128,52)" fg:x="70390" fg:w="557"/><text x="66.1114%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (557 samples, 0.52%)</title><rect x="65.8614%" y="949" width="0.5212%" height="15" fill="rgb(246,145,19)" fg:x="70390" fg:w="557"/><text x="66.1114%" y="959.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (557 samples, 0.52%)</title><rect x="65.8614%" y="933" width="0.5212%" height="15" fill="rgb(222,11,46)" fg:x="70390" fg:w="557"/><text x="66.1114%" y="943.50"></text></g><g><title>event_listener::Event::listen (23 samples, 0.02%)</title><rect x="66.3610%" y="917" width="0.0215%" height="15" fill="rgb(245,82,36)" fg:x="70924" fg:w="23"/><text x="66.6110%" y="927.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.02%)</title><rect x="67.1404%" y="981" width="0.0234%" height="15" fill="rgb(250,73,51)" fg:x="71757" fg:w="25"/><text x="67.3904%" y="991.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="67.1638%" y="981" width="0.0112%" height="15" fill="rgb(221,189,23)" fg:x="71782" fg:w="12"/><text x="67.4138%" y="991.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="67.7074%" y="709" width="0.0140%" height="15" fill="rgb(210,33,7)" fg:x="72363" fg:w="15"/><text x="67.9574%" y="719.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="67.7299%" y="677" width="0.0112%" height="15" fill="rgb(210,107,22)" fg:x="72387" fg:w="12"/><text x="67.9799%" y="687.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="67.7411%" y="677" width="0.0112%" height="15" fill="rgb(222,116,37)" fg:x="72399" fg:w="12"/><text x="67.9911%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (11 samples, 0.01%)</title><rect x="67.7598%" y="629" width="0.0103%" height="15" fill="rgb(254,17,48)" fg:x="72419" fg:w="11"/><text x="68.0098%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (52 samples, 0.05%)</title><rect x="67.7598%" y="661" width="0.0487%" height="15" fill="rgb(224,36,32)" fg:x="72419" fg:w="52"/><text x="68.0098%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (52 samples, 0.05%)</title><rect x="67.7598%" y="645" width="0.0487%" height="15" fill="rgb(232,90,46)" fg:x="72419" fg:w="52"/><text x="68.0098%" y="655.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (41 samples, 0.04%)</title><rect x="67.7701%" y="629" width="0.0384%" height="15" fill="rgb(241,66,40)" fg:x="72430" fg:w="41"/><text x="68.0201%" y="639.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (33 samples, 0.03%)</title><rect x="67.7776%" y="613" width="0.0309%" height="15" fill="rgb(249,184,29)" fg:x="72438" fg:w="33"/><text x="68.0276%" y="623.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (33 samples, 0.03%)</title><rect x="67.7776%" y="597" width="0.0309%" height="15" fill="rgb(231,181,1)" fg:x="72438" fg:w="33"/><text x="68.0276%" y="607.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (33 samples, 0.03%)</title><rect x="67.7776%" y="581" width="0.0309%" height="15" fill="rgb(224,94,2)" fg:x="72438" fg:w="33"/><text x="68.0276%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (312 samples, 0.29%)</title><rect x="67.6859%" y="853" width="0.2919%" height="15" fill="rgb(229,170,15)" fg:x="72340" fg:w="312"/><text x="67.9359%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (312 samples, 0.29%)</title><rect x="67.6859%" y="837" width="0.2919%" height="15" fill="rgb(240,127,35)" fg:x="72340" fg:w="312"/><text x="67.9359%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (312 samples, 0.29%)</title><rect x="67.6859%" y="821" width="0.2919%" height="15" fill="rgb(248,196,34)" fg:x="72340" fg:w="312"/><text x="67.9359%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (312 samples, 0.29%)</title><rect x="67.6859%" y="805" width="0.2919%" height="15" fill="rgb(236,137,7)" fg:x="72340" fg:w="312"/><text x="67.9359%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (312 samples, 0.29%)</title><rect x="67.6859%" y="789" width="0.2919%" height="15" fill="rgb(235,127,16)" fg:x="72340" fg:w="312"/><text x="67.9359%" y="799.50"></text></g><g><title>alloc::alloc::alloc (303 samples, 0.28%)</title><rect x="67.6943%" y="773" width="0.2835%" height="15" fill="rgb(250,192,54)" fg:x="72349" fg:w="303"/><text x="67.9443%" y="783.50"></text></g><g><title>__rg_alloc (303 samples, 0.28%)</title><rect x="67.6943%" y="757" width="0.2835%" height="15" fill="rgb(218,98,20)" fg:x="72349" fg:w="303"/><text x="67.9443%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (303 samples, 0.28%)</title><rect x="67.6943%" y="741" width="0.2835%" height="15" fill="rgb(230,176,47)" fg:x="72349" fg:w="303"/><text x="67.9443%" y="751.50"></text></g><g><title>rust_alloc (289 samples, 0.27%)</title><rect x="67.7074%" y="725" width="0.2704%" height="15" fill="rgb(244,2,33)" fg:x="72363" fg:w="289"/><text x="67.9574%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (265 samples, 0.25%)</title><rect x="67.7299%" y="709" width="0.2480%" height="15" fill="rgb(231,100,17)" fg:x="72387" fg:w="265"/><text x="67.9799%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (265 samples, 0.25%)</title><rect x="67.7299%" y="693" width="0.2480%" height="15" fill="rgb(245,23,12)" fg:x="72387" fg:w="265"/><text x="67.9799%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (241 samples, 0.23%)</title><rect x="67.7523%" y="677" width="0.2255%" height="15" fill="rgb(249,55,22)" fg:x="72411" fg:w="241"/><text x="68.0023%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::take (171 samples, 0.16%)</title><rect x="67.8178%" y="661" width="0.1600%" height="15" fill="rgb(207,134,9)" fg:x="72481" fg:w="171"/><text x="68.0678%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (171 samples, 0.16%)</title><rect x="67.8178%" y="645" width="0.1600%" height="15" fill="rgb(218,134,0)" fg:x="72481" fg:w="171"/><text x="68.0678%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (385 samples, 0.36%)</title><rect x="67.6831%" y="949" width="0.3602%" height="15" fill="rgb(213,212,33)" fg:x="72337" fg:w="385"/><text x="67.9331%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (382 samples, 0.36%)</title><rect x="67.6859%" y="933" width="0.3574%" height="15" fill="rgb(252,106,18)" fg:x="72340" fg:w="382"/><text x="67.9359%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (382 samples, 0.36%)</title><rect x="67.6859%" y="917" width="0.3574%" height="15" fill="rgb(208,126,42)" fg:x="72340" fg:w="382"/><text x="67.9359%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (382 samples, 0.36%)</title><rect x="67.6859%" y="901" width="0.3574%" height="15" fill="rgb(246,175,29)" fg:x="72340" fg:w="382"/><text x="67.9359%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (382 samples, 0.36%)</title><rect x="67.6859%" y="885" width="0.3574%" height="15" fill="rgb(215,13,50)" fg:x="72340" fg:w="382"/><text x="67.9359%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (382 samples, 0.36%)</title><rect x="67.6859%" y="869" width="0.3574%" height="15" fill="rgb(216,172,15)" fg:x="72340" fg:w="382"/><text x="67.9359%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (70 samples, 0.07%)</title><rect x="67.9778%" y="853" width="0.0655%" height="15" fill="rgb(212,103,13)" fg:x="72652" fg:w="70"/><text x="68.2278%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70 samples, 0.07%)</title><rect x="67.9778%" y="837" width="0.0655%" height="15" fill="rgb(231,171,36)" fg:x="72652" fg:w="70"/><text x="68.2278%" y="847.50"></text></g><g><title>__memcpy_avx_unaligned_erms (52 samples, 0.05%)</title><rect x="67.9947%" y="821" width="0.0487%" height="15" fill="rgb(250,123,20)" fg:x="72670" fg:w="52"/><text x="68.2447%" y="831.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (416 samples, 0.39%)</title><rect x="67.6607%" y="965" width="0.3892%" height="15" fill="rgb(212,53,50)" fg:x="72313" fg:w="416"/><text x="67.9107%" y="975.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (26 samples, 0.02%)</title><rect x="68.0592%" y="949" width="0.0243%" height="15" fill="rgb(243,54,12)" fg:x="72739" fg:w="26"/><text x="68.3092%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="68.1210%" y="533" width="0.0112%" height="15" fill="rgb(234,101,34)" fg:x="72805" fg:w="12"/><text x="68.3710%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (59 samples, 0.06%)</title><rect x="68.1210%" y="565" width="0.0552%" height="15" fill="rgb(254,67,22)" fg:x="72805" fg:w="59"/><text x="68.3710%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (59 samples, 0.06%)</title><rect x="68.1210%" y="549" width="0.0552%" height="15" fill="rgb(250,35,47)" fg:x="72805" fg:w="59"/><text x="68.3710%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (47 samples, 0.04%)</title><rect x="68.1322%" y="533" width="0.0440%" height="15" fill="rgb(226,126,38)" fg:x="72817" fg:w="47"/><text x="68.3822%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (42 samples, 0.04%)</title><rect x="68.1369%" y="517" width="0.0393%" height="15" fill="rgb(216,138,53)" fg:x="72822" fg:w="42"/><text x="68.3869%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="68.1369%" y="501" width="0.0393%" height="15" fill="rgb(246,199,43)" fg:x="72822" fg:w="42"/><text x="68.3869%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="68.1369%" y="485" width="0.0393%" height="15" fill="rgb(232,125,11)" fg:x="72822" fg:w="42"/><text x="68.3869%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="68.1799%" y="565" width="0.0206%" height="15" fill="rgb(218,219,45)" fg:x="72868" fg:w="22"/><text x="68.4299%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="68.1799%" y="549" width="0.0206%" height="15" fill="rgb(216,102,54)" fg:x="72868" fg:w="22"/><text x="68.4299%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="68.1799%" y="533" width="0.0206%" height="15" fill="rgb(250,228,7)" fg:x="72868" fg:w="22"/><text x="68.4299%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="68.1818%" y="517" width="0.0187%" height="15" fill="rgb(226,125,25)" fg:x="72870" fg:w="20"/><text x="68.4318%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (20 samples, 0.02%)</title><rect x="68.1818%" y="501" width="0.0187%" height="15" fill="rgb(224,165,27)" fg:x="72870" fg:w="20"/><text x="68.4318%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (11 samples, 0.01%)</title><rect x="68.1902%" y="485" width="0.0103%" height="15" fill="rgb(233,86,3)" fg:x="72879" fg:w="11"/><text x="68.4402%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="68.1902%" y="469" width="0.0103%" height="15" fill="rgb(228,116,20)" fg:x="72879" fg:w="11"/><text x="68.4402%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (203 samples, 0.19%)</title><rect x="68.1145%" y="613" width="0.1899%" height="15" fill="rgb(209,192,17)" fg:x="72798" fg:w="203"/><text x="68.3645%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (203 samples, 0.19%)</title><rect x="68.1145%" y="597" width="0.1899%" height="15" fill="rgb(224,88,34)" fg:x="72798" fg:w="203"/><text x="68.3645%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (197 samples, 0.18%)</title><rect x="68.1201%" y="581" width="0.1843%" height="15" fill="rgb(233,38,6)" fg:x="72804" fg:w="197"/><text x="68.3701%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (108 samples, 0.10%)</title><rect x="68.2033%" y="565" width="0.1011%" height="15" fill="rgb(212,59,30)" fg:x="72893" fg:w="108"/><text x="68.4533%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (108 samples, 0.10%)</title><rect x="68.2033%" y="549" width="0.1011%" height="15" fill="rgb(213,80,3)" fg:x="72893" fg:w="108"/><text x="68.4533%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (243 samples, 0.23%)</title><rect x="68.0864%" y="757" width="0.2274%" height="15" fill="rgb(251,178,7)" fg:x="72768" fg:w="243"/><text x="68.3364%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (243 samples, 0.23%)</title><rect x="68.0864%" y="741" width="0.2274%" height="15" fill="rgb(213,154,26)" fg:x="72768" fg:w="243"/><text x="68.3364%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (233 samples, 0.22%)</title><rect x="68.0957%" y="725" width="0.2180%" height="15" fill="rgb(238,165,49)" fg:x="72778" fg:w="233"/><text x="68.3457%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (233 samples, 0.22%)</title><rect x="68.0957%" y="709" width="0.2180%" height="15" fill="rgb(248,91,46)" fg:x="72778" fg:w="233"/><text x="68.3457%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (233 samples, 0.22%)</title><rect x="68.0957%" y="693" width="0.2180%" height="15" fill="rgb(244,21,52)" fg:x="72778" fg:w="233"/><text x="68.3457%" y="703.50"></text></g><g><title>alloc::alloc::alloc (228 samples, 0.21%)</title><rect x="68.1004%" y="677" width="0.2133%" height="15" fill="rgb(247,122,20)" fg:x="72783" fg:w="228"/><text x="68.3504%" y="687.50"></text></g><g><title>__rg_alloc (228 samples, 0.21%)</title><rect x="68.1004%" y="661" width="0.2133%" height="15" fill="rgb(218,27,9)" fg:x="72783" fg:w="228"/><text x="68.3504%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (228 samples, 0.21%)</title><rect x="68.1004%" y="645" width="0.2133%" height="15" fill="rgb(246,7,6)" fg:x="72783" fg:w="228"/><text x="68.3504%" y="655.50"></text></g><g><title>rust_alloc (219 samples, 0.20%)</title><rect x="68.1088%" y="629" width="0.2049%" height="15" fill="rgb(227,135,54)" fg:x="72792" fg:w="219"/><text x="68.3588%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (285 samples, 0.27%)</title><rect x="68.0836%" y="869" width="0.2667%" height="15" fill="rgb(247,14,11)" fg:x="72765" fg:w="285"/><text x="68.3336%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (285 samples, 0.27%)</title><rect x="68.0836%" y="853" width="0.2667%" height="15" fill="rgb(206,149,34)" fg:x="72765" fg:w="285"/><text x="68.3336%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (282 samples, 0.26%)</title><rect x="68.0864%" y="837" width="0.2639%" height="15" fill="rgb(227,228,4)" fg:x="72768" fg:w="282"/><text x="68.3364%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (282 samples, 0.26%)</title><rect x="68.0864%" y="821" width="0.2639%" height="15" fill="rgb(238,218,28)" fg:x="72768" fg:w="282"/><text x="68.3364%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (282 samples, 0.26%)</title><rect x="68.0864%" y="805" width="0.2639%" height="15" fill="rgb(252,86,40)" fg:x="72768" fg:w="282"/><text x="68.3364%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (282 samples, 0.26%)</title><rect x="68.0864%" y="789" width="0.2639%" height="15" fill="rgb(251,225,11)" fg:x="72768" fg:w="282"/><text x="68.3364%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (282 samples, 0.26%)</title><rect x="68.0864%" y="773" width="0.2639%" height="15" fill="rgb(206,46,49)" fg:x="72768" fg:w="282"/><text x="68.3364%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (39 samples, 0.04%)</title><rect x="68.3137%" y="757" width="0.0365%" height="15" fill="rgb(245,128,24)" fg:x="73011" fg:w="39"/><text x="68.5637%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.03%)</title><rect x="68.3156%" y="741" width="0.0346%" height="15" fill="rgb(219,177,34)" fg:x="73013" fg:w="37"/><text x="68.5656%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (27 samples, 0.03%)</title><rect x="68.3250%" y="725" width="0.0253%" height="15" fill="rgb(218,60,48)" fg:x="73023" fg:w="27"/><text x="68.5750%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (11 samples, 0.01%)</title><rect x="68.3970%" y="645" width="0.0103%" height="15" fill="rgb(221,11,5)" fg:x="73100" fg:w="11"/><text x="68.6470%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (51 samples, 0.05%)</title><rect x="68.3970%" y="677" width="0.0477%" height="15" fill="rgb(220,148,13)" fg:x="73100" fg:w="51"/><text x="68.6470%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (51 samples, 0.05%)</title><rect x="68.3970%" y="661" width="0.0477%" height="15" fill="rgb(210,16,3)" fg:x="73100" fg:w="51"/><text x="68.6470%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (40 samples, 0.04%)</title><rect x="68.4073%" y="645" width="0.0374%" height="15" fill="rgb(236,80,2)" fg:x="73111" fg:w="40"/><text x="68.6573%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (30 samples, 0.03%)</title><rect x="68.4167%" y="629" width="0.0281%" height="15" fill="rgb(239,129,19)" fg:x="73121" fg:w="30"/><text x="68.6667%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="68.4167%" y="613" width="0.0281%" height="15" fill="rgb(220,106,35)" fg:x="73121" fg:w="30"/><text x="68.6667%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="68.4167%" y="597" width="0.0281%" height="15" fill="rgb(252,139,45)" fg:x="73121" fg:w="30"/><text x="68.6667%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (170 samples, 0.16%)</title><rect x="68.3933%" y="725" width="0.1591%" height="15" fill="rgb(229,8,36)" fg:x="73096" fg:w="170"/><text x="68.6433%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (166 samples, 0.16%)</title><rect x="68.3970%" y="709" width="0.1553%" height="15" fill="rgb(230,126,33)" fg:x="73100" fg:w="166"/><text x="68.6470%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (166 samples, 0.16%)</title><rect x="68.3970%" y="693" width="0.1553%" height="15" fill="rgb(239,140,21)" fg:x="73100" fg:w="166"/><text x="68.6470%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (101 samples, 0.09%)</title><rect x="68.4578%" y="677" width="0.0945%" height="15" fill="rgb(254,104,9)" fg:x="73165" fg:w="101"/><text x="68.7078%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (101 samples, 0.09%)</title><rect x="68.4578%" y="661" width="0.0945%" height="15" fill="rgb(239,52,14)" fg:x="73165" fg:w="101"/><text x="68.7078%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (211 samples, 0.20%)</title><rect x="68.3680%" y="821" width="0.1974%" height="15" fill="rgb(208,227,44)" fg:x="73069" fg:w="211"/><text x="68.6180%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (211 samples, 0.20%)</title><rect x="68.3680%" y="805" width="0.1974%" height="15" fill="rgb(246,18,19)" fg:x="73069" fg:w="211"/><text x="68.6180%" y="815.50"></text></g><g><title>alloc::alloc::alloc (195 samples, 0.18%)</title><rect x="68.3830%" y="789" width="0.1825%" height="15" fill="rgb(235,228,25)" fg:x="73085" fg:w="195"/><text x="68.6330%" y="799.50"></text></g><g><title>__rg_alloc (195 samples, 0.18%)</title><rect x="68.3830%" y="773" width="0.1825%" height="15" fill="rgb(240,156,20)" fg:x="73085" fg:w="195"/><text x="68.6330%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (195 samples, 0.18%)</title><rect x="68.3830%" y="757" width="0.1825%" height="15" fill="rgb(224,8,20)" fg:x="73085" fg:w="195"/><text x="68.6330%" y="767.50"></text></g><g><title>rust_alloc (185 samples, 0.17%)</title><rect x="68.3923%" y="741" width="0.1731%" height="15" fill="rgb(214,12,52)" fg:x="73095" fg:w="185"/><text x="68.6423%" y="751.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="68.5523%" y="725" width="0.0131%" height="15" fill="rgb(211,220,47)" fg:x="73266" fg:w="14"/><text x="68.8023%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (232 samples, 0.22%)</title><rect x="68.3577%" y="869" width="0.2171%" height="15" fill="rgb(250,173,5)" fg:x="73058" fg:w="232"/><text x="68.6077%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (221 samples, 0.21%)</title><rect x="68.3680%" y="853" width="0.2068%" height="15" fill="rgb(250,125,52)" fg:x="73069" fg:w="221"/><text x="68.6180%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (221 samples, 0.21%)</title><rect x="68.3680%" y="837" width="0.2068%" height="15" fill="rgb(209,133,18)" fg:x="73069" fg:w="221"/><text x="68.6180%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (530 samples, 0.50%)</title><rect x="68.0836%" y="885" width="0.4959%" height="15" fill="rgb(216,173,22)" fg:x="72765" fg:w="530"/><text x="68.3336%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (586 samples, 0.55%)</title><rect x="68.0499%" y="965" width="0.5483%" height="15" fill="rgb(205,3,22)" fg:x="72729" fg:w="586"/><text x="68.2999%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (550 samples, 0.51%)</title><rect x="68.0836%" y="949" width="0.5146%" height="15" fill="rgb(248,22,20)" fg:x="72765" fg:w="550"/><text x="68.3336%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (550 samples, 0.51%)</title><rect x="68.0836%" y="933" width="0.5146%" height="15" fill="rgb(233,6,29)" fg:x="72765" fg:w="550"/><text x="68.3336%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (550 samples, 0.51%)</title><rect x="68.0836%" y="917" width="0.5146%" height="15" fill="rgb(240,22,54)" fg:x="72765" fg:w="550"/><text x="68.3336%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (550 samples, 0.51%)</title><rect x="68.0836%" y="901" width="0.5146%" height="15" fill="rgb(231,133,32)" fg:x="72765" fg:w="550"/><text x="68.3336%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (20 samples, 0.02%)</title><rect x="68.5795%" y="885" width="0.0187%" height="15" fill="rgb(248,193,4)" fg:x="73295" fg:w="20"/><text x="68.8295%" y="895.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,528 samples, 1.43%)</title><rect x="67.1750%" y="981" width="1.4297%" height="15" fill="rgb(211,178,46)" fg:x="71794" fg:w="1528"/><text x="67.4250%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (150 samples, 0.14%)</title><rect x="68.6047%" y="981" width="0.1403%" height="15" fill="rgb(224,5,42)" fg:x="73322" fg:w="150"/><text x="68.8547%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (356 samples, 0.33%)</title><rect x="68.7507%" y="981" width="0.3331%" height="15" fill="rgb(239,176,25)" fg:x="73478" fg:w="356"/><text x="69.0007%" y="991.50"></text></g><g><title>core::ptr::write (328 samples, 0.31%)</title><rect x="68.7769%" y="965" width="0.3069%" height="15" fill="rgb(245,187,50)" fg:x="73506" fg:w="328"/><text x="69.0269%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (325 samples, 0.30%)</title><rect x="68.7797%" y="949" width="0.3041%" height="15" fill="rgb(248,24,15)" fg:x="73509" fg:w="325"/><text x="69.0297%" y="959.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.02%)</title><rect x="69.1512%" y="661" width="0.0159%" height="15" fill="rgb(205,166,13)" fg:x="73906" fg:w="17"/><text x="69.4012%" y="671.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="69.1512%" y="645" width="0.0159%" height="15" fill="rgb(208,114,23)" fg:x="73906" fg:w="17"/><text x="69.4012%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (42 samples, 0.04%)</title><rect x="69.1409%" y="709" width="0.0393%" height="15" fill="rgb(239,127,18)" fg:x="73895" fg:w="42"/><text x="69.3909%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (42 samples, 0.04%)</title><rect x="69.1409%" y="693" width="0.0393%" height="15" fill="rgb(219,154,28)" fg:x="73895" fg:w="42"/><text x="69.3909%" y="703.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (36 samples, 0.03%)</title><rect x="69.1465%" y="677" width="0.0337%" height="15" fill="rgb(225,157,23)" fg:x="73901" fg:w="36"/><text x="69.3965%" y="687.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="69.1671%" y="661" width="0.0131%" height="15" fill="rgb(219,8,6)" fg:x="73923" fg:w="14"/><text x="69.4171%" y="671.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="69.1671%" y="645" width="0.0131%" height="15" fill="rgb(212,47,6)" fg:x="73923" fg:w="14"/><text x="69.4171%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (52 samples, 0.05%)</title><rect x="69.1409%" y="725" width="0.0487%" height="15" fill="rgb(224,190,4)" fg:x="73895" fg:w="52"/><text x="69.3909%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (91 samples, 0.09%)</title><rect x="69.1287%" y="741" width="0.0851%" height="15" fill="rgb(239,183,29)" fg:x="73882" fg:w="91"/><text x="69.3787%" y="751.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (24 samples, 0.02%)</title><rect x="69.1914%" y="725" width="0.0225%" height="15" fill="rgb(213,57,7)" fg:x="73949" fg:w="24"/><text x="69.4414%" y="735.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (24 samples, 0.02%)</title><rect x="69.1914%" y="709" width="0.0225%" height="15" fill="rgb(216,148,1)" fg:x="73949" fg:w="24"/><text x="69.4414%" y="719.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (24 samples, 0.02%)</title><rect x="69.1914%" y="693" width="0.0225%" height="15" fill="rgb(236,182,29)" fg:x="73949" fg:w="24"/><text x="69.4414%" y="703.50"></text></g><g><title>snmalloc::bits::align_down (24 samples, 0.02%)</title><rect x="69.1914%" y="677" width="0.0225%" height="15" fill="rgb(244,120,48)" fg:x="73949" fg:w="24"/><text x="69.4414%" y="687.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (68 samples, 0.06%)</title><rect x="69.2382%" y="725" width="0.0636%" height="15" fill="rgb(206,71,34)" fg:x="73999" fg:w="68"/><text x="69.4882%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (602 samples, 0.56%)</title><rect x="69.1278%" y="773" width="0.5633%" height="15" fill="rgb(242,32,6)" fg:x="73881" fg:w="602"/><text x="69.3778%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (602 samples, 0.56%)</title><rect x="69.1278%" y="757" width="0.5633%" height="15" fill="rgb(241,35,3)" fg:x="73881" fg:w="602"/><text x="69.3778%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (510 samples, 0.48%)</title><rect x="69.2139%" y="741" width="0.4772%" height="15" fill="rgb(222,62,19)" fg:x="73973" fg:w="510"/><text x="69.4639%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (416 samples, 0.39%)</title><rect x="69.3018%" y="725" width="0.3892%" height="15" fill="rgb(223,110,41)" fg:x="74067" fg:w="416"/><text x="69.5518%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (416 samples, 0.39%)</title><rect x="69.3018%" y="709" width="0.3892%" height="15" fill="rgb(208,224,4)" fg:x="74067" fg:w="416"/><text x="69.5518%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (416 samples, 0.39%)</title><rect x="69.3018%" y="693" width="0.3892%" height="15" fill="rgb(241,137,19)" fg:x="74067" fg:w="416"/><text x="69.5518%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (12 samples, 0.01%)</title><rect x="69.6939%" y="741" width="0.0112%" height="15" fill="rgb(244,24,17)" fg:x="74486" fg:w="12"/><text x="69.9439%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (12 samples, 0.01%)</title><rect x="69.6939%" y="725" width="0.0112%" height="15" fill="rgb(245,178,49)" fg:x="74486" fg:w="12"/><text x="69.9439%" y="735.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="69.6939%" y="709" width="0.0112%" height="15" fill="rgb(219,160,38)" fg:x="74486" fg:w="12"/><text x="69.9439%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (26 samples, 0.02%)</title><rect x="69.7051%" y="741" width="0.0243%" height="15" fill="rgb(228,137,14)" fg:x="74498" fg:w="26"/><text x="69.9551%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (26 samples, 0.02%)</title><rect x="69.7051%" y="725" width="0.0243%" height="15" fill="rgb(237,134,11)" fg:x="74498" fg:w="26"/><text x="69.9551%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="69.6910%" y="773" width="0.0402%" height="15" fill="rgb(211,126,44)" fg:x="74483" fg:w="43"/><text x="69.9410%" y="783.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (43 samples, 0.04%)</title><rect x="69.6910%" y="757" width="0.0402%" height="15" fill="rgb(226,171,33)" fg:x="74483" fg:w="43"/><text x="69.9410%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (780 samples, 0.73%)</title><rect x="69.0913%" y="917" width="0.7298%" height="15" fill="rgb(253,99,13)" fg:x="73842" fg:w="780"/><text x="69.3413%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (780 samples, 0.73%)</title><rect x="69.0913%" y="901" width="0.7298%" height="15" fill="rgb(244,48,7)" fg:x="73842" fg:w="780"/><text x="69.3413%" y="911.50"></text></g><g><title>alloc::alloc::alloc (770 samples, 0.72%)</title><rect x="69.1006%" y="885" width="0.7205%" height="15" fill="rgb(244,217,54)" fg:x="73852" fg:w="770"/><text x="69.3506%" y="895.50"></text></g><g><title>__rg_alloc (770 samples, 0.72%)</title><rect x="69.1006%" y="869" width="0.7205%" height="15" fill="rgb(224,15,18)" fg:x="73852" fg:w="770"/><text x="69.3506%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (770 samples, 0.72%)</title><rect x="69.1006%" y="853" width="0.7205%" height="15" fill="rgb(244,99,12)" fg:x="73852" fg:w="770"/><text x="69.3506%" y="863.50"></text></g><g><title>rust_alloc (767 samples, 0.72%)</title><rect x="69.1034%" y="837" width="0.7177%" height="15" fill="rgb(233,226,8)" fg:x="73855" fg:w="767"/><text x="69.3534%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (752 samples, 0.70%)</title><rect x="69.1175%" y="821" width="0.7036%" height="15" fill="rgb(229,211,3)" fg:x="73870" fg:w="752"/><text x="69.3675%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (752 samples, 0.70%)</title><rect x="69.1175%" y="805" width="0.7036%" height="15" fill="rgb(216,140,21)" fg:x="73870" fg:w="752"/><text x="69.3675%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (745 samples, 0.70%)</title><rect x="69.1240%" y="789" width="0.6971%" height="15" fill="rgb(234,122,30)" fg:x="73877" fg:w="745"/><text x="69.3740%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::take (83 samples, 0.08%)</title><rect x="69.7434%" y="773" width="0.0777%" height="15" fill="rgb(236,25,46)" fg:x="74539" fg:w="83"/><text x="69.9934%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (83 samples, 0.08%)</title><rect x="69.7434%" y="757" width="0.0777%" height="15" fill="rgb(217,52,54)" fg:x="74539" fg:w="83"/><text x="69.9934%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (11 samples, 0.01%)</title><rect x="69.8211%" y="917" width="0.0103%" height="15" fill="rgb(222,29,26)" fg:x="74622" fg:w="11"/><text x="70.0711%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (807 samples, 0.76%)</title><rect x="69.0838%" y="981" width="0.7551%" height="15" fill="rgb(216,177,29)" fg:x="73834" fg:w="807"/><text x="69.3338%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (807 samples, 0.76%)</title><rect x="69.0838%" y="965" width="0.7551%" height="15" fill="rgb(247,136,51)" fg:x="73834" fg:w="807"/><text x="69.3338%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (799 samples, 0.75%)</title><rect x="69.0913%" y="949" width="0.7476%" height="15" fill="rgb(231,47,47)" fg:x="73842" fg:w="799"/><text x="69.3413%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (799 samples, 0.75%)</title><rect x="69.0913%" y="933" width="0.7476%" height="15" fill="rgb(211,192,36)" fg:x="73842" fg:w="799"/><text x="69.3413%" y="943.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.02%)</title><rect x="69.8819%" y="677" width="0.0159%" height="15" fill="rgb(229,156,32)" fg:x="74687" fg:w="17"/><text x="70.1319%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="69.8847%" y="661" width="0.0131%" height="15" fill="rgb(248,213,20)" fg:x="74690" fg:w="14"/><text x="70.1347%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="69.8707%" y="725" width="0.0374%" height="15" fill="rgb(217,64,7)" fg:x="74675" fg:w="40"/><text x="70.1207%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="69.8707%" y="709" width="0.0374%" height="15" fill="rgb(232,142,8)" fg:x="74675" fg:w="40"/><text x="70.1207%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (39 samples, 0.04%)</title><rect x="69.8716%" y="693" width="0.0365%" height="15" fill="rgb(224,92,44)" fg:x="74676" fg:w="39"/><text x="70.1216%" y="703.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="69.8978%" y="677" width="0.0103%" height="15" fill="rgb(214,169,17)" fg:x="74704" fg:w="11"/><text x="70.1478%" y="687.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="69.8978%" y="661" width="0.0103%" height="15" fill="rgb(210,59,37)" fg:x="74704" fg:w="11"/><text x="70.1478%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (52 samples, 0.05%)</title><rect x="69.8604%" y="757" width="0.0487%" height="15" fill="rgb(214,116,48)" fg:x="74664" fg:w="52"/><text x="70.1104%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (52 samples, 0.05%)</title><rect x="69.8604%" y="741" width="0.0487%" height="15" fill="rgb(244,191,6)" fg:x="74664" fg:w="52"/><text x="70.1104%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (53 samples, 0.05%)</title><rect x="69.8604%" y="789" width="0.0496%" height="15" fill="rgb(241,50,52)" fg:x="74664" fg:w="53"/><text x="70.1104%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (53 samples, 0.05%)</title><rect x="69.8604%" y="773" width="0.0496%" height="15" fill="rgb(236,75,39)" fg:x="74664" fg:w="53"/><text x="70.1104%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (65 samples, 0.06%)</title><rect x="69.8538%" y="805" width="0.0608%" height="15" fill="rgb(236,99,0)" fg:x="74657" fg:w="65"/><text x="70.1038%" y="815.50"></text></g><g><title>rust_dealloc (86 samples, 0.08%)</title><rect x="69.8445%" y="821" width="0.0805%" height="15" fill="rgb(207,202,15)" fg:x="74647" fg:w="86"/><text x="70.0945%" y="831.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="69.9147%" y="805" width="0.0103%" height="15" fill="rgb(233,207,14)" fg:x="74722" fg:w="11"/><text x="70.1647%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95 samples, 0.09%)</title><rect x="69.8389%" y="885" width="0.0889%" height="15" fill="rgb(226,27,51)" fg:x="74641" fg:w="95"/><text x="70.0889%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (95 samples, 0.09%)</title><rect x="69.8389%" y="869" width="0.0889%" height="15" fill="rgb(206,104,42)" fg:x="74641" fg:w="95"/><text x="70.0889%" y="879.50"></text></g><g><title>__rg_dealloc (95 samples, 0.09%)</title><rect x="69.8389%" y="853" width="0.0889%" height="15" fill="rgb(212,225,4)" fg:x="74641" fg:w="95"/><text x="70.0889%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (95 samples, 0.09%)</title><rect x="69.8389%" y="837" width="0.0889%" height="15" fill="rgb(233,96,42)" fg:x="74641" fg:w="95"/><text x="70.0889%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (108 samples, 0.10%)</title><rect x="69.8389%" y="949" width="0.1011%" height="15" fill="rgb(229,21,32)" fg:x="74641" fg:w="108"/><text x="70.0889%" y="959.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 0.10%)</title><rect x="69.8389%" y="933" width="0.1011%" height="15" fill="rgb(226,216,24)" fg:x="74641" fg:w="108"/><text x="70.0889%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (108 samples, 0.10%)</title><rect x="69.8389%" y="917" width="0.1011%" height="15" fill="rgb(221,163,17)" fg:x="74641" fg:w="108"/><text x="70.0889%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 0.10%)</title><rect x="69.8389%" y="901" width="0.1011%" height="15" fill="rgb(216,216,42)" fg:x="74641" fg:w="108"/><text x="70.0889%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="69.9278%" y="885" width="0.0122%" height="15" fill="rgb(240,118,7)" fg:x="74736" fg:w="13"/><text x="70.1778%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (113 samples, 0.11%)</title><rect x="69.8389%" y="965" width="0.1057%" height="15" fill="rgb(221,67,37)" fg:x="74641" fg:w="113"/><text x="70.0889%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (114 samples, 0.11%)</title><rect x="69.8389%" y="981" width="0.1067%" height="15" fill="rgb(241,32,44)" fg:x="74641" fg:w="114"/><text x="70.0889%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="69.9633%" y="821" width="0.0122%" height="15" fill="rgb(235,204,43)" fg:x="74774" fg:w="13"/><text x="70.2133%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="69.9633%" y="805" width="0.0122%" height="15" fill="rgb(213,116,10)" fg:x="74774" fg:w="13"/><text x="70.2133%" y="815.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="69.9633%" y="789" width="0.0122%" height="15" fill="rgb(239,15,48)" fg:x="74774" fg:w="13"/><text x="70.2133%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="69.9633%" y="773" width="0.0122%" height="15" fill="rgb(207,123,36)" fg:x="74774" fg:w="13"/><text x="70.2133%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (32 samples, 0.03%)</title><rect x="69.9502%" y="917" width="0.0299%" height="15" fill="rgb(209,103,30)" fg:x="74760" fg:w="32"/><text x="70.2002%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (32 samples, 0.03%)</title><rect x="69.9502%" y="901" width="0.0299%" height="15" fill="rgb(238,100,19)" fg:x="74760" fg:w="32"/><text x="70.2002%" y="911.50"></text></g><g><title>core::mem::drop (18 samples, 0.02%)</title><rect x="69.9633%" y="885" width="0.0168%" height="15" fill="rgb(244,30,14)" fg:x="74774" fg:w="18"/><text x="70.2133%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (18 samples, 0.02%)</title><rect x="69.9633%" y="869" width="0.0168%" height="15" fill="rgb(249,174,6)" fg:x="74774" fg:w="18"/><text x="70.2133%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (18 samples, 0.02%)</title><rect x="69.9633%" y="853" width="0.0168%" height="15" fill="rgb(235,213,41)" fg:x="74774" fg:w="18"/><text x="70.2133%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="69.9633%" y="837" width="0.0168%" height="15" fill="rgb(213,118,6)" fg:x="74774" fg:w="18"/><text x="70.2133%" y="847.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (37 samples, 0.03%)</title><rect x="70.0588%" y="773" width="0.0346%" height="15" fill="rgb(235,44,51)" fg:x="74876" fg:w="37"/><text x="70.3088%" y="783.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (33 samples, 0.03%)</title><rect x="70.0625%" y="757" width="0.0309%" height="15" fill="rgb(217,9,53)" fg:x="74880" fg:w="33"/><text x="70.3125%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (82 samples, 0.08%)</title><rect x="70.0307%" y="821" width="0.0767%" height="15" fill="rgb(237,172,34)" fg:x="74846" fg:w="82"/><text x="70.2807%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (82 samples, 0.08%)</title><rect x="70.0307%" y="805" width="0.0767%" height="15" fill="rgb(206,206,11)" fg:x="74846" fg:w="82"/><text x="70.2807%" y="815.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (80 samples, 0.07%)</title><rect x="70.0326%" y="789" width="0.0749%" height="15" fill="rgb(214,149,29)" fg:x="74848" fg:w="80"/><text x="70.2826%" y="799.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="70.0934%" y="773" width="0.0140%" height="15" fill="rgb(208,123,3)" fg:x="74913" fg:w="15"/><text x="70.3434%" y="783.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="70.0934%" y="757" width="0.0140%" height="15" fill="rgb(229,126,4)" fg:x="74913" fg:w="15"/><text x="70.3434%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (118 samples, 0.11%)</title><rect x="70.0120%" y="853" width="0.1104%" height="15" fill="rgb(222,92,36)" fg:x="74826" fg:w="118"/><text x="70.2620%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (118 samples, 0.11%)</title><rect x="70.0120%" y="837" width="0.1104%" height="15" fill="rgb(216,39,41)" fg:x="74826" fg:w="118"/><text x="70.2620%" y="847.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.01%)</title><rect x="70.1074%" y="821" width="0.0150%" height="15" fill="rgb(253,127,28)" fg:x="74928" fg:w="16"/><text x="70.3574%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (123 samples, 0.12%)</title><rect x="70.0120%" y="885" width="0.1151%" height="15" fill="rgb(249,152,51)" fg:x="74826" fg:w="123"/><text x="70.2620%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (123 samples, 0.12%)</title><rect x="70.0120%" y="869" width="0.1151%" height="15" fill="rgb(209,123,42)" fg:x="74826" fg:w="123"/><text x="70.2620%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (150 samples, 0.14%)</title><rect x="69.9942%" y="901" width="0.1403%" height="15" fill="rgb(241,118,22)" fg:x="74807" fg:w="150"/><text x="70.2442%" y="911.50"></text></g><g><title>rust_dealloc (176 samples, 0.16%)</title><rect x="69.9802%" y="917" width="0.1647%" height="15" fill="rgb(208,25,7)" fg:x="74792" fg:w="176"/><text x="70.2302%" y="927.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="70.1345%" y="901" width="0.0103%" height="15" fill="rgb(243,144,39)" fg:x="74957" fg:w="11"/><text x="70.3845%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (221 samples, 0.21%)</title><rect x="69.9455%" y="965" width="0.2068%" height="15" fill="rgb(250,50,5)" fg:x="74755" fg:w="221"/><text x="70.1955%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (221 samples, 0.21%)</title><rect x="69.9455%" y="949" width="0.2068%" height="15" fill="rgb(207,67,11)" fg:x="74755" fg:w="221"/><text x="70.1955%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (221 samples, 0.21%)</title><rect x="69.9455%" y="933" width="0.2068%" height="15" fill="rgb(245,204,40)" fg:x="74755" fg:w="221"/><text x="70.1955%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (11 samples, 0.01%)</title><rect x="70.1710%" y="901" width="0.0103%" height="15" fill="rgb(238,228,24)" fg:x="74996" fg:w="11"/><text x="70.4210%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (11 samples, 0.01%)</title><rect x="70.1710%" y="885" width="0.0103%" height="15" fill="rgb(217,116,22)" fg:x="74996" fg:w="11"/><text x="70.4210%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (13 samples, 0.01%)</title><rect x="70.2075%" y="789" width="0.0122%" height="15" fill="rgb(234,98,12)" fg:x="75035" fg:w="13"/><text x="70.4575%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (13 samples, 0.01%)</title><rect x="70.2075%" y="773" width="0.0122%" height="15" fill="rgb(242,170,50)" fg:x="75035" fg:w="13"/><text x="70.4575%" y="783.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="70.2328%" y="693" width="0.0103%" height="15" fill="rgb(235,7,5)" fg:x="75062" fg:w="11"/><text x="70.4828%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (23 samples, 0.02%)</title><rect x="70.2749%" y="645" width="0.0215%" height="15" fill="rgb(241,114,28)" fg:x="75107" fg:w="23"/><text x="70.5249%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="70.2777%" y="629" width="0.0187%" height="15" fill="rgb(246,112,42)" fg:x="75110" fg:w="20"/><text x="70.5277%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (61 samples, 0.06%)</title><rect x="70.2496%" y="693" width="0.0571%" height="15" fill="rgb(248,228,14)" fg:x="75080" fg:w="61"/><text x="70.4996%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (61 samples, 0.06%)</title><rect x="70.2496%" y="677" width="0.0571%" height="15" fill="rgb(208,133,18)" fg:x="75080" fg:w="61"/><text x="70.4996%" y="687.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (58 samples, 0.05%)</title><rect x="70.2524%" y="661" width="0.0543%" height="15" fill="rgb(207,35,49)" fg:x="75083" fg:w="58"/><text x="70.5024%" y="671.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="70.2964%" y="645" width="0.0103%" height="15" fill="rgb(205,68,36)" fg:x="75130" fg:w="11"/><text x="70.5464%" y="655.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="70.2964%" y="629" width="0.0103%" height="15" fill="rgb(245,62,40)" fg:x="75130" fg:w="11"/><text x="70.5464%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (88 samples, 0.08%)</title><rect x="70.2309%" y="725" width="0.0823%" height="15" fill="rgb(228,27,24)" fg:x="75060" fg:w="88"/><text x="70.4809%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (88 samples, 0.08%)</title><rect x="70.2309%" y="709" width="0.0823%" height="15" fill="rgb(253,19,12)" fg:x="75060" fg:w="88"/><text x="70.4809%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (90 samples, 0.08%)</title><rect x="70.2309%" y="757" width="0.0842%" height="15" fill="rgb(232,28,20)" fg:x="75060" fg:w="90"/><text x="70.4809%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (90 samples, 0.08%)</title><rect x="70.2309%" y="741" width="0.0842%" height="15" fill="rgb(218,35,51)" fg:x="75060" fg:w="90"/><text x="70.4809%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (99 samples, 0.09%)</title><rect x="70.2253%" y="773" width="0.0926%" height="15" fill="rgb(212,90,40)" fg:x="75054" fg:w="99"/><text x="70.4753%" y="783.50"></text></g><g><title>rust_dealloc (113 samples, 0.11%)</title><rect x="70.2197%" y="789" width="0.1057%" height="15" fill="rgb(220,172,12)" fg:x="75048" fg:w="113"/><text x="70.4697%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (139 samples, 0.13%)</title><rect x="70.2010%" y="805" width="0.1301%" height="15" fill="rgb(226,159,20)" fg:x="75028" fg:w="139"/><text x="70.4510%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.15%)</title><rect x="70.1813%" y="869" width="0.1516%" height="15" fill="rgb(234,205,16)" fg:x="75007" fg:w="162"/><text x="70.4313%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (160 samples, 0.15%)</title><rect x="70.1832%" y="853" width="0.1497%" height="15" fill="rgb(207,9,39)" fg:x="75009" fg:w="160"/><text x="70.4332%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (141 samples, 0.13%)</title><rect x="70.2010%" y="837" width="0.1319%" height="15" fill="rgb(249,143,15)" fg:x="75028" fg:w="141"/><text x="70.4510%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (141 samples, 0.13%)</title><rect x="70.2010%" y="821" width="0.1319%" height="15" fill="rgb(253,133,29)" fg:x="75028" fg:w="141"/><text x="70.4510%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (207 samples, 0.19%)</title><rect x="70.1542%" y="933" width="0.1937%" height="15" fill="rgb(221,187,0)" fg:x="74978" fg:w="207"/><text x="70.4042%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (199 samples, 0.19%)</title><rect x="70.1617%" y="917" width="0.1862%" height="15" fill="rgb(205,204,26)" fg:x="74986" fg:w="199"/><text x="70.4117%" y="927.50"></text></g><g><title>core::mem::drop (178 samples, 0.17%)</title><rect x="70.1813%" y="901" width="0.1665%" height="15" fill="rgb(224,68,54)" fg:x="75007" fg:w="178"/><text x="70.4313%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (178 samples, 0.17%)</title><rect x="70.1813%" y="885" width="0.1665%" height="15" fill="rgb(209,67,4)" fg:x="75007" fg:w="178"/><text x="70.4313%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (16 samples, 0.01%)</title><rect x="70.3329%" y="869" width="0.0150%" height="15" fill="rgb(228,229,18)" fg:x="75169" fg:w="16"/><text x="70.5829%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="70.3329%" y="853" width="0.0150%" height="15" fill="rgb(231,89,13)" fg:x="75169" fg:w="16"/><text x="70.5829%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="70.3329%" y="837" width="0.0150%" height="15" fill="rgb(210,182,18)" fg:x="75169" fg:w="16"/><text x="70.5829%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="70.3329%" y="821" width="0.0150%" height="15" fill="rgb(240,105,2)" fg:x="75169" fg:w="16"/><text x="70.5829%" y="831.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="70.3329%" y="805" width="0.0150%" height="15" fill="rgb(207,170,50)" fg:x="75169" fg:w="16"/><text x="70.5829%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="70.3329%" y="789" width="0.0150%" height="15" fill="rgb(232,133,24)" fg:x="75169" fg:w="16"/><text x="70.5829%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (23 samples, 0.02%)</title><rect x="70.3703%" y="837" width="0.0215%" height="15" fill="rgb(235,166,27)" fg:x="75209" fg:w="23"/><text x="70.6203%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (23 samples, 0.02%)</title><rect x="70.3703%" y="821" width="0.0215%" height="15" fill="rgb(209,19,13)" fg:x="75209" fg:w="23"/><text x="70.6203%" y="831.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (22 samples, 0.02%)</title><rect x="70.3713%" y="805" width="0.0206%" height="15" fill="rgb(226,79,39)" fg:x="75210" fg:w="22"/><text x="70.6213%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (44 samples, 0.04%)</title><rect x="70.3582%" y="869" width="0.0412%" height="15" fill="rgb(222,163,10)" fg:x="75196" fg:w="44"/><text x="70.6082%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (44 samples, 0.04%)</title><rect x="70.3582%" y="853" width="0.0412%" height="15" fill="rgb(214,44,19)" fg:x="75196" fg:w="44"/><text x="70.6082%" y="863.50"></text></g><g><title>rust_dealloc (61 samples, 0.06%)</title><rect x="70.3479%" y="933" width="0.0571%" height="15" fill="rgb(210,217,13)" fg:x="75185" fg:w="61"/><text x="70.5979%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (57 samples, 0.05%)</title><rect x="70.3516%" y="917" width="0.0533%" height="15" fill="rgb(237,61,54)" fg:x="75189" fg:w="57"/><text x="70.6016%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (50 samples, 0.05%)</title><rect x="70.3582%" y="901" width="0.0468%" height="15" fill="rgb(226,184,24)" fg:x="75196" fg:w="50"/><text x="70.6082%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (50 samples, 0.05%)</title><rect x="70.3582%" y="885" width="0.0468%" height="15" fill="rgb(223,226,4)" fg:x="75196" fg:w="50"/><text x="70.6082%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (276 samples, 0.26%)</title><rect x="70.1523%" y="949" width="0.2582%" height="15" fill="rgb(210,26,41)" fg:x="74976" fg:w="276"/><text x="70.4023%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (506 samples, 0.47%)</title><rect x="69.9455%" y="981" width="0.4734%" height="15" fill="rgb(220,221,6)" fg:x="74755" fg:w="506"/><text x="70.1955%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (285 samples, 0.27%)</title><rect x="70.1523%" y="965" width="0.2667%" height="15" fill="rgb(225,89,49)" fg:x="74976" fg:w="285"/><text x="70.4023%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (25 samples, 0.02%)</title><rect x="70.4190%" y="981" width="0.0234%" height="15" fill="rgb(218,70,45)" fg:x="75261" fg:w="25"/><text x="70.6690%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (4,919 samples, 4.60%)</title><rect x="65.8604%" y="1045" width="4.6025%" height="15" fill="rgb(238,166,21)" fg:x="70389" fg:w="4919"/><text x="66.1104%" y="1055.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,919 samples, 4.60%)</title><rect x="65.8604%" y="1029" width="4.6025%" height="15" fill="rgb(224,141,44)" fg:x="70389" fg:w="4919"/><text x="66.1104%" y="1039.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (4,918 samples, 4.60%)</title><rect x="65.8614%" y="1013" width="4.6016%" height="15" fill="rgb(230,12,49)" fg:x="70390" fg:w="4918"/><text x="66.1114%" y="1023.50">tremo..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,361 samples, 4.08%)</title><rect x="66.3825%" y="997" width="4.0804%" height="15" fill="rgb(212,174,12)" fg:x="70947" fg:w="4361"/><text x="66.6325%" y="1007.50">trem..</text></g><g><title>tremor_script::srs::EventPayload::try_new (12 samples, 0.01%)</title><rect x="70.4517%" y="981" width="0.0112%" height="15" fill="rgb(246,67,9)" fg:x="75296" fg:w="12"/><text x="70.7017%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (191 samples, 0.18%)</title><rect x="70.6258%" y="917" width="0.1787%" height="15" fill="rgb(239,35,23)" fg:x="75482" fg:w="191"/><text x="70.8758%" y="927.50"></text></g><g><title>core::mem::replace (191 samples, 0.18%)</title><rect x="70.6258%" y="901" width="0.1787%" height="15" fill="rgb(211,167,0)" fg:x="75482" fg:w="191"/><text x="70.8758%" y="911.50"></text></g><g><title>core::ptr::read (191 samples, 0.18%)</title><rect x="70.6258%" y="885" width="0.1787%" height="15" fill="rgb(225,119,45)" fg:x="75482" fg:w="191"/><text x="70.8758%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (319 samples, 0.30%)</title><rect x="70.5575%" y="933" width="0.2985%" height="15" fill="rgb(210,162,6)" fg:x="75409" fg:w="319"/><text x="70.8075%" y="943.50"></text></g><g><title>core::mem::drop (55 samples, 0.05%)</title><rect x="70.8045%" y="917" width="0.0515%" height="15" fill="rgb(208,118,35)" fg:x="75673" fg:w="55"/><text x="71.0545%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (55 samples, 0.05%)</title><rect x="70.8045%" y="901" width="0.0515%" height="15" fill="rgb(239,4,53)" fg:x="75673" fg:w="55"/><text x="71.0545%" y="911.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="70.8559%" y="917" width="0.0131%" height="15" fill="rgb(213,130,21)" fg:x="75728" fg:w="14"/><text x="71.1059%" y="927.50"></text></g><g><title>std::sync::poison::Flag::done (11 samples, 0.01%)</title><rect x="70.8784%" y="885" width="0.0103%" height="15" fill="rgb(235,148,0)" fg:x="75752" fg:w="11"/><text x="71.1284%" y="895.50"></text></g><g><title>std::thread::panicking (11 samples, 0.01%)</title><rect x="70.8784%" y="869" width="0.0103%" height="15" fill="rgb(244,224,18)" fg:x="75752" fg:w="11"/><text x="71.1284%" y="879.50"></text></g><g><title>std::panicking::panicking (11 samples, 0.01%)</title><rect x="70.8784%" y="853" width="0.0103%" height="15" fill="rgb(211,214,4)" fg:x="75752" fg:w="11"/><text x="71.1284%" y="863.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (11 samples, 0.01%)</title><rect x="70.8784%" y="837" width="0.0103%" height="15" fill="rgb(206,119,25)" fg:x="75752" fg:w="11"/><text x="71.1284%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="70.8887%" y="869" width="0.0103%" height="15" fill="rgb(243,93,47)" fg:x="75763" fg:w="11"/><text x="71.1387%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (263 samples, 0.25%)</title><rect x="70.8990%" y="853" width="0.2461%" height="15" fill="rgb(224,194,6)" fg:x="75774" fg:w="263"/><text x="71.1490%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (322 samples, 0.30%)</title><rect x="70.8559%" y="933" width="0.3013%" height="15" fill="rgb(243,229,6)" fg:x="75728" fg:w="322"/><text x="71.1059%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (308 samples, 0.29%)</title><rect x="70.8690%" y="917" width="0.2882%" height="15" fill="rgb(207,23,50)" fg:x="75742" fg:w="308"/><text x="71.1190%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (308 samples, 0.29%)</title><rect x="70.8690%" y="901" width="0.2882%" height="15" fill="rgb(253,192,32)" fg:x="75742" fg:w="308"/><text x="71.1190%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (287 samples, 0.27%)</title><rect x="70.8887%" y="885" width="0.2685%" height="15" fill="rgb(213,21,6)" fg:x="75763" fg:w="287"/><text x="71.1387%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (276 samples, 0.26%)</title><rect x="70.8990%" y="869" width="0.2582%" height="15" fill="rgb(243,151,13)" fg:x="75774" fg:w="276"/><text x="71.1490%" y="879.50"></text></g><g><title>___pthread_mutex_unlock (13 samples, 0.01%)</title><rect x="71.1451%" y="853" width="0.0122%" height="15" fill="rgb(233,165,41)" fg:x="76037" fg:w="13"/><text x="71.3951%" y="863.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (24 samples, 0.02%)</title><rect x="71.1656%" y="885" width="0.0225%" height="15" fill="rgb(246,176,45)" fg:x="76059" fg:w="24"/><text x="71.4156%" y="895.50"></text></g><g><title>core::task::wake::Waker::will_wake (43 samples, 0.04%)</title><rect x="71.1572%" y="933" width="0.0402%" height="15" fill="rgb(217,170,52)" fg:x="76050" fg:w="43"/><text x="71.4072%" y="943.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (43 samples, 0.04%)</title><rect x="71.1572%" y="917" width="0.0402%" height="15" fill="rgb(214,203,54)" fg:x="76050" fg:w="43"/><text x="71.4072%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (34 samples, 0.03%)</title><rect x="71.1656%" y="901" width="0.0318%" height="15" fill="rgb(248,215,49)" fg:x="76059" fg:w="34"/><text x="71.4156%" y="911.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="71.2115%" y="901" width="0.0140%" height="15" fill="rgb(208,46,10)" fg:x="76108" fg:w="15"/><text x="71.4615%" y="911.50"></text></g><g><title>std::sync::poison::Flag::borrow (15 samples, 0.01%)</title><rect x="71.2115%" y="885" width="0.0140%" height="15" fill="rgb(254,5,31)" fg:x="76108" fg:w="15"/><text x="71.4615%" y="895.50"></text></g><g><title>std::thread::panicking (15 samples, 0.01%)</title><rect x="71.2115%" y="869" width="0.0140%" height="15" fill="rgb(222,104,33)" fg:x="76108" fg:w="15"/><text x="71.4615%" y="879.50"></text></g><g><title>std::panicking::panicking (15 samples, 0.01%)</title><rect x="71.2115%" y="853" width="0.0140%" height="15" fill="rgb(248,49,16)" fg:x="76108" fg:w="15"/><text x="71.4615%" y="863.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (15 samples, 0.01%)</title><rect x="71.2115%" y="837" width="0.0140%" height="15" fill="rgb(232,198,41)" fg:x="76108" fg:w="15"/><text x="71.4615%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="71.2124%" y="821" width="0.0131%" height="15" fill="rgb(214,125,3)" fg:x="76109" fg:w="14"/><text x="71.4624%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="71.2124%" y="805" width="0.0131%" height="15" fill="rgb(229,220,28)" fg:x="76109" fg:w="14"/><text x="71.4624%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,694 samples, 1.59%)</title><rect x="70.4630%" y="1029" width="1.5850%" height="15" fill="rgb(222,64,37)" fg:x="75308" fg:w="1694"/><text x="70.7130%" y="1039.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,694 samples, 1.59%)</title><rect x="70.4630%" y="1013" width="1.5850%" height="15" fill="rgb(249,184,13)" fg:x="75308" fg:w="1694"/><text x="70.7130%" y="1023.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,694 samples, 1.59%)</title><rect x="70.4630%" y="997" width="1.5850%" height="15" fill="rgb(252,176,6)" fg:x="75308" fg:w="1694"/><text x="70.7130%" y="1007.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,694 samples, 1.59%)</title><rect x="70.4630%" y="981" width="1.5850%" height="15" fill="rgb(228,153,7)" fg:x="75308" fg:w="1694"/><text x="70.7130%" y="991.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,694 samples, 1.59%)</title><rect x="70.4630%" y="965" width="1.5850%" height="15" fill="rgb(242,193,5)" fg:x="75308" fg:w="1694"/><text x="70.7130%" y="975.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,694 samples, 1.59%)</title><rect x="70.4630%" y="949" width="1.5850%" height="15" fill="rgb(232,140,9)" fg:x="75308" fg:w="1694"/><text x="70.7130%" y="959.50"></text></g><g><title>event_listener::Inner::lock (909 samples, 0.85%)</title><rect x="71.1975%" y="933" width="0.8505%" height="15" fill="rgb(213,222,16)" fg:x="76093" fg:w="909"/><text x="71.4475%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (894 samples, 0.84%)</title><rect x="71.2115%" y="917" width="0.8365%" height="15" fill="rgb(222,75,50)" fg:x="76108" fg:w="894"/><text x="71.4615%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (879 samples, 0.82%)</title><rect x="71.2255%" y="901" width="0.8224%" height="15" fill="rgb(205,180,2)" fg:x="76123" fg:w="879"/><text x="71.4755%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (832 samples, 0.78%)</title><rect x="71.2695%" y="885" width="0.7785%" height="15" fill="rgb(216,34,7)" fg:x="76170" fg:w="832"/><text x="71.5195%" y="895.50"></text></g><g><title>___pthread_mutex_lock (832 samples, 0.78%)</title><rect x="71.2695%" y="869" width="0.7785%" height="15" fill="rgb(253,16,32)" fg:x="76170" fg:w="832"/><text x="71.5195%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="72.0639%" y="981" width="0.0122%" height="15" fill="rgb(208,97,28)" fg:x="77019" fg:w="13"/><text x="72.3139%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (316 samples, 0.30%)</title><rect x="72.0761%" y="981" width="0.2957%" height="15" fill="rgb(225,92,11)" fg:x="77032" fg:w="316"/><text x="72.3261%" y="991.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.01%)</title><rect x="72.4812%" y="965" width="0.0122%" height="15" fill="rgb(243,38,12)" fg:x="77465" fg:w="13"/><text x="72.7312%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (738 samples, 0.69%)</title><rect x="72.4934%" y="965" width="0.6905%" height="15" fill="rgb(208,139,16)" fg:x="77478" fg:w="738"/><text x="72.7434%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (17 samples, 0.02%)</title><rect x="73.1839%" y="949" width="0.0159%" height="15" fill="rgb(227,24,9)" fg:x="78216" fg:w="17"/><text x="73.4339%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12,408 samples, 11.61%)</title><rect x="61.5947%" y="1125" width="11.6097%" height="15" fill="rgb(206,62,11)" fg:x="65830" fg:w="12408"/><text x="61.8447%" y="1135.50">std::thread::loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12,407 samples, 11.61%)</title><rect x="61.5957%" y="1109" width="11.6088%" height="15" fill="rgb(228,134,27)" fg:x="65831" fg:w="12407"/><text x="61.8457%" y="1119.50">std::thread::loca..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (12,407 samples, 11.61%)</title><rect x="61.5957%" y="1093" width="11.6088%" height="15" fill="rgb(205,55,33)" fg:x="65831" fg:w="12407"/><text x="61.8457%" y="1103.50">async_std::task::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (12,407 samples, 11.61%)</title><rect x="61.5957%" y="1077" width="11.6088%" height="15" fill="rgb(243,75,43)" fg:x="65831" fg:w="12407"/><text x="61.8457%" y="1087.50">&lt;async_std::task:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,407 samples, 11.61%)</title><rect x="61.5957%" y="1061" width="11.6088%" height="15" fill="rgb(223,27,42)" fg:x="65831" fg:w="12407"/><text x="61.8457%" y="1071.50">&lt;core::future::fr..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,930 samples, 2.74%)</title><rect x="70.4630%" y="1045" width="2.7415%" height="15" fill="rgb(232,189,33)" fg:x="75308" fg:w="2930"/><text x="70.7130%" y="1055.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,236 samples, 1.16%)</title><rect x="72.0480%" y="1029" width="1.1565%" height="15" fill="rgb(210,9,39)" fg:x="77002" fg:w="1236"/><text x="72.2980%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,236 samples, 1.16%)</title><rect x="72.0480%" y="1013" width="1.1565%" height="15" fill="rgb(242,85,26)" fg:x="77002" fg:w="1236"/><text x="72.2980%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,236 samples, 1.16%)</title><rect x="72.0480%" y="997" width="1.1565%" height="15" fill="rgb(248,44,4)" fg:x="77002" fg:w="1236"/><text x="72.2980%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (890 samples, 0.83%)</title><rect x="72.3717%" y="981" width="0.8327%" height="15" fill="rgb(250,96,46)" fg:x="77348" fg:w="890"/><text x="72.6217%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (22 samples, 0.02%)</title><rect x="73.1839%" y="965" width="0.0206%" height="15" fill="rgb(229,116,26)" fg:x="78216" fg:w="22"/><text x="73.4339%" y="975.50"></text></g><g><title>tremor_common::time::nanotime (11 samples, 0.01%)</title><rect x="73.2045%" y="1125" width="0.0103%" height="15" fill="rgb(246,94,34)" fg:x="78238" fg:w="11"/><text x="73.4545%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (11 samples, 0.01%)</title><rect x="73.2045%" y="1109" width="0.0103%" height="15" fill="rgb(251,73,21)" fg:x="78238" fg:w="11"/><text x="73.4545%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (11 samples, 0.01%)</title><rect x="73.2045%" y="1093" width="0.0103%" height="15" fill="rgb(254,121,25)" fg:x="78238" fg:w="11"/><text x="73.4545%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (11 samples, 0.01%)</title><rect x="73.2045%" y="1077" width="0.0103%" height="15" fill="rgb(215,161,49)" fg:x="78238" fg:w="11"/><text x="73.4545%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (15 samples, 0.01%)</title><rect x="73.2148%" y="1125" width="0.0140%" height="15" fill="rgb(221,43,13)" fg:x="78249" fg:w="15"/><text x="73.4648%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (30 samples, 0.03%)</title><rect x="73.2288%" y="1125" width="0.0281%" height="15" fill="rgb(249,5,37)" fg:x="78264" fg:w="30"/><text x="73.4788%" y="1135.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::default::Default&gt;::default (15 samples, 0.01%)</title><rect x="73.8042%" y="1029" width="0.0140%" height="15" fill="rgb(226,25,44)" fg:x="78879" fg:w="15"/><text x="74.0542%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::default::Default for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::default (15 samples, 0.01%)</title><rect x="73.8042%" y="1013" width="0.0140%" height="15" fill="rgb(238,189,16)" fg:x="78879" fg:w="15"/><text x="74.0542%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (35 samples, 0.03%)</title><rect x="73.8323%" y="997" width="0.0327%" height="15" fill="rgb(251,186,8)" fg:x="78909" fg:w="35"/><text x="74.0823%" y="1007.50"></text></g><g><title>std::collections::hash::map::RandomState::new (35 samples, 0.03%)</title><rect x="73.8323%" y="981" width="0.0327%" height="15" fill="rgb(254,34,31)" fg:x="78909" fg:w="35"/><text x="74.0823%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.03%)</title><rect x="73.8323%" y="965" width="0.0327%" height="15" fill="rgb(225,215,27)" fg:x="78909" fg:w="35"/><text x="74.0823%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.03%)</title><rect x="73.8323%" y="949" width="0.0327%" height="15" fill="rgb(221,192,48)" fg:x="78909" fg:w="35"/><text x="74.0823%" y="959.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (16 samples, 0.01%)</title><rect x="73.8501%" y="933" width="0.0150%" height="15" fill="rgb(219,137,20)" fg:x="78928" fg:w="16"/><text x="74.1001%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="73.9006%" y="757" width="0.0468%" height="15" fill="rgb(219,84,11)" fg:x="78982" fg:w="50"/><text x="74.1506%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (50 samples, 0.05%)</title><rect x="73.9006%" y="741" width="0.0468%" height="15" fill="rgb(224,10,23)" fg:x="78982" fg:w="50"/><text x="74.1506%" y="751.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (44 samples, 0.04%)</title><rect x="73.9062%" y="725" width="0.0412%" height="15" fill="rgb(248,22,39)" fg:x="78988" fg:w="44"/><text x="74.1562%" y="735.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (36 samples, 0.03%)</title><rect x="73.9137%" y="709" width="0.0337%" height="15" fill="rgb(212,154,20)" fg:x="78996" fg:w="36"/><text x="74.1637%" y="719.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (36 samples, 0.03%)</title><rect x="73.9137%" y="693" width="0.0337%" height="15" fill="rgb(236,199,50)" fg:x="78996" fg:w="36"/><text x="74.1637%" y="703.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (36 samples, 0.03%)</title><rect x="73.9137%" y="677" width="0.0337%" height="15" fill="rgb(211,9,17)" fg:x="78996" fg:w="36"/><text x="74.1637%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (15 samples, 0.01%)</title><rect x="73.9633%" y="677" width="0.0140%" height="15" fill="rgb(243,216,36)" fg:x="79049" fg:w="15"/><text x="74.2133%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="73.9633%" y="661" width="0.0140%" height="15" fill="rgb(250,2,10)" fg:x="79049" fg:w="15"/><text x="74.2133%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.03%)</title><rect x="73.9530%" y="757" width="0.0253%" height="15" fill="rgb(226,50,48)" fg:x="79038" fg:w="27"/><text x="74.2030%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.03%)</title><rect x="73.9530%" y="741" width="0.0253%" height="15" fill="rgb(243,81,16)" fg:x="79038" fg:w="27"/><text x="74.2030%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.03%)</title><rect x="73.9530%" y="725" width="0.0253%" height="15" fill="rgb(250,14,2)" fg:x="79038" fg:w="27"/><text x="74.2030%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.03%)</title><rect x="73.9530%" y="709" width="0.0253%" height="15" fill="rgb(233,135,29)" fg:x="79038" fg:w="27"/><text x="74.2030%" y="719.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (27 samples, 0.03%)</title><rect x="73.9530%" y="693" width="0.0253%" height="15" fill="rgb(224,64,43)" fg:x="79038" fg:w="27"/><text x="74.2030%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (173 samples, 0.16%)</title><rect x="73.8894%" y="805" width="0.1619%" height="15" fill="rgb(238,84,13)" fg:x="78970" fg:w="173"/><text x="74.1394%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (173 samples, 0.16%)</title><rect x="73.8894%" y="789" width="0.1619%" height="15" fill="rgb(253,48,26)" fg:x="78970" fg:w="173"/><text x="74.1394%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (164 samples, 0.15%)</title><rect x="73.8978%" y="773" width="0.1534%" height="15" fill="rgb(205,223,31)" fg:x="78979" fg:w="164"/><text x="74.1478%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::take (77 samples, 0.07%)</title><rect x="73.9792%" y="757" width="0.0720%" height="15" fill="rgb(221,41,32)" fg:x="79066" fg:w="77"/><text x="74.2292%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (77 samples, 0.07%)</title><rect x="73.9792%" y="741" width="0.0720%" height="15" fill="rgb(213,158,31)" fg:x="79066" fg:w="77"/><text x="74.2292%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (202 samples, 0.19%)</title><rect x="73.8650%" y="933" width="0.1890%" height="15" fill="rgb(245,126,43)" fg:x="78944" fg:w="202"/><text x="74.1150%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (192 samples, 0.18%)</title><rect x="73.8744%" y="917" width="0.1796%" height="15" fill="rgb(227,7,22)" fg:x="78954" fg:w="192"/><text x="74.1244%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (192 samples, 0.18%)</title><rect x="73.8744%" y="901" width="0.1796%" height="15" fill="rgb(252,90,44)" fg:x="78954" fg:w="192"/><text x="74.1244%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (192 samples, 0.18%)</title><rect x="73.8744%" y="885" width="0.1796%" height="15" fill="rgb(253,91,0)" fg:x="78954" fg:w="192"/><text x="74.1244%" y="895.50"></text></g><g><title>alloc::alloc::alloc (192 samples, 0.18%)</title><rect x="73.8744%" y="869" width="0.1796%" height="15" fill="rgb(252,175,49)" fg:x="78954" fg:w="192"/><text x="74.1244%" y="879.50"></text></g><g><title>__rg_alloc (192 samples, 0.18%)</title><rect x="73.8744%" y="853" width="0.1796%" height="15" fill="rgb(246,150,1)" fg:x="78954" fg:w="192"/><text x="74.1244%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (192 samples, 0.18%)</title><rect x="73.8744%" y="837" width="0.1796%" height="15" fill="rgb(241,192,25)" fg:x="78954" fg:w="192"/><text x="74.1244%" y="847.50"></text></g><g><title>rust_alloc (186 samples, 0.17%)</title><rect x="73.8800%" y="821" width="0.1740%" height="15" fill="rgb(239,187,11)" fg:x="78960" fg:w="186"/><text x="74.1300%" y="831.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (261 samples, 0.24%)</title><rect x="73.8183%" y="1029" width="0.2442%" height="15" fill="rgb(218,202,51)" fg:x="78894" fg:w="261"/><text x="74.0683%" y="1039.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (246 samples, 0.23%)</title><rect x="73.8323%" y="1013" width="0.2302%" height="15" fill="rgb(225,176,8)" fg:x="78909" fg:w="246"/><text x="74.0823%" y="1023.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (211 samples, 0.20%)</title><rect x="73.8650%" y="997" width="0.1974%" height="15" fill="rgb(219,122,41)" fg:x="78944" fg:w="211"/><text x="74.1150%" y="1007.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (211 samples, 0.20%)</title><rect x="73.8650%" y="981" width="0.1974%" height="15" fill="rgb(248,140,20)" fg:x="78944" fg:w="211"/><text x="74.1150%" y="991.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (211 samples, 0.20%)</title><rect x="73.8650%" y="965" width="0.1974%" height="15" fill="rgb(245,41,37)" fg:x="78944" fg:w="211"/><text x="74.1150%" y="975.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (211 samples, 0.20%)</title><rect x="73.8650%" y="949" width="0.1974%" height="15" fill="rgb(235,82,39)" fg:x="78944" fg:w="211"/><text x="74.1150%" y="959.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="74.5864%" y="789" width="0.0122%" height="15" fill="rgb(230,108,42)" fg:x="79715" fg:w="13"/><text x="74.8364%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="74.6108%" y="741" width="0.0140%" height="15" fill="rgb(215,150,50)" fg:x="79741" fg:w="15"/><text x="74.8608%" y="751.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="74.6267%" y="725" width="0.0112%" height="15" fill="rgb(233,212,5)" fg:x="79758" fg:w="12"/><text x="74.8767%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (73 samples, 0.07%)</title><rect x="74.6108%" y="773" width="0.0683%" height="15" fill="rgb(245,80,22)" fg:x="79741" fg:w="73"/><text x="74.8608%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (73 samples, 0.07%)</title><rect x="74.6108%" y="757" width="0.0683%" height="15" fill="rgb(238,129,16)" fg:x="79741" fg:w="73"/><text x="74.8608%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (58 samples, 0.05%)</title><rect x="74.6248%" y="741" width="0.0543%" height="15" fill="rgb(240,19,0)" fg:x="79756" fg:w="58"/><text x="74.8748%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (44 samples, 0.04%)</title><rect x="74.6379%" y="725" width="0.0412%" height="15" fill="rgb(232,42,35)" fg:x="79770" fg:w="44"/><text x="74.8879%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (44 samples, 0.04%)</title><rect x="74.6379%" y="709" width="0.0412%" height="15" fill="rgb(223,130,24)" fg:x="79770" fg:w="44"/><text x="74.8879%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (44 samples, 0.04%)</title><rect x="74.6379%" y="693" width="0.0412%" height="15" fill="rgb(237,16,22)" fg:x="79770" fg:w="44"/><text x="74.8879%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (295 samples, 0.28%)</title><rect x="74.5846%" y="821" width="0.2760%" height="15" fill="rgb(248,192,20)" fg:x="79713" fg:w="295"/><text x="74.8346%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (294 samples, 0.28%)</title><rect x="74.5855%" y="805" width="0.2751%" height="15" fill="rgb(233,167,2)" fg:x="79714" fg:w="294"/><text x="74.8355%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (280 samples, 0.26%)</title><rect x="74.5986%" y="789" width="0.2620%" height="15" fill="rgb(252,71,44)" fg:x="79728" fg:w="280"/><text x="74.8486%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::take (182 samples, 0.17%)</title><rect x="74.6903%" y="773" width="0.1703%" height="15" fill="rgb(238,37,47)" fg:x="79826" fg:w="182"/><text x="74.9403%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (182 samples, 0.17%)</title><rect x="74.6903%" y="757" width="0.1703%" height="15" fill="rgb(214,202,54)" fg:x="79826" fg:w="182"/><text x="74.9403%" y="767.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (333 samples, 0.31%)</title><rect x="74.5537%" y="965" width="0.3116%" height="15" fill="rgb(254,165,40)" fg:x="79680" fg:w="333"/><text x="74.8037%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (333 samples, 0.31%)</title><rect x="74.5537%" y="949" width="0.3116%" height="15" fill="rgb(246,173,38)" fg:x="79680" fg:w="333"/><text x="74.8037%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (314 samples, 0.29%)</title><rect x="74.5715%" y="933" width="0.2938%" height="15" fill="rgb(215,3,27)" fg:x="79699" fg:w="314"/><text x="74.8215%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (314 samples, 0.29%)</title><rect x="74.5715%" y="917" width="0.2938%" height="15" fill="rgb(239,169,51)" fg:x="79699" fg:w="314"/><text x="74.8215%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (314 samples, 0.29%)</title><rect x="74.5715%" y="901" width="0.2938%" height="15" fill="rgb(212,5,25)" fg:x="79699" fg:w="314"/><text x="74.8215%" y="911.50"></text></g><g><title>alloc::alloc::alloc (314 samples, 0.29%)</title><rect x="74.5715%" y="885" width="0.2938%" height="15" fill="rgb(243,45,17)" fg:x="79699" fg:w="314"/><text x="74.8215%" y="895.50"></text></g><g><title>__rg_alloc (314 samples, 0.29%)</title><rect x="74.5715%" y="869" width="0.2938%" height="15" fill="rgb(242,97,9)" fg:x="79699" fg:w="314"/><text x="74.8215%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (314 samples, 0.29%)</title><rect x="74.5715%" y="853" width="0.2938%" height="15" fill="rgb(228,71,31)" fg:x="79699" fg:w="314"/><text x="74.8215%" y="863.50"></text></g><g><title>rust_alloc (311 samples, 0.29%)</title><rect x="74.5743%" y="837" width="0.2910%" height="15" fill="rgb(252,184,16)" fg:x="79702" fg:w="311"/><text x="74.8243%" y="847.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (20 samples, 0.02%)</title><rect x="74.8653%" y="869" width="0.0187%" height="15" fill="rgb(236,169,46)" fg:x="80013" fg:w="20"/><text x="75.1153%" y="879.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (22 samples, 0.02%)</title><rect x="74.8840%" y="853" width="0.0206%" height="15" fill="rgb(207,17,47)" fg:x="80033" fg:w="22"/><text x="75.1340%" y="863.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (36 samples, 0.03%)</title><rect x="74.8840%" y="869" width="0.0337%" height="15" fill="rgb(206,201,28)" fg:x="80033" fg:w="36"/><text x="75.1340%" y="879.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="74.9046%" y="853" width="0.0131%" height="15" fill="rgb(224,184,23)" fg:x="80055" fg:w="14"/><text x="75.1546%" y="863.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="74.9046%" y="837" width="0.0131%" height="15" fill="rgb(208,139,48)" fg:x="80055" fg:w="14"/><text x="75.1546%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (14 samples, 0.01%)</title><rect x="74.9046%" y="821" width="0.0131%" height="15" fill="rgb(208,130,10)" fg:x="80055" fg:w="14"/><text x="75.1546%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (23 samples, 0.02%)</title><rect x="74.9682%" y="853" width="0.0215%" height="15" fill="rgb(211,213,45)" fg:x="80123" fg:w="23"/><text x="75.2182%" y="863.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (23 samples, 0.02%)</title><rect x="74.9682%" y="837" width="0.0215%" height="15" fill="rgb(235,100,30)" fg:x="80123" fg:w="23"/><text x="75.2182%" y="847.50"></text></g><g><title>core::mem::replace (23 samples, 0.02%)</title><rect x="74.9682%" y="821" width="0.0215%" height="15" fill="rgb(206,144,31)" fg:x="80123" fg:w="23"/><text x="75.2182%" y="831.50"></text></g><g><title>core::ptr::write (23 samples, 0.02%)</title><rect x="74.9682%" y="805" width="0.0215%" height="15" fill="rgb(224,200,26)" fg:x="80123" fg:w="23"/><text x="75.2182%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (145 samples, 0.14%)</title><rect x="74.8653%" y="933" width="0.1357%" height="15" fill="rgb(247,104,53)" fg:x="80013" fg:w="145"/><text x="75.1153%" y="943.50"></text></g><g><title>std::collections::hash::map::RandomState::new (145 samples, 0.14%)</title><rect x="74.8653%" y="917" width="0.1357%" height="15" fill="rgb(220,14,17)" fg:x="80013" fg:w="145"/><text x="75.1153%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (145 samples, 0.14%)</title><rect x="74.8653%" y="901" width="0.1357%" height="15" fill="rgb(230,140,40)" fg:x="80013" fg:w="145"/><text x="75.1153%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (145 samples, 0.14%)</title><rect x="74.8653%" y="885" width="0.1357%" height="15" fill="rgb(229,2,41)" fg:x="80013" fg:w="145"/><text x="75.1153%" y="895.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (89 samples, 0.08%)</title><rect x="74.9177%" y="869" width="0.0833%" height="15" fill="rgb(232,89,16)" fg:x="80069" fg:w="89"/><text x="75.1677%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12 samples, 0.01%)</title><rect x="74.9897%" y="853" width="0.0112%" height="15" fill="rgb(247,59,52)" fg:x="80146" fg:w="12"/><text x="75.2397%" y="863.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (20 samples, 0.02%)</title><rect x="75.0009%" y="869" width="0.0187%" height="15" fill="rgb(226,110,21)" fg:x="80158" fg:w="20"/><text x="75.2509%" y="879.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="75.0599%" y="741" width="0.0103%" height="15" fill="rgb(224,176,43)" fg:x="80221" fg:w="11"/><text x="75.3099%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (16 samples, 0.01%)</title><rect x="75.1085%" y="581" width="0.0150%" height="15" fill="rgb(221,73,6)" fg:x="80273" fg:w="16"/><text x="75.3585%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="75.1085%" y="565" width="0.0150%" height="15" fill="rgb(232,78,19)" fg:x="80273" fg:w="16"/><text x="75.3585%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="75.0973%" y="629" width="0.0290%" height="15" fill="rgb(233,112,48)" fg:x="80261" fg:w="31"/><text x="75.3473%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="75.0973%" y="613" width="0.0290%" height="15" fill="rgb(243,131,47)" fg:x="80261" fg:w="31"/><text x="75.3473%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (21 samples, 0.02%)</title><rect x="75.1067%" y="597" width="0.0196%" height="15" fill="rgb(226,51,1)" fg:x="80271" fg:w="21"/><text x="75.3567%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (39 samples, 0.04%)</title><rect x="75.0973%" y="645" width="0.0365%" height="15" fill="rgb(247,58,7)" fg:x="80261" fg:w="39"/><text x="75.3473%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (51 samples, 0.05%)</title><rect x="75.0936%" y="661" width="0.0477%" height="15" fill="rgb(209,7,32)" fg:x="80257" fg:w="51"/><text x="75.3436%" y="671.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (42 samples, 0.04%)</title><rect x="75.1619%" y="645" width="0.0393%" height="15" fill="rgb(209,39,41)" fg:x="80330" fg:w="42"/><text x="75.4119%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (381 samples, 0.36%)</title><rect x="75.0936%" y="693" width="0.3565%" height="15" fill="rgb(226,182,46)" fg:x="80257" fg:w="381"/><text x="75.3436%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (381 samples, 0.36%)</title><rect x="75.0936%" y="677" width="0.3565%" height="15" fill="rgb(230,219,10)" fg:x="80257" fg:w="381"/><text x="75.3436%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (330 samples, 0.31%)</title><rect x="75.1413%" y="661" width="0.3088%" height="15" fill="rgb(227,175,30)" fg:x="80308" fg:w="330"/><text x="75.3913%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (266 samples, 0.25%)</title><rect x="75.2012%" y="645" width="0.2489%" height="15" fill="rgb(217,2,50)" fg:x="80372" fg:w="266"/><text x="75.4512%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (266 samples, 0.25%)</title><rect x="75.2012%" y="629" width="0.2489%" height="15" fill="rgb(229,160,0)" fg:x="80372" fg:w="266"/><text x="75.4512%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (266 samples, 0.25%)</title><rect x="75.2012%" y="613" width="0.2489%" height="15" fill="rgb(207,78,37)" fg:x="80372" fg:w="266"/><text x="75.4512%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (13 samples, 0.01%)</title><rect x="75.4529%" y="661" width="0.0122%" height="15" fill="rgb(225,57,0)" fg:x="80641" fg:w="13"/><text x="75.7029%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (13 samples, 0.01%)</title><rect x="75.4529%" y="645" width="0.0122%" height="15" fill="rgb(232,154,2)" fg:x="80641" fg:w="13"/><text x="75.7029%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="75.4529%" y="629" width="0.0122%" height="15" fill="rgb(241,212,25)" fg:x="80641" fg:w="13"/><text x="75.7029%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::take (11 samples, 0.01%)</title><rect x="75.4650%" y="661" width="0.0103%" height="15" fill="rgb(226,69,20)" fg:x="80654" fg:w="11"/><text x="75.7150%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (11 samples, 0.01%)</title><rect x="75.4650%" y="645" width="0.0103%" height="15" fill="rgb(247,184,54)" fg:x="80654" fg:w="11"/><text x="75.7150%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="75.4501%" y="693" width="0.0290%" height="15" fill="rgb(210,145,0)" fg:x="80638" fg:w="31"/><text x="75.7001%" y="703.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (28 samples, 0.03%)</title><rect x="75.4529%" y="677" width="0.0262%" height="15" fill="rgb(253,82,12)" fg:x="80641" fg:w="28"/><text x="75.7029%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="75.4791%" y="693" width="0.0281%" height="15" fill="rgb(245,42,11)" fg:x="80669" fg:w="30"/><text x="75.7291%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="75.4800%" y="677" width="0.0271%" height="15" fill="rgb(219,147,32)" fg:x="80670" fg:w="29"/><text x="75.7300%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="75.4800%" y="661" width="0.0271%" height="15" fill="rgb(246,12,7)" fg:x="80670" fg:w="29"/><text x="75.7300%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.02%)</title><rect x="75.4828%" y="645" width="0.0243%" height="15" fill="rgb(243,50,9)" fg:x="80673" fg:w="26"/><text x="75.7328%" y="655.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (26 samples, 0.02%)</title><rect x="75.4828%" y="629" width="0.0243%" height="15" fill="rgb(219,149,6)" fg:x="80673" fg:w="26"/><text x="75.7328%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (710 samples, 0.66%)</title><rect x="75.0777%" y="741" width="0.6643%" height="15" fill="rgb(241,51,42)" fg:x="80240" fg:w="710"/><text x="75.3277%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (708 samples, 0.66%)</title><rect x="75.0795%" y="725" width="0.6624%" height="15" fill="rgb(226,128,27)" fg:x="80242" fg:w="708"/><text x="75.3295%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (694 samples, 0.65%)</title><rect x="75.0926%" y="709" width="0.6494%" height="15" fill="rgb(244,144,4)" fg:x="80256" fg:w="694"/><text x="75.3426%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (248 samples, 0.23%)</title><rect x="75.5099%" y="693" width="0.2320%" height="15" fill="rgb(221,4,13)" fg:x="80702" fg:w="248"/><text x="75.7599%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (248 samples, 0.23%)</title><rect x="75.5099%" y="677" width="0.2320%" height="15" fill="rgb(208,170,28)" fg:x="80702" fg:w="248"/><text x="75.7599%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (942 samples, 0.88%)</title><rect x="74.8653%" y="965" width="0.8814%" height="15" fill="rgb(226,131,13)" fg:x="80013" fg:w="942"/><text x="75.1153%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (942 samples, 0.88%)</title><rect x="74.8653%" y="949" width="0.8814%" height="15" fill="rgb(215,72,41)" fg:x="80013" fg:w="942"/><text x="75.1153%" y="959.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (797 samples, 0.75%)</title><rect x="75.0009%" y="933" width="0.7457%" height="15" fill="rgb(243,108,20)" fg:x="80158" fg:w="797"/><text x="75.2509%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (797 samples, 0.75%)</title><rect x="75.0009%" y="917" width="0.7457%" height="15" fill="rgb(230,189,17)" fg:x="80158" fg:w="797"/><text x="75.2509%" y="927.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (797 samples, 0.75%)</title><rect x="75.0009%" y="901" width="0.7457%" height="15" fill="rgb(220,50,17)" fg:x="80158" fg:w="797"/><text x="75.2509%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (797 samples, 0.75%)</title><rect x="75.0009%" y="885" width="0.7457%" height="15" fill="rgb(248,152,48)" fg:x="80158" fg:w="797"/><text x="75.2509%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (777 samples, 0.73%)</title><rect x="75.0196%" y="869" width="0.7270%" height="15" fill="rgb(244,91,11)" fg:x="80178" fg:w="777"/><text x="75.2696%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (746 samples, 0.70%)</title><rect x="75.0487%" y="853" width="0.6980%" height="15" fill="rgb(220,157,5)" fg:x="80209" fg:w="746"/><text x="75.2987%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (746 samples, 0.70%)</title><rect x="75.0487%" y="837" width="0.6980%" height="15" fill="rgb(253,137,8)" fg:x="80209" fg:w="746"/><text x="75.2987%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (746 samples, 0.70%)</title><rect x="75.0487%" y="821" width="0.6980%" height="15" fill="rgb(217,137,51)" fg:x="80209" fg:w="746"/><text x="75.2987%" y="831.50"></text></g><g><title>alloc::alloc::alloc (744 samples, 0.70%)</title><rect x="75.0505%" y="805" width="0.6961%" height="15" fill="rgb(218,209,53)" fg:x="80211" fg:w="744"/><text x="75.3005%" y="815.50"></text></g><g><title>__rg_alloc (744 samples, 0.70%)</title><rect x="75.0505%" y="789" width="0.6961%" height="15" fill="rgb(249,137,25)" fg:x="80211" fg:w="744"/><text x="75.3005%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (744 samples, 0.70%)</title><rect x="75.0505%" y="773" width="0.6961%" height="15" fill="rgb(239,155,26)" fg:x="80211" fg:w="744"/><text x="75.3005%" y="783.50"></text></g><g><title>rust_alloc (734 samples, 0.69%)</title><rect x="75.0599%" y="757" width="0.6868%" height="15" fill="rgb(227,85,46)" fg:x="80221" fg:w="734"/><text x="75.3099%" y="767.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (1,435 samples, 1.34%)</title><rect x="74.4152%" y="1013" width="1.3427%" height="15" fill="rgb(251,107,43)" fg:x="79532" fg:w="1435"/><text x="74.6652%" y="1023.50"></text></g><g><title>value_trait::Builder::object (1,287 samples, 1.20%)</title><rect x="74.5537%" y="997" width="1.2042%" height="15" fill="rgb(234,170,33)" fg:x="79680" fg:w="1287"/><text x="74.8037%" y="1007.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (1,287 samples, 1.20%)</title><rect x="74.5537%" y="981" width="1.2042%" height="15" fill="rgb(206,29,35)" fg:x="79680" fg:w="1287"/><text x="74.8037%" y="991.50"></text></g><g><title>tremor_value::value::Value::Object (12 samples, 0.01%)</title><rect x="75.7467%" y="965" width="0.0112%" height="15" fill="rgb(227,138,25)" fg:x="80955" fg:w="12"/><text x="75.9967%" y="975.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (2,182 samples, 2.04%)</title><rect x="73.7266%" y="1045" width="2.0416%" height="15" fill="rgb(249,131,35)" fg:x="78796" fg:w="2182"/><text x="73.9766%" y="1055.50">&lt;..</text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (1,823 samples, 1.71%)</title><rect x="74.0625%" y="1029" width="1.7057%" height="15" fill="rgb(239,6,40)" fg:x="79155" fg:w="1823"/><text x="74.3125%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::default::Default for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::default (11 samples, 0.01%)</title><rect x="75.7579%" y="1013" width="0.0103%" height="15" fill="rgb(246,136,47)" fg:x="80967" fg:w="11"/><text x="76.0079%" y="1023.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="75.7579%" y="997" width="0.0103%" height="15" fill="rgb(253,58,26)" fg:x="80967" fg:w="11"/><text x="76.0079%" y="1007.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (11 samples, 0.01%)</title><rect x="75.7579%" y="981" width="0.0103%" height="15" fill="rgb(237,141,10)" fg:x="80967" fg:w="11"/><text x="76.0079%" y="991.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (36 samples, 0.03%)</title><rect x="75.7897%" y="981" width="0.0337%" height="15" fill="rgb(234,156,12)" fg:x="81001" fg:w="36"/><text x="76.0397%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="75.8131%" y="965" width="0.0103%" height="15" fill="rgb(243,224,36)" fg:x="81026" fg:w="11"/><text x="76.0631%" y="975.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="75.8131%" y="949" width="0.0103%" height="15" fill="rgb(205,229,51)" fg:x="81026" fg:w="11"/><text x="76.0631%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="75.8131%" y="933" width="0.0103%" height="15" fill="rgb(223,189,4)" fg:x="81026" fg:w="11"/><text x="76.0631%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="75.8131%" y="917" width="0.0103%" height="15" fill="rgb(249,167,54)" fg:x="81026" fg:w="11"/><text x="76.0631%" y="927.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="75.8131%" y="901" width="0.0103%" height="15" fill="rgb(218,34,28)" fg:x="81026" fg:w="11"/><text x="76.0631%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="75.8131%" y="885" width="0.0103%" height="15" fill="rgb(232,109,42)" fg:x="81026" fg:w="11"/><text x="76.0631%" y="895.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="75.8720%" y="837" width="0.0140%" height="15" fill="rgb(248,214,46)" fg:x="81089" fg:w="15"/><text x="76.1220%" y="847.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="75.8739%" y="821" width="0.0122%" height="15" fill="rgb(244,216,40)" fg:x="81091" fg:w="13"/><text x="76.1239%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (49 samples, 0.05%)</title><rect x="75.8468%" y="917" width="0.0458%" height="15" fill="rgb(231,226,31)" fg:x="81062" fg:w="49"/><text x="76.0968%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (49 samples, 0.05%)</title><rect x="75.8468%" y="901" width="0.0458%" height="15" fill="rgb(238,38,43)" fg:x="81062" fg:w="49"/><text x="76.0968%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (42 samples, 0.04%)</title><rect x="75.8533%" y="885" width="0.0393%" height="15" fill="rgb(208,88,43)" fg:x="81069" fg:w="42"/><text x="76.1033%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (42 samples, 0.04%)</title><rect x="75.8533%" y="869" width="0.0393%" height="15" fill="rgb(205,136,37)" fg:x="81069" fg:w="42"/><text x="76.1033%" y="879.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (38 samples, 0.04%)</title><rect x="75.8571%" y="853" width="0.0356%" height="15" fill="rgb(237,34,14)" fg:x="81073" fg:w="38"/><text x="76.1071%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (50 samples, 0.05%)</title><rect x="75.8468%" y="949" width="0.0468%" height="15" fill="rgb(236,193,44)" fg:x="81062" fg:w="50"/><text x="76.0968%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (50 samples, 0.05%)</title><rect x="75.8468%" y="933" width="0.0468%" height="15" fill="rgb(231,48,10)" fg:x="81062" fg:w="50"/><text x="76.0968%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (66 samples, 0.06%)</title><rect x="75.8355%" y="965" width="0.0618%" height="15" fill="rgb(213,141,34)" fg:x="81050" fg:w="66"/><text x="76.0855%" y="975.50"></text></g><g><title>rust_dealloc (86 samples, 0.08%)</title><rect x="75.8234%" y="981" width="0.0805%" height="15" fill="rgb(249,130,34)" fg:x="81037" fg:w="86"/><text x="76.0734%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (146 samples, 0.14%)</title><rect x="75.7794%" y="1029" width="0.1366%" height="15" fill="rgb(219,42,41)" fg:x="80990" fg:w="146"/><text x="76.0294%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (146 samples, 0.14%)</title><rect x="75.7794%" y="1013" width="0.1366%" height="15" fill="rgb(224,100,54)" fg:x="80990" fg:w="146"/><text x="76.0294%" y="1023.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (146 samples, 0.14%)</title><rect x="75.7794%" y="997" width="0.1366%" height="15" fill="rgb(229,200,27)" fg:x="80990" fg:w="146"/><text x="76.0294%" y="1007.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (13 samples, 0.01%)</title><rect x="75.9039%" y="981" width="0.0122%" height="15" fill="rgb(217,118,10)" fg:x="81123" fg:w="13"/><text x="76.1539%" y="991.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (166 samples, 0.16%)</title><rect x="75.7682%" y="1045" width="0.1553%" height="15" fill="rgb(206,22,3)" fg:x="80978" fg:w="166"/><text x="76.0182%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (55 samples, 0.05%)</title><rect x="75.9291%" y="1045" width="0.0515%" height="15" fill="rgb(232,163,46)" fg:x="81150" fg:w="55"/><text x="76.1791%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (55 samples, 0.05%)</title><rect x="75.9291%" y="1029" width="0.0515%" height="15" fill="rgb(206,95,13)" fg:x="81150" fg:w="55"/><text x="76.1791%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (55 samples, 0.05%)</title><rect x="75.9291%" y="1013" width="0.0515%" height="15" fill="rgb(253,154,18)" fg:x="81150" fg:w="55"/><text x="76.1791%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (32 samples, 0.03%)</title><rect x="75.9506%" y="997" width="0.0299%" height="15" fill="rgb(219,32,23)" fg:x="81173" fg:w="32"/><text x="76.2006%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (32 samples, 0.03%)</title><rect x="75.9506%" y="981" width="0.0299%" height="15" fill="rgb(230,191,45)" fg:x="81173" fg:w="32"/><text x="76.2006%" y="991.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="75.9703%" y="965" width="0.0103%" height="15" fill="rgb(229,64,36)" fg:x="81194" fg:w="11"/><text x="76.2203%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (11 samples, 0.01%)</title><rect x="75.9703%" y="949" width="0.0103%" height="15" fill="rgb(205,129,25)" fg:x="81194" fg:w="11"/><text x="76.2203%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (11 samples, 0.01%)</title><rect x="75.9703%" y="933" width="0.0103%" height="15" fill="rgb(254,112,7)" fg:x="81194" fg:w="11"/><text x="76.2203%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="75.9703%" y="917" width="0.0103%" height="15" fill="rgb(226,53,48)" fg:x="81194" fg:w="11"/><text x="76.2203%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="75.9703%" y="901" width="0.0103%" height="15" fill="rgb(214,153,38)" fg:x="81194" fg:w="11"/><text x="76.2203%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (14 samples, 0.01%)</title><rect x="76.0040%" y="965" width="0.0131%" height="15" fill="rgb(243,101,7)" fg:x="81230" fg:w="14"/><text x="76.2540%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (14 samples, 0.01%)</title><rect x="76.0040%" y="949" width="0.0131%" height="15" fill="rgb(240,140,22)" fg:x="81230" fg:w="14"/><text x="76.2540%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (51 samples, 0.05%)</title><rect x="75.9853%" y="1029" width="0.0477%" height="15" fill="rgb(235,114,2)" fg:x="81210" fg:w="51"/><text x="76.2353%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (51 samples, 0.05%)</title><rect x="75.9853%" y="1013" width="0.0477%" height="15" fill="rgb(242,59,12)" fg:x="81210" fg:w="51"/><text x="76.2353%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (51 samples, 0.05%)</title><rect x="75.9853%" y="997" width="0.0477%" height="15" fill="rgb(252,134,9)" fg:x="81210" fg:w="51"/><text x="76.2353%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (33 samples, 0.03%)</title><rect x="76.0021%" y="981" width="0.0309%" height="15" fill="rgb(236,4,44)" fg:x="81228" fg:w="33"/><text x="76.2521%" y="991.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="76.0171%" y="965" width="0.0159%" height="15" fill="rgb(254,172,41)" fg:x="81244" fg:w="17"/><text x="76.2671%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="76.0171%" y="949" width="0.0159%" height="15" fill="rgb(244,63,20)" fg:x="81244" fg:w="17"/><text x="76.2671%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (59 samples, 0.06%)</title><rect x="76.0330%" y="1013" width="0.0552%" height="15" fill="rgb(250,73,31)" fg:x="81261" fg:w="59"/><text x="76.2830%" y="1023.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (22 samples, 0.02%)</title><rect x="76.1350%" y="901" width="0.0206%" height="15" fill="rgb(241,38,36)" fg:x="81370" fg:w="22"/><text x="76.3850%" y="911.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="76.2098%" y="757" width="0.0122%" height="15" fill="rgb(245,211,2)" fg:x="81450" fg:w="13"/><text x="76.4598%" y="767.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="76.2098%" y="741" width="0.0122%" height="15" fill="rgb(206,120,28)" fg:x="81450" fg:w="13"/><text x="76.4598%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (55 samples, 0.05%)</title><rect x="76.1799%" y="805" width="0.0515%" height="15" fill="rgb(211,59,34)" fg:x="81418" fg:w="55"/><text x="76.4299%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (55 samples, 0.05%)</title><rect x="76.1799%" y="789" width="0.0515%" height="15" fill="rgb(233,168,5)" fg:x="81418" fg:w="55"/><text x="76.4299%" y="799.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (52 samples, 0.05%)</title><rect x="76.1827%" y="773" width="0.0487%" height="15" fill="rgb(234,33,13)" fg:x="81421" fg:w="52"/><text x="76.4327%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (76 samples, 0.07%)</title><rect x="76.1696%" y="869" width="0.0711%" height="15" fill="rgb(231,150,26)" fg:x="81407" fg:w="76"/><text x="76.4196%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (76 samples, 0.07%)</title><rect x="76.1696%" y="853" width="0.0711%" height="15" fill="rgb(217,191,4)" fg:x="81407" fg:w="76"/><text x="76.4196%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (76 samples, 0.07%)</title><rect x="76.1696%" y="837" width="0.0711%" height="15" fill="rgb(246,198,38)" fg:x="81407" fg:w="76"/><text x="76.4196%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (76 samples, 0.07%)</title><rect x="76.1696%" y="821" width="0.0711%" height="15" fill="rgb(245,64,37)" fg:x="81407" fg:w="76"/><text x="76.4196%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (87 samples, 0.08%)</title><rect x="76.1621%" y="885" width="0.0814%" height="15" fill="rgb(250,30,36)" fg:x="81399" fg:w="87"/><text x="76.4121%" y="895.50"></text></g><g><title>rust_dealloc (109 samples, 0.10%)</title><rect x="76.1555%" y="901" width="0.1020%" height="15" fill="rgb(217,86,53)" fg:x="81392" fg:w="109"/><text x="76.4055%" y="911.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="76.2435%" y="885" width="0.0140%" height="15" fill="rgb(228,157,16)" fg:x="81486" fg:w="15"/><text x="76.4935%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (146 samples, 0.14%)</title><rect x="76.1303%" y="949" width="0.1366%" height="15" fill="rgb(217,59,31)" fg:x="81365" fg:w="146"/><text x="76.3803%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (146 samples, 0.14%)</title><rect x="76.1303%" y="933" width="0.1366%" height="15" fill="rgb(237,138,41)" fg:x="81365" fg:w="146"/><text x="76.3803%" y="943.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (146 samples, 0.14%)</title><rect x="76.1303%" y="917" width="0.1366%" height="15" fill="rgb(227,91,49)" fg:x="81365" fg:w="146"/><text x="76.3803%" y="927.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (168 samples, 0.16%)</title><rect x="76.1144%" y="965" width="0.1572%" height="15" fill="rgb(247,21,44)" fg:x="81348" fg:w="168"/><text x="76.3644%" y="975.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="76.3155%" y="821" width="0.0178%" height="15" fill="rgb(219,210,51)" fg:x="81563" fg:w="19"/><text x="76.5655%" y="831.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="76.3155%" y="805" width="0.0178%" height="15" fill="rgb(209,140,6)" fg:x="81563" fg:w="19"/><text x="76.5655%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (41 samples, 0.04%)</title><rect x="76.3062%" y="869" width="0.0384%" height="15" fill="rgb(221,188,24)" fg:x="81553" fg:w="41"/><text x="76.5562%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (41 samples, 0.04%)</title><rect x="76.3062%" y="853" width="0.0384%" height="15" fill="rgb(232,154,20)" fg:x="81553" fg:w="41"/><text x="76.5562%" y="863.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (40 samples, 0.04%)</title><rect x="76.3071%" y="837" width="0.0374%" height="15" fill="rgb(244,137,50)" fg:x="81554" fg:w="40"/><text x="76.5571%" y="847.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="76.3333%" y="821" width="0.0112%" height="15" fill="rgb(225,185,43)" fg:x="81582" fg:w="12"/><text x="76.5833%" y="831.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="76.3333%" y="805" width="0.0112%" height="15" fill="rgb(213,205,38)" fg:x="81582" fg:w="12"/><text x="76.5833%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (63 samples, 0.06%)</title><rect x="76.2912%" y="901" width="0.0589%" height="15" fill="rgb(236,73,12)" fg:x="81537" fg:w="63"/><text x="76.5412%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (63 samples, 0.06%)</title><rect x="76.2912%" y="885" width="0.0589%" height="15" fill="rgb(235,219,13)" fg:x="81537" fg:w="63"/><text x="76.5412%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (79 samples, 0.07%)</title><rect x="76.2772%" y="949" width="0.0739%" height="15" fill="rgb(218,59,36)" fg:x="81522" fg:w="79"/><text x="76.5272%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (64 samples, 0.06%)</title><rect x="76.2912%" y="933" width="0.0599%" height="15" fill="rgb(205,110,39)" fg:x="81537" fg:w="64"/><text x="76.5412%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (64 samples, 0.06%)</title><rect x="76.2912%" y="917" width="0.0599%" height="15" fill="rgb(218,206,42)" fg:x="81537" fg:w="64"/><text x="76.5412%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (398 samples, 0.37%)</title><rect x="75.9806%" y="1045" width="0.3724%" height="15" fill="rgb(248,125,24)" fg:x="81205" fg:w="398"/><text x="76.2306%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (342 samples, 0.32%)</title><rect x="76.0330%" y="1029" width="0.3200%" height="15" fill="rgb(242,28,27)" fg:x="81261" fg:w="342"/><text x="76.2830%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (283 samples, 0.26%)</title><rect x="76.0882%" y="1013" width="0.2648%" height="15" fill="rgb(216,228,15)" fg:x="81320" fg:w="283"/><text x="76.3382%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (273 samples, 0.26%)</title><rect x="76.0975%" y="997" width="0.2554%" height="15" fill="rgb(235,116,46)" fg:x="81330" fg:w="273"/><text x="76.3475%" y="1007.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (273 samples, 0.26%)</title><rect x="76.0975%" y="981" width="0.2554%" height="15" fill="rgb(224,18,32)" fg:x="81330" fg:w="273"/><text x="76.3475%" y="991.50"></text></g><g><title>rust_dealloc (87 samples, 0.08%)</title><rect x="76.2716%" y="965" width="0.0814%" height="15" fill="rgb(252,5,12)" fg:x="81516" fg:w="87"/><text x="76.5216%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="76.3913%" y="949" width="0.0290%" height="15" fill="rgb(251,36,5)" fg:x="81644" fg:w="31"/><text x="76.6413%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="76.3913%" y="933" width="0.0290%" height="15" fill="rgb(217,53,14)" fg:x="81644" fg:w="31"/><text x="76.6413%" y="943.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="76.3913%" y="917" width="0.0290%" height="15" fill="rgb(215,86,45)" fg:x="81644" fg:w="31"/><text x="76.6413%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (55 samples, 0.05%)</title><rect x="76.3707%" y="981" width="0.0515%" height="15" fill="rgb(242,169,11)" fg:x="81622" fg:w="55"/><text x="76.6207%" y="991.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (55 samples, 0.05%)</title><rect x="76.3707%" y="965" width="0.0515%" height="15" fill="rgb(211,213,45)" fg:x="81622" fg:w="55"/><text x="76.6207%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (63 samples, 0.06%)</title><rect x="76.3642%" y="1029" width="0.0589%" height="15" fill="rgb(205,88,11)" fg:x="81615" fg:w="63"/><text x="76.6142%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (56 samples, 0.05%)</title><rect x="76.3707%" y="1013" width="0.0524%" height="15" fill="rgb(252,69,26)" fg:x="81622" fg:w="56"/><text x="76.6207%" y="1023.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (56 samples, 0.05%)</title><rect x="76.3707%" y="997" width="0.0524%" height="15" fill="rgb(246,123,37)" fg:x="81622" fg:w="56"/><text x="76.6207%" y="1007.50"></text></g><g><title>rust_dealloc (76 samples, 0.07%)</title><rect x="76.3530%" y="1045" width="0.0711%" height="15" fill="rgb(212,205,5)" fg:x="81603" fg:w="76"/><text x="76.6030%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (3,413 samples, 3.19%)</title><rect x="73.2578%" y="1061" width="3.1934%" height="15" fill="rgb(253,148,0)" fg:x="78295" fg:w="3413"/><text x="73.5078%" y="1071.50">tre..</text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (24 samples, 0.02%)</title><rect x="76.4288%" y="1045" width="0.0225%" height="15" fill="rgb(239,22,4)" fg:x="81684" fg:w="24"/><text x="76.6788%" y="1055.50"></text></g><g><title>tremor_pipeline::EventId::new (18 samples, 0.02%)</title><rect x="76.4344%" y="1029" width="0.0168%" height="15" fill="rgb(226,26,53)" fg:x="81690" fg:w="18"/><text x="76.6844%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.06%)</title><rect x="76.8274%" y="885" width="0.0561%" height="15" fill="rgb(225,229,45)" fg:x="82110" fg:w="60"/><text x="77.0774%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (60 samples, 0.06%)</title><rect x="76.8274%" y="869" width="0.0561%" height="15" fill="rgb(220,60,37)" fg:x="82110" fg:w="60"/><text x="77.0774%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (52 samples, 0.05%)</title><rect x="76.8348%" y="853" width="0.0487%" height="15" fill="rgb(217,180,35)" fg:x="82118" fg:w="52"/><text x="77.0848%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (42 samples, 0.04%)</title><rect x="76.8442%" y="837" width="0.0393%" height="15" fill="rgb(229,7,53)" fg:x="82128" fg:w="42"/><text x="77.0942%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="76.8442%" y="821" width="0.0393%" height="15" fill="rgb(254,137,3)" fg:x="82128" fg:w="42"/><text x="77.0942%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="76.8442%" y="805" width="0.0393%" height="15" fill="rgb(215,140,41)" fg:x="82128" fg:w="42"/><text x="77.0942%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (195 samples, 0.18%)</title><rect x="76.8152%" y="933" width="0.1825%" height="15" fill="rgb(250,80,15)" fg:x="82097" fg:w="195"/><text x="77.0652%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (195 samples, 0.18%)</title><rect x="76.8152%" y="917" width="0.1825%" height="15" fill="rgb(252,191,6)" fg:x="82097" fg:w="195"/><text x="77.0652%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (184 samples, 0.17%)</title><rect x="76.8255%" y="901" width="0.1722%" height="15" fill="rgb(246,217,18)" fg:x="82108" fg:w="184"/><text x="77.0755%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (110 samples, 0.10%)</title><rect x="76.8947%" y="885" width="0.1029%" height="15" fill="rgb(223,93,7)" fg:x="82182" fg:w="110"/><text x="77.1447%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (110 samples, 0.10%)</title><rect x="76.8947%" y="869" width="0.1029%" height="15" fill="rgb(225,55,52)" fg:x="82182" fg:w="110"/><text x="77.1447%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (216 samples, 0.20%)</title><rect x="76.7993%" y="1045" width="0.2021%" height="15" fill="rgb(240,31,24)" fg:x="82080" fg:w="216"/><text x="77.0493%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (216 samples, 0.20%)</title><rect x="76.7993%" y="1029" width="0.2021%" height="15" fill="rgb(205,56,52)" fg:x="82080" fg:w="216"/><text x="77.0493%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (216 samples, 0.20%)</title><rect x="76.7993%" y="1013" width="0.2021%" height="15" fill="rgb(246,146,12)" fg:x="82080" fg:w="216"/><text x="77.0493%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (216 samples, 0.20%)</title><rect x="76.7993%" y="997" width="0.2021%" height="15" fill="rgb(239,84,36)" fg:x="82080" fg:w="216"/><text x="77.0493%" y="1007.50"></text></g><g><title>__rg_alloc (216 samples, 0.20%)</title><rect x="76.7993%" y="981" width="0.2021%" height="15" fill="rgb(207,41,40)" fg:x="82080" fg:w="216"/><text x="77.0493%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (216 samples, 0.20%)</title><rect x="76.7993%" y="965" width="0.2021%" height="15" fill="rgb(241,179,25)" fg:x="82080" fg:w="216"/><text x="77.0493%" y="975.50"></text></g><g><title>rust_alloc (212 samples, 0.20%)</title><rect x="76.8030%" y="949" width="0.1984%" height="15" fill="rgb(210,0,34)" fg:x="82084" fg:w="212"/><text x="77.0530%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (13 samples, 0.01%)</title><rect x="77.0014%" y="1045" width="0.0122%" height="15" fill="rgb(225,217,29)" fg:x="82296" fg:w="13"/><text x="77.2514%" y="1055.50"></text></g><g><title>alloc::slice::hack::into_vec (13 samples, 0.01%)</title><rect x="77.0014%" y="1029" width="0.0122%" height="15" fill="rgb(216,191,38)" fg:x="82296" fg:w="13"/><text x="77.2514%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (13 samples, 0.01%)</title><rect x="77.0014%" y="1013" width="0.0122%" height="15" fill="rgb(232,140,52)" fg:x="82296" fg:w="13"/><text x="77.2514%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="77.0135%" y="1045" width="0.0112%" height="15" fill="rgb(223,158,51)" fg:x="82309" fg:w="12"/><text x="77.2635%" y="1055.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (630 samples, 0.59%)</title><rect x="76.4512%" y="1061" width="0.5895%" height="15" fill="rgb(235,29,51)" fg:x="81708" fg:w="630"/><text x="76.7012%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (273 samples, 0.26%)</title><rect x="77.3270%" y="1045" width="0.2554%" height="15" fill="rgb(215,181,18)" fg:x="82644" fg:w="273"/><text x="77.5770%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (11 samples, 0.01%)</title><rect x="77.6199%" y="805" width="0.0103%" height="15" fill="rgb(227,125,34)" fg:x="82957" fg:w="11"/><text x="77.8699%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (13 samples, 0.01%)</title><rect x="77.6189%" y="821" width="0.0122%" height="15" fill="rgb(230,197,49)" fg:x="82956" fg:w="13"/><text x="77.8689%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="77.6189%" y="853" width="0.0608%" height="15" fill="rgb(239,141,16)" fg:x="82956" fg:w="65"/><text x="77.8689%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (65 samples, 0.06%)</title><rect x="77.6189%" y="837" width="0.0608%" height="15" fill="rgb(225,105,43)" fg:x="82956" fg:w="65"/><text x="77.8689%" y="847.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (52 samples, 0.05%)</title><rect x="77.6311%" y="821" width="0.0487%" height="15" fill="rgb(214,131,14)" fg:x="82969" fg:w="52"/><text x="77.8811%" y="831.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (42 samples, 0.04%)</title><rect x="77.6404%" y="805" width="0.0393%" height="15" fill="rgb(229,177,11)" fg:x="82979" fg:w="42"/><text x="77.8904%" y="815.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="77.6404%" y="789" width="0.0393%" height="15" fill="rgb(231,180,14)" fg:x="82979" fg:w="42"/><text x="77.8904%" y="799.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="77.6404%" y="773" width="0.0393%" height="15" fill="rgb(232,88,2)" fg:x="82979" fg:w="42"/><text x="77.8904%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (108 samples, 0.10%)</title><rect x="77.6133%" y="901" width="0.1011%" height="15" fill="rgb(205,220,8)" fg:x="82950" fg:w="108"/><text x="77.8633%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (107 samples, 0.10%)</title><rect x="77.6142%" y="885" width="0.1001%" height="15" fill="rgb(225,23,53)" fg:x="82951" fg:w="107"/><text x="77.8642%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (103 samples, 0.10%)</title><rect x="77.6180%" y="869" width="0.0964%" height="15" fill="rgb(213,62,29)" fg:x="82955" fg:w="103"/><text x="77.8680%" y="879.50"></text></g><g><title>snmalloc::FreeListIter::take (28 samples, 0.03%)</title><rect x="77.6882%" y="853" width="0.0262%" height="15" fill="rgb(227,75,7)" fg:x="83030" fg:w="28"/><text x="77.9382%" y="863.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (28 samples, 0.03%)</title><rect x="77.6882%" y="837" width="0.0262%" height="15" fill="rgb(207,105,14)" fg:x="83030" fg:w="28"/><text x="77.9382%" y="847.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (144 samples, 0.13%)</title><rect x="77.5824%" y="1045" width="0.1347%" height="15" fill="rgb(245,62,29)" fg:x="82917" fg:w="144"/><text x="77.8324%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (144 samples, 0.13%)</title><rect x="77.5824%" y="1029" width="0.1347%" height="15" fill="rgb(236,202,4)" fg:x="82917" fg:w="144"/><text x="77.8324%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (121 samples, 0.11%)</title><rect x="77.6040%" y="1013" width="0.1132%" height="15" fill="rgb(250,67,1)" fg:x="82940" fg:w="121"/><text x="77.8540%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (121 samples, 0.11%)</title><rect x="77.6040%" y="997" width="0.1132%" height="15" fill="rgb(253,115,44)" fg:x="82940" fg:w="121"/><text x="77.8540%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (121 samples, 0.11%)</title><rect x="77.6040%" y="981" width="0.1132%" height="15" fill="rgb(251,139,18)" fg:x="82940" fg:w="121"/><text x="77.8540%" y="991.50"></text></g><g><title>alloc::alloc::alloc (120 samples, 0.11%)</title><rect x="77.6049%" y="965" width="0.1123%" height="15" fill="rgb(218,22,32)" fg:x="82941" fg:w="120"/><text x="77.8549%" y="975.50"></text></g><g><title>__rg_alloc (120 samples, 0.11%)</title><rect x="77.6049%" y="949" width="0.1123%" height="15" fill="rgb(243,53,5)" fg:x="82941" fg:w="120"/><text x="77.8549%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (120 samples, 0.11%)</title><rect x="77.6049%" y="933" width="0.1123%" height="15" fill="rgb(227,56,16)" fg:x="82941" fg:w="120"/><text x="77.8549%" y="943.50"></text></g><g><title>rust_alloc (115 samples, 0.11%)</title><rect x="77.6096%" y="917" width="0.1076%" height="15" fill="rgb(245,53,0)" fg:x="82946" fg:w="115"/><text x="77.8596%" y="927.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="77.7293%" y="901" width="0.0103%" height="15" fill="rgb(216,170,35)" fg:x="83074" fg:w="11"/><text x="77.9793%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="77.7471%" y="885" width="0.0234%" height="15" fill="rgb(211,200,8)" fg:x="83093" fg:w="25"/><text x="77.9971%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (25 samples, 0.02%)</title><rect x="77.7471%" y="869" width="0.0234%" height="15" fill="rgb(228,204,44)" fg:x="83093" fg:w="25"/><text x="77.9971%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (24 samples, 0.02%)</title><rect x="77.7480%" y="853" width="0.0225%" height="15" fill="rgb(214,121,17)" fg:x="83094" fg:w="24"/><text x="77.9980%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (22 samples, 0.02%)</title><rect x="77.7499%" y="837" width="0.0206%" height="15" fill="rgb(233,64,38)" fg:x="83096" fg:w="22"/><text x="77.9999%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (22 samples, 0.02%)</title><rect x="77.7499%" y="821" width="0.0206%" height="15" fill="rgb(253,54,19)" fg:x="83096" fg:w="22"/><text x="77.9999%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (22 samples, 0.02%)</title><rect x="77.7499%" y="805" width="0.0206%" height="15" fill="rgb(253,94,18)" fg:x="83096" fg:w="22"/><text x="77.9999%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (108 samples, 0.10%)</title><rect x="77.7172%" y="1045" width="0.1011%" height="15" fill="rgb(227,57,52)" fg:x="83061" fg:w="108"/><text x="77.9672%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (108 samples, 0.10%)</title><rect x="77.7172%" y="1029" width="0.1011%" height="15" fill="rgb(230,228,50)" fg:x="83061" fg:w="108"/><text x="77.9672%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (108 samples, 0.10%)</title><rect x="77.7172%" y="1013" width="0.1011%" height="15" fill="rgb(217,205,27)" fg:x="83061" fg:w="108"/><text x="77.9672%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (108 samples, 0.10%)</title><rect x="77.7172%" y="997" width="0.1011%" height="15" fill="rgb(252,71,50)" fg:x="83061" fg:w="108"/><text x="77.9672%" y="1007.50"></text></g><g><title>__rg_alloc (108 samples, 0.10%)</title><rect x="77.7172%" y="981" width="0.1011%" height="15" fill="rgb(209,86,4)" fg:x="83061" fg:w="108"/><text x="77.9672%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (108 samples, 0.10%)</title><rect x="77.7172%" y="965" width="0.1011%" height="15" fill="rgb(229,94,0)" fg:x="83061" fg:w="108"/><text x="77.9672%" y="975.50"></text></g><g><title>rust_alloc (103 samples, 0.10%)</title><rect x="77.7218%" y="949" width="0.0964%" height="15" fill="rgb(252,223,21)" fg:x="83066" fg:w="103"/><text x="77.9718%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (95 samples, 0.09%)</title><rect x="77.7293%" y="933" width="0.0889%" height="15" fill="rgb(230,210,4)" fg:x="83074" fg:w="95"/><text x="77.9793%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (95 samples, 0.09%)</title><rect x="77.7293%" y="917" width="0.0889%" height="15" fill="rgb(240,149,38)" fg:x="83074" fg:w="95"/><text x="77.9793%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (84 samples, 0.08%)</title><rect x="77.7396%" y="901" width="0.0786%" height="15" fill="rgb(254,105,20)" fg:x="83085" fg:w="84"/><text x="77.9896%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (47 samples, 0.04%)</title><rect x="77.7742%" y="885" width="0.0440%" height="15" fill="rgb(253,87,46)" fg:x="83122" fg:w="47"/><text x="78.0242%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (47 samples, 0.04%)</title><rect x="77.7742%" y="869" width="0.0440%" height="15" fill="rgb(253,116,33)" fg:x="83122" fg:w="47"/><text x="78.0242%" y="879.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::new (15 samples, 0.01%)</title><rect x="77.8182%" y="1045" width="0.0140%" height="15" fill="rgb(229,198,5)" fg:x="83169" fg:w="15"/><text x="78.0682%" y="1055.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (13 samples, 0.01%)</title><rect x="78.1279%" y="1029" width="0.0122%" height="15" fill="rgb(242,38,37)" fg:x="83500" fg:w="13"/><text x="78.3779%" y="1039.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (13 samples, 0.01%)</title><rect x="78.1691%" y="885" width="0.0122%" height="15" fill="rgb(242,69,53)" fg:x="83544" fg:w="13"/><text x="78.4191%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (51 samples, 0.05%)</title><rect x="78.2149%" y="693" width="0.0477%" height="15" fill="rgb(249,80,16)" fg:x="83593" fg:w="51"/><text x="78.4649%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (51 samples, 0.05%)</title><rect x="78.2149%" y="677" width="0.0477%" height="15" fill="rgb(206,128,11)" fg:x="83593" fg:w="51"/><text x="78.4649%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (45 samples, 0.04%)</title><rect x="78.2206%" y="661" width="0.0421%" height="15" fill="rgb(212,35,20)" fg:x="83599" fg:w="45"/><text x="78.4706%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (37 samples, 0.03%)</title><rect x="78.2280%" y="645" width="0.0346%" height="15" fill="rgb(236,79,13)" fg:x="83607" fg:w="37"/><text x="78.4780%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (37 samples, 0.03%)</title><rect x="78.2280%" y="629" width="0.0346%" height="15" fill="rgb(233,123,3)" fg:x="83607" fg:w="37"/><text x="78.4780%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (37 samples, 0.03%)</title><rect x="78.2280%" y="613" width="0.0346%" height="15" fill="rgb(214,93,52)" fg:x="83607" fg:w="37"/><text x="78.4780%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="78.2701%" y="693" width="0.0131%" height="15" fill="rgb(251,37,40)" fg:x="83652" fg:w="14"/><text x="78.5201%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="78.2701%" y="677" width="0.0131%" height="15" fill="rgb(227,80,54)" fg:x="83652" fg:w="14"/><text x="78.5201%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="78.2701%" y="661" width="0.0131%" height="15" fill="rgb(254,48,11)" fg:x="83652" fg:w="14"/><text x="78.5201%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="78.2701%" y="645" width="0.0131%" height="15" fill="rgb(235,193,26)" fg:x="83652" fg:w="14"/><text x="78.5201%" y="655.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (14 samples, 0.01%)</title><rect x="78.2701%" y="629" width="0.0131%" height="15" fill="rgb(229,99,21)" fg:x="83652" fg:w="14"/><text x="78.5201%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (185 samples, 0.17%)</title><rect x="78.2009%" y="741" width="0.1731%" height="15" fill="rgb(211,140,41)" fg:x="83578" fg:w="185"/><text x="78.4509%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (181 samples, 0.17%)</title><rect x="78.2046%" y="725" width="0.1694%" height="15" fill="rgb(240,227,30)" fg:x="83582" fg:w="181"/><text x="78.4546%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (178 samples, 0.17%)</title><rect x="78.2075%" y="709" width="0.1665%" height="15" fill="rgb(215,224,45)" fg:x="83585" fg:w="178"/><text x="78.4575%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (96 samples, 0.09%)</title><rect x="78.2842%" y="693" width="0.0898%" height="15" fill="rgb(206,123,31)" fg:x="83667" fg:w="96"/><text x="78.5342%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (96 samples, 0.09%)</title><rect x="78.2842%" y="677" width="0.0898%" height="15" fill="rgb(210,138,16)" fg:x="83667" fg:w="96"/><text x="78.5342%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (222 samples, 0.21%)</title><rect x="78.1691%" y="901" width="0.2077%" height="15" fill="rgb(228,57,28)" fg:x="83544" fg:w="222"/><text x="78.4191%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (209 samples, 0.20%)</title><rect x="78.1813%" y="885" width="0.1956%" height="15" fill="rgb(242,170,10)" fg:x="83557" fg:w="209"/><text x="78.4313%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (209 samples, 0.20%)</title><rect x="78.1813%" y="869" width="0.1956%" height="15" fill="rgb(228,214,39)" fg:x="83557" fg:w="209"/><text x="78.4313%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (199 samples, 0.19%)</title><rect x="78.1906%" y="853" width="0.1862%" height="15" fill="rgb(218,179,33)" fg:x="83567" fg:w="199"/><text x="78.4406%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (199 samples, 0.19%)</title><rect x="78.1906%" y="837" width="0.1862%" height="15" fill="rgb(235,193,39)" fg:x="83567" fg:w="199"/><text x="78.4406%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (199 samples, 0.19%)</title><rect x="78.1906%" y="821" width="0.1862%" height="15" fill="rgb(219,221,36)" fg:x="83567" fg:w="199"/><text x="78.4406%" y="831.50"></text></g><g><title>alloc::alloc::alloc (199 samples, 0.19%)</title><rect x="78.1906%" y="805" width="0.1862%" height="15" fill="rgb(248,218,19)" fg:x="83567" fg:w="199"/><text x="78.4406%" y="815.50"></text></g><g><title>__rg_alloc (199 samples, 0.19%)</title><rect x="78.1906%" y="789" width="0.1862%" height="15" fill="rgb(205,50,9)" fg:x="83567" fg:w="199"/><text x="78.4406%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (199 samples, 0.19%)</title><rect x="78.1906%" y="773" width="0.1862%" height="15" fill="rgb(238,81,28)" fg:x="83567" fg:w="199"/><text x="78.4406%" y="783.50"></text></g><g><title>rust_alloc (198 samples, 0.19%)</title><rect x="78.1915%" y="757" width="0.1853%" height="15" fill="rgb(235,110,19)" fg:x="83568" fg:w="198"/><text x="78.4415%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (12 samples, 0.01%)</title><rect x="78.3768%" y="837" width="0.0112%" height="15" fill="rgb(214,7,14)" fg:x="83766" fg:w="12"/><text x="78.6268%" y="847.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (255 samples, 0.24%)</title><rect x="78.1625%" y="981" width="0.2386%" height="15" fill="rgb(211,77,3)" fg:x="83537" fg:w="255"/><text x="78.4125%" y="991.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (255 samples, 0.24%)</title><rect x="78.1625%" y="965" width="0.2386%" height="15" fill="rgb(229,5,9)" fg:x="83537" fg:w="255"/><text x="78.4125%" y="975.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (248 samples, 0.23%)</title><rect x="78.1691%" y="949" width="0.2320%" height="15" fill="rgb(225,90,11)" fg:x="83544" fg:w="248"/><text x="78.4191%" y="959.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (248 samples, 0.23%)</title><rect x="78.1691%" y="933" width="0.2320%" height="15" fill="rgb(242,56,8)" fg:x="83544" fg:w="248"/><text x="78.4191%" y="943.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (248 samples, 0.23%)</title><rect x="78.1691%" y="917" width="0.2320%" height="15" fill="rgb(249,212,39)" fg:x="83544" fg:w="248"/><text x="78.4191%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (26 samples, 0.02%)</title><rect x="78.3768%" y="901" width="0.0243%" height="15" fill="rgb(236,90,9)" fg:x="83766" fg:w="26"/><text x="78.6268%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (26 samples, 0.02%)</title><rect x="78.3768%" y="885" width="0.0243%" height="15" fill="rgb(206,88,35)" fg:x="83766" fg:w="26"/><text x="78.6268%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (26 samples, 0.02%)</title><rect x="78.3768%" y="869" width="0.0243%" height="15" fill="rgb(205,126,30)" fg:x="83766" fg:w="26"/><text x="78.6268%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (26 samples, 0.02%)</title><rect x="78.3768%" y="853" width="0.0243%" height="15" fill="rgb(230,176,12)" fg:x="83766" fg:w="26"/><text x="78.6268%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (25 samples, 0.02%)</title><rect x="78.7342%" y="933" width="0.0234%" height="15" fill="rgb(243,19,9)" fg:x="84148" fg:w="25"/><text x="78.9842%" y="943.50"></text></g><g><title>std::collections::hash::map::RandomState::new (25 samples, 0.02%)</title><rect x="78.7342%" y="917" width="0.0234%" height="15" fill="rgb(245,171,17)" fg:x="84148" fg:w="25"/><text x="78.9842%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (25 samples, 0.02%)</title><rect x="78.7342%" y="901" width="0.0234%" height="15" fill="rgb(227,52,21)" fg:x="84148" fg:w="25"/><text x="78.9842%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 0.02%)</title><rect x="78.7342%" y="885" width="0.0234%" height="15" fill="rgb(238,69,14)" fg:x="84148" fg:w="25"/><text x="78.9842%" y="895.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (19 samples, 0.02%)</title><rect x="78.7398%" y="869" width="0.0178%" height="15" fill="rgb(241,156,39)" fg:x="84154" fg:w="19"/><text x="78.9898%" y="879.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="78.7894%" y="741" width="0.0103%" height="15" fill="rgb(212,227,28)" fg:x="84207" fg:w="11"/><text x="79.0394%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="78.8156%" y="581" width="0.0112%" height="15" fill="rgb(209,118,27)" fg:x="84235" fg:w="12"/><text x="79.0656%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="78.8156%" y="565" width="0.0112%" height="15" fill="rgb(226,102,5)" fg:x="84235" fg:w="12"/><text x="79.0656%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (24 samples, 0.02%)</title><rect x="78.8100%" y="629" width="0.0225%" height="15" fill="rgb(223,34,3)" fg:x="84229" fg:w="24"/><text x="79.0600%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (24 samples, 0.02%)</title><rect x="78.8100%" y="613" width="0.0225%" height="15" fill="rgb(221,81,38)" fg:x="84229" fg:w="24"/><text x="79.0600%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (22 samples, 0.02%)</title><rect x="78.8119%" y="597" width="0.0206%" height="15" fill="rgb(236,219,28)" fg:x="84231" fg:w="22"/><text x="79.0619%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (26 samples, 0.02%)</title><rect x="78.8100%" y="645" width="0.0243%" height="15" fill="rgb(213,200,14)" fg:x="84229" fg:w="26"/><text x="79.0600%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (34 samples, 0.03%)</title><rect x="78.8082%" y="661" width="0.0318%" height="15" fill="rgb(240,33,19)" fg:x="84227" fg:w="34"/><text x="79.0582%" y="671.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (23 samples, 0.02%)</title><rect x="78.8605%" y="645" width="0.0215%" height="15" fill="rgb(233,113,27)" fg:x="84283" fg:w="23"/><text x="79.1105%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (200 samples, 0.19%)</title><rect x="78.8082%" y="693" width="0.1871%" height="15" fill="rgb(220,221,18)" fg:x="84227" fg:w="200"/><text x="79.0582%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (200 samples, 0.19%)</title><rect x="78.8082%" y="677" width="0.1871%" height="15" fill="rgb(238,92,8)" fg:x="84227" fg:w="200"/><text x="79.0582%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (166 samples, 0.16%)</title><rect x="78.8400%" y="661" width="0.1553%" height="15" fill="rgb(222,164,16)" fg:x="84261" fg:w="166"/><text x="79.0900%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (121 samples, 0.11%)</title><rect x="78.8821%" y="645" width="0.1132%" height="15" fill="rgb(241,119,3)" fg:x="84306" fg:w="121"/><text x="79.1321%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (121 samples, 0.11%)</title><rect x="78.8821%" y="629" width="0.1132%" height="15" fill="rgb(241,44,8)" fg:x="84306" fg:w="121"/><text x="79.1321%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (121 samples, 0.11%)</title><rect x="78.8821%" y="613" width="0.1132%" height="15" fill="rgb(230,36,40)" fg:x="84306" fg:w="121"/><text x="79.1321%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (290 samples, 0.27%)</title><rect x="78.7997%" y="741" width="0.2713%" height="15" fill="rgb(243,16,36)" fg:x="84218" fg:w="290"/><text x="79.0497%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (290 samples, 0.27%)</title><rect x="78.7997%" y="725" width="0.2713%" height="15" fill="rgb(231,4,26)" fg:x="84218" fg:w="290"/><text x="79.0497%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (281 samples, 0.26%)</title><rect x="78.8082%" y="709" width="0.2629%" height="15" fill="rgb(240,9,31)" fg:x="84227" fg:w="281"/><text x="79.0582%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (70 samples, 0.07%)</title><rect x="79.0056%" y="693" width="0.0655%" height="15" fill="rgb(207,173,15)" fg:x="84438" fg:w="70"/><text x="79.2556%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (70 samples, 0.07%)</title><rect x="79.0056%" y="677" width="0.0655%" height="15" fill="rgb(224,192,53)" fg:x="84438" fg:w="70"/><text x="79.2556%" y="687.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (371 samples, 0.35%)</title><rect x="78.7342%" y="949" width="0.3471%" height="15" fill="rgb(223,67,28)" fg:x="84148" fg:w="371"/><text x="78.9842%" y="959.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (346 samples, 0.32%)</title><rect x="78.7576%" y="933" width="0.3237%" height="15" fill="rgb(211,20,47)" fg:x="84173" fg:w="346"/><text x="79.0076%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (346 samples, 0.32%)</title><rect x="78.7576%" y="917" width="0.3237%" height="15" fill="rgb(240,228,2)" fg:x="84173" fg:w="346"/><text x="79.0076%" y="927.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (331 samples, 0.31%)</title><rect x="78.7717%" y="901" width="0.3097%" height="15" fill="rgb(248,151,12)" fg:x="84188" fg:w="331"/><text x="79.0217%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (331 samples, 0.31%)</title><rect x="78.7717%" y="885" width="0.3097%" height="15" fill="rgb(244,8,39)" fg:x="84188" fg:w="331"/><text x="79.0217%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (330 samples, 0.31%)</title><rect x="78.7726%" y="869" width="0.3088%" height="15" fill="rgb(222,26,8)" fg:x="84189" fg:w="330"/><text x="79.0226%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (320 samples, 0.30%)</title><rect x="78.7820%" y="853" width="0.2994%" height="15" fill="rgb(213,106,44)" fg:x="84199" fg:w="320"/><text x="79.0320%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (320 samples, 0.30%)</title><rect x="78.7820%" y="837" width="0.2994%" height="15" fill="rgb(214,129,20)" fg:x="84199" fg:w="320"/><text x="79.0320%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (320 samples, 0.30%)</title><rect x="78.7820%" y="821" width="0.2994%" height="15" fill="rgb(212,32,13)" fg:x="84199" fg:w="320"/><text x="79.0320%" y="831.50"></text></g><g><title>alloc::alloc::alloc (312 samples, 0.29%)</title><rect x="78.7894%" y="805" width="0.2919%" height="15" fill="rgb(208,168,33)" fg:x="84207" fg:w="312"/><text x="79.0394%" y="815.50"></text></g><g><title>__rg_alloc (312 samples, 0.29%)</title><rect x="78.7894%" y="789" width="0.2919%" height="15" fill="rgb(231,207,8)" fg:x="84207" fg:w="312"/><text x="79.0394%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (312 samples, 0.29%)</title><rect x="78.7894%" y="773" width="0.2919%" height="15" fill="rgb(235,219,23)" fg:x="84207" fg:w="312"/><text x="79.0394%" y="783.50"></text></g><g><title>rust_alloc (312 samples, 0.29%)</title><rect x="78.7894%" y="757" width="0.2919%" height="15" fill="rgb(226,216,26)" fg:x="84207" fg:w="312"/><text x="79.0394%" y="767.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="79.0711%" y="741" width="0.0103%" height="15" fill="rgb(239,137,16)" fg:x="84508" fg:w="11"/><text x="79.3211%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="79.1366%" y="805" width="0.0140%" height="15" fill="rgb(207,12,36)" fg:x="84578" fg:w="15"/><text x="79.3866%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="79.1366%" y="869" width="0.0150%" height="15" fill="rgb(210,214,24)" fg:x="84578" fg:w="16"/><text x="79.3866%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="79.1366%" y="853" width="0.0150%" height="15" fill="rgb(206,56,30)" fg:x="84578" fg:w="16"/><text x="79.3866%" y="863.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="79.1366%" y="837" width="0.0150%" height="15" fill="rgb(228,143,26)" fg:x="84578" fg:w="16"/><text x="79.3866%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="79.1366%" y="821" width="0.0150%" height="15" fill="rgb(216,218,46)" fg:x="84578" fg:w="16"/><text x="79.3866%" y="831.50"></text></g><g><title>abi_stable::erased_types::iterator::next (33 samples, 0.03%)</title><rect x="79.1244%" y="901" width="0.0309%" height="15" fill="rgb(206,6,19)" fg:x="84565" fg:w="33"/><text x="79.3744%" y="911.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (20 samples, 0.02%)</title><rect x="79.1366%" y="885" width="0.0187%" height="15" fill="rgb(239,177,51)" fg:x="84578" fg:w="20"/><text x="79.3866%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="79.1553%" y="869" width="0.0103%" height="15" fill="rgb(216,55,25)" fg:x="84598" fg:w="11"/><text x="79.4053%" y="879.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (11 samples, 0.01%)</title><rect x="79.1553%" y="853" width="0.0103%" height="15" fill="rgb(231,163,29)" fg:x="84598" fg:w="11"/><text x="79.4053%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.07%)</title><rect x="79.0991%" y="933" width="0.0730%" height="15" fill="rgb(232,149,50)" fg:x="84538" fg:w="78"/><text x="79.3491%" y="943.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (78 samples, 0.07%)</title><rect x="79.0991%" y="917" width="0.0730%" height="15" fill="rgb(223,142,48)" fg:x="84538" fg:w="78"/><text x="79.3491%" y="927.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (18 samples, 0.02%)</title><rect x="79.1553%" y="901" width="0.0168%" height="15" fill="rgb(245,83,23)" fg:x="84598" fg:w="18"/><text x="79.4053%" y="911.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (18 samples, 0.02%)</title><rect x="79.1553%" y="885" width="0.0168%" height="15" fill="rgb(224,63,2)" fg:x="84598" fg:w="18"/><text x="79.4053%" y="895.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_ref (13 samples, 0.01%)</title><rect x="79.1749%" y="901" width="0.0122%" height="15" fill="rgb(218,65,53)" fg:x="84619" fg:w="13"/><text x="79.4249%" y="911.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (16 samples, 0.01%)</title><rect x="79.1871%" y="901" width="0.0150%" height="15" fill="rgb(221,84,29)" fg:x="84632" fg:w="16"/><text x="79.4371%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (54 samples, 0.05%)</title><rect x="79.1721%" y="933" width="0.0505%" height="15" fill="rgb(234,0,32)" fg:x="84616" fg:w="54"/><text x="79.4221%" y="943.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (54 samples, 0.05%)</title><rect x="79.1721%" y="917" width="0.0505%" height="15" fill="rgb(206,20,16)" fg:x="84616" fg:w="54"/><text x="79.4221%" y="927.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (22 samples, 0.02%)</title><rect x="79.2021%" y="901" width="0.0206%" height="15" fill="rgb(244,172,18)" fg:x="84648" fg:w="22"/><text x="79.4521%" y="911.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (22 samples, 0.02%)</title><rect x="79.2021%" y="885" width="0.0206%" height="15" fill="rgb(254,133,1)" fg:x="84648" fg:w="22"/><text x="79.4521%" y="895.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (13 samples, 0.01%)</title><rect x="79.2105%" y="869" width="0.0122%" height="15" fill="rgb(222,206,41)" fg:x="84657" fg:w="13"/><text x="79.4605%" y="879.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (34 samples, 0.03%)</title><rect x="79.2573%" y="821" width="0.0318%" height="15" fill="rgb(212,3,42)" fg:x="84707" fg:w="34"/><text x="79.5073%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="79.2732%" y="805" width="0.0159%" height="15" fill="rgb(241,11,4)" fg:x="84724" fg:w="17"/><text x="79.5232%" y="815.50"></text></g><g><title>alloc::alloc::box_free (17 samples, 0.02%)</title><rect x="79.2732%" y="789" width="0.0159%" height="15" fill="rgb(205,19,26)" fg:x="84724" fg:w="17"/><text x="79.5232%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="79.2732%" y="773" width="0.0159%" height="15" fill="rgb(210,179,32)" fg:x="84724" fg:w="17"/><text x="79.5232%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="79.2732%" y="757" width="0.0159%" height="15" fill="rgb(227,116,49)" fg:x="84724" fg:w="17"/><text x="79.5232%" y="767.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="79.2732%" y="741" width="0.0159%" height="15" fill="rgb(211,146,6)" fg:x="84724" fg:w="17"/><text x="79.5232%" y="751.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="79.2732%" y="725" width="0.0159%" height="15" fill="rgb(219,44,39)" fg:x="84724" fg:w="17"/><text x="79.5232%" y="735.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (33 samples, 0.03%)</title><rect x="79.3340%" y="677" width="0.0309%" height="15" fill="rgb(234,128,11)" fg:x="84789" fg:w="33"/><text x="79.5840%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (29 samples, 0.03%)</title><rect x="79.3377%" y="661" width="0.0271%" height="15" fill="rgb(220,183,53)" fg:x="84793" fg:w="29"/><text x="79.5877%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (64 samples, 0.06%)</title><rect x="79.3125%" y="725" width="0.0599%" height="15" fill="rgb(213,219,32)" fg:x="84766" fg:w="64"/><text x="79.5625%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (64 samples, 0.06%)</title><rect x="79.3125%" y="709" width="0.0599%" height="15" fill="rgb(232,156,16)" fg:x="84766" fg:w="64"/><text x="79.5625%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (62 samples, 0.06%)</title><rect x="79.3143%" y="693" width="0.0580%" height="15" fill="rgb(246,135,34)" fg:x="84768" fg:w="62"/><text x="79.5643%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (89 samples, 0.08%)</title><rect x="79.3059%" y="757" width="0.0833%" height="15" fill="rgb(241,99,0)" fg:x="84759" fg:w="89"/><text x="79.5559%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (89 samples, 0.08%)</title><rect x="79.3059%" y="741" width="0.0833%" height="15" fill="rgb(222,103,45)" fg:x="84759" fg:w="89"/><text x="79.5559%" y="751.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="79.3724%" y="725" width="0.0168%" height="15" fill="rgb(212,57,4)" fg:x="84830" fg:w="18"/><text x="79.6224%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (91 samples, 0.09%)</title><rect x="79.3059%" y="789" width="0.0851%" height="15" fill="rgb(215,68,47)" fg:x="84759" fg:w="91"/><text x="79.5559%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (91 samples, 0.09%)</title><rect x="79.3059%" y="773" width="0.0851%" height="15" fill="rgb(230,84,2)" fg:x="84759" fg:w="91"/><text x="79.5559%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (105 samples, 0.10%)</title><rect x="79.2956%" y="805" width="0.0982%" height="15" fill="rgb(220,102,14)" fg:x="84748" fg:w="105"/><text x="79.5456%" y="815.50"></text></g><g><title>rust_dealloc (118 samples, 0.11%)</title><rect x="79.2891%" y="821" width="0.1104%" height="15" fill="rgb(240,10,32)" fg:x="84741" fg:w="118"/><text x="79.5391%" y="831.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (186 samples, 0.17%)</title><rect x="79.2292%" y="901" width="0.1740%" height="15" fill="rgb(215,47,27)" fg:x="84677" fg:w="186"/><text x="79.4792%" y="911.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (172 samples, 0.16%)</title><rect x="79.2423%" y="885" width="0.1609%" height="15" fill="rgb(233,188,43)" fg:x="84691" fg:w="172"/><text x="79.4923%" y="895.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (168 samples, 0.16%)</title><rect x="79.2460%" y="869" width="0.1572%" height="15" fill="rgb(253,190,1)" fg:x="84695" fg:w="168"/><text x="79.4960%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (168 samples, 0.16%)</title><rect x="79.2460%" y="853" width="0.1572%" height="15" fill="rgb(206,114,52)" fg:x="84695" fg:w="168"/><text x="79.4960%" y="863.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (168 samples, 0.16%)</title><rect x="79.2460%" y="837" width="0.1572%" height="15" fill="rgb(233,120,37)" fg:x="84695" fg:w="168"/><text x="79.4960%" y="847.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,331 samples, 1.25%)</title><rect x="78.1616%" y="997" width="1.2454%" height="15" fill="rgb(214,52,39)" fg:x="83536" fg:w="1331"/><text x="78.4116%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,075 samples, 1.01%)</title><rect x="78.4011%" y="981" width="1.0058%" height="15" fill="rgb(223,80,29)" fg:x="83792" fg:w="1075"/><text x="78.6511%" y="991.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (719 samples, 0.67%)</title><rect x="78.7342%" y="965" width="0.6727%" height="15" fill="rgb(230,101,40)" fg:x="84148" fg:w="719"/><text x="78.9842%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (348 samples, 0.33%)</title><rect x="79.0814%" y="949" width="0.3256%" height="15" fill="rgb(219,211,8)" fg:x="84519" fg:w="348"/><text x="79.3314%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (190 samples, 0.18%)</title><rect x="79.2292%" y="933" width="0.1778%" height="15" fill="rgb(252,126,28)" fg:x="84677" fg:w="190"/><text x="79.4792%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (190 samples, 0.18%)</title><rect x="79.2292%" y="917" width="0.1778%" height="15" fill="rgb(215,56,38)" fg:x="84677" fg:w="190"/><text x="79.4792%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="79.4491%" y="757" width="0.0112%" height="15" fill="rgb(249,55,44)" fg:x="84912" fg:w="12"/><text x="79.6991%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (67 samples, 0.06%)</title><rect x="79.4491%" y="789" width="0.0627%" height="15" fill="rgb(220,221,32)" fg:x="84912" fg:w="67"/><text x="79.6991%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (67 samples, 0.06%)</title><rect x="79.4491%" y="773" width="0.0627%" height="15" fill="rgb(212,216,41)" fg:x="84912" fg:w="67"/><text x="79.6991%" y="783.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (55 samples, 0.05%)</title><rect x="79.4603%" y="757" width="0.0515%" height="15" fill="rgb(228,213,43)" fg:x="84924" fg:w="55"/><text x="79.7103%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (42 samples, 0.04%)</title><rect x="79.4725%" y="741" width="0.0393%" height="15" fill="rgb(211,31,26)" fg:x="84937" fg:w="42"/><text x="79.7225%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="79.4725%" y="725" width="0.0393%" height="15" fill="rgb(229,202,19)" fg:x="84937" fg:w="42"/><text x="79.7225%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="79.4725%" y="709" width="0.0393%" height="15" fill="rgb(229,105,46)" fg:x="84937" fg:w="42"/><text x="79.7225%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (171 samples, 0.16%)</title><rect x="79.4435%" y="837" width="0.1600%" height="15" fill="rgb(235,108,1)" fg:x="84906" fg:w="171"/><text x="79.6935%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (168 samples, 0.16%)</title><rect x="79.4463%" y="821" width="0.1572%" height="15" fill="rgb(245,111,35)" fg:x="84909" fg:w="168"/><text x="79.6963%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (167 samples, 0.16%)</title><rect x="79.4472%" y="805" width="0.1563%" height="15" fill="rgb(219,185,31)" fg:x="84910" fg:w="167"/><text x="79.6972%" y="815.50"></text></g><g><title>snmalloc::FreeListIter::take (90 samples, 0.08%)</title><rect x="79.5193%" y="789" width="0.0842%" height="15" fill="rgb(214,4,43)" fg:x="84987" fg:w="90"/><text x="79.7693%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (90 samples, 0.08%)</title><rect x="79.5193%" y="773" width="0.0842%" height="15" fill="rgb(235,227,40)" fg:x="84987" fg:w="90"/><text x="79.7693%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (215 samples, 0.20%)</title><rect x="79.4070%" y="965" width="0.2012%" height="15" fill="rgb(230,88,30)" fg:x="84867" fg:w="215"/><text x="79.6570%" y="975.50"></text></g><g><title>alloc::alloc::exchange_malloc (186 samples, 0.17%)</title><rect x="79.4341%" y="949" width="0.1740%" height="15" fill="rgb(216,217,1)" fg:x="84896" fg:w="186"/><text x="79.6841%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (186 samples, 0.17%)</title><rect x="79.4341%" y="933" width="0.1740%" height="15" fill="rgb(248,139,50)" fg:x="84896" fg:w="186"/><text x="79.6841%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (186 samples, 0.17%)</title><rect x="79.4341%" y="917" width="0.1740%" height="15" fill="rgb(233,1,21)" fg:x="84896" fg:w="186"/><text x="79.6841%" y="927.50"></text></g><g><title>alloc::alloc::alloc (186 samples, 0.17%)</title><rect x="79.4341%" y="901" width="0.1740%" height="15" fill="rgb(215,183,12)" fg:x="84896" fg:w="186"/><text x="79.6841%" y="911.50"></text></g><g><title>__rg_alloc (186 samples, 0.17%)</title><rect x="79.4341%" y="885" width="0.1740%" height="15" fill="rgb(229,104,42)" fg:x="84896" fg:w="186"/><text x="79.6841%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (186 samples, 0.17%)</title><rect x="79.4341%" y="869" width="0.1740%" height="15" fill="rgb(243,34,48)" fg:x="84896" fg:w="186"/><text x="79.6841%" y="879.50"></text></g><g><title>rust_alloc (180 samples, 0.17%)</title><rect x="79.4397%" y="853" width="0.1684%" height="15" fill="rgb(239,11,44)" fg:x="84902" fg:w="180"/><text x="79.6897%" y="863.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (1,571 samples, 1.47%)</title><rect x="78.1401%" y="1029" width="1.4699%" height="15" fill="rgb(231,98,35)" fg:x="83513" fg:w="1571"/><text x="78.3901%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::clone::Clone for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::clone (1,559 samples, 1.46%)</title><rect x="78.1513%" y="1013" width="1.4587%" height="15" fill="rgb(233,28,25)" fg:x="83525" fg:w="1559"/><text x="78.4013%" y="1023.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (217 samples, 0.20%)</title><rect x="79.4070%" y="997" width="0.2030%" height="15" fill="rgb(234,123,11)" fg:x="84867" fg:w="217"/><text x="79.6570%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (217 samples, 0.20%)</title><rect x="79.4070%" y="981" width="0.2030%" height="15" fill="rgb(220,69,3)" fg:x="84867" fg:w="217"/><text x="79.6570%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (6,806 samples, 6.37%)</title><rect x="73.2578%" y="1125" width="6.3681%" height="15" fill="rgb(214,64,36)" fg:x="78295" fg:w="6806"/><text x="73.5078%" y="1135.50">tremor_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,806 samples, 6.37%)</title><rect x="73.2578%" y="1109" width="6.3681%" height="15" fill="rgb(211,138,32)" fg:x="78295" fg:w="6806"/><text x="73.5078%" y="1119.50">&lt;core::f..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (6,806 samples, 6.37%)</title><rect x="73.2578%" y="1093" width="6.3681%" height="15" fill="rgb(213,118,47)" fg:x="78295" fg:w="6806"/><text x="73.5078%" y="1103.50">tremor_r..</text></g><g><title>tremor_runtime::connectors::source::build_events (6,806 samples, 6.37%)</title><rect x="73.2578%" y="1077" width="6.3681%" height="15" fill="rgb(243,124,49)" fg:x="78295" fg:w="6806"/><text x="73.5078%" y="1087.50">tremor_r..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,763 samples, 2.59%)</title><rect x="77.0407%" y="1061" width="2.5852%" height="15" fill="rgb(221,30,28)" fg:x="82338" fg:w="2763"/><text x="77.2907%" y="1071.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (1,917 samples, 1.79%)</title><rect x="77.8323%" y="1045" width="1.7937%" height="15" fill="rgb(246,37,13)" fg:x="83184" fg:w="1917"/><text x="78.0823%" y="1055.50">t..</text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (14 samples, 0.01%)</title><rect x="79.6128%" y="1029" width="0.0131%" height="15" fill="rgb(249,66,14)" fg:x="85087" fg:w="14"/><text x="79.8628%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (16 samples, 0.01%)</title><rect x="79.6306%" y="1125" width="0.0150%" height="15" fill="rgb(213,166,5)" fg:x="85106" fg:w="16"/><text x="79.8806%" y="1135.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="79.9019%" y="981" width="0.0159%" height="15" fill="rgb(221,66,24)" fg:x="85396" fg:w="17"/><text x="80.1519%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (17 samples, 0.02%)</title><rect x="79.9019%" y="965" width="0.0159%" height="15" fill="rgb(210,132,17)" fg:x="85396" fg:w="17"/><text x="80.1519%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.02%)</title><rect x="79.9019%" y="949" width="0.0159%" height="15" fill="rgb(243,202,5)" fg:x="85396" fg:w="17"/><text x="80.1519%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.02%)</title><rect x="79.9019%" y="933" width="0.0159%" height="15" fill="rgb(233,70,48)" fg:x="85396" fg:w="17"/><text x="80.1519%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="79.9178%" y="981" width="0.0131%" height="15" fill="rgb(238,41,26)" fg:x="85413" fg:w="14"/><text x="80.1678%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (21 samples, 0.02%)</title><rect x="79.9309%" y="981" width="0.0196%" height="15" fill="rgb(241,19,31)" fg:x="85427" fg:w="21"/><text x="80.1809%" y="991.50"></text></g><g><title>core::mem::replace (21 samples, 0.02%)</title><rect x="79.9309%" y="965" width="0.0196%" height="15" fill="rgb(214,76,10)" fg:x="85427" fg:w="21"/><text x="80.1809%" y="975.50"></text></g><g><title>core::ptr::read (20 samples, 0.02%)</title><rect x="79.9319%" y="949" width="0.0187%" height="15" fill="rgb(254,202,22)" fg:x="85428" fg:w="20"/><text x="80.1819%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (192 samples, 0.18%)</title><rect x="80.0152%" y="965" width="0.1796%" height="15" fill="rgb(214,72,24)" fg:x="85517" fg:w="192"/><text x="80.2652%" y="975.50"></text></g><g><title>core::mem::replace (192 samples, 0.18%)</title><rect x="80.0152%" y="949" width="0.1796%" height="15" fill="rgb(221,92,46)" fg:x="85517" fg:w="192"/><text x="80.2652%" y="959.50"></text></g><g><title>core::ptr::read (192 samples, 0.18%)</title><rect x="80.0152%" y="933" width="0.1796%" height="15" fill="rgb(246,13,50)" fg:x="85517" fg:w="192"/><text x="80.2652%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (311 samples, 0.29%)</title><rect x="79.9506%" y="981" width="0.2910%" height="15" fill="rgb(240,165,38)" fg:x="85448" fg:w="311"/><text x="80.2006%" y="991.50"></text></g><g><title>core::mem::drop (50 samples, 0.05%)</title><rect x="80.1948%" y="965" width="0.0468%" height="15" fill="rgb(241,24,51)" fg:x="85709" fg:w="50"/><text x="80.4448%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (50 samples, 0.05%)</title><rect x="80.1948%" y="949" width="0.0468%" height="15" fill="rgb(227,51,44)" fg:x="85709" fg:w="50"/><text x="80.4448%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (25 samples, 0.02%)</title><rect x="80.2435%" y="885" width="0.0234%" height="15" fill="rgb(231,121,3)" fg:x="85761" fg:w="25"/><text x="80.4935%" y="895.50"></text></g><g><title>core::mem::drop (28 samples, 0.03%)</title><rect x="80.2416%" y="981" width="0.0262%" height="15" fill="rgb(245,3,41)" fg:x="85759" fg:w="28"/><text x="80.4916%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (28 samples, 0.03%)</title><rect x="80.2416%" y="965" width="0.0262%" height="15" fill="rgb(214,13,26)" fg:x="85759" fg:w="28"/><text x="80.4916%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (28 samples, 0.03%)</title><rect x="80.2416%" y="949" width="0.0262%" height="15" fill="rgb(252,75,11)" fg:x="85759" fg:w="28"/><text x="80.4916%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="80.2416%" y="933" width="0.0262%" height="15" fill="rgb(218,226,17)" fg:x="85759" fg:w="28"/><text x="80.4916%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (26 samples, 0.02%)</title><rect x="80.2435%" y="917" width="0.0243%" height="15" fill="rgb(248,89,38)" fg:x="85761" fg:w="26"/><text x="80.4935%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (26 samples, 0.02%)</title><rect x="80.2435%" y="901" width="0.0243%" height="15" fill="rgb(237,73,46)" fg:x="85761" fg:w="26"/><text x="80.4935%" y="911.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="80.2678%" y="965" width="0.0178%" height="15" fill="rgb(242,78,33)" fg:x="85787" fg:w="19"/><text x="80.5178%" y="975.50"></text></g><g><title>std::sync::poison::Flag::done (11 samples, 0.01%)</title><rect x="80.2949%" y="933" width="0.0103%" height="15" fill="rgb(235,60,3)" fg:x="85816" fg:w="11"/><text x="80.5449%" y="943.50"></text></g><g><title>std::thread::panicking (11 samples, 0.01%)</title><rect x="80.2949%" y="917" width="0.0103%" height="15" fill="rgb(216,172,19)" fg:x="85816" fg:w="11"/><text x="80.5449%" y="927.50"></text></g><g><title>std::panicking::panicking (11 samples, 0.01%)</title><rect x="80.2949%" y="901" width="0.0103%" height="15" fill="rgb(227,6,42)" fg:x="85816" fg:w="11"/><text x="80.5449%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (11 samples, 0.01%)</title><rect x="80.2949%" y="885" width="0.0103%" height="15" fill="rgb(223,207,42)" fg:x="85816" fg:w="11"/><text x="80.5449%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="80.3052%" y="917" width="0.0103%" height="15" fill="rgb(246,138,30)" fg:x="85827" fg:w="11"/><text x="80.5552%" y="927.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (299 samples, 0.28%)</title><rect x="80.3155%" y="901" width="0.2798%" height="15" fill="rgb(251,199,47)" fg:x="85838" fg:w="299"/><text x="80.5655%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (373 samples, 0.35%)</title><rect x="80.2678%" y="981" width="0.3490%" height="15" fill="rgb(228,218,44)" fg:x="85787" fg:w="373"/><text x="80.5178%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (354 samples, 0.33%)</title><rect x="80.2856%" y="965" width="0.3312%" height="15" fill="rgb(220,68,6)" fg:x="85806" fg:w="354"/><text x="80.5356%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (354 samples, 0.33%)</title><rect x="80.2856%" y="949" width="0.3312%" height="15" fill="rgb(240,60,26)" fg:x="85806" fg:w="354"/><text x="80.5356%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (333 samples, 0.31%)</title><rect x="80.3052%" y="933" width="0.3116%" height="15" fill="rgb(211,200,19)" fg:x="85827" fg:w="333"/><text x="80.5552%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (322 samples, 0.30%)</title><rect x="80.3155%" y="917" width="0.3013%" height="15" fill="rgb(242,145,30)" fg:x="85838" fg:w="322"/><text x="80.5655%" y="927.50"></text></g><g><title>___pthread_mutex_unlock (23 samples, 0.02%)</title><rect x="80.5953%" y="901" width="0.0215%" height="15" fill="rgb(225,64,13)" fg:x="86137" fg:w="23"/><text x="80.8453%" y="911.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="80.6261%" y="933" width="0.0159%" height="15" fill="rgb(218,103,35)" fg:x="86170" fg:w="17"/><text x="80.8761%" y="943.50"></text></g><g><title>core::task::wake::Waker::will_wake (37 samples, 0.03%)</title><rect x="80.6187%" y="981" width="0.0346%" height="15" fill="rgb(216,93,46)" fg:x="86162" fg:w="37"/><text x="80.8687%" y="991.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (37 samples, 0.03%)</title><rect x="80.6187%" y="965" width="0.0346%" height="15" fill="rgb(225,159,27)" fg:x="86162" fg:w="37"/><text x="80.8687%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (29 samples, 0.03%)</title><rect x="80.6261%" y="949" width="0.0271%" height="15" fill="rgb(225,204,11)" fg:x="86170" fg:w="29"/><text x="80.8761%" y="959.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="80.6421%" y="933" width="0.0112%" height="15" fill="rgb(205,56,4)" fg:x="86187" fg:w="12"/><text x="80.8921%" y="943.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (16 samples, 0.01%)</title><rect x="80.6636%" y="949" width="0.0150%" height="15" fill="rgb(206,6,35)" fg:x="86210" fg:w="16"/><text x="80.9136%" y="959.50"></text></g><g><title>std::sync::poison::Flag::borrow (16 samples, 0.01%)</title><rect x="80.6636%" y="933" width="0.0150%" height="15" fill="rgb(247,73,52)" fg:x="86210" fg:w="16"/><text x="80.9136%" y="943.50"></text></g><g><title>std::thread::panicking (11 samples, 0.01%)</title><rect x="80.6683%" y="917" width="0.0103%" height="15" fill="rgb(246,97,4)" fg:x="86215" fg:w="11"/><text x="80.9183%" y="927.50"></text></g><g><title>std::panicking::panicking (11 samples, 0.01%)</title><rect x="80.6683%" y="901" width="0.0103%" height="15" fill="rgb(212,37,15)" fg:x="86215" fg:w="11"/><text x="80.9183%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (11 samples, 0.01%)</title><rect x="80.6683%" y="885" width="0.0103%" height="15" fill="rgb(208,130,40)" fg:x="86215" fg:w="11"/><text x="80.9183%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="80.6683%" y="869" width="0.0103%" height="15" fill="rgb(236,55,29)" fg:x="86215" fg:w="11"/><text x="80.9183%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="80.6683%" y="853" width="0.0103%" height="15" fill="rgb(209,156,45)" fg:x="86215" fg:w="11"/><text x="80.9183%" y="863.50"></text></g><g><title>event_listener::Inner::lock (625 samples, 0.58%)</title><rect x="80.6533%" y="981" width="0.5848%" height="15" fill="rgb(249,107,4)" fg:x="86199" fg:w="625"/><text x="80.9033%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (614 samples, 0.57%)</title><rect x="80.6636%" y="965" width="0.5745%" height="15" fill="rgb(227,7,13)" fg:x="86210" fg:w="614"/><text x="80.9136%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (598 samples, 0.56%)</title><rect x="80.6785%" y="949" width="0.5595%" height="15" fill="rgb(250,129,14)" fg:x="86226" fg:w="598"/><text x="80.9285%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (584 samples, 0.55%)</title><rect x="80.6916%" y="933" width="0.5464%" height="15" fill="rgb(229,92,13)" fg:x="86240" fg:w="584"/><text x="80.9416%" y="943.50"></text></g><g><title>___pthread_mutex_lock (584 samples, 0.55%)</title><rect x="80.6916%" y="917" width="0.5464%" height="15" fill="rgb(245,98,39)" fg:x="86240" fg:w="584"/><text x="80.9416%" y="927.50"></text></g><g><title>__GI___lll_lock_wait (66 samples, 0.06%)</title><rect x="81.1763%" y="901" width="0.0618%" height="15" fill="rgb(234,135,48)" fg:x="86758" fg:w="66"/><text x="81.4263%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,553 samples, 1.45%)</title><rect x="79.8262%" y="997" width="1.4531%" height="15" fill="rgb(230,98,28)" fg:x="85315" fg:w="1553"/><text x="80.0762%" y="1007.50"></text></g><g><title>event_listener::List::remove (44 samples, 0.04%)</title><rect x="81.2381%" y="981" width="0.0412%" height="15" fill="rgb(223,121,0)" fg:x="86824" fg:w="44"/><text x="81.4881%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (35 samples, 0.03%)</title><rect x="81.2465%" y="965" width="0.0327%" height="15" fill="rgb(234,173,33)" fg:x="86833" fg:w="35"/><text x="81.4965%" y="975.50"></text></g><g><title>core::mem::replace (35 samples, 0.03%)</title><rect x="81.2465%" y="949" width="0.0327%" height="15" fill="rgb(245,47,8)" fg:x="86833" fg:w="35"/><text x="81.4965%" y="959.50"></text></g><g><title>core::ptr::read (35 samples, 0.03%)</title><rect x="81.2465%" y="933" width="0.0327%" height="15" fill="rgb(205,17,20)" fg:x="86833" fg:w="35"/><text x="81.4965%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (34 samples, 0.03%)</title><rect x="81.4336%" y="949" width="0.0318%" height="15" fill="rgb(232,151,16)" fg:x="87033" fg:w="34"/><text x="81.6836%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (32 samples, 0.03%)</title><rect x="81.4355%" y="933" width="0.0299%" height="15" fill="rgb(208,30,32)" fg:x="87035" fg:w="32"/><text x="81.6855%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (32 samples, 0.03%)</title><rect x="81.4355%" y="917" width="0.0299%" height="15" fill="rgb(254,26,3)" fg:x="87035" fg:w="32"/><text x="81.6855%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.03%)</title><rect x="81.4355%" y="901" width="0.0299%" height="15" fill="rgb(240,177,30)" fg:x="87035" fg:w="32"/><text x="81.6855%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (177 samples, 0.17%)</title><rect x="81.4692%" y="949" width="0.1656%" height="15" fill="rgb(248,76,44)" fg:x="87071" fg:w="177"/><text x="81.7192%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (177 samples, 0.17%)</title><rect x="81.4692%" y="933" width="0.1656%" height="15" fill="rgb(241,186,54)" fg:x="87071" fg:w="177"/><text x="81.7192%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (424 samples, 0.40%)</title><rect x="81.6348%" y="949" width="0.3967%" height="15" fill="rgb(249,171,29)" fg:x="87248" fg:w="424"/><text x="81.8848%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (414 samples, 0.39%)</title><rect x="81.6441%" y="933" width="0.3874%" height="15" fill="rgb(237,151,44)" fg:x="87258" fg:w="414"/><text x="81.8941%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (790 samples, 0.74%)</title><rect x="81.3017%" y="981" width="0.7392%" height="15" fill="rgb(228,174,30)" fg:x="86892" fg:w="790"/><text x="81.5517%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (753 samples, 0.70%)</title><rect x="81.3363%" y="965" width="0.7046%" height="15" fill="rgb(252,14,37)" fg:x="86929" fg:w="753"/><text x="81.5863%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (144 samples, 0.13%)</title><rect x="82.0727%" y="965" width="0.1347%" height="15" fill="rgb(207,111,40)" fg:x="87716" fg:w="144"/><text x="82.3227%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (144 samples, 0.13%)</title><rect x="82.0727%" y="949" width="0.1347%" height="15" fill="rgb(248,171,54)" fg:x="87716" fg:w="144"/><text x="82.3227%" y="959.50"></text></g><g><title>event_listener::Event::try_inner (158 samples, 0.15%)</title><rect x="82.2074%" y="965" width="0.1478%" height="15" fill="rgb(211,127,2)" fg:x="87860" fg:w="158"/><text x="82.4574%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (158 samples, 0.15%)</title><rect x="82.2074%" y="949" width="0.1478%" height="15" fill="rgb(236,87,47)" fg:x="87860" fg:w="158"/><text x="82.4574%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (158 samples, 0.15%)</title><rect x="82.2074%" y="933" width="0.1478%" height="15" fill="rgb(223,190,45)" fg:x="87860" fg:w="158"/><text x="82.4574%" y="943.50"></text></g><g><title>event_listener::Inner::lock (14 samples, 0.01%)</title><rect x="82.3553%" y="965" width="0.0131%" height="15" fill="rgb(215,5,16)" fg:x="88018" fg:w="14"/><text x="82.6053%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="82.3553%" y="949" width="0.0131%" height="15" fill="rgb(252,82,33)" fg:x="88018" fg:w="14"/><text x="82.6053%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="82.3553%" y="933" width="0.0131%" height="15" fill="rgb(247,213,44)" fg:x="88018" fg:w="14"/><text x="82.6053%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="82.3562%" y="917" width="0.0122%" height="15" fill="rgb(205,196,44)" fg:x="88019" fg:w="13"/><text x="82.6062%" y="927.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="82.3562%" y="901" width="0.0122%" height="15" fill="rgb(237,96,54)" fg:x="88019" fg:w="13"/><text x="82.6062%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (12 samples, 0.01%)</title><rect x="82.3899%" y="789" width="0.0112%" height="15" fill="rgb(230,113,34)" fg:x="88055" fg:w="12"/><text x="82.6399%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_swap (12 samples, 0.01%)</title><rect x="82.3899%" y="773" width="0.0112%" height="15" fill="rgb(221,224,12)" fg:x="88055" fg:w="12"/><text x="82.6399%" y="783.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (11 samples, 0.01%)</title><rect x="82.4011%" y="789" width="0.0103%" height="15" fill="rgb(219,112,44)" fg:x="88067" fg:w="11"/><text x="82.6511%" y="799.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (11 samples, 0.01%)</title><rect x="82.4011%" y="773" width="0.0103%" height="15" fill="rgb(210,31,13)" fg:x="88067" fg:w="11"/><text x="82.6511%" y="783.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (11 samples, 0.01%)</title><rect x="82.4011%" y="757" width="0.0103%" height="15" fill="rgb(230,25,16)" fg:x="88067" fg:w="11"/><text x="82.6511%" y="767.50"></text></g><g><title>__GI___pthread_cond_signal (11 samples, 0.01%)</title><rect x="82.4011%" y="741" width="0.0103%" height="15" fill="rgb(246,108,53)" fg:x="88067" fg:w="11"/><text x="82.6511%" y="751.50"></text></g><g><title>parking::Unparker::unpark (43 samples, 0.04%)</title><rect x="82.3815%" y="821" width="0.0402%" height="15" fill="rgb(241,172,50)" fg:x="88046" fg:w="43"/><text x="82.6315%" y="831.50"></text></g><g><title>parking::Inner::unpark (34 samples, 0.03%)</title><rect x="82.3899%" y="805" width="0.0318%" height="15" fill="rgb(235,141,10)" fg:x="88055" fg:w="34"/><text x="82.6399%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="82.4114%" y="789" width="0.0103%" height="15" fill="rgb(220,174,43)" fg:x="88078" fg:w="11"/><text x="82.6614%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="82.4114%" y="773" width="0.0103%" height="15" fill="rgb(215,181,40)" fg:x="88078" fg:w="11"/><text x="82.6614%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (11 samples, 0.01%)</title><rect x="82.4114%" y="757" width="0.0103%" height="15" fill="rgb(230,97,2)" fg:x="88078" fg:w="11"/><text x="82.6614%" y="767.50"></text></g><g><title>___pthread_mutex_lock (11 samples, 0.01%)</title><rect x="82.4114%" y="741" width="0.0103%" height="15" fill="rgb(211,25,27)" fg:x="88078" fg:w="11"/><text x="82.6614%" y="751.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (44 samples, 0.04%)</title><rect x="82.3815%" y="837" width="0.0412%" height="15" fill="rgb(230,87,26)" fg:x="88046" fg:w="44"/><text x="82.6315%" y="847.50"></text></g><g><title>core::task::wake::Waker::wake (50 samples, 0.05%)</title><rect x="82.3815%" y="869" width="0.0468%" height="15" fill="rgb(227,160,17)" fg:x="88046" fg:w="50"/><text x="82.6315%" y="879.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (50 samples, 0.05%)</title><rect x="82.3815%" y="853" width="0.0468%" height="15" fill="rgb(244,85,34)" fg:x="88046" fg:w="50"/><text x="82.6315%" y="863.50"></text></g><g><title>async_executor::State::notify (64 samples, 0.06%)</title><rect x="82.3702%" y="885" width="0.0599%" height="15" fill="rgb(207,70,0)" fg:x="88034" fg:w="64"/><text x="82.6202%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (16 samples, 0.01%)</title><rect x="82.4301%" y="885" width="0.0150%" height="15" fill="rgb(223,129,7)" fg:x="88098" fg:w="16"/><text x="82.6801%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (15 samples, 0.01%)</title><rect x="82.4310%" y="869" width="0.0140%" height="15" fill="rgb(246,105,7)" fg:x="88099" fg:w="15"/><text x="82.6810%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (82 samples, 0.08%)</title><rect x="82.3693%" y="901" width="0.0767%" height="15" fill="rgb(215,154,42)" fg:x="88033" fg:w="82"/><text x="82.6193%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (13 samples, 0.01%)</title><rect x="82.4460%" y="901" width="0.0122%" height="15" fill="rgb(220,215,30)" fg:x="88115" fg:w="13"/><text x="82.6960%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.01%)</title><rect x="82.4460%" y="885" width="0.0122%" height="15" fill="rgb(228,81,51)" fg:x="88115" fg:w="13"/><text x="82.6960%" y="895.50"></text></g><g><title>event_listener::List::notify (98 samples, 0.09%)</title><rect x="82.3684%" y="965" width="0.0917%" height="15" fill="rgb(247,71,54)" fg:x="88032" fg:w="98"/><text x="82.6184%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (97 samples, 0.09%)</title><rect x="82.3693%" y="949" width="0.0908%" height="15" fill="rgb(234,176,34)" fg:x="88033" fg:w="97"/><text x="82.6193%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (97 samples, 0.09%)</title><rect x="82.3693%" y="933" width="0.0908%" height="15" fill="rgb(241,103,54)" fg:x="88033" fg:w="97"/><text x="82.6193%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (97 samples, 0.09%)</title><rect x="82.3693%" y="917" width="0.0908%" height="15" fill="rgb(228,22,34)" fg:x="88033" fg:w="97"/><text x="82.6193%" y="927.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,970 samples, 1.84%)</title><rect x="81.2792%" y="997" width="1.8433%" height="15" fill="rgb(241,179,48)" fg:x="86868" fg:w="1970"/><text x="81.5292%" y="1007.50">a..</text></g><g><title>event_listener::Event::notify (1,156 samples, 1.08%)</title><rect x="82.0409%" y="981" width="1.0816%" height="15" fill="rgb(235,167,37)" fg:x="87682" fg:w="1156"/><text x="82.2909%" y="991.50"></text></g><g><title>event_listener::full_fence (708 samples, 0.66%)</title><rect x="82.4600%" y="965" width="0.6624%" height="15" fill="rgb(213,109,30)" fg:x="88130" fg:w="708"/><text x="82.7100%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (708 samples, 0.66%)</title><rect x="82.4600%" y="949" width="0.6624%" height="15" fill="rgb(222,172,16)" fg:x="88130" fg:w="708"/><text x="82.7100%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (708 samples, 0.66%)</title><rect x="82.4600%" y="933" width="0.6624%" height="15" fill="rgb(233,192,5)" fg:x="88130" fg:w="708"/><text x="82.7100%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (23 samples, 0.02%)</title><rect x="83.1225%" y="997" width="0.0215%" height="15" fill="rgb(247,189,41)" fg:x="88838" fg:w="23"/><text x="83.3725%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (46 samples, 0.04%)</title><rect x="83.1524%" y="949" width="0.0430%" height="15" fill="rgb(218,134,47)" fg:x="88870" fg:w="46"/><text x="83.4024%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (45 samples, 0.04%)</title><rect x="83.1534%" y="933" width="0.0421%" height="15" fill="rgb(216,29,3)" fg:x="88871" fg:w="45"/><text x="83.4034%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="83.1534%" y="917" width="0.0421%" height="15" fill="rgb(246,140,12)" fg:x="88871" fg:w="45"/><text x="83.4034%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (44 samples, 0.04%)</title><rect x="83.1543%" y="901" width="0.0412%" height="15" fill="rgb(230,136,11)" fg:x="88872" fg:w="44"/><text x="83.4043%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (42 samples, 0.04%)</title><rect x="83.1562%" y="885" width="0.0393%" height="15" fill="rgb(247,22,47)" fg:x="88874" fg:w="42"/><text x="83.4062%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (42 samples, 0.04%)</title><rect x="83.1562%" y="869" width="0.0393%" height="15" fill="rgb(218,84,22)" fg:x="88874" fg:w="42"/><text x="83.4062%" y="879.50"></text></g><g><title>event_listener::Inner::lock (70 samples, 0.07%)</title><rect x="83.1974%" y="949" width="0.0655%" height="15" fill="rgb(216,87,39)" fg:x="88918" fg:w="70"/><text x="83.4474%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (69 samples, 0.06%)</title><rect x="83.1983%" y="933" width="0.0646%" height="15" fill="rgb(221,178,8)" fg:x="88919" fg:w="69"/><text x="83.4483%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (65 samples, 0.06%)</title><rect x="83.2020%" y="917" width="0.0608%" height="15" fill="rgb(230,42,11)" fg:x="88923" fg:w="65"/><text x="83.4520%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (59 samples, 0.06%)</title><rect x="83.2076%" y="901" width="0.0552%" height="15" fill="rgb(237,229,4)" fg:x="88929" fg:w="59"/><text x="83.4576%" y="911.50"></text></g><g><title>___pthread_mutex_lock (59 samples, 0.06%)</title><rect x="83.2076%" y="885" width="0.0552%" height="15" fill="rgb(222,31,33)" fg:x="88929" fg:w="59"/><text x="83.4576%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (16 samples, 0.01%)</title><rect x="83.2479%" y="869" width="0.0150%" height="15" fill="rgb(210,17,39)" fg:x="88972" fg:w="16"/><text x="83.4979%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (129 samples, 0.12%)</title><rect x="83.1524%" y="965" width="0.1207%" height="15" fill="rgb(244,93,20)" fg:x="88870" fg:w="129"/><text x="83.4024%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (169 samples, 0.16%)</title><rect x="83.1440%" y="997" width="0.1581%" height="15" fill="rgb(210,40,47)" fg:x="88861" fg:w="169"/><text x="83.3940%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (160 samples, 0.15%)</title><rect x="83.1524%" y="981" width="0.1497%" height="15" fill="rgb(239,211,47)" fg:x="88870" fg:w="160"/><text x="83.4024%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (31 samples, 0.03%)</title><rect x="83.2731%" y="965" width="0.0290%" height="15" fill="rgb(251,223,49)" fg:x="88999" fg:w="31"/><text x="83.5231%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="83.2731%" y="949" width="0.0290%" height="15" fill="rgb(221,149,5)" fg:x="88999" fg:w="31"/><text x="83.5231%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (28 samples, 0.03%)</title><rect x="83.2759%" y="933" width="0.0262%" height="15" fill="rgb(219,224,51)" fg:x="89002" fg:w="28"/><text x="83.5259%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (28 samples, 0.03%)</title><rect x="83.2759%" y="917" width="0.0262%" height="15" fill="rgb(223,7,8)" fg:x="89002" fg:w="28"/><text x="83.5259%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (70 samples, 0.07%)</title><rect x="83.3068%" y="981" width="0.0655%" height="15" fill="rgb(241,217,22)" fg:x="89035" fg:w="70"/><text x="83.5568%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (70 samples, 0.07%)</title><rect x="83.3068%" y="965" width="0.0655%" height="15" fill="rgb(248,209,0)" fg:x="89035" fg:w="70"/><text x="83.5568%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (70 samples, 0.07%)</title><rect x="83.3068%" y="949" width="0.0655%" height="15" fill="rgb(217,205,4)" fg:x="89035" fg:w="70"/><text x="83.5568%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (50 samples, 0.05%)</title><rect x="83.3742%" y="901" width="0.0468%" height="15" fill="rgb(228,124,39)" fg:x="89107" fg:w="50"/><text x="83.6242%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (53 samples, 0.05%)</title><rect x="83.3723%" y="981" width="0.0496%" height="15" fill="rgb(250,116,42)" fg:x="89105" fg:w="53"/><text x="83.6223%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (53 samples, 0.05%)</title><rect x="83.3723%" y="965" width="0.0496%" height="15" fill="rgb(223,202,9)" fg:x="89105" fg:w="53"/><text x="83.6223%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.05%)</title><rect x="83.3723%" y="949" width="0.0496%" height="15" fill="rgb(242,222,40)" fg:x="89105" fg:w="53"/><text x="83.6223%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (51 samples, 0.05%)</title><rect x="83.3742%" y="933" width="0.0477%" height="15" fill="rgb(229,99,46)" fg:x="89107" fg:w="51"/><text x="83.6242%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (51 samples, 0.05%)</title><rect x="83.3742%" y="917" width="0.0477%" height="15" fill="rgb(225,56,46)" fg:x="89107" fg:w="51"/><text x="83.6242%" y="927.50"></text></g><g><title>event_listener::Inner::lock (41 samples, 0.04%)</title><rect x="83.4313%" y="981" width="0.0384%" height="15" fill="rgb(227,94,5)" fg:x="89168" fg:w="41"/><text x="83.6813%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (41 samples, 0.04%)</title><rect x="83.4313%" y="965" width="0.0384%" height="15" fill="rgb(205,112,38)" fg:x="89168" fg:w="41"/><text x="83.6813%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (41 samples, 0.04%)</title><rect x="83.4313%" y="949" width="0.0384%" height="15" fill="rgb(231,133,46)" fg:x="89168" fg:w="41"/><text x="83.6813%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (41 samples, 0.04%)</title><rect x="83.4313%" y="933" width="0.0384%" height="15" fill="rgb(217,16,9)" fg:x="89168" fg:w="41"/><text x="83.6813%" y="943.50"></text></g><g><title>___pthread_mutex_lock (39 samples, 0.04%)</title><rect x="83.4331%" y="917" width="0.0365%" height="15" fill="rgb(249,173,9)" fg:x="89170" fg:w="39"/><text x="83.6831%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,014 samples, 3.76%)</title><rect x="79.7438%" y="1013" width="3.7558%" height="15" fill="rgb(205,163,53)" fg:x="85227" fg:w="4014"/><text x="79.9938%" y="1023.50">&lt;asy..</text></g><g><title>event_listener::Event::listen (211 samples, 0.20%)</title><rect x="83.3021%" y="997" width="0.1974%" height="15" fill="rgb(217,54,41)" fg:x="89030" fg:w="211"/><text x="83.5521%" y="1007.50"></text></g><g><title>event_listener::full_fence (30 samples, 0.03%)</title><rect x="83.4715%" y="981" width="0.0281%" height="15" fill="rgb(228,216,12)" fg:x="89211" fg:w="30"/><text x="83.7215%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (30 samples, 0.03%)</title><rect x="83.4715%" y="965" width="0.0281%" height="15" fill="rgb(244,228,15)" fg:x="89211" fg:w="30"/><text x="83.7215%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.03%)</title><rect x="83.4715%" y="949" width="0.0281%" height="15" fill="rgb(221,176,53)" fg:x="89211" fg:w="30"/><text x="83.7215%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (822 samples, 0.77%)</title><rect x="83.5033%" y="1013" width="0.7691%" height="15" fill="rgb(205,94,34)" fg:x="89245" fg:w="822"/><text x="83.7533%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (204 samples, 0.19%)</title><rect x="84.2883%" y="997" width="0.1909%" height="15" fill="rgb(213,110,48)" fg:x="90084" fg:w="204"/><text x="84.5383%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (843 samples, 0.79%)</title><rect x="84.4858%" y="965" width="0.7888%" height="15" fill="rgb(236,142,28)" fg:x="90295" fg:w="843"/><text x="84.7358%" y="975.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="85.2932%" y="853" width="0.0131%" height="15" fill="rgb(225,135,29)" fg:x="91158" fg:w="14"/><text x="85.5432%" y="863.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="85.3166%" y="789" width="0.0103%" height="15" fill="rgb(252,45,31)" fg:x="91183" fg:w="11"/><text x="85.5666%" y="799.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (17 samples, 0.02%)</title><rect x="85.3812%" y="757" width="0.0159%" height="15" fill="rgb(211,187,50)" fg:x="91252" fg:w="17"/><text x="85.6312%" y="767.50"></text></g><g><title> (17 samples, 0.02%)</title><rect x="85.3812%" y="741" width="0.0159%" height="15" fill="rgb(229,109,7)" fg:x="91252" fg:w="17"/><text x="85.6312%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (85 samples, 0.08%)</title><rect x="85.3316%" y="789" width="0.0795%" height="15" fill="rgb(251,131,51)" fg:x="91199" fg:w="85"/><text x="85.5816%" y="799.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (73 samples, 0.07%)</title><rect x="85.3428%" y="773" width="0.0683%" height="15" fill="rgb(251,180,35)" fg:x="91211" fg:w="73"/><text x="85.5928%" y="783.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="85.3999%" y="757" width="0.0112%" height="15" fill="rgb(211,46,32)" fg:x="91272" fg:w="12"/><text x="85.6499%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (119 samples, 0.11%)</title><rect x="85.3138%" y="821" width="0.1113%" height="15" fill="rgb(248,123,17)" fg:x="91180" fg:w="119"/><text x="85.5638%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (119 samples, 0.11%)</title><rect x="85.3138%" y="805" width="0.1113%" height="15" fill="rgb(227,141,18)" fg:x="91180" fg:w="119"/><text x="85.5638%" y="815.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="85.4149%" y="789" width="0.0103%" height="15" fill="rgb(216,102,9)" fg:x="91288" fg:w="11"/><text x="85.6649%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (124 samples, 0.12%)</title><rect x="85.3138%" y="853" width="0.1160%" height="15" fill="rgb(253,47,13)" fg:x="91180" fg:w="124"/><text x="85.5638%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (124 samples, 0.12%)</title><rect x="85.3138%" y="837" width="0.1160%" height="15" fill="rgb(226,93,23)" fg:x="91180" fg:w="124"/><text x="85.5638%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (154 samples, 0.14%)</title><rect x="85.2914%" y="869" width="0.1441%" height="15" fill="rgb(247,104,17)" fg:x="91156" fg:w="154"/><text x="85.5414%" y="879.50"></text></g><g><title>rust_dealloc (169 samples, 0.16%)</title><rect x="85.2848%" y="885" width="0.1581%" height="15" fill="rgb(233,203,26)" fg:x="91149" fg:w="169"/><text x="85.5348%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (6,142 samples, 5.75%)</title><rect x="79.7017%" y="1029" width="5.7468%" height="15" fill="rgb(244,98,49)" fg:x="85182" fg:w="6142"/><text x="79.9517%" y="1039.50">&lt;async_..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,257 samples, 1.18%)</title><rect x="84.2724%" y="1013" width="1.1761%" height="15" fill="rgb(235,134,22)" fg:x="90067" fg:w="1257"/><text x="84.5224%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,036 samples, 0.97%)</title><rect x="84.4792%" y="997" width="0.9693%" height="15" fill="rgb(221,70,32)" fg:x="90288" fg:w="1036"/><text x="84.7292%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (1,036 samples, 0.97%)</title><rect x="84.4792%" y="981" width="0.9693%" height="15" fill="rgb(238,15,50)" fg:x="90288" fg:w="1036"/><text x="84.7292%" y="991.50"></text></g><g><title>alloc::alloc::box_free (186 samples, 0.17%)</title><rect x="85.2745%" y="965" width="0.1740%" height="15" fill="rgb(215,221,48)" fg:x="91138" fg:w="186"/><text x="85.5245%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (186 samples, 0.17%)</title><rect x="85.2745%" y="949" width="0.1740%" height="15" fill="rgb(236,73,3)" fg:x="91138" fg:w="186"/><text x="85.5245%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (186 samples, 0.17%)</title><rect x="85.2745%" y="933" width="0.1740%" height="15" fill="rgb(250,107,11)" fg:x="91138" fg:w="186"/><text x="85.5245%" y="943.50"></text></g><g><title>__rg_dealloc (186 samples, 0.17%)</title><rect x="85.2745%" y="917" width="0.1740%" height="15" fill="rgb(242,39,14)" fg:x="91138" fg:w="186"/><text x="85.5245%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (186 samples, 0.17%)</title><rect x="85.2745%" y="901" width="0.1740%" height="15" fill="rgb(248,164,37)" fg:x="91138" fg:w="186"/><text x="85.5245%" y="911.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,569 samples, 6.15%)</title><rect x="79.6764%" y="1045" width="6.1464%" height="15" fill="rgb(217,60,12)" fg:x="85155" fg:w="6569"/><text x="79.9264%" y="1055.50">&lt;async_s..</text></g><g><title>__memcpy_avx_unaligned_erms (400 samples, 0.37%)</title><rect x="85.4486%" y="1029" width="0.3743%" height="15" fill="rgb(240,125,29)" fg:x="91324" fg:w="400"/><text x="85.6986%" y="1039.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,021 samples, 6.57%)</title><rect x="79.6456%" y="1109" width="6.5693%" height="15" fill="rgb(208,207,28)" fg:x="85122" fg:w="7021"/><text x="79.8956%" y="1119.50">&lt;async_st..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (7,021 samples, 6.57%)</title><rect x="79.6456%" y="1093" width="6.5693%" height="15" fill="rgb(209,159,27)" fg:x="85122" fg:w="7021"/><text x="79.8956%" y="1103.50">&lt;tremor_r..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (7,021 samples, 6.57%)</title><rect x="79.6456%" y="1077" width="6.5693%" height="15" fill="rgb(251,176,53)" fg:x="85122" fg:w="7021"/><text x="79.8956%" y="1087.50">&lt;async_st..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (7,021 samples, 6.57%)</title><rect x="79.6456%" y="1061" width="6.5693%" height="15" fill="rgb(211,85,7)" fg:x="85122" fg:w="7021"/><text x="79.8956%" y="1071.50">&lt;tremor_r..</text></g><g><title>__memcpy_avx_unaligned_erms (419 samples, 0.39%)</title><rect x="85.8228%" y="1045" width="0.3920%" height="15" fill="rgb(216,64,54)" fg:x="91724" fg:w="419"/><text x="86.0728%" y="1055.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="86.2841%" y="1029" width="0.0290%" height="15" fill="rgb(217,54,24)" fg:x="92217" fg:w="31"/><text x="86.5341%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (18 samples, 0.02%)</title><rect x="86.3215%" y="1013" width="0.0168%" height="15" fill="rgb(208,206,53)" fg:x="92257" fg:w="18"/><text x="86.5715%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.01%)</title><rect x="86.3234%" y="997" width="0.0150%" height="15" fill="rgb(251,74,39)" fg:x="92259" fg:w="16"/><text x="86.5734%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="86.3234%" y="981" width="0.0150%" height="15" fill="rgb(226,47,5)" fg:x="92259" fg:w="16"/><text x="86.5734%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="86.3253%" y="965" width="0.0131%" height="15" fill="rgb(234,111,33)" fg:x="92261" fg:w="14"/><text x="86.5753%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="86.3253%" y="949" width="0.0131%" height="15" fill="rgb(251,14,10)" fg:x="92261" fg:w="14"/><text x="86.5753%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="86.3253%" y="933" width="0.0131%" height="15" fill="rgb(232,43,0)" fg:x="92261" fg:w="14"/><text x="86.5753%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (39 samples, 0.04%)</title><rect x="86.3131%" y="1029" width="0.0365%" height="15" fill="rgb(222,68,43)" fg:x="92248" fg:w="39"/><text x="86.5631%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (12 samples, 0.01%)</title><rect x="86.3384%" y="1013" width="0.0112%" height="15" fill="rgb(217,24,23)" fg:x="92275" fg:w="12"/><text x="86.5884%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.01%)</title><rect x="86.3384%" y="997" width="0.0112%" height="15" fill="rgb(229,209,14)" fg:x="92275" fg:w="12"/><text x="86.5884%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="86.3384%" y="981" width="0.0112%" height="15" fill="rgb(250,149,48)" fg:x="92275" fg:w="12"/><text x="86.5884%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="86.3384%" y="965" width="0.0112%" height="15" fill="rgb(210,120,37)" fg:x="92275" fg:w="12"/><text x="86.5884%" y="975.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="86.3384%" y="949" width="0.0112%" height="15" fill="rgb(210,21,8)" fg:x="92275" fg:w="12"/><text x="86.5884%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (34 samples, 0.03%)</title><rect x="86.3496%" y="1029" width="0.0318%" height="15" fill="rgb(243,145,7)" fg:x="92287" fg:w="34"/><text x="86.5996%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (29 samples, 0.03%)</title><rect x="86.4076%" y="1013" width="0.0271%" height="15" fill="rgb(238,178,32)" fg:x="92349" fg:w="29"/><text x="86.6576%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (399 samples, 0.37%)</title><rect x="86.5358%" y="997" width="0.3733%" height="15" fill="rgb(222,4,10)" fg:x="92486" fg:w="399"/><text x="86.7858%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (24 samples, 0.02%)</title><rect x="87.0036%" y="981" width="0.0225%" height="15" fill="rgb(239,7,37)" fg:x="92986" fg:w="24"/><text x="87.2536%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (20 samples, 0.02%)</title><rect x="87.0261%" y="981" width="0.0187%" height="15" fill="rgb(215,31,37)" fg:x="93010" fg:w="20"/><text x="87.2761%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (16 samples, 0.01%)</title><rect x="87.0298%" y="965" width="0.0150%" height="15" fill="rgb(224,83,33)" fg:x="93014" fg:w="16"/><text x="87.2798%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.01%)</title><rect x="87.0298%" y="949" width="0.0150%" height="15" fill="rgb(239,55,3)" fg:x="93014" fg:w="16"/><text x="87.2798%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="87.0298%" y="933" width="0.0150%" height="15" fill="rgb(247,92,11)" fg:x="93014" fg:w="16"/><text x="87.2798%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (11 samples, 0.01%)</title><rect x="87.0448%" y="981" width="0.0103%" height="15" fill="rgb(239,200,7)" fg:x="93030" fg:w="11"/><text x="87.2948%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (208 samples, 0.19%)</title><rect x="87.0551%" y="981" width="0.1946%" height="15" fill="rgb(227,115,8)" fg:x="93041" fg:w="208"/><text x="87.3051%" y="991.50"></text></g><g><title>core::ptr::write (208 samples, 0.19%)</title><rect x="87.0551%" y="965" width="0.1946%" height="15" fill="rgb(215,189,27)" fg:x="93041" fg:w="208"/><text x="87.3051%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (203 samples, 0.19%)</title><rect x="87.0598%" y="949" width="0.1899%" height="15" fill="rgb(251,216,39)" fg:x="93046" fg:w="203"/><text x="87.3098%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (294 samples, 0.28%)</title><rect x="87.2497%" y="981" width="0.2751%" height="15" fill="rgb(207,29,47)" fg:x="93249" fg:w="294"/><text x="87.4997%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (294 samples, 0.28%)</title><rect x="87.2497%" y="965" width="0.2751%" height="15" fill="rgb(210,71,34)" fg:x="93249" fg:w="294"/><text x="87.4997%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (195 samples, 0.18%)</title><rect x="87.5248%" y="981" width="0.1825%" height="15" fill="rgb(253,217,51)" fg:x="93543" fg:w="195"/><text x="87.7748%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (190 samples, 0.18%)</title><rect x="87.5295%" y="965" width="0.1778%" height="15" fill="rgb(222,117,46)" fg:x="93548" fg:w="190"/><text x="87.7795%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,374 samples, 1.29%)</title><rect x="86.4347%" y="1013" width="1.2856%" height="15" fill="rgb(226,132,6)" fg:x="92378" fg:w="1374"/><text x="86.6847%" y="1023.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (867 samples, 0.81%)</title><rect x="86.9091%" y="997" width="0.8112%" height="15" fill="rgb(254,145,51)" fg:x="92885" fg:w="867"/><text x="87.1591%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (14 samples, 0.01%)</title><rect x="87.7072%" y="981" width="0.0131%" height="15" fill="rgb(231,199,27)" fg:x="93738" fg:w="14"/><text x="87.9572%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_store (14 samples, 0.01%)</title><rect x="87.7072%" y="965" width="0.0131%" height="15" fill="rgb(245,158,14)" fg:x="93738" fg:w="14"/><text x="87.9572%" y="975.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="87.7381%" y="917" width="0.0122%" height="15" fill="rgb(240,113,14)" fg:x="93771" fg:w="13"/><text x="87.9881%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (17 samples, 0.02%)</title><rect x="87.7353%" y="997" width="0.0159%" height="15" fill="rgb(210,20,13)" fg:x="93768" fg:w="17"/><text x="87.9853%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.01%)</title><rect x="87.7363%" y="981" width="0.0150%" height="15" fill="rgb(241,144,13)" fg:x="93769" fg:w="16"/><text x="87.9863%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="87.7363%" y="965" width="0.0150%" height="15" fill="rgb(235,43,34)" fg:x="93769" fg:w="16"/><text x="87.9863%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="87.7381%" y="949" width="0.0131%" height="15" fill="rgb(208,36,20)" fg:x="93771" fg:w="14"/><text x="87.9881%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="87.7381%" y="933" width="0.0131%" height="15" fill="rgb(239,204,10)" fg:x="93771" fg:w="14"/><text x="87.9881%" y="943.50"></text></g><g><title>event_listener::Inner::lock (46 samples, 0.04%)</title><rect x="87.7578%" y="997" width="0.0430%" height="15" fill="rgb(217,84,43)" fg:x="93792" fg:w="46"/><text x="88.0078%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (46 samples, 0.04%)</title><rect x="87.7578%" y="981" width="0.0430%" height="15" fill="rgb(241,170,50)" fg:x="93792" fg:w="46"/><text x="88.0078%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (46 samples, 0.04%)</title><rect x="87.7578%" y="965" width="0.0430%" height="15" fill="rgb(226,205,29)" fg:x="93792" fg:w="46"/><text x="88.0078%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (46 samples, 0.04%)</title><rect x="87.7578%" y="949" width="0.0430%" height="15" fill="rgb(233,113,1)" fg:x="93792" fg:w="46"/><text x="88.0078%" y="959.50"></text></g><g><title>___pthread_mutex_lock (46 samples, 0.04%)</title><rect x="87.7578%" y="933" width="0.0430%" height="15" fill="rgb(253,98,13)" fg:x="93792" fg:w="46"/><text x="88.0078%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (15 samples, 0.01%)</title><rect x="87.8083%" y="901" width="0.0140%" height="15" fill="rgb(211,115,12)" fg:x="93846" fg:w="15"/><text x="88.0583%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="87.8083%" y="885" width="0.0140%" height="15" fill="rgb(208,12,16)" fg:x="93846" fg:w="15"/><text x="88.0583%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="87.8083%" y="869" width="0.0140%" height="15" fill="rgb(237,193,54)" fg:x="93846" fg:w="15"/><text x="88.0583%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="87.8083%" y="853" width="0.0140%" height="15" fill="rgb(243,22,42)" fg:x="93846" fg:w="15"/><text x="88.0583%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (15 samples, 0.01%)</title><rect x="87.8083%" y="837" width="0.0140%" height="15" fill="rgb(233,151,36)" fg:x="93846" fg:w="15"/><text x="88.0583%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (16 samples, 0.01%)</title><rect x="87.8467%" y="821" width="0.0150%" height="15" fill="rgb(237,57,45)" fg:x="93887" fg:w="16"/><text x="88.0967%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_swap (16 samples, 0.01%)</title><rect x="87.8467%" y="805" width="0.0150%" height="15" fill="rgb(221,88,17)" fg:x="93887" fg:w="16"/><text x="88.0967%" y="815.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (17 samples, 0.02%)</title><rect x="87.8616%" y="821" width="0.0159%" height="15" fill="rgb(230,79,15)" fg:x="93903" fg:w="17"/><text x="88.1116%" y="831.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (17 samples, 0.02%)</title><rect x="87.8616%" y="805" width="0.0159%" height="15" fill="rgb(213,57,13)" fg:x="93903" fg:w="17"/><text x="88.1116%" y="815.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (17 samples, 0.02%)</title><rect x="87.8616%" y="789" width="0.0159%" height="15" fill="rgb(222,116,39)" fg:x="93903" fg:w="17"/><text x="88.1116%" y="799.50"></text></g><g><title>__GI___pthread_cond_signal (17 samples, 0.02%)</title><rect x="87.8616%" y="773" width="0.0159%" height="15" fill="rgb(245,107,2)" fg:x="93903" fg:w="17"/><text x="88.1116%" y="783.50"></text></g><g><title>parking::Unparker::unpark (60 samples, 0.06%)</title><rect x="87.8354%" y="853" width="0.0561%" height="15" fill="rgb(238,1,10)" fg:x="93875" fg:w="60"/><text x="88.0854%" y="863.50"></text></g><g><title>parking::Inner::unpark (52 samples, 0.05%)</title><rect x="87.8429%" y="837" width="0.0487%" height="15" fill="rgb(249,4,48)" fg:x="93883" fg:w="52"/><text x="88.0929%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="87.8775%" y="821" width="0.0140%" height="15" fill="rgb(223,151,18)" fg:x="93920" fg:w="15"/><text x="88.1275%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="87.8775%" y="805" width="0.0140%" height="15" fill="rgb(227,65,43)" fg:x="93920" fg:w="15"/><text x="88.1275%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="87.8775%" y="789" width="0.0140%" height="15" fill="rgb(218,40,45)" fg:x="93920" fg:w="15"/><text x="88.1275%" y="799.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="87.8775%" y="773" width="0.0140%" height="15" fill="rgb(252,121,31)" fg:x="93920" fg:w="15"/><text x="88.1275%" y="783.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (70 samples, 0.07%)</title><rect x="87.8298%" y="869" width="0.0655%" height="15" fill="rgb(219,158,43)" fg:x="93869" fg:w="70"/><text x="88.0798%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (85 samples, 0.08%)</title><rect x="87.8298%" y="901" width="0.0795%" height="15" fill="rgb(231,162,42)" fg:x="93869" fg:w="85"/><text x="88.0798%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (85 samples, 0.08%)</title><rect x="87.8298%" y="885" width="0.0795%" height="15" fill="rgb(217,179,25)" fg:x="93869" fg:w="85"/><text x="88.0798%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="87.8953%" y="869" width="0.0140%" height="15" fill="rgb(206,212,31)" fg:x="93939" fg:w="15"/><text x="88.1453%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="87.8953%" y="853" width="0.0140%" height="15" fill="rgb(235,144,12)" fg:x="93939" fg:w="15"/><text x="88.1453%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.01%)</title><rect x="87.8963%" y="837" width="0.0131%" height="15" fill="rgb(213,51,10)" fg:x="93940" fg:w="14"/><text x="88.1463%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.01%)</title><rect x="87.8963%" y="821" width="0.0131%" height="15" fill="rgb(231,145,14)" fg:x="93940" fg:w="14"/><text x="88.1463%" y="831.50"></text></g><g><title>async_executor::State::notify (129 samples, 0.12%)</title><rect x="87.8083%" y="917" width="0.1207%" height="15" fill="rgb(235,15,28)" fg:x="93846" fg:w="129"/><text x="88.0583%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="87.9094%" y="901" width="0.0196%" height="15" fill="rgb(237,206,10)" fg:x="93954" fg:w="21"/><text x="88.1594%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="87.9103%" y="885" width="0.0187%" height="15" fill="rgb(236,227,27)" fg:x="93955" fg:w="20"/><text x="88.1603%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (19 samples, 0.02%)</title><rect x="87.9112%" y="869" width="0.0178%" height="15" fill="rgb(246,83,35)" fg:x="93956" fg:w="19"/><text x="88.1612%" y="879.50"></text></g><g><title>___pthread_mutex_lock (19 samples, 0.02%)</title><rect x="87.9112%" y="853" width="0.0178%" height="15" fill="rgb(220,136,24)" fg:x="93956" fg:w="19"/><text x="88.1612%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 0.02%)</title><rect x="87.9393%" y="885" width="0.0178%" height="15" fill="rgb(217,3,25)" fg:x="93986" fg:w="19"/><text x="88.1893%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.02%)</title><rect x="87.9393%" y="869" width="0.0178%" height="15" fill="rgb(239,24,14)" fg:x="93986" fg:w="19"/><text x="88.1893%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (165 samples, 0.15%)</title><rect x="87.8074%" y="933" width="0.1544%" height="15" fill="rgb(244,16,53)" fg:x="93845" fg:w="165"/><text x="88.0574%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (35 samples, 0.03%)</title><rect x="87.9290%" y="917" width="0.0327%" height="15" fill="rgb(208,175,44)" fg:x="93975" fg:w="35"/><text x="88.1790%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (31 samples, 0.03%)</title><rect x="87.9327%" y="901" width="0.0290%" height="15" fill="rgb(252,18,48)" fg:x="93979" fg:w="31"/><text x="88.1827%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (22 samples, 0.02%)</title><rect x="87.9618%" y="933" width="0.0206%" height="15" fill="rgb(234,199,32)" fg:x="94010" fg:w="22"/><text x="88.2118%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (22 samples, 0.02%)</title><rect x="87.9618%" y="917" width="0.0206%" height="15" fill="rgb(225,77,54)" fg:x="94010" fg:w="22"/><text x="88.2118%" y="927.50"></text></g><g><title>event_listener::List::notify (200 samples, 0.19%)</title><rect x="87.8008%" y="997" width="0.1871%" height="15" fill="rgb(225,42,25)" fg:x="93838" fg:w="200"/><text x="88.0508%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (198 samples, 0.19%)</title><rect x="87.8027%" y="981" width="0.1853%" height="15" fill="rgb(242,227,46)" fg:x="93840" fg:w="198"/><text x="88.0527%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (198 samples, 0.19%)</title><rect x="87.8027%" y="965" width="0.1853%" height="15" fill="rgb(246,197,35)" fg:x="93840" fg:w="198"/><text x="88.0527%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (193 samples, 0.18%)</title><rect x="87.8074%" y="949" width="0.1806%" height="15" fill="rgb(215,159,26)" fg:x="93845" fg:w="193"/><text x="88.0574%" y="959.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,789 samples, 2.61%)</title><rect x="86.3814%" y="1029" width="2.6096%" height="15" fill="rgb(212,194,50)" fg:x="92321" fg:w="2789"/><text x="86.6314%" y="1039.50">as..</text></g><g><title>event_listener::Event::notify (1,358 samples, 1.27%)</title><rect x="87.7203%" y="1013" width="1.2706%" height="15" fill="rgb(246,132,1)" fg:x="93752" fg:w="1358"/><text x="87.9703%" y="1023.50"></text></g><g><title>event_listener::full_fence (1,072 samples, 1.00%)</title><rect x="87.9879%" y="997" width="1.0030%" height="15" fill="rgb(217,71,7)" fg:x="94038" fg:w="1072"/><text x="88.2379%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,054 samples, 0.99%)</title><rect x="88.0048%" y="981" width="0.9862%" height="15" fill="rgb(252,59,32)" fg:x="94056" fg:w="1054"/><text x="88.2548%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,054 samples, 0.99%)</title><rect x="88.0048%" y="965" width="0.9862%" height="15" fill="rgb(253,204,25)" fg:x="94056" fg:w="1054"/><text x="88.2548%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (15 samples, 0.01%)</title><rect x="88.9910%" y="1029" width="0.0140%" height="15" fill="rgb(232,21,16)" fg:x="95110" fg:w="15"/><text x="89.2410%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (420 samples, 0.39%)</title><rect x="89.0050%" y="1029" width="0.3930%" height="15" fill="rgb(248,90,29)" fg:x="95125" fg:w="420"/><text x="89.2550%" y="1039.50"></text></g><g><title>core::mem::replace (420 samples, 0.39%)</title><rect x="89.0050%" y="1013" width="0.3930%" height="15" fill="rgb(249,223,7)" fg:x="95125" fg:w="420"/><text x="89.2550%" y="1023.50"></text></g><g><title>core::ptr::read (419 samples, 0.39%)</title><rect x="89.0060%" y="997" width="0.3920%" height="15" fill="rgb(231,119,42)" fg:x="95126" fg:w="419"/><text x="89.2560%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (399 samples, 0.37%)</title><rect x="89.0247%" y="981" width="0.3733%" height="15" fill="rgb(215,41,35)" fg:x="95146" fg:w="399"/><text x="89.2747%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (527 samples, 0.49%)</title><rect x="89.3980%" y="1029" width="0.4931%" height="15" fill="rgb(220,44,45)" fg:x="95545" fg:w="527"/><text x="89.6480%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (512 samples, 0.48%)</title><rect x="89.4120%" y="1013" width="0.4791%" height="15" fill="rgb(253,197,36)" fg:x="95560" fg:w="512"/><text x="89.6620%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="89.8939%" y="1013" width="0.0309%" height="15" fill="rgb(245,225,54)" fg:x="96075" fg:w="33"/><text x="90.1439%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (33 samples, 0.03%)</title><rect x="89.8939%" y="997" width="0.0309%" height="15" fill="rgb(239,94,37)" fg:x="96075" fg:w="33"/><text x="90.1439%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (33 samples, 0.03%)</title><rect x="89.8939%" y="981" width="0.0309%" height="15" fill="rgb(242,217,10)" fg:x="96075" fg:w="33"/><text x="90.1439%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (24 samples, 0.02%)</title><rect x="89.9248%" y="1013" width="0.0225%" height="15" fill="rgb(250,193,7)" fg:x="96108" fg:w="24"/><text x="90.1748%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (24 samples, 0.02%)</title><rect x="89.9248%" y="997" width="0.0225%" height="15" fill="rgb(230,104,19)" fg:x="96108" fg:w="24"/><text x="90.1748%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="89.9248%" y="981" width="0.0225%" height="15" fill="rgb(230,181,4)" fg:x="96108" fg:w="24"/><text x="90.1748%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (23 samples, 0.02%)</title><rect x="89.9257%" y="965" width="0.0215%" height="15" fill="rgb(216,219,49)" fg:x="96109" fg:w="23"/><text x="90.1757%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (23 samples, 0.02%)</title><rect x="89.9257%" y="949" width="0.0215%" height="15" fill="rgb(254,144,0)" fg:x="96109" fg:w="23"/><text x="90.1757%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (23 samples, 0.02%)</title><rect x="89.9257%" y="933" width="0.0215%" height="15" fill="rgb(205,209,38)" fg:x="96109" fg:w="23"/><text x="90.1757%" y="943.50"></text></g><g><title>event_listener::Inner::lock (15 samples, 0.01%)</title><rect x="89.9500%" y="1013" width="0.0140%" height="15" fill="rgb(240,21,42)" fg:x="96135" fg:w="15"/><text x="90.2000%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="89.9500%" y="997" width="0.0140%" height="15" fill="rgb(241,132,3)" fg:x="96135" fg:w="15"/><text x="90.2000%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="89.9500%" y="981" width="0.0140%" height="15" fill="rgb(225,14,2)" fg:x="96135" fg:w="15"/><text x="90.2000%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="89.9500%" y="965" width="0.0140%" height="15" fill="rgb(210,141,35)" fg:x="96135" fg:w="15"/><text x="90.2000%" y="975.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="89.9500%" y="949" width="0.0140%" height="15" fill="rgb(251,14,44)" fg:x="96135" fg:w="15"/><text x="90.2000%" y="959.50"></text></g><g><title>event_listener::Event::listen (93 samples, 0.09%)</title><rect x="89.8920%" y="1029" width="0.0870%" height="15" fill="rgb(247,48,18)" fg:x="96073" fg:w="93"/><text x="90.1420%" y="1039.50"></text></g><g><title>event_listener::full_fence (15 samples, 0.01%)</title><rect x="89.9650%" y="1013" width="0.0140%" height="15" fill="rgb(225,0,40)" fg:x="96151" fg:w="15"/><text x="90.2150%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.01%)</title><rect x="89.9669%" y="997" width="0.0122%" height="15" fill="rgb(221,31,33)" fg:x="96153" fg:w="13"/><text x="90.2169%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.01%)</title><rect x="89.9669%" y="981" width="0.0122%" height="15" fill="rgb(237,42,40)" fg:x="96153" fg:w="13"/><text x="90.2169%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (26 samples, 0.02%)</title><rect x="89.9931%" y="1013" width="0.0243%" height="15" fill="rgb(233,51,29)" fg:x="96181" fg:w="26"/><text x="90.2431%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (25 samples, 0.02%)</title><rect x="89.9940%" y="997" width="0.0234%" height="15" fill="rgb(226,58,20)" fg:x="96182" fg:w="25"/><text x="90.2440%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="89.9940%" y="981" width="0.0234%" height="15" fill="rgb(208,98,7)" fg:x="96182" fg:w="25"/><text x="90.2440%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (25 samples, 0.02%)</title><rect x="89.9940%" y="965" width="0.0234%" height="15" fill="rgb(228,143,44)" fg:x="96182" fg:w="25"/><text x="90.2440%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (24 samples, 0.02%)</title><rect x="89.9949%" y="949" width="0.0225%" height="15" fill="rgb(246,55,38)" fg:x="96183" fg:w="24"/><text x="90.2449%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (24 samples, 0.02%)</title><rect x="89.9949%" y="933" width="0.0225%" height="15" fill="rgb(247,87,16)" fg:x="96183" fg:w="24"/><text x="90.2449%" y="943.50"></text></g><g><title>event_listener::Inner::lock (72 samples, 0.07%)</title><rect x="90.0221%" y="1013" width="0.0674%" height="15" fill="rgb(234,129,42)" fg:x="96212" fg:w="72"/><text x="90.2721%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (72 samples, 0.07%)</title><rect x="90.0221%" y="997" width="0.0674%" height="15" fill="rgb(220,82,16)" fg:x="96212" fg:w="72"/><text x="90.2721%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (66 samples, 0.06%)</title><rect x="90.0277%" y="981" width="0.0618%" height="15" fill="rgb(211,88,4)" fg:x="96218" fg:w="66"/><text x="90.2777%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (66 samples, 0.06%)</title><rect x="90.0277%" y="965" width="0.0618%" height="15" fill="rgb(248,151,21)" fg:x="96218" fg:w="66"/><text x="90.2777%" y="975.50"></text></g><g><title>___pthread_mutex_lock (66 samples, 0.06%)</title><rect x="90.0277%" y="949" width="0.0618%" height="15" fill="rgb(238,163,6)" fg:x="96218" fg:w="66"/><text x="90.2777%" y="959.50"></text></g><g><title>__GI___lll_lock_wait (41 samples, 0.04%)</title><rect x="90.0511%" y="933" width="0.0384%" height="15" fill="rgb(209,183,11)" fg:x="96243" fg:w="41"/><text x="90.3011%" y="943.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4,375 samples, 4.09%)</title><rect x="86.2149%" y="1045" width="4.0935%" height="15" fill="rgb(219,37,20)" fg:x="92143" fg:w="4375"/><text x="86.4649%" y="1055.50">&lt;asy..</text></g><g><title>event_listener::Event::notify (352 samples, 0.33%)</title><rect x="89.9790%" y="1029" width="0.3294%" height="15" fill="rgb(210,158,4)" fg:x="96166" fg:w="352"/><text x="90.2290%" y="1039.50"></text></g><g><title>event_listener::full_fence (231 samples, 0.22%)</title><rect x="90.0923%" y="1013" width="0.2161%" height="15" fill="rgb(221,167,53)" fg:x="96287" fg:w="231"/><text x="90.3423%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (222 samples, 0.21%)</title><rect x="90.1007%" y="997" width="0.2077%" height="15" fill="rgb(237,151,45)" fg:x="96296" fg:w="222"/><text x="90.3507%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (222 samples, 0.21%)</title><rect x="90.1007%" y="981" width="0.2077%" height="15" fill="rgb(231,39,3)" fg:x="96296" fg:w="222"/><text x="90.3507%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="90.3140%" y="901" width="0.0103%" height="15" fill="rgb(212,167,28)" fg:x="96524" fg:w="11"/><text x="90.5640%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.01%)</title><rect x="90.3103%" y="981" width="0.0150%" height="15" fill="rgb(232,178,8)" fg:x="96520" fg:w="16"/><text x="90.5603%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.01%)</title><rect x="90.3103%" y="965" width="0.0150%" height="15" fill="rgb(225,151,20)" fg:x="96520" fg:w="16"/><text x="90.5603%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="90.3103%" y="949" width="0.0150%" height="15" fill="rgb(238,3,37)" fg:x="96520" fg:w="16"/><text x="90.5603%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="90.3112%" y="933" width="0.0140%" height="15" fill="rgb(251,147,42)" fg:x="96521" fg:w="15"/><text x="90.5612%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="90.3140%" y="917" width="0.0112%" height="15" fill="rgb(208,173,10)" fg:x="96524" fg:w="12"/><text x="90.5640%" y="927.50"></text></g><g><title>event_listener::Inner::lock (34 samples, 0.03%)</title><rect x="90.3252%" y="981" width="0.0318%" height="15" fill="rgb(246,225,4)" fg:x="96536" fg:w="34"/><text x="90.5752%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (34 samples, 0.03%)</title><rect x="90.3252%" y="965" width="0.0318%" height="15" fill="rgb(248,102,6)" fg:x="96536" fg:w="34"/><text x="90.5752%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (33 samples, 0.03%)</title><rect x="90.3262%" y="949" width="0.0309%" height="15" fill="rgb(232,6,21)" fg:x="96537" fg:w="33"/><text x="90.5762%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (33 samples, 0.03%)</title><rect x="90.3262%" y="933" width="0.0309%" height="15" fill="rgb(221,179,22)" fg:x="96537" fg:w="33"/><text x="90.5762%" y="943.50"></text></g><g><title>___pthread_mutex_lock (33 samples, 0.03%)</title><rect x="90.3262%" y="917" width="0.0309%" height="15" fill="rgb(252,50,20)" fg:x="96537" fg:w="33"/><text x="90.5762%" y="927.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (11,454 samples, 10.72%)</title><rect x="79.6456%" y="1125" width="10.7171%" height="15" fill="rgb(222,56,38)" fg:x="85122" fg:w="11454"/><text x="79.8956%" y="1135.50">tremor_runtime::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,433 samples, 4.15%)</title><rect x="86.2149%" y="1109" width="4.1478%" height="15" fill="rgb(206,193,29)" fg:x="92143" fg:w="4433"/><text x="86.4649%" y="1119.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (4,433 samples, 4.15%)</title><rect x="86.2149%" y="1093" width="4.1478%" height="15" fill="rgb(239,192,45)" fg:x="92143" fg:w="4433"/><text x="86.4649%" y="1103.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,433 samples, 4.15%)</title><rect x="86.2149%" y="1077" width="4.1478%" height="15" fill="rgb(254,18,36)" fg:x="92143" fg:w="4433"/><text x="86.4649%" y="1087.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (4,433 samples, 4.15%)</title><rect x="86.2149%" y="1061" width="4.1478%" height="15" fill="rgb(221,127,11)" fg:x="92143" fg:w="4433"/><text x="86.4649%" y="1071.50">tremo..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (58 samples, 0.05%)</title><rect x="90.3084%" y="1045" width="0.0543%" height="15" fill="rgb(234,146,35)" fg:x="96518" fg:w="58"/><text x="90.5584%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (58 samples, 0.05%)</title><rect x="90.3084%" y="1029" width="0.0543%" height="15" fill="rgb(254,201,37)" fg:x="96518" fg:w="58"/><text x="90.5584%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (58 samples, 0.05%)</title><rect x="90.3084%" y="1013" width="0.0543%" height="15" fill="rgb(211,202,23)" fg:x="96518" fg:w="58"/><text x="90.5584%" y="1023.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (58 samples, 0.05%)</title><rect x="90.3084%" y="997" width="0.0543%" height="15" fill="rgb(237,91,2)" fg:x="96518" fg:w="58"/><text x="90.5584%" y="1007.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (45 samples, 0.04%)</title><rect x="90.3627%" y="1125" width="0.0421%" height="15" fill="rgb(226,228,36)" fg:x="96576" fg:w="45"/><text x="90.6127%" y="1135.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (55 samples, 0.05%)</title><rect x="90.4048%" y="1125" width="0.0515%" height="15" fill="rgb(213,63,50)" fg:x="96621" fg:w="55"/><text x="90.6548%" y="1135.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (103 samples, 0.10%)</title><rect x="90.4572%" y="1125" width="0.0964%" height="15" fill="rgb(235,194,19)" fg:x="96677" fg:w="103"/><text x="90.7072%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (41 samples, 0.04%)</title><rect x="90.5152%" y="1109" width="0.0384%" height="15" fill="rgb(207,204,18)" fg:x="96739" fg:w="41"/><text x="90.7652%" y="1119.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="90.5423%" y="1093" width="0.0112%" height="15" fill="rgb(248,8,7)" fg:x="96768" fg:w="12"/><text x="90.7923%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::clone::Clone for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::clone (12 samples, 0.01%)</title><rect x="90.5423%" y="1077" width="0.0112%" height="15" fill="rgb(223,145,47)" fg:x="96768" fg:w="12"/><text x="90.7923%" y="1087.50"></text></g><g><title>[unknown] (90,746 samples, 84.91%)</title><rect x="5.6683%" y="1141" width="84.9077%" height="15" fill="rgb(228,84,11)" fg:x="6058" fg:w="90746"/><text x="5.9183%" y="1151.50">[unknown]</text></g><g><title>value_trait::Builder::object (24 samples, 0.02%)</title><rect x="90.5535%" y="1125" width="0.0225%" height="15" fill="rgb(218,76,45)" fg:x="96780" fg:w="24"/><text x="90.8035%" y="1135.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (21 samples, 0.02%)</title><rect x="90.5563%" y="1109" width="0.0196%" height="15" fill="rgb(223,80,15)" fg:x="96783" fg:w="21"/><text x="90.8063%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (13 samples, 0.01%)</title><rect x="90.5638%" y="1093" width="0.0122%" height="15" fill="rgb(219,218,33)" fg:x="96791" fg:w="13"/><text x="90.8138%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::init_message_queue (12 samples, 0.01%)</title><rect x="90.5919%" y="597" width="0.0112%" height="15" fill="rgb(208,51,11)" fg:x="96821" fg:w="12"/><text x="90.8419%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)1&gt; (12 samples, 0.01%)</title><rect x="90.5919%" y="581" width="0.0112%" height="15" fill="rgb(229,165,39)" fg:x="96821" fg:w="12"/><text x="90.8419%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)1&gt; (12 samples, 0.01%)</title><rect x="90.5919%" y="565" width="0.0112%" height="15" fill="rgb(241,100,24)" fg:x="96821" fg:w="12"/><text x="90.8419%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)1&gt; (12 samples, 0.01%)</title><rect x="90.5919%" y="549" width="0.0112%" height="15" fill="rgb(228,14,23)" fg:x="96821" fg:w="12"/><text x="90.8419%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)1&gt; (12 samples, 0.01%)</title><rect x="90.5919%" y="533" width="0.0112%" height="15" fill="rgb(247,116,52)" fg:x="96821" fg:w="12"/><text x="90.8419%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)1&gt; (12 samples, 0.01%)</title><rect x="90.5919%" y="517" width="0.0112%" height="15" fill="rgb(216,149,33)" fg:x="96821" fg:w="12"/><text x="90.8419%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)1&gt; (12 samples, 0.01%)</title><rect x="90.5919%" y="501" width="0.0112%" height="15" fill="rgb(238,142,29)" fg:x="96821" fg:w="12"/><text x="90.8419%" y="511.50"></text></g><g><title>snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;::alloc_chunk&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, 4096ul, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (23 samples, 0.02%)</title><rect x="90.5919%" y="629" width="0.0215%" height="15" fill="rgb(224,83,40)" fg:x="96821" fg:w="23"/><text x="90.8419%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::Allocator (23 samples, 0.02%)</title><rect x="90.5919%" y="613" width="0.0215%" height="15" fill="rgb(234,165,11)" fg:x="96821" fg:w="23"/><text x="90.8419%" y="623.50"></text></g><g><title>snmalloc::AllocPool&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt;::acquire (25 samples, 0.02%)</title><rect x="90.5910%" y="677" width="0.0234%" height="15" fill="rgb(215,96,23)" fg:x="96820" fg:w="25"/><text x="90.8410%" y="687.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (24 samples, 0.02%)</title><rect x="90.5919%" y="661" width="0.0225%" height="15" fill="rgb(233,179,26)" fg:x="96821" fg:w="24"/><text x="90.8419%" y="671.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (24 samples, 0.02%)</title><rect x="90.5919%" y="645" width="0.0225%" height="15" fill="rgb(225,129,33)" fg:x="96821" fg:w="24"/><text x="90.8419%" y="655.50"></text></g><g><title>async_channel::bounded (29 samples, 0.03%)</title><rect x="90.5900%" y="901" width="0.0271%" height="15" fill="rgb(237,49,13)" fg:x="96819" fg:w="29"/><text x="90.8400%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (29 samples, 0.03%)</title><rect x="90.5900%" y="885" width="0.0271%" height="15" fill="rgb(211,3,31)" fg:x="96819" fg:w="29"/><text x="90.8400%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (29 samples, 0.03%)</title><rect x="90.5900%" y="869" width="0.0271%" height="15" fill="rgb(216,152,19)" fg:x="96819" fg:w="29"/><text x="90.8400%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.03%)</title><rect x="90.5900%" y="853" width="0.0271%" height="15" fill="rgb(251,121,35)" fg:x="96819" fg:w="29"/><text x="90.8400%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.03%)</title><rect x="90.5900%" y="837" width="0.0271%" height="15" fill="rgb(210,217,47)" fg:x="96819" fg:w="29"/><text x="90.8400%" y="847.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.03%)</title><rect x="90.5900%" y="821" width="0.0271%" height="15" fill="rgb(244,116,22)" fg:x="96819" fg:w="29"/><text x="90.8400%" y="831.50"></text></g><g><title>__rg_alloc (29 samples, 0.03%)</title><rect x="90.5900%" y="805" width="0.0271%" height="15" fill="rgb(228,17,21)" fg:x="96819" fg:w="29"/><text x="90.8400%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (29 samples, 0.03%)</title><rect x="90.5900%" y="789" width="0.0271%" height="15" fill="rgb(240,149,34)" fg:x="96819" fg:w="29"/><text x="90.8400%" y="799.50"></text></g><g><title>rust_alloc (29 samples, 0.03%)</title><rect x="90.5900%" y="773" width="0.0271%" height="15" fill="rgb(208,125,47)" fg:x="96819" fg:w="29"/><text x="90.8400%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="90.5900%" y="757" width="0.0271%" height="15" fill="rgb(249,186,39)" fg:x="96819" fg:w="29"/><text x="90.8400%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="90.5900%" y="741" width="0.0271%" height="15" fill="rgb(240,220,33)" fg:x="96819" fg:w="29"/><text x="90.8400%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="90.5910%" y="725" width="0.0262%" height="15" fill="rgb(243,110,23)" fg:x="96820" fg:w="28"/><text x="90.8410%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="90.5910%" y="709" width="0.0262%" height="15" fill="rgb(219,163,46)" fg:x="96820" fg:w="28"/><text x="90.8410%" y="719.50"></text></g><g><title>snmalloc::init_thread_allocator (28 samples, 0.03%)</title><rect x="90.5910%" y="693" width="0.0262%" height="15" fill="rgb(216,126,30)" fg:x="96820" fg:w="28"/><text x="90.8410%" y="703.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="90.7491%" y="549" width="0.0150%" height="15" fill="rgb(208,139,11)" fg:x="96989" fg:w="16"/><text x="90.9991%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="90.8399%" y="533" width="0.0168%" height="15" fill="rgb(213,118,36)" fg:x="97086" fg:w="18"/><text x="91.0899%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (21 samples, 0.02%)</title><rect x="90.9390%" y="437" width="0.0196%" height="15" fill="rgb(226,43,17)" fg:x="97192" fg:w="21"/><text x="91.1890%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (21 samples, 0.02%)</title><rect x="90.9390%" y="421" width="0.0196%" height="15" fill="rgb(254,217,4)" fg:x="97192" fg:w="21"/><text x="91.1890%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.01%)</title><rect x="90.9465%" y="405" width="0.0122%" height="15" fill="rgb(210,134,47)" fg:x="97200" fg:w="13"/><text x="91.1965%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="90.9587%" y="437" width="0.0140%" height="15" fill="rgb(237,24,49)" fg:x="97213" fg:w="15"/><text x="91.2087%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="90.9727%" y="437" width="0.0243%" height="15" fill="rgb(251,39,46)" fg:x="97228" fg:w="26"/><text x="91.2227%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (133 samples, 0.12%)</title><rect x="90.9035%" y="469" width="0.1244%" height="15" fill="rgb(251,220,3)" fg:x="97154" fg:w="133"/><text x="91.1535%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (110 samples, 0.10%)</title><rect x="90.9250%" y="453" width="0.1029%" height="15" fill="rgb(228,105,12)" fg:x="97177" fg:w="110"/><text x="91.1750%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (33 samples, 0.03%)</title><rect x="90.9970%" y="437" width="0.0309%" height="15" fill="rgb(215,196,1)" fg:x="97254" fg:w="33"/><text x="91.2470%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (33 samples, 0.03%)</title><rect x="90.9970%" y="421" width="0.0309%" height="15" fill="rgb(214,33,39)" fg:x="97254" fg:w="33"/><text x="91.2470%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (28 samples, 0.03%)</title><rect x="91.0017%" y="405" width="0.0262%" height="15" fill="rgb(220,19,52)" fg:x="97259" fg:w="28"/><text x="91.2517%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (28 samples, 0.03%)</title><rect x="91.0017%" y="389" width="0.0262%" height="15" fill="rgb(221,78,38)" fg:x="97259" fg:w="28"/><text x="91.2517%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (163 samples, 0.15%)</title><rect x="90.8763%" y="485" width="0.1525%" height="15" fill="rgb(253,30,16)" fg:x="97125" fg:w="163"/><text x="91.1263%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (196 samples, 0.18%)</title><rect x="90.8567%" y="533" width="0.1834%" height="15" fill="rgb(242,65,0)" fg:x="97104" fg:w="196"/><text x="91.1067%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (196 samples, 0.18%)</title><rect x="90.8567%" y="517" width="0.1834%" height="15" fill="rgb(235,201,12)" fg:x="97104" fg:w="196"/><text x="91.1067%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (196 samples, 0.18%)</title><rect x="90.8567%" y="501" width="0.1834%" height="15" fill="rgb(233,161,9)" fg:x="97104" fg:w="196"/><text x="91.1067%" y="511.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (12 samples, 0.01%)</title><rect x="91.0289%" y="485" width="0.0112%" height="15" fill="rgb(241,207,41)" fg:x="97288" fg:w="12"/><text x="91.2789%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (449 samples, 0.42%)</title><rect x="91.2356%" y="501" width="0.4201%" height="15" fill="rgb(212,69,46)" fg:x="97509" fg:w="449"/><text x="91.4856%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (294 samples, 0.28%)</title><rect x="91.3807%" y="485" width="0.2751%" height="15" fill="rgb(239,69,45)" fg:x="97664" fg:w="294"/><text x="91.6307%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (294 samples, 0.28%)</title><rect x="91.3807%" y="469" width="0.2751%" height="15" fill="rgb(242,117,48)" fg:x="97664" fg:w="294"/><text x="91.6307%" y="479.50"></text></g><g><title>async_executor::steal (673 samples, 0.63%)</title><rect x="91.0401%" y="533" width="0.6297%" height="15" fill="rgb(228,41,36)" fg:x="97300" fg:w="673"/><text x="91.2901%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (654 samples, 0.61%)</title><rect x="91.0579%" y="517" width="0.6119%" height="15" fill="rgb(212,3,32)" fg:x="97319" fg:w="654"/><text x="91.3079%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (15 samples, 0.01%)</title><rect x="91.6558%" y="501" width="0.0140%" height="15" fill="rgb(233,41,49)" fg:x="97958" fg:w="15"/><text x="91.9058%" y="511.50"></text></g><g><title>concurrent_queue::full_fence (712 samples, 0.67%)</title><rect x="92.0403%" y="501" width="0.6662%" height="15" fill="rgb(252,170,49)" fg:x="98369" fg:w="712"/><text x="92.2903%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (705 samples, 0.66%)</title><rect x="92.0469%" y="485" width="0.6596%" height="15" fill="rgb(229,53,26)" fg:x="98376" fg:w="705"/><text x="92.2969%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (705 samples, 0.66%)</title><rect x="92.0469%" y="469" width="0.6596%" height="15" fill="rgb(217,157,12)" fg:x="98376" fg:w="705"/><text x="92.2969%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (705 samples, 0.66%)</title><rect x="92.0469%" y="453" width="0.6596%" height="15" fill="rgb(227,17,9)" fg:x="98376" fg:w="705"/><text x="92.2969%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,038 samples, 0.97%)</title><rect x="91.7970%" y="517" width="0.9712%" height="15" fill="rgb(218,84,12)" fg:x="98109" fg:w="1038"/><text x="92.0470%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (66 samples, 0.06%)</title><rect x="92.7065%" y="501" width="0.0618%" height="15" fill="rgb(212,79,24)" fg:x="99081" fg:w="66"/><text x="92.9565%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (61 samples, 0.06%)</title><rect x="92.7112%" y="485" width="0.0571%" height="15" fill="rgb(217,222,37)" fg:x="99086" fg:w="61"/><text x="92.9612%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (245 samples, 0.23%)</title><rect x="92.8150%" y="501" width="0.2292%" height="15" fill="rgb(246,208,8)" fg:x="99197" fg:w="245"/><text x="93.0650%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (238 samples, 0.22%)</title><rect x="92.8216%" y="485" width="0.2227%" height="15" fill="rgb(244,133,10)" fg:x="99204" fg:w="238"/><text x="93.0716%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (238 samples, 0.22%)</title><rect x="92.8216%" y="469" width="0.2227%" height="15" fill="rgb(209,219,41)" fg:x="99204" fg:w="238"/><text x="93.0716%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (238 samples, 0.22%)</title><rect x="92.8216%" y="453" width="0.2227%" height="15" fill="rgb(253,175,45)" fg:x="99204" fg:w="238"/><text x="93.0716%" y="463.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (18 samples, 0.02%)</title><rect x="93.0480%" y="501" width="0.0168%" height="15" fill="rgb(235,100,37)" fg:x="99446" fg:w="18"/><text x="93.2980%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.02%)</title><rect x="93.0480%" y="485" width="0.0168%" height="15" fill="rgb(225,87,19)" fg:x="99446" fg:w="18"/><text x="93.2980%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="93.0480%" y="469" width="0.0168%" height="15" fill="rgb(217,152,17)" fg:x="99446" fg:w="18"/><text x="93.2980%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (82 samples, 0.08%)</title><rect x="93.0798%" y="501" width="0.0767%" height="15" fill="rgb(235,72,13)" fg:x="99480" fg:w="82"/><text x="93.3298%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (82 samples, 0.08%)</title><rect x="93.0798%" y="485" width="0.0767%" height="15" fill="rgb(233,140,18)" fg:x="99480" fg:w="82"/><text x="93.3298%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (80 samples, 0.07%)</title><rect x="93.1566%" y="501" width="0.0749%" height="15" fill="rgb(207,212,28)" fg:x="99562" fg:w="80"/><text x="93.4066%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_or (80 samples, 0.07%)</title><rect x="93.1566%" y="485" width="0.0749%" height="15" fill="rgb(220,130,25)" fg:x="99562" fg:w="80"/><text x="93.4066%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (200 samples, 0.19%)</title><rect x="93.2314%" y="501" width="0.1871%" height="15" fill="rgb(205,55,34)" fg:x="99642" fg:w="200"/><text x="93.4814%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (200 samples, 0.19%)</title><rect x="93.2314%" y="485" width="0.1871%" height="15" fill="rgb(237,54,35)" fg:x="99642" fg:w="200"/><text x="93.4814%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,870 samples, 1.75%)</title><rect x="91.6698%" y="533" width="1.7497%" height="15" fill="rgb(208,67,23)" fg:x="97973" fg:w="1870"/><text x="91.9198%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (696 samples, 0.65%)</title><rect x="92.7683%" y="517" width="0.6512%" height="15" fill="rgb(206,207,50)" fg:x="99147" fg:w="696"/><text x="93.0183%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (117 samples, 0.11%)</title><rect x="93.4382%" y="469" width="0.1095%" height="15" fill="rgb(213,211,42)" fg:x="99863" fg:w="117"/><text x="93.6882%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (117 samples, 0.11%)</title><rect x="93.4382%" y="453" width="0.1095%" height="15" fill="rgb(252,197,50)" fg:x="99863" fg:w="117"/><text x="93.6882%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (258 samples, 0.24%)</title><rect x="93.4195%" y="533" width="0.2414%" height="15" fill="rgb(251,211,41)" fg:x="99843" fg:w="258"/><text x="93.6695%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (258 samples, 0.24%)</title><rect x="93.4195%" y="517" width="0.2414%" height="15" fill="rgb(229,211,5)" fg:x="99843" fg:w="258"/><text x="93.6695%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (253 samples, 0.24%)</title><rect x="93.4242%" y="501" width="0.2367%" height="15" fill="rgb(239,36,31)" fg:x="99848" fg:w="253"/><text x="93.6742%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (240 samples, 0.22%)</title><rect x="93.4363%" y="485" width="0.2246%" height="15" fill="rgb(248,67,31)" fg:x="99861" fg:w="240"/><text x="93.6863%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (121 samples, 0.11%)</title><rect x="93.5477%" y="469" width="0.1132%" height="15" fill="rgb(249,55,44)" fg:x="99980" fg:w="121"/><text x="93.7977%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (121 samples, 0.11%)</title><rect x="93.5477%" y="453" width="0.1132%" height="15" fill="rgb(216,82,12)" fg:x="99980" fg:w="121"/><text x="93.7977%" y="463.50"></text></g><g><title>fastrand::Rng::usize (17 samples, 0.02%)</title><rect x="93.6702%" y="469" width="0.0159%" height="15" fill="rgb(242,174,1)" fg:x="100111" fg:w="17"/><text x="93.9202%" y="479.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (13 samples, 0.01%)</title><rect x="93.6740%" y="453" width="0.0122%" height="15" fill="rgb(208,120,29)" fg:x="100115" fg:w="13"/><text x="93.9240%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (26 samples, 0.02%)</title><rect x="93.6646%" y="501" width="0.0243%" height="15" fill="rgb(221,105,43)" fg:x="100105" fg:w="26"/><text x="93.9146%" y="511.50"></text></g><g><title>fastrand::usize::{{closure}} (20 samples, 0.02%)</title><rect x="93.6702%" y="485" width="0.0187%" height="15" fill="rgb(234,124,22)" fg:x="100111" fg:w="20"/><text x="93.9202%" y="495.50"></text></g><g><title>fastrand::usize (31 samples, 0.03%)</title><rect x="93.6609%" y="533" width="0.0290%" height="15" fill="rgb(212,23,30)" fg:x="100101" fg:w="31"/><text x="93.9109%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (29 samples, 0.03%)</title><rect x="93.6627%" y="517" width="0.0271%" height="15" fill="rgb(219,122,53)" fg:x="100103" fg:w="29"/><text x="93.9127%" y="527.50"></text></g><g><title>___pthread_rwlock_rdlock (220 samples, 0.21%)</title><rect x="93.7077%" y="485" width="0.2058%" height="15" fill="rgb(248,84,24)" fg:x="100151" fg:w="220"/><text x="93.9577%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (3,457 samples, 3.23%)</title><rect x="90.7641%" y="549" width="3.2346%" height="15" fill="rgb(245,115,18)" fg:x="97005" fg:w="3457"/><text x="91.0141%" y="559.50">asy..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (330 samples, 0.31%)</title><rect x="93.6899%" y="533" width="0.3088%" height="15" fill="rgb(227,176,51)" fg:x="100132" fg:w="330"/><text x="93.9399%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (320 samples, 0.30%)</title><rect x="93.6992%" y="517" width="0.2994%" height="15" fill="rgb(229,63,42)" fg:x="100142" fg:w="320"/><text x="93.9492%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (315 samples, 0.29%)</title><rect x="93.7039%" y="501" width="0.2947%" height="15" fill="rgb(247,202,24)" fg:x="100147" fg:w="315"/><text x="93.9539%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (91 samples, 0.09%)</title><rect x="93.9135%" y="485" width="0.0851%" height="15" fill="rgb(244,173,20)" fg:x="100371" fg:w="91"/><text x="94.1635%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (91 samples, 0.09%)</title><rect x="93.9135%" y="469" width="0.0851%" height="15" fill="rgb(242,81,47)" fg:x="100371" fg:w="91"/><text x="94.1635%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (16 samples, 0.01%)</title><rect x="94.0043%" y="533" width="0.0150%" height="15" fill="rgb(231,185,54)" fg:x="100468" fg:w="16"/><text x="94.2543%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="94.0043%" y="517" width="0.0150%" height="15" fill="rgb(243,55,32)" fg:x="100468" fg:w="16"/><text x="94.2543%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.01%)</title><rect x="94.0043%" y="501" width="0.0150%" height="15" fill="rgb(208,167,19)" fg:x="100468" fg:w="16"/><text x="94.2543%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (16 samples, 0.01%)</title><rect x="94.0043%" y="485" width="0.0150%" height="15" fill="rgb(231,72,35)" fg:x="100468" fg:w="16"/><text x="94.2543%" y="495.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (16 samples, 0.01%)</title><rect x="94.0043%" y="469" width="0.0150%" height="15" fill="rgb(250,173,51)" fg:x="100468" fg:w="16"/><text x="94.2543%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (46 samples, 0.04%)</title><rect x="94.0192%" y="533" width="0.0430%" height="15" fill="rgb(209,5,22)" fg:x="100484" fg:w="46"/><text x="94.2692%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (46 samples, 0.04%)</title><rect x="94.0192%" y="517" width="0.0430%" height="15" fill="rgb(250,174,19)" fg:x="100484" fg:w="46"/><text x="94.2692%" y="527.50"></text></g><g><title>async_io::reactor::Reactor::notify (14 samples, 0.01%)</title><rect x="94.0670%" y="485" width="0.0131%" height="15" fill="rgb(217,3,49)" fg:x="100535" fg:w="14"/><text x="94.3170%" y="495.50"></text></g><g><title>polling::Poller::notify (14 samples, 0.01%)</title><rect x="94.0670%" y="469" width="0.0131%" height="15" fill="rgb(218,225,5)" fg:x="100535" fg:w="14"/><text x="94.3170%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="94.1109%" y="373" width="0.0112%" height="15" fill="rgb(236,89,11)" fg:x="100582" fg:w="12"/><text x="94.3609%" y="383.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="94.1109%" y="453" width="0.0122%" height="15" fill="rgb(206,33,28)" fg:x="100582" fg:w="13"/><text x="94.3609%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (13 samples, 0.01%)</title><rect x="94.1109%" y="437" width="0.0122%" height="15" fill="rgb(241,56,42)" fg:x="100582" fg:w="13"/><text x="94.3609%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="94.1109%" y="421" width="0.0122%" height="15" fill="rgb(222,44,11)" fg:x="100582" fg:w="13"/><text x="94.3609%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="94.1109%" y="405" width="0.0122%" height="15" fill="rgb(234,111,20)" fg:x="100582" fg:w="13"/><text x="94.3609%" y="415.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="94.1109%" y="389" width="0.0122%" height="15" fill="rgb(237,77,6)" fg:x="100582" fg:w="13"/><text x="94.3609%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (76 samples, 0.07%)</title><rect x="94.1231%" y="453" width="0.0711%" height="15" fill="rgb(235,111,23)" fg:x="100595" fg:w="76"/><text x="94.3731%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (76 samples, 0.07%)</title><rect x="94.1231%" y="437" width="0.0711%" height="15" fill="rgb(251,135,29)" fg:x="100595" fg:w="76"/><text x="94.3731%" y="447.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (112 samples, 0.10%)</title><rect x="94.1942%" y="453" width="0.1048%" height="15" fill="rgb(217,57,1)" fg:x="100671" fg:w="112"/><text x="94.4442%" y="463.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (112 samples, 0.10%)</title><rect x="94.1942%" y="437" width="0.1048%" height="15" fill="rgb(249,119,31)" fg:x="100671" fg:w="112"/><text x="94.4442%" y="447.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (112 samples, 0.10%)</title><rect x="94.1942%" y="421" width="0.1048%" height="15" fill="rgb(233,164,33)" fg:x="100671" fg:w="112"/><text x="94.4442%" y="431.50"></text></g><g><title>__GI___pthread_cond_signal (112 samples, 0.10%)</title><rect x="94.1942%" y="405" width="0.1048%" height="15" fill="rgb(250,217,43)" fg:x="100671" fg:w="112"/><text x="94.4442%" y="415.50"></text></g><g><title>parking::Unparker::unpark (329 samples, 0.31%)</title><rect x="94.0810%" y="485" width="0.3078%" height="15" fill="rgb(232,154,50)" fg:x="100550" fg:w="329"/><text x="94.3310%" y="495.50"></text></g><g><title>parking::Inner::unpark (299 samples, 0.28%)</title><rect x="94.1091%" y="469" width="0.2798%" height="15" fill="rgb(227,190,8)" fg:x="100580" fg:w="299"/><text x="94.3591%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (96 samples, 0.09%)</title><rect x="94.2990%" y="453" width="0.0898%" height="15" fill="rgb(209,217,32)" fg:x="100783" fg:w="96"/><text x="94.5490%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (94 samples, 0.09%)</title><rect x="94.3009%" y="437" width="0.0880%" height="15" fill="rgb(243,203,50)" fg:x="100785" fg:w="94"/><text x="94.5509%" y="447.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (93 samples, 0.09%)</title><rect x="94.3018%" y="421" width="0.0870%" height="15" fill="rgb(232,152,27)" fg:x="100786" fg:w="93"/><text x="94.5518%" y="431.50"></text></g><g><title>___pthread_mutex_lock (93 samples, 0.09%)</title><rect x="94.3018%" y="405" width="0.0870%" height="15" fill="rgb(240,34,29)" fg:x="100786" fg:w="93"/><text x="94.5518%" y="415.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (15 samples, 0.01%)</title><rect x="94.3888%" y="453" width="0.0140%" height="15" fill="rgb(215,185,52)" fg:x="100879" fg:w="15"/><text x="94.6388%" y="463.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="94.3888%" y="437" width="0.0140%" height="15" fill="rgb(240,89,49)" fg:x="100879" fg:w="15"/><text x="94.6388%" y="447.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="94.3888%" y="421" width="0.0140%" height="15" fill="rgb(225,12,52)" fg:x="100879" fg:w="15"/><text x="94.6388%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (15 samples, 0.01%)</title><rect x="94.3888%" y="405" width="0.0140%" height="15" fill="rgb(239,128,45)" fg:x="100879" fg:w="15"/><text x="94.6388%" y="415.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (365 samples, 0.34%)</title><rect x="94.0632%" y="501" width="0.3415%" height="15" fill="rgb(211,78,47)" fg:x="100531" fg:w="365"/><text x="94.3132%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.02%)</title><rect x="94.3888%" y="485" width="0.0159%" height="15" fill="rgb(232,31,21)" fg:x="100879" fg:w="17"/><text x="94.6388%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.02%)</title><rect x="94.3888%" y="469" width="0.0159%" height="15" fill="rgb(222,168,14)" fg:x="100879" fg:w="17"/><text x="94.6388%" y="479.50"></text></g><g><title>core::task::wake::Waker::wake (417 samples, 0.39%)</title><rect x="94.0623%" y="533" width="0.3902%" height="15" fill="rgb(209,128,24)" fg:x="100530" fg:w="417"/><text x="94.3123%" y="543.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (417 samples, 0.39%)</title><rect x="94.0623%" y="517" width="0.3902%" height="15" fill="rgb(249,35,13)" fg:x="100530" fg:w="417"/><text x="94.3123%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (51 samples, 0.05%)</title><rect x="94.4047%" y="501" width="0.0477%" height="15" fill="rgb(218,7,2)" fg:x="100896" fg:w="51"/><text x="94.6547%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="94.4047%" y="485" width="0.0477%" height="15" fill="rgb(238,107,27)" fg:x="100896" fg:w="51"/><text x="94.6547%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (47 samples, 0.04%)</title><rect x="94.4085%" y="469" width="0.0440%" height="15" fill="rgb(217,88,38)" fg:x="100900" fg:w="47"/><text x="94.6585%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (47 samples, 0.04%)</title><rect x="94.4085%" y="453" width="0.0440%" height="15" fill="rgb(230,207,0)" fg:x="100900" fg:w="47"/><text x="94.6585%" y="463.50"></text></g><g><title>async_executor::State::notify (505 samples, 0.47%)</title><rect x="93.9987%" y="549" width="0.4725%" height="15" fill="rgb(249,64,54)" fg:x="100462" fg:w="505"/><text x="94.2487%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="94.4524%" y="533" width="0.0187%" height="15" fill="rgb(231,7,11)" fg:x="100947" fg:w="20"/><text x="94.7024%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="94.4524%" y="517" width="0.0187%" height="15" fill="rgb(205,149,21)" fg:x="100947" fg:w="20"/><text x="94.7024%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (19 samples, 0.02%)</title><rect x="94.4534%" y="501" width="0.0178%" height="15" fill="rgb(215,126,34)" fg:x="100948" fg:w="19"/><text x="94.7034%" y="511.50"></text></g><g><title>___pthread_mutex_lock (19 samples, 0.02%)</title><rect x="94.4534%" y="485" width="0.0178%" height="15" fill="rgb(241,132,45)" fg:x="100948" fg:w="19"/><text x="94.7034%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (104 samples, 0.10%)</title><rect x="94.4861%" y="517" width="0.0973%" height="15" fill="rgb(252,69,32)" fg:x="100983" fg:w="104"/><text x="94.7361%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (101 samples, 0.09%)</title><rect x="94.4889%" y="501" width="0.0945%" height="15" fill="rgb(232,204,19)" fg:x="100986" fg:w="101"/><text x="94.7389%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (101 samples, 0.09%)</title><rect x="94.4889%" y="485" width="0.0945%" height="15" fill="rgb(249,15,47)" fg:x="100986" fg:w="101"/><text x="94.7389%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (101 samples, 0.09%)</title><rect x="94.4889%" y="469" width="0.0945%" height="15" fill="rgb(209,227,23)" fg:x="100986" fg:w="101"/><text x="94.7389%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (101 samples, 0.09%)</title><rect x="94.4889%" y="453" width="0.0945%" height="15" fill="rgb(248,92,24)" fg:x="100986" fg:w="101"/><text x="94.7389%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (101 samples, 0.09%)</title><rect x="94.4889%" y="437" width="0.0945%" height="15" fill="rgb(247,59,2)" fg:x="100986" fg:w="101"/><text x="94.7389%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (16 samples, 0.01%)</title><rect x="94.5834%" y="517" width="0.0150%" height="15" fill="rgb(221,30,5)" fg:x="101087" fg:w="16"/><text x="94.8334%" y="527.50"></text></g><g><title>async_executor::Sleepers::insert (141 samples, 0.13%)</title><rect x="94.4815%" y="533" width="0.1319%" height="15" fill="rgb(208,108,53)" fg:x="100978" fg:w="141"/><text x="94.7315%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.01%)</title><rect x="94.5984%" y="517" width="0.0150%" height="15" fill="rgb(211,183,26)" fg:x="101103" fg:w="16"/><text x="94.8484%" y="527.50"></text></g><g><title>core::ptr::write (12 samples, 0.01%)</title><rect x="94.6022%" y="501" width="0.0112%" height="15" fill="rgb(232,132,4)" fg:x="101107" fg:w="12"/><text x="94.8522%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (55 samples, 0.05%)</title><rect x="94.6583%" y="517" width="0.0515%" height="15" fill="rgb(253,128,37)" fg:x="101167" fg:w="55"/><text x="94.9083%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (55 samples, 0.05%)</title><rect x="94.6583%" y="501" width="0.0515%" height="15" fill="rgb(221,58,24)" fg:x="101167" fg:w="55"/><text x="94.9083%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (55 samples, 0.05%)</title><rect x="94.6583%" y="485" width="0.0515%" height="15" fill="rgb(230,54,45)" fg:x="101167" fg:w="55"/><text x="94.9083%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (55 samples, 0.05%)</title><rect x="94.6583%" y="469" width="0.0515%" height="15" fill="rgb(254,21,18)" fg:x="101167" fg:w="55"/><text x="94.9083%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (55 samples, 0.05%)</title><rect x="94.6583%" y="453" width="0.0515%" height="15" fill="rgb(221,108,0)" fg:x="101167" fg:w="55"/><text x="94.9083%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (55 samples, 0.05%)</title><rect x="94.6583%" y="437" width="0.0515%" height="15" fill="rgb(206,95,1)" fg:x="101167" fg:w="55"/><text x="94.9083%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 0.02%)</title><rect x="94.7098%" y="517" width="0.0215%" height="15" fill="rgb(237,52,5)" fg:x="101222" fg:w="23"/><text x="94.9598%" y="527.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="94.7135%" y="501" width="0.0178%" height="15" fill="rgb(218,150,34)" fg:x="101226" fg:w="19"/><text x="94.9635%" y="511.50"></text></g><g><title>async_executor::Sleepers::update (135 samples, 0.13%)</title><rect x="94.6171%" y="533" width="0.1263%" height="15" fill="rgb(235,194,28)" fg:x="101123" fg:w="135"/><text x="94.8671%" y="543.50"></text></g><g><title>core::task::wake::Waker::will_wake (13 samples, 0.01%)</title><rect x="94.7313%" y="517" width="0.0122%" height="15" fill="rgb(245,92,18)" fg:x="101245" fg:w="13"/><text x="94.9813%" y="527.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="94.7313%" y="501" width="0.0122%" height="15" fill="rgb(253,203,53)" fg:x="101245" fg:w="13"/><text x="94.9813%" y="511.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (166 samples, 0.16%)</title><rect x="94.7528%" y="469" width="0.1553%" height="15" fill="rgb(249,185,47)" fg:x="101268" fg:w="166"/><text x="95.0028%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (178 samples, 0.17%)</title><rect x="94.7434%" y="533" width="0.1665%" height="15" fill="rgb(252,194,52)" fg:x="101258" fg:w="178"/><text x="94.9934%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (178 samples, 0.17%)</title><rect x="94.7434%" y="517" width="0.1665%" height="15" fill="rgb(210,53,36)" fg:x="101258" fg:w="178"/><text x="94.9934%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (171 samples, 0.16%)</title><rect x="94.7500%" y="501" width="0.1600%" height="15" fill="rgb(237,37,25)" fg:x="101265" fg:w="171"/><text x="95.0000%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (168 samples, 0.16%)</title><rect x="94.7528%" y="485" width="0.1572%" height="15" fill="rgb(242,116,27)" fg:x="101268" fg:w="168"/><text x="95.0028%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (136 samples, 0.13%)</title><rect x="94.9100%" y="533" width="0.1273%" height="15" fill="rgb(213,185,26)" fg:x="101436" fg:w="136"/><text x="95.1600%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (136 samples, 0.13%)</title><rect x="94.9100%" y="517" width="0.1273%" height="15" fill="rgb(225,204,8)" fg:x="101436" fg:w="136"/><text x="95.1600%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (65 samples, 0.06%)</title><rect x="95.0372%" y="533" width="0.0608%" height="15" fill="rgb(254,111,37)" fg:x="101572" fg:w="65"/><text x="95.2872%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (65 samples, 0.06%)</title><rect x="95.0372%" y="517" width="0.0608%" height="15" fill="rgb(242,35,9)" fg:x="101572" fg:w="65"/><text x="95.2872%" y="527.50"></text></g><g><title>async_executor::Ticker::sleep (1,263 samples, 1.18%)</title><rect x="94.4712%" y="549" width="1.1817%" height="15" fill="rgb(232,138,49)" fg:x="100967" fg:w="1263"/><text x="94.7212%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (593 samples, 0.55%)</title><rect x="95.0981%" y="533" width="0.5548%" height="15" fill="rgb(247,56,4)" fg:x="101637" fg:w="593"/><text x="95.3481%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (585 samples, 0.55%)</title><rect x="95.1055%" y="517" width="0.5474%" height="15" fill="rgb(226,179,17)" fg:x="101645" fg:w="585"/><text x="95.3555%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (517 samples, 0.48%)</title><rect x="95.1692%" y="501" width="0.4837%" height="15" fill="rgb(216,163,45)" fg:x="101713" fg:w="517"/><text x="95.4192%" y="511.50"></text></g><g><title>___pthread_mutex_lock (517 samples, 0.48%)</title><rect x="95.1692%" y="485" width="0.4837%" height="15" fill="rgb(211,157,3)" fg:x="101713" fg:w="517"/><text x="95.4192%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (25 samples, 0.02%)</title><rect x="95.6295%" y="469" width="0.0234%" height="15" fill="rgb(234,44,20)" fg:x="102205" fg:w="25"/><text x="95.8795%" y="479.50"></text></g><g><title>async_executor::Sleepers::remove (37 samples, 0.03%)</title><rect x="95.6576%" y="533" width="0.0346%" height="15" fill="rgb(254,138,23)" fg:x="102235" fg:w="37"/><text x="95.9076%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (21 samples, 0.02%)</title><rect x="95.6726%" y="517" width="0.0196%" height="15" fill="rgb(206,119,39)" fg:x="102251" fg:w="21"/><text x="95.9226%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (21 samples, 0.02%)</title><rect x="95.6726%" y="501" width="0.0196%" height="15" fill="rgb(231,105,52)" fg:x="102251" fg:w="21"/><text x="95.9226%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="95.6726%" y="485" width="0.0196%" height="15" fill="rgb(250,20,5)" fg:x="102251" fg:w="21"/><text x="95.9226%" y="495.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (21 samples, 0.02%)</title><rect x="95.6726%" y="469" width="0.0196%" height="15" fill="rgb(215,198,30)" fg:x="102251" fg:w="21"/><text x="95.9226%" y="479.50"></text></g><g><title>core::mem::drop (21 samples, 0.02%)</title><rect x="95.6726%" y="453" width="0.0196%" height="15" fill="rgb(246,142,8)" fg:x="102251" fg:w="21"/><text x="95.9226%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="95.6726%" y="437" width="0.0196%" height="15" fill="rgb(243,26,38)" fg:x="102251" fg:w="21"/><text x="95.9226%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="95.6726%" y="421" width="0.0196%" height="15" fill="rgb(205,133,28)" fg:x="102251" fg:w="21"/><text x="95.9226%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.02%)</title><rect x="95.6735%" y="405" width="0.0187%" height="15" fill="rgb(212,34,0)" fg:x="102252" fg:w="20"/><text x="95.9235%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.02%)</title><rect x="95.6735%" y="389" width="0.0187%" height="15" fill="rgb(251,226,22)" fg:x="102252" fg:w="20"/><text x="95.9235%" y="399.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (32 samples, 0.03%)</title><rect x="95.6950%" y="469" width="0.0299%" height="15" fill="rgb(252,119,9)" fg:x="102275" fg:w="32"/><text x="95.9450%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (36 samples, 0.03%)</title><rect x="95.6922%" y="533" width="0.0337%" height="15" fill="rgb(213,150,50)" fg:x="102272" fg:w="36"/><text x="95.9422%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="95.6922%" y="517" width="0.0337%" height="15" fill="rgb(212,24,39)" fg:x="102272" fg:w="36"/><text x="95.9422%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (33 samples, 0.03%)</title><rect x="95.6950%" y="501" width="0.0309%" height="15" fill="rgb(213,46,39)" fg:x="102275" fg:w="33"/><text x="95.9450%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (33 samples, 0.03%)</title><rect x="95.6950%" y="485" width="0.0309%" height="15" fill="rgb(239,106,12)" fg:x="102275" fg:w="33"/><text x="95.9450%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (45 samples, 0.04%)</title><rect x="95.7259%" y="533" width="0.0421%" height="15" fill="rgb(249,229,21)" fg:x="102308" fg:w="45"/><text x="95.9759%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (45 samples, 0.04%)</title><rect x="95.7259%" y="517" width="0.0421%" height="15" fill="rgb(212,158,3)" fg:x="102308" fg:w="45"/><text x="95.9759%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (51 samples, 0.05%)</title><rect x="95.7680%" y="533" width="0.0477%" height="15" fill="rgb(253,26,48)" fg:x="102353" fg:w="51"/><text x="96.0180%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (51 samples, 0.05%)</title><rect x="95.7680%" y="517" width="0.0477%" height="15" fill="rgb(238,178,20)" fg:x="102353" fg:w="51"/><text x="96.0180%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,567 samples, 5.21%)</title><rect x="90.6724%" y="613" width="5.2088%" height="15" fill="rgb(208,86,15)" fg:x="96907" fg:w="5567"/><text x="90.9224%" y="623.50">&lt;core:..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (5,564 samples, 5.21%)</title><rect x="90.6752%" y="597" width="5.2060%" height="15" fill="rgb(239,42,53)" fg:x="96910" fg:w="5564"/><text x="90.9252%" y="607.50">async_..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5,557 samples, 5.20%)</title><rect x="90.6817%" y="581" width="5.1995%" height="15" fill="rgb(245,226,8)" fg:x="96917" fg:w="5557"/><text x="90.9317%" y="591.50">&lt;futur..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (5,548 samples, 5.19%)</title><rect x="90.6901%" y="565" width="5.1911%" height="15" fill="rgb(216,176,32)" fg:x="96926" fg:w="5548"/><text x="90.9401%" y="575.50">async_..</text></g><g><title>async_executor::Ticker::wake (244 samples, 0.23%)</title><rect x="95.6529%" y="549" width="0.2283%" height="15" fill="rgb(231,186,21)" fg:x="102230" fg:w="244"/><text x="95.9029%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (70 samples, 0.07%)</title><rect x="95.8157%" y="533" width="0.0655%" height="15" fill="rgb(205,95,49)" fg:x="102404" fg:w="70"/><text x="96.0657%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (67 samples, 0.06%)</title><rect x="95.8185%" y="517" width="0.0627%" height="15" fill="rgb(217,145,8)" fg:x="102407" fg:w="67"/><text x="96.0685%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (62 samples, 0.06%)</title><rect x="95.8232%" y="501" width="0.0580%" height="15" fill="rgb(239,144,48)" fg:x="102412" fg:w="62"/><text x="96.0732%" y="511.50"></text></g><g><title>___pthread_mutex_lock (62 samples, 0.06%)</title><rect x="95.8232%" y="485" width="0.0580%" height="15" fill="rgb(214,189,23)" fg:x="102412" fg:w="62"/><text x="96.0732%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (15 samples, 0.01%)</title><rect x="95.8672%" y="469" width="0.0140%" height="15" fill="rgb(229,157,17)" fg:x="102459" fg:w="15"/><text x="96.1172%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,643 samples, 5.28%)</title><rect x="90.6518%" y="645" width="5.2800%" height="15" fill="rgb(230,5,48)" fg:x="96885" fg:w="5643"/><text x="90.9018%" y="655.50">&lt;core:..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (5,640 samples, 5.28%)</title><rect x="90.6546%" y="629" width="5.2771%" height="15" fill="rgb(224,156,48)" fg:x="96888" fg:w="5640"/><text x="90.9046%" y="639.50">async_..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (52 samples, 0.05%)</title><rect x="95.8831%" y="613" width="0.0487%" height="15" fill="rgb(223,14,29)" fg:x="102476" fg:w="52"/><text x="96.1331%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (52 samples, 0.05%)</title><rect x="95.8831%" y="597" width="0.0487%" height="15" fill="rgb(229,96,36)" fg:x="102476" fg:w="52"/><text x="96.1331%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (47 samples, 0.04%)</title><rect x="96.0057%" y="517" width="0.0440%" height="15" fill="rgb(231,102,53)" fg:x="102607" fg:w="47"/><text x="96.2557%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (45 samples, 0.04%)</title><rect x="96.0075%" y="501" width="0.0421%" height="15" fill="rgb(210,77,38)" fg:x="102609" fg:w="45"/><text x="96.2575%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (42 samples, 0.04%)</title><rect x="96.0506%" y="501" width="0.0393%" height="15" fill="rgb(235,131,6)" fg:x="102655" fg:w="42"/><text x="96.3006%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="96.1011%" y="469" width="0.0122%" height="15" fill="rgb(252,55,38)" fg:x="102709" fg:w="13"/><text x="96.3511%" y="479.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (15 samples, 0.01%)</title><rect x="96.1002%" y="485" width="0.0140%" height="15" fill="rgb(246,38,14)" fg:x="102708" fg:w="15"/><text x="96.3502%" y="495.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (149 samples, 0.14%)</title><rect x="95.9795%" y="613" width="0.1394%" height="15" fill="rgb(242,27,5)" fg:x="102579" fg:w="149"/><text x="96.2295%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (149 samples, 0.14%)</title><rect x="95.9795%" y="597" width="0.1394%" height="15" fill="rgb(228,65,35)" fg:x="102579" fg:w="149"/><text x="96.2295%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (149 samples, 0.14%)</title><rect x="95.9795%" y="581" width="0.1394%" height="15" fill="rgb(245,93,11)" fg:x="102579" fg:w="149"/><text x="96.2295%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (123 samples, 0.12%)</title><rect x="96.0038%" y="565" width="0.1151%" height="15" fill="rgb(213,1,31)" fg:x="102605" fg:w="123"/><text x="96.2538%" y="575.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (123 samples, 0.12%)</title><rect x="96.0038%" y="549" width="0.1151%" height="15" fill="rgb(237,205,14)" fg:x="102605" fg:w="123"/><text x="96.2538%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (121 samples, 0.11%)</title><rect x="96.0057%" y="533" width="0.1132%" height="15" fill="rgb(232,118,45)" fg:x="102607" fg:w="121"/><text x="96.2557%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (74 samples, 0.07%)</title><rect x="96.0496%" y="517" width="0.0692%" height="15" fill="rgb(218,5,6)" fg:x="102654" fg:w="74"/><text x="96.2996%" y="527.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (22 samples, 0.02%)</title><rect x="96.0983%" y="501" width="0.0206%" height="15" fill="rgb(251,87,51)" fg:x="102706" fg:w="22"/><text x="96.3483%" y="511.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (27 samples, 0.03%)</title><rect x="96.1189%" y="613" width="0.0253%" height="15" fill="rgb(207,225,20)" fg:x="102728" fg:w="27"/><text x="96.3689%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (24 samples, 0.02%)</title><rect x="96.1217%" y="597" width="0.0225%" height="15" fill="rgb(222,78,54)" fg:x="102731" fg:w="24"/><text x="96.3717%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (24 samples, 0.02%)</title><rect x="96.1217%" y="581" width="0.0225%" height="15" fill="rgb(232,85,16)" fg:x="102731" fg:w="24"/><text x="96.3717%" y="591.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (21 samples, 0.02%)</title><rect x="96.1507%" y="533" width="0.0196%" height="15" fill="rgb(244,25,33)" fg:x="102762" fg:w="21"/><text x="96.4007%" y="543.50"></text></g><g><title>parking::Unparker::unpark (16 samples, 0.01%)</title><rect x="96.1554%" y="517" width="0.0150%" height="15" fill="rgb(233,24,36)" fg:x="102767" fg:w="16"/><text x="96.4054%" y="527.50"></text></g><g><title>parking::Inner::unpark (13 samples, 0.01%)</title><rect x="96.1582%" y="501" width="0.0122%" height="15" fill="rgb(253,49,54)" fg:x="102770" fg:w="13"/><text x="96.4082%" y="511.50"></text></g><g><title>core::task::wake::Waker::wake (24 samples, 0.02%)</title><rect x="96.1507%" y="565" width="0.0225%" height="15" fill="rgb(245,12,22)" fg:x="102762" fg:w="24"/><text x="96.4007%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (24 samples, 0.02%)</title><rect x="96.1507%" y="549" width="0.0225%" height="15" fill="rgb(253,141,28)" fg:x="102762" fg:w="24"/><text x="96.4007%" y="559.50"></text></g><g><title>async_executor::State::notify (29 samples, 0.03%)</title><rect x="96.1469%" y="581" width="0.0271%" height="15" fill="rgb(225,207,27)" fg:x="102758" fg:w="29"/><text x="96.3969%" y="591.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (43 samples, 0.04%)</title><rect x="96.1469%" y="597" width="0.0402%" height="15" fill="rgb(220,84,2)" fg:x="102758" fg:w="43"/><text x="96.3969%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (14 samples, 0.01%)</title><rect x="96.1741%" y="581" width="0.0131%" height="15" fill="rgb(224,37,37)" fg:x="102787" fg:w="14"/><text x="96.4241%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (46 samples, 0.04%)</title><rect x="96.1460%" y="613" width="0.0430%" height="15" fill="rgb(220,143,18)" fg:x="102757" fg:w="46"/><text x="96.3960%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (149 samples, 0.14%)</title><rect x="96.1890%" y="613" width="0.1394%" height="15" fill="rgb(210,88,33)" fg:x="102803" fg:w="149"/><text x="96.4390%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (149 samples, 0.14%)</title><rect x="96.1890%" y="597" width="0.1394%" height="15" fill="rgb(219,87,51)" fg:x="102803" fg:w="149"/><text x="96.4390%" y="607.50"></text></g><g><title>async_task::runnable::Runnable::run (426 samples, 0.40%)</title><rect x="95.9327%" y="645" width="0.3986%" height="15" fill="rgb(211,7,35)" fg:x="102529" fg:w="426"/><text x="96.1827%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (404 samples, 0.38%)</title><rect x="95.9533%" y="629" width="0.3780%" height="15" fill="rgb(232,77,2)" fg:x="102551" fg:w="404"/><text x="96.2033%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (6,088 samples, 5.70%)</title><rect x="90.6406%" y="709" width="5.6963%" height="15" fill="rgb(249,94,25)" fg:x="96873" fg:w="6088"/><text x="90.8906%" y="719.50">async_e..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,084 samples, 5.69%)</title><rect x="90.6443%" y="693" width="5.6926%" height="15" fill="rgb(215,112,2)" fg:x="96877" fg:w="6084"/><text x="90.8943%" y="703.50">&lt;future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,084 samples, 5.69%)</title><rect x="90.6443%" y="677" width="5.6926%" height="15" fill="rgb(226,115,48)" fg:x="96877" fg:w="6084"/><text x="90.8943%" y="687.50">&lt;core::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (6,083 samples, 5.69%)</title><rect x="90.6452%" y="661" width="5.6916%" height="15" fill="rgb(249,196,10)" fg:x="96878" fg:w="6083"/><text x="90.8952%" y="671.50">async_e..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.05%)</title><rect x="96.4164%" y="501" width="0.0524%" height="15" fill="rgb(237,109,14)" fg:x="103046" fg:w="56"/><text x="96.6664%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (56 samples, 0.05%)</title><rect x="96.4164%" y="485" width="0.0524%" height="15" fill="rgb(217,103,53)" fg:x="103046" fg:w="56"/><text x="96.6664%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (56 samples, 0.05%)</title><rect x="96.4164%" y="469" width="0.0524%" height="15" fill="rgb(244,137,9)" fg:x="103046" fg:w="56"/><text x="96.6664%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (56 samples, 0.05%)</title><rect x="96.4164%" y="453" width="0.0524%" height="15" fill="rgb(227,201,3)" fg:x="103046" fg:w="56"/><text x="96.6664%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (55 samples, 0.05%)</title><rect x="96.4173%" y="437" width="0.0515%" height="15" fill="rgb(243,94,6)" fg:x="103047" fg:w="55"/><text x="96.6673%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (53 samples, 0.05%)</title><rect x="96.4192%" y="421" width="0.0496%" height="15" fill="rgb(235,118,5)" fg:x="103049" fg:w="53"/><text x="96.6692%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (51 samples, 0.05%)</title><rect x="96.4211%" y="405" width="0.0477%" height="15" fill="rgb(247,10,30)" fg:x="103051" fg:w="51"/><text x="96.6711%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (51 samples, 0.05%)</title><rect x="96.4211%" y="389" width="0.0477%" height="15" fill="rgb(205,26,28)" fg:x="103051" fg:w="51"/><text x="96.6711%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (51 samples, 0.05%)</title><rect x="96.4211%" y="373" width="0.0477%" height="15" fill="rgb(206,99,35)" fg:x="103051" fg:w="51"/><text x="96.6711%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (51 samples, 0.05%)</title><rect x="96.4211%" y="357" width="0.0477%" height="15" fill="rgb(238,130,40)" fg:x="103051" fg:w="51"/><text x="96.6711%" y="367.50"></text></g><g><title>concurrent_queue::full_fence (32 samples, 0.03%)</title><rect x="96.4997%" y="469" width="0.0299%" height="15" fill="rgb(224,126,31)" fg:x="103135" fg:w="32"/><text x="96.7497%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (32 samples, 0.03%)</title><rect x="96.4997%" y="453" width="0.0299%" height="15" fill="rgb(254,105,17)" fg:x="103135" fg:w="32"/><text x="96.7497%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (32 samples, 0.03%)</title><rect x="96.4997%" y="437" width="0.0299%" height="15" fill="rgb(216,87,36)" fg:x="103135" fg:w="32"/><text x="96.7497%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.03%)</title><rect x="96.4997%" y="421" width="0.0299%" height="15" fill="rgb(240,21,12)" fg:x="103135" fg:w="32"/><text x="96.7497%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (122 samples, 0.11%)</title><rect x="96.4763%" y="485" width="0.1142%" height="15" fill="rgb(245,192,34)" fg:x="103110" fg:w="122"/><text x="96.7263%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (65 samples, 0.06%)</title><rect x="96.5296%" y="469" width="0.0608%" height="15" fill="rgb(226,100,49)" fg:x="103167" fg:w="65"/><text x="96.7796%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (65 samples, 0.06%)</title><rect x="96.5296%" y="453" width="0.0608%" height="15" fill="rgb(245,188,27)" fg:x="103167" fg:w="65"/><text x="96.7796%" y="463.50"></text></g><g><title>concurrent_queue::full_fence (35 samples, 0.03%)</title><rect x="96.6035%" y="469" width="0.0327%" height="15" fill="rgb(212,170,8)" fg:x="103246" fg:w="35"/><text x="96.8535%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (33 samples, 0.03%)</title><rect x="96.6054%" y="453" width="0.0309%" height="15" fill="rgb(217,113,29)" fg:x="103248" fg:w="33"/><text x="96.8554%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (33 samples, 0.03%)</title><rect x="96.6054%" y="437" width="0.0309%" height="15" fill="rgb(237,30,3)" fg:x="103248" fg:w="33"/><text x="96.8554%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 0.03%)</title><rect x="96.6054%" y="421" width="0.0309%" height="15" fill="rgb(227,19,28)" fg:x="103248" fg:w="33"/><text x="96.8554%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (188 samples, 0.18%)</title><rect x="96.4688%" y="501" width="0.1759%" height="15" fill="rgb(239,172,45)" fg:x="103102" fg:w="188"/><text x="96.7188%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (58 samples, 0.05%)</title><rect x="96.5904%" y="485" width="0.0543%" height="15" fill="rgb(254,55,39)" fg:x="103232" fg:w="58"/><text x="96.8404%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.02%)</title><rect x="96.6485%" y="437" width="0.0215%" height="15" fill="rgb(249,208,12)" fg:x="103294" fg:w="23"/><text x="96.8985%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (23 samples, 0.02%)</title><rect x="96.6485%" y="421" width="0.0215%" height="15" fill="rgb(240,52,13)" fg:x="103294" fg:w="23"/><text x="96.8985%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (63 samples, 0.06%)</title><rect x="96.6447%" y="501" width="0.0589%" height="15" fill="rgb(252,149,13)" fg:x="103290" fg:w="63"/><text x="96.8947%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.06%)</title><rect x="96.6447%" y="485" width="0.0589%" height="15" fill="rgb(232,81,48)" fg:x="103290" fg:w="63"/><text x="96.8947%" y="495.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (62 samples, 0.06%)</title><rect x="96.6456%" y="469" width="0.0580%" height="15" fill="rgb(222,144,2)" fg:x="103291" fg:w="62"/><text x="96.8956%" y="479.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (61 samples, 0.06%)</title><rect x="96.6466%" y="453" width="0.0571%" height="15" fill="rgb(216,81,32)" fg:x="103292" fg:w="61"/><text x="96.8966%" y="463.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (36 samples, 0.03%)</title><rect x="96.6700%" y="437" width="0.0337%" height="15" fill="rgb(244,78,51)" fg:x="103317" fg:w="36"/><text x="96.9200%" y="447.50"></text></g><g><title>___pthread_rwlock_unlock (36 samples, 0.03%)</title><rect x="96.6700%" y="421" width="0.0337%" height="15" fill="rgb(217,66,21)" fg:x="103317" fg:w="36"/><text x="96.9200%" y="431.50"></text></g><g><title>fastrand::Rng::usize (12 samples, 0.01%)</title><rect x="96.7121%" y="437" width="0.0112%" height="15" fill="rgb(247,101,42)" fg:x="103362" fg:w="12"/><text x="96.9621%" y="447.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (12 samples, 0.01%)</title><rect x="96.7121%" y="421" width="0.0112%" height="15" fill="rgb(227,81,39)" fg:x="103362" fg:w="12"/><text x="96.9621%" y="431.50"></text></g><g><title>fastrand::usize (22 samples, 0.02%)</title><rect x="96.7037%" y="501" width="0.0206%" height="15" fill="rgb(220,223,44)" fg:x="103353" fg:w="22"/><text x="96.9537%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (21 samples, 0.02%)</title><rect x="96.7046%" y="485" width="0.0196%" height="15" fill="rgb(205,218,2)" fg:x="103354" fg:w="21"/><text x="96.9546%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.02%)</title><rect x="96.7055%" y="469" width="0.0187%" height="15" fill="rgb(212,207,28)" fg:x="103355" fg:w="20"/><text x="96.9555%" y="479.50"></text></g><g><title>fastrand::usize::{{closure}} (13 samples, 0.01%)</title><rect x="96.7121%" y="453" width="0.0122%" height="15" fill="rgb(224,12,41)" fg:x="103362" fg:w="13"/><text x="96.9621%" y="463.50"></text></g><g><title>___pthread_rwlock_rdlock (40 samples, 0.04%)</title><rect x="96.7280%" y="453" width="0.0374%" height="15" fill="rgb(216,118,12)" fg:x="103379" fg:w="40"/><text x="96.9780%" y="463.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (403 samples, 0.38%)</title><rect x="96.4099%" y="517" width="0.3771%" height="15" fill="rgb(252,97,46)" fg:x="103039" fg:w="403"/><text x="96.6599%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (67 samples, 0.06%)</title><rect x="96.7242%" y="501" width="0.0627%" height="15" fill="rgb(244,206,19)" fg:x="103375" fg:w="67"/><text x="96.9742%" y="511.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (65 samples, 0.06%)</title><rect x="96.7261%" y="485" width="0.0608%" height="15" fill="rgb(231,84,31)" fg:x="103377" fg:w="65"/><text x="96.9761%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (65 samples, 0.06%)</title><rect x="96.7261%" y="469" width="0.0608%" height="15" fill="rgb(244,133,0)" fg:x="103377" fg:w="65"/><text x="96.9761%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.02%)</title><rect x="96.7654%" y="453" width="0.0215%" height="15" fill="rgb(223,15,50)" fg:x="103419" fg:w="23"/><text x="97.0154%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (23 samples, 0.02%)</title><rect x="96.7654%" y="437" width="0.0215%" height="15" fill="rgb(250,118,49)" fg:x="103419" fg:w="23"/><text x="97.0154%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (27 samples, 0.03%)</title><rect x="96.7925%" y="501" width="0.0253%" height="15" fill="rgb(248,25,38)" fg:x="103448" fg:w="27"/><text x="97.0425%" y="511.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (26 samples, 0.02%)</title><rect x="96.8216%" y="437" width="0.0243%" height="15" fill="rgb(215,70,14)" fg:x="103479" fg:w="26"/><text x="97.0716%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (31 samples, 0.03%)</title><rect x="96.8178%" y="501" width="0.0290%" height="15" fill="rgb(215,28,15)" fg:x="103475" fg:w="31"/><text x="97.0678%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="96.8178%" y="485" width="0.0290%" height="15" fill="rgb(243,6,28)" fg:x="103475" fg:w="31"/><text x="97.0678%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (28 samples, 0.03%)</title><rect x="96.8206%" y="469" width="0.0262%" height="15" fill="rgb(222,130,1)" fg:x="103478" fg:w="28"/><text x="97.0706%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (27 samples, 0.03%)</title><rect x="96.8216%" y="453" width="0.0253%" height="15" fill="rgb(236,166,44)" fg:x="103479" fg:w="27"/><text x="97.0716%" y="463.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (548 samples, 0.51%)</title><rect x="96.3865%" y="629" width="0.5127%" height="15" fill="rgb(221,108,14)" fg:x="103014" fg:w="548"/><text x="96.6365%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (543 samples, 0.51%)</title><rect x="96.3911%" y="613" width="0.5081%" height="15" fill="rgb(252,3,45)" fg:x="103019" fg:w="543"/><text x="96.6411%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (543 samples, 0.51%)</title><rect x="96.3911%" y="597" width="0.5081%" height="15" fill="rgb(237,68,30)" fg:x="103019" fg:w="543"/><text x="96.6411%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (539 samples, 0.50%)</title><rect x="96.3949%" y="581" width="0.5043%" height="15" fill="rgb(211,79,22)" fg:x="103023" fg:w="539"/><text x="96.6449%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (536 samples, 0.50%)</title><rect x="96.3977%" y="565" width="0.5015%" height="15" fill="rgb(252,185,21)" fg:x="103026" fg:w="536"/><text x="96.6477%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (535 samples, 0.50%)</title><rect x="96.3986%" y="549" width="0.5006%" height="15" fill="rgb(225,189,26)" fg:x="103027" fg:w="535"/><text x="96.6486%" y="559.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (528 samples, 0.49%)</title><rect x="96.4052%" y="533" width="0.4940%" height="15" fill="rgb(241,30,40)" fg:x="103034" fg:w="528"/><text x="96.6552%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (120 samples, 0.11%)</title><rect x="96.7869%" y="517" width="0.1123%" height="15" fill="rgb(235,215,44)" fg:x="103442" fg:w="120"/><text x="97.0369%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (56 samples, 0.05%)</title><rect x="96.8468%" y="501" width="0.0524%" height="15" fill="rgb(205,8,29)" fg:x="103506" fg:w="56"/><text x="97.0968%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (54 samples, 0.05%)</title><rect x="96.8487%" y="485" width="0.0505%" height="15" fill="rgb(241,137,42)" fg:x="103508" fg:w="54"/><text x="97.0987%" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (54 samples, 0.05%)</title><rect x="96.8487%" y="469" width="0.0505%" height="15" fill="rgb(237,155,2)" fg:x="103508" fg:w="54"/><text x="97.0987%" y="479.50"></text></g><g><title>___pthread_mutex_lock (54 samples, 0.05%)</title><rect x="96.8487%" y="453" width="0.0505%" height="15" fill="rgb(245,29,42)" fg:x="103508" fg:w="54"/><text x="97.0987%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (33 samples, 0.03%)</title><rect x="96.9535%" y="565" width="0.0309%" height="15" fill="rgb(234,101,35)" fg:x="103620" fg:w="33"/><text x="97.2035%" y="575.50"></text></g><g><title>core::mem::replace (33 samples, 0.03%)</title><rect x="96.9535%" y="549" width="0.0309%" height="15" fill="rgb(228,64,37)" fg:x="103620" fg:w="33"/><text x="97.2035%" y="559.50"></text></g><g><title>core::ptr::read (33 samples, 0.03%)</title><rect x="96.9535%" y="533" width="0.0309%" height="15" fill="rgb(217,214,36)" fg:x="103620" fg:w="33"/><text x="97.2035%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (40 samples, 0.04%)</title><rect x="96.9488%" y="581" width="0.0374%" height="15" fill="rgb(243,70,3)" fg:x="103615" fg:w="40"/><text x="97.1988%" y="591.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (40 samples, 0.04%)</title><rect x="96.9928%" y="501" width="0.0374%" height="15" fill="rgb(253,158,52)" fg:x="103662" fg:w="40"/><text x="97.2428%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (49 samples, 0.05%)</title><rect x="96.9862%" y="581" width="0.0458%" height="15" fill="rgb(234,111,54)" fg:x="103655" fg:w="49"/><text x="97.2362%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (44 samples, 0.04%)</title><rect x="96.9909%" y="565" width="0.0412%" height="15" fill="rgb(217,70,32)" fg:x="103660" fg:w="44"/><text x="97.2409%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="96.9909%" y="549" width="0.0412%" height="15" fill="rgb(234,18,33)" fg:x="103660" fg:w="44"/><text x="97.2409%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (42 samples, 0.04%)</title><rect x="96.9928%" y="533" width="0.0393%" height="15" fill="rgb(234,12,49)" fg:x="103662" fg:w="42"/><text x="97.2428%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (42 samples, 0.04%)</title><rect x="96.9928%" y="517" width="0.0393%" height="15" fill="rgb(236,10,21)" fg:x="103662" fg:w="42"/><text x="97.2428%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (204 samples, 0.19%)</title><rect x="96.9357%" y="597" width="0.1909%" height="15" fill="rgb(248,182,45)" fg:x="103601" fg:w="204"/><text x="97.1857%" y="607.50"></text></g><g><title>event_listener::Inner::lock (96 samples, 0.09%)</title><rect x="97.0368%" y="581" width="0.0898%" height="15" fill="rgb(217,95,36)" fg:x="103709" fg:w="96"/><text x="97.2868%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (95 samples, 0.09%)</title><rect x="97.0377%" y="565" width="0.0889%" height="15" fill="rgb(212,110,31)" fg:x="103710" fg:w="95"/><text x="97.2877%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (95 samples, 0.09%)</title><rect x="97.0377%" y="549" width="0.0889%" height="15" fill="rgb(206,32,53)" fg:x="103710" fg:w="95"/><text x="97.2877%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (85 samples, 0.08%)</title><rect x="97.0470%" y="533" width="0.0795%" height="15" fill="rgb(246,141,37)" fg:x="103720" fg:w="85"/><text x="97.2970%" y="543.50"></text></g><g><title>___pthread_mutex_lock (85 samples, 0.08%)</title><rect x="97.0470%" y="517" width="0.0795%" height="15" fill="rgb(219,16,7)" fg:x="103720" fg:w="85"/><text x="97.2970%" y="527.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (92 samples, 0.09%)</title><rect x="97.1266%" y="597" width="0.0861%" height="15" fill="rgb(230,205,45)" fg:x="103805" fg:w="92"/><text x="97.3766%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (92 samples, 0.09%)</title><rect x="97.1266%" y="581" width="0.0861%" height="15" fill="rgb(231,43,49)" fg:x="103805" fg:w="92"/><text x="97.3766%" y="591.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (62 samples, 0.06%)</title><rect x="97.1546%" y="565" width="0.0580%" height="15" fill="rgb(212,106,34)" fg:x="103835" fg:w="62"/><text x="97.4046%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (62 samples, 0.06%)</title><rect x="97.1546%" y="549" width="0.0580%" height="15" fill="rgb(206,83,17)" fg:x="103835" fg:w="62"/><text x="97.4046%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (62 samples, 0.06%)</title><rect x="97.1546%" y="533" width="0.0580%" height="15" fill="rgb(244,154,49)" fg:x="103835" fg:w="62"/><text x="97.4046%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (62 samples, 0.06%)</title><rect x="97.1546%" y="517" width="0.0580%" height="15" fill="rgb(244,149,49)" fg:x="103835" fg:w="62"/><text x="97.4046%" y="527.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (891 samples, 0.83%)</title><rect x="96.3799%" y="661" width="0.8337%" height="15" fill="rgb(227,134,18)" fg:x="103007" fg:w="891"/><text x="96.6299%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (887 samples, 0.83%)</title><rect x="96.3837%" y="645" width="0.8299%" height="15" fill="rgb(237,116,36)" fg:x="103011" fg:w="887"/><text x="96.6337%" y="655.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (336 samples, 0.31%)</title><rect x="96.8992%" y="629" width="0.3144%" height="15" fill="rgb(205,129,40)" fg:x="103562" fg:w="336"/><text x="97.1492%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (327 samples, 0.31%)</title><rect x="96.9076%" y="613" width="0.3060%" height="15" fill="rgb(236,178,4)" fg:x="103571" fg:w="327"/><text x="97.1576%" y="623.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (7,045 samples, 6.59%)</title><rect x="90.6275%" y="741" width="6.5918%" height="15" fill="rgb(251,76,53)" fg:x="96859" fg:w="7045"/><text x="90.8775%" y="751.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,035 samples, 6.58%)</title><rect x="90.6368%" y="725" width="6.5824%" height="15" fill="rgb(242,92,40)" fg:x="96869" fg:w="7035"/><text x="90.8868%" y="735.50">&lt;core::fu..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (943 samples, 0.88%)</title><rect x="96.3369%" y="709" width="0.8823%" height="15" fill="rgb(209,45,30)" fg:x="102961" fg:w="943"/><text x="96.5869%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (899 samples, 0.84%)</title><rect x="96.3780%" y="693" width="0.8412%" height="15" fill="rgb(218,157,36)" fg:x="103005" fg:w="899"/><text x="96.6280%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (899 samples, 0.84%)</title><rect x="96.3780%" y="677" width="0.8412%" height="15" fill="rgb(222,186,16)" fg:x="103005" fg:w="899"/><text x="96.6280%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="97.2192%" y="741" width="0.0103%" height="15" fill="rgb(254,72,35)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="97.2192%" y="725" width="0.0103%" height="15" fill="rgb(224,25,35)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="97.2192%" y="709" width="0.0103%" height="15" fill="rgb(206,135,52)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="97.2192%" y="693" width="0.0103%" height="15" fill="rgb(229,174,47)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="703.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="97.2192%" y="677" width="0.0103%" height="15" fill="rgb(242,184,21)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="687.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="97.2192%" y="661" width="0.0103%" height="15" fill="rgb(213,22,45)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="97.2192%" y="645" width="0.0103%" height="15" fill="rgb(237,81,54)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="655.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="97.2192%" y="629" width="0.0103%" height="15" fill="rgb(248,177,18)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.2192%" y="613" width="0.0103%" height="15" fill="rgb(254,31,16)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.2192%" y="597" width="0.0103%" height="15" fill="rgb(235,20,31)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.2192%" y="581" width="0.0103%" height="15" fill="rgb(240,56,43)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.2192%" y="565" width="0.0103%" height="15" fill="rgb(237,197,51)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.2192%" y="549" width="0.0103%" height="15" fill="rgb(241,162,44)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.2192%" y="533" width="0.0103%" height="15" fill="rgb(224,23,20)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.2192%" y="517" width="0.0103%" height="15" fill="rgb(250,109,34)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (11 samples, 0.01%)</title><rect x="97.2192%" y="501" width="0.0103%" height="15" fill="rgb(214,175,50)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (11 samples, 0.01%)</title><rect x="97.2192%" y="485" width="0.0103%" height="15" fill="rgb(213,182,5)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="97.2192%" y="469" width="0.0103%" height="15" fill="rgb(209,199,19)" fg:x="103904" fg:w="11"/><text x="97.4692%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::get (13 samples, 0.01%)</title><rect x="97.2295%" y="741" width="0.0122%" height="15" fill="rgb(236,224,42)" fg:x="103915" fg:w="13"/><text x="97.4795%" y="751.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="97.2295%" y="725" width="0.0122%" height="15" fill="rgb(246,226,29)" fg:x="103915" fg:w="13"/><text x="97.4795%" y="735.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (13 samples, 0.01%)</title><rect x="97.2295%" y="709" width="0.0122%" height="15" fill="rgb(227,223,11)" fg:x="103915" fg:w="13"/><text x="97.4795%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (13 samples, 0.01%)</title><rect x="97.2295%" y="693" width="0.0122%" height="15" fill="rgb(219,7,51)" fg:x="103915" fg:w="13"/><text x="97.4795%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (13 samples, 0.01%)</title><rect x="97.2295%" y="677" width="0.0122%" height="15" fill="rgb(245,167,10)" fg:x="103915" fg:w="13"/><text x="97.4795%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (200 samples, 0.19%)</title><rect x="97.2417%" y="741" width="0.1871%" height="15" fill="rgb(237,224,16)" fg:x="103928" fg:w="200"/><text x="97.4917%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (199 samples, 0.19%)</title><rect x="97.2426%" y="725" width="0.1862%" height="15" fill="rgb(226,132,13)" fg:x="103929" fg:w="199"/><text x="97.4926%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (198 samples, 0.19%)</title><rect x="97.2435%" y="709" width="0.1853%" height="15" fill="rgb(214,140,3)" fg:x="103930" fg:w="198"/><text x="97.4935%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (191 samples, 0.18%)</title><rect x="97.2501%" y="693" width="0.1787%" height="15" fill="rgb(221,177,4)" fg:x="103937" fg:w="191"/><text x="97.5001%" y="703.50"></text></g><g><title>__GI___pthread_mutex_trylock (191 samples, 0.18%)</title><rect x="97.2501%" y="677" width="0.1787%" height="15" fill="rgb(238,139,3)" fg:x="103937" fg:w="191"/><text x="97.5001%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (11 samples, 0.01%)</title><rect x="97.4559%" y="549" width="0.0103%" height="15" fill="rgb(216,17,39)" fg:x="104157" fg:w="11"/><text x="97.7059%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (11 samples, 0.01%)</title><rect x="97.4559%" y="533" width="0.0103%" height="15" fill="rgb(238,120,9)" fg:x="104157" fg:w="11"/><text x="97.7059%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (11 samples, 0.01%)</title><rect x="97.4559%" y="517" width="0.0103%" height="15" fill="rgb(244,92,53)" fg:x="104157" fg:w="11"/><text x="97.7059%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (11 samples, 0.01%)</title><rect x="97.4559%" y="501" width="0.0103%" height="15" fill="rgb(224,148,33)" fg:x="104157" fg:w="11"/><text x="97.7059%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (11 samples, 0.01%)</title><rect x="97.4559%" y="485" width="0.0103%" height="15" fill="rgb(243,6,36)" fg:x="104157" fg:w="11"/><text x="97.7059%" y="495.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="97.4541%" y="565" width="0.0131%" height="15" fill="rgb(230,102,11)" fg:x="104155" fg:w="14"/><text x="97.7041%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="97.4513%" y="709" width="0.0187%" height="15" fill="rgb(234,148,36)" fg:x="104152" fg:w="20"/><text x="97.7013%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (20 samples, 0.02%)</title><rect x="97.4513%" y="693" width="0.0187%" height="15" fill="rgb(251,153,25)" fg:x="104152" fg:w="20"/><text x="97.7013%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (18 samples, 0.02%)</title><rect x="97.4531%" y="677" width="0.0168%" height="15" fill="rgb(215,129,8)" fg:x="104154" fg:w="18"/><text x="97.7031%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (18 samples, 0.02%)</title><rect x="97.4531%" y="661" width="0.0168%" height="15" fill="rgb(224,128,35)" fg:x="104154" fg:w="18"/><text x="97.7031%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (18 samples, 0.02%)</title><rect x="97.4531%" y="645" width="0.0168%" height="15" fill="rgb(237,56,52)" fg:x="104154" fg:w="18"/><text x="97.7031%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="97.4531%" y="629" width="0.0168%" height="15" fill="rgb(234,213,19)" fg:x="104154" fg:w="18"/><text x="97.7031%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="97.4531%" y="613" width="0.0168%" height="15" fill="rgb(252,82,23)" fg:x="104154" fg:w="18"/><text x="97.7031%" y="623.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="97.4531%" y="597" width="0.0168%" height="15" fill="rgb(254,201,21)" fg:x="104154" fg:w="18"/><text x="97.7031%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="97.4541%" y="581" width="0.0159%" height="15" fill="rgb(250,186,11)" fg:x="104155" fg:w="17"/><text x="97.7041%" y="591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.01%)</title><rect x="97.4924%" y="677" width="0.0131%" height="15" fill="rgb(211,174,5)" fg:x="104196" fg:w="14"/><text x="97.7424%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.01%)</title><rect x="97.4924%" y="661" width="0.0131%" height="15" fill="rgb(214,121,10)" fg:x="104196" fg:w="14"/><text x="97.7424%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="97.5121%" y="357" width="0.0122%" height="15" fill="rgb(241,66,2)" fg:x="104217" fg:w="13"/><text x="97.7621%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="97.5121%" y="341" width="0.0122%" height="15" fill="rgb(220,167,19)" fg:x="104217" fg:w="13"/><text x="97.7621%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="97.5139%" y="325" width="0.0103%" height="15" fill="rgb(231,54,50)" fg:x="104219" fg:w="11"/><text x="97.7639%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (20 samples, 0.02%)</title><rect x="97.5121%" y="373" width="0.0187%" height="15" fill="rgb(239,217,53)" fg:x="104217" fg:w="20"/><text x="97.7621%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (31 samples, 0.03%)</title><rect x="97.5074%" y="389" width="0.0290%" height="15" fill="rgb(248,8,0)" fg:x="104212" fg:w="31"/><text x="97.7574%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (18 samples, 0.02%)</title><rect x="97.5439%" y="373" width="0.0168%" height="15" fill="rgb(229,118,37)" fg:x="104251" fg:w="18"/><text x="97.7939%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (217 samples, 0.20%)</title><rect x="97.5074%" y="421" width="0.2030%" height="15" fill="rgb(253,223,43)" fg:x="104212" fg:w="217"/><text x="97.7574%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (217 samples, 0.20%)</title><rect x="97.5074%" y="405" width="0.2030%" height="15" fill="rgb(211,77,36)" fg:x="104212" fg:w="217"/><text x="97.7574%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (186 samples, 0.17%)</title><rect x="97.5364%" y="389" width="0.1740%" height="15" fill="rgb(219,3,53)" fg:x="104243" fg:w="186"/><text x="97.7864%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (160 samples, 0.15%)</title><rect x="97.5607%" y="373" width="0.1497%" height="15" fill="rgb(244,45,42)" fg:x="104269" fg:w="160"/><text x="97.8107%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (160 samples, 0.15%)</title><rect x="97.5607%" y="357" width="0.1497%" height="15" fill="rgb(225,95,27)" fg:x="104269" fg:w="160"/><text x="97.8107%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (160 samples, 0.15%)</title><rect x="97.5607%" y="341" width="0.1497%" height="15" fill="rgb(207,74,8)" fg:x="104269" fg:w="160"/><text x="97.8107%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (269 samples, 0.25%)</title><rect x="97.5065%" y="469" width="0.2517%" height="15" fill="rgb(243,63,36)" fg:x="104211" fg:w="269"/><text x="97.7565%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (269 samples, 0.25%)</title><rect x="97.5065%" y="453" width="0.2517%" height="15" fill="rgb(211,180,12)" fg:x="104211" fg:w="269"/><text x="97.7565%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (268 samples, 0.25%)</title><rect x="97.5074%" y="437" width="0.2508%" height="15" fill="rgb(254,166,49)" fg:x="104212" fg:w="268"/><text x="97.7574%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (42 samples, 0.04%)</title><rect x="97.7189%" y="421" width="0.0393%" height="15" fill="rgb(205,19,0)" fg:x="104438" fg:w="42"/><text x="97.9689%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (42 samples, 0.04%)</title><rect x="97.7189%" y="405" width="0.0393%" height="15" fill="rgb(224,172,32)" fg:x="104438" fg:w="42"/><text x="97.9689%" y="415.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (272 samples, 0.25%)</title><rect x="97.5055%" y="677" width="0.2545%" height="15" fill="rgb(254,136,30)" fg:x="104210" fg:w="272"/><text x="97.7555%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (272 samples, 0.25%)</title><rect x="97.5055%" y="661" width="0.2545%" height="15" fill="rgb(246,19,35)" fg:x="104210" fg:w="272"/><text x="97.7555%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (272 samples, 0.25%)</title><rect x="97.5055%" y="645" width="0.2545%" height="15" fill="rgb(219,24,36)" fg:x="104210" fg:w="272"/><text x="97.7555%" y="655.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (272 samples, 0.25%)</title><rect x="97.5055%" y="629" width="0.2545%" height="15" fill="rgb(251,55,1)" fg:x="104210" fg:w="272"/><text x="97.7555%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (272 samples, 0.25%)</title><rect x="97.5055%" y="613" width="0.2545%" height="15" fill="rgb(218,117,39)" fg:x="104210" fg:w="272"/><text x="97.7555%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (272 samples, 0.25%)</title><rect x="97.5055%" y="597" width="0.2545%" height="15" fill="rgb(248,169,11)" fg:x="104210" fg:w="272"/><text x="97.7555%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (272 samples, 0.25%)</title><rect x="97.5055%" y="581" width="0.2545%" height="15" fill="rgb(244,40,44)" fg:x="104210" fg:w="272"/><text x="97.7555%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (272 samples, 0.25%)</title><rect x="97.5055%" y="565" width="0.2545%" height="15" fill="rgb(234,62,37)" fg:x="104210" fg:w="272"/><text x="97.7555%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (272 samples, 0.25%)</title><rect x="97.5055%" y="549" width="0.2545%" height="15" fill="rgb(207,117,42)" fg:x="104210" fg:w="272"/><text x="97.7555%" y="559.50"></text></g><g><title>alloc::alloc::alloc (272 samples, 0.25%)</title><rect x="97.5055%" y="533" width="0.2545%" height="15" fill="rgb(213,43,2)" fg:x="104210" fg:w="272"/><text x="97.7555%" y="543.50"></text></g><g><title>__rg_alloc (272 samples, 0.25%)</title><rect x="97.5055%" y="517" width="0.2545%" height="15" fill="rgb(244,202,51)" fg:x="104210" fg:w="272"/><text x="97.7555%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (272 samples, 0.25%)</title><rect x="97.5055%" y="501" width="0.2545%" height="15" fill="rgb(253,174,46)" fg:x="104210" fg:w="272"/><text x="97.7555%" y="511.50"></text></g><g><title>rust_alloc (271 samples, 0.25%)</title><rect x="97.5065%" y="485" width="0.2536%" height="15" fill="rgb(251,23,1)" fg:x="104211" fg:w="271"/><text x="97.7565%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (306 samples, 0.29%)</title><rect x="97.4756%" y="709" width="0.2863%" height="15" fill="rgb(253,26,1)" fg:x="104178" fg:w="306"/><text x="97.7256%" y="719.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (299 samples, 0.28%)</title><rect x="97.4821%" y="693" width="0.2798%" height="15" fill="rgb(216,89,31)" fg:x="104185" fg:w="299"/><text x="97.7321%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (15 samples, 0.01%)</title><rect x="97.7619%" y="709" width="0.0140%" height="15" fill="rgb(209,109,5)" fg:x="104484" fg:w="15"/><text x="98.0119%" y="719.50"></text></g><g><title>core::mem::drop (63 samples, 0.06%)</title><rect x="97.7759%" y="709" width="0.0589%" height="15" fill="rgb(229,63,13)" fg:x="104499" fg:w="63"/><text x="98.0259%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (63 samples, 0.06%)</title><rect x="97.7759%" y="693" width="0.0589%" height="15" fill="rgb(238,137,54)" fg:x="104499" fg:w="63"/><text x="98.0259%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.06%)</title><rect x="97.7759%" y="677" width="0.0589%" height="15" fill="rgb(228,1,9)" fg:x="104499" fg:w="63"/><text x="98.0259%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (63 samples, 0.06%)</title><rect x="97.7759%" y="661" width="0.0589%" height="15" fill="rgb(249,120,48)" fg:x="104499" fg:w="63"/><text x="98.0259%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (61 samples, 0.06%)</title><rect x="97.7778%" y="645" width="0.0571%" height="15" fill="rgb(209,72,36)" fg:x="104501" fg:w="61"/><text x="98.0278%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (61 samples, 0.06%)</title><rect x="97.7778%" y="629" width="0.0571%" height="15" fill="rgb(247,98,49)" fg:x="104501" fg:w="61"/><text x="98.0278%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (35 samples, 0.03%)</title><rect x="97.8433%" y="709" width="0.0327%" height="15" fill="rgb(233,75,36)" fg:x="104571" fg:w="35"/><text x="98.0933%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (35 samples, 0.03%)</title><rect x="97.8433%" y="693" width="0.0327%" height="15" fill="rgb(225,14,24)" fg:x="104571" fg:w="35"/><text x="98.0933%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (33 samples, 0.03%)</title><rect x="97.8452%" y="677" width="0.0309%" height="15" fill="rgb(237,193,20)" fg:x="104573" fg:w="33"/><text x="98.0952%" y="687.50"></text></g><g><title>___pthread_mutex_lock (33 samples, 0.03%)</title><rect x="97.8452%" y="661" width="0.0309%" height="15" fill="rgb(239,122,19)" fg:x="104573" fg:w="33"/><text x="98.0952%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (502 samples, 0.47%)</title><rect x="97.4400%" y="725" width="0.4697%" height="15" fill="rgb(231,220,10)" fg:x="104140" fg:w="502"/><text x="97.6900%" y="735.50"></text></g><g><title>std::time::Instant::now (36 samples, 0.03%)</title><rect x="97.8760%" y="709" width="0.0337%" height="15" fill="rgb(220,66,15)" fg:x="104606" fg:w="36"/><text x="98.1260%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (36 samples, 0.03%)</title><rect x="97.8760%" y="693" width="0.0337%" height="15" fill="rgb(215,171,52)" fg:x="104606" fg:w="36"/><text x="98.1260%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (36 samples, 0.03%)</title><rect x="97.8760%" y="677" width="0.0337%" height="15" fill="rgb(241,169,50)" fg:x="104606" fg:w="36"/><text x="98.1260%" y="687.50"></text></g><g><title>__clock_gettime_2 (35 samples, 0.03%)</title><rect x="97.8770%" y="661" width="0.0327%" height="15" fill="rgb(236,189,0)" fg:x="104607" fg:w="35"/><text x="98.1270%" y="671.50"></text></g><g><title>__vdso_clock_gettime (33 samples, 0.03%)</title><rect x="97.8789%" y="645" width="0.0309%" height="15" fill="rgb(217,147,20)" fg:x="104609" fg:w="33"/><text x="98.1289%" y="655.50"></text></g><g><title>[[vdso]] (27 samples, 0.03%)</title><rect x="97.8845%" y="629" width="0.0253%" height="15" fill="rgb(206,188,39)" fg:x="104615" fg:w="27"/><text x="98.1345%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (19 samples, 0.02%)</title><rect x="97.9125%" y="725" width="0.0178%" height="15" fill="rgb(227,118,25)" fg:x="104645" fg:w="19"/><text x="98.1625%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.02%)</title><rect x="97.9144%" y="709" width="0.0159%" height="15" fill="rgb(248,171,40)" fg:x="104647" fg:w="17"/><text x="98.1644%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (31 samples, 0.03%)</title><rect x="97.9443%" y="645" width="0.0290%" height="15" fill="rgb(251,90,54)" fg:x="104679" fg:w="31"/><text x="98.1943%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (35 samples, 0.03%)</title><rect x="97.9415%" y="709" width="0.0327%" height="15" fill="rgb(234,11,46)" fg:x="104676" fg:w="35"/><text x="98.1915%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="97.9415%" y="693" width="0.0327%" height="15" fill="rgb(229,134,13)" fg:x="104676" fg:w="35"/><text x="98.1915%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (33 samples, 0.03%)</title><rect x="97.9434%" y="677" width="0.0309%" height="15" fill="rgb(223,129,3)" fg:x="104678" fg:w="33"/><text x="98.1934%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (32 samples, 0.03%)</title><rect x="97.9443%" y="661" width="0.0299%" height="15" fill="rgb(221,124,13)" fg:x="104679" fg:w="32"/><text x="98.1943%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (30 samples, 0.03%)</title><rect x="97.9743%" y="709" width="0.0281%" height="15" fill="rgb(234,3,18)" fg:x="104711" fg:w="30"/><text x="98.2243%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (30 samples, 0.03%)</title><rect x="97.9743%" y="693" width="0.0281%" height="15" fill="rgb(249,199,20)" fg:x="104711" fg:w="30"/><text x="98.2243%" y="703.50"></text></g><g><title>__libc_read (25 samples, 0.02%)</title><rect x="98.0229%" y="693" width="0.0234%" height="15" fill="rgb(224,134,6)" fg:x="104763" fg:w="25"/><text x="98.2729%" y="703.50"></text></g><g><title>epoll_wait (69 samples, 0.06%)</title><rect x="98.0463%" y="693" width="0.0646%" height="15" fill="rgb(254,83,26)" fg:x="104788" fg:w="69"/><text x="98.2963%" y="703.50"></text></g><g><title>__GI_epoll_ctl (28 samples, 0.03%)</title><rect x="98.1193%" y="661" width="0.0262%" height="15" fill="rgb(217,88,9)" fg:x="104866" fg:w="28"/><text x="98.3693%" y="671.50"></text></g><g><title>polling::epoll::Poller::modify (39 samples, 0.04%)</title><rect x="98.1109%" y="693" width="0.0365%" height="15" fill="rgb(225,73,2)" fg:x="104857" fg:w="39"/><text x="98.3609%" y="703.50"></text></g><g><title>polling::epoll::Poller::ctl (33 samples, 0.03%)</title><rect x="98.1165%" y="677" width="0.0309%" height="15" fill="rgb(226,44,39)" fg:x="104863" fg:w="33"/><text x="98.3665%" y="687.50"></text></g><g><title>polling::epoll::Poller::wait (168 samples, 0.16%)</title><rect x="98.0033%" y="709" width="0.1572%" height="15" fill="rgb(228,53,17)" fg:x="104742" fg:w="168"/><text x="98.2533%" y="719.50"></text></g><g><title>syscall (14 samples, 0.01%)</title><rect x="98.1474%" y="693" width="0.0131%" height="15" fill="rgb(212,27,27)" fg:x="104896" fg:w="14"/><text x="98.3974%" y="703.50"></text></g><g><title>polling::Poller::wait (263 samples, 0.25%)</title><rect x="97.9312%" y="725" width="0.2461%" height="15" fill="rgb(241,50,6)" fg:x="104665" fg:w="263"/><text x="98.1812%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (18 samples, 0.02%)</title><rect x="98.1605%" y="709" width="0.0168%" height="15" fill="rgb(225,28,51)" fg:x="104910" fg:w="18"/><text x="98.4105%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (18 samples, 0.02%)</title><rect x="98.1605%" y="693" width="0.0168%" height="15" fill="rgb(215,33,16)" fg:x="104910" fg:w="18"/><text x="98.4105%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (18 samples, 0.02%)</title><rect x="98.1605%" y="677" width="0.0168%" height="15" fill="rgb(243,40,39)" fg:x="104910" fg:w="18"/><text x="98.4105%" y="687.50"></text></g><g><title>__GI___pthread_mutex_trylock (18 samples, 0.02%)</title><rect x="98.1605%" y="661" width="0.0168%" height="15" fill="rgb(225,11,42)" fg:x="104910" fg:w="18"/><text x="98.4105%" y="671.50"></text></g><g><title>async_io::reactor::ReactorLock::react (801 samples, 0.75%)</title><rect x="97.4288%" y="741" width="0.7495%" height="15" fill="rgb(241,220,38)" fg:x="104128" fg:w="801"/><text x="97.6788%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (18 samples, 0.02%)</title><rect x="98.1783%" y="693" width="0.0168%" height="15" fill="rgb(244,52,35)" fg:x="104929" fg:w="18"/><text x="98.4283%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (18 samples, 0.02%)</title><rect x="98.1783%" y="677" width="0.0168%" height="15" fill="rgb(246,42,46)" fg:x="104929" fg:w="18"/><text x="98.4283%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="98.1783%" y="741" width="0.0178%" height="15" fill="rgb(205,184,13)" fg:x="104929" fg:w="19"/><text x="98.4283%" y="751.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="98.1783%" y="725" width="0.0178%" height="15" fill="rgb(209,48,36)" fg:x="104929" fg:w="19"/><text x="98.4283%" y="735.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (19 samples, 0.02%)</title><rect x="98.1783%" y="709" width="0.0178%" height="15" fill="rgb(244,34,51)" fg:x="104929" fg:w="19"/><text x="98.4283%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (67 samples, 0.06%)</title><rect x="98.2166%" y="709" width="0.0627%" height="15" fill="rgb(221,107,33)" fg:x="104970" fg:w="67"/><text x="98.4666%" y="719.50"></text></g><g><title>__GI___lll_lock_wake (38 samples, 0.04%)</title><rect x="98.2438%" y="693" width="0.0356%" height="15" fill="rgb(224,203,12)" fg:x="104999" fg:w="38"/><text x="98.4938%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (75 samples, 0.07%)</title><rect x="98.2849%" y="709" width="0.0702%" height="15" fill="rgb(230,215,18)" fg:x="105043" fg:w="75"/><text x="98.5349%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (75 samples, 0.07%)</title><rect x="98.2849%" y="693" width="0.0702%" height="15" fill="rgb(206,185,35)" fg:x="105043" fg:w="75"/><text x="98.5349%" y="703.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (22 samples, 0.02%)</title><rect x="98.4833%" y="645" width="0.0206%" height="15" fill="rgb(228,140,34)" fg:x="105255" fg:w="22"/><text x="98.7333%" y="655.50"></text></g><g><title>__condvar_confirm_wakeup (32 samples, 0.03%)</title><rect x="98.5039%" y="645" width="0.0299%" height="15" fill="rgb(208,93,13)" fg:x="105277" fg:w="32"/><text x="98.7539%" y="655.50"></text></g><g><title>__condvar_dec_grefs (185 samples, 0.17%)</title><rect x="98.5338%" y="645" width="0.1731%" height="15" fill="rgb(221,193,39)" fg:x="105309" fg:w="185"/><text x="98.7838%" y="655.50"></text></g><g><title>__GI___pthread_disable_asynccancel (28 samples, 0.03%)</title><rect x="98.8875%" y="629" width="0.0262%" height="15" fill="rgb(241,132,34)" fg:x="105687" fg:w="28"/><text x="99.1375%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (229 samples, 0.21%)</title><rect x="98.7069%" y="645" width="0.2143%" height="15" fill="rgb(221,141,10)" fg:x="105494" fg:w="229"/><text x="98.9569%" y="655.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (627 samples, 0.59%)</title><rect x="98.3617%" y="677" width="0.5867%" height="15" fill="rgb(226,90,31)" fg:x="105125" fg:w="627"/><text x="98.6117%" y="687.50"></text></g><g><title>__GI___pthread_cond_wait (627 samples, 0.59%)</title><rect x="98.3617%" y="661" width="0.5867%" height="15" fill="rgb(243,75,5)" fg:x="105125" fg:w="627"/><text x="98.6117%" y="671.50"></text></g><g><title>__pthread_mutex_cond_lock (20 samples, 0.02%)</title><rect x="98.9296%" y="645" width="0.0187%" height="15" fill="rgb(227,156,21)" fg:x="105732" fg:w="20"/><text x="99.1796%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::wait (659 samples, 0.62%)</title><rect x="98.3551%" y="709" width="0.6166%" height="15" fill="rgb(250,195,8)" fg:x="105118" fg:w="659"/><text x="98.6051%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (652 samples, 0.61%)</title><rect x="98.3617%" y="693" width="0.6101%" height="15" fill="rgb(220,134,5)" fg:x="105125" fg:w="652"/><text x="98.6117%" y="703.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (25 samples, 0.02%)</title><rect x="98.9483%" y="677" width="0.0234%" height="15" fill="rgb(246,106,34)" fg:x="105752" fg:w="25"/><text x="99.1983%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (21 samples, 0.02%)</title><rect x="98.9521%" y="661" width="0.0196%" height="15" fill="rgb(205,1,4)" fg:x="105756" fg:w="21"/><text x="99.2021%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (21 samples, 0.02%)</title><rect x="98.9521%" y="645" width="0.0196%" height="15" fill="rgb(224,151,29)" fg:x="105756" fg:w="21"/><text x="99.2021%" y="655.50"></text></g><g><title>parking::Parker::park (843 samples, 0.79%)</title><rect x="98.2110%" y="741" width="0.7888%" height="15" fill="rgb(251,196,0)" fg:x="104964" fg:w="843"/><text x="98.4610%" y="751.50"></text></g><g><title>parking::Inner::park (842 samples, 0.79%)</title><rect x="98.2119%" y="725" width="0.7878%" height="15" fill="rgb(212,127,0)" fg:x="104965" fg:w="842"/><text x="98.4619%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="98.9717%" y="709" width="0.0281%" height="15" fill="rgb(236,71,53)" fg:x="105777" fg:w="30"/><text x="99.2217%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.03%)</title><rect x="98.9726%" y="693" width="0.0271%" height="15" fill="rgb(227,99,0)" fg:x="105778" fg:w="29"/><text x="99.2226%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (29 samples, 0.03%)</title><rect x="98.9726%" y="677" width="0.0271%" height="15" fill="rgb(239,89,21)" fg:x="105778" fg:w="29"/><text x="99.2226%" y="687.50"></text></g><g><title>___pthread_mutex_lock (29 samples, 0.03%)</title><rect x="98.9726%" y="661" width="0.0271%" height="15" fill="rgb(243,122,19)" fg:x="105778" fg:w="29"/><text x="99.2226%" y="671.50"></text></g><g><title>parking::Parker::park_timeout (145 samples, 0.14%)</title><rect x="98.9998%" y="741" width="0.1357%" height="15" fill="rgb(229,192,45)" fg:x="105807" fg:w="145"/><text x="99.2498%" y="751.50"></text></g><g><title>parking::Inner::park (136 samples, 0.13%)</title><rect x="99.0082%" y="725" width="0.1273%" height="15" fill="rgb(235,165,35)" fg:x="105816" fg:w="136"/><text x="99.2582%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (121 samples, 0.11%)</title><rect x="99.0222%" y="709" width="0.1132%" height="15" fill="rgb(253,202,0)" fg:x="105831" fg:w="121"/><text x="99.2722%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (121 samples, 0.11%)</title><rect x="99.0222%" y="693" width="0.1132%" height="15" fill="rgb(235,51,20)" fg:x="105831" fg:w="121"/><text x="99.2722%" y="703.50"></text></g><g><title>std::panic::catch_unwind (9,124 samples, 8.54%)</title><rect x="90.6172%" y="901" width="8.5370%" height="15" fill="rgb(218,95,46)" fg:x="96848" fg:w="9124"/><text x="90.8672%" y="911.50">std::panic::..</text></g><g><title>std::panicking::try (9,124 samples, 8.54%)</title><rect x="90.6172%" y="885" width="8.5370%" height="15" fill="rgb(212,81,10)" fg:x="96848" fg:w="9124"/><text x="90.8672%" y="895.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (9,124 samples, 8.54%)</title><rect x="90.6172%" y="869" width="8.5370%" height="15" fill="rgb(240,59,0)" fg:x="96848" fg:w="9124"/><text x="90.8672%" y="879.50">std::panicki..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (9,124 samples, 8.54%)</title><rect x="90.6172%" y="853" width="8.5370%" height="15" fill="rgb(212,191,42)" fg:x="96848" fg:w="9124"/><text x="90.8672%" y="863.50">async_global..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,124 samples, 8.54%)</title><rect x="90.6172%" y="837" width="8.5370%" height="15" fill="rgb(233,140,3)" fg:x="96848" fg:w="9124"/><text x="90.8672%" y="847.50">std::thread:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,124 samples, 8.54%)</title><rect x="90.6172%" y="821" width="8.5370%" height="15" fill="rgb(215,69,23)" fg:x="96848" fg:w="9124"/><text x="90.8672%" y="831.50">std::thread:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (9,124 samples, 8.54%)</title><rect x="90.6172%" y="805" width="8.5370%" height="15" fill="rgb(240,202,20)" fg:x="96848" fg:w="9124"/><text x="90.8672%" y="815.50">async_global..</text></g><g><title>async_global_executor::reactor::block_on (9,124 samples, 8.54%)</title><rect x="90.6172%" y="789" width="8.5370%" height="15" fill="rgb(209,146,50)" fg:x="96848" fg:w="9124"/><text x="90.8672%" y="799.50">async_global..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (9,124 samples, 8.54%)</title><rect x="90.6172%" y="773" width="8.5370%" height="15" fill="rgb(253,102,54)" fg:x="96848" fg:w="9124"/><text x="90.8672%" y="783.50">async_global..</text></g><g><title>async_io::driver::block_on (9,124 samples, 8.54%)</title><rect x="90.6172%" y="757" width="8.5370%" height="15" fill="rgb(250,173,47)" fg:x="96848" fg:w="9124"/><text x="90.8672%" y="767.50">async_io::dr..</text></g><g><title>std::time::Instant::now (11 samples, 0.01%)</title><rect x="99.1439%" y="741" width="0.0103%" height="15" fill="rgb(232,142,7)" fg:x="105961" fg:w="11"/><text x="99.3939%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (11 samples, 0.01%)</title><rect x="99.1439%" y="725" width="0.0103%" height="15" fill="rgb(230,157,47)" fg:x="105961" fg:w="11"/><text x="99.3939%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (11 samples, 0.01%)</title><rect x="99.1439%" y="709" width="0.0103%" height="15" fill="rgb(214,177,35)" fg:x="105961" fg:w="11"/><text x="99.3939%" y="719.50"></text></g><g><title>std::panic::catch_unwind (9,154 samples, 8.57%)</title><rect x="90.5900%" y="1029" width="8.5651%" height="15" fill="rgb(234,119,46)" fg:x="96819" fg:w="9154"/><text x="90.8400%" y="1039.50">std::panic::..</text></g><g><title>std::panicking::try (9,154 samples, 8.57%)</title><rect x="90.5900%" y="1013" width="8.5651%" height="15" fill="rgb(241,180,50)" fg:x="96819" fg:w="9154"/><text x="90.8400%" y="1023.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (9,154 samples, 8.57%)</title><rect x="90.5900%" y="997" width="8.5651%" height="15" fill="rgb(221,54,25)" fg:x="96819" fg:w="9154"/><text x="90.8400%" y="1007.50">std::panicki..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9,154 samples, 8.57%)</title><rect x="90.5900%" y="981" width="8.5651%" height="15" fill="rgb(209,157,44)" fg:x="96819" fg:w="9154"/><text x="90.8400%" y="991.50">&lt;core::panic..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (9,154 samples, 8.57%)</title><rect x="90.5900%" y="965" width="8.5651%" height="15" fill="rgb(246,115,41)" fg:x="96819" fg:w="9154"/><text x="90.8400%" y="975.50">std::thread:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9,154 samples, 8.57%)</title><rect x="90.5900%" y="949" width="8.5651%" height="15" fill="rgb(229,86,1)" fg:x="96819" fg:w="9154"/><text x="90.8400%" y="959.50">std::sys_com..</text></g><g><title>core::ops::function::FnOnce::call_once (9,154 samples, 8.57%)</title><rect x="90.5900%" y="933" width="8.5651%" height="15" fill="rgb(240,108,53)" fg:x="96819" fg:w="9154"/><text x="90.8400%" y="943.50">core::ops::f..</text></g><g><title>async_global_executor::threading::thread_main_loop (9,154 samples, 8.57%)</title><rect x="90.5900%" y="917" width="8.5651%" height="15" fill="rgb(227,134,2)" fg:x="96819" fg:w="9154"/><text x="90.8400%" y="927.50">async_global..</text></g><g><title>__GI___clone (9,180 samples, 8.59%)</title><rect x="90.5760%" y="1141" width="8.5894%" height="15" fill="rgb(213,129,25)" fg:x="96804" fg:w="9180"/><text x="90.8260%" y="1151.50">__GI___clone</text></g><g><title>start_thread (9,166 samples, 8.58%)</title><rect x="90.5891%" y="1125" width="8.5763%" height="15" fill="rgb(226,35,21)" fg:x="96818" fg:w="9166"/><text x="90.8391%" y="1135.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9,165 samples, 8.58%)</title><rect x="90.5900%" y="1109" width="8.5754%" height="15" fill="rgb(208,129,26)" fg:x="96819" fg:w="9165"/><text x="90.8400%" y="1119.50">std::sys::un..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9,165 samples, 8.58%)</title><rect x="90.5900%" y="1093" width="8.5754%" height="15" fill="rgb(224,83,6)" fg:x="96819" fg:w="9165"/><text x="90.8400%" y="1103.50">&lt;alloc::boxe..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9,165 samples, 8.58%)</title><rect x="90.5900%" y="1077" width="8.5754%" height="15" fill="rgb(227,52,39)" fg:x="96819" fg:w="9165"/><text x="90.8400%" y="1087.50">&lt;alloc::boxe..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (9,165 samples, 8.58%)</title><rect x="90.5900%" y="1061" width="8.5754%" height="15" fill="rgb(241,30,17)" fg:x="96819" fg:w="9165"/><text x="90.8400%" y="1071.50">core::ops::f..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (9,165 samples, 8.58%)</title><rect x="90.5900%" y="1045" width="8.5754%" height="15" fill="rgb(246,186,42)" fg:x="96819" fg:w="9165"/><text x="90.8400%" y="1055.50">std::thread:..</text></g><g><title>abi_stable::std_types::boxed::destroy_box (46 samples, 0.04%)</title><rect x="99.1897%" y="1141" width="0.0430%" height="15" fill="rgb(221,169,15)" fg:x="106010" fg:w="46"/><text x="99.4397%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (12 samples, 0.01%)</title><rect x="99.2215%" y="1125" width="0.0112%" height="15" fill="rgb(235,108,21)" fg:x="106044" fg:w="12"/><text x="99.4715%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (12 samples, 0.01%)</title><rect x="99.2215%" y="1109" width="0.0112%" height="15" fill="rgb(219,148,30)" fg:x="106044" fg:w="12"/><text x="99.4715%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (12 samples, 0.01%)</title><rect x="99.2215%" y="1093" width="0.0112%" height="15" fill="rgb(220,109,5)" fg:x="106044" fg:w="12"/><text x="99.4715%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (12 samples, 0.01%)</title><rect x="99.2215%" y="1077" width="0.0112%" height="15" fill="rgb(213,203,48)" fg:x="106044" fg:w="12"/><text x="99.4715%" y="1087.50"></text></g><g><title>anon.60428f314eac9a34fd6a5f5dd740730b.0.llvm.6682858220796171858 (16 samples, 0.01%)</title><rect x="99.2571%" y="1141" width="0.0150%" height="15" fill="rgb(244,71,33)" fg:x="106082" fg:w="16"/><text x="99.5071%" y="1151.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (16 samples, 0.01%)</title><rect x="99.2795%" y="1125" width="0.0150%" height="15" fill="rgb(209,23,2)" fg:x="106106" fg:w="16"/><text x="99.5295%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="99.2842%" y="1109" width="0.0103%" height="15" fill="rgb(219,97,7)" fg:x="106111" fg:w="11"/><text x="99.5342%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="99.2842%" y="1093" width="0.0103%" height="15" fill="rgb(216,161,23)" fg:x="106111" fg:w="11"/><text x="99.5342%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="99.2842%" y="1077" width="0.0103%" height="15" fill="rgb(207,45,42)" fg:x="106111" fg:w="11"/><text x="99.5342%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="99.2842%" y="1061" width="0.0103%" height="15" fill="rgb(241,61,4)" fg:x="106111" fg:w="11"/><text x="99.5342%" y="1071.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="99.2842%" y="1045" width="0.0103%" height="15" fill="rgb(236,170,1)" fg:x="106111" fg:w="11"/><text x="99.5342%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="99.2842%" y="1029" width="0.0103%" height="15" fill="rgb(239,72,5)" fg:x="106111" fg:w="11"/><text x="99.5342%" y="1039.50"></text></g><g><title>anon.80d05e8d6ef7b329aa6a620d992361c3.110.llvm.7160008504619857686 (24 samples, 0.02%)</title><rect x="99.2795%" y="1141" width="0.0225%" height="15" fill="rgb(214,13,50)" fg:x="106106" fg:w="24"/><text x="99.5295%" y="1151.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (21 samples, 0.02%)</title><rect x="99.3048%" y="1125" width="0.0196%" height="15" fill="rgb(224,88,9)" fg:x="106133" fg:w="21"/><text x="99.5548%" y="1135.50"></text></g><g><title>anon.80d05e8d6ef7b329aa6a620d992361c3.112.llvm.7160008504619857686 (26 samples, 0.02%)</title><rect x="99.3020%" y="1141" width="0.0243%" height="15" fill="rgb(238,192,34)" fg:x="106130" fg:w="26"/><text x="99.5520%" y="1151.50"></text></g><g><title>anon.adf543dd20ecce45fc53651bd1207dc5.78.llvm.10630813412028013998 (13 samples, 0.01%)</title><rect x="99.3263%" y="1141" width="0.0122%" height="15" fill="rgb(217,203,50)" fg:x="106156" fg:w="13"/><text x="99.5763%" y="1151.50"></text></g><g><title>anon.e75ff7bb6ddbf65497a2a4b43e00714c.22.llvm.6332940539879287414 (11 samples, 0.01%)</title><rect x="99.3460%" y="1141" width="0.0103%" height="15" fill="rgb(241,123,32)" fg:x="106177" fg:w="11"/><text x="99.5960%" y="1151.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="99.3460%" y="1125" width="0.0103%" height="15" fill="rgb(248,151,39)" fg:x="106177" fg:w="11"/><text x="99.5960%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (11 samples, 0.01%)</title><rect x="99.3460%" y="1109" width="0.0103%" height="15" fill="rgb(208,89,6)" fg:x="106177" fg:w="11"/><text x="99.5960%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (11 samples, 0.01%)</title><rect x="99.3460%" y="1093" width="0.0103%" height="15" fill="rgb(254,43,26)" fg:x="106177" fg:w="11"/><text x="99.5960%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (11 samples, 0.01%)</title><rect x="99.3460%" y="1077" width="0.0103%" height="15" fill="rgb(216,158,13)" fg:x="106177" fg:w="11"/><text x="99.5960%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (11 samples, 0.01%)</title><rect x="99.3460%" y="1061" width="0.0103%" height="15" fill="rgb(212,47,37)" fg:x="106177" fg:w="11"/><text x="99.5960%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (11 samples, 0.01%)</title><rect x="99.3460%" y="1045" width="0.0103%" height="15" fill="rgb(254,16,10)" fg:x="106177" fg:w="11"/><text x="99.5960%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="99.3460%" y="1029" width="0.0103%" height="15" fill="rgb(223,228,16)" fg:x="106177" fg:w="11"/><text x="99.5960%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="99.3460%" y="1013" width="0.0103%" height="15" fill="rgb(249,108,50)" fg:x="106177" fg:w="11"/><text x="99.5960%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="99.3460%" y="997" width="0.0103%" height="15" fill="rgb(208,220,5)" fg:x="106177" fg:w="11"/><text x="99.5960%" y="1007.50"></text></g><g><title>async_executor::steal (21 samples, 0.02%)</title><rect x="99.3637%" y="1141" width="0.0196%" height="15" fill="rgb(217,89,48)" fg:x="106196" fg:w="21"/><text x="99.6137%" y="1151.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (26 samples, 0.02%)</title><rect x="99.3899%" y="1141" width="0.0243%" height="15" fill="rgb(212,113,41)" fg:x="106224" fg:w="26"/><text x="99.6399%" y="1151.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (21 samples, 0.02%)</title><rect x="99.4199%" y="1141" width="0.0196%" height="15" fill="rgb(231,127,5)" fg:x="106256" fg:w="21"/><text x="99.6699%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (26 samples, 0.02%)</title><rect x="99.4657%" y="1125" width="0.0243%" height="15" fill="rgb(217,141,17)" fg:x="106305" fg:w="26"/><text x="99.7157%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (26 samples, 0.02%)</title><rect x="99.4657%" y="1109" width="0.0243%" height="15" fill="rgb(245,125,54)" fg:x="106305" fg:w="26"/><text x="99.7157%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (16 samples, 0.01%)</title><rect x="99.4751%" y="1093" width="0.0150%" height="15" fill="rgb(248,125,3)" fg:x="106315" fg:w="16"/><text x="99.7251%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (16 samples, 0.01%)</title><rect x="99.4751%" y="1077" width="0.0150%" height="15" fill="rgb(236,119,51)" fg:x="106315" fg:w="16"/><text x="99.7251%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (38 samples, 0.04%)</title><rect x="99.4901%" y="1125" width="0.0356%" height="15" fill="rgb(239,99,8)" fg:x="106331" fg:w="38"/><text x="99.7401%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (38 samples, 0.04%)</title><rect x="99.4901%" y="1109" width="0.0356%" height="15" fill="rgb(224,228,4)" fg:x="106331" fg:w="38"/><text x="99.7401%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (38 samples, 0.04%)</title><rect x="99.4901%" y="1093" width="0.0356%" height="15" fill="rgb(220,131,45)" fg:x="106331" fg:w="38"/><text x="99.7401%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (101 samples, 0.09%)</title><rect x="99.4583%" y="1141" width="0.0945%" height="15" fill="rgb(215,62,5)" fg:x="106297" fg:w="101"/><text x="99.7083%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (29 samples, 0.03%)</title><rect x="99.5256%" y="1125" width="0.0271%" height="15" fill="rgb(253,12,24)" fg:x="106369" fg:w="29"/><text x="99.7756%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="99.5322%" y="1109" width="0.0206%" height="15" fill="rgb(248,120,50)" fg:x="106376" fg:w="22"/><text x="99.7822%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (22 samples, 0.02%)</title><rect x="99.5322%" y="1093" width="0.0206%" height="15" fill="rgb(245,194,10)" fg:x="106376" fg:w="22"/><text x="99.7822%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (18 samples, 0.02%)</title><rect x="99.5761%" y="1141" width="0.0168%" height="15" fill="rgb(241,149,38)" fg:x="106423" fg:w="18"/><text x="99.8261%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="99.5761%" y="1125" width="0.0168%" height="15" fill="rgb(219,215,7)" fg:x="106423" fg:w="18"/><text x="99.8261%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (11 samples, 0.01%)</title><rect x="99.5827%" y="1109" width="0.0103%" height="15" fill="rgb(208,120,31)" fg:x="106430" fg:w="11"/><text x="99.8327%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (11 samples, 0.01%)</title><rect x="99.5827%" y="1093" width="0.0103%" height="15" fill="rgb(244,30,8)" fg:x="106430" fg:w="11"/><text x="99.8327%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="99.5827%" y="1077" width="0.0103%" height="15" fill="rgb(238,35,44)" fg:x="106430" fg:w="11"/><text x="99.8327%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (11 samples, 0.01%)</title><rect x="99.5827%" y="1061" width="0.0103%" height="15" fill="rgb(243,218,37)" fg:x="106430" fg:w="11"/><text x="99.8327%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (11 samples, 0.01%)</title><rect x="99.5827%" y="1045" width="0.0103%" height="15" fill="rgb(218,169,10)" fg:x="106430" fg:w="11"/><text x="99.8327%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="99.5827%" y="1029" width="0.0103%" height="15" fill="rgb(221,144,10)" fg:x="106430" fg:w="11"/><text x="99.8327%" y="1039.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="99.5827%" y="1013" width="0.0103%" height="15" fill="rgb(226,41,38)" fg:x="106430" fg:w="11"/><text x="99.8327%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="99.5827%" y="997" width="0.0103%" height="15" fill="rgb(228,3,1)" fg:x="106430" fg:w="11"/><text x="99.8327%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="99.5827%" y="981" width="0.0103%" height="15" fill="rgb(209,129,12)" fg:x="106430" fg:w="11"/><text x="99.8327%" y="991.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="99.5827%" y="965" width="0.0103%" height="15" fill="rgb(213,136,33)" fg:x="106430" fg:w="11"/><text x="99.8327%" y="975.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="99.5827%" y="949" width="0.0103%" height="15" fill="rgb(209,181,29)" fg:x="106430" fg:w="11"/><text x="99.8327%" y="959.50"></text></g><g><title>async-std/runti (106,394 samples, 99.55%)</title><rect x="0.0702%" y="1157" width="99.5490%" height="15" fill="rgb(234,173,18)" fg:x="75" fg:w="106394"/><text x="0.3202%" y="1167.50">async-std/runti</text></g><g><title>tremor_runtime::connectors::source::build_event (28 samples, 0.03%)</title><rect x="99.5930%" y="1141" width="0.0262%" height="15" fill="rgb(227,73,47)" fg:x="106441" fg:w="28"/><text x="99.8430%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (12 samples, 0.01%)</title><rect x="99.6080%" y="1125" width="0.0112%" height="15" fill="rgb(234,9,34)" fg:x="106457" fg:w="12"/><text x="99.8580%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (12 samples, 0.01%)</title><rect x="99.6080%" y="1109" width="0.0112%" height="15" fill="rgb(235,172,15)" fg:x="106457" fg:w="12"/><text x="99.8580%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (12 samples, 0.01%)</title><rect x="99.6080%" y="1093" width="0.0112%" height="15" fill="rgb(245,61,2)" fg:x="106457" fg:w="12"/><text x="99.8580%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="99.6080%" y="1077" width="0.0112%" height="15" fill="rgb(238,39,47)" fg:x="106457" fg:w="12"/><text x="99.8580%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (12 samples, 0.01%)</title><rect x="99.6080%" y="1061" width="0.0112%" height="15" fill="rgb(234,37,24)" fg:x="106457" fg:w="12"/><text x="99.8580%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (12 samples, 0.01%)</title><rect x="99.6080%" y="1045" width="0.0112%" height="15" fill="rgb(248,223,24)" fg:x="106457" fg:w="12"/><text x="99.8580%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="99.6080%" y="1029" width="0.0112%" height="15" fill="rgb(223,12,15)" fg:x="106457" fg:w="12"/><text x="99.8580%" y="1039.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="99.6080%" y="1013" width="0.0112%" height="15" fill="rgb(249,6,3)" fg:x="106457" fg:w="12"/><text x="99.8580%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="99.6080%" y="997" width="0.0112%" height="15" fill="rgb(237,105,33)" fg:x="106457" fg:w="12"/><text x="99.8580%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="99.6080%" y="981" width="0.0112%" height="15" fill="rgb(252,208,35)" fg:x="106457" fg:w="12"/><text x="99.8580%" y="991.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="99.6080%" y="965" width="0.0112%" height="15" fill="rgb(215,181,35)" fg:x="106457" fg:w="12"/><text x="99.8580%" y="975.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="99.6080%" y="949" width="0.0112%" height="15" fill="rgb(246,212,3)" fg:x="106457" fg:w="12"/><text x="99.8580%" y="959.50"></text></g><g><title>blocking-1 (29 samples, 0.03%)</title><rect x="99.6192%" y="1157" width="0.0271%" height="15" fill="rgb(247,156,24)" fg:x="106469" fg:w="29"/><text x="99.8692%" y="1167.50"></text></g><g><title>__GI___clone (27 samples, 0.03%)</title><rect x="99.6211%" y="1141" width="0.0253%" height="15" fill="rgb(248,9,31)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="1151.50"></text></g><g><title>start_thread (27 samples, 0.03%)</title><rect x="99.6211%" y="1125" width="0.0253%" height="15" fill="rgb(234,26,45)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (27 samples, 0.03%)</title><rect x="99.6211%" y="1109" width="0.0253%" height="15" fill="rgb(249,11,32)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="99.6211%" y="1093" width="0.0253%" height="15" fill="rgb(249,162,33)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="99.6211%" y="1077" width="0.0253%" height="15" fill="rgb(232,4,32)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (27 samples, 0.03%)</title><rect x="99.6211%" y="1061" width="0.0253%" height="15" fill="rgb(212,5,45)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (27 samples, 0.03%)</title><rect x="99.6211%" y="1045" width="0.0253%" height="15" fill="rgb(227,95,13)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.03%)</title><rect x="99.6211%" y="1029" width="0.0253%" height="15" fill="rgb(223,205,10)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="1039.50"></text></g><g><title>std::panicking::try (27 samples, 0.03%)</title><rect x="99.6211%" y="1013" width="0.0253%" height="15" fill="rgb(222,178,8)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.03%)</title><rect x="99.6211%" y="997" width="0.0253%" height="15" fill="rgb(216,13,22)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="99.6211%" y="981" width="0.0253%" height="15" fill="rgb(240,167,12)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (27 samples, 0.03%)</title><rect x="99.6211%" y="965" width="0.0253%" height="15" fill="rgb(235,68,35)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (27 samples, 0.03%)</title><rect x="99.6211%" y="949" width="0.0253%" height="15" fill="rgb(253,40,27)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (27 samples, 0.03%)</title><rect x="99.6211%" y="933" width="0.0253%" height="15" fill="rgb(214,19,28)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (27 samples, 0.03%)</title><rect x="99.6211%" y="917" width="0.0253%" height="15" fill="rgb(210,167,45)" fg:x="106471" fg:w="27"/><text x="99.8711%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (20 samples, 0.02%)</title><rect x="99.6276%" y="901" width="0.0187%" height="15" fill="rgb(232,97,40)" fg:x="106478" fg:w="20"/><text x="99.8776%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (20 samples, 0.02%)</title><rect x="99.6276%" y="885" width="0.0187%" height="15" fill="rgb(250,35,23)" fg:x="106478" fg:w="20"/><text x="99.8776%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (20 samples, 0.02%)</title><rect x="99.6276%" y="869" width="0.0187%" height="15" fill="rgb(248,47,53)" fg:x="106478" fg:w="20"/><text x="99.8776%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (20 samples, 0.02%)</title><rect x="99.6276%" y="853" width="0.0187%" height="15" fill="rgb(226,58,50)" fg:x="106478" fg:w="20"/><text x="99.8776%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common (19 samples, 0.02%)</title><rect x="99.6285%" y="837" width="0.0178%" height="15" fill="rgb(217,105,26)" fg:x="106479" fg:w="19"/><text x="99.8785%" y="847.50"></text></g><g><title>blocking-2 (17 samples, 0.02%)</title><rect x="99.6463%" y="1157" width="0.0159%" height="15" fill="rgb(208,64,1)" fg:x="106498" fg:w="17"/><text x="99.8963%" y="1167.50"></text></g><g><title>__GI___clone (16 samples, 0.01%)</title><rect x="99.6473%" y="1141" width="0.0150%" height="15" fill="rgb(214,80,1)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="1151.50"></text></g><g><title>start_thread (16 samples, 0.01%)</title><rect x="99.6473%" y="1125" width="0.0150%" height="15" fill="rgb(206,175,26)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (16 samples, 0.01%)</title><rect x="99.6473%" y="1109" width="0.0150%" height="15" fill="rgb(235,156,37)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16 samples, 0.01%)</title><rect x="99.6473%" y="1093" width="0.0150%" height="15" fill="rgb(213,100,9)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16 samples, 0.01%)</title><rect x="99.6473%" y="1077" width="0.0150%" height="15" fill="rgb(241,15,13)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (16 samples, 0.01%)</title><rect x="99.6473%" y="1061" width="0.0150%" height="15" fill="rgb(205,97,43)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (16 samples, 0.01%)</title><rect x="99.6473%" y="1045" width="0.0150%" height="15" fill="rgb(216,106,32)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.01%)</title><rect x="99.6473%" y="1029" width="0.0150%" height="15" fill="rgb(226,200,8)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="1039.50"></text></g><g><title>std::panicking::try (16 samples, 0.01%)</title><rect x="99.6473%" y="1013" width="0.0150%" height="15" fill="rgb(244,54,29)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.01%)</title><rect x="99.6473%" y="997" width="0.0150%" height="15" fill="rgb(252,169,12)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.01%)</title><rect x="99.6473%" y="981" width="0.0150%" height="15" fill="rgb(231,199,11)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (16 samples, 0.01%)</title><rect x="99.6473%" y="965" width="0.0150%" height="15" fill="rgb(233,191,18)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (16 samples, 0.01%)</title><rect x="99.6473%" y="949" width="0.0150%" height="15" fill="rgb(215,83,47)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (16 samples, 0.01%)</title><rect x="99.6473%" y="933" width="0.0150%" height="15" fill="rgb(251,67,19)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (16 samples, 0.01%)</title><rect x="99.6473%" y="917" width="0.0150%" height="15" fill="rgb(240,7,20)" fg:x="106499" fg:w="16"/><text x="99.8973%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (11 samples, 0.01%)</title><rect x="99.6519%" y="901" width="0.0103%" height="15" fill="rgb(210,150,26)" fg:x="106504" fg:w="11"/><text x="99.9019%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (11 samples, 0.01%)</title><rect x="99.6519%" y="885" width="0.0103%" height="15" fill="rgb(228,75,42)" fg:x="106504" fg:w="11"/><text x="99.9019%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (11 samples, 0.01%)</title><rect x="99.6519%" y="869" width="0.0103%" height="15" fill="rgb(237,134,48)" fg:x="106504" fg:w="11"/><text x="99.9019%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (11 samples, 0.01%)</title><rect x="99.6519%" y="853" width="0.0103%" height="15" fill="rgb(205,80,50)" fg:x="106504" fg:w="11"/><text x="99.9019%" y="863.50"></text></g><g><title>blocking-4 (14 samples, 0.01%)</title><rect x="99.6716%" y="1157" width="0.0131%" height="15" fill="rgb(217,74,48)" fg:x="106525" fg:w="14"/><text x="99.9216%" y="1167.50"></text></g><g><title>__GI___clone (12 samples, 0.01%)</title><rect x="99.6735%" y="1141" width="0.0112%" height="15" fill="rgb(205,82,50)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="1151.50"></text></g><g><title>start_thread (12 samples, 0.01%)</title><rect x="99.6735%" y="1125" width="0.0112%" height="15" fill="rgb(228,1,33)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 0.01%)</title><rect x="99.6735%" y="1109" width="0.0112%" height="15" fill="rgb(214,50,23)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="99.6735%" y="1093" width="0.0112%" height="15" fill="rgb(210,62,9)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="99.6735%" y="1077" width="0.0112%" height="15" fill="rgb(210,104,37)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 0.01%)</title><rect x="99.6735%" y="1061" width="0.0112%" height="15" fill="rgb(232,104,43)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (12 samples, 0.01%)</title><rect x="99.6735%" y="1045" width="0.0112%" height="15" fill="rgb(244,52,6)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="99.6735%" y="1029" width="0.0112%" height="15" fill="rgb(211,174,52)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="1039.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="99.6735%" y="1013" width="0.0112%" height="15" fill="rgb(229,48,4)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="99.6735%" y="997" width="0.0112%" height="15" fill="rgb(205,155,16)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="99.6735%" y="981" width="0.0112%" height="15" fill="rgb(211,141,53)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="99.6735%" y="965" width="0.0112%" height="15" fill="rgb(240,148,11)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.01%)</title><rect x="99.6735%" y="949" width="0.0112%" height="15" fill="rgb(214,45,23)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (12 samples, 0.01%)</title><rect x="99.6735%" y="933" width="0.0112%" height="15" fill="rgb(248,74,26)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (12 samples, 0.01%)</title><rect x="99.6735%" y="917" width="0.0112%" height="15" fill="rgb(218,121,16)" fg:x="106527" fg:w="12"/><text x="99.9235%" y="927.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (54 samples, 0.05%)</title><rect x="99.6856%" y="901" width="0.0505%" height="15" fill="rgb(218,10,47)" fg:x="106540" fg:w="54"/><text x="99.9356%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (54 samples, 0.05%)</title><rect x="99.6856%" y="885" width="0.0505%" height="15" fill="rgb(227,99,14)" fg:x="106540" fg:w="54"/><text x="99.9356%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (54 samples, 0.05%)</title><rect x="99.6856%" y="869" width="0.0505%" height="15" fill="rgb(229,83,46)" fg:x="106540" fg:w="54"/><text x="99.9356%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (54 samples, 0.05%)</title><rect x="99.6856%" y="853" width="0.0505%" height="15" fill="rgb(228,25,1)" fg:x="106540" fg:w="54"/><text x="99.9356%" y="863.50"></text></g><g><title>___pthread_mutex_lock (54 samples, 0.05%)</title><rect x="99.6856%" y="837" width="0.0505%" height="15" fill="rgb(252,190,15)" fg:x="106540" fg:w="54"/><text x="99.9356%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (53 samples, 0.05%)</title><rect x="99.6866%" y="821" width="0.0496%" height="15" fill="rgb(213,103,51)" fg:x="106541" fg:w="53"/><text x="99.9366%" y="831.50"></text></g><g><title>std::panic::catch_unwind (56 samples, 0.05%)</title><rect x="99.6856%" y="1029" width="0.0524%" height="15" fill="rgb(220,38,44)" fg:x="106540" fg:w="56"/><text x="99.9356%" y="1039.50"></text></g><g><title>std::panicking::try (56 samples, 0.05%)</title><rect x="99.6856%" y="1013" width="0.0524%" height="15" fill="rgb(210,45,26)" fg:x="106540" fg:w="56"/><text x="99.9356%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (56 samples, 0.05%)</title><rect x="99.6856%" y="997" width="0.0524%" height="15" fill="rgb(205,95,48)" fg:x="106540" fg:w="56"/><text x="99.9356%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (56 samples, 0.05%)</title><rect x="99.6856%" y="981" width="0.0524%" height="15" fill="rgb(225,179,37)" fg:x="106540" fg:w="56"/><text x="99.9356%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (56 samples, 0.05%)</title><rect x="99.6856%" y="965" width="0.0524%" height="15" fill="rgb(230,209,3)" fg:x="106540" fg:w="56"/><text x="99.9356%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (56 samples, 0.05%)</title><rect x="99.6856%" y="949" width="0.0524%" height="15" fill="rgb(248,12,46)" fg:x="106540" fg:w="56"/><text x="99.9356%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (56 samples, 0.05%)</title><rect x="99.6856%" y="933" width="0.0524%" height="15" fill="rgb(234,18,0)" fg:x="106540" fg:w="56"/><text x="99.9356%" y="943.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (56 samples, 0.05%)</title><rect x="99.6856%" y="917" width="0.0524%" height="15" fill="rgb(238,197,14)" fg:x="106540" fg:w="56"/><text x="99.9356%" y="927.50"></text></g><g><title>tokio-runtime-w (58 samples, 0.05%)</title><rect x="99.6847%" y="1157" width="0.0543%" height="15" fill="rgb(251,162,48)" fg:x="106539" fg:w="58"/><text x="99.9347%" y="1167.50"></text></g><g><title>__GI___clone (57 samples, 0.05%)</title><rect x="99.6856%" y="1141" width="0.0533%" height="15" fill="rgb(237,73,42)" fg:x="106540" fg:w="57"/><text x="99.9356%" y="1151.50"></text></g><g><title>start_thread (57 samples, 0.05%)</title><rect x="99.6856%" y="1125" width="0.0533%" height="15" fill="rgb(211,108,8)" fg:x="106540" fg:w="57"/><text x="99.9356%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (57 samples, 0.05%)</title><rect x="99.6856%" y="1109" width="0.0533%" height="15" fill="rgb(213,45,22)" fg:x="106540" fg:w="57"/><text x="99.9356%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (57 samples, 0.05%)</title><rect x="99.6856%" y="1093" width="0.0533%" height="15" fill="rgb(252,154,5)" fg:x="106540" fg:w="57"/><text x="99.9356%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (57 samples, 0.05%)</title><rect x="99.6856%" y="1077" width="0.0533%" height="15" fill="rgb(221,79,52)" fg:x="106540" fg:w="57"/><text x="99.9356%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (57 samples, 0.05%)</title><rect x="99.6856%" y="1061" width="0.0533%" height="15" fill="rgb(229,220,36)" fg:x="106540" fg:w="57"/><text x="99.9356%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (57 samples, 0.05%)</title><rect x="99.6856%" y="1045" width="0.0533%" height="15" fill="rgb(211,17,16)" fg:x="106540" fg:w="57"/><text x="99.9356%" y="1055.50"></text></g><g><title>[unknown] (16 samples, 0.01%)</title><rect x="99.7418%" y="1141" width="0.0150%" height="15" fill="rgb(222,55,31)" fg:x="106600" fg:w="16"/><text x="99.9918%" y="1151.50"></text></g><g><title>__GI___clone (252 samples, 0.24%)</title><rect x="99.7567%" y="1141" width="0.2358%" height="15" fill="rgb(221,221,31)" fg:x="106616" fg:w="252"/><text x="100.0067%" y="1151.50"></text></g><g><title>start_thread (25 samples, 0.02%)</title><rect x="99.9691%" y="1125" width="0.0234%" height="15" fill="rgb(227,168,26)" fg:x="106843" fg:w="25"/><text x="100.2191%" y="1135.50"></text></g><g><title>all (106,876 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(224,139,9)" fg:x="0" fg:w="106876"/><text x="0.2500%" y="1183.50"></text></g><g><title>tremor-pdk-sing (279 samples, 0.26%)</title><rect x="99.7389%" y="1157" width="0.2611%" height="15" fill="rgb(254,172,0)" fg:x="106597" fg:w="279"/><text x="99.9889%" y="1167.50"></text></g></svg></svg>