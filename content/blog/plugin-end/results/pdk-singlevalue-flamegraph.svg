<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="109620"><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="0.0000%" y="1029" width="0.0109%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1039.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="0.0000%" y="1013" width="0.0109%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="0.0000%" y="997" width="0.0109%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="12"/><text x="0.2500%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="0.0000%" y="981" width="0.0109%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="12"/><text x="0.2500%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="0.0000%" y="965" width="0.0109%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="12"/><text x="0.2500%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.01%)</title><rect x="0.0000%" y="949" width="0.0109%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="12"/><text x="0.2500%" y="959.50"></text></g><g><title>async_global_executor::tokio03::RUNTIME::{{closure}}::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="0.0000%" y="933" width="0.0109%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="12"/><text x="0.2500%" y="943.50"></text></g><g><title>tokio::runtime::Runtime::block_on (12 samples, 0.01%)</title><rect x="0.0000%" y="917" width="0.0109%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="12"/><text x="0.2500%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (12 samples, 0.01%)</title><rect x="0.0000%" y="901" width="0.0109%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="12"/><text x="0.2500%" y="911.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (12 samples, 0.01%)</title><rect x="0.0000%" y="885" width="0.0109%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="12"/><text x="0.2500%" y="895.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (12 samples, 0.01%)</title><rect x="0.0000%" y="869" width="0.0109%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="12"/><text x="0.2500%" y="879.50"></text></g><g><title>tokio::park::thread::CachedParkThread::get_unpark (12 samples, 0.01%)</title><rect x="0.0000%" y="853" width="0.0109%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="12"/><text x="0.2500%" y="863.50"></text></g><g><title>tokio::park::thread::CachedParkThread::with_current (12 samples, 0.01%)</title><rect x="0.0000%" y="837" width="0.0109%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="12"/><text x="0.2500%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.01%)</title><rect x="0.0000%" y="821" width="0.0109%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="12"/><text x="0.2500%" y="831.50"></text></g><g><title>tokio::park::thread::CURRENT_PARKER::__getit (12 samples, 0.01%)</title><rect x="0.0000%" y="805" width="0.0109%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="12"/><text x="0.2500%" y="815.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="0.0000%" y="789" width="0.0109%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="12"/><text x="0.2500%" y="799.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (12 samples, 0.01%)</title><rect x="0.0000%" y="773" width="0.0109%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="12"/><text x="0.2500%" y="783.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (12 samples, 0.01%)</title><rect x="0.0000%" y="757" width="0.0109%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="12"/><text x="0.2500%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.01%)</title><rect x="0.0000%" y="741" width="0.0109%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="12"/><text x="0.2500%" y="751.50"></text></g><g><title>tokio::park::thread::CURRENT_PARKER::__init (12 samples, 0.01%)</title><rect x="0.0000%" y="725" width="0.0109%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="12"/><text x="0.2500%" y="735.50"></text></g><g><title>tokio::park::thread::ParkThread::new (12 samples, 0.01%)</title><rect x="0.0000%" y="709" width="0.0109%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="12"/><text x="0.2500%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="0.0000%" y="693" width="0.0109%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="12"/><text x="0.2500%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="0.0000%" y="677" width="0.0109%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="12"/><text x="0.2500%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="0.0000%" y="661" width="0.0109%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="12"/><text x="0.2500%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="0.0000%" y="645" width="0.0109%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="12"/><text x="0.2500%" y="655.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="0.0000%" y="629" width="0.0109%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="12"/><text x="0.2500%" y="639.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="0.0000%" y="613" width="0.0109%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="12"/><text x="0.2500%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="0.0000%" y="597" width="0.0109%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="12"/><text x="0.2500%" y="607.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="0.0000%" y="581" width="0.0109%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="12"/><text x="0.2500%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="0.0000%" y="565" width="0.0109%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="12"/><text x="0.2500%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="0.0000%" y="549" width="0.0109%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="12"/><text x="0.2500%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="0.0000%" y="533" width="0.0109%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="12"/><text x="0.2500%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="0.0009%" y="517" width="0.0100%" height="15" fill="rgb(213,181,19)" fg:x="1" fg:w="11"/><text x="0.2509%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="0.0009%" y="501" width="0.0100%" height="15" fill="rgb(254,191,54)" fg:x="1" fg:w="11"/><text x="0.2509%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="0.0009%" y="485" width="0.0100%" height="15" fill="rgb(241,83,37)" fg:x="1" fg:w="11"/><text x="0.2509%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="0.0009%" y="469" width="0.0100%" height="15" fill="rgb(233,36,39)" fg:x="1" fg:w="11"/><text x="0.2509%" y="479.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (11 samples, 0.01%)</title><rect x="0.0009%" y="453" width="0.0100%" height="15" fill="rgb(226,3,54)" fg:x="1" fg:w="11"/><text x="0.2509%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (11 samples, 0.01%)</title><rect x="0.0009%" y="437" width="0.0100%" height="15" fill="rgb(245,192,40)" fg:x="1" fg:w="11"/><text x="0.2509%" y="447.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="0.0009%" y="421" width="0.0100%" height="15" fill="rgb(238,167,29)" fg:x="1" fg:w="11"/><text x="0.2509%" y="431.50"></text></g><g><title>asm_exc_page_fault (11 samples, 0.01%)</title><rect x="0.0009%" y="405" width="0.0100%" height="15" fill="rgb(232,182,51)" fg:x="1" fg:w="11"/><text x="0.2509%" y="415.50"></text></g><g><title>exc_page_fault (11 samples, 0.01%)</title><rect x="0.0009%" y="389" width="0.0100%" height="15" fill="rgb(231,60,39)" fg:x="1" fg:w="11"/><text x="0.2509%" y="399.50"></text></g><g><title>do_user_addr_fault (11 samples, 0.01%)</title><rect x="0.0009%" y="373" width="0.0100%" height="15" fill="rgb(208,69,12)" fg:x="1" fg:w="11"/><text x="0.2509%" y="383.50"></text></g><g><title>async-global-ex (13 samples, 0.01%)</title><rect x="0.0000%" y="1157" width="0.0119%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="13"/><text x="0.2500%" y="1167.50"></text></g><g><title>__GI___clone (13 samples, 0.01%)</title><rect x="0.0000%" y="1141" width="0.0119%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="13"/><text x="0.2500%" y="1151.50"></text></g><g><title>start_thread (13 samples, 0.01%)</title><rect x="0.0000%" y="1125" width="0.0119%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="13"/><text x="0.2500%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (13 samples, 0.01%)</title><rect x="0.0000%" y="1109" width="0.0119%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="13"/><text x="0.2500%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="0.0000%" y="1093" width="0.0119%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="13"/><text x="0.2500%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="0.0000%" y="1077" width="0.0119%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="13"/><text x="0.2500%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (13 samples, 0.01%)</title><rect x="0.0000%" y="1061" width="0.0119%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="13"/><text x="0.2500%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (13 samples, 0.01%)</title><rect x="0.0000%" y="1045" width="0.0119%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="13"/><text x="0.2500%" y="1055.50"></text></g><g><title>finish_task_switch.isra.0 (29 samples, 0.03%)</title><rect x="0.0447%" y="661" width="0.0265%" height="15" fill="rgb(225,35,8)" fg:x="49" fg:w="29"/><text x="0.2947%" y="671.50"></text></g><g><title>__perf_event_task_sched_in (28 samples, 0.03%)</title><rect x="0.0456%" y="645" width="0.0255%" height="15" fill="rgb(250,213,24)" fg:x="50" fg:w="28"/><text x="0.2956%" y="655.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (28 samples, 0.03%)</title><rect x="0.0456%" y="629" width="0.0255%" height="15" fill="rgb(247,123,22)" fg:x="50" fg:w="28"/><text x="0.2956%" y="639.50"></text></g><g><title>native_write_msr (27 samples, 0.02%)</title><rect x="0.0465%" y="613" width="0.0246%" height="15" fill="rgb(231,138,38)" fg:x="51" fg:w="27"/><text x="0.2965%" y="623.50"></text></g><g><title>futex_wait_queue (37 samples, 0.03%)</title><rect x="0.0392%" y="709" width="0.0338%" height="15" fill="rgb(231,145,46)" fg:x="43" fg:w="37"/><text x="0.2892%" y="719.50"></text></g><g><title>schedule (32 samples, 0.03%)</title><rect x="0.0438%" y="693" width="0.0292%" height="15" fill="rgb(251,118,11)" fg:x="48" fg:w="32"/><text x="0.2938%" y="703.50"></text></g><g><title>__schedule (32 samples, 0.03%)</title><rect x="0.0438%" y="677" width="0.0292%" height="15" fill="rgb(217,147,25)" fg:x="48" fg:w="32"/><text x="0.2938%" y="687.50"></text></g><g><title>do_futex (38 samples, 0.03%)</title><rect x="0.0392%" y="741" width="0.0347%" height="15" fill="rgb(247,81,37)" fg:x="43" fg:w="38"/><text x="0.2892%" y="751.50"></text></g><g><title>futex_wait (38 samples, 0.03%)</title><rect x="0.0392%" y="725" width="0.0347%" height="15" fill="rgb(209,12,38)" fg:x="43" fg:w="38"/><text x="0.2892%" y="735.50"></text></g><g><title>__x64_sys_futex (40 samples, 0.04%)</title><rect x="0.0383%" y="757" width="0.0365%" height="15" fill="rgb(227,1,9)" fg:x="42" fg:w="40"/><text x="0.2883%" y="767.50"></text></g><g><title>std::panic::catch_unwind (71 samples, 0.06%)</title><rect x="0.0128%" y="1029" width="0.0648%" height="15" fill="rgb(248,47,43)" fg:x="14" fg:w="71"/><text x="0.2628%" y="1039.50"></text></g><g><title>std::panicking::try (71 samples, 0.06%)</title><rect x="0.0128%" y="1013" width="0.0648%" height="15" fill="rgb(221,10,30)" fg:x="14" fg:w="71"/><text x="0.2628%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (71 samples, 0.06%)</title><rect x="0.0128%" y="997" width="0.0648%" height="15" fill="rgb(210,229,1)" fg:x="14" fg:w="71"/><text x="0.2628%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (71 samples, 0.06%)</title><rect x="0.0128%" y="981" width="0.0648%" height="15" fill="rgb(222,148,37)" fg:x="14" fg:w="71"/><text x="0.2628%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (71 samples, 0.06%)</title><rect x="0.0128%" y="965" width="0.0648%" height="15" fill="rgb(234,67,33)" fg:x="14" fg:w="71"/><text x="0.2628%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (71 samples, 0.06%)</title><rect x="0.0128%" y="949" width="0.0648%" height="15" fill="rgb(247,98,35)" fg:x="14" fg:w="71"/><text x="0.2628%" y="959.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (71 samples, 0.06%)</title><rect x="0.0128%" y="933" width="0.0648%" height="15" fill="rgb(247,138,52)" fg:x="14" fg:w="71"/><text x="0.2628%" y="943.50"></text></g><g><title>async_io::driver::main_loop (71 samples, 0.06%)</title><rect x="0.0128%" y="917" width="0.0648%" height="15" fill="rgb(213,79,30)" fg:x="14" fg:w="71"/><text x="0.2628%" y="927.50"></text></g><g><title>parking::Parker::park_timeout (50 samples, 0.05%)</title><rect x="0.0319%" y="901" width="0.0456%" height="15" fill="rgb(246,177,23)" fg:x="35" fg:w="50"/><text x="0.2819%" y="911.50"></text></g><g><title>parking::Inner::park (50 samples, 0.05%)</title><rect x="0.0319%" y="885" width="0.0456%" height="15" fill="rgb(230,62,27)" fg:x="35" fg:w="50"/><text x="0.2819%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (49 samples, 0.04%)</title><rect x="0.0328%" y="869" width="0.0447%" height="15" fill="rgb(216,154,8)" fg:x="36" fg:w="49"/><text x="0.2828%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (49 samples, 0.04%)</title><rect x="0.0328%" y="853" width="0.0447%" height="15" fill="rgb(244,35,45)" fg:x="36" fg:w="49"/><text x="0.2828%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (49 samples, 0.04%)</title><rect x="0.0328%" y="837" width="0.0447%" height="15" fill="rgb(251,115,12)" fg:x="36" fg:w="49"/><text x="0.2828%" y="847.50"></text></g><g><title>___pthread_cond_timedwait (49 samples, 0.04%)</title><rect x="0.0328%" y="821" width="0.0447%" height="15" fill="rgb(240,54,50)" fg:x="36" fg:w="49"/><text x="0.2828%" y="831.50"></text></g><g><title>__futex_abstimed_wait_common (46 samples, 0.04%)</title><rect x="0.0356%" y="805" width="0.0420%" height="15" fill="rgb(233,84,52)" fg:x="39" fg:w="46"/><text x="0.2856%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (44 samples, 0.04%)</title><rect x="0.0374%" y="789" width="0.0401%" height="15" fill="rgb(207,117,47)" fg:x="41" fg:w="44"/><text x="0.2874%" y="799.50"></text></g><g><title>do_syscall_64 (44 samples, 0.04%)</title><rect x="0.0374%" y="773" width="0.0401%" height="15" fill="rgb(249,43,39)" fg:x="41" fg:w="44"/><text x="0.2874%" y="783.50"></text></g><g><title>__GI___clone (72 samples, 0.07%)</title><rect x="0.0128%" y="1141" width="0.0657%" height="15" fill="rgb(209,38,44)" fg:x="14" fg:w="72"/><text x="0.2628%" y="1151.50"></text></g><g><title>start_thread (72 samples, 0.07%)</title><rect x="0.0128%" y="1125" width="0.0657%" height="15" fill="rgb(236,212,23)" fg:x="14" fg:w="72"/><text x="0.2628%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (72 samples, 0.07%)</title><rect x="0.0128%" y="1109" width="0.0657%" height="15" fill="rgb(242,79,21)" fg:x="14" fg:w="72"/><text x="0.2628%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (72 samples, 0.07%)</title><rect x="0.0128%" y="1093" width="0.0657%" height="15" fill="rgb(211,96,35)" fg:x="14" fg:w="72"/><text x="0.2628%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (72 samples, 0.07%)</title><rect x="0.0128%" y="1077" width="0.0657%" height="15" fill="rgb(253,215,40)" fg:x="14" fg:w="72"/><text x="0.2628%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (72 samples, 0.07%)</title><rect x="0.0128%" y="1061" width="0.0657%" height="15" fill="rgb(211,81,21)" fg:x="14" fg:w="72"/><text x="0.2628%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (72 samples, 0.07%)</title><rect x="0.0128%" y="1045" width="0.0657%" height="15" fill="rgb(208,190,38)" fg:x="14" fg:w="72"/><text x="0.2628%" y="1055.50"></text></g><g><title>async-io (76 samples, 0.07%)</title><rect x="0.0119%" y="1157" width="0.0693%" height="15" fill="rgb(235,213,38)" fg:x="13" fg:w="76"/><text x="0.2619%" y="1167.50"></text></g><g><title>core::ops::function::FnMut::call_mut (11 samples, 0.01%)</title><rect x="0.0812%" y="853" width="0.0100%" height="15" fill="rgb(237,122,38)" fg:x="89" fg:w="11"/><text x="0.3312%" y="863.50"></text></g><g><title>signal_hook::iterator::SignalsInfo&lt;E&gt;::has_signals (11 samples, 0.01%)</title><rect x="0.0812%" y="837" width="0.0100%" height="15" fill="rgb(244,218,35)" fg:x="89" fg:w="11"/><text x="0.3312%" y="847.50"></text></g><g><title>&lt;std::os::unix::net::stream::UnixStream as std::io::Read&gt;::read (11 samples, 0.01%)</title><rect x="0.0812%" y="821" width="0.0100%" height="15" fill="rgb(240,68,47)" fg:x="89" fg:w="11"/><text x="0.3312%" y="831.50"></text></g><g><title>&lt;&amp;std::os::unix::net::stream::UnixStream as std::io::Read&gt;::read (11 samples, 0.01%)</title><rect x="0.0812%" y="805" width="0.0100%" height="15" fill="rgb(210,16,53)" fg:x="89" fg:w="11"/><text x="0.3312%" y="815.50"></text></g><g><title>std::sys::unix::net::Socket::read (11 samples, 0.01%)</title><rect x="0.0812%" y="789" width="0.0100%" height="15" fill="rgb(235,124,12)" fg:x="89" fg:w="11"/><text x="0.3312%" y="799.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (11 samples, 0.01%)</title><rect x="0.0812%" y="773" width="0.0100%" height="15" fill="rgb(224,169,11)" fg:x="89" fg:w="11"/><text x="0.3312%" y="783.50"></text></g><g><title>__libc_recv (11 samples, 0.01%)</title><rect x="0.0812%" y="757" width="0.0100%" height="15" fill="rgb(250,166,2)" fg:x="89" fg:w="11"/><text x="0.3312%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.01%)</title><rect x="0.0812%" y="741" width="0.0100%" height="15" fill="rgb(242,216,29)" fg:x="89" fg:w="11"/><text x="0.3312%" y="751.50"></text></g><g><title>do_syscall_64 (11 samples, 0.01%)</title><rect x="0.0812%" y="725" width="0.0100%" height="15" fill="rgb(230,116,27)" fg:x="89" fg:w="11"/><text x="0.3312%" y="735.50"></text></g><g><title>__x64_sys_recvfrom (11 samples, 0.01%)</title><rect x="0.0812%" y="709" width="0.0100%" height="15" fill="rgb(228,99,48)" fg:x="89" fg:w="11"/><text x="0.3312%" y="719.50"></text></g><g><title>__sys_recvfrom (11 samples, 0.01%)</title><rect x="0.0812%" y="693" width="0.0100%" height="15" fill="rgb(253,11,6)" fg:x="89" fg:w="11"/><text x="0.3312%" y="703.50"></text></g><g><title>unix_stream_recvmsg (11 samples, 0.01%)</title><rect x="0.0812%" y="677" width="0.0100%" height="15" fill="rgb(247,143,39)" fg:x="89" fg:w="11"/><text x="0.3312%" y="687.50"></text></g><g><title>unix_stream_read_generic (11 samples, 0.01%)</title><rect x="0.0812%" y="661" width="0.0100%" height="15" fill="rgb(236,97,10)" fg:x="89" fg:w="11"/><text x="0.3312%" y="671.50"></text></g><g><title>schedule_timeout (11 samples, 0.01%)</title><rect x="0.0812%" y="645" width="0.0100%" height="15" fill="rgb(233,208,19)" fg:x="89" fg:w="11"/><text x="0.3312%" y="655.50"></text></g><g><title>schedule (11 samples, 0.01%)</title><rect x="0.0812%" y="629" width="0.0100%" height="15" fill="rgb(216,164,2)" fg:x="89" fg:w="11"/><text x="0.3312%" y="639.50"></text></g><g><title>__schedule (11 samples, 0.01%)</title><rect x="0.0812%" y="613" width="0.0100%" height="15" fill="rgb(220,129,5)" fg:x="89" fg:w="11"/><text x="0.3312%" y="623.50"></text></g><g><title>__GI___clone (12 samples, 0.01%)</title><rect x="0.0812%" y="1141" width="0.0109%" height="15" fill="rgb(242,17,10)" fg:x="89" fg:w="12"/><text x="0.3312%" y="1151.50"></text></g><g><title>start_thread (12 samples, 0.01%)</title><rect x="0.0812%" y="1125" width="0.0109%" height="15" fill="rgb(242,107,0)" fg:x="89" fg:w="12"/><text x="0.3312%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 0.01%)</title><rect x="0.0812%" y="1109" width="0.0109%" height="15" fill="rgb(251,28,31)" fg:x="89" fg:w="12"/><text x="0.3312%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="0.0812%" y="1093" width="0.0109%" height="15" fill="rgb(233,223,10)" fg:x="89" fg:w="12"/><text x="0.3312%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="0.0812%" y="1077" width="0.0109%" height="15" fill="rgb(215,21,27)" fg:x="89" fg:w="12"/><text x="0.3312%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 0.01%)</title><rect x="0.0812%" y="1061" width="0.0109%" height="15" fill="rgb(232,23,21)" fg:x="89" fg:w="12"/><text x="0.3312%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (12 samples, 0.01%)</title><rect x="0.0812%" y="1045" width="0.0109%" height="15" fill="rgb(244,5,23)" fg:x="89" fg:w="12"/><text x="0.3312%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="0.0812%" y="1029" width="0.0109%" height="15" fill="rgb(226,81,46)" fg:x="89" fg:w="12"/><text x="0.3312%" y="1039.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="0.0812%" y="1013" width="0.0109%" height="15" fill="rgb(247,70,30)" fg:x="89" fg:w="12"/><text x="0.3312%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="0.0812%" y="997" width="0.0109%" height="15" fill="rgb(212,68,19)" fg:x="89" fg:w="12"/><text x="0.3312%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="0.0812%" y="981" width="0.0109%" height="15" fill="rgb(240,187,13)" fg:x="89" fg:w="12"/><text x="0.3312%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="0.0812%" y="965" width="0.0109%" height="15" fill="rgb(223,113,26)" fg:x="89" fg:w="12"/><text x="0.3312%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.01%)</title><rect x="0.0812%" y="949" width="0.0109%" height="15" fill="rgb(206,192,2)" fg:x="89" fg:w="12"/><text x="0.3312%" y="959.50"></text></g><g><title>async_process::Child::new::ZOMBIES::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="0.0812%" y="933" width="0.0109%" height="15" fill="rgb(241,108,4)" fg:x="89" fg:w="12"/><text x="0.3312%" y="943.50"></text></g><g><title>async_process::Child::new::wait_sigchld (12 samples, 0.01%)</title><rect x="0.0812%" y="917" width="0.0109%" height="15" fill="rgb(247,173,49)" fg:x="89" fg:w="12"/><text x="0.3312%" y="927.50"></text></g><g><title>&lt;signal_hook::iterator::Forever&lt;E&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="0.0812%" y="901" width="0.0109%" height="15" fill="rgb(224,114,35)" fg:x="89" fg:w="12"/><text x="0.3312%" y="911.50"></text></g><g><title>signal_hook::iterator::backend::SignalIterator&lt;SD,E&gt;::poll_signal (12 samples, 0.01%)</title><rect x="0.0812%" y="885" width="0.0109%" height="15" fill="rgb(245,159,27)" fg:x="89" fg:w="12"/><text x="0.3312%" y="895.50"></text></g><g><title>signal_hook::iterator::backend::SignalDelivery&lt;R,E&gt;::poll_pending (12 samples, 0.01%)</title><rect x="0.0812%" y="869" width="0.0109%" height="15" fill="rgb(245,172,44)" fg:x="89" fg:w="12"/><text x="0.3312%" y="879.50"></text></g><g><title>async-process (13 samples, 0.01%)</title><rect x="0.0812%" y="1157" width="0.0119%" height="15" fill="rgb(236,23,11)" fg:x="89" fg:w="13"/><text x="0.3312%" y="1167.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="0.4652%" y="1141" width="0.0119%" height="15" fill="rgb(205,117,38)" fg:x="510" fg:w="13"/><text x="0.7152%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="0.4771%" y="1141" width="0.0155%" height="15" fill="rgb(237,72,25)" fg:x="523" fg:w="17"/><text x="0.7271%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.08%)</title><rect x="0.4926%" y="1141" width="0.0775%" height="15" fill="rgb(244,70,9)" fg:x="540" fg:w="85"/><text x="0.7426%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (84 samples, 0.08%)</title><rect x="0.4935%" y="1125" width="0.0766%" height="15" fill="rgb(217,125,39)" fg:x="541" fg:w="84"/><text x="0.7435%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (39 samples, 0.04%)</title><rect x="0.6468%" y="1109" width="0.0356%" height="15" fill="rgb(235,36,10)" fg:x="709" fg:w="39"/><text x="0.8968%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (14 samples, 0.01%)</title><rect x="0.6824%" y="1077" width="0.0128%" height="15" fill="rgb(251,123,47)" fg:x="748" fg:w="14"/><text x="0.9324%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (14 samples, 0.01%)</title><rect x="0.6824%" y="1061" width="0.0128%" height="15" fill="rgb(221,13,13)" fg:x="748" fg:w="14"/><text x="0.9324%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (14 samples, 0.01%)</title><rect x="0.6824%" y="1045" width="0.0128%" height="15" fill="rgb(238,131,9)" fg:x="748" fg:w="14"/><text x="0.9324%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (14 samples, 0.01%)</title><rect x="0.6824%" y="1029" width="0.0128%" height="15" fill="rgb(211,50,8)" fg:x="748" fg:w="14"/><text x="0.9324%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="0.6824%" y="1013" width="0.0128%" height="15" fill="rgb(245,182,24)" fg:x="748" fg:w="14"/><text x="0.9324%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="0.6824%" y="997" width="0.0128%" height="15" fill="rgb(242,14,37)" fg:x="748" fg:w="14"/><text x="0.9324%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.01%)</title><rect x="0.6824%" y="981" width="0.0128%" height="15" fill="rgb(246,228,12)" fg:x="748" fg:w="14"/><text x="0.9324%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="0.6824%" y="965" width="0.0128%" height="15" fill="rgb(213,55,15)" fg:x="748" fg:w="14"/><text x="0.9324%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="0.6824%" y="949" width="0.0128%" height="15" fill="rgb(209,9,3)" fg:x="748" fg:w="14"/><text x="0.9324%" y="959.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="0.6824%" y="933" width="0.0128%" height="15" fill="rgb(230,59,30)" fg:x="748" fg:w="14"/><text x="0.9324%" y="943.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="0.6824%" y="917" width="0.0128%" height="15" fill="rgb(209,121,21)" fg:x="748" fg:w="14"/><text x="0.9324%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="0.6824%" y="901" width="0.0128%" height="15" fill="rgb(220,109,13)" fg:x="748" fg:w="14"/><text x="0.9324%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="0.6951%" y="1061" width="0.0109%" height="15" fill="rgb(232,18,1)" fg:x="762" fg:w="12"/><text x="0.9451%" y="1071.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (12 samples, 0.01%)</title><rect x="0.6951%" y="1045" width="0.0109%" height="15" fill="rgb(215,41,42)" fg:x="762" fg:w="12"/><text x="0.9451%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (15 samples, 0.01%)</title><rect x="0.7061%" y="1061" width="0.0137%" height="15" fill="rgb(224,123,36)" fg:x="774" fg:w="15"/><text x="0.9561%" y="1071.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (15 samples, 0.01%)</title><rect x="0.7061%" y="1045" width="0.0137%" height="15" fill="rgb(240,125,3)" fg:x="774" fg:w="15"/><text x="0.9561%" y="1055.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (182 samples, 0.17%)</title><rect x="0.5702%" y="1125" width="0.1660%" height="15" fill="rgb(205,98,50)" fg:x="625" fg:w="182"/><text x="0.8202%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (59 samples, 0.05%)</title><rect x="0.6824%" y="1109" width="0.0538%" height="15" fill="rgb(205,185,37)" fg:x="748" fg:w="59"/><text x="0.9324%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (59 samples, 0.05%)</title><rect x="0.6824%" y="1093" width="0.0538%" height="15" fill="rgb(238,207,15)" fg:x="748" fg:w="59"/><text x="0.9324%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (45 samples, 0.04%)</title><rect x="0.6951%" y="1077" width="0.0411%" height="15" fill="rgb(213,199,42)" fg:x="762" fg:w="45"/><text x="0.9451%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="0.7198%" y="1061" width="0.0164%" height="15" fill="rgb(235,201,11)" fg:x="789" fg:w="18"/><text x="0.9698%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="0.7198%" y="1045" width="0.0164%" height="15" fill="rgb(207,46,11)" fg:x="789" fg:w="18"/><text x="0.9698%" y="1055.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="0.7198%" y="1029" width="0.0164%" height="15" fill="rgb(241,35,35)" fg:x="789" fg:w="18"/><text x="0.9698%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (27 samples, 0.02%)</title><rect x="0.7380%" y="1109" width="0.0246%" height="15" fill="rgb(243,32,47)" fg:x="809" fg:w="27"/><text x="0.9880%" y="1119.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (27 samples, 0.02%)</title><rect x="0.7380%" y="1093" width="0.0246%" height="15" fill="rgb(247,202,23)" fg:x="809" fg:w="27"/><text x="0.9880%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (27 samples, 0.02%)</title><rect x="0.7380%" y="1077" width="0.0246%" height="15" fill="rgb(219,102,11)" fg:x="809" fg:w="27"/><text x="0.9880%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (27 samples, 0.02%)</title><rect x="0.7380%" y="1061" width="0.0246%" height="15" fill="rgb(243,110,44)" fg:x="809" fg:w="27"/><text x="0.9880%" y="1071.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (32 samples, 0.03%)</title><rect x="0.7362%" y="1125" width="0.0292%" height="15" fill="rgb(222,74,54)" fg:x="807" fg:w="32"/><text x="0.9862%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="0.7718%" y="1125" width="0.0228%" height="15" fill="rgb(216,99,12)" fg:x="846" fg:w="25"/><text x="1.0218%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (19 samples, 0.02%)</title><rect x="0.7772%" y="1109" width="0.0173%" height="15" fill="rgb(226,22,26)" fg:x="852" fg:w="19"/><text x="1.0272%" y="1119.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="0.7772%" y="1093" width="0.0173%" height="15" fill="rgb(217,163,10)" fg:x="852" fg:w="19"/><text x="1.0272%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (19 samples, 0.02%)</title><rect x="0.7772%" y="1077" width="0.0173%" height="15" fill="rgb(213,25,53)" fg:x="852" fg:w="19"/><text x="1.0272%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="0.7772%" y="1061" width="0.0173%" height="15" fill="rgb(252,105,26)" fg:x="852" fg:w="19"/><text x="1.0272%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="0.7772%" y="1045" width="0.0173%" height="15" fill="rgb(220,39,43)" fg:x="852" fg:w="19"/><text x="1.0272%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="0.7772%" y="1029" width="0.0173%" height="15" fill="rgb(229,68,48)" fg:x="852" fg:w="19"/><text x="1.0272%" y="1039.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="0.7772%" y="1013" width="0.0173%" height="15" fill="rgb(252,8,32)" fg:x="852" fg:w="19"/><text x="1.0272%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="0.7772%" y="997" width="0.0173%" height="15" fill="rgb(223,20,43)" fg:x="852" fg:w="19"/><text x="1.0272%" y="1007.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (104 samples, 0.09%)</title><rect x="0.7946%" y="1125" width="0.0949%" height="15" fill="rgb(229,81,49)" fg:x="871" fg:w="104"/><text x="1.0446%" y="1135.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (18 samples, 0.02%)</title><rect x="0.8730%" y="1109" width="0.0164%" height="15" fill="rgb(236,28,36)" fg:x="957" fg:w="18"/><text x="1.1230%" y="1119.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="0.8894%" y="1125" width="0.0119%" height="15" fill="rgb(249,185,26)" fg:x="975" fg:w="13"/><text x="1.1394%" y="1135.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (21 samples, 0.02%)</title><rect x="0.9661%" y="1109" width="0.0192%" height="15" fill="rgb(249,174,33)" fg:x="1059" fg:w="21"/><text x="1.2161%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (50 samples, 0.05%)</title><rect x="0.9852%" y="1109" width="0.0456%" height="15" fill="rgb(233,201,37)" fg:x="1080" fg:w="50"/><text x="1.2352%" y="1119.50"></text></g><g><title>core::mem::replace (50 samples, 0.05%)</title><rect x="0.9852%" y="1093" width="0.0456%" height="15" fill="rgb(221,78,26)" fg:x="1080" fg:w="50"/><text x="1.2352%" y="1103.50"></text></g><g><title>core::ptr::read (50 samples, 0.05%)</title><rect x="0.9852%" y="1077" width="0.0456%" height="15" fill="rgb(250,127,30)" fg:x="1080" fg:w="50"/><text x="1.2352%" y="1087.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (150 samples, 0.14%)</title><rect x="0.9013%" y="1125" width="0.1368%" height="15" fill="rgb(230,49,44)" fg:x="988" fg:w="150"/><text x="1.1513%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="1.4021%" y="1093" width="0.0201%" height="15" fill="rgb(229,67,23)" fg:x="1537" fg:w="22"/><text x="1.6521%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (22 samples, 0.02%)</title><rect x="1.4021%" y="1077" width="0.0201%" height="15" fill="rgb(249,83,47)" fg:x="1537" fg:w="22"/><text x="1.6521%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (66 samples, 0.06%)</title><rect x="1.3702%" y="1109" width="0.0602%" height="15" fill="rgb(215,43,3)" fg:x="1502" fg:w="66"/><text x="1.6202%" y="1119.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="1.4304%" y="1093" width="0.0201%" height="15" fill="rgb(238,154,13)" fg:x="1568" fg:w="22"/><text x="1.6804%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="1.4340%" y="1077" width="0.0164%" height="15" fill="rgb(219,56,2)" fg:x="1572" fg:w="18"/><text x="1.6840%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (18 samples, 0.02%)</title><rect x="1.4340%" y="1061" width="0.0164%" height="15" fill="rgb(233,0,4)" fg:x="1572" fg:w="18"/><text x="1.6840%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (18 samples, 0.02%)</title><rect x="1.4340%" y="1045" width="0.0164%" height="15" fill="rgb(235,30,7)" fg:x="1572" fg:w="18"/><text x="1.6840%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 0.02%)</title><rect x="1.4340%" y="1029" width="0.0164%" height="15" fill="rgb(250,79,13)" fg:x="1572" fg:w="18"/><text x="1.6840%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="1.4340%" y="1013" width="0.0164%" height="15" fill="rgb(211,146,34)" fg:x="1572" fg:w="18"/><text x="1.6840%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="1.4340%" y="997" width="0.0164%" height="15" fill="rgb(228,22,38)" fg:x="1572" fg:w="18"/><text x="1.6840%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="1.4340%" y="981" width="0.0164%" height="15" fill="rgb(235,168,5)" fg:x="1572" fg:w="18"/><text x="1.6840%" y="991.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (14 samples, 0.01%)</title><rect x="1.4377%" y="965" width="0.0128%" height="15" fill="rgb(221,155,16)" fg:x="1576" fg:w="14"/><text x="1.6877%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="1.4377%" y="949" width="0.0128%" height="15" fill="rgb(215,215,53)" fg:x="1576" fg:w="14"/><text x="1.6877%" y="959.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (34 samples, 0.03%)</title><rect x="1.4304%" y="1109" width="0.0310%" height="15" fill="rgb(223,4,10)" fg:x="1568" fg:w="34"/><text x="1.6804%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (12 samples, 0.01%)</title><rect x="1.4505%" y="1093" width="0.0109%" height="15" fill="rgb(234,103,6)" fg:x="1590" fg:w="12"/><text x="1.7005%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="1.4505%" y="1077" width="0.0109%" height="15" fill="rgb(227,97,0)" fg:x="1590" fg:w="12"/><text x="1.7005%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="1.4505%" y="1061" width="0.0109%" height="15" fill="rgb(234,150,53)" fg:x="1590" fg:w="12"/><text x="1.7005%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="1.4505%" y="1045" width="0.0109%" height="15" fill="rgb(228,201,54)" fg:x="1590" fg:w="12"/><text x="1.7005%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="1.4505%" y="1029" width="0.0109%" height="15" fill="rgb(222,22,37)" fg:x="1590" fg:w="12"/><text x="1.7005%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (19 samples, 0.02%)</title><rect x="1.4833%" y="1077" width="0.0173%" height="15" fill="rgb(237,53,32)" fg:x="1626" fg:w="19"/><text x="1.7333%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (19 samples, 0.02%)</title><rect x="1.4833%" y="1061" width="0.0173%" height="15" fill="rgb(233,25,53)" fg:x="1626" fg:w="19"/><text x="1.7333%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (19 samples, 0.02%)</title><rect x="1.4833%" y="1045" width="0.0173%" height="15" fill="rgb(210,40,34)" fg:x="1626" fg:w="19"/><text x="1.7333%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (21 samples, 0.02%)</title><rect x="1.4833%" y="1109" width="0.0192%" height="15" fill="rgb(241,220,44)" fg:x="1626" fg:w="21"/><text x="1.7333%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (21 samples, 0.02%)</title><rect x="1.4833%" y="1093" width="0.0192%" height="15" fill="rgb(235,28,35)" fg:x="1626" fg:w="21"/><text x="1.7333%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="1.5362%" y="1093" width="0.0155%" height="15" fill="rgb(210,56,17)" fg:x="1684" fg:w="17"/><text x="1.7862%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (63 samples, 0.06%)</title><rect x="1.5025%" y="1109" width="0.0575%" height="15" fill="rgb(224,130,29)" fg:x="1647" fg:w="63"/><text x="1.7525%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (11 samples, 0.01%)</title><rect x="1.5599%" y="1109" width="0.0100%" height="15" fill="rgb(235,212,8)" fg:x="1710" fg:w="11"/><text x="1.8099%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (18 samples, 0.02%)</title><rect x="1.5700%" y="1109" width="0.0164%" height="15" fill="rgb(223,33,50)" fg:x="1721" fg:w="18"/><text x="1.8200%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="1.6384%" y="1093" width="0.0100%" height="15" fill="rgb(219,149,13)" fg:x="1796" fg:w="11"/><text x="1.8884%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="1.6384%" y="1077" width="0.0100%" height="15" fill="rgb(250,156,29)" fg:x="1796" fg:w="11"/><text x="1.8884%" y="1087.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (11 samples, 0.01%)</title><rect x="1.6384%" y="1061" width="0.0100%" height="15" fill="rgb(216,193,19)" fg:x="1796" fg:w="11"/><text x="1.8884%" y="1071.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="1.6384%" y="1045" width="0.0100%" height="15" fill="rgb(216,135,14)" fg:x="1796" fg:w="11"/><text x="1.8884%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (681 samples, 0.62%)</title><rect x="1.0381%" y="1125" width="0.6212%" height="15" fill="rgb(241,47,5)" fg:x="1138" fg:w="681"/><text x="1.2881%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (80 samples, 0.07%)</title><rect x="1.5864%" y="1109" width="0.0730%" height="15" fill="rgb(233,42,35)" fg:x="1739" fg:w="80"/><text x="1.8364%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.01%)</title><rect x="1.7059%" y="1109" width="0.0146%" height="15" fill="rgb(231,13,6)" fg:x="1870" fg:w="16"/><text x="1.9559%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.01%)</title><rect x="1.7059%" y="1093" width="0.0146%" height="15" fill="rgb(207,181,40)" fg:x="1870" fg:w="16"/><text x="1.9559%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="1.7059%" y="1077" width="0.0146%" height="15" fill="rgb(254,173,49)" fg:x="1870" fg:w="16"/><text x="1.9559%" y="1087.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.01%)</title><rect x="1.7059%" y="1061" width="0.0146%" height="15" fill="rgb(221,1,38)" fg:x="1870" fg:w="16"/><text x="1.9559%" y="1071.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (16 samples, 0.01%)</title><rect x="1.7059%" y="1045" width="0.0146%" height="15" fill="rgb(206,124,46)" fg:x="1870" fg:w="16"/><text x="1.9559%" y="1055.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (94 samples, 0.09%)</title><rect x="1.6594%" y="1125" width="0.0858%" height="15" fill="rgb(249,21,11)" fg:x="1819" fg:w="94"/><text x="1.9094%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (27 samples, 0.02%)</title><rect x="1.7205%" y="1109" width="0.0246%" height="15" fill="rgb(222,201,40)" fg:x="1886" fg:w="27"/><text x="1.9705%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.02%)</title><rect x="1.7205%" y="1093" width="0.0246%" height="15" fill="rgb(235,61,29)" fg:x="1886" fg:w="27"/><text x="1.9705%" y="1103.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.02%)</title><rect x="1.7205%" y="1077" width="0.0246%" height="15" fill="rgb(219,207,3)" fg:x="1886" fg:w="27"/><text x="1.9705%" y="1087.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.02%)</title><rect x="1.7205%" y="1061" width="0.0246%" height="15" fill="rgb(222,56,46)" fg:x="1886" fg:w="27"/><text x="1.9705%" y="1071.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (30 samples, 0.03%)</title><rect x="1.7752%" y="1077" width="0.0274%" height="15" fill="rgb(239,76,54)" fg:x="1946" fg:w="30"/><text x="2.0252%" y="1087.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (42 samples, 0.04%)</title><rect x="1.7688%" y="1093" width="0.0383%" height="15" fill="rgb(231,124,27)" fg:x="1939" fg:w="42"/><text x="2.0188%" y="1103.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (65 samples, 0.06%)</title><rect x="1.7506%" y="1125" width="0.0593%" height="15" fill="rgb(249,195,6)" fg:x="1919" fg:w="65"/><text x="2.0006%" y="1135.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (50 samples, 0.05%)</title><rect x="1.7643%" y="1109" width="0.0456%" height="15" fill="rgb(237,174,47)" fg:x="1934" fg:w="50"/><text x="2.0143%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (23 samples, 0.02%)</title><rect x="1.8117%" y="1125" width="0.0210%" height="15" fill="rgb(206,201,31)" fg:x="1986" fg:w="23"/><text x="2.0617%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (107 samples, 0.10%)</title><rect x="1.8327%" y="1125" width="0.0976%" height="15" fill="rgb(231,57,52)" fg:x="2009" fg:w="107"/><text x="2.0827%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (63 samples, 0.06%)</title><rect x="1.8728%" y="1109" width="0.0575%" height="15" fill="rgb(248,177,22)" fg:x="2053" fg:w="63"/><text x="2.1228%" y="1119.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (50 samples, 0.05%)</title><rect x="1.8847%" y="1093" width="0.0456%" height="15" fill="rgb(215,211,37)" fg:x="2066" fg:w="50"/><text x="2.1347%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.02%)</title><rect x="1.9139%" y="1077" width="0.0164%" height="15" fill="rgb(241,128,51)" fg:x="2098" fg:w="18"/><text x="2.1639%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.01%)</title><rect x="1.9194%" y="1061" width="0.0109%" height="15" fill="rgb(227,165,31)" fg:x="2104" fg:w="12"/><text x="2.1694%" y="1071.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="1.9194%" y="1045" width="0.0109%" height="15" fill="rgb(228,167,24)" fg:x="2104" fg:w="12"/><text x="2.1694%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="1.9194%" y="1029" width="0.0109%" height="15" fill="rgb(228,143,12)" fg:x="2104" fg:w="12"/><text x="2.1694%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="1.9194%" y="1013" width="0.0109%" height="15" fill="rgb(249,149,8)" fg:x="2104" fg:w="12"/><text x="2.1694%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="1.9194%" y="997" width="0.0109%" height="15" fill="rgb(243,35,44)" fg:x="2104" fg:w="12"/><text x="2.1694%" y="1007.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="1.9194%" y="981" width="0.0109%" height="15" fill="rgb(246,89,9)" fg:x="2104" fg:w="12"/><text x="2.1694%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="1.9194%" y="965" width="0.0109%" height="15" fill="rgb(233,213,13)" fg:x="2104" fg:w="12"/><text x="2.1694%" y="975.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="1.9467%" y="1077" width="0.0128%" height="15" fill="rgb(233,141,41)" fg:x="2134" fg:w="14"/><text x="2.1967%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="1.9467%" y="1061" width="0.0128%" height="15" fill="rgb(239,167,4)" fg:x="2134" fg:w="14"/><text x="2.1967%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.01%)</title><rect x="1.9467%" y="1045" width="0.0128%" height="15" fill="rgb(209,217,16)" fg:x="2134" fg:w="14"/><text x="2.1967%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="1.9467%" y="1029" width="0.0128%" height="15" fill="rgb(219,88,35)" fg:x="2134" fg:w="14"/><text x="2.1967%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="1.9467%" y="1013" width="0.0128%" height="15" fill="rgb(220,193,23)" fg:x="2134" fg:w="14"/><text x="2.1967%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="1.9467%" y="997" width="0.0128%" height="15" fill="rgb(230,90,52)" fg:x="2134" fg:w="14"/><text x="2.1967%" y="1007.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="1.9467%" y="981" width="0.0128%" height="15" fill="rgb(252,106,19)" fg:x="2134" fg:w="14"/><text x="2.1967%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="1.9467%" y="965" width="0.0128%" height="15" fill="rgb(206,74,20)" fg:x="2134" fg:w="14"/><text x="2.1967%" y="975.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (42 samples, 0.04%)</title><rect x="1.9303%" y="1125" width="0.0383%" height="15" fill="rgb(230,138,44)" fg:x="2116" fg:w="42"/><text x="2.1803%" y="1135.50"></text></g><g><title>value_trait::Builder::object (24 samples, 0.02%)</title><rect x="1.9467%" y="1109" width="0.0219%" height="15" fill="rgb(235,182,43)" fg:x="2134" fg:w="24"/><text x="2.1967%" y="1119.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (24 samples, 0.02%)</title><rect x="1.9467%" y="1093" width="0.0219%" height="15" fill="rgb(242,16,51)" fg:x="2134" fg:w="24"/><text x="2.1967%" y="1103.50"></text></g><g><title>__entry_text_start (14 samples, 0.01%)</title><rect x="1.9814%" y="1109" width="0.0128%" height="15" fill="rgb(248,9,4)" fg:x="2172" fg:w="14"/><text x="2.2314%" y="1119.50"></text></g><g><title>__GI___lll_lock_wake (20 samples, 0.02%)</title><rect x="1.9768%" y="1125" width="0.0182%" height="15" fill="rgb(210,31,22)" fg:x="2167" fg:w="20"/><text x="2.2268%" y="1135.50"></text></g><g><title>___pthread_mutex_lock (58 samples, 0.05%)</title><rect x="2.0234%" y="1125" width="0.0529%" height="15" fill="rgb(239,54,39)" fg:x="2218" fg:w="58"/><text x="2.2734%" y="1135.50"></text></g><g><title>__clock_gettime_2 (50 samples, 0.05%)</title><rect x="2.0909%" y="1125" width="0.0456%" height="15" fill="rgb(230,99,41)" fg:x="2292" fg:w="50"/><text x="2.3409%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (42 samples, 0.04%)</title><rect x="2.1419%" y="1125" width="0.0383%" height="15" fill="rgb(253,106,12)" fg:x="2348" fg:w="42"/><text x="2.3919%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (49 samples, 0.04%)</title><rect x="2.1812%" y="1125" width="0.0447%" height="15" fill="rgb(213,46,41)" fg:x="2391" fg:w="49"/><text x="2.4312%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (45 samples, 0.04%)</title><rect x="2.2259%" y="1125" width="0.0411%" height="15" fill="rgb(215,133,35)" fg:x="2440" fg:w="45"/><text x="2.4759%" y="1135.50"></text></g><g><title>abi_stable::erased_types::iterator::next (12 samples, 0.01%)</title><rect x="2.2669%" y="1125" width="0.0109%" height="15" fill="rgb(213,28,5)" fg:x="2485" fg:w="12"/><text x="2.5169%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (23 samples, 0.02%)</title><rect x="2.3326%" y="1109" width="0.0210%" height="15" fill="rgb(215,77,49)" fg:x="2557" fg:w="23"/><text x="2.5826%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="2.3326%" y="1093" width="0.0210%" height="15" fill="rgb(248,100,22)" fg:x="2557" fg:w="23"/><text x="2.5826%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (23 samples, 0.02%)</title><rect x="2.3326%" y="1077" width="0.0210%" height="15" fill="rgb(208,67,9)" fg:x="2557" fg:w="23"/><text x="2.5826%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (80 samples, 0.07%)</title><rect x="2.2925%" y="1125" width="0.0730%" height="15" fill="rgb(219,133,21)" fg:x="2513" fg:w="80"/><text x="2.5425%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (81 samples, 0.07%)</title><rect x="2.3654%" y="1125" width="0.0739%" height="15" fill="rgb(246,46,29)" fg:x="2593" fg:w="81"/><text x="2.6154%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (18 samples, 0.02%)</title><rect x="2.4229%" y="1109" width="0.0164%" height="15" fill="rgb(246,185,52)" fg:x="2656" fg:w="18"/><text x="2.6729%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (18 samples, 0.02%)</title><rect x="2.4229%" y="1093" width="0.0164%" height="15" fill="rgb(252,136,11)" fg:x="2656" fg:w="18"/><text x="2.6729%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (18 samples, 0.02%)</title><rect x="2.4229%" y="1077" width="0.0164%" height="15" fill="rgb(219,138,53)" fg:x="2656" fg:w="18"/><text x="2.6729%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (18 samples, 0.02%)</title><rect x="2.4229%" y="1061" width="0.0164%" height="15" fill="rgb(211,51,23)" fg:x="2656" fg:w="18"/><text x="2.6729%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="2.4229%" y="1045" width="0.0164%" height="15" fill="rgb(247,221,28)" fg:x="2656" fg:w="18"/><text x="2.6729%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="2.4229%" y="1029" width="0.0164%" height="15" fill="rgb(251,222,45)" fg:x="2656" fg:w="18"/><text x="2.6729%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (18 samples, 0.02%)</title><rect x="2.4229%" y="1013" width="0.0164%" height="15" fill="rgb(217,162,53)" fg:x="2656" fg:w="18"/><text x="2.6729%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="2.4229%" y="997" width="0.0164%" height="15" fill="rgb(229,93,14)" fg:x="2656" fg:w="18"/><text x="2.6729%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="2.4229%" y="981" width="0.0164%" height="15" fill="rgb(209,67,49)" fg:x="2656" fg:w="18"/><text x="2.6729%" y="991.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="2.4229%" y="965" width="0.0164%" height="15" fill="rgb(213,87,29)" fg:x="2656" fg:w="18"/><text x="2.6729%" y="975.50"></text></g><g><title>__rg_alloc (18 samples, 0.02%)</title><rect x="2.4229%" y="949" width="0.0164%" height="15" fill="rgb(205,151,52)" fg:x="2656" fg:w="18"/><text x="2.6729%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (18 samples, 0.02%)</title><rect x="2.4229%" y="933" width="0.0164%" height="15" fill="rgb(253,215,39)" fg:x="2656" fg:w="18"/><text x="2.6729%" y="943.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (12 samples, 0.01%)</title><rect x="2.4594%" y="1061" width="0.0109%" height="15" fill="rgb(221,220,41)" fg:x="2696" fg:w="12"/><text x="2.7094%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="2.4594%" y="1045" width="0.0109%" height="15" fill="rgb(218,133,21)" fg:x="2696" fg:w="12"/><text x="2.7094%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="2.4594%" y="1029" width="0.0109%" height="15" fill="rgb(221,193,43)" fg:x="2696" fg:w="12"/><text x="2.7094%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="2.4594%" y="1013" width="0.0109%" height="15" fill="rgb(240,128,52)" fg:x="2696" fg:w="12"/><text x="2.7094%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="2.4594%" y="997" width="0.0109%" height="15" fill="rgb(253,114,12)" fg:x="2696" fg:w="12"/><text x="2.7094%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="2.4594%" y="981" width="0.0109%" height="15" fill="rgb(215,223,47)" fg:x="2696" fg:w="12"/><text x="2.7094%" y="991.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="2.4594%" y="965" width="0.0109%" height="15" fill="rgb(248,225,23)" fg:x="2696" fg:w="12"/><text x="2.7094%" y="975.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="2.4594%" y="949" width="0.0109%" height="15" fill="rgb(250,108,0)" fg:x="2696" fg:w="12"/><text x="2.7094%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="2.4594%" y="933" width="0.0109%" height="15" fill="rgb(228,208,7)" fg:x="2696" fg:w="12"/><text x="2.7094%" y="943.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (54 samples, 0.05%)</title><rect x="2.4393%" y="1125" width="0.0493%" height="15" fill="rgb(244,45,10)" fg:x="2674" fg:w="54"/><text x="2.6893%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (39 samples, 0.04%)</title><rect x="2.4530%" y="1109" width="0.0356%" height="15" fill="rgb(207,125,25)" fg:x="2689" fg:w="39"/><text x="2.7030%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (39 samples, 0.04%)</title><rect x="2.4530%" y="1093" width="0.0356%" height="15" fill="rgb(210,195,18)" fg:x="2689" fg:w="39"/><text x="2.7030%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (39 samples, 0.04%)</title><rect x="2.4530%" y="1077" width="0.0356%" height="15" fill="rgb(249,80,12)" fg:x="2689" fg:w="39"/><text x="2.7030%" y="1087.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (20 samples, 0.02%)</title><rect x="2.4704%" y="1061" width="0.0182%" height="15" fill="rgb(221,65,9)" fg:x="2708" fg:w="20"/><text x="2.7204%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20 samples, 0.02%)</title><rect x="2.4704%" y="1045" width="0.0182%" height="15" fill="rgb(235,49,36)" fg:x="2708" fg:w="20"/><text x="2.7204%" y="1055.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (20 samples, 0.02%)</title><rect x="2.4704%" y="1029" width="0.0182%" height="15" fill="rgb(225,32,20)" fg:x="2708" fg:w="20"/><text x="2.7204%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (20 samples, 0.02%)</title><rect x="2.4704%" y="1013" width="0.0182%" height="15" fill="rgb(215,141,46)" fg:x="2708" fg:w="20"/><text x="2.7204%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (64 samples, 0.06%)</title><rect x="2.4986%" y="1125" width="0.0584%" height="15" fill="rgb(250,160,47)" fg:x="2739" fg:w="64"/><text x="2.7486%" y="1135.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (56 samples, 0.05%)</title><rect x="2.5059%" y="1109" width="0.0511%" height="15" fill="rgb(216,222,40)" fg:x="2747" fg:w="56"/><text x="2.7559%" y="1119.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (56 samples, 0.05%)</title><rect x="2.5059%" y="1093" width="0.0511%" height="15" fill="rgb(234,217,39)" fg:x="2747" fg:w="56"/><text x="2.7559%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="2.5962%" y="917" width="0.0137%" height="15" fill="rgb(207,178,40)" fg:x="2846" fg:w="15"/><text x="2.8462%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="2.5962%" y="901" width="0.0137%" height="15" fill="rgb(221,136,13)" fg:x="2846" fg:w="15"/><text x="2.8462%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.01%)</title><rect x="2.5962%" y="885" width="0.0137%" height="15" fill="rgb(249,199,10)" fg:x="2846" fg:w="15"/><text x="2.8462%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="2.5962%" y="869" width="0.0137%" height="15" fill="rgb(249,222,13)" fg:x="2846" fg:w="15"/><text x="2.8462%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="2.5962%" y="853" width="0.0137%" height="15" fill="rgb(244,185,38)" fg:x="2846" fg:w="15"/><text x="2.8462%" y="863.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="2.5962%" y="837" width="0.0137%" height="15" fill="rgb(236,202,9)" fg:x="2846" fg:w="15"/><text x="2.8462%" y="847.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="2.5962%" y="821" width="0.0137%" height="15" fill="rgb(250,229,37)" fg:x="2846" fg:w="15"/><text x="2.8462%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="2.5962%" y="805" width="0.0137%" height="15" fill="rgb(206,174,23)" fg:x="2846" fg:w="15"/><text x="2.8462%" y="815.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="2.5962%" y="1029" width="0.0164%" height="15" fill="rgb(211,33,43)" fg:x="2846" fg:w="18"/><text x="2.8462%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (18 samples, 0.02%)</title><rect x="2.5962%" y="1013" width="0.0164%" height="15" fill="rgb(245,58,50)" fg:x="2846" fg:w="18"/><text x="2.8462%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (18 samples, 0.02%)</title><rect x="2.5962%" y="997" width="0.0164%" height="15" fill="rgb(244,68,36)" fg:x="2846" fg:w="18"/><text x="2.8462%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (18 samples, 0.02%)</title><rect x="2.5962%" y="981" width="0.0164%" height="15" fill="rgb(232,229,15)" fg:x="2846" fg:w="18"/><text x="2.8462%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.02%)</title><rect x="2.5962%" y="965" width="0.0164%" height="15" fill="rgb(254,30,23)" fg:x="2846" fg:w="18"/><text x="2.8462%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.02%)</title><rect x="2.5962%" y="949" width="0.0164%" height="15" fill="rgb(235,160,14)" fg:x="2846" fg:w="18"/><text x="2.8462%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.02%)</title><rect x="2.5962%" y="933" width="0.0164%" height="15" fill="rgb(212,155,44)" fg:x="2846" fg:w="18"/><text x="2.8462%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (64 samples, 0.06%)</title><rect x="2.5570%" y="1125" width="0.0584%" height="15" fill="rgb(226,2,50)" fg:x="2803" fg:w="64"/><text x="2.8070%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (21 samples, 0.02%)</title><rect x="2.5962%" y="1109" width="0.0192%" height="15" fill="rgb(234,177,6)" fg:x="2846" fg:w="21"/><text x="2.8462%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (21 samples, 0.02%)</title><rect x="2.5962%" y="1093" width="0.0192%" height="15" fill="rgb(217,24,9)" fg:x="2846" fg:w="21"/><text x="2.8462%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.02%)</title><rect x="2.5962%" y="1077" width="0.0192%" height="15" fill="rgb(220,13,46)" fg:x="2846" fg:w="21"/><text x="2.8462%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.02%)</title><rect x="2.5962%" y="1061" width="0.0192%" height="15" fill="rgb(239,221,27)" fg:x="2846" fg:w="21"/><text x="2.8462%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.02%)</title><rect x="2.5962%" y="1045" width="0.0192%" height="15" fill="rgb(222,198,25)" fg:x="2846" fg:w="21"/><text x="2.8462%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 0.08%)</title><rect x="2.6665%" y="1061" width="0.0794%" height="15" fill="rgb(211,99,13)" fg:x="2923" fg:w="87"/><text x="2.9165%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (87 samples, 0.08%)</title><rect x="2.6665%" y="1045" width="0.0794%" height="15" fill="rgb(232,111,31)" fg:x="2923" fg:w="87"/><text x="2.9165%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (87 samples, 0.08%)</title><rect x="2.6665%" y="1029" width="0.0794%" height="15" fill="rgb(245,82,37)" fg:x="2923" fg:w="87"/><text x="2.9165%" y="1039.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (87 samples, 0.08%)</title><rect x="2.6665%" y="1013" width="0.0794%" height="15" fill="rgb(227,149,46)" fg:x="2923" fg:w="87"/><text x="2.9165%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (95 samples, 0.09%)</title><rect x="2.6665%" y="1077" width="0.0867%" height="15" fill="rgb(218,36,50)" fg:x="2923" fg:w="95"/><text x="2.9165%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="2.7531%" y="1061" width="0.0365%" height="15" fill="rgb(226,80,48)" fg:x="3018" fg:w="40"/><text x="3.0031%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (40 samples, 0.04%)</title><rect x="2.7531%" y="1045" width="0.0365%" height="15" fill="rgb(238,224,15)" fg:x="3018" fg:w="40"/><text x="3.0031%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (40 samples, 0.04%)</title><rect x="2.7531%" y="1029" width="0.0365%" height="15" fill="rgb(241,136,10)" fg:x="3018" fg:w="40"/><text x="3.0031%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (40 samples, 0.04%)</title><rect x="2.7531%" y="1013" width="0.0365%" height="15" fill="rgb(208,32,45)" fg:x="3018" fg:w="40"/><text x="3.0031%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (40 samples, 0.04%)</title><rect x="2.7531%" y="997" width="0.0365%" height="15" fill="rgb(207,135,9)" fg:x="3018" fg:w="40"/><text x="3.0031%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (52 samples, 0.05%)</title><rect x="2.7531%" y="1077" width="0.0474%" height="15" fill="rgb(206,86,44)" fg:x="3018" fg:w="52"/><text x="3.0031%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (12 samples, 0.01%)</title><rect x="2.7896%" y="1061" width="0.0109%" height="15" fill="rgb(245,177,15)" fg:x="3058" fg:w="12"/><text x="3.0396%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="2.7896%" y="1045" width="0.0109%" height="15" fill="rgb(206,64,50)" fg:x="3058" fg:w="12"/><text x="3.0396%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="2.7896%" y="1029" width="0.0109%" height="15" fill="rgb(234,36,40)" fg:x="3058" fg:w="12"/><text x="3.0396%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="2.7896%" y="1013" width="0.0109%" height="15" fill="rgb(213,64,8)" fg:x="3058" fg:w="12"/><text x="3.0396%" y="1023.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="2.7896%" y="997" width="0.0109%" height="15" fill="rgb(210,75,36)" fg:x="3058" fg:w="12"/><text x="3.0396%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="2.7896%" y="981" width="0.0109%" height="15" fill="rgb(229,88,21)" fg:x="3058" fg:w="12"/><text x="3.0396%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (213 samples, 0.19%)</title><rect x="2.6154%" y="1125" width="0.1943%" height="15" fill="rgb(252,204,47)" fg:x="2867" fg:w="213"/><text x="2.8654%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (157 samples, 0.14%)</title><rect x="2.6665%" y="1109" width="0.1432%" height="15" fill="rgb(208,77,27)" fg:x="2923" fg:w="157"/><text x="2.9165%" y="1119.50"></text></g><g><title>core::mem::drop (157 samples, 0.14%)</title><rect x="2.6665%" y="1093" width="0.1432%" height="15" fill="rgb(221,76,26)" fg:x="2923" fg:w="157"/><text x="2.9165%" y="1103.50"></text></g><g><title>async_executor::Ticker::sleep (18 samples, 0.02%)</title><rect x="2.8225%" y="1125" width="0.0164%" height="15" fill="rgb(225,139,18)" fg:x="3094" fg:w="18"/><text x="3.0725%" y="1135.50"></text></g><g><title>async_executor::steal (69 samples, 0.06%)</title><rect x="2.8480%" y="1125" width="0.0629%" height="15" fill="rgb(230,137,11)" fg:x="3122" fg:w="69"/><text x="3.0980%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (55 samples, 0.05%)</title><rect x="2.9110%" y="1125" width="0.0502%" height="15" fill="rgb(212,28,1)" fg:x="3191" fg:w="55"/><text x="3.1610%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (23 samples, 0.02%)</title><rect x="2.9611%" y="1125" width="0.0210%" height="15" fill="rgb(248,164,17)" fg:x="3246" fg:w="23"/><text x="3.2111%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (110 samples, 0.10%)</title><rect x="3.0004%" y="1125" width="0.1003%" height="15" fill="rgb(222,171,42)" fg:x="3289" fg:w="110"/><text x="3.2504%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (92 samples, 0.08%)</title><rect x="3.1007%" y="1125" width="0.0839%" height="15" fill="rgb(243,84,45)" fg:x="3399" fg:w="92"/><text x="3.3507%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="3.1846%" y="1125" width="0.0164%" height="15" fill="rgb(252,49,23)" fg:x="3491" fg:w="18"/><text x="3.4346%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (36 samples, 0.03%)</title><rect x="3.2047%" y="1125" width="0.0328%" height="15" fill="rgb(215,19,7)" fg:x="3513" fg:w="36"/><text x="3.4547%" y="1135.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="3.2093%" y="1109" width="0.0283%" height="15" fill="rgb(238,81,41)" fg:x="3518" fg:w="31"/><text x="3.4593%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="3.2403%" y="1125" width="0.0137%" height="15" fill="rgb(210,199,37)" fg:x="3552" fg:w="15"/><text x="3.4903%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (15 samples, 0.01%)</title><rect x="3.2403%" y="1109" width="0.0137%" height="15" fill="rgb(244,192,49)" fg:x="3552" fg:w="15"/><text x="3.4903%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (33 samples, 0.03%)</title><rect x="3.2540%" y="1125" width="0.0301%" height="15" fill="rgb(226,211,11)" fg:x="3567" fg:w="33"/><text x="3.5040%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (42 samples, 0.04%)</title><rect x="3.2905%" y="1125" width="0.0383%" height="15" fill="rgb(236,162,54)" fg:x="3607" fg:w="42"/><text x="3.5405%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (28 samples, 0.03%)</title><rect x="3.3288%" y="1125" width="0.0255%" height="15" fill="rgb(220,229,9)" fg:x="3649" fg:w="28"/><text x="3.5788%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (11 samples, 0.01%)</title><rect x="3.3543%" y="1125" width="0.0100%" height="15" fill="rgb(250,87,22)" fg:x="3677" fg:w="11"/><text x="3.6043%" y="1135.50"></text></g><g><title>event_listener::Event::notify (135 samples, 0.12%)</title><rect x="3.3835%" y="1125" width="0.1232%" height="15" fill="rgb(239,43,17)" fg:x="3709" fg:w="135"/><text x="3.6335%" y="1135.50"></text></g><g><title>event_listener::full_fence (49 samples, 0.04%)</title><rect x="3.4620%" y="1109" width="0.0447%" height="15" fill="rgb(231,177,25)" fg:x="3795" fg:w="49"/><text x="3.7120%" y="1119.50"></text></g><g><title>event_listener::List::notify (12 samples, 0.01%)</title><rect x="3.5067%" y="1125" width="0.0109%" height="15" fill="rgb(219,179,1)" fg:x="3844" fg:w="12"/><text x="3.7567%" y="1135.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (32 samples, 0.03%)</title><rect x="3.5176%" y="1125" width="0.0292%" height="15" fill="rgb(238,219,53)" fg:x="3856" fg:w="32"/><text x="3.7676%" y="1135.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (32 samples, 0.03%)</title><rect x="3.5468%" y="1125" width="0.0292%" height="15" fill="rgb(232,167,36)" fg:x="3888" fg:w="32"/><text x="3.7968%" y="1135.50"></text></g><g><title>parking::Inner::park (30 samples, 0.03%)</title><rect x="3.5760%" y="1125" width="0.0274%" height="15" fill="rgb(244,19,51)" fg:x="3920" fg:w="30"/><text x="3.8260%" y="1135.50"></text></g><g><title>parking::Unparker::unpark (17 samples, 0.02%)</title><rect x="3.6034%" y="1125" width="0.0155%" height="15" fill="rgb(224,6,22)" fg:x="3950" fg:w="17"/><text x="3.8534%" y="1135.50"></text></g><g><title>rust_alloc (57 samples, 0.05%)</title><rect x="3.6207%" y="1125" width="0.0520%" height="15" fill="rgb(224,145,5)" fg:x="3969" fg:w="57"/><text x="3.8707%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (36 samples, 0.03%)</title><rect x="3.7074%" y="1125" width="0.0328%" height="15" fill="rgb(234,130,49)" fg:x="4064" fg:w="36"/><text x="3.9574%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (37 samples, 0.03%)</title><rect x="3.7420%" y="1125" width="0.0338%" height="15" fill="rgb(254,6,2)" fg:x="4102" fg:w="37"/><text x="3.9920%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.02%)</title><rect x="3.7758%" y="1125" width="0.0155%" height="15" fill="rgb(208,96,46)" fg:x="4139" fg:w="17"/><text x="4.0258%" y="1135.50"></text></g><g><title>tremor_common::time::nanotime (87 samples, 0.08%)</title><rect x="3.7913%" y="1125" width="0.0794%" height="15" fill="rgb(239,3,39)" fg:x="4156" fg:w="87"/><text x="4.0413%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (86 samples, 0.08%)</title><rect x="3.7922%" y="1109" width="0.0785%" height="15" fill="rgb(233,210,1)" fg:x="4157" fg:w="86"/><text x="4.0422%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (86 samples, 0.08%)</title><rect x="3.7922%" y="1093" width="0.0785%" height="15" fill="rgb(244,137,37)" fg:x="4157" fg:w="86"/><text x="4.0422%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (86 samples, 0.08%)</title><rect x="3.7922%" y="1077" width="0.0785%" height="15" fill="rgb(240,136,2)" fg:x="4157" fg:w="86"/><text x="4.0422%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (39 samples, 0.04%)</title><rect x="3.8752%" y="1125" width="0.0356%" height="15" fill="rgb(239,18,37)" fg:x="4248" fg:w="39"/><text x="4.1252%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="3.9573%" y="1109" width="0.0146%" height="15" fill="rgb(218,185,22)" fg:x="4338" fg:w="16"/><text x="4.2073%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="3.9719%" y="1109" width="0.0255%" height="15" fill="rgb(225,218,4)" fg:x="4354" fg:w="28"/><text x="4.2219%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (28 samples, 0.03%)</title><rect x="3.9719%" y="1093" width="0.0255%" height="15" fill="rgb(230,182,32)" fg:x="4354" fg:w="28"/><text x="4.2219%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="3.9847%" y="1077" width="0.0128%" height="15" fill="rgb(242,56,43)" fg:x="4368" fg:w="14"/><text x="4.2347%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="3.9847%" y="1061" width="0.0128%" height="15" fill="rgb(233,99,24)" fg:x="4368" fg:w="14"/><text x="4.2347%" y="1071.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="3.9847%" y="1045" width="0.0128%" height="15" fill="rgb(234,209,42)" fg:x="4368" fg:w="14"/><text x="4.2347%" y="1055.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="4.0102%" y="1093" width="0.0109%" height="15" fill="rgb(227,7,12)" fg:x="4396" fg:w="12"/><text x="4.2602%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (138 samples, 0.13%)</title><rect x="3.9108%" y="1125" width="0.1259%" height="15" fill="rgb(245,203,43)" fg:x="4287" fg:w="138"/><text x="4.1608%" y="1135.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (29 samples, 0.03%)</title><rect x="4.0102%" y="1109" width="0.0265%" height="15" fill="rgb(238,205,33)" fg:x="4396" fg:w="29"/><text x="4.2602%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (17 samples, 0.02%)</title><rect x="4.0212%" y="1093" width="0.0155%" height="15" fill="rgb(231,56,7)" fg:x="4408" fg:w="17"/><text x="4.2712%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="4.0212%" y="1077" width="0.0155%" height="15" fill="rgb(244,186,29)" fg:x="4408" fg:w="17"/><text x="4.2712%" y="1087.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="4.0212%" y="1061" width="0.0155%" height="15" fill="rgb(234,111,31)" fg:x="4408" fg:w="17"/><text x="4.2712%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (22 samples, 0.02%)</title><rect x="4.0367%" y="1125" width="0.0201%" height="15" fill="rgb(241,149,10)" fg:x="4425" fg:w="22"/><text x="4.2867%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (21 samples, 0.02%)</title><rect x="4.0567%" y="1125" width="0.0192%" height="15" fill="rgb(249,206,44)" fg:x="4447" fg:w="21"/><text x="4.3067%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="4.1516%" y="981" width="0.0155%" height="15" fill="rgb(251,153,30)" fg:x="4551" fg:w="17"/><text x="4.4016%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="4.1516%" y="965" width="0.0155%" height="15" fill="rgb(239,152,38)" fg:x="4551" fg:w="17"/><text x="4.4016%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="4.1516%" y="949" width="0.0155%" height="15" fill="rgb(249,139,47)" fg:x="4551" fg:w="17"/><text x="4.4016%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="4.1516%" y="933" width="0.0155%" height="15" fill="rgb(244,64,35)" fg:x="4551" fg:w="17"/><text x="4.4016%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="4.1516%" y="917" width="0.0155%" height="15" fill="rgb(216,46,15)" fg:x="4551" fg:w="17"/><text x="4.4016%" y="927.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="4.1516%" y="901" width="0.0155%" height="15" fill="rgb(250,74,19)" fg:x="4551" fg:w="17"/><text x="4.4016%" y="911.50"></text></g><g><title>__rg_alloc (17 samples, 0.02%)</title><rect x="4.1516%" y="885" width="0.0155%" height="15" fill="rgb(249,42,33)" fg:x="4551" fg:w="17"/><text x="4.4016%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.02%)</title><rect x="4.1516%" y="869" width="0.0155%" height="15" fill="rgb(242,149,17)" fg:x="4551" fg:w="17"/><text x="4.4016%" y="879.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (38 samples, 0.03%)</title><rect x="4.1425%" y="1109" width="0.0347%" height="15" fill="rgb(244,29,21)" fg:x="4541" fg:w="38"/><text x="4.3925%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="4.1516%" y="1093" width="0.0255%" height="15" fill="rgb(220,130,37)" fg:x="4551" fg:w="28"/><text x="4.4016%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (28 samples, 0.03%)</title><rect x="4.1516%" y="1077" width="0.0255%" height="15" fill="rgb(211,67,2)" fg:x="4551" fg:w="28"/><text x="4.4016%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (28 samples, 0.03%)</title><rect x="4.1516%" y="1061" width="0.0255%" height="15" fill="rgb(235,68,52)" fg:x="4551" fg:w="28"/><text x="4.4016%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (28 samples, 0.03%)</title><rect x="4.1516%" y="1045" width="0.0255%" height="15" fill="rgb(246,142,3)" fg:x="4551" fg:w="28"/><text x="4.4016%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.03%)</title><rect x="4.1516%" y="1029" width="0.0255%" height="15" fill="rgb(241,25,7)" fg:x="4551" fg:w="28"/><text x="4.4016%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.03%)</title><rect x="4.1516%" y="1013" width="0.0255%" height="15" fill="rgb(242,119,39)" fg:x="4551" fg:w="28"/><text x="4.4016%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.03%)</title><rect x="4.1516%" y="997" width="0.0255%" height="15" fill="rgb(241,98,45)" fg:x="4551" fg:w="28"/><text x="4.4016%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (11 samples, 0.01%)</title><rect x="4.1671%" y="981" width="0.0100%" height="15" fill="rgb(254,28,30)" fg:x="4568" fg:w="11"/><text x="4.4171%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="4.1671%" y="965" width="0.0100%" height="15" fill="rgb(241,142,54)" fg:x="4568" fg:w="11"/><text x="4.4171%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (151 samples, 0.14%)</title><rect x="4.0759%" y="1125" width="0.1377%" height="15" fill="rgb(222,85,15)" fg:x="4468" fg:w="151"/><text x="4.3259%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (22 samples, 0.02%)</title><rect x="4.1936%" y="1109" width="0.0201%" height="15" fill="rgb(210,85,47)" fg:x="4597" fg:w="22"/><text x="4.4436%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (14 samples, 0.01%)</title><rect x="4.2009%" y="1093" width="0.0128%" height="15" fill="rgb(224,206,25)" fg:x="4605" fg:w="14"/><text x="4.4509%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="4.2009%" y="1077" width="0.0128%" height="15" fill="rgb(243,201,19)" fg:x="4605" fg:w="14"/><text x="4.4509%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (38 samples, 0.03%)</title><rect x="4.2136%" y="1125" width="0.0347%" height="15" fill="rgb(236,59,4)" fg:x="4619" fg:w="38"/><text x="4.4636%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (98 samples, 0.09%)</title><rect x="4.2565%" y="1125" width="0.0894%" height="15" fill="rgb(254,179,45)" fg:x="4666" fg:w="98"/><text x="4.5065%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.04%)</title><rect x="4.3040%" y="1109" width="0.0420%" height="15" fill="rgb(226,14,10)" fg:x="4718" fg:w="46"/><text x="4.5540%" y="1119.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (46 samples, 0.04%)</title><rect x="4.3040%" y="1093" width="0.0420%" height="15" fill="rgb(244,27,41)" fg:x="4718" fg:w="46"/><text x="4.5540%" y="1103.50"></text></g><g><title>[anon] (4,173 samples, 3.81%)</title><rect x="0.5702%" y="1141" width="3.8068%" height="15" fill="rgb(235,35,32)" fg:x="625" fg:w="4173"/><text x="0.8202%" y="1151.50">[ano..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (24 samples, 0.02%)</title><rect x="4.3550%" y="1125" width="0.0219%" height="15" fill="rgb(218,68,31)" fg:x="4774" fg:w="24"/><text x="4.6050%" y="1135.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (11 samples, 0.01%)</title><rect x="4.3669%" y="1109" width="0.0100%" height="15" fill="rgb(207,120,37)" fg:x="4787" fg:w="11"/><text x="4.6169%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="4.3833%" y="1125" width="0.0319%" height="15" fill="rgb(227,98,0)" fg:x="4805" fg:w="35"/><text x="4.6333%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.01%)</title><rect x="4.4016%" y="1109" width="0.0137%" height="15" fill="rgb(207,7,3)" fg:x="4825" fg:w="15"/><text x="4.6516%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (15 samples, 0.01%)</title><rect x="4.4016%" y="1093" width="0.0137%" height="15" fill="rgb(206,98,19)" fg:x="4825" fg:w="15"/><text x="4.6516%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="4.4180%" y="1125" width="0.0210%" height="15" fill="rgb(217,5,26)" fg:x="4843" fg:w="23"/><text x="4.6680%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.07%)</title><rect x="4.4490%" y="1125" width="0.0675%" height="15" fill="rgb(235,190,38)" fg:x="4877" fg:w="74"/><text x="4.6990%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (46 samples, 0.04%)</title><rect x="4.5165%" y="1125" width="0.0420%" height="15" fill="rgb(247,86,24)" fg:x="4951" fg:w="46"/><text x="4.7665%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (17 samples, 0.02%)</title><rect x="4.5430%" y="1109" width="0.0155%" height="15" fill="rgb(205,101,16)" fg:x="4980" fg:w="17"/><text x="4.7930%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (29 samples, 0.03%)</title><rect x="4.5585%" y="1125" width="0.0265%" height="15" fill="rgb(246,168,33)" fg:x="4997" fg:w="29"/><text x="4.8085%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.01%)</title><rect x="4.5703%" y="1109" width="0.0146%" height="15" fill="rgb(231,114,1)" fg:x="5010" fg:w="16"/><text x="4.8203%" y="1119.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (79 samples, 0.07%)</title><rect x="4.6023%" y="1125" width="0.0721%" height="15" fill="rgb(207,184,53)" fg:x="5045" fg:w="79"/><text x="4.8523%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (79 samples, 0.07%)</title><rect x="4.6023%" y="1109" width="0.0721%" height="15" fill="rgb(224,95,51)" fg:x="5045" fg:w="79"/><text x="4.8523%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (79 samples, 0.07%)</title><rect x="4.6023%" y="1093" width="0.0721%" height="15" fill="rgb(212,188,45)" fg:x="5045" fg:w="79"/><text x="4.8523%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (79 samples, 0.07%)</title><rect x="4.6023%" y="1077" width="0.0721%" height="15" fill="rgb(223,154,38)" fg:x="5045" fg:w="79"/><text x="4.8523%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (49 samples, 0.04%)</title><rect x="4.7081%" y="1109" width="0.0447%" height="15" fill="rgb(251,22,52)" fg:x="5161" fg:w="49"/><text x="4.9581%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (49 samples, 0.04%)</title><rect x="4.7081%" y="1093" width="0.0447%" height="15" fill="rgb(229,209,22)" fg:x="5161" fg:w="49"/><text x="4.9581%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (49 samples, 0.04%)</title><rect x="4.7081%" y="1077" width="0.0447%" height="15" fill="rgb(234,138,34)" fg:x="5161" fg:w="49"/><text x="4.9581%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (38 samples, 0.03%)</title><rect x="4.7528%" y="1109" width="0.0347%" height="15" fill="rgb(212,95,11)" fg:x="5210" fg:w="38"/><text x="5.0028%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (38 samples, 0.03%)</title><rect x="4.7528%" y="1093" width="0.0347%" height="15" fill="rgb(240,179,47)" fg:x="5210" fg:w="38"/><text x="5.0028%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.03%)</title><rect x="4.7528%" y="1077" width="0.0347%" height="15" fill="rgb(240,163,11)" fg:x="5210" fg:w="38"/><text x="5.0028%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.03%)</title><rect x="4.7528%" y="1061" width="0.0347%" height="15" fill="rgb(236,37,12)" fg:x="5210" fg:w="38"/><text x="5.0028%" y="1071.50"></text></g><g><title>__rg_dealloc (38 samples, 0.03%)</title><rect x="4.7528%" y="1045" width="0.0347%" height="15" fill="rgb(232,164,16)" fg:x="5210" fg:w="38"/><text x="5.0028%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (38 samples, 0.03%)</title><rect x="4.7528%" y="1029" width="0.0347%" height="15" fill="rgb(244,205,15)" fg:x="5210" fg:w="38"/><text x="5.0028%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (104 samples, 0.09%)</title><rect x="4.6980%" y="1125" width="0.0949%" height="15" fill="rgb(223,117,47)" fg:x="5150" fg:w="104"/><text x="4.9480%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (27 samples, 0.02%)</title><rect x="4.8048%" y="1125" width="0.0246%" height="15" fill="rgb(244,107,35)" fg:x="5267" fg:w="27"/><text x="5.0548%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="4.8321%" y="1125" width="0.0100%" height="15" fill="rgb(205,140,8)" fg:x="5297" fg:w="11"/><text x="5.0821%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (11 samples, 0.01%)</title><rect x="4.8321%" y="1109" width="0.0100%" height="15" fill="rgb(228,84,46)" fg:x="5297" fg:w="11"/><text x="5.0821%" y="1119.50"></text></g><g><title>event_listener::Event::notify (38 samples, 0.03%)</title><rect x="4.8431%" y="1125" width="0.0347%" height="15" fill="rgb(254,188,9)" fg:x="5309" fg:w="38"/><text x="5.0931%" y="1135.50"></text></g><g><title>event_listener::full_fence (29 samples, 0.03%)</title><rect x="4.8513%" y="1109" width="0.0265%" height="15" fill="rgb(206,112,54)" fg:x="5318" fg:w="29"/><text x="5.1013%" y="1119.50"></text></g><g><title>rust_alloc (32 samples, 0.03%)</title><rect x="4.8778%" y="1125" width="0.0292%" height="15" fill="rgb(216,84,49)" fg:x="5347" fg:w="32"/><text x="5.1278%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (14 samples, 0.01%)</title><rect x="4.9115%" y="1125" width="0.0128%" height="15" fill="rgb(214,194,35)" fg:x="5384" fg:w="14"/><text x="5.1615%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (14 samples, 0.01%)</title><rect x="4.9115%" y="1109" width="0.0128%" height="15" fill="rgb(249,28,3)" fg:x="5384" fg:w="14"/><text x="5.1615%" y="1119.50"></text></g><g><title>[tremor-pdk-singlevalue] (600 samples, 0.55%)</title><rect x="4.3833%" y="1141" width="0.5473%" height="15" fill="rgb(222,56,52)" fg:x="4805" fg:w="600"/><text x="4.6333%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="4.9307%" y="1125" width="0.0255%" height="15" fill="rgb(245,217,50)" fg:x="5405" fg:w="28"/><text x="5.1807%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (20 samples, 0.02%)</title><rect x="4.9562%" y="1125" width="0.0182%" height="15" fill="rgb(213,201,24)" fg:x="5433" fg:w="20"/><text x="5.2062%" y="1135.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (103 samples, 0.09%)</title><rect x="4.9763%" y="1125" width="0.0940%" height="15" fill="rgb(248,116,28)" fg:x="5455" fg:w="103"/><text x="5.2263%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (13 samples, 0.01%)</title><rect x="5.1615%" y="1109" width="0.0119%" height="15" fill="rgb(219,72,43)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="5.1615%" y="1093" width="0.0119%" height="15" fill="rgb(209,138,14)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="5.1615%" y="1077" width="0.0119%" height="15" fill="rgb(222,18,33)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="1087.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="5.1615%" y="1061" width="0.0119%" height="15" fill="rgb(213,199,7)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="1071.50"></text></g><g><title>async_task::runnable::Runnable::run (13 samples, 0.01%)</title><rect x="5.1615%" y="1045" width="0.0119%" height="15" fill="rgb(250,110,10)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (13 samples, 0.01%)</title><rect x="5.1615%" y="1029" width="0.0119%" height="15" fill="rgb(248,123,6)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="1039.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="5.1615%" y="1013" width="0.0119%" height="15" fill="rgb(206,91,31)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="5.1615%" y="997" width="0.0119%" height="15" fill="rgb(211,154,13)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="1007.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (13 samples, 0.01%)</title><rect x="5.1615%" y="981" width="0.0119%" height="15" fill="rgb(225,148,7)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="991.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="5.1615%" y="965" width="0.0119%" height="15" fill="rgb(220,160,43)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (13 samples, 0.01%)</title><rect x="5.1615%" y="949" width="0.0119%" height="15" fill="rgb(213,52,39)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.01%)</title><rect x="5.1615%" y="933" width="0.0119%" height="15" fill="rgb(243,137,7)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.01%)</title><rect x="5.1615%" y="917" width="0.0119%" height="15" fill="rgb(230,79,13)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (13 samples, 0.01%)</title><rect x="5.1615%" y="901" width="0.0119%" height="15" fill="rgb(247,105,23)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="911.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (13 samples, 0.01%)</title><rect x="5.1615%" y="885" width="0.0119%" height="15" fill="rgb(223,179,41)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="5.1615%" y="869" width="0.0119%" height="15" fill="rgb(218,9,34)" fg:x="5658" fg:w="13"/><text x="5.4115%" y="879.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (12 samples, 0.01%)</title><rect x="5.1624%" y="853" width="0.0109%" height="15" fill="rgb(222,106,8)" fg:x="5659" fg:w="12"/><text x="5.4124%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="5.1624%" y="837" width="0.0109%" height="15" fill="rgb(211,220,0)" fg:x="5659" fg:w="12"/><text x="5.4124%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt; (11 samples, 0.01%)</title><rect x="5.1633%" y="821" width="0.0100%" height="15" fill="rgb(229,52,16)" fg:x="5660" fg:w="11"/><text x="5.4133%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (203 samples, 0.19%)</title><rect x="5.3202%" y="485" width="0.1852%" height="15" fill="rgb(212,155,18)" fg:x="5832" fg:w="203"/><text x="5.5702%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (203 samples, 0.19%)</title><rect x="5.3202%" y="469" width="0.1852%" height="15" fill="rgb(242,21,14)" fg:x="5832" fg:w="203"/><text x="5.5702%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (195 samples, 0.18%)</title><rect x="5.3275%" y="453" width="0.1779%" height="15" fill="rgb(222,19,48)" fg:x="5840" fg:w="195"/><text x="5.5775%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (180 samples, 0.16%)</title><rect x="5.3412%" y="437" width="0.1642%" height="15" fill="rgb(232,45,27)" fg:x="5855" fg:w="180"/><text x="5.5912%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (180 samples, 0.16%)</title><rect x="5.3412%" y="421" width="0.1642%" height="15" fill="rgb(249,103,42)" fg:x="5855" fg:w="180"/><text x="5.5912%" y="431.50"></text></g><g><title>alloc::alloc::exchange_malloc (212 samples, 0.19%)</title><rect x="5.3138%" y="597" width="0.1934%" height="15" fill="rgb(246,81,33)" fg:x="5825" fg:w="212"/><text x="5.5638%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (212 samples, 0.19%)</title><rect x="5.3138%" y="581" width="0.1934%" height="15" fill="rgb(252,33,42)" fg:x="5825" fg:w="212"/><text x="5.5638%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (212 samples, 0.19%)</title><rect x="5.3138%" y="565" width="0.1934%" height="15" fill="rgb(209,212,41)" fg:x="5825" fg:w="212"/><text x="5.5638%" y="575.50"></text></g><g><title>alloc::alloc::alloc (210 samples, 0.19%)</title><rect x="5.3156%" y="549" width="0.1916%" height="15" fill="rgb(207,154,6)" fg:x="5827" fg:w="210"/><text x="5.5656%" y="559.50"></text></g><g><title>__rg_alloc (210 samples, 0.19%)</title><rect x="5.3156%" y="533" width="0.1916%" height="15" fill="rgb(223,64,47)" fg:x="5827" fg:w="210"/><text x="5.5656%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (210 samples, 0.19%)</title><rect x="5.3156%" y="517" width="0.1916%" height="15" fill="rgb(211,161,38)" fg:x="5827" fg:w="210"/><text x="5.5656%" y="527.50"></text></g><g><title>rust_alloc (210 samples, 0.19%)</title><rect x="5.3156%" y="501" width="0.1916%" height="15" fill="rgb(219,138,40)" fg:x="5827" fg:w="210"/><text x="5.5656%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (40 samples, 0.04%)</title><rect x="5.5920%" y="533" width="0.0365%" height="15" fill="rgb(241,228,46)" fg:x="6130" fg:w="40"/><text x="5.8420%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::ge (40 samples, 0.04%)</title><rect x="5.5920%" y="517" width="0.0365%" height="15" fill="rgb(223,209,38)" fg:x="6130" fg:w="40"/><text x="5.8420%" y="527.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (40 samples, 0.04%)</title><rect x="5.5920%" y="501" width="0.0365%" height="15" fill="rgb(236,164,45)" fg:x="6130" fg:w="40"/><text x="5.8420%" y="511.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (40 samples, 0.04%)</title><rect x="5.5920%" y="485" width="0.0365%" height="15" fill="rgb(231,15,5)" fg:x="6130" fg:w="40"/><text x="5.8420%" y="495.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (40 samples, 0.04%)</title><rect x="5.5920%" y="469" width="0.0365%" height="15" fill="rgb(252,35,15)" fg:x="6130" fg:w="40"/><text x="5.8420%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (27 samples, 0.02%)</title><rect x="5.6039%" y="453" width="0.0246%" height="15" fill="rgb(248,181,18)" fg:x="6143" fg:w="27"/><text x="5.8539%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (103 samples, 0.09%)</title><rect x="5.5546%" y="565" width="0.0940%" height="15" fill="rgb(233,39,42)" fg:x="6089" fg:w="103"/><text x="5.8046%" y="575.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (103 samples, 0.09%)</title><rect x="5.5546%" y="549" width="0.0940%" height="15" fill="rgb(238,110,33)" fg:x="6089" fg:w="103"/><text x="5.8046%" y="559.50"></text></g><g><title>core::time::Duration::new (22 samples, 0.02%)</title><rect x="5.6285%" y="533" width="0.0201%" height="15" fill="rgb(233,195,10)" fg:x="6170" fg:w="22"/><text x="5.8785%" y="543.50"></text></g><g><title>std::time::SystemTime::duration_since (110 samples, 0.10%)</title><rect x="5.5546%" y="581" width="0.1003%" height="15" fill="rgb(254,105,3)" fg:x="6089" fg:w="110"/><text x="5.8046%" y="591.50"></text></g><g><title>__vdso_clock_gettime (367 samples, 0.33%)</title><rect x="5.7398%" y="517" width="0.3348%" height="15" fill="rgb(221,225,9)" fg:x="6292" fg:w="367"/><text x="5.9898%" y="527.50"></text></g><g><title>[[vdso]] (255 samples, 0.23%)</title><rect x="5.8420%" y="501" width="0.2326%" height="15" fill="rgb(224,227,45)" fg:x="6404" fg:w="255"/><text x="6.0920%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (989 samples, 0.90%)</title><rect x="5.1733%" y="981" width="0.9022%" height="15" fill="rgb(229,198,43)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (989 samples, 0.90%)</title><rect x="5.1733%" y="965" width="0.9022%" height="15" fill="rgb(206,209,35)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="975.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (989 samples, 0.90%)</title><rect x="5.1733%" y="949" width="0.9022%" height="15" fill="rgb(245,195,53)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="959.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (989 samples, 0.90%)</title><rect x="5.1733%" y="933" width="0.9022%" height="15" fill="rgb(240,92,26)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (989 samples, 0.90%)</title><rect x="5.1733%" y="917" width="0.9022%" height="15" fill="rgb(207,40,23)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="927.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (989 samples, 0.90%)</title><rect x="5.1733%" y="901" width="0.9022%" height="15" fill="rgb(223,111,35)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (989 samples, 0.90%)</title><rect x="5.1733%" y="885" width="0.9022%" height="15" fill="rgb(229,147,28)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="895.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (989 samples, 0.90%)</title><rect x="5.1733%" y="869" width="0.9022%" height="15" fill="rgb(211,29,28)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="879.50"></text></g><g><title>std::panic::catch_unwind (989 samples, 0.90%)</title><rect x="5.1733%" y="853" width="0.9022%" height="15" fill="rgb(228,72,33)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="863.50"></text></g><g><title>std::panicking::try (989 samples, 0.90%)</title><rect x="5.1733%" y="837" width="0.9022%" height="15" fill="rgb(205,214,31)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="847.50"></text></g><g><title>std::panicking::try::do_call (989 samples, 0.90%)</title><rect x="5.1733%" y="821" width="0.9022%" height="15" fill="rgb(224,111,15)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (989 samples, 0.90%)</title><rect x="5.1733%" y="805" width="0.9022%" height="15" fill="rgb(253,21,26)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (989 samples, 0.90%)</title><rect x="5.1733%" y="789" width="0.9022%" height="15" fill="rgb(245,139,43)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (989 samples, 0.90%)</title><rect x="5.1733%" y="773" width="0.9022%" height="15" fill="rgb(252,170,7)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="783.50"></text></g><g><title>async_ffi::FfiContext::with_context (989 samples, 0.90%)</title><rect x="5.1733%" y="757" width="0.9022%" height="15" fill="rgb(231,118,14)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (989 samples, 0.90%)</title><rect x="5.1733%" y="741" width="0.9022%" height="15" fill="rgb(238,83,0)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (989 samples, 0.90%)</title><rect x="5.1733%" y="725" width="0.9022%" height="15" fill="rgb(221,39,39)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (989 samples, 0.90%)</title><rect x="5.1733%" y="709" width="0.9022%" height="15" fill="rgb(222,119,46)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="719.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (989 samples, 0.90%)</title><rect x="5.1733%" y="693" width="0.9022%" height="15" fill="rgb(222,165,49)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (989 samples, 0.90%)</title><rect x="5.1733%" y="677" width="0.9022%" height="15" fill="rgb(219,113,52)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="687.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (989 samples, 0.90%)</title><rect x="5.1733%" y="661" width="0.9022%" height="15" fill="rgb(214,7,15)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (989 samples, 0.90%)</title><rect x="5.1733%" y="645" width="0.9022%" height="15" fill="rgb(235,32,4)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (989 samples, 0.90%)</title><rect x="5.1733%" y="629" width="0.9022%" height="15" fill="rgb(238,90,54)" fg:x="5671" fg:w="989"/><text x="5.4233%" y="639.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (988 samples, 0.90%)</title><rect x="5.1742%" y="613" width="0.9013%" height="15" fill="rgb(213,208,19)" fg:x="5672" fg:w="988"/><text x="5.4242%" y="623.50"></text></g><g><title>tremor_common::time::nanotime (593 samples, 0.54%)</title><rect x="5.5346%" y="597" width="0.5410%" height="15" fill="rgb(233,156,4)" fg:x="6067" fg:w="593"/><text x="5.7846%" y="607.50"></text></g><g><title>std::time::SystemTime::now (461 samples, 0.42%)</title><rect x="5.6550%" y="581" width="0.4205%" height="15" fill="rgb(207,194,5)" fg:x="6199" fg:w="461"/><text x="5.9050%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (461 samples, 0.42%)</title><rect x="5.6550%" y="565" width="0.4205%" height="15" fill="rgb(206,111,30)" fg:x="6199" fg:w="461"/><text x="5.9050%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::now (461 samples, 0.42%)</title><rect x="5.6550%" y="549" width="0.4205%" height="15" fill="rgb(243,70,54)" fg:x="6199" fg:w="461"/><text x="5.9050%" y="559.50"></text></g><g><title>__clock_gettime_2 (374 samples, 0.34%)</title><rect x="5.7344%" y="533" width="0.3412%" height="15" fill="rgb(242,28,8)" fg:x="6286" fg:w="374"/><text x="5.9844%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="6.0755%" y="373" width="0.0347%" height="15" fill="rgb(219,106,18)" fg:x="6660" fg:w="38"/><text x="6.3255%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (38 samples, 0.03%)</title><rect x="6.0755%" y="357" width="0.0347%" height="15" fill="rgb(244,222,10)" fg:x="6660" fg:w="38"/><text x="6.3255%" y="367.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (30 samples, 0.03%)</title><rect x="6.0828%" y="341" width="0.0274%" height="15" fill="rgb(236,179,52)" fg:x="6668" fg:w="30"/><text x="6.3328%" y="351.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (26 samples, 0.02%)</title><rect x="6.0865%" y="325" width="0.0237%" height="15" fill="rgb(213,23,39)" fg:x="6672" fg:w="26"/><text x="6.3365%" y="335.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="6.0865%" y="309" width="0.0237%" height="15" fill="rgb(238,48,10)" fg:x="6672" fg:w="26"/><text x="6.3365%" y="319.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="6.0865%" y="293" width="0.0237%" height="15" fill="rgb(251,196,23)" fg:x="6672" fg:w="26"/><text x="6.3365%" y="303.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="6.0755%" y="677" width="0.0383%" height="15" fill="rgb(250,152,24)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (42 samples, 0.04%)</title><rect x="6.0755%" y="661" width="0.0383%" height="15" fill="rgb(209,150,17)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="671.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (42 samples, 0.04%)</title><rect x="6.0755%" y="645" width="0.0383%" height="15" fill="rgb(234,202,34)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (42 samples, 0.04%)</title><rect x="6.0755%" y="629" width="0.0383%" height="15" fill="rgb(253,148,53)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42 samples, 0.04%)</title><rect x="6.0755%" y="613" width="0.0383%" height="15" fill="rgb(218,129,16)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (42 samples, 0.04%)</title><rect x="6.0755%" y="597" width="0.0383%" height="15" fill="rgb(216,85,19)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42 samples, 0.04%)</title><rect x="6.0755%" y="581" width="0.0383%" height="15" fill="rgb(235,228,7)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (42 samples, 0.04%)</title><rect x="6.0755%" y="565" width="0.0383%" height="15" fill="rgb(245,175,0)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (42 samples, 0.04%)</title><rect x="6.0755%" y="549" width="0.0383%" height="15" fill="rgb(208,168,36)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (42 samples, 0.04%)</title><rect x="6.0755%" y="533" width="0.0383%" height="15" fill="rgb(246,171,24)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.04%)</title><rect x="6.0755%" y="517" width="0.0383%" height="15" fill="rgb(215,142,24)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.04%)</title><rect x="6.0755%" y="501" width="0.0383%" height="15" fill="rgb(250,187,7)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="511.50"></text></g><g><title>alloc::alloc::alloc (42 samples, 0.04%)</title><rect x="6.0755%" y="485" width="0.0383%" height="15" fill="rgb(228,66,33)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="495.50"></text></g><g><title>__rg_alloc (42 samples, 0.04%)</title><rect x="6.0755%" y="469" width="0.0383%" height="15" fill="rgb(234,215,21)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (42 samples, 0.04%)</title><rect x="6.0755%" y="453" width="0.0383%" height="15" fill="rgb(222,191,20)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="463.50"></text></g><g><title>rust_alloc (42 samples, 0.04%)</title><rect x="6.0755%" y="437" width="0.0383%" height="15" fill="rgb(245,79,54)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="6.0755%" y="421" width="0.0383%" height="15" fill="rgb(240,10,37)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="6.0755%" y="405" width="0.0383%" height="15" fill="rgb(214,192,32)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="6.0755%" y="389" width="0.0383%" height="15" fill="rgb(209,36,54)" fg:x="6660" fg:w="42"/><text x="6.3255%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.02%)</title><rect x="6.1357%" y="661" width="0.0182%" height="15" fill="rgb(220,10,11)" fg:x="6726" fg:w="20"/><text x="6.3857%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (11 samples, 0.01%)</title><rect x="6.1440%" y="645" width="0.0100%" height="15" fill="rgb(221,106,17)" fg:x="6735" fg:w="11"/><text x="6.3940%" y="655.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="6.1877%" y="229" width="0.0100%" height="15" fill="rgb(251,142,44)" fg:x="6783" fg:w="11"/><text x="6.4377%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (66 samples, 0.06%)</title><rect x="6.1741%" y="277" width="0.0602%" height="15" fill="rgb(238,13,15)" fg:x="6768" fg:w="66"/><text x="6.4241%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (66 samples, 0.06%)</title><rect x="6.1741%" y="261" width="0.0602%" height="15" fill="rgb(208,107,27)" fg:x="6768" fg:w="66"/><text x="6.4241%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (56 samples, 0.05%)</title><rect x="6.1832%" y="245" width="0.0511%" height="15" fill="rgb(205,136,37)" fg:x="6778" fg:w="56"/><text x="6.4332%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (40 samples, 0.04%)</title><rect x="6.1978%" y="229" width="0.0365%" height="15" fill="rgb(250,205,27)" fg:x="6794" fg:w="40"/><text x="6.4478%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="6.1978%" y="213" width="0.0365%" height="15" fill="rgb(210,80,43)" fg:x="6794" fg:w="40"/><text x="6.4478%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="6.1978%" y="197" width="0.0365%" height="15" fill="rgb(247,160,36)" fg:x="6794" fg:w="40"/><text x="6.4478%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.14%)</title><rect x="6.1686%" y="325" width="0.1359%" height="15" fill="rgb(234,13,49)" fg:x="6762" fg:w="149"/><text x="6.4186%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.14%)</title><rect x="6.1686%" y="309" width="0.1359%" height="15" fill="rgb(234,122,0)" fg:x="6762" fg:w="149"/><text x="6.4186%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (143 samples, 0.13%)</title><rect x="6.1741%" y="293" width="0.1305%" height="15" fill="rgb(207,146,38)" fg:x="6768" fg:w="143"/><text x="6.4241%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (63 samples, 0.06%)</title><rect x="6.2470%" y="277" width="0.0575%" height="15" fill="rgb(207,177,25)" fg:x="6848" fg:w="63"/><text x="6.4970%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (63 samples, 0.06%)</title><rect x="6.2470%" y="261" width="0.0575%" height="15" fill="rgb(211,178,42)" fg:x="6848" fg:w="63"/><text x="6.4970%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (169 samples, 0.15%)</title><rect x="6.1567%" y="469" width="0.1542%" height="15" fill="rgb(230,69,54)" fg:x="6749" fg:w="169"/><text x="6.4067%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (169 samples, 0.15%)</title><rect x="6.1567%" y="453" width="0.1542%" height="15" fill="rgb(214,135,41)" fg:x="6749" fg:w="169"/><text x="6.4067%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (169 samples, 0.15%)</title><rect x="6.1567%" y="437" width="0.1542%" height="15" fill="rgb(237,67,25)" fg:x="6749" fg:w="169"/><text x="6.4067%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (169 samples, 0.15%)</title><rect x="6.1567%" y="421" width="0.1542%" height="15" fill="rgb(222,189,50)" fg:x="6749" fg:w="169"/><text x="6.4067%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (169 samples, 0.15%)</title><rect x="6.1567%" y="405" width="0.1542%" height="15" fill="rgb(245,148,34)" fg:x="6749" fg:w="169"/><text x="6.4067%" y="415.50"></text></g><g><title>alloc::alloc::alloc (167 samples, 0.15%)</title><rect x="6.1585%" y="389" width="0.1523%" height="15" fill="rgb(222,29,6)" fg:x="6751" fg:w="167"/><text x="6.4085%" y="399.50"></text></g><g><title>__rg_alloc (167 samples, 0.15%)</title><rect x="6.1585%" y="373" width="0.1523%" height="15" fill="rgb(221,189,43)" fg:x="6751" fg:w="167"/><text x="6.4085%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (167 samples, 0.15%)</title><rect x="6.1585%" y="357" width="0.1523%" height="15" fill="rgb(207,36,27)" fg:x="6751" fg:w="167"/><text x="6.4085%" y="367.50"></text></g><g><title>rust_alloc (161 samples, 0.15%)</title><rect x="6.1640%" y="341" width="0.1469%" height="15" fill="rgb(217,90,24)" fg:x="6757" fg:w="161"/><text x="6.4140%" y="351.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (225 samples, 0.21%)</title><rect x="6.1540%" y="581" width="0.2053%" height="15" fill="rgb(224,66,35)" fg:x="6746" fg:w="225"/><text x="6.4040%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (225 samples, 0.21%)</title><rect x="6.1540%" y="565" width="0.2053%" height="15" fill="rgb(221,13,50)" fg:x="6746" fg:w="225"/><text x="6.4040%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (222 samples, 0.20%)</title><rect x="6.1567%" y="549" width="0.2025%" height="15" fill="rgb(236,68,49)" fg:x="6749" fg:w="222"/><text x="6.4067%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (222 samples, 0.20%)</title><rect x="6.1567%" y="533" width="0.2025%" height="15" fill="rgb(229,146,28)" fg:x="6749" fg:w="222"/><text x="6.4067%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (222 samples, 0.20%)</title><rect x="6.1567%" y="517" width="0.2025%" height="15" fill="rgb(225,31,38)" fg:x="6749" fg:w="222"/><text x="6.4067%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (222 samples, 0.20%)</title><rect x="6.1567%" y="501" width="0.2025%" height="15" fill="rgb(250,208,3)" fg:x="6749" fg:w="222"/><text x="6.4067%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (222 samples, 0.20%)</title><rect x="6.1567%" y="485" width="0.2025%" height="15" fill="rgb(246,54,23)" fg:x="6749" fg:w="222"/><text x="6.4067%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (53 samples, 0.05%)</title><rect x="6.3109%" y="469" width="0.0483%" height="15" fill="rgb(243,76,11)" fg:x="6918" fg:w="53"/><text x="6.5609%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45 samples, 0.04%)</title><rect x="6.3182%" y="453" width="0.0411%" height="15" fill="rgb(245,21,50)" fg:x="6926" fg:w="45"/><text x="6.5682%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (36 samples, 0.03%)</title><rect x="6.3264%" y="437" width="0.0328%" height="15" fill="rgb(228,9,43)" fg:x="6935" fg:w="36"/><text x="6.5764%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (14 samples, 0.01%)</title><rect x="6.3994%" y="357" width="0.0128%" height="15" fill="rgb(208,100,47)" fg:x="7015" fg:w="14"/><text x="6.6494%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (52 samples, 0.05%)</title><rect x="6.3994%" y="389" width="0.0474%" height="15" fill="rgb(232,26,8)" fg:x="7015" fg:w="52"/><text x="6.6494%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (52 samples, 0.05%)</title><rect x="6.3994%" y="373" width="0.0474%" height="15" fill="rgb(216,166,38)" fg:x="7015" fg:w="52"/><text x="6.6494%" y="383.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (38 samples, 0.03%)</title><rect x="6.4122%" y="357" width="0.0347%" height="15" fill="rgb(251,202,51)" fg:x="7029" fg:w="38"/><text x="6.6622%" y="367.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (27 samples, 0.02%)</title><rect x="6.4222%" y="341" width="0.0246%" height="15" fill="rgb(254,216,34)" fg:x="7040" fg:w="27"/><text x="6.6722%" y="351.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (27 samples, 0.02%)</title><rect x="6.4222%" y="325" width="0.0246%" height="15" fill="rgb(251,32,27)" fg:x="7040" fg:w="27"/><text x="6.6722%" y="335.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (27 samples, 0.02%)</title><rect x="6.4222%" y="309" width="0.0246%" height="15" fill="rgb(208,127,28)" fg:x="7040" fg:w="27"/><text x="6.6722%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (144 samples, 0.13%)</title><rect x="6.3738%" y="533" width="0.1314%" height="15" fill="rgb(224,137,22)" fg:x="6987" fg:w="144"/><text x="6.6238%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (144 samples, 0.13%)</title><rect x="6.3738%" y="517" width="0.1314%" height="15" fill="rgb(254,70,32)" fg:x="6987" fg:w="144"/><text x="6.6238%" y="527.50"></text></g><g><title>alloc::alloc::alloc (138 samples, 0.13%)</title><rect x="6.3793%" y="501" width="0.1259%" height="15" fill="rgb(229,75,37)" fg:x="6993" fg:w="138"/><text x="6.6293%" y="511.50"></text></g><g><title>__rg_alloc (138 samples, 0.13%)</title><rect x="6.3793%" y="485" width="0.1259%" height="15" fill="rgb(252,64,23)" fg:x="6993" fg:w="138"/><text x="6.6293%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (138 samples, 0.13%)</title><rect x="6.3793%" y="469" width="0.1259%" height="15" fill="rgb(232,162,48)" fg:x="6993" fg:w="138"/><text x="6.6293%" y="479.50"></text></g><g><title>rust_alloc (134 samples, 0.12%)</title><rect x="6.3830%" y="453" width="0.1222%" height="15" fill="rgb(246,160,12)" fg:x="6997" fg:w="134"/><text x="6.6330%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (122 samples, 0.11%)</title><rect x="6.3939%" y="437" width="0.1113%" height="15" fill="rgb(247,166,0)" fg:x="7009" fg:w="122"/><text x="6.6439%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (122 samples, 0.11%)</title><rect x="6.3939%" y="421" width="0.1113%" height="15" fill="rgb(249,219,21)" fg:x="7009" fg:w="122"/><text x="6.6439%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (116 samples, 0.11%)</title><rect x="6.3994%" y="405" width="0.1058%" height="15" fill="rgb(205,209,3)" fg:x="7015" fg:w="116"/><text x="6.6494%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (58 samples, 0.05%)</title><rect x="6.4523%" y="389" width="0.0529%" height="15" fill="rgb(243,44,1)" fg:x="7073" fg:w="58"/><text x="6.7023%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (58 samples, 0.05%)</title><rect x="6.4523%" y="373" width="0.0529%" height="15" fill="rgb(206,159,16)" fg:x="7073" fg:w="58"/><text x="6.7023%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (169 samples, 0.15%)</title><rect x="6.3647%" y="581" width="0.1542%" height="15" fill="rgb(244,77,30)" fg:x="6977" fg:w="169"/><text x="6.6147%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (160 samples, 0.15%)</title><rect x="6.3729%" y="565" width="0.1460%" height="15" fill="rgb(218,69,12)" fg:x="6986" fg:w="160"/><text x="6.6229%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (159 samples, 0.15%)</title><rect x="6.3738%" y="549" width="0.1450%" height="15" fill="rgb(212,87,7)" fg:x="6987" fg:w="159"/><text x="6.6238%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::array (14 samples, 0.01%)</title><rect x="6.5061%" y="533" width="0.0128%" height="15" fill="rgb(245,114,25)" fg:x="7132" fg:w="14"/><text x="6.7561%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (13 samples, 0.01%)</title><rect x="6.5070%" y="517" width="0.0119%" height="15" fill="rgb(210,61,42)" fg:x="7133" fg:w="13"/><text x="6.7570%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (13 samples, 0.01%)</title><rect x="6.5070%" y="501" width="0.0119%" height="15" fill="rgb(211,52,33)" fg:x="7133" fg:w="13"/><text x="6.7570%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (411 samples, 0.37%)</title><rect x="6.1540%" y="597" width="0.3749%" height="15" fill="rgb(234,58,33)" fg:x="6746" fg:w="411"/><text x="6.4040%" y="607.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (11 samples, 0.01%)</title><rect x="6.5189%" y="581" width="0.0100%" height="15" fill="rgb(220,115,36)" fg:x="7146" fg:w="11"/><text x="6.7689%" y="591.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (512 samples, 0.47%)</title><rect x="6.0755%" y="693" width="0.4671%" height="15" fill="rgb(243,153,54)" fg:x="6660" fg:w="512"/><text x="6.3255%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (470 samples, 0.43%)</title><rect x="6.1138%" y="677" width="0.4288%" height="15" fill="rgb(251,47,18)" fg:x="6702" fg:w="470"/><text x="6.3638%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (426 samples, 0.39%)</title><rect x="6.1540%" y="661" width="0.3886%" height="15" fill="rgb(242,102,42)" fg:x="6746" fg:w="426"/><text x="6.4040%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (426 samples, 0.39%)</title><rect x="6.1540%" y="645" width="0.3886%" height="15" fill="rgb(234,31,38)" fg:x="6746" fg:w="426"/><text x="6.4040%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (426 samples, 0.39%)</title><rect x="6.1540%" y="629" width="0.3886%" height="15" fill="rgb(221,117,51)" fg:x="6746" fg:w="426"/><text x="6.4040%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (426 samples, 0.39%)</title><rect x="6.1540%" y="613" width="0.3886%" height="15" fill="rgb(212,20,18)" fg:x="6746" fg:w="426"/><text x="6.4040%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (15 samples, 0.01%)</title><rect x="6.5289%" y="597" width="0.0137%" height="15" fill="rgb(245,133,36)" fg:x="7157" fg:w="15"/><text x="6.7789%" y="607.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (24 samples, 0.02%)</title><rect x="6.5563%" y="309" width="0.0219%" height="15" fill="rgb(212,6,19)" fg:x="7187" fg:w="24"/><text x="6.8063%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="6.5563%" y="293" width="0.0219%" height="15" fill="rgb(218,1,36)" fg:x="7187" fg:w="24"/><text x="6.8063%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (51 samples, 0.05%)</title><rect x="6.5490%" y="357" width="0.0465%" height="15" fill="rgb(246,84,54)" fg:x="7179" fg:w="51"/><text x="6.7990%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (51 samples, 0.05%)</title><rect x="6.5490%" y="341" width="0.0465%" height="15" fill="rgb(242,110,6)" fg:x="7179" fg:w="51"/><text x="6.7990%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (46 samples, 0.04%)</title><rect x="6.5535%" y="325" width="0.0420%" height="15" fill="rgb(214,47,5)" fg:x="7184" fg:w="46"/><text x="6.8035%" y="335.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="6.5782%" y="309" width="0.0173%" height="15" fill="rgb(218,159,25)" fg:x="7211" fg:w="19"/><text x="6.8282%" y="319.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (19 samples, 0.02%)</title><rect x="6.5782%" y="293" width="0.0173%" height="15" fill="rgb(215,211,28)" fg:x="7211" fg:w="19"/><text x="6.8282%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (58 samples, 0.05%)</title><rect x="6.5490%" y="373" width="0.0529%" height="15" fill="rgb(238,59,32)" fg:x="7179" fg:w="58"/><text x="6.7990%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (76 samples, 0.07%)</title><rect x="6.5426%" y="389" width="0.0693%" height="15" fill="rgb(226,82,3)" fg:x="7172" fg:w="76"/><text x="6.7926%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (59 samples, 0.05%)</title><rect x="6.6357%" y="373" width="0.0538%" height="15" fill="rgb(240,164,32)" fg:x="7274" fg:w="59"/><text x="6.8857%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (478 samples, 0.44%)</title><rect x="6.5426%" y="421" width="0.4361%" height="15" fill="rgb(232,46,7)" fg:x="7172" fg:w="478"/><text x="6.7926%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (478 samples, 0.44%)</title><rect x="6.5426%" y="405" width="0.4361%" height="15" fill="rgb(229,129,53)" fg:x="7172" fg:w="478"/><text x="6.7926%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (402 samples, 0.37%)</title><rect x="6.6119%" y="389" width="0.3667%" height="15" fill="rgb(234,188,29)" fg:x="7248" fg:w="402"/><text x="6.8619%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (317 samples, 0.29%)</title><rect x="6.6895%" y="373" width="0.2892%" height="15" fill="rgb(246,141,4)" fg:x="7333" fg:w="317"/><text x="6.9395%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (317 samples, 0.29%)</title><rect x="6.6895%" y="357" width="0.2892%" height="15" fill="rgb(229,23,39)" fg:x="7333" fg:w="317"/><text x="6.9395%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (317 samples, 0.29%)</title><rect x="6.6895%" y="341" width="0.2892%" height="15" fill="rgb(206,12,3)" fg:x="7333" fg:w="317"/><text x="6.9395%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="6.9860%" y="373" width="0.0164%" height="15" fill="rgb(252,226,20)" fg:x="7658" fg:w="18"/><text x="7.2360%" y="383.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (17 samples, 0.02%)</title><rect x="6.9869%" y="357" width="0.0155%" height="15" fill="rgb(216,123,35)" fg:x="7659" fg:w="17"/><text x="7.2369%" y="367.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (13 samples, 0.01%)</title><rect x="6.9905%" y="341" width="0.0119%" height="15" fill="rgb(212,68,40)" fg:x="7663" fg:w="13"/><text x="7.2405%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="6.9905%" y="325" width="0.0119%" height="15" fill="rgb(254,125,32)" fg:x="7663" fg:w="13"/><text x="7.2405%" y="335.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (1,017 samples, 0.93%)</title><rect x="6.0755%" y="949" width="0.9278%" height="15" fill="rgb(253,97,22)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="959.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,017 samples, 0.93%)</title><rect x="6.0755%" y="933" width="0.9278%" height="15" fill="rgb(241,101,14)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,017 samples, 0.93%)</title><rect x="6.0755%" y="917" width="0.9278%" height="15" fill="rgb(238,103,29)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="927.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,017 samples, 0.93%)</title><rect x="6.0755%" y="901" width="0.9278%" height="15" fill="rgb(233,195,47)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,017 samples, 0.93%)</title><rect x="6.0755%" y="885" width="0.9278%" height="15" fill="rgb(246,218,30)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="895.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,017 samples, 0.93%)</title><rect x="6.0755%" y="869" width="0.9278%" height="15" fill="rgb(219,145,47)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="879.50"></text></g><g><title>std::panic::catch_unwind (1,017 samples, 0.93%)</title><rect x="6.0755%" y="853" width="0.9278%" height="15" fill="rgb(243,12,26)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="863.50"></text></g><g><title>std::panicking::try (1,017 samples, 0.93%)</title><rect x="6.0755%" y="837" width="0.9278%" height="15" fill="rgb(214,87,16)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="847.50"></text></g><g><title>std::panicking::try::do_call (1,017 samples, 0.93%)</title><rect x="6.0755%" y="821" width="0.9278%" height="15" fill="rgb(208,99,42)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,017 samples, 0.93%)</title><rect x="6.0755%" y="805" width="0.9278%" height="15" fill="rgb(253,99,2)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,017 samples, 0.93%)</title><rect x="6.0755%" y="789" width="0.9278%" height="15" fill="rgb(220,168,23)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,017 samples, 0.93%)</title><rect x="6.0755%" y="773" width="0.9278%" height="15" fill="rgb(242,38,24)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="783.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,017 samples, 0.93%)</title><rect x="6.0755%" y="757" width="0.9278%" height="15" fill="rgb(225,182,9)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,017 samples, 0.93%)</title><rect x="6.0755%" y="741" width="0.9278%" height="15" fill="rgb(243,178,37)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,017 samples, 0.93%)</title><rect x="6.0755%" y="725" width="0.9278%" height="15" fill="rgb(232,139,19)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (1,017 samples, 0.93%)</title><rect x="6.0755%" y="709" width="0.9278%" height="15" fill="rgb(225,201,24)" fg:x="6660" fg:w="1017"/><text x="6.3255%" y="719.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (505 samples, 0.46%)</title><rect x="6.5426%" y="693" width="0.4607%" height="15" fill="rgb(221,47,46)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (505 samples, 0.46%)</title><rect x="6.5426%" y="677" width="0.4607%" height="15" fill="rgb(249,23,13)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (505 samples, 0.46%)</title><rect x="6.5426%" y="661" width="0.4607%" height="15" fill="rgb(219,9,5)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (505 samples, 0.46%)</title><rect x="6.5426%" y="645" width="0.4607%" height="15" fill="rgb(254,171,16)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (505 samples, 0.46%)</title><rect x="6.5426%" y="629" width="0.4607%" height="15" fill="rgb(230,171,20)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (505 samples, 0.46%)</title><rect x="6.5426%" y="613" width="0.4607%" height="15" fill="rgb(210,71,41)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (505 samples, 0.46%)</title><rect x="6.5426%" y="597" width="0.4607%" height="15" fill="rgb(206,173,20)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (505 samples, 0.46%)</title><rect x="6.5426%" y="581" width="0.4607%" height="15" fill="rgb(233,88,34)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (505 samples, 0.46%)</title><rect x="6.5426%" y="565" width="0.4607%" height="15" fill="rgb(223,209,46)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (505 samples, 0.46%)</title><rect x="6.5426%" y="549" width="0.4607%" height="15" fill="rgb(250,43,18)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="559.50"></text></g><g><title>alloc::alloc::alloc (505 samples, 0.46%)</title><rect x="6.5426%" y="533" width="0.4607%" height="15" fill="rgb(208,13,10)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="543.50"></text></g><g><title>__rg_alloc (505 samples, 0.46%)</title><rect x="6.5426%" y="517" width="0.4607%" height="15" fill="rgb(212,200,36)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (505 samples, 0.46%)</title><rect x="6.5426%" y="501" width="0.4607%" height="15" fill="rgb(225,90,30)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="511.50"></text></g><g><title>rust_alloc (505 samples, 0.46%)</title><rect x="6.5426%" y="485" width="0.4607%" height="15" fill="rgb(236,182,39)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (505 samples, 0.46%)</title><rect x="6.5426%" y="469" width="0.4607%" height="15" fill="rgb(212,144,35)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (505 samples, 0.46%)</title><rect x="6.5426%" y="453" width="0.4607%" height="15" fill="rgb(228,63,44)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (505 samples, 0.46%)</title><rect x="6.5426%" y="437" width="0.4607%" height="15" fill="rgb(228,109,6)" fg:x="7172" fg:w="505"/><text x="6.7926%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.02%)</title><rect x="6.9787%" y="421" width="0.0246%" height="15" fill="rgb(238,117,24)" fg:x="7650" fg:w="27"/><text x="7.2287%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.02%)</title><rect x="6.9787%" y="405" width="0.0246%" height="15" fill="rgb(242,26,26)" fg:x="7650" fg:w="27"/><text x="7.2287%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="6.9805%" y="389" width="0.0228%" height="15" fill="rgb(221,92,48)" fg:x="7652" fg:w="25"/><text x="7.2305%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="7.0060%" y="917" width="0.0201%" height="15" fill="rgb(209,209,32)" fg:x="7680" fg:w="22"/><text x="7.2560%" y="927.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (310 samples, 0.28%)</title><rect x="7.2076%" y="901" width="0.2828%" height="15" fill="rgb(221,70,22)" fg:x="7901" fg:w="310"/><text x="7.4576%" y="911.50"></text></g><g><title>core::ptr::read (275 samples, 0.25%)</title><rect x="7.2396%" y="885" width="0.2509%" height="15" fill="rgb(248,145,5)" fg:x="7936" fg:w="275"/><text x="7.4896%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (269 samples, 0.25%)</title><rect x="7.2450%" y="869" width="0.2454%" height="15" fill="rgb(226,116,26)" fg:x="7942" fg:w="269"/><text x="7.4950%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="7.4968%" y="901" width="0.0100%" height="15" fill="rgb(244,5,17)" fg:x="8218" fg:w="11"/><text x="7.7468%" y="911.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="7.5260%" y="597" width="0.0137%" height="15" fill="rgb(252,159,33)" fg:x="8250" fg:w="15"/><text x="7.7760%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="7.5497%" y="581" width="0.0146%" height="15" fill="rgb(206,71,0)" fg:x="8276" fg:w="16"/><text x="7.7997%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (16 samples, 0.01%)</title><rect x="7.5497%" y="565" width="0.0146%" height="15" fill="rgb(233,118,54)" fg:x="8276" fg:w="16"/><text x="7.7997%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (13 samples, 0.01%)</title><rect x="7.5525%" y="549" width="0.0119%" height="15" fill="rgb(234,83,48)" fg:x="8279" fg:w="13"/><text x="7.8025%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (11 samples, 0.01%)</title><rect x="7.5543%" y="533" width="0.0100%" height="15" fill="rgb(228,3,54)" fg:x="8281" fg:w="11"/><text x="7.8043%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="7.5543%" y="517" width="0.0100%" height="15" fill="rgb(226,155,13)" fg:x="8281" fg:w="11"/><text x="7.8043%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="7.5543%" y="501" width="0.0100%" height="15" fill="rgb(241,28,37)" fg:x="8281" fg:w="11"/><text x="7.8043%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (39 samples, 0.04%)</title><rect x="7.5661%" y="581" width="0.0356%" height="15" fill="rgb(233,93,10)" fg:x="8294" fg:w="39"/><text x="7.8161%" y="591.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (39 samples, 0.04%)</title><rect x="7.5661%" y="565" width="0.0356%" height="15" fill="rgb(225,113,19)" fg:x="8294" fg:w="39"/><text x="7.8161%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (361 samples, 0.33%)</title><rect x="7.5260%" y="629" width="0.3293%" height="15" fill="rgb(241,2,18)" fg:x="8250" fg:w="361"/><text x="7.7760%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (361 samples, 0.33%)</title><rect x="7.5260%" y="613" width="0.3293%" height="15" fill="rgb(228,207,21)" fg:x="8250" fg:w="361"/><text x="7.7760%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (339 samples, 0.31%)</title><rect x="7.5461%" y="597" width="0.3093%" height="15" fill="rgb(213,211,35)" fg:x="8272" fg:w="339"/><text x="7.7961%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (278 samples, 0.25%)</title><rect x="7.6017%" y="581" width="0.2536%" height="15" fill="rgb(209,83,10)" fg:x="8333" fg:w="278"/><text x="7.8517%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (278 samples, 0.25%)</title><rect x="7.6017%" y="565" width="0.2536%" height="15" fill="rgb(209,164,1)" fg:x="8333" fg:w="278"/><text x="7.8517%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (384 samples, 0.35%)</title><rect x="7.5123%" y="773" width="0.3503%" height="15" fill="rgb(213,184,43)" fg:x="8235" fg:w="384"/><text x="7.7623%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (384 samples, 0.35%)</title><rect x="7.5123%" y="757" width="0.3503%" height="15" fill="rgb(231,61,34)" fg:x="8235" fg:w="384"/><text x="7.7623%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (381 samples, 0.35%)</title><rect x="7.5151%" y="741" width="0.3476%" height="15" fill="rgb(235,75,3)" fg:x="8238" fg:w="381"/><text x="7.7651%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (381 samples, 0.35%)</title><rect x="7.5151%" y="725" width="0.3476%" height="15" fill="rgb(220,106,47)" fg:x="8238" fg:w="381"/><text x="7.7651%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (381 samples, 0.35%)</title><rect x="7.5151%" y="709" width="0.3476%" height="15" fill="rgb(210,196,33)" fg:x="8238" fg:w="381"/><text x="7.7651%" y="719.50"></text></g><g><title>alloc::alloc::alloc (375 samples, 0.34%)</title><rect x="7.5205%" y="693" width="0.3421%" height="15" fill="rgb(229,154,42)" fg:x="8244" fg:w="375"/><text x="7.7705%" y="703.50"></text></g><g><title>__rg_alloc (375 samples, 0.34%)</title><rect x="7.5205%" y="677" width="0.3421%" height="15" fill="rgb(228,114,26)" fg:x="8244" fg:w="375"/><text x="7.7705%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (375 samples, 0.34%)</title><rect x="7.5205%" y="661" width="0.3421%" height="15" fill="rgb(208,144,1)" fg:x="8244" fg:w="375"/><text x="7.7705%" y="671.50"></text></g><g><title>rust_alloc (374 samples, 0.34%)</title><rect x="7.5214%" y="645" width="0.3412%" height="15" fill="rgb(239,112,37)" fg:x="8245" fg:w="374"/><text x="7.7714%" y="655.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (411 samples, 0.37%)</title><rect x="7.5123%" y="901" width="0.3749%" height="15" fill="rgb(210,96,50)" fg:x="8235" fg:w="411"/><text x="7.7623%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (411 samples, 0.37%)</title><rect x="7.5123%" y="885" width="0.3749%" height="15" fill="rgb(222,178,2)" fg:x="8235" fg:w="411"/><text x="7.7623%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (411 samples, 0.37%)</title><rect x="7.5123%" y="869" width="0.3749%" height="15" fill="rgb(226,74,18)" fg:x="8235" fg:w="411"/><text x="7.7623%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (411 samples, 0.37%)</title><rect x="7.5123%" y="853" width="0.3749%" height="15" fill="rgb(225,67,54)" fg:x="8235" fg:w="411"/><text x="7.7623%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (411 samples, 0.37%)</title><rect x="7.5123%" y="837" width="0.3749%" height="15" fill="rgb(251,92,32)" fg:x="8235" fg:w="411"/><text x="7.7623%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (411 samples, 0.37%)</title><rect x="7.5123%" y="821" width="0.3749%" height="15" fill="rgb(228,149,22)" fg:x="8235" fg:w="411"/><text x="7.7623%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (411 samples, 0.37%)</title><rect x="7.5123%" y="805" width="0.3749%" height="15" fill="rgb(243,54,13)" fg:x="8235" fg:w="411"/><text x="7.7623%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (411 samples, 0.37%)</title><rect x="7.5123%" y="789" width="0.3749%" height="15" fill="rgb(243,180,28)" fg:x="8235" fg:w="411"/><text x="7.7623%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (27 samples, 0.02%)</title><rect x="7.8626%" y="773" width="0.0246%" height="15" fill="rgb(208,167,24)" fg:x="8619" fg:w="27"/><text x="8.1126%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.02%)</title><rect x="7.8626%" y="757" width="0.0246%" height="15" fill="rgb(245,73,45)" fg:x="8619" fg:w="27"/><text x="8.1126%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (24 samples, 0.02%)</title><rect x="7.8654%" y="741" width="0.0219%" height="15" fill="rgb(237,203,48)" fg:x="8622" fg:w="24"/><text x="8.1154%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (517 samples, 0.47%)</title><rect x="7.8872%" y="901" width="0.4716%" height="15" fill="rgb(211,197,16)" fg:x="8646" fg:w="517"/><text x="8.1372%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (330 samples, 0.30%)</title><rect x="8.3744%" y="885" width="0.3010%" height="15" fill="rgb(243,99,51)" fg:x="9180" fg:w="330"/><text x="8.6244%" y="895.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="8.6918%" y="741" width="0.0100%" height="15" fill="rgb(215,123,29)" fg:x="9528" fg:w="11"/><text x="8.9418%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (16 samples, 0.01%)</title><rect x="8.7302%" y="613" width="0.0146%" height="15" fill="rgb(239,186,37)" fg:x="9570" fg:w="16"/><text x="8.9802%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="8.7311%" y="597" width="0.0137%" height="15" fill="rgb(252,136,39)" fg:x="9571" fg:w="15"/><text x="8.9811%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (41 samples, 0.04%)</title><rect x="8.7229%" y="661" width="0.0374%" height="15" fill="rgb(223,213,32)" fg:x="9562" fg:w="41"/><text x="8.9729%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (41 samples, 0.04%)</title><rect x="8.7229%" y="645" width="0.0374%" height="15" fill="rgb(233,115,5)" fg:x="9562" fg:w="41"/><text x="8.9729%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (39 samples, 0.04%)</title><rect x="8.7247%" y="629" width="0.0356%" height="15" fill="rgb(207,226,44)" fg:x="9564" fg:w="39"/><text x="8.9747%" y="639.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (17 samples, 0.02%)</title><rect x="8.7448%" y="613" width="0.0155%" height="15" fill="rgb(208,126,0)" fg:x="9586" fg:w="17"/><text x="8.9948%" y="623.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (17 samples, 0.02%)</title><rect x="8.7448%" y="597" width="0.0155%" height="15" fill="rgb(244,66,21)" fg:x="9586" fg:w="17"/><text x="8.9948%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (53 samples, 0.05%)</title><rect x="8.7229%" y="677" width="0.0483%" height="15" fill="rgb(222,97,12)" fg:x="9562" fg:w="53"/><text x="8.9729%" y="687.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="8.7603%" y="661" width="0.0109%" height="15" fill="rgb(219,213,19)" fg:x="9603" fg:w="12"/><text x="9.0103%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="8.7603%" y="645" width="0.0109%" height="15" fill="rgb(252,169,30)" fg:x="9603" fg:w="12"/><text x="9.0103%" y="655.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="8.7603%" y="629" width="0.0109%" height="15" fill="rgb(206,32,51)" fg:x="9603" fg:w="12"/><text x="9.0103%" y="639.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="8.7603%" y="613" width="0.0109%" height="15" fill="rgb(250,172,42)" fg:x="9603" fg:w="12"/><text x="9.0103%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (79 samples, 0.07%)</title><rect x="8.7101%" y="693" width="0.0721%" height="15" fill="rgb(209,34,43)" fg:x="9548" fg:w="79"/><text x="8.9601%" y="703.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="8.7721%" y="677" width="0.0100%" height="15" fill="rgb(223,11,35)" fg:x="9616" fg:w="11"/><text x="9.0221%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="8.7721%" y="661" width="0.0100%" height="15" fill="rgb(251,219,26)" fg:x="9616" fg:w="11"/><text x="9.0221%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="8.7721%" y="645" width="0.0100%" height="15" fill="rgb(231,119,3)" fg:x="9616" fg:w="11"/><text x="9.0221%" y="655.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="8.7721%" y="629" width="0.0100%" height="15" fill="rgb(216,97,11)" fg:x="9616" fg:w="11"/><text x="9.0221%" y="639.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (62 samples, 0.06%)</title><rect x="8.8095%" y="677" width="0.0566%" height="15" fill="rgb(223,59,9)" fg:x="9657" fg:w="62"/><text x="9.0595%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (550 samples, 0.50%)</title><rect x="8.7092%" y="725" width="0.5017%" height="15" fill="rgb(233,93,31)" fg:x="9547" fg:w="550"/><text x="8.9592%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (550 samples, 0.50%)</title><rect x="8.7092%" y="709" width="0.5017%" height="15" fill="rgb(239,81,33)" fg:x="9547" fg:w="550"/><text x="8.9592%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (470 samples, 0.43%)</title><rect x="8.7822%" y="693" width="0.4288%" height="15" fill="rgb(213,120,34)" fg:x="9627" fg:w="470"/><text x="9.0322%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (378 samples, 0.34%)</title><rect x="8.8661%" y="677" width="0.3448%" height="15" fill="rgb(243,49,53)" fg:x="9719" fg:w="378"/><text x="9.1161%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (378 samples, 0.34%)</title><rect x="8.8661%" y="661" width="0.3448%" height="15" fill="rgb(247,216,33)" fg:x="9719" fg:w="378"/><text x="9.1161%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (378 samples, 0.34%)</title><rect x="8.8661%" y="645" width="0.3448%" height="15" fill="rgb(226,26,14)" fg:x="9719" fg:w="378"/><text x="9.1161%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::take (20 samples, 0.02%)</title><rect x="9.2219%" y="693" width="0.0182%" height="15" fill="rgb(215,49,53)" fg:x="10109" fg:w="20"/><text x="9.4719%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (20 samples, 0.02%)</title><rect x="9.2219%" y="677" width="0.0182%" height="15" fill="rgb(245,162,40)" fg:x="10109" fg:w="20"/><text x="9.4719%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="9.2109%" y="725" width="0.0328%" height="15" fill="rgb(229,68,17)" fg:x="10097" fg:w="36"/><text x="9.4609%" y="735.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (33 samples, 0.03%)</title><rect x="9.2136%" y="709" width="0.0301%" height="15" fill="rgb(213,182,10)" fg:x="10100" fg:w="33"/><text x="9.4636%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="9.2438%" y="725" width="0.0128%" height="15" fill="rgb(245,125,30)" fg:x="10133" fg:w="14"/><text x="9.4938%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="9.2438%" y="709" width="0.0128%" height="15" fill="rgb(232,202,2)" fg:x="10133" fg:w="14"/><text x="9.4938%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="9.2456%" y="693" width="0.0109%" height="15" fill="rgb(237,140,51)" fg:x="10135" fg:w="12"/><text x="9.4956%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,103 samples, 1.01%)</title><rect x="8.3589%" y="901" width="1.0062%" height="15" fill="rgb(236,157,25)" fg:x="9163" fg:w="1103"/><text x="8.6089%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (756 samples, 0.69%)</title><rect x="8.6754%" y="885" width="0.6897%" height="15" fill="rgb(219,209,0)" fg:x="9510" fg:w="756"/><text x="8.9254%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (756 samples, 0.69%)</title><rect x="8.6754%" y="869" width="0.6897%" height="15" fill="rgb(240,116,54)" fg:x="9510" fg:w="756"/><text x="8.9254%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (756 samples, 0.69%)</title><rect x="8.6754%" y="853" width="0.6897%" height="15" fill="rgb(216,10,36)" fg:x="9510" fg:w="756"/><text x="8.9254%" y="863.50"></text></g><g><title>alloc::alloc::alloc (756 samples, 0.69%)</title><rect x="8.6754%" y="837" width="0.6897%" height="15" fill="rgb(222,72,44)" fg:x="9510" fg:w="756"/><text x="8.9254%" y="847.50"></text></g><g><title>__rg_alloc (756 samples, 0.69%)</title><rect x="8.6754%" y="821" width="0.6897%" height="15" fill="rgb(232,159,9)" fg:x="9510" fg:w="756"/><text x="8.9254%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (756 samples, 0.69%)</title><rect x="8.6754%" y="805" width="0.6897%" height="15" fill="rgb(210,39,32)" fg:x="9510" fg:w="756"/><text x="8.9254%" y="815.50"></text></g><g><title>rust_alloc (749 samples, 0.68%)</title><rect x="8.6818%" y="789" width="0.6833%" height="15" fill="rgb(216,194,45)" fg:x="9517" fg:w="749"/><text x="8.9318%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (739 samples, 0.67%)</title><rect x="8.6909%" y="773" width="0.6741%" height="15" fill="rgb(218,18,35)" fg:x="9527" fg:w="739"/><text x="8.9409%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (738 samples, 0.67%)</title><rect x="8.6918%" y="757" width="0.6732%" height="15" fill="rgb(207,83,51)" fg:x="9528" fg:w="738"/><text x="8.9418%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (727 samples, 0.66%)</title><rect x="8.7019%" y="741" width="0.6632%" height="15" fill="rgb(225,63,43)" fg:x="9539" fg:w="727"/><text x="8.9519%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::take (115 samples, 0.10%)</title><rect x="9.2602%" y="725" width="0.1049%" height="15" fill="rgb(207,57,36)" fg:x="10151" fg:w="115"/><text x="9.5102%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (115 samples, 0.10%)</title><rect x="9.2602%" y="709" width="0.1049%" height="15" fill="rgb(216,99,33)" fg:x="10151" fg:w="115"/><text x="9.5102%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (14 samples, 0.01%)</title><rect x="9.3824%" y="869" width="0.0128%" height="15" fill="rgb(225,42,16)" fg:x="10285" fg:w="14"/><text x="9.6324%" y="879.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="9.3824%" y="853" width="0.0128%" height="15" fill="rgb(220,201,45)" fg:x="10285" fg:w="14"/><text x="9.6324%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (13 samples, 0.01%)</title><rect x="9.3833%" y="837" width="0.0119%" height="15" fill="rgb(225,33,4)" fg:x="10286" fg:w="13"/><text x="9.6333%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="9.3833%" y="821" width="0.0119%" height="15" fill="rgb(224,33,50)" fg:x="10286" fg:w="13"/><text x="9.6333%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="9.3651%" y="885" width="0.0383%" height="15" fill="rgb(246,198,51)" fg:x="10266" fg:w="42"/><text x="9.6151%" y="895.50"></text></g><g><title>rust_dealloc (16 samples, 0.01%)</title><rect x="9.4143%" y="789" width="0.0146%" height="15" fill="rgb(205,22,4)" fg:x="10320" fg:w="16"/><text x="9.6643%" y="799.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="9.4563%" y="741" width="0.0100%" height="15" fill="rgb(206,3,8)" fg:x="10366" fg:w="11"/><text x="9.7063%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (42 samples, 0.04%)</title><rect x="9.4326%" y="789" width="0.0383%" height="15" fill="rgb(251,23,15)" fg:x="10340" fg:w="42"/><text x="9.6826%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (42 samples, 0.04%)</title><rect x="9.4326%" y="773" width="0.0383%" height="15" fill="rgb(252,88,28)" fg:x="10340" fg:w="42"/><text x="9.6826%" y="783.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (38 samples, 0.03%)</title><rect x="9.4362%" y="757" width="0.0347%" height="15" fill="rgb(212,127,14)" fg:x="10344" fg:w="38"/><text x="9.6862%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (72 samples, 0.07%)</title><rect x="9.4143%" y="821" width="0.0657%" height="15" fill="rgb(247,145,37)" fg:x="10320" fg:w="72"/><text x="9.6643%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (72 samples, 0.07%)</title><rect x="9.4143%" y="805" width="0.0657%" height="15" fill="rgb(209,117,53)" fg:x="10320" fg:w="72"/><text x="9.6643%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (75 samples, 0.07%)</title><rect x="9.4143%" y="853" width="0.0684%" height="15" fill="rgb(212,90,42)" fg:x="10320" fg:w="75"/><text x="9.6643%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (75 samples, 0.07%)</title><rect x="9.4143%" y="837" width="0.0684%" height="15" fill="rgb(218,164,37)" fg:x="10320" fg:w="75"/><text x="9.6643%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (86 samples, 0.08%)</title><rect x="9.4089%" y="869" width="0.0785%" height="15" fill="rgb(246,65,34)" fg:x="10314" fg:w="86"/><text x="9.6589%" y="879.50"></text></g><g><title>rust_dealloc (100 samples, 0.09%)</title><rect x="9.4034%" y="885" width="0.0912%" height="15" fill="rgb(231,100,33)" fg:x="10308" fg:w="100"/><text x="9.6534%" y="895.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (23 samples, 0.02%)</title><rect x="9.4955%" y="869" width="0.0210%" height="15" fill="rgb(228,126,14)" fg:x="10409" fg:w="23"/><text x="9.7455%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (170 samples, 0.16%)</title><rect x="9.3651%" y="901" width="0.1551%" height="15" fill="rgb(215,173,21)" fg:x="10266" fg:w="170"/><text x="9.6151%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (27 samples, 0.02%)</title><rect x="9.4955%" y="885" width="0.0246%" height="15" fill="rgb(210,6,40)" fg:x="10409" fg:w="27"/><text x="9.7455%" y="895.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (46 samples, 0.04%)</title><rect x="9.5375%" y="901" width="0.0420%" height="15" fill="rgb(212,48,18)" fg:x="10455" fg:w="46"/><text x="9.7875%" y="911.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (46 samples, 0.04%)</title><rect x="9.5375%" y="885" width="0.0420%" height="15" fill="rgb(230,214,11)" fg:x="10455" fg:w="46"/><text x="9.7875%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (46 samples, 0.04%)</title><rect x="9.5375%" y="869" width="0.0420%" height="15" fill="rgb(254,105,39)" fg:x="10455" fg:w="46"/><text x="9.7875%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (46 samples, 0.04%)</title><rect x="9.5375%" y="853" width="0.0420%" height="15" fill="rgb(245,158,5)" fg:x="10455" fg:w="46"/><text x="9.7875%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (22 samples, 0.02%)</title><rect x="9.5594%" y="837" width="0.0201%" height="15" fill="rgb(249,208,11)" fg:x="10479" fg:w="22"/><text x="9.8094%" y="847.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (22 samples, 0.02%)</title><rect x="9.5594%" y="821" width="0.0201%" height="15" fill="rgb(210,39,28)" fg:x="10479" fg:w="22"/><text x="9.8094%" y="831.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (22 samples, 0.02%)</title><rect x="9.5594%" y="805" width="0.0201%" height="15" fill="rgb(211,56,53)" fg:x="10479" fg:w="22"/><text x="9.8094%" y="815.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (21 samples, 0.02%)</title><rect x="9.5603%" y="789" width="0.0192%" height="15" fill="rgb(226,201,30)" fg:x="10480" fg:w="21"/><text x="9.8103%" y="799.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (12 samples, 0.01%)</title><rect x="9.5685%" y="773" width="0.0109%" height="15" fill="rgb(239,101,34)" fg:x="10489" fg:w="12"/><text x="9.8185%" y="783.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (13 samples, 0.01%)</title><rect x="9.5831%" y="901" width="0.0119%" height="15" fill="rgb(226,209,5)" fg:x="10505" fg:w="13"/><text x="9.8331%" y="911.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (3,893 samples, 3.55%)</title><rect x="6.0755%" y="981" width="3.5514%" height="15" fill="rgb(250,105,47)" fg:x="6660" fg:w="3893"/><text x="6.3255%" y="991.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,893 samples, 3.55%)</title><rect x="6.0755%" y="965" width="3.5514%" height="15" fill="rgb(230,72,3)" fg:x="6660" fg:w="3893"/><text x="6.3255%" y="975.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (2,876 samples, 2.62%)</title><rect x="7.0033%" y="949" width="2.6236%" height="15" fill="rgb(232,218,39)" fg:x="7677" fg:w="2876"/><text x="7.2533%" y="959.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,876 samples, 2.62%)</title><rect x="7.0033%" y="933" width="2.6236%" height="15" fill="rgb(248,166,6)" fg:x="7677" fg:w="2876"/><text x="7.2533%" y="943.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (2,851 samples, 2.60%)</title><rect x="7.0261%" y="917" width="2.6008%" height="15" fill="rgb(247,89,20)" fg:x="7702" fg:w="2851"/><text x="7.2761%" y="927.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (35 samples, 0.03%)</title><rect x="9.5950%" y="901" width="0.0319%" height="15" fill="rgb(248,130,54)" fg:x="10518" fg:w="35"/><text x="9.8450%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (35 samples, 0.03%)</title><rect x="9.5950%" y="885" width="0.0319%" height="15" fill="rgb(234,196,4)" fg:x="10518" fg:w="35"/><text x="9.8450%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (35 samples, 0.03%)</title><rect x="9.5950%" y="869" width="0.0319%" height="15" fill="rgb(250,143,31)" fg:x="10518" fg:w="35"/><text x="9.8450%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (28 samples, 0.03%)</title><rect x="9.6014%" y="853" width="0.0255%" height="15" fill="rgb(211,110,34)" fg:x="10525" fg:w="28"/><text x="9.8514%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (50 samples, 0.05%)</title><rect x="9.6999%" y="917" width="0.0456%" height="15" fill="rgb(215,124,48)" fg:x="10633" fg:w="50"/><text x="9.9499%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (45 samples, 0.04%)</title><rect x="9.7044%" y="901" width="0.0411%" height="15" fill="rgb(216,46,13)" fg:x="10638" fg:w="45"/><text x="9.9544%" y="911.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (799 samples, 0.73%)</title><rect x="9.6433%" y="933" width="0.7289%" height="15" fill="rgb(205,184,25)" fg:x="10571" fg:w="799"/><text x="9.8933%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (687 samples, 0.63%)</title><rect x="9.7455%" y="917" width="0.6267%" height="15" fill="rgb(228,1,10)" fg:x="10683" fg:w="687"/><text x="9.9955%" y="927.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,169 samples, 1.07%)</title><rect x="9.6269%" y="965" width="1.0664%" height="15" fill="rgb(213,116,27)" fg:x="10553" fg:w="1169"/><text x="9.8769%" y="975.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,169 samples, 1.07%)</title><rect x="9.6269%" y="949" width="1.0664%" height="15" fill="rgb(241,95,50)" fg:x="10553" fg:w="1169"/><text x="9.8769%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (352 samples, 0.32%)</title><rect x="10.3722%" y="933" width="0.3211%" height="15" fill="rgb(238,48,32)" fg:x="11370" fg:w="352"/><text x="10.6222%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,188 samples, 5.64%)</title><rect x="5.0712%" y="1125" width="5.6450%" height="15" fill="rgb(235,113,49)" fg:x="5559" fg:w="6188"/><text x="5.3212%" y="1135.50">&lt;core::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,076 samples, 5.54%)</title><rect x="5.1733%" y="1109" width="5.5428%" height="15" fill="rgb(205,127,43)" fg:x="5671" fg:w="6076"/><text x="5.4233%" y="1119.50">async_e..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,076 samples, 5.54%)</title><rect x="5.1733%" y="1093" width="5.5428%" height="15" fill="rgb(250,162,2)" fg:x="5671" fg:w="6076"/><text x="5.4233%" y="1103.50">&lt;async_..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,076 samples, 5.54%)</title><rect x="5.1733%" y="1077" width="5.5428%" height="15" fill="rgb(220,13,41)" fg:x="5671" fg:w="6076"/><text x="5.4233%" y="1087.50">async_s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,076 samples, 5.54%)</title><rect x="5.1733%" y="1061" width="5.5428%" height="15" fill="rgb(249,221,25)" fg:x="5671" fg:w="6076"/><text x="5.4233%" y="1071.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,076 samples, 5.54%)</title><rect x="5.1733%" y="1045" width="5.5428%" height="15" fill="rgb(215,208,19)" fg:x="5671" fg:w="6076"/><text x="5.4233%" y="1055.50">std::th..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,076 samples, 5.54%)</title><rect x="5.1733%" y="1029" width="5.5428%" height="15" fill="rgb(236,175,2)" fg:x="5671" fg:w="6076"/><text x="5.4233%" y="1039.50">async_s..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,076 samples, 5.54%)</title><rect x="5.1733%" y="1013" width="5.5428%" height="15" fill="rgb(241,52,2)" fg:x="5671" fg:w="6076"/><text x="5.4233%" y="1023.50">&lt;async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,076 samples, 5.54%)</title><rect x="5.1733%" y="997" width="5.5428%" height="15" fill="rgb(248,140,14)" fg:x="5671" fg:w="6076"/><text x="5.4233%" y="1007.50">&lt;core::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,194 samples, 1.09%)</title><rect x="9.6269%" y="981" width="1.0892%" height="15" fill="rgb(253,22,42)" fg:x="10553" fg:w="1194"/><text x="9.8769%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.02%)</title><rect x="10.6933%" y="965" width="0.0228%" height="15" fill="rgb(234,61,47)" fg:x="11722" fg:w="25"/><text x="10.9433%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (25 samples, 0.02%)</title><rect x="10.6933%" y="949" width="0.0228%" height="15" fill="rgb(208,226,15)" fg:x="11722" fg:w="25"/><text x="10.9433%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (25 samples, 0.02%)</title><rect x="10.6933%" y="933" width="0.0228%" height="15" fill="rgb(217,221,4)" fg:x="11722" fg:w="25"/><text x="10.9433%" y="943.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="10.6933%" y="917" width="0.0228%" height="15" fill="rgb(212,174,34)" fg:x="11722" fg:w="25"/><text x="10.9433%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (25 samples, 0.02%)</title><rect x="10.6933%" y="901" width="0.0228%" height="15" fill="rgb(253,83,4)" fg:x="11722" fg:w="25"/><text x="10.9433%" y="911.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="10.6933%" y="885" width="0.0228%" height="15" fill="rgb(250,195,49)" fg:x="11722" fg:w="25"/><text x="10.9433%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (16 samples, 0.01%)</title><rect x="10.7015%" y="869" width="0.0146%" height="15" fill="rgb(241,192,25)" fg:x="11731" fg:w="16"/><text x="10.9515%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.01%)</title><rect x="10.7015%" y="853" width="0.0146%" height="15" fill="rgb(208,124,10)" fg:x="11731" fg:w="16"/><text x="10.9515%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (45 samples, 0.04%)</title><rect x="10.7161%" y="1125" width="0.0411%" height="15" fill="rgb(222,33,0)" fg:x="11747" fg:w="45"/><text x="10.9661%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (15 samples, 0.01%)</title><rect x="10.7572%" y="1125" width="0.0137%" height="15" fill="rgb(234,209,28)" fg:x="11792" fg:w="15"/><text x="11.0072%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (29 samples, 0.03%)</title><rect x="10.7781%" y="1125" width="0.0265%" height="15" fill="rgb(224,11,23)" fg:x="11815" fg:w="29"/><text x="11.0281%" y="1135.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (11 samples, 0.01%)</title><rect x="10.8046%" y="1125" width="0.0100%" height="15" fill="rgb(232,99,1)" fg:x="11844" fg:w="11"/><text x="11.0546%" y="1135.50"></text></g><g><title>__GI___pthread_cond_signal (13 samples, 0.01%)</title><rect x="10.8238%" y="1125" width="0.0119%" height="15" fill="rgb(237,95,45)" fg:x="11865" fg:w="13"/><text x="11.0738%" y="1135.50"></text></g><g><title>__entry_text_start (13 samples, 0.01%)</title><rect x="10.8238%" y="1109" width="0.0119%" height="15" fill="rgb(208,109,11)" fg:x="11865" fg:w="13"/><text x="11.0738%" y="1119.50"></text></g><g><title>__clock_gettime_2 (77 samples, 0.07%)</title><rect x="10.8456%" y="1125" width="0.0702%" height="15" fill="rgb(216,190,48)" fg:x="11889" fg:w="77"/><text x="11.0956%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (131 samples, 0.12%)</title><rect x="10.9159%" y="1125" width="0.1195%" height="15" fill="rgb(251,171,36)" fg:x="11966" fg:w="131"/><text x="11.1659%" y="1135.50"></text></g><g><title>abi_stable::erased_types::iterator::next (37 samples, 0.03%)</title><rect x="11.0518%" y="1125" width="0.0338%" height="15" fill="rgb(230,62,22)" fg:x="12115" fg:w="37"/><text x="11.3018%" y="1135.50"></text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (12 samples, 0.01%)</title><rect x="11.0856%" y="1125" width="0.0109%" height="15" fill="rgb(225,114,35)" fg:x="12152" fg:w="12"/><text x="11.3356%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="11.1029%" y="1109" width="0.0146%" height="15" fill="rgb(215,118,42)" fg:x="12171" fg:w="16"/><text x="11.3529%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.01%)</title><rect x="11.1029%" y="1093" width="0.0146%" height="15" fill="rgb(243,119,21)" fg:x="12171" fg:w="16"/><text x="11.3529%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="11.1029%" y="1077" width="0.0146%" height="15" fill="rgb(252,177,53)" fg:x="12171" fg:w="16"/><text x="11.3529%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="11.1029%" y="1061" width="0.0146%" height="15" fill="rgb(237,209,29)" fg:x="12171" fg:w="16"/><text x="11.3529%" y="1071.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="11.1029%" y="1045" width="0.0146%" height="15" fill="rgb(212,65,23)" fg:x="12171" fg:w="16"/><text x="11.3529%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="11.1029%" y="1029" width="0.0146%" height="15" fill="rgb(230,222,46)" fg:x="12171" fg:w="16"/><text x="11.3529%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (42 samples, 0.04%)</title><rect x="11.0965%" y="1125" width="0.0383%" height="15" fill="rgb(215,135,32)" fg:x="12164" fg:w="42"/><text x="11.3465%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="11.1175%" y="1109" width="0.0173%" height="15" fill="rgb(246,101,22)" fg:x="12187" fg:w="19"/><text x="11.3675%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (19 samples, 0.02%)</title><rect x="11.1175%" y="1093" width="0.0173%" height="15" fill="rgb(206,107,13)" fg:x="12187" fg:w="19"/><text x="11.3675%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="11.1175%" y="1077" width="0.0173%" height="15" fill="rgb(250,100,44)" fg:x="12187" fg:w="19"/><text x="11.3675%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="11.1175%" y="1061" width="0.0173%" height="15" fill="rgb(231,147,38)" fg:x="12187" fg:w="19"/><text x="11.3675%" y="1071.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="11.1175%" y="1045" width="0.0173%" height="15" fill="rgb(229,8,40)" fg:x="12187" fg:w="19"/><text x="11.3675%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="11.1175%" y="1029" width="0.0173%" height="15" fill="rgb(221,135,30)" fg:x="12187" fg:w="19"/><text x="11.3675%" y="1039.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (16 samples, 0.01%)</title><rect x="11.1394%" y="1125" width="0.0146%" height="15" fill="rgb(249,193,18)" fg:x="12211" fg:w="16"/><text x="11.3894%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (12 samples, 0.01%)</title><rect x="11.1540%" y="1125" width="0.0109%" height="15" fill="rgb(209,133,39)" fg:x="12227" fg:w="12"/><text x="11.4040%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (38 samples, 0.03%)</title><rect x="11.1649%" y="1125" width="0.0347%" height="15" fill="rgb(232,100,14)" fg:x="12239" fg:w="38"/><text x="11.4149%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (14 samples, 0.01%)</title><rect x="11.1868%" y="1109" width="0.0128%" height="15" fill="rgb(224,185,1)" fg:x="12263" fg:w="14"/><text x="11.4368%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 0.01%)</title><rect x="11.1868%" y="1093" width="0.0128%" height="15" fill="rgb(223,139,8)" fg:x="12263" fg:w="14"/><text x="11.4368%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.01%)</title><rect x="11.1868%" y="1077" width="0.0128%" height="15" fill="rgb(232,213,38)" fg:x="12263" fg:w="14"/><text x="11.4368%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.01%)</title><rect x="11.1868%" y="1061" width="0.0128%" height="15" fill="rgb(207,94,22)" fg:x="12263" fg:w="14"/><text x="11.4368%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.01%)</title><rect x="11.1868%" y="1045" width="0.0128%" height="15" fill="rgb(219,183,54)" fg:x="12263" fg:w="14"/><text x="11.4368%" y="1055.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="11.1868%" y="1029" width="0.0128%" height="15" fill="rgb(216,185,54)" fg:x="12263" fg:w="14"/><text x="11.4368%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (14 samples, 0.01%)</title><rect x="11.1868%" y="1013" width="0.0128%" height="15" fill="rgb(254,217,39)" fg:x="12263" fg:w="14"/><text x="11.4368%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (14 samples, 0.01%)</title><rect x="11.1868%" y="997" width="0.0128%" height="15" fill="rgb(240,178,23)" fg:x="12263" fg:w="14"/><text x="11.4368%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 0.01%)</title><rect x="11.1868%" y="981" width="0.0128%" height="15" fill="rgb(218,11,47)" fg:x="12263" fg:w="14"/><text x="11.4368%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.01%)</title><rect x="11.1868%" y="965" width="0.0128%" height="15" fill="rgb(218,51,51)" fg:x="12263" fg:w="14"/><text x="11.4368%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.01%)</title><rect x="11.1868%" y="949" width="0.0128%" height="15" fill="rgb(238,126,27)" fg:x="12263" fg:w="14"/><text x="11.4368%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.01%)</title><rect x="11.1868%" y="933" width="0.0128%" height="15" fill="rgb(249,202,22)" fg:x="12263" fg:w="14"/><text x="11.4368%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="11.2379%" y="1061" width="0.0128%" height="15" fill="rgb(254,195,49)" fg:x="12319" fg:w="14"/><text x="11.4879%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (14 samples, 0.01%)</title><rect x="11.2379%" y="1045" width="0.0128%" height="15" fill="rgb(208,123,14)" fg:x="12319" fg:w="14"/><text x="11.4879%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (14 samples, 0.01%)</title><rect x="11.2379%" y="1029" width="0.0128%" height="15" fill="rgb(224,200,8)" fg:x="12319" fg:w="14"/><text x="11.4879%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="11.2379%" y="1013" width="0.0128%" height="15" fill="rgb(217,61,36)" fg:x="12319" fg:w="14"/><text x="11.4879%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="11.2379%" y="997" width="0.0128%" height="15" fill="rgb(206,35,45)" fg:x="12319" fg:w="14"/><text x="11.4879%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (19 samples, 0.02%)</title><rect x="11.2379%" y="1077" width="0.0173%" height="15" fill="rgb(217,65,33)" fg:x="12319" fg:w="19"/><text x="11.4879%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (68 samples, 0.06%)</title><rect x="11.1996%" y="1125" width="0.0620%" height="15" fill="rgb(222,158,48)" fg:x="12277" fg:w="68"/><text x="11.4496%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (36 samples, 0.03%)</title><rect x="11.2288%" y="1109" width="0.0328%" height="15" fill="rgb(254,2,54)" fg:x="12309" fg:w="36"/><text x="11.4788%" y="1119.50"></text></g><g><title>core::mem::drop (36 samples, 0.03%)</title><rect x="11.2288%" y="1093" width="0.0328%" height="15" fill="rgb(250,143,38)" fg:x="12309" fg:w="36"/><text x="11.4788%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (15 samples, 0.01%)</title><rect x="11.2616%" y="1125" width="0.0137%" height="15" fill="rgb(248,25,0)" fg:x="12345" fg:w="15"/><text x="11.5116%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="11.2616%" y="1109" width="0.0137%" height="15" fill="rgb(206,152,27)" fg:x="12345" fg:w="15"/><text x="11.5116%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="11.2616%" y="1093" width="0.0137%" height="15" fill="rgb(240,77,30)" fg:x="12345" fg:w="15"/><text x="11.5116%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (15 samples, 0.01%)</title><rect x="11.2616%" y="1077" width="0.0137%" height="15" fill="rgb(231,5,3)" fg:x="12345" fg:w="15"/><text x="11.5116%" y="1087.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (49 samples, 0.04%)</title><rect x="11.2753%" y="1125" width="0.0447%" height="15" fill="rgb(207,226,32)" fg:x="12360" fg:w="49"/><text x="11.5253%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="11.3072%" y="1109" width="0.0128%" height="15" fill="rgb(222,207,47)" fg:x="12395" fg:w="14"/><text x="11.5572%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}}&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="11.3209%" y="1061" width="0.0100%" height="15" fill="rgb(229,115,45)" fg:x="12410" fg:w="11"/><text x="11.5709%" y="1071.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="11.3209%" y="1045" width="0.0100%" height="15" fill="rgb(224,191,6)" fg:x="12410" fg:w="11"/><text x="11.5709%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="11.3209%" y="1029" width="0.0100%" height="15" fill="rgb(230,227,24)" fg:x="12410" fg:w="11"/><text x="11.5709%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="11.3209%" y="1013" width="0.0100%" height="15" fill="rgb(228,80,19)" fg:x="12410" fg:w="11"/><text x="11.5709%" y="1023.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="11.3209%" y="997" width="0.0100%" height="15" fill="rgb(247,229,0)" fg:x="12410" fg:w="11"/><text x="11.5709%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="11.3209%" y="981" width="0.0100%" height="15" fill="rgb(237,194,15)" fg:x="12410" fg:w="11"/><text x="11.5709%" y="991.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (18 samples, 0.02%)</title><rect x="11.3209%" y="1125" width="0.0164%" height="15" fill="rgb(219,203,20)" fg:x="12410" fg:w="18"/><text x="11.5709%" y="1135.50"></text></g><g><title>async_ffi::DropBomb::with (18 samples, 0.02%)</title><rect x="11.3209%" y="1109" width="0.0164%" height="15" fill="rgb(234,128,8)" fg:x="12410" fg:w="18"/><text x="11.5709%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (18 samples, 0.02%)</title><rect x="11.3209%" y="1093" width="0.0164%" height="15" fill="rgb(248,202,8)" fg:x="12410" fg:w="18"/><text x="11.5709%" y="1103.50"></text></g><g><title>core::mem::drop (18 samples, 0.02%)</title><rect x="11.3209%" y="1077" width="0.0164%" height="15" fill="rgb(206,104,37)" fg:x="12410" fg:w="18"/><text x="11.5709%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (25 samples, 0.02%)</title><rect x="11.3373%" y="1125" width="0.0228%" height="15" fill="rgb(223,8,27)" fg:x="12428" fg:w="25"/><text x="11.5873%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.04%)</title><rect x="11.4140%" y="517" width="0.0447%" height="15" fill="rgb(216,217,28)" fg:x="12512" fg:w="49"/><text x="11.6640%" y="527.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="11.7105%" y="501" width="0.0265%" height="15" fill="rgb(249,199,1)" fg:x="12837" fg:w="29"/><text x="11.9605%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (22 samples, 0.02%)</title><rect x="11.7588%" y="485" width="0.0201%" height="15" fill="rgb(240,85,17)" fg:x="12890" fg:w="22"/><text x="12.0088%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (22 samples, 0.02%)</title><rect x="11.7588%" y="469" width="0.0201%" height="15" fill="rgb(206,108,45)" fg:x="12890" fg:w="22"/><text x="12.0088%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (22 samples, 0.02%)</title><rect x="11.7588%" y="453" width="0.0201%" height="15" fill="rgb(245,210,41)" fg:x="12890" fg:w="22"/><text x="12.0088%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (22 samples, 0.02%)</title><rect x="11.7588%" y="437" width="0.0201%" height="15" fill="rgb(206,13,37)" fg:x="12890" fg:w="22"/><text x="12.0088%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="11.7588%" y="421" width="0.0201%" height="15" fill="rgb(250,61,18)" fg:x="12890" fg:w="22"/><text x="12.0088%" y="431.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (56 samples, 0.05%)</title><rect x="11.7369%" y="501" width="0.0511%" height="15" fill="rgb(235,172,48)" fg:x="12866" fg:w="56"/><text x="11.9869%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::deref::Deref for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::deref (22 samples, 0.02%)</title><rect x="11.7880%" y="501" width="0.0201%" height="15" fill="rgb(249,201,17)" fg:x="12922" fg:w="22"/><text x="12.0380%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (22 samples, 0.02%)</title><rect x="11.7880%" y="485" width="0.0201%" height="15" fill="rgb(219,208,6)" fg:x="12922" fg:w="22"/><text x="12.0380%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="11.8172%" y="437" width="0.0192%" height="15" fill="rgb(248,31,23)" fg:x="12954" fg:w="21"/><text x="12.0672%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (26 samples, 0.02%)</title><rect x="11.8172%" y="501" width="0.0237%" height="15" fill="rgb(245,15,42)" fg:x="12954" fg:w="26"/><text x="12.0672%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (26 samples, 0.02%)</title><rect x="11.8172%" y="485" width="0.0237%" height="15" fill="rgb(222,217,39)" fg:x="12954" fg:w="26"/><text x="12.0672%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.02%)</title><rect x="11.8172%" y="469" width="0.0237%" height="15" fill="rgb(210,219,27)" fg:x="12954" fg:w="26"/><text x="12.0672%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.02%)</title><rect x="11.8172%" y="453" width="0.0237%" height="15" fill="rgb(252,166,36)" fg:x="12954" fg:w="26"/><text x="12.0672%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (30 samples, 0.03%)</title><rect x="11.9586%" y="197" width="0.0274%" height="15" fill="rgb(245,132,34)" fg:x="13109" fg:w="30"/><text x="12.2086%" y="207.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (29 samples, 0.03%)</title><rect x="11.9595%" y="181" width="0.0265%" height="15" fill="rgb(236,54,3)" fg:x="13110" fg:w="29"/><text x="12.2095%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (92 samples, 0.08%)</title><rect x="11.9075%" y="245" width="0.0839%" height="15" fill="rgb(241,173,43)" fg:x="13053" fg:w="92"/><text x="12.1575%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (92 samples, 0.08%)</title><rect x="11.9075%" y="229" width="0.0839%" height="15" fill="rgb(215,190,9)" fg:x="13053" fg:w="92"/><text x="12.1575%" y="239.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (74 samples, 0.07%)</title><rect x="11.9239%" y="213" width="0.0675%" height="15" fill="rgb(242,101,16)" fg:x="13071" fg:w="74"/><text x="12.1739%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (118 samples, 0.11%)</title><rect x="11.9020%" y="277" width="0.1076%" height="15" fill="rgb(223,190,21)" fg:x="13047" fg:w="118"/><text x="12.1520%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (118 samples, 0.11%)</title><rect x="11.9020%" y="261" width="0.1076%" height="15" fill="rgb(215,228,25)" fg:x="13047" fg:w="118"/><text x="12.1520%" y="271.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (20 samples, 0.02%)</title><rect x="11.9914%" y="245" width="0.0182%" height="15" fill="rgb(225,36,22)" fg:x="13145" fg:w="20"/><text x="12.2414%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (121 samples, 0.11%)</title><rect x="11.9020%" y="309" width="0.1104%" height="15" fill="rgb(251,106,46)" fg:x="13047" fg:w="121"/><text x="12.1520%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (121 samples, 0.11%)</title><rect x="11.9020%" y="293" width="0.1104%" height="15" fill="rgb(208,90,1)" fg:x="13047" fg:w="121"/><text x="12.1520%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (131 samples, 0.12%)</title><rect x="11.8993%" y="325" width="0.1195%" height="15" fill="rgb(243,10,4)" fg:x="13044" fg:w="131"/><text x="12.1493%" y="335.50"></text></g><g><title>rust_dealloc (137 samples, 0.12%)</title><rect x="11.8956%" y="341" width="0.1250%" height="15" fill="rgb(212,137,27)" fg:x="13040" fg:w="137"/><text x="12.1456%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (25 samples, 0.02%)</title><rect x="12.0252%" y="325" width="0.0228%" height="15" fill="rgb(231,220,49)" fg:x="13182" fg:w="25"/><text x="12.2752%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (209 samples, 0.19%)</title><rect x="11.8619%" y="405" width="0.1907%" height="15" fill="rgb(237,96,20)" fg:x="13003" fg:w="209"/><text x="12.1119%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (206 samples, 0.19%)</title><rect x="11.8646%" y="389" width="0.1879%" height="15" fill="rgb(239,229,30)" fg:x="13006" fg:w="206"/><text x="12.1146%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (191 samples, 0.17%)</title><rect x="11.8783%" y="373" width="0.1742%" height="15" fill="rgb(219,65,33)" fg:x="13021" fg:w="191"/><text x="12.1283%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (191 samples, 0.17%)</title><rect x="11.8783%" y="357" width="0.1742%" height="15" fill="rgb(243,134,7)" fg:x="13021" fg:w="191"/><text x="12.1283%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (35 samples, 0.03%)</title><rect x="12.0206%" y="341" width="0.0319%" height="15" fill="rgb(216,177,54)" fg:x="13177" fg:w="35"/><text x="12.2706%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (236 samples, 0.22%)</title><rect x="11.8500%" y="469" width="0.2153%" height="15" fill="rgb(211,160,20)" fg:x="12990" fg:w="236"/><text x="12.1000%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (230 samples, 0.21%)</title><rect x="11.8555%" y="453" width="0.2098%" height="15" fill="rgb(239,85,39)" fg:x="12996" fg:w="230"/><text x="12.1055%" y="463.50"></text></g><g><title>core::mem::drop (223 samples, 0.20%)</title><rect x="11.8619%" y="437" width="0.2034%" height="15" fill="rgb(232,125,22)" fg:x="13003" fg:w="223"/><text x="12.1119%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (223 samples, 0.20%)</title><rect x="11.8619%" y="421" width="0.2034%" height="15" fill="rgb(244,57,34)" fg:x="13003" fg:w="223"/><text x="12.1119%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="12.0525%" y="405" width="0.0128%" height="15" fill="rgb(214,203,32)" fg:x="13212" fg:w="14"/><text x="12.3025%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="12.0525%" y="389" width="0.0128%" height="15" fill="rgb(207,58,43)" fg:x="13212" fg:w="14"/><text x="12.3025%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="12.0525%" y="373" width="0.0128%" height="15" fill="rgb(215,193,15)" fg:x="13212" fg:w="14"/><text x="12.3025%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="12.0525%" y="357" width="0.0128%" height="15" fill="rgb(232,15,44)" fg:x="13212" fg:w="14"/><text x="12.3025%" y="367.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="12.0525%" y="341" width="0.0128%" height="15" fill="rgb(212,3,48)" fg:x="13212" fg:w="14"/><text x="12.3025%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="12.0525%" y="325" width="0.0128%" height="15" fill="rgb(218,128,7)" fg:x="13212" fg:w="14"/><text x="12.3025%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (18 samples, 0.02%)</title><rect x="12.0799%" y="373" width="0.0164%" height="15" fill="rgb(226,216,39)" fg:x="13242" fg:w="18"/><text x="12.3299%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (18 samples, 0.02%)</title><rect x="12.0799%" y="357" width="0.0164%" height="15" fill="rgb(243,47,51)" fg:x="13242" fg:w="18"/><text x="12.3299%" y="367.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (18 samples, 0.02%)</title><rect x="12.0799%" y="341" width="0.0164%" height="15" fill="rgb(241,183,40)" fg:x="13242" fg:w="18"/><text x="12.3299%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (33 samples, 0.03%)</title><rect x="12.0735%" y="405" width="0.0301%" height="15" fill="rgb(231,217,32)" fg:x="13235" fg:w="33"/><text x="12.3235%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (33 samples, 0.03%)</title><rect x="12.0735%" y="389" width="0.0301%" height="15" fill="rgb(229,61,38)" fg:x="13235" fg:w="33"/><text x="12.3235%" y="399.50"></text></g><g><title>rust_dealloc (46 samples, 0.04%)</title><rect x="12.0653%" y="469" width="0.0420%" height="15" fill="rgb(225,210,5)" fg:x="13226" fg:w="46"/><text x="12.3153%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (41 samples, 0.04%)</title><rect x="12.0699%" y="453" width="0.0374%" height="15" fill="rgb(231,79,45)" fg:x="13231" fg:w="41"/><text x="12.3199%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (37 samples, 0.03%)</title><rect x="12.0735%" y="437" width="0.0338%" height="15" fill="rgb(224,100,7)" fg:x="13235" fg:w="37"/><text x="12.3235%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (37 samples, 0.03%)</title><rect x="12.0735%" y="421" width="0.0338%" height="15" fill="rgb(241,198,18)" fg:x="13235" fg:w="37"/><text x="12.3235%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (293 samples, 0.27%)</title><rect x="11.8409%" y="501" width="0.2673%" height="15" fill="rgb(252,97,53)" fg:x="12980" fg:w="293"/><text x="12.0909%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (293 samples, 0.27%)</title><rect x="11.8409%" y="485" width="0.2673%" height="15" fill="rgb(220,88,7)" fg:x="12980" fg:w="293"/><text x="12.0909%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (27 samples, 0.02%)</title><rect x="12.1310%" y="405" width="0.0246%" height="15" fill="rgb(213,176,14)" fg:x="13298" fg:w="27"/><text x="12.3810%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (27 samples, 0.02%)</title><rect x="12.1310%" y="389" width="0.0246%" height="15" fill="rgb(246,73,7)" fg:x="13298" fg:w="27"/><text x="12.3810%" y="399.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="12.1565%" y="389" width="0.0137%" height="15" fill="rgb(245,64,36)" fg:x="13326" fg:w="15"/><text x="12.4065%" y="399.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (16 samples, 0.01%)</title><rect x="12.2678%" y="277" width="0.0146%" height="15" fill="rgb(245,80,10)" fg:x="13448" fg:w="16"/><text x="12.5178%" y="287.50"></text></g><g><title> (16 samples, 0.01%)</title><rect x="12.2678%" y="261" width="0.0146%" height="15" fill="rgb(232,107,50)" fg:x="13448" fg:w="16"/><text x="12.5178%" y="271.50"></text></g><g><title>snmalloc::Remote::set_info (30 samples, 0.03%)</title><rect x="12.2824%" y="277" width="0.0274%" height="15" fill="rgb(253,3,0)" fg:x="13464" fg:w="30"/><text x="12.5324%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (125 samples, 0.11%)</title><rect x="12.2031%" y="309" width="0.1140%" height="15" fill="rgb(212,99,53)" fg:x="13377" fg:w="125"/><text x="12.4531%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (107 samples, 0.10%)</title><rect x="12.2195%" y="293" width="0.0976%" height="15" fill="rgb(249,111,54)" fg:x="13395" fg:w="107"/><text x="12.4695%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (156 samples, 0.14%)</title><rect x="12.1857%" y="341" width="0.1423%" height="15" fill="rgb(249,55,30)" fg:x="13358" fg:w="156"/><text x="12.4357%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (156 samples, 0.14%)</title><rect x="12.1857%" y="325" width="0.1423%" height="15" fill="rgb(237,47,42)" fg:x="13358" fg:w="156"/><text x="12.4357%" y="335.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="12.3171%" y="309" width="0.0109%" height="15" fill="rgb(211,20,18)" fg:x="13502" fg:w="12"/><text x="12.5671%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (168 samples, 0.15%)</title><rect x="12.1857%" y="373" width="0.1533%" height="15" fill="rgb(231,203,46)" fg:x="13358" fg:w="168"/><text x="12.4357%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (168 samples, 0.15%)</title><rect x="12.1857%" y="357" width="0.1533%" height="15" fill="rgb(237,142,3)" fg:x="13358" fg:w="168"/><text x="12.4357%" y="367.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="12.3280%" y="341" width="0.0109%" height="15" fill="rgb(241,107,1)" fg:x="13514" fg:w="12"/><text x="12.5780%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="12.3280%" y="325" width="0.0109%" height="15" fill="rgb(229,83,13)" fg:x="13514" fg:w="12"/><text x="12.5780%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="12.3280%" y="309" width="0.0109%" height="15" fill="rgb(241,91,40)" fg:x="13514" fg:w="12"/><text x="12.5780%" y="319.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="12.3280%" y="293" width="0.0109%" height="15" fill="rgb(225,3,45)" fg:x="13514" fg:w="12"/><text x="12.5780%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (201 samples, 0.18%)</title><rect x="12.1711%" y="389" width="0.1834%" height="15" fill="rgb(244,223,14)" fg:x="13342" fg:w="201"/><text x="12.4211%" y="399.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="12.3390%" y="373" width="0.0155%" height="15" fill="rgb(224,124,37)" fg:x="13526" fg:w="17"/><text x="12.5890%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="12.3390%" y="357" width="0.0155%" height="15" fill="rgb(251,171,30)" fg:x="13526" fg:w="17"/><text x="12.5890%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (17 samples, 0.02%)</title><rect x="12.3390%" y="341" width="0.0155%" height="15" fill="rgb(236,46,54)" fg:x="13526" fg:w="17"/><text x="12.5890%" y="351.50"></text></g><g><title>snmalloc::bits::align_down (17 samples, 0.02%)</title><rect x="12.3390%" y="325" width="0.0155%" height="15" fill="rgb(245,213,5)" fg:x="13526" fg:w="17"/><text x="12.5890%" y="335.50"></text></g><g><title>rust_dealloc (230 samples, 0.21%)</title><rect x="12.1556%" y="405" width="0.2098%" height="15" fill="rgb(230,144,27)" fg:x="13325" fg:w="230"/><text x="12.4056%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="12.3545%" y="389" width="0.0109%" height="15" fill="rgb(220,86,6)" fg:x="13543" fg:w="12"/><text x="12.6045%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (272 samples, 0.25%)</title><rect x="12.1182%" y="453" width="0.2481%" height="15" fill="rgb(240,20,13)" fg:x="13284" fg:w="272"/><text x="12.3682%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (272 samples, 0.25%)</title><rect x="12.1182%" y="437" width="0.2481%" height="15" fill="rgb(217,89,34)" fg:x="13284" fg:w="272"/><text x="12.3682%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (272 samples, 0.25%)</title><rect x="12.1182%" y="421" width="0.2481%" height="15" fill="rgb(229,13,5)" fg:x="13284" fg:w="272"/><text x="12.3682%" y="431.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="12.8097%" y="245" width="0.0100%" height="15" fill="rgb(244,67,35)" fg:x="14042" fg:w="11"/><text x="13.0597%" y="255.50"></text></g><g><title>rust_dealloc (24 samples, 0.02%)</title><rect x="12.8225%" y="181" width="0.0219%" height="15" fill="rgb(221,40,2)" fg:x="14056" fg:w="24"/><text x="13.0725%" y="191.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (30 samples, 0.03%)</title><rect x="12.9064%" y="149" width="0.0274%" height="15" fill="rgb(237,157,21)" fg:x="14148" fg:w="30"/><text x="13.1564%" y="159.50"></text></g><g><title> (30 samples, 0.03%)</title><rect x="12.9064%" y="133" width="0.0274%" height="15" fill="rgb(222,94,11)" fg:x="14148" fg:w="30"/><text x="13.1564%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (102 samples, 0.09%)</title><rect x="12.8508%" y="181" width="0.0930%" height="15" fill="rgb(249,113,6)" fg:x="14087" fg:w="102"/><text x="13.1008%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (92 samples, 0.08%)</title><rect x="12.8599%" y="165" width="0.0839%" height="15" fill="rgb(238,137,36)" fg:x="14097" fg:w="92"/><text x="13.1099%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (142 samples, 0.13%)</title><rect x="12.8207%" y="245" width="0.1295%" height="15" fill="rgb(210,102,26)" fg:x="14054" fg:w="142"/><text x="13.0707%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (142 samples, 0.13%)</title><rect x="12.8207%" y="229" width="0.1295%" height="15" fill="rgb(218,30,30)" fg:x="14054" fg:w="142"/><text x="13.0707%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (142 samples, 0.13%)</title><rect x="12.8207%" y="213" width="0.1295%" height="15" fill="rgb(214,67,26)" fg:x="14054" fg:w="142"/><text x="13.0707%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (142 samples, 0.13%)</title><rect x="12.8207%" y="197" width="0.1295%" height="15" fill="rgb(251,9,53)" fg:x="14054" fg:w="142"/><text x="13.0707%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (161 samples, 0.15%)</title><rect x="12.8097%" y="261" width="0.1469%" height="15" fill="rgb(228,204,25)" fg:x="14042" fg:w="161"/><text x="13.0597%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (627 samples, 0.57%)</title><rect x="12.3901%" y="357" width="0.5720%" height="15" fill="rgb(207,153,8)" fg:x="13582" fg:w="627"/><text x="12.6401%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (624 samples, 0.57%)</title><rect x="12.3928%" y="341" width="0.5692%" height="15" fill="rgb(242,9,16)" fg:x="13585" fg:w="624"/><text x="12.6428%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (610 samples, 0.56%)</title><rect x="12.4056%" y="325" width="0.5565%" height="15" fill="rgb(217,211,10)" fg:x="13599" fg:w="610"/><text x="12.6556%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (610 samples, 0.56%)</title><rect x="12.4056%" y="309" width="0.5565%" height="15" fill="rgb(219,228,52)" fg:x="13599" fg:w="610"/><text x="12.6556%" y="319.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (610 samples, 0.56%)</title><rect x="12.4056%" y="293" width="0.5565%" height="15" fill="rgb(231,92,29)" fg:x="13599" fg:w="610"/><text x="12.6556%" y="303.50"></text></g><g><title>rust_dealloc (176 samples, 0.16%)</title><rect x="12.8015%" y="277" width="0.1606%" height="15" fill="rgb(232,8,23)" fg:x="14033" fg:w="176"/><text x="13.0515%" y="287.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (668 samples, 0.61%)</title><rect x="12.3673%" y="421" width="0.6094%" height="15" fill="rgb(216,211,34)" fg:x="13557" fg:w="668"/><text x="12.6173%" y="431.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (664 samples, 0.61%)</title><rect x="12.3709%" y="405" width="0.6057%" height="15" fill="rgb(236,151,0)" fg:x="13561" fg:w="664"/><text x="12.6209%" y="415.50"></text></g><g><title>core::mem::drop (643 samples, 0.59%)</title><rect x="12.3901%" y="389" width="0.5866%" height="15" fill="rgb(209,168,3)" fg:x="13582" fg:w="643"/><text x="12.6401%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (643 samples, 0.59%)</title><rect x="12.3901%" y="373" width="0.5866%" height="15" fill="rgb(208,129,28)" fg:x="13582" fg:w="643"/><text x="12.6401%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (16 samples, 0.01%)</title><rect x="12.9621%" y="357" width="0.0146%" height="15" fill="rgb(229,78,22)" fg:x="14209" fg:w="16"/><text x="13.2121%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="12.9621%" y="341" width="0.0146%" height="15" fill="rgb(228,187,13)" fg:x="14209" fg:w="16"/><text x="13.2121%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="12.9621%" y="325" width="0.0146%" height="15" fill="rgb(240,119,24)" fg:x="14209" fg:w="16"/><text x="13.2121%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="12.9621%" y="309" width="0.0146%" height="15" fill="rgb(209,194,42)" fg:x="14209" fg:w="16"/><text x="13.2121%" y="319.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="12.9621%" y="293" width="0.0146%" height="15" fill="rgb(247,200,46)" fg:x="14209" fg:w="16"/><text x="13.2121%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="12.9621%" y="277" width="0.0146%" height="15" fill="rgb(218,76,16)" fg:x="14209" fg:w="16"/><text x="13.2121%" y="287.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="12.9766%" y="405" width="0.0100%" height="15" fill="rgb(225,21,48)" fg:x="14225" fg:w="11"/><text x="13.2266%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (46 samples, 0.04%)</title><rect x="13.0104%" y="325" width="0.0420%" height="15" fill="rgb(239,223,50)" fg:x="14262" fg:w="46"/><text x="13.2604%" y="335.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (37 samples, 0.03%)</title><rect x="13.0186%" y="309" width="0.0338%" height="15" fill="rgb(244,45,21)" fg:x="14271" fg:w="37"/><text x="13.2686%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (64 samples, 0.06%)</title><rect x="12.9995%" y="357" width="0.0584%" height="15" fill="rgb(232,33,43)" fg:x="14250" fg:w="64"/><text x="13.2495%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (64 samples, 0.06%)</title><rect x="12.9995%" y="341" width="0.0584%" height="15" fill="rgb(209,8,3)" fg:x="14250" fg:w="64"/><text x="13.2495%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (87 samples, 0.08%)</title><rect x="12.9867%" y="405" width="0.0794%" height="15" fill="rgb(214,25,53)" fg:x="14236" fg:w="87"/><text x="13.2367%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (73 samples, 0.07%)</title><rect x="12.9995%" y="389" width="0.0666%" height="15" fill="rgb(254,186,54)" fg:x="14250" fg:w="73"/><text x="13.2495%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (73 samples, 0.07%)</title><rect x="12.9995%" y="373" width="0.0666%" height="15" fill="rgb(208,174,49)" fg:x="14250" fg:w="73"/><text x="13.2495%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,047 samples, 0.96%)</title><rect x="12.1118%" y="485" width="0.9551%" height="15" fill="rgb(233,191,51)" fg:x="13277" fg:w="1047"/><text x="12.3618%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,040 samples, 0.95%)</title><rect x="12.1182%" y="469" width="0.9487%" height="15" fill="rgb(222,134,10)" fg:x="13284" fg:w="1040"/><text x="12.3682%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (768 samples, 0.70%)</title><rect x="12.3664%" y="453" width="0.7006%" height="15" fill="rgb(230,226,20)" fg:x="13556" fg:w="768"/><text x="12.6164%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (768 samples, 0.70%)</title><rect x="12.3664%" y="437" width="0.7006%" height="15" fill="rgb(251,111,25)" fg:x="13556" fg:w="768"/><text x="12.6164%" y="447.50"></text></g><g><title>rust_dealloc (99 samples, 0.09%)</title><rect x="12.9766%" y="421" width="0.0903%" height="15" fill="rgb(224,40,46)" fg:x="14225" fg:w="99"/><text x="13.2266%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (12 samples, 0.01%)</title><rect x="13.0670%" y="485" width="0.0109%" height="15" fill="rgb(236,108,47)" fg:x="14324" fg:w="12"/><text x="13.3170%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (12 samples, 0.01%)</title><rect x="13.0670%" y="469" width="0.0109%" height="15" fill="rgb(234,93,0)" fg:x="14324" fg:w="12"/><text x="13.3170%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (12 samples, 0.01%)</title><rect x="13.0670%" y="453" width="0.0109%" height="15" fill="rgb(224,213,32)" fg:x="14324" fg:w="12"/><text x="13.3170%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (12 samples, 0.01%)</title><rect x="13.0670%" y="437" width="0.0109%" height="15" fill="rgb(251,11,48)" fg:x="14324" fg:w="12"/><text x="13.3170%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (12 samples, 0.01%)</title><rect x="13.0670%" y="421" width="0.0109%" height="15" fill="rgb(236,173,5)" fg:x="14324" fg:w="12"/><text x="13.3170%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (16 samples, 0.01%)</title><rect x="13.0779%" y="485" width="0.0146%" height="15" fill="rgb(230,95,12)" fg:x="14336" fg:w="16"/><text x="13.3279%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (16 samples, 0.01%)</title><rect x="13.0779%" y="469" width="0.0146%" height="15" fill="rgb(232,209,1)" fg:x="14336" fg:w="16"/><text x="13.3279%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="13.0779%" y="453" width="0.0146%" height="15" fill="rgb(232,6,1)" fg:x="14336" fg:w="16"/><text x="13.3279%" y="463.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (16 samples, 0.01%)</title><rect x="13.0779%" y="437" width="0.0146%" height="15" fill="rgb(210,224,50)" fg:x="14336" fg:w="16"/><text x="13.3279%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (357 samples, 0.33%)</title><rect x="13.2239%" y="389" width="0.3257%" height="15" fill="rgb(228,127,35)" fg:x="14496" fg:w="357"/><text x="13.4739%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (357 samples, 0.33%)</title><rect x="13.2239%" y="373" width="0.3257%" height="15" fill="rgb(245,102,45)" fg:x="14496" fg:w="357"/><text x="13.4739%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (357 samples, 0.33%)</title><rect x="13.2239%" y="357" width="0.3257%" height="15" fill="rgb(214,1,49)" fg:x="14496" fg:w="357"/><text x="13.4739%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (357 samples, 0.33%)</title><rect x="13.2239%" y="341" width="0.3257%" height="15" fill="rgb(226,163,40)" fg:x="14496" fg:w="357"/><text x="13.4739%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (357 samples, 0.33%)</title><rect x="13.2239%" y="325" width="0.3257%" height="15" fill="rgb(239,212,28)" fg:x="14496" fg:w="357"/><text x="13.4739%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (345 samples, 0.31%)</title><rect x="13.2348%" y="309" width="0.3147%" height="15" fill="rgb(220,20,13)" fg:x="14508" fg:w="345"/><text x="13.4848%" y="319.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (379 samples, 0.35%)</title><rect x="13.2129%" y="405" width="0.3457%" height="15" fill="rgb(210,164,35)" fg:x="14484" fg:w="379"/><text x="13.4629%" y="415.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="13.5979%" y="277" width="0.0164%" height="15" fill="rgb(248,109,41)" fg:x="14906" fg:w="18"/><text x="13.8479%" y="287.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="13.5979%" y="261" width="0.0164%" height="15" fill="rgb(238,23,50)" fg:x="14906" fg:w="18"/><text x="13.8479%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (48 samples, 0.04%)</title><rect x="13.5815%" y="309" width="0.0438%" height="15" fill="rgb(211,48,49)" fg:x="14888" fg:w="48"/><text x="13.8315%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (41 samples, 0.04%)</title><rect x="13.5878%" y="293" width="0.0374%" height="15" fill="rgb(223,36,21)" fg:x="14895" fg:w="41"/><text x="13.8378%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="13.6152%" y="277" width="0.0100%" height="15" fill="rgb(207,123,46)" fg:x="14925" fg:w="11"/><text x="13.8652%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (60 samples, 0.05%)</title><rect x="13.5714%" y="341" width="0.0547%" height="15" fill="rgb(240,218,32)" fg:x="14877" fg:w="60"/><text x="13.8214%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (60 samples, 0.05%)</title><rect x="13.5714%" y="325" width="0.0547%" height="15" fill="rgb(252,5,43)" fg:x="14877" fg:w="60"/><text x="13.8214%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (62 samples, 0.06%)</title><rect x="13.5714%" y="373" width="0.0566%" height="15" fill="rgb(252,84,19)" fg:x="14877" fg:w="62"/><text x="13.8214%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (62 samples, 0.06%)</title><rect x="13.5714%" y="357" width="0.0566%" height="15" fill="rgb(243,152,39)" fg:x="14877" fg:w="62"/><text x="13.8214%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (75 samples, 0.07%)</title><rect x="13.5650%" y="389" width="0.0684%" height="15" fill="rgb(234,160,15)" fg:x="14870" fg:w="75"/><text x="13.8150%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (579 samples, 0.53%)</title><rect x="13.1071%" y="453" width="0.5282%" height="15" fill="rgb(237,34,20)" fg:x="14368" fg:w="579"/><text x="13.3571%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (579 samples, 0.53%)</title><rect x="13.1071%" y="437" width="0.5282%" height="15" fill="rgb(229,97,13)" fg:x="14368" fg:w="579"/><text x="13.3571%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (579 samples, 0.53%)</title><rect x="13.1071%" y="421" width="0.5282%" height="15" fill="rgb(234,71,50)" fg:x="14368" fg:w="579"/><text x="13.3571%" y="431.50"></text></g><g><title>rust_dealloc (84 samples, 0.08%)</title><rect x="13.5587%" y="405" width="0.0766%" height="15" fill="rgb(253,155,4)" fg:x="14863" fg:w="84"/><text x="13.8087%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (604 samples, 0.55%)</title><rect x="13.0925%" y="469" width="0.5510%" height="15" fill="rgb(222,185,37)" fg:x="14352" fg:w="604"/><text x="13.3425%" y="479.50"></text></g><g><title>abi_stable::std_types::arc::private::RArc&lt;T&gt;::data (368 samples, 0.34%)</title><rect x="13.6928%" y="309" width="0.3357%" height="15" fill="rgb(251,177,13)" fg:x="15010" fg:w="368"/><text x="13.9428%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="14.0367%" y="181" width="0.0128%" height="15" fill="rgb(250,179,40)" fg:x="15387" fg:w="14"/><text x="14.2867%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="14.0367%" y="165" width="0.0128%" height="15" fill="rgb(242,44,2)" fg:x="15387" fg:w="14"/><text x="14.2867%" y="175.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="14.0367%" y="149" width="0.0128%" height="15" fill="rgb(216,177,13)" fg:x="15387" fg:w="14"/><text x="14.2867%" y="159.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="14.0367%" y="133" width="0.0128%" height="15" fill="rgb(216,106,43)" fg:x="15387" fg:w="14"/><text x="14.2867%" y="143.50"></text></g><g><title>core::mem::drop (514 samples, 0.47%)</title><rect x="14.0367%" y="229" width="0.4689%" height="15" fill="rgb(216,183,2)" fg:x="15387" fg:w="514"/><text x="14.2867%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (514 samples, 0.47%)</title><rect x="14.0367%" y="213" width="0.4689%" height="15" fill="rgb(249,75,3)" fg:x="15387" fg:w="514"/><text x="14.2867%" y="223.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (514 samples, 0.47%)</title><rect x="14.0367%" y="197" width="0.4689%" height="15" fill="rgb(219,67,39)" fg:x="15387" fg:w="514"/><text x="14.2867%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (498 samples, 0.45%)</title><rect x="14.0513%" y="181" width="0.4543%" height="15" fill="rgb(253,228,2)" fg:x="15403" fg:w="498"/><text x="14.3013%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_sub (498 samples, 0.45%)</title><rect x="14.0513%" y="165" width="0.4543%" height="15" fill="rgb(235,138,27)" fg:x="15403" fg:w="498"/><text x="14.3013%" y="175.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="14.5284%" y="165" width="0.0119%" height="15" fill="rgb(236,97,51)" fg:x="15926" fg:w="13"/><text x="14.7784%" y="175.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="14.5430%" y="85" width="0.0137%" height="15" fill="rgb(240,80,30)" fg:x="15942" fg:w="15"/><text x="14.7930%" y="95.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="14.6105%" y="53" width="0.0137%" height="15" fill="rgb(230,178,19)" fg:x="16016" fg:w="15"/><text x="14.8605%" y="63.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="14.6105%" y="37" width="0.0137%" height="15" fill="rgb(210,190,27)" fg:x="16016" fg:w="15"/><text x="14.8605%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (88 samples, 0.08%)</title><rect x="14.5594%" y="85" width="0.0803%" height="15" fill="rgb(222,107,31)" fg:x="15960" fg:w="88"/><text x="14.8094%" y="95.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (75 samples, 0.07%)</title><rect x="14.5712%" y="69" width="0.0684%" height="15" fill="rgb(216,127,34)" fg:x="15973" fg:w="75"/><text x="14.8212%" y="79.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="14.6296%" y="53" width="0.0100%" height="15" fill="rgb(234,116,52)" fg:x="16037" fg:w="11"/><text x="14.8796%" y="63.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (117 samples, 0.11%)</title><rect x="14.5430%" y="117" width="0.1067%" height="15" fill="rgb(222,124,15)" fg:x="15942" fg:w="117"/><text x="14.7930%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (117 samples, 0.11%)</title><rect x="14.5430%" y="101" width="0.1067%" height="15" fill="rgb(231,179,28)" fg:x="15942" fg:w="117"/><text x="14.7930%" y="111.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="14.6397%" y="85" width="0.0100%" height="15" fill="rgb(226,93,45)" fg:x="16048" fg:w="11"/><text x="14.8897%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (124 samples, 0.11%)</title><rect x="14.5430%" y="149" width="0.1131%" height="15" fill="rgb(215,8,51)" fg:x="15942" fg:w="124"/><text x="14.7930%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (124 samples, 0.11%)</title><rect x="14.5430%" y="133" width="0.1131%" height="15" fill="rgb(223,106,5)" fg:x="15942" fg:w="124"/><text x="14.7930%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (134 samples, 0.12%)</title><rect x="14.5402%" y="165" width="0.1222%" height="15" fill="rgb(250,191,5)" fg:x="15939" fg:w="134"/><text x="14.7902%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (699 samples, 0.64%)</title><rect x="14.0321%" y="245" width="0.6377%" height="15" fill="rgb(242,132,44)" fg:x="15382" fg:w="699"/><text x="14.2821%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (180 samples, 0.16%)</title><rect x="14.5056%" y="229" width="0.1642%" height="15" fill="rgb(251,152,29)" fg:x="15901" fg:w="180"/><text x="14.7556%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (180 samples, 0.16%)</title><rect x="14.5056%" y="213" width="0.1642%" height="15" fill="rgb(218,179,5)" fg:x="15901" fg:w="180"/><text x="14.7556%" y="223.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (180 samples, 0.16%)</title><rect x="14.5056%" y="197" width="0.1642%" height="15" fill="rgb(227,67,19)" fg:x="15901" fg:w="180"/><text x="14.7556%" y="207.50"></text></g><g><title>rust_dealloc (156 samples, 0.14%)</title><rect x="14.5275%" y="181" width="0.1423%" height="15" fill="rgb(233,119,31)" fg:x="15925" fg:w="156"/><text x="14.7775%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (740 samples, 0.68%)</title><rect x="14.6707%" y="245" width="0.6751%" height="15" fill="rgb(241,120,22)" fg:x="16082" fg:w="740"/><text x="14.9207%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_sub (740 samples, 0.68%)</title><rect x="14.6707%" y="229" width="0.6751%" height="15" fill="rgb(224,102,30)" fg:x="16082" fg:w="740"/><text x="14.9207%" y="239.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (13 samples, 0.01%)</title><rect x="15.4059%" y="117" width="0.0119%" height="15" fill="rgb(210,164,37)" fg:x="16888" fg:w="13"/><text x="15.6559%" y="127.50"></text></g><g><title> (13 samples, 0.01%)</title><rect x="15.4059%" y="101" width="0.0119%" height="15" fill="rgb(226,191,16)" fg:x="16888" fg:w="13"/><text x="15.6559%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (49 samples, 0.04%)</title><rect x="15.3841%" y="149" width="0.0447%" height="15" fill="rgb(214,40,45)" fg:x="16864" fg:w="49"/><text x="15.6341%" y="159.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (38 samples, 0.03%)</title><rect x="15.3941%" y="133" width="0.0347%" height="15" fill="rgb(244,29,26)" fg:x="16875" fg:w="38"/><text x="15.6441%" y="143.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="15.4178%" y="117" width="0.0109%" height="15" fill="rgb(216,16,5)" fg:x="16901" fg:w="12"/><text x="15.6678%" y="127.50"></text></g><g><title>rust_dealloc (93 samples, 0.08%)</title><rect x="15.3467%" y="245" width="0.0848%" height="15" fill="rgb(249,76,35)" fg:x="16823" fg:w="93"/><text x="15.5967%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (83 samples, 0.08%)</title><rect x="15.3558%" y="229" width="0.0757%" height="15" fill="rgb(207,11,44)" fg:x="16833" fg:w="83"/><text x="15.6058%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (64 samples, 0.06%)</title><rect x="15.3731%" y="213" width="0.0584%" height="15" fill="rgb(228,190,49)" fg:x="16852" fg:w="64"/><text x="15.6231%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (64 samples, 0.06%)</title><rect x="15.3731%" y="197" width="0.0584%" height="15" fill="rgb(214,173,12)" fg:x="16852" fg:w="64"/><text x="15.6231%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (64 samples, 0.06%)</title><rect x="15.3731%" y="181" width="0.0584%" height="15" fill="rgb(218,26,35)" fg:x="16852" fg:w="64"/><text x="15.6231%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (64 samples, 0.06%)</title><rect x="15.3731%" y="165" width="0.0584%" height="15" fill="rgb(220,200,19)" fg:x="16852" fg:w="64"/><text x="15.6231%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,946 samples, 1.78%)</title><rect x="13.6599%" y="373" width="1.7752%" height="15" fill="rgb(239,95,49)" fg:x="14974" fg:w="1946"/><text x="13.9099%" y="383.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (1,944 samples, 1.77%)</title><rect x="13.6617%" y="357" width="1.7734%" height="15" fill="rgb(235,85,53)" fg:x="14976" fg:w="1944"/><text x="13.9117%" y="367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,927 samples, 1.76%)</title><rect x="13.6772%" y="341" width="1.7579%" height="15" fill="rgb(233,133,31)" fg:x="14993" fg:w="1927"/><text x="13.9272%" y="351.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (1,927 samples, 1.76%)</title><rect x="13.6772%" y="325" width="1.7579%" height="15" fill="rgb(218,25,20)" fg:x="14993" fg:w="1927"/><text x="13.9272%" y="335.50"></text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (1,542 samples, 1.41%)</title><rect x="14.0285%" y="309" width="1.4067%" height="15" fill="rgb(252,210,38)" fg:x="15378" fg:w="1542"/><text x="14.2785%" y="319.50"></text></g><g><title>core::mem::drop (1,538 samples, 1.40%)</title><rect x="14.0321%" y="293" width="1.4030%" height="15" fill="rgb(242,134,21)" fg:x="15382" fg:w="1538"/><text x="14.2821%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,538 samples, 1.40%)</title><rect x="14.0321%" y="277" width="1.4030%" height="15" fill="rgb(213,28,48)" fg:x="15382" fg:w="1538"/><text x="14.2821%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,538 samples, 1.40%)</title><rect x="14.0321%" y="261" width="1.4030%" height="15" fill="rgb(250,196,2)" fg:x="15382" fg:w="1538"/><text x="14.2821%" y="271.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (1,969 samples, 1.80%)</title><rect x="13.6435%" y="437" width="1.7962%" height="15" fill="rgb(227,5,17)" fg:x="14956" fg:w="1969"/><text x="13.8935%" y="447.50">a..</text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (1,955 samples, 1.78%)</title><rect x="13.6563%" y="421" width="1.7834%" height="15" fill="rgb(221,226,24)" fg:x="14970" fg:w="1955"/><text x="13.9063%" y="431.50">a..</text></g><g><title>core::mem::drop (1,951 samples, 1.78%)</title><rect x="13.6599%" y="405" width="1.7798%" height="15" fill="rgb(211,5,48)" fg:x="14974" fg:w="1951"/><text x="13.9099%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (1,951 samples, 1.78%)</title><rect x="13.6599%" y="389" width="1.7798%" height="15" fill="rgb(219,150,6)" fg:x="14974" fg:w="1951"/><text x="13.9099%" y="399.50">c..</text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (11 samples, 0.01%)</title><rect x="15.4762%" y="309" width="0.0100%" height="15" fill="rgb(251,46,16)" fg:x="16965" fg:w="11"/><text x="15.7262%" y="319.50"></text></g><g><title> (11 samples, 0.01%)</title><rect x="15.4762%" y="293" width="0.0100%" height="15" fill="rgb(220,204,40)" fg:x="16965" fg:w="11"/><text x="15.7262%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (38 samples, 0.03%)</title><rect x="15.4552%" y="341" width="0.0347%" height="15" fill="rgb(211,85,2)" fg:x="16942" fg:w="38"/><text x="15.7052%" y="351.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (28 samples, 0.03%)</title><rect x="15.4643%" y="325" width="0.0255%" height="15" fill="rgb(229,17,7)" fg:x="16952" fg:w="28"/><text x="15.7143%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (49 samples, 0.04%)</title><rect x="15.4488%" y="373" width="0.0447%" height="15" fill="rgb(239,72,28)" fg:x="16935" fg:w="49"/><text x="15.6988%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (49 samples, 0.04%)</title><rect x="15.4488%" y="357" width="0.0447%" height="15" fill="rgb(230,47,54)" fg:x="16935" fg:w="49"/><text x="15.6988%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (59 samples, 0.05%)</title><rect x="15.4488%" y="405" width="0.0538%" height="15" fill="rgb(214,50,8)" fg:x="16935" fg:w="59"/><text x="15.6988%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (59 samples, 0.05%)</title><rect x="15.4488%" y="389" width="0.0538%" height="15" fill="rgb(216,198,43)" fg:x="16935" fg:w="59"/><text x="15.6988%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (64 samples, 0.06%)</title><rect x="15.4479%" y="421" width="0.0584%" height="15" fill="rgb(234,20,35)" fg:x="16934" fg:w="64"/><text x="15.6979%" y="431.50"></text></g><g><title>rust_dealloc (77 samples, 0.07%)</title><rect x="15.4397%" y="437" width="0.0702%" height="15" fill="rgb(254,45,19)" fg:x="16925" fg:w="77"/><text x="15.6897%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,047 samples, 1.87%)</title><rect x="13.6435%" y="469" width="1.8674%" height="15" fill="rgb(219,14,44)" fg:x="14956" fg:w="2047"/><text x="13.8935%" y="479.50">c..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (2,047 samples, 1.87%)</title><rect x="13.6435%" y="453" width="1.8674%" height="15" fill="rgb(217,220,26)" fg:x="14956" fg:w="2047"/><text x="13.8935%" y="463.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (23 samples, 0.02%)</title><rect x="15.5154%" y="453" width="0.0210%" height="15" fill="rgb(213,158,28)" fg:x="17008" fg:w="23"/><text x="15.7654%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="15.5382%" y="437" width="0.0137%" height="15" fill="rgb(252,51,52)" fg:x="17033" fg:w="15"/><text x="15.7882%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (15 samples, 0.01%)</title><rect x="15.5382%" y="421" width="0.0137%" height="15" fill="rgb(246,89,16)" fg:x="17033" fg:w="15"/><text x="15.7882%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (67 samples, 0.06%)</title><rect x="15.5109%" y="469" width="0.0611%" height="15" fill="rgb(216,158,49)" fg:x="17003" fg:w="67"/><text x="15.7609%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (39 samples, 0.04%)</title><rect x="15.5364%" y="453" width="0.0356%" height="15" fill="rgb(236,107,19)" fg:x="17031" fg:w="39"/><text x="15.7864%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::slices::private::RSlice&lt;u8&gt;,abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="15.5519%" y="437" width="0.0201%" height="15" fill="rgb(228,185,30)" fg:x="17048" fg:w="22"/><text x="15.8019%" y="447.50"></text></g><g><title>snmalloc::Remote::set_info (11 samples, 0.01%)</title><rect x="15.6158%" y="341" width="0.0100%" height="15" fill="rgb(246,134,8)" fg:x="17118" fg:w="11"/><text x="15.8658%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (39 samples, 0.04%)</title><rect x="15.5920%" y="373" width="0.0356%" height="15" fill="rgb(214,143,50)" fg:x="17092" fg:w="39"/><text x="15.8420%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (28 samples, 0.03%)</title><rect x="15.6021%" y="357" width="0.0255%" height="15" fill="rgb(228,75,8)" fg:x="17103" fg:w="28"/><text x="15.8521%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (50 samples, 0.05%)</title><rect x="15.5838%" y="437" width="0.0456%" height="15" fill="rgb(207,175,4)" fg:x="17083" fg:w="50"/><text x="15.8338%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (50 samples, 0.05%)</title><rect x="15.5838%" y="421" width="0.0456%" height="15" fill="rgb(205,108,24)" fg:x="17083" fg:w="50"/><text x="15.8338%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (50 samples, 0.05%)</title><rect x="15.5838%" y="405" width="0.0456%" height="15" fill="rgb(244,120,49)" fg:x="17083" fg:w="50"/><text x="15.8338%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (50 samples, 0.05%)</title><rect x="15.5838%" y="389" width="0.0456%" height="15" fill="rgb(223,47,38)" fg:x="17083" fg:w="50"/><text x="15.8338%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (63 samples, 0.06%)</title><rect x="15.5784%" y="453" width="0.0575%" height="15" fill="rgb(229,179,11)" fg:x="17077" fg:w="63"/><text x="15.8284%" y="463.50"></text></g><g><title>rust_dealloc (76 samples, 0.07%)</title><rect x="15.5720%" y="469" width="0.0693%" height="15" fill="rgb(231,122,1)" fg:x="17070" fg:w="76"/><text x="15.8220%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (3,874 samples, 3.53%)</title><rect x="12.1082%" y="501" width="3.5340%" height="15" fill="rgb(245,119,9)" fg:x="13273" fg:w="3874"/><text x="12.3582%" y="511.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (2,795 samples, 2.55%)</title><rect x="13.0925%" y="485" width="2.5497%" height="15" fill="rgb(241,163,25)" fg:x="14352" fg:w="2795"/><text x="13.3425%" y="495.50">co..</text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (17 samples, 0.02%)</title><rect x="15.7718%" y="421" width="0.0155%" height="15" fill="rgb(217,214,3)" fg:x="17289" fg:w="17"/><text x="16.0218%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (16 samples, 0.01%)</title><rect x="15.7727%" y="405" width="0.0146%" height="15" fill="rgb(240,86,28)" fg:x="17290" fg:w="16"/><text x="16.0227%" y="415.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (58 samples, 0.05%)</title><rect x="15.7444%" y="453" width="0.0529%" height="15" fill="rgb(215,47,9)" fg:x="17259" fg:w="58"/><text x="15.9944%" y="463.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (48 samples, 0.04%)</title><rect x="15.7535%" y="437" width="0.0438%" height="15" fill="rgb(252,25,45)" fg:x="17269" fg:w="48"/><text x="16.0035%" y="447.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::sub_bucket_for (11 samples, 0.01%)</title><rect x="15.7873%" y="421" width="0.0100%" height="15" fill="rgb(251,164,9)" fg:x="17306" fg:w="11"/><text x="16.0373%" y="431.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (175 samples, 0.16%)</title><rect x="15.6495%" y="501" width="0.1596%" height="15" fill="rgb(233,194,0)" fg:x="17155" fg:w="175"/><text x="15.8995%" y="511.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (171 samples, 0.16%)</title><rect x="15.6532%" y="485" width="0.1560%" height="15" fill="rgb(249,111,24)" fg:x="17159" fg:w="171"/><text x="15.9032%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (171 samples, 0.16%)</title><rect x="15.6532%" y="469" width="0.1560%" height="15" fill="rgb(250,223,3)" fg:x="17159" fg:w="171"/><text x="15.9032%" y="479.50"></text></g><g><title>snmalloc::Remote::set_info (25 samples, 0.02%)</title><rect x="15.8867%" y="373" width="0.0228%" height="15" fill="rgb(236,178,37)" fg:x="17415" fg:w="25"/><text x="16.1367%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (86 samples, 0.08%)</title><rect x="15.8347%" y="405" width="0.0785%" height="15" fill="rgb(241,158,50)" fg:x="17358" fg:w="86"/><text x="16.0847%" y="415.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (77 samples, 0.07%)</title><rect x="15.8429%" y="389" width="0.0702%" height="15" fill="rgb(213,121,41)" fg:x="17367" fg:w="77"/><text x="16.0929%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (104 samples, 0.09%)</title><rect x="15.8256%" y="437" width="0.0949%" height="15" fill="rgb(240,92,3)" fg:x="17348" fg:w="104"/><text x="16.0756%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (104 samples, 0.09%)</title><rect x="15.8256%" y="421" width="0.0949%" height="15" fill="rgb(205,123,3)" fg:x="17348" fg:w="104"/><text x="16.0756%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (106 samples, 0.10%)</title><rect x="15.8256%" y="469" width="0.0967%" height="15" fill="rgb(205,97,47)" fg:x="17348" fg:w="106"/><text x="16.0756%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (106 samples, 0.10%)</title><rect x="15.8256%" y="453" width="0.0967%" height="15" fill="rgb(247,152,14)" fg:x="17348" fg:w="106"/><text x="16.0756%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (131 samples, 0.12%)</title><rect x="15.8165%" y="485" width="0.1195%" height="15" fill="rgb(248,195,53)" fg:x="17338" fg:w="131"/><text x="16.0665%" y="495.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="15.9223%" y="469" width="0.0137%" height="15" fill="rgb(226,201,16)" fg:x="17454" fg:w="15"/><text x="16.1723%" y="479.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="15.9223%" y="453" width="0.0137%" height="15" fill="rgb(205,98,0)" fg:x="17454" fg:w="15"/><text x="16.1723%" y="463.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="15.9223%" y="437" width="0.0137%" height="15" fill="rgb(214,191,48)" fg:x="17454" fg:w="15"/><text x="16.1723%" y="447.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="15.9223%" y="421" width="0.0137%" height="15" fill="rgb(237,112,39)" fg:x="17454" fg:w="15"/><text x="16.1723%" y="431.50"></text></g><g><title>rust_dealloc (146 samples, 0.13%)</title><rect x="15.8092%" y="501" width="0.1332%" height="15" fill="rgb(247,203,27)" fg:x="17330" fg:w="146"/><text x="16.0592%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (54 samples, 0.05%)</title><rect x="16.0126%" y="437" width="0.0493%" height="15" fill="rgb(235,124,28)" fg:x="17553" fg:w="54"/><text x="16.2626%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::ge (54 samples, 0.05%)</title><rect x="16.0126%" y="421" width="0.0493%" height="15" fill="rgb(208,207,46)" fg:x="17553" fg:w="54"/><text x="16.2626%" y="431.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (54 samples, 0.05%)</title><rect x="16.0126%" y="405" width="0.0493%" height="15" fill="rgb(234,176,4)" fg:x="17553" fg:w="54"/><text x="16.2626%" y="415.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (54 samples, 0.05%)</title><rect x="16.0126%" y="389" width="0.0493%" height="15" fill="rgb(230,133,28)" fg:x="17553" fg:w="54"/><text x="16.2626%" y="399.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (54 samples, 0.05%)</title><rect x="16.0126%" y="373" width="0.0493%" height="15" fill="rgb(211,137,40)" fg:x="17553" fg:w="54"/><text x="16.2626%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (31 samples, 0.03%)</title><rect x="16.0336%" y="357" width="0.0283%" height="15" fill="rgb(254,35,13)" fg:x="17576" fg:w="31"/><text x="16.2836%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (128 samples, 0.12%)</title><rect x="15.9642%" y="469" width="0.1168%" height="15" fill="rgb(225,49,51)" fg:x="17500" fg:w="128"/><text x="16.2142%" y="479.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (128 samples, 0.12%)</title><rect x="15.9642%" y="453" width="0.1168%" height="15" fill="rgb(251,10,15)" fg:x="17500" fg:w="128"/><text x="16.2142%" y="463.50"></text></g><g><title>core::time::Duration::new (21 samples, 0.02%)</title><rect x="16.0619%" y="437" width="0.0192%" height="15" fill="rgb(228,207,15)" fg:x="17607" fg:w="21"/><text x="16.3119%" y="447.50"></text></g><g><title>std::time::SystemTime::duration_since (133 samples, 0.12%)</title><rect x="15.9642%" y="485" width="0.1213%" height="15" fill="rgb(241,99,19)" fg:x="17500" fg:w="133"/><text x="16.2142%" y="495.50"></text></g><g><title>tremor_common::time::nanotime (725 samples, 0.66%)</title><rect x="15.9423%" y="501" width="0.6614%" height="15" fill="rgb(207,104,49)" fg:x="17476" fg:w="725"/><text x="16.1923%" y="511.50"></text></g><g><title>std::time::SystemTime::now (568 samples, 0.52%)</title><rect x="16.0856%" y="485" width="0.5182%" height="15" fill="rgb(234,99,18)" fg:x="17633" fg:w="568"/><text x="16.3356%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (568 samples, 0.52%)</title><rect x="16.0856%" y="469" width="0.5182%" height="15" fill="rgb(213,191,49)" fg:x="17633" fg:w="568"/><text x="16.3356%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::now (568 samples, 0.52%)</title><rect x="16.0856%" y="453" width="0.5182%" height="15" fill="rgb(210,226,19)" fg:x="17633" fg:w="568"/><text x="16.3356%" y="463.50"></text></g><g><title>__clock_gettime_2 (482 samples, 0.44%)</title><rect x="16.1640%" y="437" width="0.4397%" height="15" fill="rgb(229,97,18)" fg:x="17719" fg:w="482"/><text x="16.4140%" y="447.50"></text></g><g><title>__vdso_clock_gettime (466 samples, 0.43%)</title><rect x="16.1786%" y="421" width="0.4251%" height="15" fill="rgb(211,167,15)" fg:x="17735" fg:w="466"/><text x="16.4286%" y="431.50"></text></g><g><title>[[vdso]] (284 samples, 0.26%)</title><rect x="16.3446%" y="405" width="0.2591%" height="15" fill="rgb(210,169,34)" fg:x="17917" fg:w="284"/><text x="16.5946%" y="415.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (188 samples, 0.17%)</title><rect x="16.6074%" y="485" width="0.1715%" height="15" fill="rgb(241,121,31)" fg:x="18205" fg:w="188"/><text x="16.8574%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (5,942 samples, 5.42%)</title><rect x="11.3702%" y="757" width="5.4205%" height="15" fill="rgb(232,40,11)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="767.50">tremor_..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,942 samples, 5.42%)</title><rect x="11.3702%" y="741" width="5.4205%" height="15" fill="rgb(205,86,26)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="751.50">&lt;async_..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,942 samples, 5.42%)</title><rect x="11.3702%" y="725" width="5.4205%" height="15" fill="rgb(231,126,28)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="735.50">&lt;async_..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (5,942 samples, 5.42%)</title><rect x="11.3702%" y="709" width="5.4205%" height="15" fill="rgb(219,221,18)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="719.50">&lt;core::..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,942 samples, 5.42%)</title><rect x="11.3702%" y="693" width="5.4205%" height="15" fill="rgb(211,40,0)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="703.50">&lt;async_..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (5,942 samples, 5.42%)</title><rect x="11.3702%" y="677" width="5.4205%" height="15" fill="rgb(239,85,43)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="687.50">async_f..</text></g><g><title>std::panic::catch_unwind (5,942 samples, 5.42%)</title><rect x="11.3702%" y="661" width="5.4205%" height="15" fill="rgb(231,55,21)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="671.50">std::pa..</text></g><g><title>std::panicking::try (5,942 samples, 5.42%)</title><rect x="11.3702%" y="645" width="5.4205%" height="15" fill="rgb(225,184,43)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="655.50">std::pa..</text></g><g><title>std::panicking::try::do_call (5,942 samples, 5.42%)</title><rect x="11.3702%" y="629" width="5.4205%" height="15" fill="rgb(251,158,41)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="639.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,942 samples, 5.42%)</title><rect x="11.3702%" y="613" width="5.4205%" height="15" fill="rgb(234,159,37)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="623.50">&lt;core::..</text></g><g><title>core::ops::function::FnOnce::call_once (5,942 samples, 5.42%)</title><rect x="11.3702%" y="597" width="5.4205%" height="15" fill="rgb(216,204,22)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="607.50">core::o..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (5,942 samples, 5.42%)</title><rect x="11.3702%" y="581" width="5.4205%" height="15" fill="rgb(214,17,3)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="591.50">async_f..</text></g><g><title>async_ffi::FfiContext::with_context (5,942 samples, 5.42%)</title><rect x="11.3702%" y="565" width="5.4205%" height="15" fill="rgb(212,111,17)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="575.50">async_f..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (5,942 samples, 5.42%)</title><rect x="11.3702%" y="549" width="5.4205%" height="15" fill="rgb(221,157,24)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="559.50">async_f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,942 samples, 5.42%)</title><rect x="11.3702%" y="533" width="5.4205%" height="15" fill="rgb(252,16,13)" fg:x="12464" fg:w="5942"/><text x="11.6202%" y="543.50">&lt;core::..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (5,845 samples, 5.33%)</title><rect x="11.4587%" y="517" width="5.3321%" height="15" fill="rgb(221,62,2)" fg:x="12561" fg:w="5845"/><text x="11.7087%" y="527.50">&lt;tremor..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (205 samples, 0.19%)</title><rect x="16.6037%" y="501" width="0.1870%" height="15" fill="rgb(247,87,22)" fg:x="18201" fg:w="205"/><text x="16.8537%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::_::&lt;impl tremor_runtime::connectors::sink::EventSerializerOpaque_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::serialize (13 samples, 0.01%)</title><rect x="16.7789%" y="485" width="0.0119%" height="15" fill="rgb(215,73,9)" fg:x="18393" fg:w="13"/><text x="17.0289%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (29 samples, 0.03%)</title><rect x="16.9750%" y="725" width="0.0265%" height="15" fill="rgb(207,175,33)" fg:x="18608" fg:w="29"/><text x="17.2250%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (29 samples, 0.03%)</title><rect x="16.9750%" y="709" width="0.0265%" height="15" fill="rgb(243,129,54)" fg:x="18608" fg:w="29"/><text x="17.2250%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (29 samples, 0.03%)</title><rect x="16.9750%" y="693" width="0.0265%" height="15" fill="rgb(227,119,45)" fg:x="18608" fg:w="29"/><text x="17.2250%" y="703.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (32 samples, 0.03%)</title><rect x="17.0106%" y="661" width="0.0292%" height="15" fill="rgb(205,109,36)" fg:x="18647" fg:w="32"/><text x="17.2606%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (47 samples, 0.04%)</title><rect x="17.0899%" y="517" width="0.0429%" height="15" fill="rgb(205,6,39)" fg:x="18734" fg:w="47"/><text x="17.3399%" y="527.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (47 samples, 0.04%)</title><rect x="17.0899%" y="501" width="0.0429%" height="15" fill="rgb(221,32,16)" fg:x="18734" fg:w="47"/><text x="17.3399%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (86 samples, 0.08%)</title><rect x="17.0617%" y="565" width="0.0785%" height="15" fill="rgb(228,144,50)" fg:x="18703" fg:w="86"/><text x="17.3117%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (86 samples, 0.08%)</title><rect x="17.0617%" y="549" width="0.0785%" height="15" fill="rgb(229,201,53)" fg:x="18703" fg:w="86"/><text x="17.3117%" y="559.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (86 samples, 0.08%)</title><rect x="17.0617%" y="533" width="0.0785%" height="15" fill="rgb(249,153,27)" fg:x="18703" fg:w="86"/><text x="17.3117%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (108 samples, 0.10%)</title><rect x="17.0525%" y="629" width="0.0985%" height="15" fill="rgb(227,106,25)" fg:x="18693" fg:w="108"/><text x="17.3025%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (108 samples, 0.10%)</title><rect x="17.0525%" y="613" width="0.0985%" height="15" fill="rgb(230,65,29)" fg:x="18693" fg:w="108"/><text x="17.3025%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (108 samples, 0.10%)</title><rect x="17.0525%" y="597" width="0.0985%" height="15" fill="rgb(221,57,46)" fg:x="18693" fg:w="108"/><text x="17.3025%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (108 samples, 0.10%)</title><rect x="17.0525%" y="581" width="0.0985%" height="15" fill="rgb(229,161,17)" fg:x="18693" fg:w="108"/><text x="17.3025%" y="591.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="17.1401%" y="565" width="0.0109%" height="15" fill="rgb(222,213,11)" fg:x="18789" fg:w="12"/><text x="17.3901%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (122 samples, 0.11%)</title><rect x="17.0443%" y="645" width="0.1113%" height="15" fill="rgb(235,35,13)" fg:x="18684" fg:w="122"/><text x="17.2943%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,360 samples, 5.80%)</title><rect x="11.3602%" y="773" width="5.8019%" height="15" fill="rgb(233,158,34)" fg:x="12453" fg:w="6360"/><text x="11.6102%" y="783.50">&lt;core::..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (407 samples, 0.37%)</title><rect x="16.7907%" y="757" width="0.3713%" height="15" fill="rgb(215,151,48)" fg:x="18406" fg:w="407"/><text x="17.0407%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (205 samples, 0.19%)</title><rect x="16.9750%" y="741" width="0.1870%" height="15" fill="rgb(229,84,14)" fg:x="18608" fg:w="205"/><text x="17.2250%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (176 samples, 0.16%)</title><rect x="17.0015%" y="725" width="0.1606%" height="15" fill="rgb(229,68,14)" fg:x="18637" fg:w="176"/><text x="17.2515%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (176 samples, 0.16%)</title><rect x="17.0015%" y="709" width="0.1606%" height="15" fill="rgb(243,106,26)" fg:x="18637" fg:w="176"/><text x="17.2515%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (176 samples, 0.16%)</title><rect x="17.0015%" y="693" width="0.1606%" height="15" fill="rgb(206,45,38)" fg:x="18637" fg:w="176"/><text x="17.2515%" y="703.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (176 samples, 0.16%)</title><rect x="17.0015%" y="677" width="0.1606%" height="15" fill="rgb(226,6,15)" fg:x="18637" fg:w="176"/><text x="17.2515%" y="687.50"></text></g><g><title>rust_dealloc (134 samples, 0.12%)</title><rect x="17.0398%" y="661" width="0.1222%" height="15" fill="rgb(232,22,54)" fg:x="18679" fg:w="134"/><text x="17.2898%" y="671.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (19 samples, 0.02%)</title><rect x="17.1711%" y="645" width="0.0173%" height="15" fill="rgb(229,222,32)" fg:x="18823" fg:w="19"/><text x="17.4211%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::empty (20 samples, 0.02%)</title><rect x="17.2277%" y="453" width="0.0182%" height="15" fill="rgb(228,62,29)" fg:x="18885" fg:w="20"/><text x="17.4777%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (20 samples, 0.02%)</title><rect x="17.2277%" y="437" width="0.0182%" height="15" fill="rgb(251,103,34)" fg:x="18885" fg:w="20"/><text x="17.4777%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (216 samples, 0.20%)</title><rect x="17.2049%" y="501" width="0.1970%" height="15" fill="rgb(233,12,30)" fg:x="18860" fg:w="216"/><text x="17.4549%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (212 samples, 0.19%)</title><rect x="17.2085%" y="485" width="0.1934%" height="15" fill="rgb(238,52,0)" fg:x="18864" fg:w="212"/><text x="17.4585%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (205 samples, 0.19%)</title><rect x="17.2149%" y="469" width="0.1870%" height="15" fill="rgb(223,98,5)" fg:x="18871" fg:w="205"/><text x="17.4649%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (171 samples, 0.16%)</title><rect x="17.2459%" y="453" width="0.1560%" height="15" fill="rgb(228,75,37)" fg:x="18905" fg:w="171"/><text x="17.4959%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (171 samples, 0.16%)</title><rect x="17.2459%" y="437" width="0.1560%" height="15" fill="rgb(205,115,49)" fg:x="18905" fg:w="171"/><text x="17.4959%" y="447.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (263 samples, 0.24%)</title><rect x="17.1711%" y="661" width="0.2399%" height="15" fill="rgb(250,154,43)" fg:x="18823" fg:w="263"/><text x="17.4211%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (244 samples, 0.22%)</title><rect x="17.1885%" y="645" width="0.2226%" height="15" fill="rgb(226,43,29)" fg:x="18842" fg:w="244"/><text x="17.4385%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (244 samples, 0.22%)</title><rect x="17.1885%" y="629" width="0.2226%" height="15" fill="rgb(249,228,39)" fg:x="18842" fg:w="244"/><text x="17.4385%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (237 samples, 0.22%)</title><rect x="17.1949%" y="613" width="0.2162%" height="15" fill="rgb(216,79,43)" fg:x="18849" fg:w="237"/><text x="17.4449%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (236 samples, 0.22%)</title><rect x="17.1958%" y="597" width="0.2153%" height="15" fill="rgb(228,95,12)" fg:x="18850" fg:w="236"/><text x="17.4458%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (236 samples, 0.22%)</title><rect x="17.1958%" y="581" width="0.2153%" height="15" fill="rgb(249,221,15)" fg:x="18850" fg:w="236"/><text x="17.4458%" y="591.50"></text></g><g><title>alloc::alloc::alloc (236 samples, 0.22%)</title><rect x="17.1958%" y="565" width="0.2153%" height="15" fill="rgb(233,34,13)" fg:x="18850" fg:w="236"/><text x="17.4458%" y="575.50"></text></g><g><title>__rg_alloc (236 samples, 0.22%)</title><rect x="17.1958%" y="549" width="0.2153%" height="15" fill="rgb(214,103,39)" fg:x="18850" fg:w="236"/><text x="17.4458%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (236 samples, 0.22%)</title><rect x="17.1958%" y="533" width="0.2153%" height="15" fill="rgb(251,126,39)" fg:x="18850" fg:w="236"/><text x="17.4458%" y="543.50"></text></g><g><title>rust_alloc (227 samples, 0.21%)</title><rect x="17.2040%" y="517" width="0.2071%" height="15" fill="rgb(214,216,36)" fg:x="18859" fg:w="227"/><text x="17.4540%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (19 samples, 0.02%)</title><rect x="17.4129%" y="597" width="0.0173%" height="15" fill="rgb(220,221,8)" fg:x="19088" fg:w="19"/><text x="17.6629%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (34 samples, 0.03%)</title><rect x="17.4129%" y="613" width="0.0310%" height="15" fill="rgb(240,216,3)" fg:x="19088" fg:w="34"/><text x="17.6629%" y="623.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (309 samples, 0.28%)</title><rect x="17.1629%" y="741" width="0.2819%" height="15" fill="rgb(232,218,17)" fg:x="18814" fg:w="309"/><text x="17.4129%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (302 samples, 0.28%)</title><rect x="17.1693%" y="725" width="0.2755%" height="15" fill="rgb(229,163,45)" fg:x="18821" fg:w="302"/><text x="17.4193%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (300 samples, 0.27%)</title><rect x="17.1711%" y="709" width="0.2737%" height="15" fill="rgb(231,110,42)" fg:x="18823" fg:w="300"/><text x="17.4211%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (300 samples, 0.27%)</title><rect x="17.1711%" y="693" width="0.2737%" height="15" fill="rgb(208,170,48)" fg:x="18823" fg:w="300"/><text x="17.4211%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (300 samples, 0.27%)</title><rect x="17.1711%" y="677" width="0.2737%" height="15" fill="rgb(239,116,25)" fg:x="18823" fg:w="300"/><text x="17.4211%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (37 samples, 0.03%)</title><rect x="17.4111%" y="661" width="0.0338%" height="15" fill="rgb(219,200,50)" fg:x="19086" fg:w="37"/><text x="17.6611%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (37 samples, 0.03%)</title><rect x="17.4111%" y="645" width="0.0338%" height="15" fill="rgb(245,200,0)" fg:x="19086" fg:w="37"/><text x="17.6611%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (37 samples, 0.03%)</title><rect x="17.4111%" y="629" width="0.0338%" height="15" fill="rgb(245,119,33)" fg:x="19086" fg:w="37"/><text x="17.6611%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="17.7376%" y="613" width="0.0109%" height="15" fill="rgb(231,125,12)" fg:x="19444" fg:w="12"/><text x="17.9876%" y="623.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (14 samples, 0.01%)</title><rect x="17.7376%" y="629" width="0.0128%" height="15" fill="rgb(216,96,41)" fg:x="19444" fg:w="14"/><text x="17.9876%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (31 samples, 0.03%)</title><rect x="17.7376%" y="693" width="0.0283%" height="15" fill="rgb(248,43,45)" fg:x="19444" fg:w="31"/><text x="17.9876%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new (31 samples, 0.03%)</title><rect x="17.7376%" y="677" width="0.0283%" height="15" fill="rgb(217,222,7)" fg:x="19444" fg:w="31"/><text x="17.9876%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (31 samples, 0.03%)</title><rect x="17.7376%" y="661" width="0.0283%" height="15" fill="rgb(233,28,6)" fg:x="19444" fg:w="31"/><text x="17.9876%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.03%)</title><rect x="17.7376%" y="645" width="0.0283%" height="15" fill="rgb(231,218,15)" fg:x="19444" fg:w="31"/><text x="17.9876%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (17 samples, 0.02%)</title><rect x="17.7504%" y="629" width="0.0155%" height="15" fill="rgb(226,171,48)" fg:x="19458" fg:w="17"/><text x="18.0004%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="17.8070%" y="453" width="0.0182%" height="15" fill="rgb(235,201,9)" fg:x="19520" fg:w="20"/><text x="18.0570%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (20 samples, 0.02%)</title><rect x="17.8070%" y="437" width="0.0182%" height="15" fill="rgb(217,80,15)" fg:x="19520" fg:w="20"/><text x="18.0570%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (15 samples, 0.01%)</title><rect x="17.8115%" y="421" width="0.0137%" height="15" fill="rgb(219,152,8)" fg:x="19525" fg:w="15"/><text x="18.0615%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="17.8124%" y="405" width="0.0128%" height="15" fill="rgb(243,107,38)" fg:x="19526" fg:w="14"/><text x="18.0624%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="17.8124%" y="389" width="0.0128%" height="15" fill="rgb(231,17,5)" fg:x="19526" fg:w="14"/><text x="18.0624%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="17.8124%" y="373" width="0.0128%" height="15" fill="rgb(209,25,54)" fg:x="19526" fg:w="14"/><text x="18.0624%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.05%)</title><rect x="17.7969%" y="501" width="0.0547%" height="15" fill="rgb(219,0,2)" fg:x="19509" fg:w="60"/><text x="18.0469%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.05%)</title><rect x="17.7969%" y="485" width="0.0547%" height="15" fill="rgb(246,9,5)" fg:x="19509" fg:w="60"/><text x="18.0469%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="17.8061%" y="469" width="0.0456%" height="15" fill="rgb(226,159,4)" fg:x="19519" fg:w="50"/><text x="18.0561%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (22 samples, 0.02%)</title><rect x="17.8316%" y="453" width="0.0201%" height="15" fill="rgb(219,175,34)" fg:x="19547" fg:w="22"/><text x="18.0816%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (22 samples, 0.02%)</title><rect x="17.8316%" y="437" width="0.0201%" height="15" fill="rgb(236,10,46)" fg:x="19547" fg:w="22"/><text x="18.0816%" y="447.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (135 samples, 0.12%)</title><rect x="17.7376%" y="709" width="0.1232%" height="15" fill="rgb(240,211,16)" fg:x="19444" fg:w="135"/><text x="17.9876%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (104 samples, 0.09%)</title><rect x="17.7659%" y="693" width="0.0949%" height="15" fill="rgb(205,3,43)" fg:x="19475" fg:w="104"/><text x="18.0159%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (104 samples, 0.09%)</title><rect x="17.7659%" y="677" width="0.0949%" height="15" fill="rgb(245,7,22)" fg:x="19475" fg:w="104"/><text x="18.0159%" y="687.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (95 samples, 0.09%)</title><rect x="17.7741%" y="661" width="0.0867%" height="15" fill="rgb(239,132,32)" fg:x="19484" fg:w="95"/><text x="18.0241%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (95 samples, 0.09%)</title><rect x="17.7741%" y="645" width="0.0867%" height="15" fill="rgb(228,202,34)" fg:x="19484" fg:w="95"/><text x="18.0241%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (93 samples, 0.08%)</title><rect x="17.7760%" y="629" width="0.0848%" height="15" fill="rgb(254,200,22)" fg:x="19486" fg:w="93"/><text x="18.0260%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (79 samples, 0.07%)</title><rect x="17.7887%" y="613" width="0.0721%" height="15" fill="rgb(219,10,39)" fg:x="19500" fg:w="79"/><text x="18.0387%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (75 samples, 0.07%)</title><rect x="17.7924%" y="597" width="0.0684%" height="15" fill="rgb(226,210,39)" fg:x="19504" fg:w="75"/><text x="18.0424%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (75 samples, 0.07%)</title><rect x="17.7924%" y="581" width="0.0684%" height="15" fill="rgb(208,219,16)" fg:x="19504" fg:w="75"/><text x="18.0424%" y="591.50"></text></g><g><title>alloc::alloc::alloc (75 samples, 0.07%)</title><rect x="17.7924%" y="565" width="0.0684%" height="15" fill="rgb(216,158,51)" fg:x="19504" fg:w="75"/><text x="18.0424%" y="575.50"></text></g><g><title>__rg_alloc (75 samples, 0.07%)</title><rect x="17.7924%" y="549" width="0.0684%" height="15" fill="rgb(233,14,44)" fg:x="19504" fg:w="75"/><text x="18.0424%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (75 samples, 0.07%)</title><rect x="17.7924%" y="533" width="0.0684%" height="15" fill="rgb(237,97,39)" fg:x="19504" fg:w="75"/><text x="18.0424%" y="543.50"></text></g><g><title>rust_alloc (75 samples, 0.07%)</title><rect x="17.7924%" y="517" width="0.0684%" height="15" fill="rgb(218,198,43)" fg:x="19504" fg:w="75"/><text x="18.0424%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (13 samples, 0.01%)</title><rect x="17.8872%" y="661" width="0.0119%" height="15" fill="rgb(231,104,20)" fg:x="19608" fg:w="13"/><text x="18.1372%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="17.8872%" y="645" width="0.0119%" height="15" fill="rgb(254,36,13)" fg:x="19608" fg:w="13"/><text x="18.1372%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (13 samples, 0.01%)</title><rect x="17.8872%" y="629" width="0.0119%" height="15" fill="rgb(248,14,50)" fg:x="19608" fg:w="13"/><text x="18.1372%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="17.9210%" y="565" width="0.0109%" height="15" fill="rgb(217,107,29)" fg:x="19645" fg:w="12"/><text x="18.1710%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="17.9210%" y="629" width="0.0119%" height="15" fill="rgb(251,169,33)" fg:x="19645" fg:w="13"/><text x="18.1710%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="17.9210%" y="613" width="0.0119%" height="15" fill="rgb(217,108,32)" fg:x="19645" fg:w="13"/><text x="18.1710%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="17.9210%" y="597" width="0.0119%" height="15" fill="rgb(219,66,42)" fg:x="19645" fg:w="13"/><text x="18.1710%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="17.9210%" y="581" width="0.0119%" height="15" fill="rgb(206,180,7)" fg:x="19645" fg:w="13"/><text x="18.1710%" y="591.50"></text></g><g><title>abi_stable::erased_types::iterator::next (31 samples, 0.03%)</title><rect x="17.9064%" y="661" width="0.0283%" height="15" fill="rgb(208,226,31)" fg:x="19629" fg:w="31"/><text x="18.1564%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (15 samples, 0.01%)</title><rect x="17.9210%" y="645" width="0.0137%" height="15" fill="rgb(218,26,49)" fg:x="19645" fg:w="15"/><text x="18.1710%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.06%)</title><rect x="17.8809%" y="693" width="0.0602%" height="15" fill="rgb(233,197,48)" fg:x="19601" fg:w="66"/><text x="18.1309%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (66 samples, 0.06%)</title><rect x="17.8809%" y="677" width="0.0602%" height="15" fill="rgb(252,181,51)" fg:x="19601" fg:w="66"/><text x="18.1309%" y="687.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (14 samples, 0.01%)</title><rect x="17.9557%" y="661" width="0.0128%" height="15" fill="rgb(253,90,19)" fg:x="19683" fg:w="14"/><text x="18.2057%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (14 samples, 0.01%)</title><rect x="17.9557%" y="645" width="0.0128%" height="15" fill="rgb(215,171,30)" fg:x="19683" fg:w="14"/><text x="18.2057%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="17.9684%" y="629" width="0.0128%" height="15" fill="rgb(214,222,9)" fg:x="19697" fg:w="14"/><text x="18.2184%" y="639.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (14 samples, 0.01%)</title><rect x="17.9684%" y="613" width="0.0128%" height="15" fill="rgb(223,3,22)" fg:x="19697" fg:w="14"/><text x="18.2184%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (54 samples, 0.05%)</title><rect x="17.9411%" y="693" width="0.0493%" height="15" fill="rgb(225,196,46)" fg:x="19667" fg:w="54"/><text x="18.1911%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (54 samples, 0.05%)</title><rect x="17.9411%" y="677" width="0.0493%" height="15" fill="rgb(209,110,37)" fg:x="19667" fg:w="54"/><text x="18.1911%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (24 samples, 0.02%)</title><rect x="17.9684%" y="661" width="0.0219%" height="15" fill="rgb(249,89,12)" fg:x="19697" fg:w="24"/><text x="18.2184%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (24 samples, 0.02%)</title><rect x="17.9684%" y="645" width="0.0219%" height="15" fill="rgb(226,27,33)" fg:x="19697" fg:w="24"/><text x="18.2184%" y="655.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (13 samples, 0.01%)</title><rect x="17.9903%" y="693" width="0.0119%" height="15" fill="rgb(213,82,22)" fg:x="19721" fg:w="13"/><text x="18.2403%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (13 samples, 0.01%)</title><rect x="17.9903%" y="677" width="0.0119%" height="15" fill="rgb(248,140,0)" fg:x="19721" fg:w="13"/><text x="18.2403%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (13 samples, 0.01%)</title><rect x="17.9903%" y="661" width="0.0119%" height="15" fill="rgb(228,106,3)" fg:x="19721" fg:w="13"/><text x="18.2403%" y="671.50"></text></g><g><title>rust_dealloc (19 samples, 0.02%)</title><rect x="18.0359%" y="485" width="0.0173%" height="15" fill="rgb(209,23,37)" fg:x="19771" fg:w="19"/><text x="18.2859%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="18.0761%" y="437" width="0.0100%" height="15" fill="rgb(241,93,50)" fg:x="19815" fg:w="11"/><text x="18.3261%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (68 samples, 0.06%)</title><rect x="18.0341%" y="517" width="0.0620%" height="15" fill="rgb(253,46,43)" fg:x="19769" fg:w="68"/><text x="18.2841%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (68 samples, 0.06%)</title><rect x="18.0341%" y="501" width="0.0620%" height="15" fill="rgb(226,206,43)" fg:x="19769" fg:w="68"/><text x="18.2841%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="18.0597%" y="485" width="0.0365%" height="15" fill="rgb(217,54,7)" fg:x="19797" fg:w="40"/><text x="18.3097%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="18.0597%" y="469" width="0.0365%" height="15" fill="rgb(223,5,52)" fg:x="19797" fg:w="40"/><text x="18.3097%" y="479.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (40 samples, 0.04%)</title><rect x="18.0597%" y="453" width="0.0365%" height="15" fill="rgb(206,52,46)" fg:x="19797" fg:w="40"/><text x="18.3097%" y="463.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="18.0861%" y="437" width="0.0100%" height="15" fill="rgb(253,136,11)" fg:x="19826" fg:w="11"/><text x="18.3361%" y="447.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="18.0861%" y="421" width="0.0100%" height="15" fill="rgb(208,106,33)" fg:x="19826" fg:w="11"/><text x="18.3361%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (75 samples, 0.07%)</title><rect x="18.0341%" y="549" width="0.0684%" height="15" fill="rgb(206,54,4)" fg:x="19769" fg:w="75"/><text x="18.2841%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (75 samples, 0.07%)</title><rect x="18.0341%" y="533" width="0.0684%" height="15" fill="rgb(213,3,15)" fg:x="19769" fg:w="75"/><text x="18.2841%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (83 samples, 0.08%)</title><rect x="18.0314%" y="565" width="0.0757%" height="15" fill="rgb(252,211,39)" fg:x="19766" fg:w="83"/><text x="18.2814%" y="575.50"></text></g><g><title>rust_dealloc (96 samples, 0.09%)</title><rect x="18.0232%" y="581" width="0.0876%" height="15" fill="rgb(223,6,36)" fg:x="19757" fg:w="96"/><text x="18.2732%" y="591.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,042 samples, 0.95%)</title><rect x="17.1620%" y="773" width="0.9506%" height="15" fill="rgb(252,169,45)" fg:x="18813" fg:w="1042"/><text x="17.4120%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,042 samples, 0.95%)</title><rect x="17.1620%" y="757" width="0.9506%" height="15" fill="rgb(212,48,26)" fg:x="18813" fg:w="1042"/><text x="17.4120%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (732 samples, 0.67%)</title><rect x="17.4448%" y="741" width="0.6678%" height="15" fill="rgb(251,102,48)" fg:x="19123" fg:w="732"/><text x="17.6948%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (419 samples, 0.38%)</title><rect x="17.7303%" y="725" width="0.3822%" height="15" fill="rgb(243,208,16)" fg:x="19436" fg:w="419"/><text x="17.9803%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (276 samples, 0.25%)</title><rect x="17.8608%" y="709" width="0.2518%" height="15" fill="rgb(219,96,24)" fg:x="19579" fg:w="276"/><text x="18.1108%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (121 samples, 0.11%)</title><rect x="18.0022%" y="693" width="0.1104%" height="15" fill="rgb(219,33,29)" fg:x="19734" fg:w="121"/><text x="18.2522%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (121 samples, 0.11%)</title><rect x="18.0022%" y="677" width="0.1104%" height="15" fill="rgb(223,176,5)" fg:x="19734" fg:w="121"/><text x="18.2522%" y="687.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (121 samples, 0.11%)</title><rect x="18.0022%" y="661" width="0.1104%" height="15" fill="rgb(228,140,14)" fg:x="19734" fg:w="121"/><text x="18.2522%" y="671.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (121 samples, 0.11%)</title><rect x="18.0022%" y="645" width="0.1104%" height="15" fill="rgb(217,179,31)" fg:x="19734" fg:w="121"/><text x="18.2522%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (112 samples, 0.10%)</title><rect x="18.0104%" y="629" width="0.1022%" height="15" fill="rgb(230,9,30)" fg:x="19743" fg:w="112"/><text x="18.2604%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (112 samples, 0.10%)</title><rect x="18.0104%" y="613" width="0.1022%" height="15" fill="rgb(230,136,20)" fg:x="19743" fg:w="112"/><text x="18.2604%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (112 samples, 0.10%)</title><rect x="18.0104%" y="597" width="0.1022%" height="15" fill="rgb(215,210,22)" fg:x="19743" fg:w="112"/><text x="18.2604%" y="607.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (19 samples, 0.02%)</title><rect x="18.1290%" y="629" width="0.0173%" height="15" fill="rgb(218,43,5)" fg:x="19873" fg:w="19"/><text x="18.3790%" y="639.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="18.1618%" y="485" width="0.0119%" height="15" fill="rgb(216,11,5)" fg:x="19909" fg:w="13"/><text x="18.4118%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="18.1919%" y="437" width="0.0109%" height="15" fill="rgb(209,82,29)" fg:x="19942" fg:w="12"/><text x="18.4419%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (12 samples, 0.01%)</title><rect x="18.1919%" y="421" width="0.0109%" height="15" fill="rgb(244,115,12)" fg:x="19942" fg:w="12"/><text x="18.4419%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (11 samples, 0.01%)</title><rect x="18.1928%" y="405" width="0.0100%" height="15" fill="rgb(222,82,18)" fg:x="19943" fg:w="11"/><text x="18.4428%" y="415.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (244 samples, 0.22%)</title><rect x="18.1290%" y="645" width="0.2226%" height="15" fill="rgb(249,227,8)" fg:x="19873" fg:w="244"/><text x="18.3790%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (225 samples, 0.21%)</title><rect x="18.1463%" y="629" width="0.2053%" height="15" fill="rgb(253,141,45)" fg:x="19892" fg:w="225"/><text x="18.3963%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (225 samples, 0.21%)</title><rect x="18.1463%" y="613" width="0.2053%" height="15" fill="rgb(234,184,4)" fg:x="19892" fg:w="225"/><text x="18.3963%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (216 samples, 0.20%)</title><rect x="18.1545%" y="597" width="0.1970%" height="15" fill="rgb(218,194,23)" fg:x="19901" fg:w="216"/><text x="18.4045%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (213 samples, 0.19%)</title><rect x="18.1573%" y="581" width="0.1943%" height="15" fill="rgb(235,66,41)" fg:x="19904" fg:w="213"/><text x="18.4073%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (213 samples, 0.19%)</title><rect x="18.1573%" y="565" width="0.1943%" height="15" fill="rgb(245,217,1)" fg:x="19904" fg:w="213"/><text x="18.4073%" y="575.50"></text></g><g><title>alloc::alloc::alloc (213 samples, 0.19%)</title><rect x="18.1573%" y="549" width="0.1943%" height="15" fill="rgb(229,91,1)" fg:x="19904" fg:w="213"/><text x="18.4073%" y="559.50"></text></g><g><title>__rg_alloc (213 samples, 0.19%)</title><rect x="18.1573%" y="533" width="0.1943%" height="15" fill="rgb(207,101,30)" fg:x="19904" fg:w="213"/><text x="18.4073%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (213 samples, 0.19%)</title><rect x="18.1573%" y="517" width="0.1943%" height="15" fill="rgb(223,82,49)" fg:x="19904" fg:w="213"/><text x="18.4073%" y="527.50"></text></g><g><title>rust_alloc (208 samples, 0.19%)</title><rect x="18.1618%" y="501" width="0.1897%" height="15" fill="rgb(218,167,17)" fg:x="19909" fg:w="208"/><text x="18.4118%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (192 samples, 0.18%)</title><rect x="18.1764%" y="485" width="0.1752%" height="15" fill="rgb(208,103,14)" fg:x="19925" fg:w="192"/><text x="18.4264%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (192 samples, 0.18%)</title><rect x="18.1764%" y="469" width="0.1752%" height="15" fill="rgb(238,20,8)" fg:x="19925" fg:w="192"/><text x="18.4264%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (180 samples, 0.16%)</title><rect x="18.1874%" y="453" width="0.1642%" height="15" fill="rgb(218,80,54)" fg:x="19937" fg:w="180"/><text x="18.4374%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (156 samples, 0.14%)</title><rect x="18.2093%" y="437" width="0.1423%" height="15" fill="rgb(240,144,17)" fg:x="19961" fg:w="156"/><text x="18.4593%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (156 samples, 0.14%)</title><rect x="18.2093%" y="421" width="0.1423%" height="15" fill="rgb(245,27,50)" fg:x="19961" fg:w="156"/><text x="18.4593%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (97 samples, 0.09%)</title><rect x="18.4036%" y="581" width="0.0885%" height="15" fill="rgb(251,51,7)" fg:x="20174" fg:w="97"/><text x="18.6536%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (97 samples, 0.09%)</title><rect x="18.4036%" y="565" width="0.0885%" height="15" fill="rgb(245,217,29)" fg:x="20174" fg:w="97"/><text x="18.6536%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (113 samples, 0.10%)</title><rect x="18.3981%" y="597" width="0.1031%" height="15" fill="rgb(221,176,29)" fg:x="20168" fg:w="113"/><text x="18.6481%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (592 samples, 0.54%)</title><rect x="18.1153%" y="725" width="0.5400%" height="15" fill="rgb(212,180,24)" fg:x="19858" fg:w="592"/><text x="18.3653%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (579 samples, 0.53%)</title><rect x="18.1272%" y="709" width="0.5282%" height="15" fill="rgb(254,24,2)" fg:x="19871" fg:w="579"/><text x="18.3772%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (577 samples, 0.53%)</title><rect x="18.1290%" y="693" width="0.5264%" height="15" fill="rgb(230,100,2)" fg:x="19873" fg:w="577"/><text x="18.3790%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (577 samples, 0.53%)</title><rect x="18.1290%" y="677" width="0.5264%" height="15" fill="rgb(219,142,25)" fg:x="19873" fg:w="577"/><text x="18.3790%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (577 samples, 0.53%)</title><rect x="18.1290%" y="661" width="0.5264%" height="15" fill="rgb(240,73,43)" fg:x="19873" fg:w="577"/><text x="18.3790%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (333 samples, 0.30%)</title><rect x="18.3516%" y="645" width="0.3038%" height="15" fill="rgb(214,114,15)" fg:x="20117" fg:w="333"/><text x="18.6016%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (333 samples, 0.30%)</title><rect x="18.3516%" y="629" width="0.3038%" height="15" fill="rgb(207,130,4)" fg:x="20117" fg:w="333"/><text x="18.6016%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (333 samples, 0.30%)</title><rect x="18.3516%" y="613" width="0.3038%" height="15" fill="rgb(221,25,40)" fg:x="20117" fg:w="333"/><text x="18.6016%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (169 samples, 0.15%)</title><rect x="18.5012%" y="597" width="0.1542%" height="15" fill="rgb(241,184,7)" fg:x="20281" fg:w="169"/><text x="18.7512%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="18.9619%" y="693" width="0.0128%" height="15" fill="rgb(235,159,4)" fg:x="20786" fg:w="14"/><text x="19.2119%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (27 samples, 0.02%)</title><rect x="18.9746%" y="677" width="0.0246%" height="15" fill="rgb(214,87,48)" fg:x="20800" fg:w="27"/><text x="19.2246%" y="687.50"></text></g><g><title>std::collections::hash::map::RandomState::new (27 samples, 0.02%)</title><rect x="18.9746%" y="661" width="0.0246%" height="15" fill="rgb(246,198,24)" fg:x="20800" fg:w="27"/><text x="19.2246%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.02%)</title><rect x="18.9746%" y="645" width="0.0246%" height="15" fill="rgb(209,66,40)" fg:x="20800" fg:w="27"/><text x="19.2246%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.02%)</title><rect x="18.9746%" y="629" width="0.0246%" height="15" fill="rgb(233,147,39)" fg:x="20800" fg:w="27"/><text x="19.2246%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (19 samples, 0.02%)</title><rect x="18.9819%" y="613" width="0.0173%" height="15" fill="rgb(231,145,52)" fg:x="20808" fg:w="19"/><text x="19.2319%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="19.0358%" y="437" width="0.0128%" height="15" fill="rgb(206,20,26)" fg:x="20867" fg:w="14"/><text x="19.2858%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (14 samples, 0.01%)</title><rect x="19.0358%" y="421" width="0.0128%" height="15" fill="rgb(238,220,4)" fg:x="20867" fg:w="14"/><text x="19.2858%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (14 samples, 0.01%)</title><rect x="19.0358%" y="405" width="0.0128%" height="15" fill="rgb(252,195,42)" fg:x="20867" fg:w="14"/><text x="19.2858%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (12 samples, 0.01%)</title><rect x="19.0376%" y="389" width="0.0109%" height="15" fill="rgb(209,10,6)" fg:x="20869" fg:w="12"/><text x="19.2876%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="19.0376%" y="373" width="0.0109%" height="15" fill="rgb(229,3,52)" fg:x="20869" fg:w="12"/><text x="19.2876%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="19.0376%" y="357" width="0.0109%" height="15" fill="rgb(253,49,37)" fg:x="20869" fg:w="12"/><text x="19.2876%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (51 samples, 0.05%)</title><rect x="19.0321%" y="485" width="0.0465%" height="15" fill="rgb(240,103,49)" fg:x="20863" fg:w="51"/><text x="19.2821%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (51 samples, 0.05%)</title><rect x="19.0321%" y="469" width="0.0465%" height="15" fill="rgb(250,182,30)" fg:x="20863" fg:w="51"/><text x="19.2821%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="19.0358%" y="453" width="0.0429%" height="15" fill="rgb(248,8,30)" fg:x="20867" fg:w="47"/><text x="19.2858%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (29 samples, 0.03%)</title><rect x="19.0522%" y="437" width="0.0265%" height="15" fill="rgb(237,120,30)" fg:x="20885" fg:w="29"/><text x="19.3022%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (29 samples, 0.03%)</title><rect x="19.0522%" y="421" width="0.0265%" height="15" fill="rgb(221,146,34)" fg:x="20885" fg:w="29"/><text x="19.3022%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (124 samples, 0.11%)</title><rect x="18.9746%" y="693" width="0.1131%" height="15" fill="rgb(242,55,13)" fg:x="20800" fg:w="124"/><text x="19.2246%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (97 samples, 0.09%)</title><rect x="18.9993%" y="677" width="0.0885%" height="15" fill="rgb(242,112,31)" fg:x="20827" fg:w="97"/><text x="19.2493%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (97 samples, 0.09%)</title><rect x="18.9993%" y="661" width="0.0885%" height="15" fill="rgb(249,192,27)" fg:x="20827" fg:w="97"/><text x="19.2493%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (88 samples, 0.08%)</title><rect x="19.0075%" y="645" width="0.0803%" height="15" fill="rgb(208,204,44)" fg:x="20836" fg:w="88"/><text x="19.2575%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (88 samples, 0.08%)</title><rect x="19.0075%" y="629" width="0.0803%" height="15" fill="rgb(208,93,54)" fg:x="20836" fg:w="88"/><text x="19.2575%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (88 samples, 0.08%)</title><rect x="19.0075%" y="613" width="0.0803%" height="15" fill="rgb(242,1,31)" fg:x="20836" fg:w="88"/><text x="19.2575%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (80 samples, 0.07%)</title><rect x="19.0148%" y="597" width="0.0730%" height="15" fill="rgb(241,83,25)" fg:x="20844" fg:w="80"/><text x="19.2648%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (70 samples, 0.06%)</title><rect x="19.0239%" y="581" width="0.0639%" height="15" fill="rgb(205,169,50)" fg:x="20854" fg:w="70"/><text x="19.2739%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (70 samples, 0.06%)</title><rect x="19.0239%" y="565" width="0.0639%" height="15" fill="rgb(239,186,37)" fg:x="20854" fg:w="70"/><text x="19.2739%" y="575.50"></text></g><g><title>alloc::alloc::alloc (70 samples, 0.06%)</title><rect x="19.0239%" y="549" width="0.0639%" height="15" fill="rgb(205,221,10)" fg:x="20854" fg:w="70"/><text x="19.2739%" y="559.50"></text></g><g><title>__rg_alloc (70 samples, 0.06%)</title><rect x="19.0239%" y="533" width="0.0639%" height="15" fill="rgb(218,196,15)" fg:x="20854" fg:w="70"/><text x="19.2739%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (70 samples, 0.06%)</title><rect x="19.0239%" y="517" width="0.0639%" height="15" fill="rgb(218,196,35)" fg:x="20854" fg:w="70"/><text x="19.2739%" y="527.50"></text></g><g><title>rust_alloc (70 samples, 0.06%)</title><rect x="19.0239%" y="501" width="0.0639%" height="15" fill="rgb(233,63,24)" fg:x="20854" fg:w="70"/><text x="19.2739%" y="511.50"></text></g><g><title>abi_stable::erased_types::iterator::next (36 samples, 0.03%)</title><rect x="19.1270%" y="645" width="0.0328%" height="15" fill="rgb(225,8,4)" fg:x="20967" fg:w="36"/><text x="19.3770%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (17 samples, 0.02%)</title><rect x="19.1443%" y="629" width="0.0155%" height="15" fill="rgb(234,105,35)" fg:x="20986" fg:w="17"/><text x="19.3943%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="19.1443%" y="613" width="0.0155%" height="15" fill="rgb(236,21,32)" fg:x="20986" fg:w="17"/><text x="19.3943%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="19.1443%" y="597" width="0.0155%" height="15" fill="rgb(228,109,6)" fg:x="20986" fg:w="17"/><text x="19.3943%" y="607.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="19.1443%" y="581" width="0.0155%" height="15" fill="rgb(229,215,31)" fg:x="20986" fg:w="17"/><text x="19.3943%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="19.1443%" y="565" width="0.0155%" height="15" fill="rgb(221,52,54)" fg:x="20986" fg:w="17"/><text x="19.3943%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="19.1443%" y="549" width="0.0155%" height="15" fill="rgb(252,129,43)" fg:x="20986" fg:w="17"/><text x="19.3943%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="19.1598%" y="613" width="0.0119%" height="15" fill="rgb(248,183,27)" fg:x="21003" fg:w="13"/><text x="19.4098%" y="623.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (13 samples, 0.01%)</title><rect x="19.1598%" y="597" width="0.0119%" height="15" fill="rgb(250,0,22)" fg:x="21003" fg:w="13"/><text x="19.4098%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.07%)</title><rect x="19.1051%" y="677" width="0.0721%" height="15" fill="rgb(213,166,10)" fg:x="20943" fg:w="79"/><text x="19.3551%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (79 samples, 0.07%)</title><rect x="19.1051%" y="661" width="0.0721%" height="15" fill="rgb(207,163,36)" fg:x="20943" fg:w="79"/><text x="19.3551%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (19 samples, 0.02%)</title><rect x="19.1598%" y="645" width="0.0173%" height="15" fill="rgb(208,122,22)" fg:x="21003" fg:w="19"/><text x="19.4098%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (19 samples, 0.02%)</title><rect x="19.1598%" y="629" width="0.0173%" height="15" fill="rgb(207,104,49)" fg:x="21003" fg:w="19"/><text x="19.4098%" y="639.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (16 samples, 0.01%)</title><rect x="19.1817%" y="645" width="0.0146%" height="15" fill="rgb(248,211,50)" fg:x="21027" fg:w="16"/><text x="19.4317%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (15 samples, 0.01%)</title><rect x="19.1826%" y="629" width="0.0137%" height="15" fill="rgb(217,13,45)" fg:x="21028" fg:w="15"/><text x="19.4326%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (14 samples, 0.01%)</title><rect x="19.1835%" y="613" width="0.0128%" height="15" fill="rgb(211,216,49)" fg:x="21029" fg:w="14"/><text x="19.4335%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (14 samples, 0.01%)</title><rect x="19.1835%" y="597" width="0.0128%" height="15" fill="rgb(221,58,53)" fg:x="21029" fg:w="14"/><text x="19.4335%" y="607.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (14 samples, 0.01%)</title><rect x="19.1835%" y="581" width="0.0128%" height="15" fill="rgb(220,112,41)" fg:x="21029" fg:w="14"/><text x="19.4335%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (14 samples, 0.01%)</title><rect x="19.1835%" y="565" width="0.0128%" height="15" fill="rgb(236,38,28)" fg:x="21029" fg:w="14"/><text x="19.4335%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (38 samples, 0.03%)</title><rect x="19.1772%" y="677" width="0.0347%" height="15" fill="rgb(227,195,22)" fg:x="21022" fg:w="38"/><text x="19.4272%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (38 samples, 0.03%)</title><rect x="19.1772%" y="661" width="0.0347%" height="15" fill="rgb(214,55,33)" fg:x="21022" fg:w="38"/><text x="19.4272%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (17 samples, 0.02%)</title><rect x="19.1963%" y="645" width="0.0155%" height="15" fill="rgb(248,80,13)" fg:x="21043" fg:w="17"/><text x="19.4463%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (17 samples, 0.02%)</title><rect x="19.1963%" y="629" width="0.0155%" height="15" fill="rgb(238,52,6)" fg:x="21043" fg:w="17"/><text x="19.4463%" y="639.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="19.2602%" y="469" width="0.0100%" height="15" fill="rgb(224,198,47)" fg:x="21113" fg:w="11"/><text x="19.5102%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (33 samples, 0.03%)</title><rect x="19.2857%" y="421" width="0.0301%" height="15" fill="rgb(233,171,20)" fg:x="21141" fg:w="33"/><text x="19.5357%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (29 samples, 0.03%)</title><rect x="19.2894%" y="405" width="0.0265%" height="15" fill="rgb(241,30,25)" fg:x="21145" fg:w="29"/><text x="19.5394%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (57 samples, 0.05%)</title><rect x="19.2711%" y="469" width="0.0520%" height="15" fill="rgb(207,171,38)" fg:x="21125" fg:w="57"/><text x="19.5211%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (57 samples, 0.05%)</title><rect x="19.2711%" y="453" width="0.0520%" height="15" fill="rgb(234,70,1)" fg:x="21125" fg:w="57"/><text x="19.5211%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (57 samples, 0.05%)</title><rect x="19.2711%" y="437" width="0.0520%" height="15" fill="rgb(232,178,18)" fg:x="21125" fg:w="57"/><text x="19.5211%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (89 samples, 0.08%)</title><rect x="19.2602%" y="501" width="0.0812%" height="15" fill="rgb(241,78,40)" fg:x="21113" fg:w="89"/><text x="19.5102%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (89 samples, 0.08%)</title><rect x="19.2602%" y="485" width="0.0812%" height="15" fill="rgb(222,35,25)" fg:x="21113" fg:w="89"/><text x="19.5102%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (20 samples, 0.02%)</title><rect x="19.3231%" y="469" width="0.0182%" height="15" fill="rgb(207,92,16)" fg:x="21182" fg:w="20"/><text x="19.5731%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (100 samples, 0.09%)</title><rect x="19.2602%" y="533" width="0.0912%" height="15" fill="rgb(216,59,51)" fg:x="21113" fg:w="100"/><text x="19.5102%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (100 samples, 0.09%)</title><rect x="19.2602%" y="517" width="0.0912%" height="15" fill="rgb(213,80,28)" fg:x="21113" fg:w="100"/><text x="19.5102%" y="527.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="19.3414%" y="501" width="0.0100%" height="15" fill="rgb(220,93,7)" fg:x="21202" fg:w="11"/><text x="19.5914%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="19.3414%" y="485" width="0.0100%" height="15" fill="rgb(225,24,44)" fg:x="21202" fg:w="11"/><text x="19.5914%" y="495.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="19.3414%" y="469" width="0.0100%" height="15" fill="rgb(243,74,40)" fg:x="21202" fg:w="11"/><text x="19.5914%" y="479.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="19.3414%" y="453" width="0.0100%" height="15" fill="rgb(228,39,7)" fg:x="21202" fg:w="11"/><text x="19.5914%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (109 samples, 0.10%)</title><rect x="19.2565%" y="549" width="0.0994%" height="15" fill="rgb(227,79,8)" fg:x="21109" fg:w="109"/><text x="19.5065%" y="559.50"></text></g><g><title>rust_dealloc (132 samples, 0.12%)</title><rect x="19.2465%" y="565" width="0.1204%" height="15" fill="rgb(236,58,11)" fg:x="21098" fg:w="132"/><text x="19.4965%" y="575.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="19.3560%" y="549" width="0.0109%" height="15" fill="rgb(249,63,35)" fg:x="21218" fg:w="12"/><text x="19.6060%" y="559.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (1,376 samples, 1.26%)</title><rect x="18.1126%" y="773" width="1.2552%" height="15" fill="rgb(252,114,16)" fg:x="19855" fg:w="1376"/><text x="18.3626%" y="783.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,376 samples, 1.26%)</title><rect x="18.1126%" y="757" width="1.2552%" height="15" fill="rgb(254,151,24)" fg:x="19855" fg:w="1376"/><text x="18.3626%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,376 samples, 1.26%)</title><rect x="18.1126%" y="741" width="1.2552%" height="15" fill="rgb(253,54,39)" fg:x="19855" fg:w="1376"/><text x="18.3626%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (781 samples, 0.71%)</title><rect x="18.6554%" y="725" width="0.7125%" height="15" fill="rgb(243,25,45)" fg:x="20450" fg:w="781"/><text x="18.9054%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (445 samples, 0.41%)</title><rect x="18.9619%" y="709" width="0.4059%" height="15" fill="rgb(234,134,9)" fg:x="20786" fg:w="445"/><text x="19.2119%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (307 samples, 0.28%)</title><rect x="19.0878%" y="693" width="0.2801%" height="15" fill="rgb(227,166,31)" fg:x="20924" fg:w="307"/><text x="19.3378%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (162 samples, 0.15%)</title><rect x="19.2200%" y="677" width="0.1478%" height="15" fill="rgb(245,143,41)" fg:x="21069" fg:w="162"/><text x="19.4700%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (162 samples, 0.15%)</title><rect x="19.2200%" y="661" width="0.1478%" height="15" fill="rgb(238,181,32)" fg:x="21069" fg:w="162"/><text x="19.4700%" y="671.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.15%)</title><rect x="19.2200%" y="645" width="0.1478%" height="15" fill="rgb(224,113,18)" fg:x="21069" fg:w="162"/><text x="19.4700%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (162 samples, 0.15%)</title><rect x="19.2200%" y="629" width="0.1478%" height="15" fill="rgb(240,229,28)" fg:x="21069" fg:w="162"/><text x="19.4700%" y="639.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (151 samples, 0.14%)</title><rect x="19.2301%" y="613" width="0.1377%" height="15" fill="rgb(250,185,3)" fg:x="21080" fg:w="151"/><text x="19.4801%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (151 samples, 0.14%)</title><rect x="19.2301%" y="597" width="0.1377%" height="15" fill="rgb(212,59,25)" fg:x="21080" fg:w="151"/><text x="19.4801%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (151 samples, 0.14%)</title><rect x="19.2301%" y="581" width="0.1377%" height="15" fill="rgb(221,87,20)" fg:x="21080" fg:w="151"/><text x="19.4801%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="19.3751%" y="629" width="0.0182%" height="15" fill="rgb(213,74,28)" fg:x="21239" fg:w="20"/><text x="19.6251%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="19.3751%" y="613" width="0.0182%" height="15" fill="rgb(224,132,34)" fg:x="21239" fg:w="20"/><text x="19.6251%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="19.3751%" y="597" width="0.0182%" height="15" fill="rgb(222,101,24)" fg:x="21239" fg:w="20"/><text x="19.6251%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="19.3751%" y="581" width="0.0182%" height="15" fill="rgb(254,142,4)" fg:x="21239" fg:w="20"/><text x="19.6251%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="19.3751%" y="565" width="0.0182%" height="15" fill="rgb(230,229,49)" fg:x="21239" fg:w="20"/><text x="19.6251%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="19.3751%" y="549" width="0.0182%" height="15" fill="rgb(238,70,47)" fg:x="21239" fg:w="20"/><text x="19.6251%" y="559.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;abi_stable::std_types::tuple::Tuple2&lt;K,V&gt;&gt;&gt;::extend (42 samples, 0.04%)</title><rect x="19.3678%" y="757" width="0.0383%" height="15" fill="rgb(231,160,17)" fg:x="21231" fg:w="42"/><text x="19.6178%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (42 samples, 0.04%)</title><rect x="19.3678%" y="741" width="0.0383%" height="15" fill="rgb(218,68,53)" fg:x="21231" fg:w="42"/><text x="19.6178%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="19.3678%" y="725" width="0.0383%" height="15" fill="rgb(236,111,10)" fg:x="21231" fg:w="42"/><text x="19.6178%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="19.3678%" y="709" width="0.0383%" height="15" fill="rgb(224,34,41)" fg:x="21231" fg:w="42"/><text x="19.6178%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="19.3678%" y="693" width="0.0383%" height="15" fill="rgb(241,118,19)" fg:x="21231" fg:w="42"/><text x="19.6178%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (42 samples, 0.04%)</title><rect x="19.3678%" y="677" width="0.0383%" height="15" fill="rgb(238,129,25)" fg:x="21231" fg:w="42"/><text x="19.6178%" y="687.50"></text></g><g><title>abi_stable::erased_types::iterator::next (42 samples, 0.04%)</title><rect x="19.3678%" y="661" width="0.0383%" height="15" fill="rgb(238,22,31)" fg:x="21231" fg:w="42"/><text x="19.6178%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (34 samples, 0.03%)</title><rect x="19.3751%" y="645" width="0.0310%" height="15" fill="rgb(222,174,48)" fg:x="21239" fg:w="34"/><text x="19.6251%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl abi_stable::traits::IntoReprC for core::option::Option&lt;T&gt;&gt;::into_c (14 samples, 0.01%)</title><rect x="19.3934%" y="629" width="0.0128%" height="15" fill="rgb(206,152,40)" fg:x="21259" fg:w="14"/><text x="19.6434%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="19.3934%" y="613" width="0.0128%" height="15" fill="rgb(218,99,54)" fg:x="21259" fg:w="14"/><text x="19.6434%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as core::convert::From&lt;core::option::Option&lt;T&gt;&gt;&gt;::from (14 samples, 0.01%)</title><rect x="19.3934%" y="597" width="0.0128%" height="15" fill="rgb(220,174,26)" fg:x="21259" fg:w="14"/><text x="19.6434%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (8,836 samples, 8.06%)</title><rect x="11.3602%" y="789" width="8.0606%" height="15" fill="rgb(245,116,9)" fg:x="12453" fg:w="8836"/><text x="11.6102%" y="799.50">tremor_runt..</text></g><g><title>tremor_pipeline::OpMeta::merge (58 samples, 0.05%)</title><rect x="19.3678%" y="773" width="0.0529%" height="15" fill="rgb(209,72,35)" fg:x="21231" fg:w="58"/><text x="19.6178%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.01%)</title><rect x="19.4061%" y="757" width="0.0146%" height="15" fill="rgb(226,126,21)" fg:x="21273" fg:w="16"/><text x="19.6561%" y="767.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (16 samples, 0.01%)</title><rect x="19.4061%" y="741" width="0.0146%" height="15" fill="rgb(227,192,1)" fg:x="21273" fg:w="16"/><text x="19.6561%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (16 samples, 0.01%)</title><rect x="19.4061%" y="725" width="0.0146%" height="15" fill="rgb(237,180,29)" fg:x="21273" fg:w="16"/><text x="19.6561%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (16 samples, 0.01%)</title><rect x="19.4061%" y="709" width="0.0146%" height="15" fill="rgb(230,197,35)" fg:x="21273" fg:w="16"/><text x="19.6561%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (16 samples, 0.01%)</title><rect x="19.4061%" y="693" width="0.0146%" height="15" fill="rgb(246,193,31)" fg:x="21273" fg:w="16"/><text x="19.6561%" y="703.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="19.6844%" y="645" width="0.0164%" height="15" fill="rgb(241,36,4)" fg:x="21578" fg:w="18"/><text x="19.9344%" y="655.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="19.6844%" y="629" width="0.0164%" height="15" fill="rgb(241,130,17)" fg:x="21578" fg:w="18"/><text x="19.9344%" y="639.50"></text></g><g><title>snmalloc::Remote::set_info (13 samples, 0.01%)</title><rect x="19.7008%" y="645" width="0.0119%" height="15" fill="rgb(206,137,32)" fg:x="21596" fg:w="13"/><text x="19.9508%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (100 samples, 0.09%)</title><rect x="19.6223%" y="677" width="0.0912%" height="15" fill="rgb(237,228,51)" fg:x="21510" fg:w="100"/><text x="19.8723%" y="687.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (85 samples, 0.08%)</title><rect x="19.6360%" y="661" width="0.0775%" height="15" fill="rgb(243,6,42)" fg:x="21525" fg:w="85"/><text x="19.8860%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (163 samples, 0.15%)</title><rect x="19.6059%" y="709" width="0.1487%" height="15" fill="rgb(251,74,28)" fg:x="21492" fg:w="163"/><text x="19.8559%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (163 samples, 0.15%)</title><rect x="19.6059%" y="693" width="0.1487%" height="15" fill="rgb(218,20,49)" fg:x="21492" fg:w="163"/><text x="19.8559%" y="703.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (41 samples, 0.04%)</title><rect x="19.7172%" y="677" width="0.0374%" height="15" fill="rgb(238,28,14)" fg:x="21614" fg:w="41"/><text x="19.9672%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (164 samples, 0.15%)</title><rect x="19.6059%" y="741" width="0.1496%" height="15" fill="rgb(229,40,46)" fg:x="21492" fg:w="164"/><text x="19.8559%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (164 samples, 0.15%)</title><rect x="19.6059%" y="725" width="0.1496%" height="15" fill="rgb(244,195,20)" fg:x="21492" fg:w="164"/><text x="19.8559%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (191 samples, 0.17%)</title><rect x="19.5913%" y="757" width="0.1742%" height="15" fill="rgb(253,56,35)" fg:x="21476" fg:w="191"/><text x="19.8413%" y="767.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="19.7555%" y="741" width="0.0100%" height="15" fill="rgb(210,149,44)" fg:x="21656" fg:w="11"/><text x="20.0055%" y="751.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="19.7555%" y="725" width="0.0100%" height="15" fill="rgb(240,135,12)" fg:x="21656" fg:w="11"/><text x="20.0055%" y="735.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="19.7555%" y="709" width="0.0100%" height="15" fill="rgb(251,24,50)" fg:x="21656" fg:w="11"/><text x="20.0055%" y="719.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="19.7555%" y="693" width="0.0100%" height="15" fill="rgb(243,200,47)" fg:x="21656" fg:w="11"/><text x="20.0055%" y="703.50"></text></g><g><title>rust_dealloc (216 samples, 0.20%)</title><rect x="19.5877%" y="773" width="0.1970%" height="15" fill="rgb(224,166,26)" fg:x="21472" fg:w="216"/><text x="19.8377%" y="783.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (21 samples, 0.02%)</title><rect x="19.7656%" y="757" width="0.0192%" height="15" fill="rgb(233,0,47)" fg:x="21667" fg:w="21"/><text x="20.0156%" y="767.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (403 samples, 0.37%)</title><rect x="19.4207%" y="789" width="0.3676%" height="15" fill="rgb(253,80,5)" fg:x="21289" fg:w="403"/><text x="19.6707%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="20.7380%" y="773" width="0.0164%" height="15" fill="rgb(214,133,25)" fg:x="22733" fg:w="18"/><text x="20.9880%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (439 samples, 0.40%)</title><rect x="21.0664%" y="741" width="0.4005%" height="15" fill="rgb(209,27,14)" fg:x="23093" fg:w="439"/><text x="21.3164%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (388 samples, 0.35%)</title><rect x="21.4669%" y="741" width="0.3540%" height="15" fill="rgb(219,102,51)" fg:x="23532" fg:w="388"/><text x="21.7169%" y="751.50"></text></g><g><title>core::ptr::write (370 samples, 0.34%)</title><rect x="21.4833%" y="725" width="0.3375%" height="15" fill="rgb(237,18,16)" fg:x="23550" fg:w="370"/><text x="21.7333%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (366 samples, 0.33%)</title><rect x="21.4870%" y="709" width="0.3339%" height="15" fill="rgb(241,85,17)" fg:x="23554" fg:w="366"/><text x="21.7370%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (26 samples, 0.02%)</title><rect x="21.8217%" y="741" width="0.0237%" height="15" fill="rgb(236,90,42)" fg:x="23921" fg:w="26"/><text x="22.0717%" y="751.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (38 samples, 0.03%)</title><rect x="21.8756%" y="709" width="0.0347%" height="15" fill="rgb(249,57,21)" fg:x="23980" fg:w="38"/><text x="22.1256%" y="719.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (38 samples, 0.03%)</title><rect x="21.8756%" y="693" width="0.0347%" height="15" fill="rgb(243,12,36)" fg:x="23980" fg:w="38"/><text x="22.1256%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (692 samples, 0.63%)</title><rect x="21.9130%" y="645" width="0.6313%" height="15" fill="rgb(253,128,47)" fg:x="24021" fg:w="692"/><text x="22.1630%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (609 samples, 0.56%)</title><rect x="21.9887%" y="629" width="0.5556%" height="15" fill="rgb(207,33,20)" fg:x="24104" fg:w="609"/><text x="22.2387%" y="639.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (745 samples, 0.68%)</title><rect x="21.8664%" y="725" width="0.6796%" height="15" fill="rgb(233,215,35)" fg:x="23970" fg:w="745"/><text x="22.1164%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (694 samples, 0.63%)</title><rect x="21.9130%" y="709" width="0.6331%" height="15" fill="rgb(249,188,52)" fg:x="24021" fg:w="694"/><text x="22.1630%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (694 samples, 0.63%)</title><rect x="21.9130%" y="693" width="0.6331%" height="15" fill="rgb(225,12,32)" fg:x="24021" fg:w="694"/><text x="22.1630%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (694 samples, 0.63%)</title><rect x="21.9130%" y="677" width="0.6331%" height="15" fill="rgb(247,98,14)" fg:x="24021" fg:w="694"/><text x="22.1630%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (694 samples, 0.63%)</title><rect x="21.9130%" y="661" width="0.6331%" height="15" fill="rgb(247,219,48)" fg:x="24021" fg:w="694"/><text x="22.1630%" y="671.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (783 samples, 0.71%)</title><rect x="21.8455%" y="741" width="0.7143%" height="15" fill="rgb(253,60,48)" fg:x="23947" fg:w="783"/><text x="22.0955%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (15 samples, 0.01%)</title><rect x="22.5461%" y="725" width="0.0137%" height="15" fill="rgb(245,15,52)" fg:x="24715" fg:w="15"/><text x="22.7961%" y="735.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="23.1235%" y="709" width="0.0164%" height="15" fill="rgb(220,133,28)" fg:x="25348" fg:w="18"/><text x="23.3735%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (63 samples, 0.06%)</title><rect x="23.1399%" y="709" width="0.0575%" height="15" fill="rgb(217,180,4)" fg:x="25366" fg:w="63"/><text x="23.3899%" y="719.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="23.1846%" y="693" width="0.0128%" height="15" fill="rgb(251,24,1)" fg:x="25415" fg:w="14"/><text x="23.4346%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (340 samples, 0.31%)</title><rect x="23.1974%" y="709" width="0.3102%" height="15" fill="rgb(212,185,49)" fg:x="25429" fg:w="340"/><text x="23.4474%" y="719.50"></text></g><g><title>core::ptr::write (339 samples, 0.31%)</title><rect x="23.1983%" y="693" width="0.3093%" height="15" fill="rgb(215,175,22)" fg:x="25430" fg:w="339"/><text x="23.4483%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (328 samples, 0.30%)</title><rect x="23.2084%" y="677" width="0.2992%" height="15" fill="rgb(250,205,14)" fg:x="25441" fg:w="328"/><text x="23.4584%" y="687.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,036 samples, 0.95%)</title><rect x="22.5762%" y="725" width="0.9451%" height="15" fill="rgb(225,211,22)" fg:x="24748" fg:w="1036"/><text x="22.8262%" y="735.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,081 samples, 0.99%)</title><rect x="22.5598%" y="741" width="0.9861%" height="15" fill="rgb(251,179,42)" fg:x="24730" fg:w="1081"/><text x="22.8098%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (27 samples, 0.02%)</title><rect x="23.5213%" y="725" width="0.0246%" height="15" fill="rgb(208,216,51)" fg:x="25784" fg:w="27"/><text x="23.7713%" y="735.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (2,927 samples, 2.67%)</title><rect x="20.8794%" y="757" width="2.6701%" height="15" fill="rgb(235,36,11)" fg:x="22888" fg:w="2927"/><text x="21.1294%" y="767.50">tr..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (40 samples, 0.04%)</title><rect x="23.5495%" y="757" width="0.0365%" height="15" fill="rgb(213,189,28)" fg:x="25815" fg:w="40"/><text x="23.7995%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,146 samples, 2.87%)</title><rect x="20.7553%" y="773" width="2.8699%" height="15" fill="rgb(227,203,42)" fg:x="22752" fg:w="3146"/><text x="21.0053%" y="783.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (43 samples, 0.04%)</title><rect x="23.5860%" y="757" width="0.0392%" height="15" fill="rgb(244,72,36)" fg:x="25855" fg:w="43"/><text x="23.8360%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,198 samples, 1.09%)</title><rect x="23.6253%" y="773" width="1.0929%" height="15" fill="rgb(213,53,17)" fg:x="25898" fg:w="1198"/><text x="23.8753%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="24.7181%" y="757" width="0.0155%" height="15" fill="rgb(207,167,3)" fg:x="27096" fg:w="17"/><text x="24.9681%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (19 samples, 0.02%)</title><rect x="24.7181%" y="773" width="0.0173%" height="15" fill="rgb(216,98,30)" fg:x="27096" fg:w="19"/><text x="24.9681%" y="783.50"></text></g><g><title>async_global_executor::reactor::block_on (14,675 samples, 13.39%)</title><rect x="11.3602%" y="1125" width="13.3872%" height="15" fill="rgb(236,123,15)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="1135.50">async_global_executo..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (14,675 samples, 13.39%)</title><rect x="11.3602%" y="1109" width="13.3872%" height="15" fill="rgb(248,81,50)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="1119.50">async_global_executo..</text></g><g><title>async_io::driver::block_on (14,675 samples, 13.39%)</title><rect x="11.3602%" y="1093" width="13.3872%" height="15" fill="rgb(214,120,4)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="1103.50">async_io::driver::bl..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (14,675 samples, 13.39%)</title><rect x="11.3602%" y="1077" width="13.3872%" height="15" fill="rgb(208,179,34)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="1087.50">&lt;futures_lite::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,675 samples, 13.39%)</title><rect x="11.3602%" y="1061" width="13.3872%" height="15" fill="rgb(227,140,7)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="1071.50">&lt;core::future::from_..</text></g><g><title>async_executor::Executor::run::{{closure}} (14,675 samples, 13.39%)</title><rect x="11.3602%" y="1045" width="13.3872%" height="15" fill="rgb(214,22,6)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="1055.50">async_executor::Exec..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (14,675 samples, 13.39%)</title><rect x="11.3602%" y="1029" width="13.3872%" height="15" fill="rgb(207,137,27)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="1039.50">&lt;futures_lite::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,675 samples, 13.39%)</title><rect x="11.3602%" y="1013" width="13.3872%" height="15" fill="rgb(210,8,46)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="1023.50">&lt;core::future::from_..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (14,675 samples, 13.39%)</title><rect x="11.3602%" y="997" width="13.3872%" height="15" fill="rgb(240,16,54)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="1007.50">async_executor::Exec..</text></g><g><title>async_task::runnable::Runnable::run (14,675 samples, 13.39%)</title><rect x="11.3602%" y="981" width="13.3872%" height="15" fill="rgb(211,209,29)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="991.50">async_task::runnable..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (14,675 samples, 13.39%)</title><rect x="11.3602%" y="965" width="13.3872%" height="15" fill="rgb(226,228,24)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="975.50">async_task::raw::Raw..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14,675 samples, 13.39%)</title><rect x="11.3602%" y="949" width="13.3872%" height="15" fill="rgb(222,84,9)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="959.50">&lt;core::pin::Pin&lt;P&gt; a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,675 samples, 13.39%)</title><rect x="11.3602%" y="933" width="13.3872%" height="15" fill="rgb(234,203,30)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="943.50">&lt;core::future::from_..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (14,675 samples, 13.39%)</title><rect x="11.3602%" y="917" width="13.3872%" height="15" fill="rgb(238,109,14)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="927.50">async_executor::Exec..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (14,675 samples, 13.39%)</title><rect x="11.3602%" y="901" width="13.3872%" height="15" fill="rgb(233,206,34)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="911.50">&lt;async_std::task::bu..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (14,675 samples, 13.39%)</title><rect x="11.3602%" y="885" width="13.3872%" height="15" fill="rgb(220,167,47)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="895.50">async_std::task::tas..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14,675 samples, 13.39%)</title><rect x="11.3602%" y="869" width="13.3872%" height="15" fill="rgb(238,105,10)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="879.50">std::thread::local::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14,675 samples, 13.39%)</title><rect x="11.3602%" y="853" width="13.3872%" height="15" fill="rgb(213,227,17)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="863.50">std::thread::local::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (14,675 samples, 13.39%)</title><rect x="11.3602%" y="837" width="13.3872%" height="15" fill="rgb(217,132,38)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="847.50">async_std::task::tas..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (14,675 samples, 13.39%)</title><rect x="11.3602%" y="821" width="13.3872%" height="15" fill="rgb(242,146,4)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="831.50">&lt;async_std::task::bu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,675 samples, 13.39%)</title><rect x="11.3602%" y="805" width="13.3872%" height="15" fill="rgb(212,61,9)" fg:x="12453" fg:w="14675"/><text x="11.6102%" y="815.50">&lt;core::future::from_..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,436 samples, 4.96%)</title><rect x="19.7884%" y="789" width="4.9589%" height="15" fill="rgb(247,126,22)" fg:x="21692" fg:w="5436"/><text x="20.0384%" y="799.50">tremor..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (43 samples, 0.04%)</title><rect x="24.7473%" y="661" width="0.0392%" height="15" fill="rgb(220,196,2)" fg:x="27128" fg:w="43"/><text x="24.9973%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (46 samples, 0.04%)</title><rect x="26.0546%" y="613" width="0.0420%" height="15" fill="rgb(208,46,4)" fg:x="28561" fg:w="46"/><text x="26.3046%" y="623.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (46 samples, 0.04%)</title><rect x="26.0546%" y="597" width="0.0420%" height="15" fill="rgb(252,104,46)" fg:x="28561" fg:w="46"/><text x="26.3046%" y="607.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (146 samples, 0.13%)</title><rect x="26.0965%" y="581" width="0.1332%" height="15" fill="rgb(237,152,48)" fg:x="28607" fg:w="146"/><text x="26.3465%" y="591.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (141 samples, 0.13%)</title><rect x="26.1011%" y="565" width="0.1286%" height="15" fill="rgb(221,59,37)" fg:x="28612" fg:w="141"/><text x="26.3511%" y="575.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (141 samples, 0.13%)</title><rect x="26.1011%" y="549" width="0.1286%" height="15" fill="rgb(209,202,51)" fg:x="28612" fg:w="141"/><text x="26.3511%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (27 samples, 0.02%)</title><rect x="26.2708%" y="533" width="0.0246%" height="15" fill="rgb(228,81,30)" fg:x="28798" fg:w="27"/><text x="26.5208%" y="543.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (27 samples, 0.02%)</title><rect x="26.2708%" y="517" width="0.0246%" height="15" fill="rgb(227,42,39)" fg:x="28798" fg:w="27"/><text x="26.5208%" y="527.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (27 samples, 0.02%)</title><rect x="26.2708%" y="501" width="0.0246%" height="15" fill="rgb(221,26,2)" fg:x="28798" fg:w="27"/><text x="26.5208%" y="511.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="26.2954%" y="485" width="0.0164%" height="15" fill="rgb(254,61,31)" fg:x="28825" fg:w="18"/><text x="26.5454%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.02%)</title><rect x="26.2954%" y="469" width="0.0164%" height="15" fill="rgb(222,173,38)" fg:x="28825" fg:w="18"/><text x="26.5454%" y="479.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (18 samples, 0.02%)</title><rect x="26.2954%" y="453" width="0.0164%" height="15" fill="rgb(218,50,12)" fg:x="28825" fg:w="18"/><text x="26.5454%" y="463.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,476 samples, 1.35%)</title><rect x="26.2416%" y="565" width="1.3465%" height="15" fill="rgb(223,88,40)" fg:x="28766" fg:w="1476"/><text x="26.4916%" y="575.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,455 samples, 1.33%)</title><rect x="26.2607%" y="549" width="1.3273%" height="15" fill="rgb(237,54,19)" fg:x="28787" fg:w="1455"/><text x="26.5107%" y="559.50"></text></g><g><title>std::panic::catch_unwind (1,417 samples, 1.29%)</title><rect x="26.2954%" y="533" width="1.2926%" height="15" fill="rgb(251,129,25)" fg:x="28825" fg:w="1417"/><text x="26.5454%" y="543.50"></text></g><g><title>std::panicking::try (1,417 samples, 1.29%)</title><rect x="26.2954%" y="517" width="1.2926%" height="15" fill="rgb(238,97,19)" fg:x="28825" fg:w="1417"/><text x="26.5454%" y="527.50"></text></g><g><title>std::panicking::try::do_call (1,417 samples, 1.29%)</title><rect x="26.2954%" y="501" width="1.2926%" height="15" fill="rgb(240,169,18)" fg:x="28825" fg:w="1417"/><text x="26.5454%" y="511.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1,399 samples, 1.28%)</title><rect x="26.3118%" y="485" width="1.2762%" height="15" fill="rgb(230,187,49)" fg:x="28843" fg:w="1399"/><text x="26.5618%" y="495.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,497 samples, 1.37%)</title><rect x="26.2297%" y="581" width="1.3656%" height="15" fill="rgb(209,44,26)" fg:x="28753" fg:w="1497"/><text x="26.4797%" y="591.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,812 samples, 1.65%)</title><rect x="26.0965%" y="613" width="1.6530%" height="15" fill="rgb(244,0,6)" fg:x="28607" fg:w="1812"/><text x="26.3465%" y="623.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,812 samples, 1.65%)</title><rect x="26.0965%" y="597" width="1.6530%" height="15" fill="rgb(248,18,21)" fg:x="28607" fg:w="1812"/><text x="26.3465%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (169 samples, 0.15%)</title><rect x="27.5953%" y="581" width="0.1542%" height="15" fill="rgb(245,180,19)" fg:x="30250" fg:w="169"/><text x="27.8453%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (533 samples, 0.49%)</title><rect x="27.7495%" y="613" width="0.4862%" height="15" fill="rgb(252,118,36)" fg:x="30419" fg:w="533"/><text x="27.9995%" y="623.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (44 samples, 0.04%)</title><rect x="28.2357%" y="613" width="0.0401%" height="15" fill="rgb(210,224,19)" fg:x="30952" fg:w="44"/><text x="28.4857%" y="623.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="28.2895%" y="485" width="0.0100%" height="15" fill="rgb(218,30,24)" fg:x="31011" fg:w="11"/><text x="28.5395%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="28.2895%" y="469" width="0.0100%" height="15" fill="rgb(219,75,50)" fg:x="31011" fg:w="11"/><text x="28.5395%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="28.2895%" y="453" width="0.0100%" height="15" fill="rgb(234,72,50)" fg:x="31011" fg:w="11"/><text x="28.5395%" y="463.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="28.2895%" y="437" width="0.0100%" height="15" fill="rgb(219,100,48)" fg:x="31011" fg:w="11"/><text x="28.5395%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="28.2895%" y="421" width="0.0100%" height="15" fill="rgb(253,5,41)" fg:x="31011" fg:w="11"/><text x="28.5395%" y="431.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (21 samples, 0.02%)</title><rect x="28.2813%" y="565" width="0.0192%" height="15" fill="rgb(247,181,11)" fg:x="31002" fg:w="21"/><text x="28.5313%" y="575.50"></text></g><g><title>async_ffi::DropBomb::with (21 samples, 0.02%)</title><rect x="28.2813%" y="549" width="0.0192%" height="15" fill="rgb(222,223,25)" fg:x="31002" fg:w="21"/><text x="28.5313%" y="559.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (12 samples, 0.01%)</title><rect x="28.2895%" y="533" width="0.0109%" height="15" fill="rgb(214,198,28)" fg:x="31011" fg:w="12"/><text x="28.5395%" y="543.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="28.2895%" y="517" width="0.0109%" height="15" fill="rgb(230,46,43)" fg:x="31011" fg:w="12"/><text x="28.5395%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}}&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="28.2895%" y="501" width="0.0109%" height="15" fill="rgb(233,65,53)" fg:x="31011" fg:w="12"/><text x="28.5395%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="28.3333%" y="421" width="0.0109%" height="15" fill="rgb(221,121,27)" fg:x="31059" fg:w="12"/><text x="28.5833%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (38 samples, 0.03%)</title><rect x="28.3169%" y="469" width="0.0347%" height="15" fill="rgb(247,70,47)" fg:x="31041" fg:w="38"/><text x="28.5669%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (38 samples, 0.03%)</title><rect x="28.3169%" y="453" width="0.0347%" height="15" fill="rgb(228,85,35)" fg:x="31041" fg:w="38"/><text x="28.5669%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (38 samples, 0.03%)</title><rect x="28.3169%" y="437" width="0.0347%" height="15" fill="rgb(209,50,18)" fg:x="31041" fg:w="38"/><text x="28.5669%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (59 samples, 0.05%)</title><rect x="28.3087%" y="501" width="0.0538%" height="15" fill="rgb(250,19,35)" fg:x="31032" fg:w="59"/><text x="28.5587%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (59 samples, 0.05%)</title><rect x="28.3087%" y="485" width="0.0538%" height="15" fill="rgb(253,107,29)" fg:x="31032" fg:w="59"/><text x="28.5587%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="28.3516%" y="469" width="0.0109%" height="15" fill="rgb(252,179,29)" fg:x="31079" fg:w="12"/><text x="28.6016%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (68 samples, 0.06%)</title><rect x="28.3087%" y="533" width="0.0620%" height="15" fill="rgb(238,194,6)" fg:x="31032" fg:w="68"/><text x="28.5587%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (68 samples, 0.06%)</title><rect x="28.3087%" y="517" width="0.0620%" height="15" fill="rgb(238,164,29)" fg:x="31032" fg:w="68"/><text x="28.5587%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (72 samples, 0.07%)</title><rect x="28.3087%" y="549" width="0.0657%" height="15" fill="rgb(224,25,9)" fg:x="31032" fg:w="72"/><text x="28.5587%" y="559.50"></text></g><g><title>rust_dealloc (86 samples, 0.08%)</title><rect x="28.3005%" y="565" width="0.0785%" height="15" fill="rgb(244,153,23)" fg:x="31023" fg:w="86"/><text x="28.5505%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (15 samples, 0.01%)</title><rect x="28.3799%" y="549" width="0.0137%" height="15" fill="rgb(212,203,14)" fg:x="31110" fg:w="15"/><text x="28.6299%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (125 samples, 0.11%)</title><rect x="28.2813%" y="613" width="0.1140%" height="15" fill="rgb(220,164,20)" fg:x="31002" fg:w="125"/><text x="28.5313%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (125 samples, 0.11%)</title><rect x="28.2813%" y="597" width="0.1140%" height="15" fill="rgb(222,203,48)" fg:x="31002" fg:w="125"/><text x="28.5313%" y="607.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (125 samples, 0.11%)</title><rect x="28.2813%" y="581" width="0.1140%" height="15" fill="rgb(215,159,22)" fg:x="31002" fg:w="125"/><text x="28.5313%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (18 samples, 0.02%)</title><rect x="28.3789%" y="565" width="0.0164%" height="15" fill="rgb(216,183,47)" fg:x="31109" fg:w="18"/><text x="28.6289%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (138 samples, 0.13%)</title><rect x="28.8241%" y="597" width="0.1259%" height="15" fill="rgb(229,195,25)" fg:x="31597" fg:w="138"/><text x="29.0741%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (177 samples, 0.16%)</title><rect x="28.9828%" y="501" width="0.1615%" height="15" fill="rgb(224,132,51)" fg:x="31771" fg:w="177"/><text x="29.2328%" y="511.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="29.1553%" y="389" width="0.0109%" height="15" fill="rgb(240,63,7)" fg:x="31960" fg:w="12"/><text x="29.4053%" y="399.50"></text></g><g><title>rust_alloc (27 samples, 0.02%)</title><rect x="29.1708%" y="357" width="0.0246%" height="15" fill="rgb(249,182,41)" fg:x="31977" fg:w="27"/><text x="29.4208%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (15 samples, 0.01%)</title><rect x="29.2155%" y="277" width="0.0137%" height="15" fill="rgb(243,47,26)" fg:x="32026" fg:w="15"/><text x="29.4655%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (15 samples, 0.01%)</title><rect x="29.2155%" y="261" width="0.0137%" height="15" fill="rgb(233,48,2)" fg:x="32026" fg:w="15"/><text x="29.4655%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (15 samples, 0.01%)</title><rect x="29.2155%" y="245" width="0.0137%" height="15" fill="rgb(244,165,34)" fg:x="32026" fg:w="15"/><text x="29.4655%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (18 samples, 0.02%)</title><rect x="29.2155%" y="293" width="0.0164%" height="15" fill="rgb(207,89,7)" fg:x="32026" fg:w="18"/><text x="29.4655%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (29 samples, 0.03%)</title><rect x="29.2127%" y="309" width="0.0265%" height="15" fill="rgb(244,117,36)" fg:x="32023" fg:w="29"/><text x="29.4627%" y="319.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="29.2438%" y="293" width="0.0100%" height="15" fill="rgb(226,144,34)" fg:x="32057" fg:w="11"/><text x="29.4938%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (129 samples, 0.12%)</title><rect x="29.2118%" y="341" width="0.1177%" height="15" fill="rgb(213,23,19)" fg:x="32022" fg:w="129"/><text x="29.4618%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (129 samples, 0.12%)</title><rect x="29.2118%" y="325" width="0.1177%" height="15" fill="rgb(217,75,12)" fg:x="32022" fg:w="129"/><text x="29.4618%" y="335.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (99 samples, 0.09%)</title><rect x="29.2392%" y="309" width="0.0903%" height="15" fill="rgb(224,159,17)" fg:x="32052" fg:w="99"/><text x="29.4892%" y="319.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (83 samples, 0.08%)</title><rect x="29.2538%" y="293" width="0.0757%" height="15" fill="rgb(217,118,1)" fg:x="32068" fg:w="83"/><text x="29.5038%" y="303.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (83 samples, 0.08%)</title><rect x="29.2538%" y="277" width="0.0757%" height="15" fill="rgb(232,180,48)" fg:x="32068" fg:w="83"/><text x="29.5038%" y="287.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (83 samples, 0.08%)</title><rect x="29.2538%" y="261" width="0.0757%" height="15" fill="rgb(230,27,33)" fg:x="32068" fg:w="83"/><text x="29.5038%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (14 samples, 0.01%)</title><rect x="29.3332%" y="309" width="0.0128%" height="15" fill="rgb(205,31,21)" fg:x="32155" fg:w="14"/><text x="29.5832%" y="319.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (13 samples, 0.01%)</title><rect x="29.3341%" y="293" width="0.0119%" height="15" fill="rgb(253,59,4)" fg:x="32156" fg:w="13"/><text x="29.5841%" y="303.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="29.3341%" y="277" width="0.0119%" height="15" fill="rgb(224,201,9)" fg:x="32156" fg:w="13"/><text x="29.5841%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::take (30 samples, 0.03%)</title><rect x="29.3459%" y="309" width="0.0274%" height="15" fill="rgb(229,206,30)" fg:x="32169" fg:w="30"/><text x="29.5959%" y="319.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (30 samples, 0.03%)</title><rect x="29.3459%" y="293" width="0.0274%" height="15" fill="rgb(212,67,47)" fg:x="32169" fg:w="30"/><text x="29.5959%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="29.3295%" y="341" width="0.0529%" height="15" fill="rgb(211,96,50)" fg:x="32151" fg:w="58"/><text x="29.5795%" y="351.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (55 samples, 0.05%)</title><rect x="29.3322%" y="325" width="0.0502%" height="15" fill="rgb(252,114,18)" fg:x="32154" fg:w="55"/><text x="29.5822%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="29.3824%" y="341" width="0.0128%" height="15" fill="rgb(223,58,37)" fg:x="32209" fg:w="14"/><text x="29.6324%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="29.3824%" y="325" width="0.0128%" height="15" fill="rgb(237,70,4)" fg:x="32209" fg:w="14"/><text x="29.6324%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="29.3842%" y="309" width="0.0109%" height="15" fill="rgb(244,85,46)" fg:x="32211" fg:w="12"/><text x="29.6342%" y="319.50"></text></g><g><title>snmalloc::FreeListIter::empty (60 samples, 0.05%)</title><rect x="29.3952%" y="341" width="0.0547%" height="15" fill="rgb(223,39,52)" fg:x="32223" fg:w="60"/><text x="29.6452%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (60 samples, 0.05%)</title><rect x="29.3952%" y="325" width="0.0547%" height="15" fill="rgb(218,200,14)" fg:x="32223" fg:w="60"/><text x="29.6452%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (650 samples, 0.59%)</title><rect x="29.1708%" y="389" width="0.5930%" height="15" fill="rgb(208,171,16)" fg:x="31977" fg:w="650"/><text x="29.4208%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (650 samples, 0.59%)</title><rect x="29.1708%" y="373" width="0.5930%" height="15" fill="rgb(234,200,18)" fg:x="31977" fg:w="650"/><text x="29.4208%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (623 samples, 0.57%)</title><rect x="29.1954%" y="357" width="0.5683%" height="15" fill="rgb(228,45,11)" fg:x="32004" fg:w="623"/><text x="29.4454%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (344 samples, 0.31%)</title><rect x="29.4499%" y="341" width="0.3138%" height="15" fill="rgb(237,182,11)" fg:x="32283" fg:w="344"/><text x="29.6999%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (344 samples, 0.31%)</title><rect x="29.4499%" y="325" width="0.3138%" height="15" fill="rgb(241,175,49)" fg:x="32283" fg:w="344"/><text x="29.6999%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (884 samples, 0.81%)</title><rect x="28.9628%" y="517" width="0.8064%" height="15" fill="rgb(247,38,35)" fg:x="31749" fg:w="884"/><text x="29.2128%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (685 samples, 0.62%)</title><rect x="29.1443%" y="501" width="0.6249%" height="15" fill="rgb(228,39,49)" fg:x="31948" fg:w="685"/><text x="29.3943%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (685 samples, 0.62%)</title><rect x="29.1443%" y="485" width="0.6249%" height="15" fill="rgb(226,101,26)" fg:x="31948" fg:w="685"/><text x="29.3943%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (685 samples, 0.62%)</title><rect x="29.1443%" y="469" width="0.6249%" height="15" fill="rgb(206,141,19)" fg:x="31948" fg:w="685"/><text x="29.3943%" y="479.50"></text></g><g><title>alloc::alloc::alloc (685 samples, 0.62%)</title><rect x="29.1443%" y="453" width="0.6249%" height="15" fill="rgb(211,200,13)" fg:x="31948" fg:w="685"/><text x="29.3943%" y="463.50"></text></g><g><title>__rg_alloc (685 samples, 0.62%)</title><rect x="29.1443%" y="437" width="0.6249%" height="15" fill="rgb(241,121,6)" fg:x="31948" fg:w="685"/><text x="29.3943%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (685 samples, 0.62%)</title><rect x="29.1443%" y="421" width="0.6249%" height="15" fill="rgb(234,221,29)" fg:x="31948" fg:w="685"/><text x="29.3943%" y="431.50"></text></g><g><title>rust_alloc (673 samples, 0.61%)</title><rect x="29.1553%" y="405" width="0.6139%" height="15" fill="rgb(229,136,5)" fg:x="31960" fg:w="673"/><text x="29.4053%" y="415.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (898 samples, 0.82%)</title><rect x="28.9537%" y="597" width="0.8192%" height="15" fill="rgb(238,36,11)" fg:x="31739" fg:w="898"/><text x="29.2037%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (888 samples, 0.81%)</title><rect x="28.9628%" y="581" width="0.8101%" height="15" fill="rgb(251,55,41)" fg:x="31749" fg:w="888"/><text x="29.2128%" y="591.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (888 samples, 0.81%)</title><rect x="28.9628%" y="565" width="0.8101%" height="15" fill="rgb(242,34,40)" fg:x="31749" fg:w="888"/><text x="29.2128%" y="575.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (888 samples, 0.81%)</title><rect x="28.9628%" y="549" width="0.8101%" height="15" fill="rgb(215,42,17)" fg:x="31749" fg:w="888"/><text x="29.2128%" y="559.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (888 samples, 0.81%)</title><rect x="28.9628%" y="533" width="0.8101%" height="15" fill="rgb(207,44,46)" fg:x="31749" fg:w="888"/><text x="29.2128%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::_::&lt;impl tremor_runtime::connectors::sink::RawSink_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::on_event (22 samples, 0.02%)</title><rect x="29.7729%" y="597" width="0.0201%" height="15" fill="rgb(211,206,28)" fg:x="32637" fg:w="22"/><text x="30.0229%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (4,925 samples, 4.49%)</title><rect x="25.3020%" y="629" width="4.4928%" height="15" fill="rgb(237,167,16)" fg:x="27736" fg:w="4925"/><text x="25.5520%" y="639.50">tremo..</text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (1,534 samples, 1.40%)</title><rect x="28.3954%" y="613" width="1.3994%" height="15" fill="rgb(233,66,6)" fg:x="31127" fg:w="1534"/><text x="28.6454%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,206 samples, 4.75%)</title><rect x="25.0465%" y="645" width="4.7491%" height="15" fill="rgb(246,123,29)" fg:x="27456" fg:w="5206"/><text x="25.2965%" y="655.50">&lt;core:..</text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="29.7957%" y="645" width="0.0237%" height="15" fill="rgb(209,62,40)" fg:x="32662" fg:w="26"/><text x="30.0457%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.02%)</title><rect x="29.8677%" y="597" width="0.0164%" height="15" fill="rgb(218,4,25)" fg:x="32741" fg:w="18"/><text x="30.1177%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (18 samples, 0.02%)</title><rect x="29.8677%" y="581" width="0.0164%" height="15" fill="rgb(253,91,49)" fg:x="32741" fg:w="18"/><text x="30.1177%" y="591.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (81 samples, 0.07%)</title><rect x="29.8349%" y="629" width="0.0739%" height="15" fill="rgb(228,155,29)" fg:x="32705" fg:w="81"/><text x="30.0849%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (70 samples, 0.06%)</title><rect x="29.8449%" y="613" width="0.0639%" height="15" fill="rgb(243,57,37)" fg:x="32716" fg:w="70"/><text x="30.0949%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (27 samples, 0.02%)</title><rect x="29.8841%" y="597" width="0.0246%" height="15" fill="rgb(244,167,17)" fg:x="32759" fg:w="27"/><text x="30.1341%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (27 samples, 0.02%)</title><rect x="29.8841%" y="581" width="0.0246%" height="15" fill="rgb(207,181,38)" fg:x="32759" fg:w="27"/><text x="30.1341%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.02%)</title><rect x="29.8841%" y="565" width="0.0246%" height="15" fill="rgb(211,8,23)" fg:x="32759" fg:w="27"/><text x="30.1341%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.02%)</title><rect x="29.8841%" y="549" width="0.0246%" height="15" fill="rgb(235,11,44)" fg:x="32759" fg:w="27"/><text x="30.1341%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.02%)</title><rect x="29.8841%" y="533" width="0.0246%" height="15" fill="rgb(248,18,52)" fg:x="32759" fg:w="27"/><text x="30.1341%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.02%)</title><rect x="29.8841%" y="517" width="0.0246%" height="15" fill="rgb(208,4,7)" fg:x="32759" fg:w="27"/><text x="30.1341%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="29.8951%" y="501" width="0.0137%" height="15" fill="rgb(240,17,39)" fg:x="32771" fg:w="15"/><text x="30.1451%" y="511.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="29.9088%" y="629" width="0.0228%" height="15" fill="rgb(207,170,3)" fg:x="32786" fg:w="25"/><text x="30.1588%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (136 samples, 0.12%)</title><rect x="29.8194%" y="645" width="0.1241%" height="15" fill="rgb(236,100,52)" fg:x="32688" fg:w="136"/><text x="30.0694%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (12 samples, 0.01%)</title><rect x="29.9325%" y="629" width="0.0109%" height="15" fill="rgb(246,78,51)" fg:x="32812" fg:w="12"/><text x="30.1825%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,478 samples, 1.35%)</title><rect x="29.9434%" y="645" width="1.3483%" height="15" fill="rgb(211,17,15)" fg:x="32824" fg:w="1478"/><text x="30.1934%" y="655.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (28 samples, 0.03%)</title><rect x="31.4122%" y="357" width="0.0255%" height="15" fill="rgb(209,59,46)" fg:x="34434" fg:w="28"/><text x="31.6622%" y="367.50"></text></g><g><title> (28 samples, 0.03%)</title><rect x="31.4122%" y="341" width="0.0255%" height="15" fill="rgb(210,92,25)" fg:x="34434" fg:w="28"/><text x="31.6622%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (127 samples, 0.12%)</title><rect x="31.3310%" y="389" width="0.1159%" height="15" fill="rgb(238,174,52)" fg:x="34345" fg:w="127"/><text x="31.5810%" y="399.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (115 samples, 0.10%)</title><rect x="31.3419%" y="373" width="0.1049%" height="15" fill="rgb(230,73,7)" fg:x="34357" fg:w="115"/><text x="31.5919%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (188 samples, 0.17%)</title><rect x="31.3191%" y="421" width="0.1715%" height="15" fill="rgb(243,124,40)" fg:x="34332" fg:w="188"/><text x="31.5691%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (188 samples, 0.17%)</title><rect x="31.3191%" y="405" width="0.1715%" height="15" fill="rgb(244,170,11)" fg:x="34332" fg:w="188"/><text x="31.5691%" y="415.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (46 samples, 0.04%)</title><rect x="31.4486%" y="389" width="0.0420%" height="15" fill="rgb(207,114,54)" fg:x="34474" fg:w="46"/><text x="31.6986%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (200 samples, 0.18%)</title><rect x="31.3136%" y="469" width="0.1824%" height="15" fill="rgb(205,42,20)" fg:x="34326" fg:w="200"/><text x="31.5636%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (194 samples, 0.18%)</title><rect x="31.3191%" y="453" width="0.1770%" height="15" fill="rgb(230,30,28)" fg:x="34332" fg:w="194"/><text x="31.5691%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (194 samples, 0.18%)</title><rect x="31.3191%" y="437" width="0.1770%" height="15" fill="rgb(205,73,54)" fg:x="34332" fg:w="194"/><text x="31.5691%" y="447.50"></text></g><g><title>rust_dealloc (208 samples, 0.19%)</title><rect x="31.3072%" y="485" width="0.1897%" height="15" fill="rgb(254,227,23)" fg:x="34319" fg:w="208"/><text x="31.5572%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (226 samples, 0.21%)</title><rect x="31.2926%" y="645" width="0.2062%" height="15" fill="rgb(228,202,34)" fg:x="34303" fg:w="226"/><text x="31.5426%" y="655.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (226 samples, 0.21%)</title><rect x="31.2926%" y="629" width="0.2062%" height="15" fill="rgb(222,225,37)" fg:x="34303" fg:w="226"/><text x="31.5426%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (210 samples, 0.19%)</title><rect x="31.3072%" y="613" width="0.1916%" height="15" fill="rgb(221,14,54)" fg:x="34319" fg:w="210"/><text x="31.5572%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (210 samples, 0.19%)</title><rect x="31.3072%" y="597" width="0.1916%" height="15" fill="rgb(254,102,2)" fg:x="34319" fg:w="210"/><text x="31.5572%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (210 samples, 0.19%)</title><rect x="31.3072%" y="581" width="0.1916%" height="15" fill="rgb(232,104,17)" fg:x="34319" fg:w="210"/><text x="31.5572%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (210 samples, 0.19%)</title><rect x="31.3072%" y="565" width="0.1916%" height="15" fill="rgb(250,220,14)" fg:x="34319" fg:w="210"/><text x="31.5572%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (210 samples, 0.19%)</title><rect x="31.3072%" y="549" width="0.1916%" height="15" fill="rgb(241,158,9)" fg:x="34319" fg:w="210"/><text x="31.5572%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (210 samples, 0.19%)</title><rect x="31.3072%" y="533" width="0.1916%" height="15" fill="rgb(246,9,43)" fg:x="34319" fg:w="210"/><text x="31.5572%" y="543.50"></text></g><g><title>__rg_dealloc (210 samples, 0.19%)</title><rect x="31.3072%" y="517" width="0.1916%" height="15" fill="rgb(206,73,33)" fg:x="34319" fg:w="210"/><text x="31.5572%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (210 samples, 0.19%)</title><rect x="31.3072%" y="501" width="0.1916%" height="15" fill="rgb(222,79,8)" fg:x="34319" fg:w="210"/><text x="31.5572%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="31.4988%" y="629" width="0.0173%" height="15" fill="rgb(234,8,54)" fg:x="34529" fg:w="19"/><text x="31.7488%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="31.4988%" y="645" width="0.0228%" height="15" fill="rgb(209,134,38)" fg:x="34529" fg:w="25"/><text x="31.7488%" y="655.50"></text></g><g><title>core::time::Duration::as_nanos (20 samples, 0.02%)</title><rect x="31.5672%" y="629" width="0.0182%" height="15" fill="rgb(230,127,29)" fg:x="34604" fg:w="20"/><text x="31.8172%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (105 samples, 0.10%)</title><rect x="31.6612%" y="581" width="0.0958%" height="15" fill="rgb(242,44,41)" fg:x="34707" fg:w="105"/><text x="31.9112%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (105 samples, 0.10%)</title><rect x="31.6612%" y="565" width="0.0958%" height="15" fill="rgb(222,56,43)" fg:x="34707" fg:w="105"/><text x="31.9112%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (104 samples, 0.09%)</title><rect x="31.6621%" y="549" width="0.0949%" height="15" fill="rgb(238,39,47)" fg:x="34708" fg:w="104"/><text x="31.9121%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (104 samples, 0.09%)</title><rect x="31.6621%" y="533" width="0.0949%" height="15" fill="rgb(226,79,43)" fg:x="34708" fg:w="104"/><text x="31.9121%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (104 samples, 0.09%)</title><rect x="31.6621%" y="517" width="0.0949%" height="15" fill="rgb(242,105,53)" fg:x="34708" fg:w="104"/><text x="31.9121%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (60 samples, 0.05%)</title><rect x="31.7022%" y="501" width="0.0547%" height="15" fill="rgb(251,132,46)" fg:x="34752" fg:w="60"/><text x="31.9522%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (233 samples, 0.21%)</title><rect x="31.5864%" y="613" width="0.2126%" height="15" fill="rgb(231,77,14)" fg:x="34625" fg:w="233"/><text x="31.8364%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (233 samples, 0.21%)</title><rect x="31.5864%" y="597" width="0.2126%" height="15" fill="rgb(240,135,9)" fg:x="34625" fg:w="233"/><text x="31.8364%" y="607.50"></text></g><g><title>core::time::Duration::new (46 samples, 0.04%)</title><rect x="31.7570%" y="581" width="0.0420%" height="15" fill="rgb(248,109,14)" fg:x="34812" fg:w="46"/><text x="32.0070%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (253 samples, 0.23%)</title><rect x="31.5864%" y="629" width="0.2308%" height="15" fill="rgb(227,146,52)" fg:x="34625" fg:w="253"/><text x="31.8364%" y="639.50"></text></g><g><title>tremor_common::time::nanotime (20 samples, 0.02%)</title><rect x="31.7989%" y="613" width="0.0182%" height="15" fill="rgb(232,54,3)" fg:x="34858" fg:w="20"/><text x="32.0489%" y="623.50"></text></g><g><title>__clock_gettime_2 (969 samples, 0.88%)</title><rect x="32.0297%" y="581" width="0.8840%" height="15" fill="rgb(229,201,43)" fg:x="35111" fg:w="969"/><text x="32.2797%" y="591.50"></text></g><g><title>__vdso_clock_gettime (912 samples, 0.83%)</title><rect x="32.0817%" y="565" width="0.8320%" height="15" fill="rgb(252,161,33)" fg:x="35168" fg:w="912"/><text x="32.3317%" y="575.50"></text></g><g><title>[[vdso]] (612 samples, 0.56%)</title><rect x="32.3554%" y="549" width="0.5583%" height="15" fill="rgb(226,146,40)" fg:x="35468" fg:w="612"/><text x="32.6054%" y="559.50"></text></g><g><title>tremor_common::time::nanotime (1,527 samples, 1.39%)</title><rect x="31.5216%" y="645" width="1.3930%" height="15" fill="rgb(219,47,25)" fg:x="34554" fg:w="1527"/><text x="31.7716%" y="655.50"></text></g><g><title>std::time::SystemTime::now (1,203 samples, 1.10%)</title><rect x="31.8172%" y="629" width="1.0974%" height="15" fill="rgb(250,135,13)" fg:x="34878" fg:w="1203"/><text x="32.0672%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,203 samples, 1.10%)</title><rect x="31.8172%" y="613" width="1.0974%" height="15" fill="rgb(219,229,18)" fg:x="34878" fg:w="1203"/><text x="32.0672%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (1,203 samples, 1.10%)</title><rect x="31.8172%" y="597" width="1.0974%" height="15" fill="rgb(217,152,27)" fg:x="34878" fg:w="1203"/><text x="32.0672%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (14 samples, 0.01%)</title><rect x="32.9310%" y="533" width="0.0128%" height="15" fill="rgb(225,71,47)" fg:x="36099" fg:w="14"/><text x="33.1810%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="32.9310%" y="517" width="0.0128%" height="15" fill="rgb(220,139,14)" fg:x="36099" fg:w="14"/><text x="33.1810%" y="527.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (14 samples, 0.01%)</title><rect x="32.9310%" y="501" width="0.0128%" height="15" fill="rgb(247,54,32)" fg:x="36099" fg:w="14"/><text x="33.1810%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="32.9219%" y="597" width="0.0283%" height="15" fill="rgb(252,131,39)" fg:x="36089" fg:w="31"/><text x="33.1719%" y="607.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="32.9219%" y="581" width="0.0283%" height="15" fill="rgb(210,108,39)" fg:x="36089" fg:w="31"/><text x="33.1719%" y="591.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="32.9219%" y="565" width="0.0283%" height="15" fill="rgb(205,23,29)" fg:x="36089" fg:w="31"/><text x="33.1719%" y="575.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (21 samples, 0.02%)</title><rect x="32.9310%" y="549" width="0.0192%" height="15" fill="rgb(246,139,46)" fg:x="36099" fg:w="21"/><text x="33.1810%" y="559.50"></text></g><g><title>&lt;abi_stable::std_types::tuple::Tuple2&lt;A,B&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (12 samples, 0.01%)</title><rect x="32.9584%" y="533" width="0.0109%" height="15" fill="rgb(250,81,26)" fg:x="36129" fg:w="12"/><text x="33.2084%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="32.9502%" y="597" width="0.0392%" height="15" fill="rgb(214,104,7)" fg:x="36120" fg:w="43"/><text x="33.2002%" y="607.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="32.9502%" y="581" width="0.0392%" height="15" fill="rgb(233,189,8)" fg:x="36120" fg:w="43"/><text x="33.2002%" y="591.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="32.9502%" y="565" width="0.0392%" height="15" fill="rgb(228,141,17)" fg:x="36120" fg:w="43"/><text x="33.2002%" y="575.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (43 samples, 0.04%)</title><rect x="32.9502%" y="549" width="0.0392%" height="15" fill="rgb(247,157,1)" fg:x="36120" fg:w="43"/><text x="33.2002%" y="559.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;abi_stable::std_types::tuple::Tuple2&lt;K,V&gt;&gt;&gt;::extend (103 samples, 0.09%)</title><rect x="32.9146%" y="629" width="0.0940%" height="15" fill="rgb(249,225,5)" fg:x="36081" fg:w="103"/><text x="33.1646%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (103 samples, 0.09%)</title><rect x="32.9146%" y="613" width="0.0940%" height="15" fill="rgb(242,55,13)" fg:x="36081" fg:w="103"/><text x="33.1646%" y="623.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (21 samples, 0.02%)</title><rect x="32.9894%" y="597" width="0.0192%" height="15" fill="rgb(230,49,50)" fg:x="36163" fg:w="21"/><text x="33.2394%" y="607.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (15 samples, 0.01%)</title><rect x="32.9949%" y="581" width="0.0137%" height="15" fill="rgb(241,111,38)" fg:x="36169" fg:w="15"/><text x="33.2449%" y="591.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (15 samples, 0.01%)</title><rect x="32.9949%" y="565" width="0.0137%" height="15" fill="rgb(252,155,4)" fg:x="36169" fg:w="15"/><text x="33.2449%" y="575.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (13 samples, 0.01%)</title><rect x="32.9967%" y="549" width="0.0119%" height="15" fill="rgb(212,69,32)" fg:x="36171" fg:w="13"/><text x="33.2467%" y="559.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (13 samples, 0.01%)</title><rect x="32.9967%" y="533" width="0.0119%" height="15" fill="rgb(243,107,47)" fg:x="36171" fg:w="13"/><text x="33.2467%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (13 samples, 0.01%)</title><rect x="32.9967%" y="517" width="0.0119%" height="15" fill="rgb(247,130,12)" fg:x="36171" fg:w="13"/><text x="33.2467%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (13 samples, 0.01%)</title><rect x="32.9967%" y="501" width="0.0119%" height="15" fill="rgb(233,74,16)" fg:x="36171" fg:w="13"/><text x="33.2467%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="32.9967%" y="485" width="0.0119%" height="15" fill="rgb(208,58,18)" fg:x="36171" fg:w="13"/><text x="33.2467%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (27 samples, 0.02%)</title><rect x="33.4191%" y="501" width="0.0246%" height="15" fill="rgb(242,225,1)" fg:x="36634" fg:w="27"/><text x="33.6691%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (46 samples, 0.04%)</title><rect x="33.4465%" y="469" width="0.0420%" height="15" fill="rgb(249,39,40)" fg:x="36664" fg:w="46"/><text x="33.6965%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (46 samples, 0.04%)</title><rect x="33.4465%" y="453" width="0.0420%" height="15" fill="rgb(207,72,44)" fg:x="36664" fg:w="46"/><text x="33.6965%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (70 samples, 0.06%)</title><rect x="33.4465%" y="485" width="0.0639%" height="15" fill="rgb(215,193,12)" fg:x="36664" fg:w="70"/><text x="33.6965%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (24 samples, 0.02%)</title><rect x="33.4884%" y="469" width="0.0219%" height="15" fill="rgb(248,41,39)" fg:x="36710" fg:w="24"/><text x="33.7384%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (19 samples, 0.02%)</title><rect x="33.4930%" y="453" width="0.0173%" height="15" fill="rgb(253,85,4)" fg:x="36715" fg:w="19"/><text x="33.7430%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (19 samples, 0.02%)</title><rect x="33.4930%" y="437" width="0.0173%" height="15" fill="rgb(243,70,31)" fg:x="36715" fg:w="19"/><text x="33.7430%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (554 samples, 0.51%)</title><rect x="33.0241%" y="549" width="0.5054%" height="15" fill="rgb(253,195,26)" fg:x="36201" fg:w="554"/><text x="33.2741%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (519 samples, 0.47%)</title><rect x="33.0560%" y="533" width="0.4735%" height="15" fill="rgb(243,42,11)" fg:x="36236" fg:w="519"/><text x="33.3060%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (131 samples, 0.12%)</title><rect x="33.4100%" y="517" width="0.1195%" height="15" fill="rgb(239,66,17)" fg:x="36624" fg:w="131"/><text x="33.6600%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (94 samples, 0.09%)</title><rect x="33.4437%" y="501" width="0.0858%" height="15" fill="rgb(217,132,21)" fg:x="36661" fg:w="94"/><text x="33.6937%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (21 samples, 0.02%)</title><rect x="33.5103%" y="485" width="0.0192%" height="15" fill="rgb(252,202,21)" fg:x="36734" fg:w="21"/><text x="33.7603%" y="495.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="33.5523%" y="357" width="0.0128%" height="15" fill="rgb(233,98,36)" fg:x="36780" fg:w="14"/><text x="33.8023%" y="367.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="33.5523%" y="341" width="0.0128%" height="15" fill="rgb(216,153,54)" fg:x="36780" fg:w="14"/><text x="33.8023%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="33.5523%" y="389" width="0.0365%" height="15" fill="rgb(250,99,7)" fg:x="36780" fg:w="40"/><text x="33.8023%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="33.5523%" y="373" width="0.0365%" height="15" fill="rgb(207,56,50)" fg:x="36780" fg:w="40"/><text x="33.8023%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.02%)</title><rect x="33.5650%" y="357" width="0.0237%" height="15" fill="rgb(244,61,34)" fg:x="36794" fg:w="26"/><text x="33.8150%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (24 samples, 0.02%)</title><rect x="33.5669%" y="341" width="0.0219%" height="15" fill="rgb(241,50,38)" fg:x="36796" fg:w="24"/><text x="33.8169%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (24 samples, 0.02%)</title><rect x="33.5669%" y="325" width="0.0219%" height="15" fill="rgb(212,166,30)" fg:x="36796" fg:w="24"/><text x="33.8169%" y="335.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (76 samples, 0.07%)</title><rect x="33.5295%" y="549" width="0.0693%" height="15" fill="rgb(249,127,32)" fg:x="36755" fg:w="76"/><text x="33.7795%" y="559.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (76 samples, 0.07%)</title><rect x="33.5295%" y="533" width="0.0693%" height="15" fill="rgb(209,103,0)" fg:x="36755" fg:w="76"/><text x="33.7795%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (76 samples, 0.07%)</title><rect x="33.5295%" y="517" width="0.0693%" height="15" fill="rgb(238,209,51)" fg:x="36755" fg:w="76"/><text x="33.7795%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (68 samples, 0.06%)</title><rect x="33.5368%" y="501" width="0.0620%" height="15" fill="rgb(237,56,23)" fg:x="36763" fg:w="68"/><text x="33.7868%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62 samples, 0.06%)</title><rect x="33.5422%" y="485" width="0.0566%" height="15" fill="rgb(215,153,46)" fg:x="36769" fg:w="62"/><text x="33.7922%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (62 samples, 0.06%)</title><rect x="33.5422%" y="469" width="0.0566%" height="15" fill="rgb(224,49,31)" fg:x="36769" fg:w="62"/><text x="33.7922%" y="479.50"></text></g><g><title>alloc::alloc::alloc (62 samples, 0.06%)</title><rect x="33.5422%" y="453" width="0.0566%" height="15" fill="rgb(250,18,42)" fg:x="36769" fg:w="62"/><text x="33.7922%" y="463.50"></text></g><g><title>__rg_alloc (62 samples, 0.06%)</title><rect x="33.5422%" y="437" width="0.0566%" height="15" fill="rgb(215,176,39)" fg:x="36769" fg:w="62"/><text x="33.7922%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (62 samples, 0.06%)</title><rect x="33.5422%" y="421" width="0.0566%" height="15" fill="rgb(223,77,29)" fg:x="36769" fg:w="62"/><text x="33.7922%" y="431.50"></text></g><g><title>rust_alloc (57 samples, 0.05%)</title><rect x="33.5468%" y="405" width="0.0520%" height="15" fill="rgb(234,94,52)" fg:x="36774" fg:w="57"/><text x="33.7968%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="33.5888%" y="389" width="0.0100%" height="15" fill="rgb(220,154,50)" fg:x="36820" fg:w="11"/><text x="33.8388%" y="399.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (21 samples, 0.02%)</title><rect x="33.6189%" y="485" width="0.0192%" height="15" fill="rgb(212,11,10)" fg:x="36853" fg:w="21"/><text x="33.8689%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.02%)</title><rect x="33.6809%" y="341" width="0.0155%" height="15" fill="rgb(205,166,19)" fg:x="36921" fg:w="17"/><text x="33.9309%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="33.6818%" y="325" width="0.0146%" height="15" fill="rgb(244,198,16)" fg:x="36922" fg:w="16"/><text x="33.9318%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (42 samples, 0.04%)</title><rect x="33.6690%" y="389" width="0.0383%" height="15" fill="rgb(219,69,12)" fg:x="36908" fg:w="42"/><text x="33.9190%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (42 samples, 0.04%)</title><rect x="33.6690%" y="373" width="0.0383%" height="15" fill="rgb(245,30,7)" fg:x="36908" fg:w="42"/><text x="33.9190%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (42 samples, 0.04%)</title><rect x="33.6690%" y="357" width="0.0383%" height="15" fill="rgb(218,221,48)" fg:x="36908" fg:w="42"/><text x="33.9190%" y="367.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="33.6964%" y="341" width="0.0109%" height="15" fill="rgb(216,66,15)" fg:x="36938" fg:w="12"/><text x="33.9464%" y="351.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="33.6964%" y="325" width="0.0109%" height="15" fill="rgb(226,122,50)" fg:x="36938" fg:w="12"/><text x="33.9464%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (59 samples, 0.05%)</title><rect x="33.6554%" y="421" width="0.0538%" height="15" fill="rgb(239,156,16)" fg:x="36893" fg:w="59"/><text x="33.9054%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (59 samples, 0.05%)</title><rect x="33.6554%" y="405" width="0.0538%" height="15" fill="rgb(224,27,38)" fg:x="36893" fg:w="59"/><text x="33.9054%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (64 samples, 0.06%)</title><rect x="33.6554%" y="453" width="0.0584%" height="15" fill="rgb(224,39,27)" fg:x="36893" fg:w="64"/><text x="33.9054%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (64 samples, 0.06%)</title><rect x="33.6554%" y="437" width="0.0584%" height="15" fill="rgb(215,92,29)" fg:x="36893" fg:w="64"/><text x="33.9054%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (76 samples, 0.07%)</title><rect x="33.6481%" y="469" width="0.0693%" height="15" fill="rgb(207,159,16)" fg:x="36885" fg:w="76"/><text x="33.8981%" y="479.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (127 samples, 0.12%)</title><rect x="33.6061%" y="501" width="0.1159%" height="15" fill="rgb(238,163,47)" fg:x="36839" fg:w="127"/><text x="33.8561%" y="511.50"></text></g><g><title>rust_dealloc (92 samples, 0.08%)</title><rect x="33.6380%" y="485" width="0.0839%" height="15" fill="rgb(219,91,49)" fg:x="36874" fg:w="92"/><text x="33.8880%" y="495.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (816 samples, 0.74%)</title><rect x="33.0086%" y="629" width="0.7444%" height="15" fill="rgb(227,167,31)" fg:x="36184" fg:w="816"/><text x="33.2586%" y="639.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (816 samples, 0.74%)</title><rect x="33.0086%" y="613" width="0.7444%" height="15" fill="rgb(234,80,54)" fg:x="36184" fg:w="816"/><text x="33.2586%" y="623.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (806 samples, 0.74%)</title><rect x="33.0177%" y="597" width="0.7353%" height="15" fill="rgb(212,114,2)" fg:x="36194" fg:w="806"/><text x="33.2677%" y="607.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (799 samples, 0.73%)</title><rect x="33.0241%" y="581" width="0.7289%" height="15" fill="rgb(234,50,24)" fg:x="36201" fg:w="799"/><text x="33.2741%" y="591.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (799 samples, 0.73%)</title><rect x="33.0241%" y="565" width="0.7289%" height="15" fill="rgb(221,68,8)" fg:x="36201" fg:w="799"/><text x="33.2741%" y="575.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (161 samples, 0.15%)</title><rect x="33.6061%" y="549" width="0.1469%" height="15" fill="rgb(254,180,31)" fg:x="36839" fg:w="161"/><text x="33.8561%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (161 samples, 0.15%)</title><rect x="33.6061%" y="533" width="0.1469%" height="15" fill="rgb(247,130,50)" fg:x="36839" fg:w="161"/><text x="33.8561%" y="543.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (161 samples, 0.15%)</title><rect x="33.6061%" y="517" width="0.1469%" height="15" fill="rgb(211,109,4)" fg:x="36839" fg:w="161"/><text x="33.8561%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (34 samples, 0.03%)</title><rect x="33.7219%" y="501" width="0.0310%" height="15" fill="rgb(238,50,21)" fg:x="36966" fg:w="34"/><text x="33.9719%" y="511.50"></text></g><g><title>core::ptr::read (34 samples, 0.03%)</title><rect x="33.7219%" y="485" width="0.0310%" height="15" fill="rgb(225,57,45)" fg:x="36966" fg:w="34"/><text x="33.9719%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="33.7721%" y="501" width="0.0100%" height="15" fill="rgb(209,196,50)" fg:x="37021" fg:w="11"/><text x="34.0221%" y="511.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="33.7721%" y="485" width="0.0100%" height="15" fill="rgb(242,140,13)" fg:x="37021" fg:w="11"/><text x="34.0221%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="33.7721%" y="469" width="0.0100%" height="15" fill="rgb(217,111,7)" fg:x="37021" fg:w="11"/><text x="34.0221%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="33.7721%" y="453" width="0.0100%" height="15" fill="rgb(253,193,51)" fg:x="37021" fg:w="11"/><text x="34.0221%" y="463.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="33.7721%" y="437" width="0.0100%" height="15" fill="rgb(252,70,29)" fg:x="37021" fg:w="11"/><text x="34.0221%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="33.7721%" y="421" width="0.0100%" height="15" fill="rgb(232,127,12)" fg:x="37021" fg:w="11"/><text x="34.0221%" y="431.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (44 samples, 0.04%)</title><rect x="33.7657%" y="517" width="0.0401%" height="15" fill="rgb(211,180,21)" fg:x="37014" fg:w="44"/><text x="34.0157%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="33.7822%" y="501" width="0.0237%" height="15" fill="rgb(229,72,13)" fg:x="37032" fg:w="26"/><text x="34.0322%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (26 samples, 0.02%)</title><rect x="33.7822%" y="485" width="0.0237%" height="15" fill="rgb(240,211,49)" fg:x="37032" fg:w="26"/><text x="34.0322%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (26 samples, 0.02%)</title><rect x="33.7822%" y="469" width="0.0237%" height="15" fill="rgb(219,149,40)" fg:x="37032" fg:w="26"/><text x="34.0322%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (26 samples, 0.02%)</title><rect x="33.7822%" y="453" width="0.0237%" height="15" fill="rgb(210,127,46)" fg:x="37032" fg:w="26"/><text x="34.0322%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="33.7913%" y="437" width="0.0146%" height="15" fill="rgb(220,106,7)" fg:x="37042" fg:w="16"/><text x="34.0413%" y="447.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (37 samples, 0.03%)</title><rect x="33.8670%" y="373" width="0.0338%" height="15" fill="rgb(249,31,22)" fg:x="37125" fg:w="37"/><text x="34.1170%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (37 samples, 0.03%)</title><rect x="33.8670%" y="357" width="0.0338%" height="15" fill="rgb(253,1,49)" fg:x="37125" fg:w="37"/><text x="34.1170%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (83 samples, 0.08%)</title><rect x="33.8323%" y="421" width="0.0757%" height="15" fill="rgb(227,144,33)" fg:x="37087" fg:w="83"/><text x="34.0823%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (83 samples, 0.08%)</title><rect x="33.8323%" y="405" width="0.0757%" height="15" fill="rgb(249,163,44)" fg:x="37087" fg:w="83"/><text x="34.0823%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (82 samples, 0.07%)</title><rect x="33.8332%" y="389" width="0.0748%" height="15" fill="rgb(234,15,39)" fg:x="37088" fg:w="82"/><text x="34.0832%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (102 samples, 0.09%)</title><rect x="33.8186%" y="453" width="0.0930%" height="15" fill="rgb(207,66,16)" fg:x="37072" fg:w="102"/><text x="34.0686%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (102 samples, 0.09%)</title><rect x="33.8186%" y="437" width="0.0930%" height="15" fill="rgb(233,112,24)" fg:x="37072" fg:w="102"/><text x="34.0686%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (104 samples, 0.09%)</title><rect x="33.8186%" y="485" width="0.0949%" height="15" fill="rgb(230,90,22)" fg:x="37072" fg:w="104"/><text x="34.0686%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (104 samples, 0.09%)</title><rect x="33.8186%" y="469" width="0.0949%" height="15" fill="rgb(229,61,13)" fg:x="37072" fg:w="104"/><text x="34.0686%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (121 samples, 0.11%)</title><rect x="33.8123%" y="501" width="0.1104%" height="15" fill="rgb(225,57,24)" fg:x="37065" fg:w="121"/><text x="34.0623%" y="511.50"></text></g><g><title>rust_dealloc (137 samples, 0.12%)</title><rect x="33.8059%" y="517" width="0.1250%" height="15" fill="rgb(208,169,48)" fg:x="37058" fg:w="137"/><text x="34.0559%" y="527.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (187 samples, 0.17%)</title><rect x="33.7621%" y="565" width="0.1706%" height="15" fill="rgb(244,218,51)" fg:x="37010" fg:w="187"/><text x="34.0121%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (187 samples, 0.17%)</title><rect x="33.7621%" y="549" width="0.1706%" height="15" fill="rgb(214,148,10)" fg:x="37010" fg:w="187"/><text x="34.0121%" y="559.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (187 samples, 0.17%)</title><rect x="33.7621%" y="533" width="0.1706%" height="15" fill="rgb(225,174,27)" fg:x="37010" fg:w="187"/><text x="34.0121%" y="543.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (1,117 samples, 1.02%)</title><rect x="32.9146%" y="645" width="1.0190%" height="15" fill="rgb(230,96,26)" fg:x="36081" fg:w="1117"/><text x="33.1646%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (198 samples, 0.18%)</title><rect x="33.7530%" y="629" width="0.1806%" height="15" fill="rgb(232,10,30)" fg:x="37000" fg:w="198"/><text x="34.0030%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (198 samples, 0.18%)</title><rect x="33.7530%" y="613" width="0.1806%" height="15" fill="rgb(222,8,50)" fg:x="37000" fg:w="198"/><text x="34.0030%" y="623.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (198 samples, 0.18%)</title><rect x="33.7530%" y="597" width="0.1806%" height="15" fill="rgb(213,81,27)" fg:x="37000" fg:w="198"/><text x="34.0030%" y="607.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (197 samples, 0.18%)</title><rect x="33.7539%" y="581" width="0.1797%" height="15" fill="rgb(245,50,10)" fg:x="37001" fg:w="197"/><text x="34.0039%" y="591.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies (30 samples, 0.03%)</title><rect x="33.9336%" y="645" width="0.0274%" height="15" fill="rgb(216,100,18)" fg:x="37198" fg:w="30"/><text x="34.1836%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (10,070 samples, 9.19%)</title><rect x="24.7865%" y="661" width="9.1863%" height="15" fill="rgb(236,147,54)" fg:x="27171" fg:w="10070"/><text x="25.0365%" y="671.50">tremor_runtim..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (13 samples, 0.01%)</title><rect x="33.9610%" y="645" width="0.0119%" height="15" fill="rgb(205,143,26)" fg:x="37228" fg:w="13"/><text x="34.2110%" y="655.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (10,121 samples, 9.23%)</title><rect x="24.7473%" y="1125" width="9.2328%" height="15" fill="rgb(236,26,9)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="1135.50">async_global_..</text></g><g><title>std::panic::catch_unwind (10,121 samples, 9.23%)</title><rect x="24.7473%" y="1109" width="9.2328%" height="15" fill="rgb(221,165,53)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="1119.50">std::panic::c..</text></g><g><title>std::panicking::try (10,121 samples, 9.23%)</title><rect x="24.7473%" y="1093" width="9.2328%" height="15" fill="rgb(214,110,17)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="1103.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (10,121 samples, 9.23%)</title><rect x="24.7473%" y="1077" width="9.2328%" height="15" fill="rgb(237,197,12)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="1087.50">std::panickin..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (10,121 samples, 9.23%)</title><rect x="24.7473%" y="1061" width="9.2328%" height="15" fill="rgb(205,84,17)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="1071.50">async_global_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,121 samples, 9.23%)</title><rect x="24.7473%" y="1045" width="9.2328%" height="15" fill="rgb(237,18,45)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="1055.50">std::thread::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,121 samples, 9.23%)</title><rect x="24.7473%" y="1029" width="9.2328%" height="15" fill="rgb(221,87,14)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="1039.50">std::thread::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (10,121 samples, 9.23%)</title><rect x="24.7473%" y="1013" width="9.2328%" height="15" fill="rgb(238,186,15)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="1023.50">async_global_..</text></g><g><title>async_global_executor::reactor::block_on (10,121 samples, 9.23%)</title><rect x="24.7473%" y="997" width="9.2328%" height="15" fill="rgb(208,115,11)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="1007.50">async_global_..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (10,121 samples, 9.23%)</title><rect x="24.7473%" y="981" width="9.2328%" height="15" fill="rgb(254,175,0)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="991.50">async_global_..</text></g><g><title>async_io::driver::block_on (10,121 samples, 9.23%)</title><rect x="24.7473%" y="965" width="9.2328%" height="15" fill="rgb(227,24,42)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="975.50">async_io::dri..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,121 samples, 9.23%)</title><rect x="24.7473%" y="949" width="9.2328%" height="15" fill="rgb(223,211,37)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="959.50">&lt;futures_lite..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,121 samples, 9.23%)</title><rect x="24.7473%" y="933" width="9.2328%" height="15" fill="rgb(235,49,27)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="943.50">&lt;core::future..</text></g><g><title>async_executor::Executor::run::{{closure}} (10,121 samples, 9.23%)</title><rect x="24.7473%" y="917" width="9.2328%" height="15" fill="rgb(254,97,51)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="927.50">async_executo..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,121 samples, 9.23%)</title><rect x="24.7473%" y="901" width="9.2328%" height="15" fill="rgb(249,51,40)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="911.50">&lt;futures_lite..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,121 samples, 9.23%)</title><rect x="24.7473%" y="885" width="9.2328%" height="15" fill="rgb(210,128,45)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="895.50">&lt;core::future..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (10,121 samples, 9.23%)</title><rect x="24.7473%" y="869" width="9.2328%" height="15" fill="rgb(224,137,50)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="879.50">async_executo..</text></g><g><title>async_task::runnable::Runnable::run (10,121 samples, 9.23%)</title><rect x="24.7473%" y="853" width="9.2328%" height="15" fill="rgb(242,15,9)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="863.50">async_task::r..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (10,121 samples, 9.23%)</title><rect x="24.7473%" y="837" width="9.2328%" height="15" fill="rgb(233,187,41)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="847.50">async_task::r..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10,121 samples, 9.23%)</title><rect x="24.7473%" y="821" width="9.2328%" height="15" fill="rgb(227,2,29)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="831.50">&lt;core::pin::P..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,121 samples, 9.23%)</title><rect x="24.7473%" y="805" width="9.2328%" height="15" fill="rgb(222,70,3)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="815.50">&lt;core::future..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (10,121 samples, 9.23%)</title><rect x="24.7473%" y="789" width="9.2328%" height="15" fill="rgb(213,11,42)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="799.50">async_executo..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (10,121 samples, 9.23%)</title><rect x="24.7473%" y="773" width="9.2328%" height="15" fill="rgb(225,150,9)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="783.50">&lt;async_std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (10,121 samples, 9.23%)</title><rect x="24.7473%" y="757" width="9.2328%" height="15" fill="rgb(230,162,45)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="767.50">async_std::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,121 samples, 9.23%)</title><rect x="24.7473%" y="741" width="9.2328%" height="15" fill="rgb(222,14,52)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="751.50">std::thread::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,121 samples, 9.23%)</title><rect x="24.7473%" y="725" width="9.2328%" height="15" fill="rgb(254,198,14)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="735.50">std::thread::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (10,121 samples, 9.23%)</title><rect x="24.7473%" y="709" width="9.2328%" height="15" fill="rgb(220,217,30)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="719.50">async_std::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (10,121 samples, 9.23%)</title><rect x="24.7473%" y="693" width="9.2328%" height="15" fill="rgb(215,146,41)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="703.50">&lt;async_std::t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,121 samples, 9.23%)</title><rect x="24.7473%" y="677" width="9.2328%" height="15" fill="rgb(217,27,36)" fg:x="27128" fg:w="10121"/><text x="24.9973%" y="687.50">&lt;core::future..</text></g><g><title>__memcpy_avx_unaligned_erms (487 samples, 0.44%)</title><rect x="34.0622%" y="741" width="0.4443%" height="15" fill="rgb(219,218,39)" fg:x="37339" fg:w="487"/><text x="34.3122%" y="751.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (512 samples, 0.47%)</title><rect x="34.0476%" y="757" width="0.4671%" height="15" fill="rgb(219,4,42)" fg:x="37323" fg:w="512"/><text x="34.2976%" y="767.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (890 samples, 0.81%)</title><rect x="34.0102%" y="773" width="0.8119%" height="15" fill="rgb(249,119,36)" fg:x="37282" fg:w="890"/><text x="34.2602%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (337 samples, 0.31%)</title><rect x="34.5147%" y="757" width="0.3074%" height="15" fill="rgb(209,23,33)" fg:x="37835" fg:w="337"/><text x="34.7647%" y="767.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (922 samples, 0.84%)</title><rect x="33.9847%" y="805" width="0.8411%" height="15" fill="rgb(211,10,0)" fg:x="37254" fg:w="922"/><text x="34.2347%" y="815.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (922 samples, 0.84%)</title><rect x="33.9847%" y="789" width="0.8411%" height="15" fill="rgb(208,99,37)" fg:x="37254" fg:w="922"/><text x="34.2347%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="34.8276%" y="469" width="0.0100%" height="15" fill="rgb(213,132,31)" fg:x="38178" fg:w="11"/><text x="35.0776%" y="479.50"></text></g><g><title>&lt;abi_stable::std_types::result::RResult&lt;T,E&gt; as core::convert::From&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::from (11 samples, 0.01%)</title><rect x="34.8276%" y="453" width="0.0100%" height="15" fill="rgb(243,129,40)" fg:x="38178" fg:w="11"/><text x="35.0776%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (72 samples, 0.07%)</title><rect x="34.8449%" y="469" width="0.0657%" height="15" fill="rgb(210,66,33)" fg:x="38197" fg:w="72"/><text x="35.0949%" y="479.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (65 samples, 0.06%)</title><rect x="34.8513%" y="453" width="0.0593%" height="15" fill="rgb(209,189,4)" fg:x="38204" fg:w="65"/><text x="35.1013%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (55 samples, 0.05%)</title><rect x="34.8604%" y="437" width="0.0502%" height="15" fill="rgb(214,107,37)" fg:x="38214" fg:w="55"/><text x="35.1104%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (55 samples, 0.05%)</title><rect x="34.8604%" y="421" width="0.0502%" height="15" fill="rgb(245,88,54)" fg:x="38214" fg:w="55"/><text x="35.1104%" y="431.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (52 samples, 0.05%)</title><rect x="34.8632%" y="405" width="0.0474%" height="15" fill="rgb(205,146,20)" fg:x="38217" fg:w="52"/><text x="35.1132%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.01%)</title><rect x="34.8960%" y="389" width="0.0146%" height="15" fill="rgb(220,161,25)" fg:x="38253" fg:w="16"/><text x="35.1460%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="34.8960%" y="373" width="0.0146%" height="15" fill="rgb(215,152,15)" fg:x="38253" fg:w="16"/><text x="35.1460%" y="383.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="34.9006%" y="357" width="0.0100%" height="15" fill="rgb(233,192,44)" fg:x="38258" fg:w="11"/><text x="35.1506%" y="367.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (177 samples, 0.16%)</title><rect x="34.9298%" y="453" width="0.1615%" height="15" fill="rgb(240,170,46)" fg:x="38290" fg:w="177"/><text x="35.1798%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (509 samples, 0.46%)</title><rect x="35.0912%" y="453" width="0.4643%" height="15" fill="rgb(207,104,33)" fg:x="38467" fg:w="509"/><text x="35.3412%" y="463.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (13 samples, 0.01%)</title><rect x="35.5601%" y="453" width="0.0119%" height="15" fill="rgb(219,21,39)" fg:x="38981" fg:w="13"/><text x="35.8101%" y="463.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (48 samples, 0.04%)</title><rect x="35.5720%" y="453" width="0.0438%" height="15" fill="rgb(214,133,29)" fg:x="38994" fg:w="48"/><text x="35.8220%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::cow::RCow&lt;B,&lt;B as abi_stable::traits::IntoOwned&gt;::ROwned&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="35.5993%" y="437" width="0.0164%" height="15" fill="rgb(226,93,6)" fg:x="39024" fg:w="18"/><text x="35.8493%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (1,803 samples, 1.64%)</title><rect x="33.9847%" y="821" width="1.6448%" height="15" fill="rgb(252,222,34)" fg:x="37254" fg:w="1803"/><text x="34.2347%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (881 samples, 0.80%)</title><rect x="34.8258%" y="805" width="0.8037%" height="15" fill="rgb(252,92,48)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="815.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (881 samples, 0.80%)</title><rect x="34.8258%" y="789" width="0.8037%" height="15" fill="rgb(245,223,24)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="799.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (881 samples, 0.80%)</title><rect x="34.8258%" y="773" width="0.8037%" height="15" fill="rgb(205,176,3)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="783.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (881 samples, 0.80%)</title><rect x="34.8258%" y="757" width="0.8037%" height="15" fill="rgb(235,151,15)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="767.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (881 samples, 0.80%)</title><rect x="34.8258%" y="741" width="0.8037%" height="15" fill="rgb(237,209,11)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="751.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (881 samples, 0.80%)</title><rect x="34.8258%" y="725" width="0.8037%" height="15" fill="rgb(243,227,24)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (881 samples, 0.80%)</title><rect x="34.8258%" y="709" width="0.8037%" height="15" fill="rgb(239,193,16)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="719.50"></text></g><g><title>std::panic::catch_unwind (881 samples, 0.80%)</title><rect x="34.8258%" y="693" width="0.8037%" height="15" fill="rgb(231,27,9)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="703.50"></text></g><g><title>std::panicking::try (881 samples, 0.80%)</title><rect x="34.8258%" y="677" width="0.8037%" height="15" fill="rgb(219,169,10)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="687.50"></text></g><g><title>std::panicking::try::do_call (881 samples, 0.80%)</title><rect x="34.8258%" y="661" width="0.8037%" height="15" fill="rgb(244,229,43)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="671.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (881 samples, 0.80%)</title><rect x="34.8258%" y="645" width="0.8037%" height="15" fill="rgb(254,38,20)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (881 samples, 0.80%)</title><rect x="34.8258%" y="629" width="0.8037%" height="15" fill="rgb(250,47,30)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="639.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (881 samples, 0.80%)</title><rect x="34.8258%" y="613" width="0.8037%" height="15" fill="rgb(224,124,36)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="623.50"></text></g><g><title>async_ffi::FfiContext::with_context (881 samples, 0.80%)</title><rect x="34.8258%" y="597" width="0.8037%" height="15" fill="rgb(246,68,51)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (881 samples, 0.80%)</title><rect x="34.8258%" y="581" width="0.8037%" height="15" fill="rgb(253,43,49)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (881 samples, 0.80%)</title><rect x="34.8258%" y="565" width="0.8037%" height="15" fill="rgb(219,54,36)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="575.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (881 samples, 0.80%)</title><rect x="34.8258%" y="549" width="0.8037%" height="15" fill="rgb(227,133,34)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="559.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (881 samples, 0.80%)</title><rect x="34.8258%" y="533" width="0.8037%" height="15" fill="rgb(247,227,15)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (881 samples, 0.80%)</title><rect x="34.8258%" y="517" width="0.8037%" height="15" fill="rgb(229,96,14)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (881 samples, 0.80%)</title><rect x="34.8258%" y="501" width="0.8037%" height="15" fill="rgb(220,79,17)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="511.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (881 samples, 0.80%)</title><rect x="34.8258%" y="485" width="0.8037%" height="15" fill="rgb(205,131,53)" fg:x="38176" fg:w="881"/><text x="35.0758%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (788 samples, 0.72%)</title><rect x="34.9106%" y="469" width="0.7188%" height="15" fill="rgb(209,50,29)" fg:x="38269" fg:w="788"/><text x="35.1606%" y="479.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (23 samples, 0.02%)</title><rect x="35.6294%" y="821" width="0.0210%" height="15" fill="rgb(245,86,46)" fg:x="39057" fg:w="23"/><text x="35.8794%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (199 samples, 0.18%)</title><rect x="36.7141%" y="773" width="0.1815%" height="15" fill="rgb(235,66,46)" fg:x="40246" fg:w="199"/><text x="36.9641%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (194 samples, 0.18%)</title><rect x="36.7187%" y="757" width="0.1770%" height="15" fill="rgb(232,148,31)" fg:x="40251" fg:w="194"/><text x="36.9687%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (182 samples, 0.17%)</title><rect x="36.7296%" y="741" width="0.1660%" height="15" fill="rgb(217,149,8)" fg:x="40263" fg:w="182"/><text x="36.9796%" y="751.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (212 samples, 0.19%)</title><rect x="36.8956%" y="709" width="0.1934%" height="15" fill="rgb(209,183,11)" fg:x="40445" fg:w="212"/><text x="37.1456%" y="719.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (217 samples, 0.20%)</title><rect x="36.8956%" y="741" width="0.1980%" height="15" fill="rgb(208,55,20)" fg:x="40445" fg:w="217"/><text x="37.1456%" y="751.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (217 samples, 0.20%)</title><rect x="36.8956%" y="725" width="0.1980%" height="15" fill="rgb(218,39,14)" fg:x="40445" fg:w="217"/><text x="37.1456%" y="735.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (24 samples, 0.02%)</title><rect x="37.0936%" y="741" width="0.0219%" height="15" fill="rgb(216,169,33)" fg:x="40662" fg:w="24"/><text x="37.3436%" y="751.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (13 samples, 0.01%)</title><rect x="37.1036%" y="725" width="0.0119%" height="15" fill="rgb(233,80,24)" fg:x="40673" fg:w="13"/><text x="37.3536%" y="735.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (402 samples, 0.37%)</title><rect x="36.8956%" y="773" width="0.3667%" height="15" fill="rgb(213,179,31)" fg:x="40445" fg:w="402"/><text x="37.1456%" y="783.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (402 samples, 0.37%)</title><rect x="36.8956%" y="757" width="0.3667%" height="15" fill="rgb(209,19,5)" fg:x="40445" fg:w="402"/><text x="37.1456%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (161 samples, 0.15%)</title><rect x="37.1155%" y="741" width="0.1469%" height="15" fill="rgb(219,18,35)" fg:x="40686" fg:w="161"/><text x="37.3655%" y="751.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (35 samples, 0.03%)</title><rect x="37.2624%" y="773" width="0.0319%" height="15" fill="rgb(209,169,16)" fg:x="40847" fg:w="35"/><text x="37.5124%" y="783.50"></text></g><g><title>alloc::alloc::box_free (18 samples, 0.02%)</title><rect x="37.3098%" y="645" width="0.0164%" height="15" fill="rgb(245,90,51)" fg:x="40899" fg:w="18"/><text x="37.5598%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="37.3098%" y="629" width="0.0164%" height="15" fill="rgb(220,99,45)" fg:x="40899" fg:w="18"/><text x="37.5598%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="37.3098%" y="613" width="0.0164%" height="15" fill="rgb(249,89,25)" fg:x="40899" fg:w="18"/><text x="37.5598%" y="623.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="37.3098%" y="597" width="0.0164%" height="15" fill="rgb(239,193,0)" fg:x="40899" fg:w="18"/><text x="37.5598%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="37.3098%" y="581" width="0.0164%" height="15" fill="rgb(231,126,1)" fg:x="40899" fg:w="18"/><text x="37.5598%" y="591.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (27 samples, 0.02%)</title><rect x="37.3071%" y="725" width="0.0246%" height="15" fill="rgb(243,166,3)" fg:x="40896" fg:w="27"/><text x="37.5571%" y="735.50"></text></g><g><title>async_ffi::DropBomb::with (24 samples, 0.02%)</title><rect x="37.3098%" y="709" width="0.0219%" height="15" fill="rgb(223,22,34)" fg:x="40899" fg:w="24"/><text x="37.5598%" y="719.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (24 samples, 0.02%)</title><rect x="37.3098%" y="693" width="0.0219%" height="15" fill="rgb(251,52,51)" fg:x="40899" fg:w="24"/><text x="37.5598%" y="703.50"></text></g><g><title>core::mem::drop (24 samples, 0.02%)</title><rect x="37.3098%" y="677" width="0.0219%" height="15" fill="rgb(221,165,28)" fg:x="40899" fg:w="24"/><text x="37.5598%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}}&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="37.3098%" y="661" width="0.0219%" height="15" fill="rgb(218,121,47)" fg:x="40899" fg:w="24"/><text x="37.5598%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (24 samples, 0.02%)</title><rect x="37.3445%" y="629" width="0.0219%" height="15" fill="rgb(209,120,9)" fg:x="40937" fg:w="24"/><text x="37.5945%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (24 samples, 0.02%)</title><rect x="37.3445%" y="613" width="0.0219%" height="15" fill="rgb(236,68,12)" fg:x="40937" fg:w="24"/><text x="37.5945%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (24 samples, 0.02%)</title><rect x="37.3445%" y="597" width="0.0219%" height="15" fill="rgb(225,194,26)" fg:x="40937" fg:w="24"/><text x="37.5945%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (32 samples, 0.03%)</title><rect x="37.3381%" y="661" width="0.0292%" height="15" fill="rgb(231,84,39)" fg:x="40930" fg:w="32"/><text x="37.5881%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (32 samples, 0.03%)</title><rect x="37.3381%" y="645" width="0.0292%" height="15" fill="rgb(210,11,45)" fg:x="40930" fg:w="32"/><text x="37.5881%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (43 samples, 0.04%)</title><rect x="37.3381%" y="693" width="0.0392%" height="15" fill="rgb(224,54,52)" fg:x="40930" fg:w="43"/><text x="37.5881%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (43 samples, 0.04%)</title><rect x="37.3381%" y="677" width="0.0392%" height="15" fill="rgb(238,102,14)" fg:x="40930" fg:w="43"/><text x="37.5881%" y="687.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="37.3673%" y="661" width="0.0100%" height="15" fill="rgb(243,160,52)" fg:x="40962" fg:w="11"/><text x="37.6173%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="37.3673%" y="645" width="0.0100%" height="15" fill="rgb(216,114,19)" fg:x="40962" fg:w="11"/><text x="37.6173%" y="655.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="37.3673%" y="629" width="0.0100%" height="15" fill="rgb(244,166,37)" fg:x="40962" fg:w="11"/><text x="37.6173%" y="639.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="37.3673%" y="613" width="0.0100%" height="15" fill="rgb(246,29,44)" fg:x="40962" fg:w="11"/><text x="37.6173%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (54 samples, 0.05%)</title><rect x="37.3381%" y="709" width="0.0493%" height="15" fill="rgb(215,56,53)" fg:x="40930" fg:w="54"/><text x="37.5881%" y="719.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="37.3773%" y="693" width="0.0100%" height="15" fill="rgb(217,60,2)" fg:x="40973" fg:w="11"/><text x="37.6273%" y="703.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="37.3773%" y="677" width="0.0100%" height="15" fill="rgb(207,26,24)" fg:x="40973" fg:w="11"/><text x="37.6273%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="37.3773%" y="661" width="0.0100%" height="15" fill="rgb(252,210,15)" fg:x="40973" fg:w="11"/><text x="37.6273%" y="671.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="37.3773%" y="645" width="0.0100%" height="15" fill="rgb(253,209,26)" fg:x="40973" fg:w="11"/><text x="37.6273%" y="655.50"></text></g><g><title>rust_dealloc (70 samples, 0.06%)</title><rect x="37.3317%" y="725" width="0.0639%" height="15" fill="rgb(238,170,14)" fg:x="40923" fg:w="70"/><text x="37.5817%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (113 samples, 0.10%)</title><rect x="37.2952%" y="773" width="0.1031%" height="15" fill="rgb(216,178,15)" fg:x="40883" fg:w="113"/><text x="37.5452%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (113 samples, 0.10%)</title><rect x="37.2952%" y="757" width="0.1031%" height="15" fill="rgb(250,197,2)" fg:x="40883" fg:w="113"/><text x="37.5452%" y="767.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (113 samples, 0.10%)</title><rect x="37.2952%" y="741" width="0.1031%" height="15" fill="rgb(212,70,42)" fg:x="40883" fg:w="113"/><text x="37.5452%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (13 samples, 0.01%)</title><rect x="37.4439%" y="469" width="0.0119%" height="15" fill="rgb(227,213,9)" fg:x="41046" fg:w="13"/><text x="37.6939%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="37.4612%" y="453" width="0.0109%" height="15" fill="rgb(245,99,25)" fg:x="41065" fg:w="12"/><text x="37.7112%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (78 samples, 0.07%)</title><rect x="37.4430%" y="501" width="0.0712%" height="15" fill="rgb(250,82,29)" fg:x="41045" fg:w="78"/><text x="37.6930%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (78 samples, 0.07%)</title><rect x="37.4430%" y="485" width="0.0712%" height="15" fill="rgb(241,226,54)" fg:x="41045" fg:w="78"/><text x="37.6930%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (64 samples, 0.06%)</title><rect x="37.4558%" y="469" width="0.0584%" height="15" fill="rgb(221,99,41)" fg:x="41059" fg:w="64"/><text x="37.7058%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (46 samples, 0.04%)</title><rect x="37.4722%" y="453" width="0.0420%" height="15" fill="rgb(213,90,21)" fg:x="41077" fg:w="46"/><text x="37.7222%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (46 samples, 0.04%)</title><rect x="37.4722%" y="437" width="0.0420%" height="15" fill="rgb(205,208,24)" fg:x="41077" fg:w="46"/><text x="37.7222%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (46 samples, 0.04%)</title><rect x="37.4722%" y="421" width="0.0420%" height="15" fill="rgb(246,31,12)" fg:x="41077" fg:w="46"/><text x="37.7222%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="37.5169%" y="469" width="0.0128%" height="15" fill="rgb(213,154,6)" fg:x="41126" fg:w="14"/><text x="37.7669%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="37.5178%" y="453" width="0.0119%" height="15" fill="rgb(222,163,29)" fg:x="41127" fg:w="13"/><text x="37.7678%" y="463.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (13 samples, 0.01%)</title><rect x="37.5178%" y="437" width="0.0119%" height="15" fill="rgb(227,201,8)" fg:x="41127" fg:w="13"/><text x="37.7678%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="37.5151%" y="501" width="0.0155%" height="15" fill="rgb(233,9,32)" fg:x="41124" fg:w="17"/><text x="37.7651%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="37.5160%" y="485" width="0.0146%" height="15" fill="rgb(217,54,24)" fg:x="41125" fg:w="16"/><text x="37.7660%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::empty (45 samples, 0.04%)</title><rect x="37.5306%" y="501" width="0.0411%" height="15" fill="rgb(235,192,0)" fg:x="41141" fg:w="45"/><text x="37.7806%" y="511.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (45 samples, 0.04%)</title><rect x="37.5306%" y="485" width="0.0411%" height="15" fill="rgb(235,45,9)" fg:x="41141" fg:w="45"/><text x="37.7806%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (189 samples, 0.17%)</title><rect x="37.4357%" y="549" width="0.1724%" height="15" fill="rgb(246,42,40)" fg:x="41037" fg:w="189"/><text x="37.6857%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (185 samples, 0.17%)</title><rect x="37.4393%" y="533" width="0.1688%" height="15" fill="rgb(248,111,24)" fg:x="41041" fg:w="185"/><text x="37.6893%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (184 samples, 0.17%)</title><rect x="37.4402%" y="517" width="0.1679%" height="15" fill="rgb(249,65,22)" fg:x="41042" fg:w="184"/><text x="37.6902%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (40 samples, 0.04%)</title><rect x="37.5716%" y="501" width="0.0365%" height="15" fill="rgb(238,111,51)" fg:x="41186" fg:w="40"/><text x="37.8216%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (40 samples, 0.04%)</title><rect x="37.5716%" y="485" width="0.0365%" height="15" fill="rgb(250,118,22)" fg:x="41186" fg:w="40"/><text x="37.8216%" y="495.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (214 samples, 0.20%)</title><rect x="37.4174%" y="757" width="0.1952%" height="15" fill="rgb(234,84,26)" fg:x="41017" fg:w="214"/><text x="37.6674%" y="767.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (208 samples, 0.19%)</title><rect x="37.4229%" y="741" width="0.1897%" height="15" fill="rgb(243,172,12)" fg:x="41023" fg:w="208"/><text x="37.6729%" y="751.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (208 samples, 0.19%)</title><rect x="37.4229%" y="725" width="0.1897%" height="15" fill="rgb(236,150,49)" fg:x="41023" fg:w="208"/><text x="37.6729%" y="735.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (208 samples, 0.19%)</title><rect x="37.4229%" y="709" width="0.1897%" height="15" fill="rgb(225,197,26)" fg:x="41023" fg:w="208"/><text x="37.6729%" y="719.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (208 samples, 0.19%)</title><rect x="37.4229%" y="693" width="0.1897%" height="15" fill="rgb(214,17,42)" fg:x="41023" fg:w="208"/><text x="37.6729%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (208 samples, 0.19%)</title><rect x="37.4229%" y="677" width="0.1897%" height="15" fill="rgb(224,165,40)" fg:x="41023" fg:w="208"/><text x="37.6729%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (199 samples, 0.18%)</title><rect x="37.4311%" y="661" width="0.1815%" height="15" fill="rgb(246,100,4)" fg:x="41032" fg:w="199"/><text x="37.6811%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (199 samples, 0.18%)</title><rect x="37.4311%" y="645" width="0.1815%" height="15" fill="rgb(222,103,0)" fg:x="41032" fg:w="199"/><text x="37.6811%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (199 samples, 0.18%)</title><rect x="37.4311%" y="629" width="0.1815%" height="15" fill="rgb(227,189,26)" fg:x="41032" fg:w="199"/><text x="37.6811%" y="639.50"></text></g><g><title>alloc::alloc::alloc (199 samples, 0.18%)</title><rect x="37.4311%" y="613" width="0.1815%" height="15" fill="rgb(214,202,17)" fg:x="41032" fg:w="199"/><text x="37.6811%" y="623.50"></text></g><g><title>__rg_alloc (199 samples, 0.18%)</title><rect x="37.4311%" y="597" width="0.1815%" height="15" fill="rgb(229,111,3)" fg:x="41032" fg:w="199"/><text x="37.6811%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (199 samples, 0.18%)</title><rect x="37.4311%" y="581" width="0.1815%" height="15" fill="rgb(229,172,15)" fg:x="41032" fg:w="199"/><text x="37.6811%" y="591.50"></text></g><g><title>rust_alloc (195 samples, 0.18%)</title><rect x="37.4348%" y="565" width="0.1779%" height="15" fill="rgb(230,224,35)" fg:x="41036" fg:w="195"/><text x="37.6848%" y="575.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (1,608 samples, 1.47%)</title><rect x="36.1777%" y="789" width="1.4669%" height="15" fill="rgb(251,141,6)" fg:x="39658" fg:w="1608"/><text x="36.4277%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::pull_data (270 samples, 0.25%)</title><rect x="37.3983%" y="773" width="0.2463%" height="15" fill="rgb(225,208,6)" fg:x="40996" fg:w="270"/><text x="37.6483%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::_::&lt;impl tremor_runtime::connectors::source::RawSource_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::pull_data (34 samples, 0.03%)</title><rect x="37.6136%" y="757" width="0.0310%" height="15" fill="rgb(246,181,16)" fg:x="41232" fg:w="34"/><text x="37.8636%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::control_plane::{{closure}} (292 samples, 0.27%)</title><rect x="37.6446%" y="789" width="0.2664%" height="15" fill="rgb(227,129,36)" fg:x="41266" fg:w="292"/><text x="37.8946%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::needs_control_plane_msg (248 samples, 0.23%)</title><rect x="37.6847%" y="773" width="0.2262%" height="15" fill="rgb(248,117,24)" fg:x="41310" fg:w="248"/><text x="37.9347%" y="783.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (232 samples, 0.21%)</title><rect x="37.6993%" y="757" width="0.2116%" height="15" fill="rgb(214,185,35)" fg:x="41326" fg:w="232"/><text x="37.9493%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (226 samples, 0.21%)</title><rect x="37.7048%" y="741" width="0.2062%" height="15" fill="rgb(236,150,34)" fg:x="41332" fg:w="226"/><text x="37.9548%" y="751.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (169 samples, 0.15%)</title><rect x="37.7568%" y="725" width="0.1542%" height="15" fill="rgb(243,228,27)" fg:x="41389" fg:w="169"/><text x="38.0068%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (147 samples, 0.13%)</title><rect x="37.7769%" y="709" width="0.1341%" height="15" fill="rgb(245,77,44)" fg:x="41411" fg:w="147"/><text x="38.0269%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (147 samples, 0.13%)</title><rect x="37.7769%" y="693" width="0.1341%" height="15" fill="rgb(235,214,42)" fg:x="41411" fg:w="147"/><text x="38.0269%" y="703.50"></text></g><g><title>&lt;abi_stable::std_types::utypeid::UTypeId as core::cmp::PartialEq&gt;::eq (214 samples, 0.20%)</title><rect x="38.6700%" y="709" width="0.1952%" height="15" fill="rgb(221,74,3)" fg:x="42390" fg:w="214"/><text x="38.9200%" y="719.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (209 samples, 0.19%)</title><rect x="38.6745%" y="693" width="0.1907%" height="15" fill="rgb(206,121,29)" fg:x="42395" fg:w="209"/><text x="38.9245%" y="703.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (209 samples, 0.19%)</title><rect x="38.6745%" y="677" width="0.1907%" height="15" fill="rgb(249,131,53)" fg:x="42395" fg:w="209"/><text x="38.9245%" y="687.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (32 samples, 0.03%)</title><rect x="38.8652%" y="709" width="0.0292%" height="15" fill="rgb(236,170,29)" fg:x="42604" fg:w="32"/><text x="39.1152%" y="719.50"></text></g><g><title>abi_stable::std_types::utypeid::new_utypeid (24 samples, 0.02%)</title><rect x="38.8725%" y="693" width="0.0219%" height="15" fill="rgb(247,96,15)" fg:x="42612" fg:w="24"/><text x="39.1225%" y="703.50"></text></g><g><title>abi_stable::std_types::utypeid::UTypeId::new (17 samples, 0.02%)</title><rect x="38.8789%" y="677" width="0.0155%" height="15" fill="rgb(211,210,7)" fg:x="42619" fg:w="17"/><text x="39.1289%" y="687.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (252 samples, 0.23%)</title><rect x="38.6700%" y="725" width="0.2299%" height="15" fill="rgb(240,88,50)" fg:x="42390" fg:w="252"/><text x="38.9200%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (326 samples, 0.30%)</title><rect x="38.6134%" y="773" width="0.2974%" height="15" fill="rgb(209,229,26)" fg:x="42328" fg:w="326"/><text x="38.8634%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::convert::From&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (308 samples, 0.28%)</title><rect x="38.6298%" y="757" width="0.2810%" height="15" fill="rgb(210,68,23)" fg:x="42346" fg:w="308"/><text x="38.8798%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (299 samples, 0.27%)</title><rect x="38.6380%" y="741" width="0.2728%" height="15" fill="rgb(229,180,13)" fg:x="42355" fg:w="299"/><text x="38.8880%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (637 samples, 0.58%)</title><rect x="38.9236%" y="773" width="0.5811%" height="15" fill="rgb(236,53,44)" fg:x="42668" fg:w="637"/><text x="39.1736%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (56 samples, 0.05%)</title><rect x="39.6579%" y="517" width="0.0511%" height="15" fill="rgb(244,214,29)" fg:x="43473" fg:w="56"/><text x="39.9079%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (56 samples, 0.05%)</title><rect x="39.6579%" y="501" width="0.0511%" height="15" fill="rgb(220,75,29)" fg:x="43473" fg:w="56"/><text x="39.9079%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (47 samples, 0.04%)</title><rect x="39.6661%" y="485" width="0.0429%" height="15" fill="rgb(214,183,37)" fg:x="43482" fg:w="47"/><text x="39.9161%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (39 samples, 0.04%)</title><rect x="39.6734%" y="469" width="0.0356%" height="15" fill="rgb(239,117,29)" fg:x="43490" fg:w="39"/><text x="39.9234%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (39 samples, 0.04%)</title><rect x="39.6734%" y="453" width="0.0356%" height="15" fill="rgb(237,171,35)" fg:x="43490" fg:w="39"/><text x="39.9234%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (39 samples, 0.04%)</title><rect x="39.6734%" y="437" width="0.0356%" height="15" fill="rgb(229,178,53)" fg:x="43490" fg:w="39"/><text x="39.9234%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (156 samples, 0.14%)</title><rect x="39.6524%" y="565" width="0.1423%" height="15" fill="rgb(210,102,19)" fg:x="43467" fg:w="156"/><text x="39.9024%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (156 samples, 0.14%)</title><rect x="39.6524%" y="549" width="0.1423%" height="15" fill="rgb(235,127,22)" fg:x="43467" fg:w="156"/><text x="39.9024%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (151 samples, 0.14%)</title><rect x="39.6570%" y="533" width="0.1377%" height="15" fill="rgb(244,31,31)" fg:x="43472" fg:w="151"/><text x="39.9070%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (81 samples, 0.07%)</title><rect x="39.7209%" y="517" width="0.0739%" height="15" fill="rgb(231,43,21)" fg:x="43542" fg:w="81"/><text x="39.9709%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (81 samples, 0.07%)</title><rect x="39.7209%" y="501" width="0.0739%" height="15" fill="rgb(217,131,35)" fg:x="43542" fg:w="81"/><text x="39.9709%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (174 samples, 0.16%)</title><rect x="39.6406%" y="677" width="0.1587%" height="15" fill="rgb(221,149,4)" fg:x="43454" fg:w="174"/><text x="39.8906%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (171 samples, 0.16%)</title><rect x="39.6433%" y="661" width="0.1560%" height="15" fill="rgb(232,170,28)" fg:x="43457" fg:w="171"/><text x="39.8933%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (171 samples, 0.16%)</title><rect x="39.6433%" y="645" width="0.1560%" height="15" fill="rgb(238,56,10)" fg:x="43457" fg:w="171"/><text x="39.8933%" y="655.50"></text></g><g><title>alloc::alloc::alloc (171 samples, 0.16%)</title><rect x="39.6433%" y="629" width="0.1560%" height="15" fill="rgb(235,196,14)" fg:x="43457" fg:w="171"/><text x="39.8933%" y="639.50"></text></g><g><title>__rg_alloc (171 samples, 0.16%)</title><rect x="39.6433%" y="613" width="0.1560%" height="15" fill="rgb(216,45,48)" fg:x="43457" fg:w="171"/><text x="39.8933%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (171 samples, 0.16%)</title><rect x="39.6433%" y="597" width="0.1560%" height="15" fill="rgb(238,213,17)" fg:x="43457" fg:w="171"/><text x="39.8933%" y="607.50"></text></g><g><title>rust_alloc (171 samples, 0.16%)</title><rect x="39.6433%" y="581" width="0.1560%" height="15" fill="rgb(212,13,2)" fg:x="43457" fg:w="171"/><text x="39.8933%" y="591.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (281 samples, 0.26%)</title><rect x="39.5448%" y="709" width="0.2563%" height="15" fill="rgb(240,114,20)" fg:x="43349" fg:w="281"/><text x="39.7948%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (281 samples, 0.26%)</title><rect x="39.5448%" y="693" width="0.2563%" height="15" fill="rgb(228,41,40)" fg:x="43349" fg:w="281"/><text x="39.7948%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (18 samples, 0.02%)</title><rect x="39.8011%" y="613" width="0.0164%" height="15" fill="rgb(244,132,35)" fg:x="43630" fg:w="18"/><text x="40.0511%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (33 samples, 0.03%)</title><rect x="39.8011%" y="677" width="0.0301%" height="15" fill="rgb(253,189,4)" fg:x="43630" fg:w="33"/><text x="40.0511%" y="687.50"></text></g><g><title>std::collections::hash::map::RandomState::new (33 samples, 0.03%)</title><rect x="39.8011%" y="661" width="0.0301%" height="15" fill="rgb(224,37,19)" fg:x="43630" fg:w="33"/><text x="40.0511%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.03%)</title><rect x="39.8011%" y="645" width="0.0301%" height="15" fill="rgb(235,223,18)" fg:x="43630" fg:w="33"/><text x="40.0511%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.03%)</title><rect x="39.8011%" y="629" width="0.0301%" height="15" fill="rgb(235,163,25)" fg:x="43630" fg:w="33"/><text x="40.0511%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="39.8641%" y="373" width="0.0109%" height="15" fill="rgb(217,145,28)" fg:x="43699" fg:w="12"/><text x="40.1141%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="39.8641%" y="357" width="0.0109%" height="15" fill="rgb(223,223,32)" fg:x="43699" fg:w="12"/><text x="40.1141%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (18 samples, 0.02%)</title><rect x="39.8641%" y="389" width="0.0164%" height="15" fill="rgb(227,189,39)" fg:x="43699" fg:w="18"/><text x="40.1141%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (23 samples, 0.02%)</title><rect x="39.8623%" y="405" width="0.0210%" height="15" fill="rgb(248,10,22)" fg:x="43697" fg:w="23"/><text x="40.1123%" y="415.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (21 samples, 0.02%)</title><rect x="39.8878%" y="389" width="0.0192%" height="15" fill="rgb(248,46,39)" fg:x="43725" fg:w="21"/><text x="40.1378%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (139 samples, 0.13%)</title><rect x="39.8623%" y="437" width="0.1268%" height="15" fill="rgb(248,113,48)" fg:x="43697" fg:w="139"/><text x="40.1123%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (139 samples, 0.13%)</title><rect x="39.8623%" y="421" width="0.1268%" height="15" fill="rgb(245,16,25)" fg:x="43697" fg:w="139"/><text x="40.1123%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (116 samples, 0.11%)</title><rect x="39.8832%" y="405" width="0.1058%" height="15" fill="rgb(249,152,16)" fg:x="43720" fg:w="116"/><text x="40.1332%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (90 samples, 0.08%)</title><rect x="39.9070%" y="389" width="0.0821%" height="15" fill="rgb(250,16,1)" fg:x="43746" fg:w="90"/><text x="40.1570%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (90 samples, 0.08%)</title><rect x="39.9070%" y="373" width="0.0821%" height="15" fill="rgb(249,138,3)" fg:x="43746" fg:w="90"/><text x="40.1570%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (90 samples, 0.08%)</title><rect x="39.9070%" y="357" width="0.0821%" height="15" fill="rgb(227,71,41)" fg:x="43746" fg:w="90"/><text x="40.1570%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="39.9891%" y="437" width="0.0100%" height="15" fill="rgb(209,184,23)" fg:x="43836" fg:w="11"/><text x="40.2391%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (336 samples, 0.31%)</title><rect x="39.8522%" y="485" width="0.3065%" height="15" fill="rgb(223,215,31)" fg:x="43686" fg:w="336"/><text x="40.1022%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (336 samples, 0.31%)</title><rect x="39.8522%" y="469" width="0.3065%" height="15" fill="rgb(210,146,28)" fg:x="43686" fg:w="336"/><text x="40.1022%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (329 samples, 0.30%)</title><rect x="39.8586%" y="453" width="0.3001%" height="15" fill="rgb(209,183,41)" fg:x="43693" fg:w="329"/><text x="40.1086%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (169 samples, 0.15%)</title><rect x="40.0046%" y="437" width="0.1542%" height="15" fill="rgb(209,224,45)" fg:x="43853" fg:w="169"/><text x="40.2546%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (169 samples, 0.15%)</title><rect x="40.0046%" y="421" width="0.1542%" height="15" fill="rgb(224,209,51)" fg:x="43853" fg:w="169"/><text x="40.2546%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (363 samples, 0.33%)</title><rect x="39.8349%" y="613" width="0.3311%" height="15" fill="rgb(223,17,39)" fg:x="43667" fg:w="363"/><text x="40.0849%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (355 samples, 0.32%)</title><rect x="39.8422%" y="597" width="0.3238%" height="15" fill="rgb(234,204,37)" fg:x="43675" fg:w="355"/><text x="40.0922%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (352 samples, 0.32%)</title><rect x="39.8449%" y="581" width="0.3211%" height="15" fill="rgb(236,120,5)" fg:x="43678" fg:w="352"/><text x="40.0949%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (352 samples, 0.32%)</title><rect x="39.8449%" y="565" width="0.3211%" height="15" fill="rgb(248,97,27)" fg:x="43678" fg:w="352"/><text x="40.0949%" y="575.50"></text></g><g><title>alloc::alloc::alloc (352 samples, 0.32%)</title><rect x="39.8449%" y="549" width="0.3211%" height="15" fill="rgb(240,66,17)" fg:x="43678" fg:w="352"/><text x="40.0949%" y="559.50"></text></g><g><title>__rg_alloc (352 samples, 0.32%)</title><rect x="39.8449%" y="533" width="0.3211%" height="15" fill="rgb(210,79,3)" fg:x="43678" fg:w="352"/><text x="40.0949%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (352 samples, 0.32%)</title><rect x="39.8449%" y="517" width="0.3211%" height="15" fill="rgb(214,176,27)" fg:x="43678" fg:w="352"/><text x="40.0949%" y="527.50"></text></g><g><title>rust_alloc (351 samples, 0.32%)</title><rect x="39.8458%" y="501" width="0.3202%" height="15" fill="rgb(235,185,3)" fg:x="43679" fg:w="351"/><text x="40.0958%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (403 samples, 0.37%)</title><rect x="39.8011%" y="693" width="0.3676%" height="15" fill="rgb(227,24,12)" fg:x="43630" fg:w="403"/><text x="40.0511%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (370 samples, 0.34%)</title><rect x="39.8312%" y="677" width="0.3375%" height="15" fill="rgb(252,169,48)" fg:x="43663" fg:w="370"/><text x="40.0812%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (370 samples, 0.34%)</title><rect x="39.8312%" y="661" width="0.3375%" height="15" fill="rgb(212,65,1)" fg:x="43663" fg:w="370"/><text x="40.0812%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (366 samples, 0.33%)</title><rect x="39.8349%" y="645" width="0.3339%" height="15" fill="rgb(242,39,24)" fg:x="43667" fg:w="366"/><text x="40.0849%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (366 samples, 0.33%)</title><rect x="39.8349%" y="629" width="0.3339%" height="15" fill="rgb(249,32,23)" fg:x="43667" fg:w="366"/><text x="40.0849%" y="639.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (434 samples, 0.40%)</title><rect x="39.8011%" y="709" width="0.3959%" height="15" fill="rgb(251,195,23)" fg:x="43630" fg:w="434"/><text x="40.0511%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (31 samples, 0.03%)</title><rect x="40.1688%" y="693" width="0.0283%" height="15" fill="rgb(236,174,8)" fg:x="44033" fg:w="31"/><text x="40.4188%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (27 samples, 0.02%)</title><rect x="40.1724%" y="677" width="0.0246%" height="15" fill="rgb(220,197,8)" fg:x="44037" fg:w="27"/><text x="40.4224%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (27 samples, 0.02%)</title><rect x="40.1724%" y="661" width="0.0246%" height="15" fill="rgb(240,108,37)" fg:x="44037" fg:w="27"/><text x="40.4224%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (21 samples, 0.02%)</title><rect x="40.1779%" y="645" width="0.0192%" height="15" fill="rgb(232,176,24)" fg:x="44043" fg:w="21"/><text x="40.4279%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (21 samples, 0.02%)</title><rect x="40.1779%" y="629" width="0.0192%" height="15" fill="rgb(243,35,29)" fg:x="44043" fg:w="21"/><text x="40.4279%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (21 samples, 0.02%)</title><rect x="40.1779%" y="613" width="0.0192%" height="15" fill="rgb(210,37,18)" fg:x="44043" fg:w="21"/><text x="40.4279%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (21 samples, 0.02%)</title><rect x="40.1779%" y="597" width="0.0192%" height="15" fill="rgb(224,184,40)" fg:x="44043" fg:w="21"/><text x="40.4279%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (21 samples, 0.02%)</title><rect x="40.1779%" y="581" width="0.0192%" height="15" fill="rgb(236,39,29)" fg:x="44043" fg:w="21"/><text x="40.4279%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (751 samples, 0.69%)</title><rect x="39.5174%" y="773" width="0.6851%" height="15" fill="rgb(232,48,39)" fg:x="43319" fg:w="751"/><text x="39.7674%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (742 samples, 0.68%)</title><rect x="39.5256%" y="757" width="0.6769%" height="15" fill="rgb(236,34,42)" fg:x="43328" fg:w="742"/><text x="39.7756%" y="767.50"></text></g><g><title>value_trait::Builder::object (731 samples, 0.67%)</title><rect x="39.5357%" y="741" width="0.6668%" height="15" fill="rgb(243,106,37)" fg:x="43339" fg:w="731"/><text x="39.7857%" y="751.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (721 samples, 0.66%)</title><rect x="39.5448%" y="725" width="0.6577%" height="15" fill="rgb(218,96,6)" fg:x="43349" fg:w="721"/><text x="39.7948%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="40.2025%" y="773" width="0.0146%" height="15" fill="rgb(235,130,12)" fg:x="44070" fg:w="16"/><text x="40.4525%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt; (16 samples, 0.01%)</title><rect x="40.2025%" y="757" width="0.0146%" height="15" fill="rgb(231,95,0)" fg:x="44070" fg:w="16"/><text x="40.4525%" y="767.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (30 samples, 0.03%)</title><rect x="40.2737%" y="661" width="0.0274%" height="15" fill="rgb(228,12,23)" fg:x="44148" fg:w="30"/><text x="40.5237%" y="671.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="40.3083%" y="629" width="0.0119%" height="15" fill="rgb(216,12,1)" fg:x="44186" fg:w="13"/><text x="40.5583%" y="639.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="40.3102%" y="613" width="0.0100%" height="15" fill="rgb(219,59,3)" fg:x="44188" fg:w="11"/><text x="40.5602%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="40.3321%" y="565" width="0.0283%" height="15" fill="rgb(215,208,46)" fg:x="44212" fg:w="31"/><text x="40.5821%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="40.3321%" y="549" width="0.0283%" height="15" fill="rgb(254,224,29)" fg:x="44212" fg:w="31"/><text x="40.5821%" y="559.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (28 samples, 0.03%)</title><rect x="40.3348%" y="533" width="0.0255%" height="15" fill="rgb(232,14,29)" fg:x="44215" fg:w="28"/><text x="40.5848%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (57 samples, 0.05%)</title><rect x="40.3202%" y="629" width="0.0520%" height="15" fill="rgb(208,45,52)" fg:x="44199" fg:w="57"/><text x="40.5702%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (57 samples, 0.05%)</title><rect x="40.3202%" y="613" width="0.0520%" height="15" fill="rgb(234,191,28)" fg:x="44199" fg:w="57"/><text x="40.5702%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (57 samples, 0.05%)</title><rect x="40.3202%" y="597" width="0.0520%" height="15" fill="rgb(244,67,43)" fg:x="44199" fg:w="57"/><text x="40.5702%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (57 samples, 0.05%)</title><rect x="40.3202%" y="581" width="0.0520%" height="15" fill="rgb(236,189,24)" fg:x="44199" fg:w="57"/><text x="40.5702%" y="591.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="40.3603%" y="565" width="0.0119%" height="15" fill="rgb(239,214,33)" fg:x="44243" fg:w="13"/><text x="40.6103%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (78 samples, 0.07%)</title><rect x="40.3074%" y="645" width="0.0712%" height="15" fill="rgb(226,176,41)" fg:x="44185" fg:w="78"/><text x="40.5574%" y="655.50"></text></g><g><title>rust_dealloc (90 samples, 0.08%)</title><rect x="40.3010%" y="661" width="0.0821%" height="15" fill="rgb(248,47,8)" fg:x="44178" fg:w="90"/><text x="40.5510%" y="671.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (11 samples, 0.01%)</title><rect x="40.3841%" y="645" width="0.0100%" height="15" fill="rgb(218,81,44)" fg:x="44269" fg:w="11"/><text x="40.6341%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (148 samples, 0.14%)</title><rect x="40.2646%" y="709" width="0.1350%" height="15" fill="rgb(213,98,6)" fg:x="44138" fg:w="148"/><text x="40.5146%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (148 samples, 0.14%)</title><rect x="40.2646%" y="693" width="0.1350%" height="15" fill="rgb(222,85,22)" fg:x="44138" fg:w="148"/><text x="40.5146%" y="703.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (148 samples, 0.14%)</title><rect x="40.2646%" y="677" width="0.1350%" height="15" fill="rgb(239,46,39)" fg:x="44138" fg:w="148"/><text x="40.5146%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (18 samples, 0.02%)</title><rect x="40.3831%" y="661" width="0.0164%" height="15" fill="rgb(237,12,29)" fg:x="44268" fg:w="18"/><text x="40.6331%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (161 samples, 0.15%)</title><rect x="40.2573%" y="725" width="0.1469%" height="15" fill="rgb(214,77,8)" fg:x="44130" fg:w="161"/><text x="40.5073%" y="735.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (27 samples, 0.02%)</title><rect x="40.4479%" y="581" width="0.0246%" height="15" fill="rgb(217,168,37)" fg:x="44339" fg:w="27"/><text x="40.6979%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (25 samples, 0.02%)</title><rect x="40.4497%" y="565" width="0.0228%" height="15" fill="rgb(221,217,23)" fg:x="44341" fg:w="25"/><text x="40.6997%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (47 samples, 0.04%)</title><rect x="40.4379%" y="629" width="0.0429%" height="15" fill="rgb(243,229,36)" fg:x="44328" fg:w="47"/><text x="40.6879%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (47 samples, 0.04%)</title><rect x="40.4379%" y="613" width="0.0429%" height="15" fill="rgb(251,163,40)" fg:x="44328" fg:w="47"/><text x="40.6879%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (43 samples, 0.04%)</title><rect x="40.4415%" y="597" width="0.0392%" height="15" fill="rgb(237,222,12)" fg:x="44332" fg:w="43"/><text x="40.6915%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (69 samples, 0.06%)</title><rect x="40.4215%" y="661" width="0.0629%" height="15" fill="rgb(248,132,6)" fg:x="44310" fg:w="69"/><text x="40.6715%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (69 samples, 0.06%)</title><rect x="40.4215%" y="645" width="0.0629%" height="15" fill="rgb(227,167,50)" fg:x="44310" fg:w="69"/><text x="40.6715%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (70 samples, 0.06%)</title><rect x="40.4215%" y="693" width="0.0639%" height="15" fill="rgb(242,84,37)" fg:x="44310" fg:w="70"/><text x="40.6715%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (70 samples, 0.06%)</title><rect x="40.4215%" y="677" width="0.0639%" height="15" fill="rgb(212,4,50)" fg:x="44310" fg:w="70"/><text x="40.6715%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (86 samples, 0.08%)</title><rect x="40.4087%" y="709" width="0.0785%" height="15" fill="rgb(230,228,32)" fg:x="44296" fg:w="86"/><text x="40.6587%" y="719.50"></text></g><g><title>rust_dealloc (94 samples, 0.09%)</title><rect x="40.4041%" y="725" width="0.0858%" height="15" fill="rgb(248,217,23)" fg:x="44291" fg:w="94"/><text x="40.6541%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (298 samples, 0.27%)</title><rect x="40.2235%" y="773" width="0.2718%" height="15" fill="rgb(238,197,32)" fg:x="44093" fg:w="298"/><text x="40.4735%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (289 samples, 0.26%)</title><rect x="40.2317%" y="757" width="0.2636%" height="15" fill="rgb(236,106,1)" fg:x="44102" fg:w="289"/><text x="40.4817%" y="767.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (289 samples, 0.26%)</title><rect x="40.2317%" y="741" width="0.2636%" height="15" fill="rgb(219,228,13)" fg:x="44102" fg:w="289"/><text x="40.4817%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (41 samples, 0.04%)</title><rect x="40.5519%" y="709" width="0.0374%" height="15" fill="rgb(238,30,35)" fg:x="44453" fg:w="41"/><text x="40.8019%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (41 samples, 0.04%)</title><rect x="40.5519%" y="693" width="0.0374%" height="15" fill="rgb(236,70,23)" fg:x="44453" fg:w="41"/><text x="40.8019%" y="703.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (41 samples, 0.04%)</title><rect x="40.5519%" y="677" width="0.0374%" height="15" fill="rgb(249,104,48)" fg:x="44453" fg:w="41"/><text x="40.8019%" y="687.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (41 samples, 0.04%)</title><rect x="40.5519%" y="661" width="0.0374%" height="15" fill="rgb(254,117,50)" fg:x="44453" fg:w="41"/><text x="40.8019%" y="671.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (41 samples, 0.04%)</title><rect x="40.5519%" y="645" width="0.0374%" height="15" fill="rgb(223,152,4)" fg:x="44453" fg:w="41"/><text x="40.8019%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (22 samples, 0.02%)</title><rect x="40.5692%" y="629" width="0.0201%" height="15" fill="rgb(245,6,2)" fg:x="44472" fg:w="22"/><text x="40.8192%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (103 samples, 0.09%)</title><rect x="40.5090%" y="741" width="0.0940%" height="15" fill="rgb(249,150,24)" fg:x="44406" fg:w="103"/><text x="40.7590%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (103 samples, 0.09%)</title><rect x="40.5090%" y="725" width="0.0940%" height="15" fill="rgb(228,185,42)" fg:x="44406" fg:w="103"/><text x="40.7590%" y="735.50"></text></g><g><title>core::time::Duration::new (15 samples, 0.01%)</title><rect x="40.5893%" y="709" width="0.0137%" height="15" fill="rgb(226,39,33)" fg:x="44494" fg:w="15"/><text x="40.8393%" y="719.50"></text></g><g><title>std::time::SystemTime::duration_since (111 samples, 0.10%)</title><rect x="40.5090%" y="757" width="0.1013%" height="15" fill="rgb(221,166,19)" fg:x="44406" fg:w="111"/><text x="40.7590%" y="767.50"></text></g><g><title>[[vdso]] (230 samples, 0.21%)</title><rect x="40.8493%" y="677" width="0.2098%" height="15" fill="rgb(209,109,2)" fg:x="44779" fg:w="230"/><text x="41.0993%" y="687.50"></text></g><g><title>__clock_gettime_2 (411 samples, 0.37%)</title><rect x="40.6851%" y="709" width="0.3749%" height="15" fill="rgb(252,216,26)" fg:x="44599" fg:w="411"/><text x="40.9351%" y="719.50"></text></g><g><title>__vdso_clock_gettime (382 samples, 0.35%)</title><rect x="40.7115%" y="693" width="0.3485%" height="15" fill="rgb(227,173,36)" fg:x="44628" fg:w="382"/><text x="40.9615%" y="703.50"></text></g><g><title>tremor_common::time::nanotime (620 samples, 0.57%)</title><rect x="40.4953%" y="773" width="0.5656%" height="15" fill="rgb(209,90,7)" fg:x="44391" fg:w="620"/><text x="40.7453%" y="783.50"></text></g><g><title>std::time::SystemTime::now (494 samples, 0.45%)</title><rect x="40.6103%" y="757" width="0.4506%" height="15" fill="rgb(250,194,11)" fg:x="44517" fg:w="494"/><text x="40.8603%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (494 samples, 0.45%)</title><rect x="40.6103%" y="741" width="0.4506%" height="15" fill="rgb(220,72,50)" fg:x="44517" fg:w="494"/><text x="40.8603%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (494 samples, 0.45%)</title><rect x="40.6103%" y="725" width="0.4506%" height="15" fill="rgb(222,106,48)" fg:x="44517" fg:w="494"/><text x="40.8603%" y="735.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,482 samples, 3.18%)</title><rect x="37.9110%" y="789" width="3.1764%" height="15" fill="rgb(216,220,45)" fg:x="41558" fg:w="3482"/><text x="38.1610%" y="799.50">tre..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (29 samples, 0.03%)</title><rect x="41.0609%" y="773" width="0.0265%" height="15" fill="rgb(234,112,18)" fg:x="45011" fg:w="29"/><text x="41.3109%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,619 samples, 5.13%)</title><rect x="35.9943%" y="805" width="5.1259%" height="15" fill="rgb(206,179,9)" fg:x="39457" fg:w="5619"/><text x="36.2443%" y="815.50">&lt;core:..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (36 samples, 0.03%)</title><rect x="41.0874%" y="789" width="0.0328%" height="15" fill="rgb(215,115,40)" fg:x="45040" fg:w="36"/><text x="41.3374%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (631 samples, 0.58%)</title><rect x="41.1275%" y="805" width="0.5756%" height="15" fill="rgb(222,69,34)" fg:x="45084" fg:w="631"/><text x="41.3775%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (27 samples, 0.02%)</title><rect x="41.7077%" y="789" width="0.0246%" height="15" fill="rgb(209,161,10)" fg:x="45720" fg:w="27"/><text x="41.9577%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (32 samples, 0.03%)</title><rect x="41.7077%" y="805" width="0.0292%" height="15" fill="rgb(217,6,38)" fg:x="45720" fg:w="32"/><text x="41.9577%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (6,700 samples, 6.11%)</title><rect x="35.6504%" y="821" width="6.1120%" height="15" fill="rgb(229,229,48)" fg:x="39080" fg:w="6700"/><text x="35.9004%" y="831.50">tremor_r..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::should_pull_data (27 samples, 0.02%)</title><rect x="41.7378%" y="805" width="0.0246%" height="15" fill="rgb(225,21,28)" fg:x="45753" fg:w="27"/><text x="41.9878%" y="815.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (32 samples, 0.03%)</title><rect x="41.7716%" y="757" width="0.0292%" height="15" fill="rgb(206,33,13)" fg:x="45790" fg:w="32"/><text x="42.0216%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (25 samples, 0.02%)</title><rect x="41.7780%" y="741" width="0.0228%" height="15" fill="rgb(242,178,17)" fg:x="45797" fg:w="25"/><text x="42.0280%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="41.7780%" y="725" width="0.0228%" height="15" fill="rgb(220,162,5)" fg:x="45797" fg:w="25"/><text x="42.0280%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="41.7780%" y="709" width="0.0228%" height="15" fill="rgb(210,33,43)" fg:x="45797" fg:w="25"/><text x="42.0280%" y="719.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,574 samples, 7.82%)</title><rect x="33.9810%" y="1109" width="7.8216%" height="15" fill="rgb(216,116,54)" fg:x="37250" fg:w="8574"/><text x="34.2310%" y="1119.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,570 samples, 7.82%)</title><rect x="33.9847%" y="1093" width="7.8179%" height="15" fill="rgb(249,92,24)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="1103.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::run::{{closure}} (8,570 samples, 7.82%)</title><rect x="33.9847%" y="1077" width="7.8179%" height="15" fill="rgb(231,189,14)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="1087.50">async_execu..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,570 samples, 7.82%)</title><rect x="33.9847%" y="1061" width="7.8179%" height="15" fill="rgb(230,8,41)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="1071.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,570 samples, 7.82%)</title><rect x="33.9847%" y="1045" width="7.8179%" height="15" fill="rgb(249,7,27)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="1055.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,570 samples, 7.82%)</title><rect x="33.9847%" y="1029" width="7.8179%" height="15" fill="rgb(232,86,5)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="1039.50">async_execu..</text></g><g><title>async_task::runnable::Runnable::run (8,570 samples, 7.82%)</title><rect x="33.9847%" y="1013" width="7.8179%" height="15" fill="rgb(224,175,18)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="1023.50">async_task:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,570 samples, 7.82%)</title><rect x="33.9847%" y="997" width="7.8179%" height="15" fill="rgb(220,129,12)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="1007.50">async_task:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,570 samples, 7.82%)</title><rect x="33.9847%" y="981" width="7.8179%" height="15" fill="rgb(210,19,36)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="991.50">&lt;core::pin:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,570 samples, 7.82%)</title><rect x="33.9847%" y="965" width="7.8179%" height="15" fill="rgb(219,96,14)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="975.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,570 samples, 7.82%)</title><rect x="33.9847%" y="949" width="7.8179%" height="15" fill="rgb(249,106,1)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="959.50">async_execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,570 samples, 7.82%)</title><rect x="33.9847%" y="933" width="7.8179%" height="15" fill="rgb(249,155,20)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="943.50">&lt;async_std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,570 samples, 7.82%)</title><rect x="33.9847%" y="917" width="7.8179%" height="15" fill="rgb(244,168,9)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="927.50">async_std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,570 samples, 7.82%)</title><rect x="33.9847%" y="901" width="7.8179%" height="15" fill="rgb(216,23,50)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="911.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,570 samples, 7.82%)</title><rect x="33.9847%" y="885" width="7.8179%" height="15" fill="rgb(224,219,20)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="895.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,570 samples, 7.82%)</title><rect x="33.9847%" y="869" width="7.8179%" height="15" fill="rgb(222,156,15)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="879.50">async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,570 samples, 7.82%)</title><rect x="33.9847%" y="853" width="7.8179%" height="15" fill="rgb(231,97,17)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="863.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,570 samples, 7.82%)</title><rect x="33.9847%" y="837" width="7.8179%" height="15" fill="rgb(218,70,48)" fg:x="37254" fg:w="8570"/><text x="34.2347%" y="847.50">&lt;core::futu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (44 samples, 0.04%)</title><rect x="41.7625%" y="821" width="0.0401%" height="15" fill="rgb(212,196,52)" fg:x="45780" fg:w="44"/><text x="42.0125%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (44 samples, 0.04%)</title><rect x="41.7625%" y="805" width="0.0401%" height="15" fill="rgb(243,203,18)" fg:x="45780" fg:w="44"/><text x="42.0125%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (44 samples, 0.04%)</title><rect x="41.7625%" y="789" width="0.0401%" height="15" fill="rgb(252,125,41)" fg:x="45780" fg:w="44"/><text x="42.0125%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (44 samples, 0.04%)</title><rect x="41.7625%" y="773" width="0.0401%" height="15" fill="rgb(223,180,33)" fg:x="45780" fg:w="44"/><text x="42.0125%" y="783.50"></text></g><g><title>async_io::driver::block_on (8,585 samples, 7.83%)</title><rect x="33.9801%" y="1125" width="7.8316%" height="15" fill="rgb(254,159,46)" fg:x="37249" fg:w="8585"/><text x="34.2301%" y="1135.50">async_io::d..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (20 samples, 0.02%)</title><rect x="41.9139%" y="437" width="0.0182%" height="15" fill="rgb(254,38,10)" fg:x="45946" fg:w="20"/><text x="42.1639%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="41.9212%" y="421" width="0.0109%" height="15" fill="rgb(208,217,32)" fg:x="45954" fg:w="12"/><text x="42.1712%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (12 samples, 0.01%)</title><rect x="41.9212%" y="405" width="0.0109%" height="15" fill="rgb(221,120,13)" fg:x="45954" fg:w="12"/><text x="42.1712%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="41.9476%" y="389" width="0.0137%" height="15" fill="rgb(246,54,52)" fg:x="45983" fg:w="15"/><text x="42.1976%" y="399.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (13 samples, 0.01%)</title><rect x="41.9704%" y="357" width="0.0119%" height="15" fill="rgb(242,34,25)" fg:x="46008" fg:w="13"/><text x="42.2204%" y="367.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (13 samples, 0.01%)</title><rect x="41.9704%" y="341" width="0.0119%" height="15" fill="rgb(247,209,9)" fg:x="46008" fg:w="13"/><text x="42.2204%" y="351.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (13 samples, 0.01%)</title><rect x="41.9704%" y="325" width="0.0119%" height="15" fill="rgb(228,71,26)" fg:x="46008" fg:w="13"/><text x="42.2204%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (13 samples, 0.01%)</title><rect x="41.9704%" y="309" width="0.0119%" height="15" fill="rgb(222,145,49)" fg:x="46008" fg:w="13"/><text x="42.2204%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (13 samples, 0.01%)</title><rect x="41.9704%" y="293" width="0.0119%" height="15" fill="rgb(218,121,17)" fg:x="46008" fg:w="13"/><text x="42.2204%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (39 samples, 0.04%)</title><rect x="42.0097%" y="133" width="0.0356%" height="15" fill="rgb(244,50,7)" fg:x="46051" fg:w="39"/><text x="42.2597%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (39 samples, 0.04%)</title><rect x="42.0097%" y="117" width="0.0356%" height="15" fill="rgb(246,229,37)" fg:x="46051" fg:w="39"/><text x="42.2597%" y="127.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (39 samples, 0.04%)</title><rect x="42.0097%" y="101" width="0.0356%" height="15" fill="rgb(225,18,5)" fg:x="46051" fg:w="39"/><text x="42.2597%" y="111.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="42.0334%" y="85" width="0.0119%" height="15" fill="rgb(213,204,8)" fg:x="46077" fg:w="13"/><text x="42.2834%" y="95.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="42.0334%" y="69" width="0.0119%" height="15" fill="rgb(238,103,6)" fg:x="46077" fg:w="13"/><text x="42.2834%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (55 samples, 0.05%)</title><rect x="42.0060%" y="165" width="0.0502%" height="15" fill="rgb(222,25,35)" fg:x="46047" fg:w="55"/><text x="42.2560%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (55 samples, 0.05%)</title><rect x="42.0060%" y="149" width="0.0502%" height="15" fill="rgb(213,203,35)" fg:x="46047" fg:w="55"/><text x="42.2560%" y="159.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="42.0452%" y="133" width="0.0109%" height="15" fill="rgb(221,79,53)" fg:x="46090" fg:w="12"/><text x="42.2952%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (69 samples, 0.06%)</title><rect x="41.9996%" y="213" width="0.0629%" height="15" fill="rgb(243,200,35)" fg:x="46040" fg:w="69"/><text x="42.2496%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (62 samples, 0.06%)</title><rect x="42.0060%" y="197" width="0.0566%" height="15" fill="rgb(248,60,25)" fg:x="46047" fg:w="62"/><text x="42.2560%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (62 samples, 0.06%)</title><rect x="42.0060%" y="181" width="0.0566%" height="15" fill="rgb(227,53,46)" fg:x="46047" fg:w="62"/><text x="42.2560%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (89 samples, 0.08%)</title><rect x="41.9823%" y="293" width="0.0812%" height="15" fill="rgb(216,120,32)" fg:x="46021" fg:w="89"/><text x="42.2323%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (83 samples, 0.08%)</title><rect x="41.9878%" y="277" width="0.0757%" height="15" fill="rgb(220,134,1)" fg:x="46027" fg:w="83"/><text x="42.2378%" y="287.50"></text></g><g><title>__rg_dealloc (83 samples, 0.08%)</title><rect x="41.9878%" y="261" width="0.0757%" height="15" fill="rgb(237,168,5)" fg:x="46027" fg:w="83"/><text x="42.2378%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (83 samples, 0.08%)</title><rect x="41.9878%" y="245" width="0.0757%" height="15" fill="rgb(231,100,33)" fg:x="46027" fg:w="83"/><text x="42.2378%" y="255.50"></text></g><g><title>rust_dealloc (76 samples, 0.07%)</title><rect x="41.9942%" y="229" width="0.0693%" height="15" fill="rgb(236,177,47)" fg:x="46034" fg:w="76"/><text x="42.2442%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (97 samples, 0.09%)</title><rect x="41.9823%" y="357" width="0.0885%" height="15" fill="rgb(235,7,49)" fg:x="46021" fg:w="97"/><text x="42.2323%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.09%)</title><rect x="41.9823%" y="341" width="0.0885%" height="15" fill="rgb(232,119,22)" fg:x="46021" fg:w="97"/><text x="42.2323%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (97 samples, 0.09%)</title><rect x="41.9823%" y="325" width="0.0885%" height="15" fill="rgb(254,73,53)" fg:x="46021" fg:w="97"/><text x="42.2323%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.09%)</title><rect x="41.9823%" y="309" width="0.0885%" height="15" fill="rgb(251,35,20)" fg:x="46021" fg:w="97"/><text x="42.2323%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (155 samples, 0.14%)</title><rect x="41.9349%" y="437" width="0.1414%" height="15" fill="rgb(241,119,20)" fg:x="45969" fg:w="155"/><text x="42.1849%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (149 samples, 0.14%)</title><rect x="41.9403%" y="421" width="0.1359%" height="15" fill="rgb(207,102,14)" fg:x="45975" fg:w="149"/><text x="42.1903%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (141 samples, 0.13%)</title><rect x="41.9476%" y="405" width="0.1286%" height="15" fill="rgb(248,201,50)" fg:x="45983" fg:w="141"/><text x="42.1976%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (116 samples, 0.11%)</title><rect x="41.9704%" y="389" width="0.1058%" height="15" fill="rgb(222,185,44)" fg:x="46008" fg:w="116"/><text x="42.2204%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.11%)</title><rect x="41.9704%" y="373" width="0.1058%" height="15" fill="rgb(218,107,18)" fg:x="46008" fg:w="116"/><text x="42.2204%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (183 samples, 0.17%)</title><rect x="41.9139%" y="453" width="0.1669%" height="15" fill="rgb(237,177,39)" fg:x="45946" fg:w="183"/><text x="42.1639%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (78 samples, 0.07%)</title><rect x="42.0808%" y="453" width="0.0712%" height="15" fill="rgb(246,69,6)" fg:x="46129" fg:w="78"/><text x="42.3308%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (52 samples, 0.05%)</title><rect x="42.1045%" y="437" width="0.0474%" height="15" fill="rgb(234,208,37)" fg:x="46155" fg:w="52"/><text x="42.3545%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (52 samples, 0.05%)</title><rect x="42.1045%" y="421" width="0.0474%" height="15" fill="rgb(225,4,6)" fg:x="46155" fg:w="52"/><text x="42.3545%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::empty (41 samples, 0.04%)</title><rect x="42.1958%" y="245" width="0.0374%" height="15" fill="rgb(233,45,0)" fg:x="46255" fg:w="41"/><text x="42.4458%" y="255.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (41 samples, 0.04%)</title><rect x="42.1958%" y="229" width="0.0374%" height="15" fill="rgb(226,136,5)" fg:x="46255" fg:w="41"/><text x="42.4458%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (304 samples, 0.28%)</title><rect x="42.1693%" y="293" width="0.2773%" height="15" fill="rgb(211,91,47)" fg:x="46226" fg:w="304"/><text x="42.4193%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (304 samples, 0.28%)</title><rect x="42.1693%" y="277" width="0.2773%" height="15" fill="rgb(242,88,51)" fg:x="46226" fg:w="304"/><text x="42.4193%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (288 samples, 0.26%)</title><rect x="42.1839%" y="261" width="0.2627%" height="15" fill="rgb(230,91,28)" fg:x="46242" fg:w="288"/><text x="42.4339%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::take (234 samples, 0.21%)</title><rect x="42.2332%" y="245" width="0.2135%" height="15" fill="rgb(254,186,29)" fg:x="46296" fg:w="234"/><text x="42.4832%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (234 samples, 0.21%)</title><rect x="42.2332%" y="229" width="0.2135%" height="15" fill="rgb(238,6,4)" fg:x="46296" fg:w="234"/><text x="42.4832%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (323 samples, 0.29%)</title><rect x="42.1584%" y="389" width="0.2947%" height="15" fill="rgb(221,151,16)" fg:x="46214" fg:w="323"/><text x="42.4084%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (323 samples, 0.29%)</title><rect x="42.1584%" y="373" width="0.2947%" height="15" fill="rgb(251,143,52)" fg:x="46214" fg:w="323"/><text x="42.4084%" y="383.50"></text></g><g><title>alloc::alloc::alloc (319 samples, 0.29%)</title><rect x="42.1620%" y="357" width="0.2910%" height="15" fill="rgb(206,90,15)" fg:x="46218" fg:w="319"/><text x="42.4120%" y="367.50"></text></g><g><title>__rg_alloc (319 samples, 0.29%)</title><rect x="42.1620%" y="341" width="0.2910%" height="15" fill="rgb(218,35,8)" fg:x="46218" fg:w="319"/><text x="42.4120%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (319 samples, 0.29%)</title><rect x="42.1620%" y="325" width="0.2910%" height="15" fill="rgb(239,215,6)" fg:x="46218" fg:w="319"/><text x="42.4120%" y="335.50"></text></g><g><title>rust_alloc (314 samples, 0.29%)</title><rect x="42.1666%" y="309" width="0.2864%" height="15" fill="rgb(245,116,39)" fg:x="46223" fg:w="314"/><text x="42.4166%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (331 samples, 0.30%)</title><rect x="42.1584%" y="405" width="0.3020%" height="15" fill="rgb(242,65,28)" fg:x="46214" fg:w="331"/><text x="42.4084%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (344 samples, 0.31%)</title><rect x="42.1520%" y="453" width="0.3138%" height="15" fill="rgb(252,132,53)" fg:x="46207" fg:w="344"/><text x="42.4020%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (344 samples, 0.31%)</title><rect x="42.1520%" y="437" width="0.3138%" height="15" fill="rgb(224,159,50)" fg:x="46207" fg:w="344"/><text x="42.4020%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (337 samples, 0.31%)</title><rect x="42.1584%" y="421" width="0.3074%" height="15" fill="rgb(224,93,4)" fg:x="46214" fg:w="337"/><text x="42.4084%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (606 samples, 0.55%)</title><rect x="41.9139%" y="469" width="0.5528%" height="15" fill="rgb(208,81,34)" fg:x="45946" fg:w="606"/><text x="42.1639%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (719 samples, 0.66%)</title><rect x="41.8117%" y="597" width="0.6559%" height="15" fill="rgb(233,92,54)" fg:x="45834" fg:w="719"/><text x="42.0617%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (719 samples, 0.66%)</title><rect x="41.8117%" y="581" width="0.6559%" height="15" fill="rgb(237,21,14)" fg:x="45834" fg:w="719"/><text x="42.0617%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (719 samples, 0.66%)</title><rect x="41.8117%" y="565" width="0.6559%" height="15" fill="rgb(249,128,51)" fg:x="45834" fg:w="719"/><text x="42.0617%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (719 samples, 0.66%)</title><rect x="41.8117%" y="549" width="0.6559%" height="15" fill="rgb(223,129,24)" fg:x="45834" fg:w="719"/><text x="42.0617%" y="559.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (719 samples, 0.66%)</title><rect x="41.8117%" y="533" width="0.6559%" height="15" fill="rgb(231,168,25)" fg:x="45834" fg:w="719"/><text x="42.0617%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (719 samples, 0.66%)</title><rect x="41.8117%" y="517" width="0.6559%" height="15" fill="rgb(224,39,20)" fg:x="45834" fg:w="719"/><text x="42.0617%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (719 samples, 0.66%)</title><rect x="41.8117%" y="501" width="0.6559%" height="15" fill="rgb(225,152,53)" fg:x="45834" fg:w="719"/><text x="42.0617%" y="511.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (719 samples, 0.66%)</title><rect x="41.8117%" y="485" width="0.6559%" height="15" fill="rgb(252,17,24)" fg:x="45834" fg:w="719"/><text x="42.0617%" y="495.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::ValueAccess&gt;::as_str (12 samples, 0.01%)</title><rect x="42.4895%" y="565" width="0.0109%" height="15" fill="rgb(250,114,30)" fg:x="46577" fg:w="12"/><text x="42.7395%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (791 samples, 0.72%)</title><rect x="42.5005%" y="565" width="0.7216%" height="15" fill="rgb(229,5,4)" fg:x="46589" fg:w="791"/><text x="42.7505%" y="575.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="43.2385%" y="517" width="0.0119%" height="15" fill="rgb(225,176,49)" fg:x="47398" fg:w="13"/><text x="43.4885%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (19 samples, 0.02%)</title><rect x="43.2594%" y="469" width="0.0173%" height="15" fill="rgb(224,221,49)" fg:x="47421" fg:w="19"/><text x="43.5094%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (80 samples, 0.07%)</title><rect x="43.2594%" y="501" width="0.0730%" height="15" fill="rgb(253,169,27)" fg:x="47421" fg:w="80"/><text x="43.5094%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (80 samples, 0.07%)</title><rect x="43.2594%" y="485" width="0.0730%" height="15" fill="rgb(211,206,16)" fg:x="47421" fg:w="80"/><text x="43.5094%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (61 samples, 0.06%)</title><rect x="43.2768%" y="469" width="0.0556%" height="15" fill="rgb(244,87,35)" fg:x="47440" fg:w="61"/><text x="43.5268%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (50 samples, 0.05%)</title><rect x="43.2868%" y="453" width="0.0456%" height="15" fill="rgb(246,28,10)" fg:x="47451" fg:w="50"/><text x="43.5368%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (50 samples, 0.05%)</title><rect x="43.2868%" y="437" width="0.0456%" height="15" fill="rgb(229,12,44)" fg:x="47451" fg:w="50"/><text x="43.5368%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (50 samples, 0.05%)</title><rect x="43.2868%" y="421" width="0.0456%" height="15" fill="rgb(210,145,37)" fg:x="47451" fg:w="50"/><text x="43.5368%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="43.3324%" y="501" width="0.0292%" height="15" fill="rgb(227,112,52)" fg:x="47501" fg:w="32"/><text x="43.5824%" y="511.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (23 samples, 0.02%)</title><rect x="43.3406%" y="485" width="0.0210%" height="15" fill="rgb(238,155,34)" fg:x="47510" fg:w="23"/><text x="43.5906%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (21 samples, 0.02%)</title><rect x="43.3653%" y="453" width="0.0192%" height="15" fill="rgb(239,226,36)" fg:x="47537" fg:w="21"/><text x="43.6153%" y="463.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (16 samples, 0.01%)</title><rect x="43.3698%" y="437" width="0.0146%" height="15" fill="rgb(230,16,23)" fg:x="47542" fg:w="16"/><text x="43.6198%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="43.3844%" y="453" width="0.0119%" height="15" fill="rgb(236,171,36)" fg:x="47558" fg:w="13"/><text x="43.6344%" y="463.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (13 samples, 0.01%)</title><rect x="43.3844%" y="437" width="0.0119%" height="15" fill="rgb(221,22,14)" fg:x="47558" fg:w="13"/><text x="43.6344%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="43.3616%" y="501" width="0.0356%" height="15" fill="rgb(242,43,11)" fg:x="47533" fg:w="39"/><text x="43.6116%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="43.3616%" y="485" width="0.0356%" height="15" fill="rgb(232,69,23)" fg:x="47533" fg:w="39"/><text x="43.6116%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="43.3643%" y="469" width="0.0328%" height="15" fill="rgb(216,180,54)" fg:x="47536" fg:w="36"/><text x="43.6143%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (323 samples, 0.29%)</title><rect x="43.2385%" y="549" width="0.2947%" height="15" fill="rgb(216,5,24)" fg:x="47398" fg:w="323"/><text x="43.4885%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (323 samples, 0.29%)</title><rect x="43.2385%" y="533" width="0.2947%" height="15" fill="rgb(225,89,9)" fg:x="47398" fg:w="323"/><text x="43.4885%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (309 samples, 0.28%)</title><rect x="43.2512%" y="517" width="0.2819%" height="15" fill="rgb(243,75,33)" fg:x="47412" fg:w="309"/><text x="43.5012%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (140 samples, 0.13%)</title><rect x="43.4054%" y="501" width="0.1277%" height="15" fill="rgb(247,141,45)" fg:x="47581" fg:w="140"/><text x="43.6554%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (140 samples, 0.13%)</title><rect x="43.4054%" y="485" width="0.1277%" height="15" fill="rgb(232,177,36)" fg:x="47581" fg:w="140"/><text x="43.6554%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (1,888 samples, 1.72%)</title><rect x="41.8117%" y="949" width="1.7223%" height="15" fill="rgb(219,125,36)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,888 samples, 1.72%)</title><rect x="41.8117%" y="933" width="1.7223%" height="15" fill="rgb(227,94,9)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="943.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,888 samples, 1.72%)</title><rect x="41.8117%" y="917" width="1.7223%" height="15" fill="rgb(240,34,52)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="927.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,888 samples, 1.72%)</title><rect x="41.8117%" y="901" width="1.7223%" height="15" fill="rgb(216,45,12)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,888 samples, 1.72%)</title><rect x="41.8117%" y="885" width="1.7223%" height="15" fill="rgb(246,21,19)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="895.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,888 samples, 1.72%)</title><rect x="41.8117%" y="869" width="1.7223%" height="15" fill="rgb(213,98,42)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="879.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,888 samples, 1.72%)</title><rect x="41.8117%" y="853" width="1.7223%" height="15" fill="rgb(250,136,47)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="863.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,888 samples, 1.72%)</title><rect x="41.8117%" y="837" width="1.7223%" height="15" fill="rgb(251,124,27)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="847.50"></text></g><g><title>std::panic::catch_unwind (1,888 samples, 1.72%)</title><rect x="41.8117%" y="821" width="1.7223%" height="15" fill="rgb(229,180,14)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="831.50"></text></g><g><title>std::panicking::try (1,888 samples, 1.72%)</title><rect x="41.8117%" y="805" width="1.7223%" height="15" fill="rgb(245,216,25)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="815.50"></text></g><g><title>std::panicking::try::do_call (1,888 samples, 1.72%)</title><rect x="41.8117%" y="789" width="1.7223%" height="15" fill="rgb(251,43,5)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,888 samples, 1.72%)</title><rect x="41.8117%" y="773" width="1.7223%" height="15" fill="rgb(250,128,24)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,888 samples, 1.72%)</title><rect x="41.8117%" y="757" width="1.7223%" height="15" fill="rgb(217,117,27)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,888 samples, 1.72%)</title><rect x="41.8117%" y="741" width="1.7223%" height="15" fill="rgb(245,147,4)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="751.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,888 samples, 1.72%)</title><rect x="41.8117%" y="725" width="1.7223%" height="15" fill="rgb(242,201,35)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,888 samples, 1.72%)</title><rect x="41.8117%" y="709" width="1.7223%" height="15" fill="rgb(218,181,1)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,888 samples, 1.72%)</title><rect x="41.8117%" y="693" width="1.7223%" height="15" fill="rgb(222,6,29)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="703.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,888 samples, 1.72%)</title><rect x="41.8117%" y="677" width="1.7223%" height="15" fill="rgb(208,186,3)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,888 samples, 1.72%)</title><rect x="41.8117%" y="661" width="1.7223%" height="15" fill="rgb(216,36,26)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,888 samples, 1.72%)</title><rect x="41.8117%" y="645" width="1.7223%" height="15" fill="rgb(248,201,23)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="655.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,888 samples, 1.72%)</title><rect x="41.8117%" y="629" width="1.7223%" height="15" fill="rgb(251,170,31)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,888 samples, 1.72%)</title><rect x="41.8117%" y="613" width="1.7223%" height="15" fill="rgb(207,110,25)" fg:x="45834" fg:w="1888"/><text x="42.0617%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,169 samples, 1.07%)</title><rect x="42.4676%" y="597" width="1.0664%" height="15" fill="rgb(250,54,15)" fg:x="46553" fg:w="1169"/><text x="42.7176%" y="607.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (1,169 samples, 1.07%)</title><rect x="42.4676%" y="581" width="1.0664%" height="15" fill="rgb(227,68,33)" fg:x="46553" fg:w="1169"/><text x="42.7176%" y="591.50"></text></g><g><title>rust_alloc (342 samples, 0.31%)</title><rect x="43.2220%" y="565" width="0.3120%" height="15" fill="rgb(238,34,41)" fg:x="47380" fg:w="342"/><text x="43.4720%" y="575.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (215 samples, 0.20%)</title><rect x="43.5477%" y="789" width="0.1961%" height="15" fill="rgb(220,11,15)" fg:x="47737" fg:w="215"/><text x="43.7977%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (202 samples, 0.18%)</title><rect x="43.5596%" y="773" width="0.1843%" height="15" fill="rgb(246,111,35)" fg:x="47750" fg:w="202"/><text x="43.8096%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (221 samples, 0.20%)</title><rect x="43.5477%" y="821" width="0.2016%" height="15" fill="rgb(209,88,53)" fg:x="47737" fg:w="221"/><text x="43.7977%" y="831.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (221 samples, 0.20%)</title><rect x="43.5477%" y="805" width="0.2016%" height="15" fill="rgb(231,185,47)" fg:x="47737" fg:w="221"/><text x="43.7977%" y="815.50"></text></g><g><title>snmalloc::FreeListIter::empty (37 samples, 0.03%)</title><rect x="45.6586%" y="341" width="0.0338%" height="15" fill="rgb(233,154,1)" fg:x="50051" fg:w="37"/><text x="45.9086%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (37 samples, 0.03%)</title><rect x="45.6586%" y="325" width="0.0338%" height="15" fill="rgb(225,15,46)" fg:x="50051" fg:w="37"/><text x="45.9086%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (560 samples, 0.51%)</title><rect x="45.6313%" y="389" width="0.5109%" height="15" fill="rgb(211,135,41)" fg:x="50021" fg:w="560"/><text x="45.8813%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (550 samples, 0.50%)</title><rect x="45.6404%" y="373" width="0.5017%" height="15" fill="rgb(208,54,0)" fg:x="50031" fg:w="550"/><text x="45.8904%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (539 samples, 0.49%)</title><rect x="45.6504%" y="357" width="0.4917%" height="15" fill="rgb(244,136,14)" fg:x="50042" fg:w="539"/><text x="45.9004%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (493 samples, 0.45%)</title><rect x="45.6924%" y="341" width="0.4497%" height="15" fill="rgb(241,56,14)" fg:x="50088" fg:w="493"/><text x="45.9424%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (493 samples, 0.45%)</title><rect x="45.6924%" y="325" width="0.4497%" height="15" fill="rgb(205,80,24)" fg:x="50088" fg:w="493"/><text x="45.9424%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (602 samples, 0.55%)</title><rect x="45.6048%" y="533" width="0.5492%" height="15" fill="rgb(220,57,4)" fg:x="49992" fg:w="602"/><text x="45.8548%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (602 samples, 0.55%)</title><rect x="45.6048%" y="517" width="0.5492%" height="15" fill="rgb(226,193,50)" fg:x="49992" fg:w="602"/><text x="45.8548%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (598 samples, 0.55%)</title><rect x="45.6085%" y="501" width="0.5455%" height="15" fill="rgb(231,168,22)" fg:x="49996" fg:w="598"/><text x="45.8585%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (598 samples, 0.55%)</title><rect x="45.6085%" y="485" width="0.5455%" height="15" fill="rgb(254,215,14)" fg:x="49996" fg:w="598"/><text x="45.8585%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (598 samples, 0.55%)</title><rect x="45.6085%" y="469" width="0.5455%" height="15" fill="rgb(211,115,16)" fg:x="49996" fg:w="598"/><text x="45.8585%" y="479.50"></text></g><g><title>alloc::alloc::alloc (590 samples, 0.54%)</title><rect x="45.6158%" y="453" width="0.5382%" height="15" fill="rgb(236,210,16)" fg:x="50004" fg:w="590"/><text x="45.8658%" y="463.50"></text></g><g><title>__rg_alloc (590 samples, 0.54%)</title><rect x="45.6158%" y="437" width="0.5382%" height="15" fill="rgb(221,94,12)" fg:x="50004" fg:w="590"/><text x="45.8658%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (590 samples, 0.54%)</title><rect x="45.6158%" y="421" width="0.5382%" height="15" fill="rgb(235,218,49)" fg:x="50004" fg:w="590"/><text x="45.8658%" y="431.50"></text></g><g><title>rust_alloc (581 samples, 0.53%)</title><rect x="45.6240%" y="405" width="0.5300%" height="15" fill="rgb(217,114,14)" fg:x="50013" fg:w="581"/><text x="45.8740%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="46.1421%" y="389" width="0.0119%" height="15" fill="rgb(216,145,22)" fg:x="50581" fg:w="13"/><text x="46.3921%" y="399.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (702 samples, 0.64%)</title><rect x="45.5546%" y="645" width="0.6404%" height="15" fill="rgb(217,112,39)" fg:x="49937" fg:w="702"/><text x="45.8046%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (682 samples, 0.62%)</title><rect x="45.5729%" y="629" width="0.6221%" height="15" fill="rgb(225,85,32)" fg:x="49957" fg:w="682"/><text x="45.8229%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (647 samples, 0.59%)</title><rect x="45.6048%" y="613" width="0.5902%" height="15" fill="rgb(245,209,47)" fg:x="49992" fg:w="647"/><text x="45.8548%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (647 samples, 0.59%)</title><rect x="45.6048%" y="597" width="0.5902%" height="15" fill="rgb(218,220,15)" fg:x="49992" fg:w="647"/><text x="45.8548%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (647 samples, 0.59%)</title><rect x="45.6048%" y="581" width="0.5902%" height="15" fill="rgb(222,202,31)" fg:x="49992" fg:w="647"/><text x="45.8548%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (647 samples, 0.59%)</title><rect x="45.6048%" y="565" width="0.5902%" height="15" fill="rgb(243,203,4)" fg:x="49992" fg:w="647"/><text x="45.8548%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (647 samples, 0.59%)</title><rect x="45.6048%" y="549" width="0.5902%" height="15" fill="rgb(237,92,17)" fg:x="49992" fg:w="647"/><text x="45.8548%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (45 samples, 0.04%)</title><rect x="46.1540%" y="533" width="0.0411%" height="15" fill="rgb(231,119,7)" fg:x="50594" fg:w="45"/><text x="46.4040%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45 samples, 0.04%)</title><rect x="46.1540%" y="517" width="0.0411%" height="15" fill="rgb(237,82,41)" fg:x="50594" fg:w="45"/><text x="46.4040%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (44 samples, 0.04%)</title><rect x="46.1549%" y="501" width="0.0401%" height="15" fill="rgb(226,81,48)" fg:x="50595" fg:w="44"/><text x="46.4049%" y="511.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,256 samples, 1.15%)</title><rect x="45.0502%" y="661" width="1.1458%" height="15" fill="rgb(234,70,51)" fg:x="49384" fg:w="1256"/><text x="45.3002%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (27 samples, 0.02%)</title><rect x="46.2799%" y="629" width="0.0246%" height="15" fill="rgb(251,86,4)" fg:x="50732" fg:w="27"/><text x="46.5299%" y="639.50"></text></g><g><title>rust_alloc (30 samples, 0.03%)</title><rect x="46.3310%" y="405" width="0.0274%" height="15" fill="rgb(244,144,28)" fg:x="50788" fg:w="30"/><text x="46.5810%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.02%)</title><rect x="46.3675%" y="389" width="0.0246%" height="15" fill="rgb(232,161,39)" fg:x="50828" fg:w="27"/><text x="46.6175%" y="399.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (25 samples, 0.02%)</title><rect x="46.3693%" y="373" width="0.0228%" height="15" fill="rgb(247,34,51)" fg:x="50830" fg:w="25"/><text x="46.6193%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (25 samples, 0.02%)</title><rect x="46.3921%" y="389" width="0.0228%" height="15" fill="rgb(225,132,2)" fg:x="50855" fg:w="25"/><text x="46.6421%" y="399.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (25 samples, 0.02%)</title><rect x="46.3921%" y="373" width="0.0228%" height="15" fill="rgb(209,159,44)" fg:x="50855" fg:w="25"/><text x="46.6421%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (232 samples, 0.21%)</title><rect x="46.3310%" y="437" width="0.2116%" height="15" fill="rgb(251,214,1)" fg:x="50788" fg:w="232"/><text x="46.5810%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (232 samples, 0.21%)</title><rect x="46.3310%" y="421" width="0.2116%" height="15" fill="rgb(247,84,47)" fg:x="50788" fg:w="232"/><text x="46.5810%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.18%)</title><rect x="46.3592%" y="405" width="0.1834%" height="15" fill="rgb(240,111,43)" fg:x="50819" fg:w="201"/><text x="46.6092%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (140 samples, 0.13%)</title><rect x="46.4149%" y="389" width="0.1277%" height="15" fill="rgb(215,214,35)" fg:x="50880" fg:w="140"/><text x="46.6649%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (140 samples, 0.13%)</title><rect x="46.4149%" y="373" width="0.1277%" height="15" fill="rgb(248,207,23)" fg:x="50880" fg:w="140"/><text x="46.6649%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (262 samples, 0.24%)</title><rect x="46.3045%" y="581" width="0.2390%" height="15" fill="rgb(214,186,4)" fg:x="50759" fg:w="262"/><text x="46.5545%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (262 samples, 0.24%)</title><rect x="46.3045%" y="565" width="0.2390%" height="15" fill="rgb(220,133,22)" fg:x="50759" fg:w="262"/><text x="46.5545%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (261 samples, 0.24%)</title><rect x="46.3054%" y="549" width="0.2381%" height="15" fill="rgb(239,134,19)" fg:x="50760" fg:w="261"/><text x="46.5554%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (261 samples, 0.24%)</title><rect x="46.3054%" y="533" width="0.2381%" height="15" fill="rgb(250,140,9)" fg:x="50760" fg:w="261"/><text x="46.5554%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (257 samples, 0.23%)</title><rect x="46.3091%" y="517" width="0.2344%" height="15" fill="rgb(225,59,14)" fg:x="50764" fg:w="257"/><text x="46.5591%" y="527.50"></text></g><g><title>alloc::alloc::alloc (257 samples, 0.23%)</title><rect x="46.3091%" y="501" width="0.2344%" height="15" fill="rgb(214,152,51)" fg:x="50764" fg:w="257"/><text x="46.5591%" y="511.50"></text></g><g><title>__rg_alloc (257 samples, 0.23%)</title><rect x="46.3091%" y="485" width="0.2344%" height="15" fill="rgb(251,227,43)" fg:x="50764" fg:w="257"/><text x="46.5591%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (251 samples, 0.23%)</title><rect x="46.3145%" y="469" width="0.2290%" height="15" fill="rgb(241,96,17)" fg:x="50770" fg:w="251"/><text x="46.5645%" y="479.50"></text></g><g><title>rust_alloc (246 samples, 0.22%)</title><rect x="46.3191%" y="453" width="0.2244%" height="15" fill="rgb(234,198,43)" fg:x="50775" fg:w="246"/><text x="46.5691%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (533 samples, 0.49%)</title><rect x="46.3045%" y="597" width="0.4862%" height="15" fill="rgb(220,108,29)" fg:x="50759" fg:w="533"/><text x="46.5545%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (271 samples, 0.25%)</title><rect x="46.5435%" y="581" width="0.2472%" height="15" fill="rgb(226,163,33)" fg:x="51021" fg:w="271"/><text x="46.7935%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (271 samples, 0.25%)</title><rect x="46.5435%" y="565" width="0.2472%" height="15" fill="rgb(205,194,45)" fg:x="51021" fg:w="271"/><text x="46.7935%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (260 samples, 0.24%)</title><rect x="46.5535%" y="549" width="0.2372%" height="15" fill="rgb(206,143,44)" fg:x="51032" fg:w="260"/><text x="46.8035%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (565 samples, 0.52%)</title><rect x="46.2799%" y="645" width="0.5154%" height="15" fill="rgb(236,136,36)" fg:x="50732" fg:w="565"/><text x="46.5299%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (538 samples, 0.49%)</title><rect x="46.3045%" y="629" width="0.4908%" height="15" fill="rgb(249,172,42)" fg:x="50759" fg:w="538"/><text x="46.5545%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (538 samples, 0.49%)</title><rect x="46.3045%" y="613" width="0.4908%" height="15" fill="rgb(216,139,23)" fg:x="50759" fg:w="538"/><text x="46.5545%" y="623.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (2,780 samples, 2.54%)</title><rect x="44.2675%" y="677" width="2.5360%" height="15" fill="rgb(207,166,20)" fg:x="48526" fg:w="2780"/><text x="44.5175%" y="687.50">&lt;t..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (664 samples, 0.61%)</title><rect x="46.1978%" y="661" width="0.6057%" height="15" fill="rgb(210,209,22)" fg:x="50642" fg:w="664"/><text x="46.4478%" y="671.50"></text></g><g><title>async_ffi::FfiContext::with_context (3,350 samples, 3.06%)</title><rect x="43.7511%" y="725" width="3.0560%" height="15" fill="rgb(232,118,20)" fg:x="47960" fg:w="3350"/><text x="44.0011%" y="735.50">asy..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (3,341 samples, 3.05%)</title><rect x="43.7594%" y="709" width="3.0478%" height="15" fill="rgb(238,113,42)" fg:x="47969" fg:w="3341"/><text x="44.0094%" y="719.50">asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,341 samples, 3.05%)</title><rect x="43.7594%" y="693" width="3.0478%" height="15" fill="rgb(231,42,5)" fg:x="47969" fg:w="3341"/><text x="44.0094%" y="703.50">&lt;co..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,359 samples, 3.06%)</title><rect x="43.7493%" y="773" width="3.0642%" height="15" fill="rgb(243,166,24)" fg:x="47958" fg:w="3359"/><text x="43.9993%" y="783.50">&lt;co..</text></g><g><title>core::ops::function::FnOnce::call_once (3,359 samples, 3.06%)</title><rect x="43.7493%" y="757" width="3.0642%" height="15" fill="rgb(237,226,12)" fg:x="47958" fg:w="3359"/><text x="43.9993%" y="767.50">cor..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (3,359 samples, 3.06%)</title><rect x="43.7493%" y="741" width="3.0642%" height="15" fill="rgb(229,133,24)" fg:x="47958" fg:w="3359"/><text x="43.9993%" y="751.50">asy..</text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (3,856 samples, 3.52%)</title><rect x="43.5340%" y="917" width="3.5176%" height="15" fill="rgb(238,33,43)" fg:x="47722" fg:w="3856"/><text x="43.7840%" y="927.50">tre..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,856 samples, 3.52%)</title><rect x="43.5340%" y="901" width="3.5176%" height="15" fill="rgb(227,59,38)" fg:x="47722" fg:w="3856"/><text x="43.7840%" y="911.50">&lt;as..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,856 samples, 3.52%)</title><rect x="43.5340%" y="885" width="3.5176%" height="15" fill="rgb(230,97,0)" fg:x="47722" fg:w="3856"/><text x="43.7840%" y="895.50">&lt;as..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (3,856 samples, 3.52%)</title><rect x="43.5340%" y="869" width="3.5176%" height="15" fill="rgb(250,173,50)" fg:x="47722" fg:w="3856"/><text x="43.7840%" y="879.50">&lt;co..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,856 samples, 3.52%)</title><rect x="43.5340%" y="853" width="3.5176%" height="15" fill="rgb(240,15,50)" fg:x="47722" fg:w="3856"/><text x="43.7840%" y="863.50">&lt;as..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (3,856 samples, 3.52%)</title><rect x="43.5340%" y="837" width="3.5176%" height="15" fill="rgb(221,93,22)" fg:x="47722" fg:w="3856"/><text x="43.7840%" y="847.50">asy..</text></g><g><title>std::panic::catch_unwind (3,620 samples, 3.30%)</title><rect x="43.7493%" y="821" width="3.3023%" height="15" fill="rgb(245,180,53)" fg:x="47958" fg:w="3620"/><text x="43.9993%" y="831.50">std..</text></g><g><title>std::panicking::try (3,620 samples, 3.30%)</title><rect x="43.7493%" y="805" width="3.3023%" height="15" fill="rgb(231,88,51)" fg:x="47958" fg:w="3620"/><text x="43.9993%" y="815.50">std..</text></g><g><title>std::panicking::try::do_call (3,620 samples, 3.30%)</title><rect x="43.7493%" y="789" width="3.3023%" height="15" fill="rgb(240,58,21)" fg:x="47958" fg:w="3620"/><text x="43.9993%" y="799.50">std..</text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (261 samples, 0.24%)</title><rect x="46.8135%" y="773" width="0.2381%" height="15" fill="rgb(237,21,10)" fg:x="51317" fg:w="261"/><text x="47.0635%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (87 samples, 0.08%)</title><rect x="46.9723%" y="757" width="0.0794%" height="15" fill="rgb(218,43,11)" fg:x="51491" fg:w="87"/><text x="47.2223%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (12 samples, 0.01%)</title><rect x="47.0644%" y="869" width="0.0109%" height="15" fill="rgb(218,221,29)" fg:x="51592" fg:w="12"/><text x="47.3144%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (12 samples, 0.01%)</title><rect x="47.0644%" y="853" width="0.0109%" height="15" fill="rgb(214,118,42)" fg:x="51592" fg:w="12"/><text x="47.3144%" y="863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (21 samples, 0.02%)</title><rect x="47.0909%" y="821" width="0.0192%" height="15" fill="rgb(251,200,26)" fg:x="51621" fg:w="21"/><text x="47.3409%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (3,952 samples, 3.61%)</title><rect x="43.5340%" y="949" width="3.6052%" height="15" fill="rgb(237,101,39)" fg:x="47722" fg:w="3952"/><text x="43.7840%" y="959.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,952 samples, 3.61%)</title><rect x="43.5340%" y="933" width="3.6052%" height="15" fill="rgb(251,117,11)" fg:x="47722" fg:w="3952"/><text x="43.7840%" y="943.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (96 samples, 0.09%)</title><rect x="47.0516%" y="917" width="0.0876%" height="15" fill="rgb(216,223,23)" fg:x="51578" fg:w="96"/><text x="47.3016%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (96 samples, 0.09%)</title><rect x="47.0516%" y="901" width="0.0876%" height="15" fill="rgb(251,54,12)" fg:x="51578" fg:w="96"/><text x="47.3016%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (82 samples, 0.07%)</title><rect x="47.0644%" y="885" width="0.0748%" height="15" fill="rgb(254,176,54)" fg:x="51592" fg:w="82"/><text x="47.3144%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (70 samples, 0.06%)</title><rect x="47.0754%" y="869" width="0.0639%" height="15" fill="rgb(210,32,8)" fg:x="51604" fg:w="70"/><text x="47.3254%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (70 samples, 0.06%)</title><rect x="47.0754%" y="853" width="0.0639%" height="15" fill="rgb(235,52,38)" fg:x="51604" fg:w="70"/><text x="47.3254%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (70 samples, 0.06%)</title><rect x="47.0754%" y="837" width="0.0639%" height="15" fill="rgb(231,4,44)" fg:x="51604" fg:w="70"/><text x="47.3254%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (32 samples, 0.03%)</title><rect x="47.1100%" y="821" width="0.0292%" height="15" fill="rgb(249,2,32)" fg:x="51642" fg:w="32"/><text x="47.3600%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="47.1657%" y="917" width="0.0182%" height="15" fill="rgb(224,65,26)" fg:x="51703" fg:w="20"/><text x="47.4157%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (188 samples, 0.17%)</title><rect x="47.1839%" y="917" width="0.1715%" height="15" fill="rgb(250,73,40)" fg:x="51723" fg:w="188"/><text x="47.4339%" y="927.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (18 samples, 0.02%)</title><rect x="47.4649%" y="901" width="0.0164%" height="15" fill="rgb(253,177,16)" fg:x="52031" fg:w="18"/><text x="47.7149%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="47.4813%" y="885" width="0.0265%" height="15" fill="rgb(217,32,34)" fg:x="52049" fg:w="29"/><text x="47.7313%" y="895.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (210 samples, 0.19%)</title><rect x="47.4813%" y="901" width="0.1916%" height="15" fill="rgb(212,7,10)" fg:x="52049" fg:w="210"/><text x="47.7313%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (181 samples, 0.17%)</title><rect x="47.5078%" y="885" width="0.1651%" height="15" fill="rgb(245,89,8)" fg:x="52078" fg:w="181"/><text x="47.7578%" y="895.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (175 samples, 0.16%)</title><rect x="47.5132%" y="869" width="0.1596%" height="15" fill="rgb(237,16,53)" fg:x="52084" fg:w="175"/><text x="47.7632%" y="879.50"></text></g><g><title>core::ptr::read (175 samples, 0.16%)</title><rect x="47.5132%" y="853" width="0.1596%" height="15" fill="rgb(250,204,30)" fg:x="52084" fg:w="175"/><text x="47.7632%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (175 samples, 0.16%)</title><rect x="47.5132%" y="837" width="0.1596%" height="15" fill="rgb(208,77,27)" fg:x="52084" fg:w="175"/><text x="47.7632%" y="847.50"></text></g><g><title>rust_alloc (23 samples, 0.02%)</title><rect x="47.7021%" y="597" width="0.0210%" height="15" fill="rgb(250,204,28)" fg:x="52291" fg:w="23"/><text x="47.9521%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (23 samples, 0.02%)</title><rect x="47.7376%" y="517" width="0.0210%" height="15" fill="rgb(244,63,21)" fg:x="52330" fg:w="23"/><text x="47.9876%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (23 samples, 0.02%)</title><rect x="47.7376%" y="501" width="0.0210%" height="15" fill="rgb(236,85,44)" fg:x="52330" fg:w="23"/><text x="47.9876%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (20 samples, 0.02%)</title><rect x="47.7404%" y="485" width="0.0182%" height="15" fill="rgb(215,98,4)" fg:x="52333" fg:w="20"/><text x="47.9904%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (25 samples, 0.02%)</title><rect x="47.7376%" y="533" width="0.0228%" height="15" fill="rgb(235,38,11)" fg:x="52330" fg:w="25"/><text x="47.9876%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (35 samples, 0.03%)</title><rect x="47.7322%" y="549" width="0.0319%" height="15" fill="rgb(254,186,25)" fg:x="52324" fg:w="35"/><text x="47.9822%" y="559.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (22 samples, 0.02%)</title><rect x="47.7723%" y="533" width="0.0201%" height="15" fill="rgb(225,55,31)" fg:x="52368" fg:w="22"/><text x="48.0223%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (176 samples, 0.16%)</title><rect x="47.7322%" y="581" width="0.1606%" height="15" fill="rgb(211,15,21)" fg:x="52324" fg:w="176"/><text x="47.9822%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (176 samples, 0.16%)</title><rect x="47.7322%" y="565" width="0.1606%" height="15" fill="rgb(215,187,41)" fg:x="52324" fg:w="176"/><text x="47.9822%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (141 samples, 0.13%)</title><rect x="47.7641%" y="549" width="0.1286%" height="15" fill="rgb(248,69,32)" fg:x="52359" fg:w="141"/><text x="48.0141%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (110 samples, 0.10%)</title><rect x="47.7924%" y="533" width="0.1003%" height="15" fill="rgb(252,102,52)" fg:x="52390" fg:w="110"/><text x="48.0424%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (110 samples, 0.10%)</title><rect x="47.7924%" y="517" width="0.1003%" height="15" fill="rgb(253,140,32)" fg:x="52390" fg:w="110"/><text x="48.0424%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (110 samples, 0.10%)</title><rect x="47.7924%" y="501" width="0.1003%" height="15" fill="rgb(216,56,42)" fg:x="52390" fg:w="110"/><text x="48.0424%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (62 samples, 0.06%)</title><rect x="47.8955%" y="581" width="0.0566%" height="15" fill="rgb(216,184,14)" fg:x="52503" fg:w="62"/><text x="48.1455%" y="591.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (62 samples, 0.06%)</title><rect x="47.8955%" y="565" width="0.0566%" height="15" fill="rgb(237,187,27)" fg:x="52503" fg:w="62"/><text x="48.1455%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (771 samples, 0.70%)</title><rect x="47.7021%" y="629" width="0.7033%" height="15" fill="rgb(219,65,3)" fg:x="52291" fg:w="771"/><text x="47.9521%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (771 samples, 0.70%)</title><rect x="47.7021%" y="613" width="0.7033%" height="15" fill="rgb(245,83,25)" fg:x="52291" fg:w="771"/><text x="47.9521%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (742 samples, 0.68%)</title><rect x="47.7285%" y="597" width="0.6769%" height="15" fill="rgb(214,205,45)" fg:x="52320" fg:w="742"/><text x="47.9785%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (497 samples, 0.45%)</title><rect x="47.9520%" y="581" width="0.4534%" height="15" fill="rgb(241,20,18)" fg:x="52565" fg:w="497"/><text x="48.2020%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (497 samples, 0.45%)</title><rect x="47.9520%" y="565" width="0.4534%" height="15" fill="rgb(232,163,23)" fg:x="52565" fg:w="497"/><text x="48.2020%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (813 samples, 0.74%)</title><rect x="47.6783%" y="773" width="0.7417%" height="15" fill="rgb(214,5,46)" fg:x="52265" fg:w="813"/><text x="47.9283%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (813 samples, 0.74%)</title><rect x="47.6783%" y="757" width="0.7417%" height="15" fill="rgb(229,78,17)" fg:x="52265" fg:w="813"/><text x="47.9283%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (808 samples, 0.74%)</title><rect x="47.6829%" y="741" width="0.7371%" height="15" fill="rgb(248,89,10)" fg:x="52270" fg:w="808"/><text x="47.9329%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (808 samples, 0.74%)</title><rect x="47.6829%" y="725" width="0.7371%" height="15" fill="rgb(248,54,15)" fg:x="52270" fg:w="808"/><text x="47.9329%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (808 samples, 0.74%)</title><rect x="47.6829%" y="709" width="0.7371%" height="15" fill="rgb(223,116,6)" fg:x="52270" fg:w="808"/><text x="47.9329%" y="719.50"></text></g><g><title>alloc::alloc::alloc (797 samples, 0.73%)</title><rect x="47.6929%" y="693" width="0.7271%" height="15" fill="rgb(205,125,38)" fg:x="52281" fg:w="797"/><text x="47.9429%" y="703.50"></text></g><g><title>__rg_alloc (797 samples, 0.73%)</title><rect x="47.6929%" y="677" width="0.7271%" height="15" fill="rgb(251,78,38)" fg:x="52281" fg:w="797"/><text x="47.9429%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (797 samples, 0.73%)</title><rect x="47.6929%" y="661" width="0.7271%" height="15" fill="rgb(253,78,28)" fg:x="52281" fg:w="797"/><text x="47.9429%" y="671.50"></text></g><g><title>rust_alloc (794 samples, 0.72%)</title><rect x="47.6957%" y="645" width="0.7243%" height="15" fill="rgb(209,120,3)" fg:x="52284" fg:w="794"/><text x="47.9457%" y="655.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.01%)</title><rect x="48.4054%" y="629" width="0.0146%" height="15" fill="rgb(238,229,9)" fg:x="53062" fg:w="16"/><text x="48.6554%" y="639.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (854 samples, 0.78%)</title><rect x="47.6783%" y="901" width="0.7791%" height="15" fill="rgb(253,159,18)" fg:x="52265" fg:w="854"/><text x="47.9283%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (854 samples, 0.78%)</title><rect x="47.6783%" y="885" width="0.7791%" height="15" fill="rgb(244,42,34)" fg:x="52265" fg:w="854"/><text x="47.9283%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (854 samples, 0.78%)</title><rect x="47.6783%" y="869" width="0.7791%" height="15" fill="rgb(224,8,7)" fg:x="52265" fg:w="854"/><text x="47.9283%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (854 samples, 0.78%)</title><rect x="47.6783%" y="853" width="0.7791%" height="15" fill="rgb(210,201,45)" fg:x="52265" fg:w="854"/><text x="47.9283%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (854 samples, 0.78%)</title><rect x="47.6783%" y="837" width="0.7791%" height="15" fill="rgb(252,185,21)" fg:x="52265" fg:w="854"/><text x="47.9283%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (854 samples, 0.78%)</title><rect x="47.6783%" y="821" width="0.7791%" height="15" fill="rgb(223,131,1)" fg:x="52265" fg:w="854"/><text x="47.9283%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (854 samples, 0.78%)</title><rect x="47.6783%" y="805" width="0.7791%" height="15" fill="rgb(245,141,16)" fg:x="52265" fg:w="854"/><text x="47.9283%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (854 samples, 0.78%)</title><rect x="47.6783%" y="789" width="0.7791%" height="15" fill="rgb(229,55,45)" fg:x="52265" fg:w="854"/><text x="47.9283%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (41 samples, 0.04%)</title><rect x="48.4200%" y="773" width="0.0374%" height="15" fill="rgb(208,92,15)" fg:x="53078" fg:w="41"/><text x="48.6700%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.04%)</title><rect x="48.4200%" y="757" width="0.0374%" height="15" fill="rgb(234,185,47)" fg:x="53078" fg:w="41"/><text x="48.6700%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (29 samples, 0.03%)</title><rect x="48.4309%" y="741" width="0.0265%" height="15" fill="rgb(253,104,50)" fg:x="53090" fg:w="29"/><text x="48.6809%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,006 samples, 0.92%)</title><rect x="48.4574%" y="901" width="0.9177%" height="15" fill="rgb(205,70,7)" fg:x="53119" fg:w="1006"/><text x="48.7074%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (19 samples, 0.02%)</title><rect x="49.3751%" y="901" width="0.0173%" height="15" fill="rgb(240,178,43)" fg:x="54125" fg:w="19"/><text x="49.6251%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (11 samples, 0.01%)</title><rect x="49.3824%" y="885" width="0.0100%" height="15" fill="rgb(214,112,2)" fg:x="54133" fg:w="11"/><text x="49.6324%" y="895.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="49.3824%" y="869" width="0.0100%" height="15" fill="rgb(206,46,17)" fg:x="54133" fg:w="11"/><text x="49.6324%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (11 samples, 0.01%)</title><rect x="49.3824%" y="853" width="0.0100%" height="15" fill="rgb(225,220,16)" fg:x="54133" fg:w="11"/><text x="49.6324%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (11 samples, 0.01%)</title><rect x="49.3824%" y="837" width="0.0100%" height="15" fill="rgb(238,65,40)" fg:x="54133" fg:w="11"/><text x="49.6324%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="49.4052%" y="901" width="0.0100%" height="15" fill="rgb(230,151,21)" fg:x="54158" fg:w="11"/><text x="49.6552%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (17 samples, 0.02%)</title><rect x="49.4153%" y="901" width="0.0155%" height="15" fill="rgb(218,58,49)" fg:x="54169" fg:w="17"/><text x="49.6653%" y="911.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (16 samples, 0.01%)</title><rect x="49.4463%" y="853" width="0.0146%" height="15" fill="rgb(219,179,14)" fg:x="54203" fg:w="16"/><text x="49.6963%" y="863.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (217 samples, 0.20%)</title><rect x="49.4308%" y="901" width="0.1980%" height="15" fill="rgb(223,72,1)" fg:x="54186" fg:w="217"/><text x="49.6808%" y="911.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (201 samples, 0.18%)</title><rect x="49.4454%" y="885" width="0.1834%" height="15" fill="rgb(238,126,10)" fg:x="54202" fg:w="201"/><text x="49.6954%" y="895.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (200 samples, 0.18%)</title><rect x="49.4463%" y="869" width="0.1824%" height="15" fill="rgb(224,206,38)" fg:x="54203" fg:w="200"/><text x="49.6963%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (184 samples, 0.17%)</title><rect x="49.4609%" y="853" width="0.1679%" height="15" fill="rgb(212,201,54)" fg:x="54219" fg:w="184"/><text x="49.7109%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (184 samples, 0.17%)</title><rect x="49.4609%" y="837" width="0.1679%" height="15" fill="rgb(218,154,48)" fg:x="54219" fg:w="184"/><text x="49.7109%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (184 samples, 0.17%)</title><rect x="49.4609%" y="821" width="0.1679%" height="15" fill="rgb(232,93,24)" fg:x="54219" fg:w="184"/><text x="49.7109%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (184 samples, 0.17%)</title><rect x="49.4609%" y="805" width="0.1679%" height="15" fill="rgb(245,30,21)" fg:x="54219" fg:w="184"/><text x="49.7109%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (184 samples, 0.17%)</title><rect x="49.4609%" y="789" width="0.1679%" height="15" fill="rgb(242,148,29)" fg:x="54219" fg:w="184"/><text x="49.7109%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (114 samples, 0.10%)</title><rect x="49.5247%" y="773" width="0.1040%" height="15" fill="rgb(244,153,54)" fg:x="54289" fg:w="114"/><text x="49.7747%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,603 samples, 7.85%)</title><rect x="41.8117%" y="1125" width="7.8480%" height="15" fill="rgb(252,87,22)" fg:x="45834" fg:w="8603"/><text x="42.0617%" y="1135.50">async_task:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,603 samples, 7.85%)</title><rect x="41.8117%" y="1109" width="7.8480%" height="15" fill="rgb(210,51,29)" fg:x="45834" fg:w="8603"/><text x="42.0617%" y="1119.50">&lt;core::pin:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,603 samples, 7.85%)</title><rect x="41.8117%" y="1093" width="7.8480%" height="15" fill="rgb(242,136,47)" fg:x="45834" fg:w="8603"/><text x="42.0617%" y="1103.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,603 samples, 7.85%)</title><rect x="41.8117%" y="1077" width="7.8480%" height="15" fill="rgb(238,68,4)" fg:x="45834" fg:w="8603"/><text x="42.0617%" y="1087.50">async_execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,603 samples, 7.85%)</title><rect x="41.8117%" y="1061" width="7.8480%" height="15" fill="rgb(242,161,30)" fg:x="45834" fg:w="8603"/><text x="42.0617%" y="1071.50">&lt;async_std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,603 samples, 7.85%)</title><rect x="41.8117%" y="1045" width="7.8480%" height="15" fill="rgb(218,58,44)" fg:x="45834" fg:w="8603"/><text x="42.0617%" y="1055.50">async_std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,603 samples, 7.85%)</title><rect x="41.8117%" y="1029" width="7.8480%" height="15" fill="rgb(252,125,32)" fg:x="45834" fg:w="8603"/><text x="42.0617%" y="1039.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,603 samples, 7.85%)</title><rect x="41.8117%" y="1013" width="7.8480%" height="15" fill="rgb(219,178,0)" fg:x="45834" fg:w="8603"/><text x="42.0617%" y="1023.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,603 samples, 7.85%)</title><rect x="41.8117%" y="997" width="7.8480%" height="15" fill="rgb(213,152,7)" fg:x="45834" fg:w="8603"/><text x="42.0617%" y="1007.50">async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,603 samples, 7.85%)</title><rect x="41.8117%" y="981" width="7.8480%" height="15" fill="rgb(249,109,34)" fg:x="45834" fg:w="8603"/><text x="42.0617%" y="991.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,603 samples, 7.85%)</title><rect x="41.8117%" y="965" width="7.8480%" height="15" fill="rgb(232,96,21)" fg:x="45834" fg:w="8603"/><text x="42.0617%" y="975.50">&lt;core::futu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,763 samples, 2.52%)</title><rect x="47.1392%" y="949" width="2.5205%" height="15" fill="rgb(228,27,39)" fg:x="51674" fg:w="2763"/><text x="47.3892%" y="959.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,763 samples, 2.52%)</title><rect x="47.1392%" y="933" width="2.5205%" height="15" fill="rgb(211,182,52)" fg:x="51674" fg:w="2763"/><text x="47.3892%" y="943.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (2,526 samples, 2.30%)</title><rect x="47.3554%" y="917" width="2.3043%" height="15" fill="rgb(234,178,38)" fg:x="51911" fg:w="2526"/><text x="47.6054%" y="927.50">t..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (34 samples, 0.03%)</title><rect x="49.6287%" y="901" width="0.0310%" height="15" fill="rgb(221,111,3)" fg:x="54403" fg:w="34"/><text x="49.8787%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (34 samples, 0.03%)</title><rect x="49.6287%" y="885" width="0.0310%" height="15" fill="rgb(228,175,21)" fg:x="54403" fg:w="34"/><text x="49.8787%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (34 samples, 0.03%)</title><rect x="49.6287%" y="869" width="0.0310%" height="15" fill="rgb(228,174,43)" fg:x="54403" fg:w="34"/><text x="49.8787%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (21 samples, 0.02%)</title><rect x="49.6406%" y="853" width="0.0192%" height="15" fill="rgb(211,191,0)" fg:x="54416" fg:w="21"/><text x="49.8906%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (11 samples, 0.01%)</title><rect x="49.6771%" y="1125" width="0.0100%" height="15" fill="rgb(253,117,3)" fg:x="54456" fg:w="11"/><text x="49.9271%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="49.6871%" y="1125" width="0.0119%" height="15" fill="rgb(241,127,19)" fg:x="54467" fg:w="13"/><text x="49.9371%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="49.6990%" y="1125" width="0.0155%" height="15" fill="rgb(218,103,12)" fg:x="54480" fg:w="17"/><text x="49.9490%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="49.7145%" y="1125" width="0.0155%" height="15" fill="rgb(236,214,43)" fg:x="54497" fg:w="17"/><text x="49.9645%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="49.7336%" y="1125" width="0.0164%" height="15" fill="rgb(244,144,19)" fg:x="54518" fg:w="18"/><text x="49.9836%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (26 samples, 0.02%)</title><rect x="49.7500%" y="1125" width="0.0237%" height="15" fill="rgb(246,188,10)" fg:x="54536" fg:w="26"/><text x="50.0000%" y="1135.50"></text></g><g><title>event_listener::Event::notify (47 samples, 0.04%)</title><rect x="49.7957%" y="1125" width="0.0429%" height="15" fill="rgb(212,193,33)" fg:x="54586" fg:w="47"/><text x="50.0457%" y="1135.50"></text></g><g><title>event_listener::full_fence (26 samples, 0.02%)</title><rect x="49.8148%" y="1109" width="0.0237%" height="15" fill="rgb(241,51,29)" fg:x="54607" fg:w="26"/><text x="50.0648%" y="1119.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (15 samples, 0.01%)</title><rect x="49.8385%" y="1125" width="0.0137%" height="15" fill="rgb(211,58,19)" fg:x="54633" fg:w="15"/><text x="50.0885%" y="1135.50"></text></g><g><title>polling::epoll::Poller::wait (14 samples, 0.01%)</title><rect x="49.8632%" y="1125" width="0.0128%" height="15" fill="rgb(229,111,26)" fg:x="54660" fg:w="14"/><text x="50.1132%" y="1135.50"></text></g><g><title>rust_alloc (65 samples, 0.06%)</title><rect x="49.8759%" y="1125" width="0.0593%" height="15" fill="rgb(213,115,40)" fg:x="54674" fg:w="65"/><text x="50.1259%" y="1135.50"></text></g><g><title>rust_dealloc (28 samples, 0.03%)</title><rect x="49.9352%" y="1125" width="0.0255%" height="15" fill="rgb(209,56,44)" fg:x="54739" fg:w="28"/><text x="50.1852%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (27 samples, 0.02%)</title><rect x="49.9361%" y="1109" width="0.0246%" height="15" fill="rgb(230,108,32)" fg:x="54740" fg:w="27"/><text x="50.1861%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (27 samples, 0.02%)</title><rect x="49.9361%" y="1093" width="0.0246%" height="15" fill="rgb(216,165,31)" fg:x="54740" fg:w="27"/><text x="50.1861%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (27 samples, 0.02%)</title><rect x="49.9361%" y="1077" width="0.0246%" height="15" fill="rgb(218,122,21)" fg:x="54740" fg:w="27"/><text x="50.1861%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (27 samples, 0.02%)</title><rect x="49.9361%" y="1061" width="0.0246%" height="15" fill="rgb(223,224,47)" fg:x="54740" fg:w="27"/><text x="50.1861%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (27 samples, 0.02%)</title><rect x="49.9361%" y="1045" width="0.0246%" height="15" fill="rgb(238,102,44)" fg:x="54740" fg:w="27"/><text x="50.1861%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (27 samples, 0.02%)</title><rect x="49.9361%" y="1029" width="0.0246%" height="15" fill="rgb(236,46,40)" fg:x="54740" fg:w="27"/><text x="50.1861%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (27 samples, 0.02%)</title><rect x="49.9361%" y="1013" width="0.0246%" height="15" fill="rgb(247,202,50)" fg:x="54740" fg:w="27"/><text x="50.1861%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (27 samples, 0.02%)</title><rect x="49.9361%" y="997" width="0.0246%" height="15" fill="rgb(209,99,20)" fg:x="54740" fg:w="27"/><text x="50.1861%" y="1007.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (40 samples, 0.04%)</title><rect x="49.9836%" y="1125" width="0.0365%" height="15" fill="rgb(252,27,34)" fg:x="54792" fg:w="40"/><text x="50.2336%" y="1135.50"></text></g><g><title>futex_wait_queue (24 samples, 0.02%)</title><rect x="50.1533%" y="757" width="0.0219%" height="15" fill="rgb(215,206,23)" fg:x="54978" fg:w="24"/><text x="50.4033%" y="767.50"></text></g><g><title>schedule (24 samples, 0.02%)</title><rect x="50.1533%" y="741" width="0.0219%" height="15" fill="rgb(212,135,36)" fg:x="54978" fg:w="24"/><text x="50.4033%" y="751.50"></text></g><g><title>__schedule (24 samples, 0.02%)</title><rect x="50.1533%" y="725" width="0.0219%" height="15" fill="rgb(240,189,1)" fg:x="54978" fg:w="24"/><text x="50.4033%" y="735.50"></text></g><g><title>__x64_sys_futex (26 samples, 0.02%)</title><rect x="50.1523%" y="805" width="0.0237%" height="15" fill="rgb(242,56,20)" fg:x="54977" fg:w="26"/><text x="50.4023%" y="815.50"></text></g><g><title>do_futex (26 samples, 0.02%)</title><rect x="50.1523%" y="789" width="0.0237%" height="15" fill="rgb(247,132,33)" fg:x="54977" fg:w="26"/><text x="50.4023%" y="799.50"></text></g><g><title>futex_wait (25 samples, 0.02%)</title><rect x="50.1533%" y="773" width="0.0228%" height="15" fill="rgb(208,149,11)" fg:x="54978" fg:w="25"/><text x="50.4033%" y="783.50"></text></g><g><title>event_listener::Inner::lock (121 samples, 0.11%)</title><rect x="50.0739%" y="933" width="0.1104%" height="15" fill="rgb(211,33,11)" fg:x="54891" fg:w="121"/><text x="50.3239%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (121 samples, 0.11%)</title><rect x="50.0739%" y="917" width="0.1104%" height="15" fill="rgb(221,29,38)" fg:x="54891" fg:w="121"/><text x="50.3239%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (121 samples, 0.11%)</title><rect x="50.0739%" y="901" width="0.1104%" height="15" fill="rgb(206,182,49)" fg:x="54891" fg:w="121"/><text x="50.3239%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (95 samples, 0.09%)</title><rect x="50.0976%" y="885" width="0.0867%" height="15" fill="rgb(216,140,1)" fg:x="54917" fg:w="95"/><text x="50.3476%" y="895.50"></text></g><g><title>___pthread_mutex_lock (95 samples, 0.09%)</title><rect x="50.0976%" y="869" width="0.0867%" height="15" fill="rgb(232,57,40)" fg:x="54917" fg:w="95"/><text x="50.3476%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (40 samples, 0.04%)</title><rect x="50.1478%" y="853" width="0.0365%" height="15" fill="rgb(224,186,18)" fg:x="54972" fg:w="40"/><text x="50.3978%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (35 samples, 0.03%)</title><rect x="50.1523%" y="837" width="0.0319%" height="15" fill="rgb(215,121,11)" fg:x="54977" fg:w="35"/><text x="50.4023%" y="847.50"></text></g><g><title>do_syscall_64 (35 samples, 0.03%)</title><rect x="50.1523%" y="821" width="0.0319%" height="15" fill="rgb(245,147,10)" fg:x="54977" fg:w="35"/><text x="50.4023%" y="831.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (154 samples, 0.14%)</title><rect x="50.0502%" y="949" width="0.1405%" height="15" fill="rgb(238,153,13)" fg:x="54865" fg:w="154"/><text x="50.3002%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (827 samples, 0.75%)</title><rect x="50.1907%" y="949" width="0.7544%" height="15" fill="rgb(233,108,0)" fg:x="55019" fg:w="827"/><text x="50.4407%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (607 samples, 0.55%)</title><rect x="50.9752%" y="933" width="0.5537%" height="15" fill="rgb(212,157,17)" fg:x="55879" fg:w="607"/><text x="51.2252%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (357 samples, 0.33%)</title><rect x="51.6712%" y="901" width="0.3257%" height="15" fill="rgb(225,213,38)" fg:x="56642" fg:w="357"/><text x="51.9212%" y="911.50"></text></g><g><title>concurrent_queue::full_fence (25 samples, 0.02%)</title><rect x="51.9996%" y="901" width="0.0228%" height="15" fill="rgb(248,16,11)" fg:x="57002" fg:w="25"/><text x="52.2496%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (22 samples, 0.02%)</title><rect x="52.0024%" y="885" width="0.0201%" height="15" fill="rgb(241,33,4)" fg:x="57005" fg:w="22"/><text x="52.2524%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (22 samples, 0.02%)</title><rect x="52.0024%" y="869" width="0.0201%" height="15" fill="rgb(222,26,43)" fg:x="57005" fg:w="22"/><text x="52.2524%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="52.0024%" y="853" width="0.0201%" height="15" fill="rgb(243,29,36)" fg:x="57005" fg:w="22"/><text x="52.2524%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (461 samples, 0.42%)</title><rect x="52.0252%" y="901" width="0.4205%" height="15" fill="rgb(241,9,27)" fg:x="57030" fg:w="461"/><text x="52.2752%" y="911.50"></text></g><g><title>core::ptr::read (461 samples, 0.42%)</title><rect x="52.0252%" y="885" width="0.4205%" height="15" fill="rgb(205,117,26)" fg:x="57030" fg:w="461"/><text x="52.2752%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (461 samples, 0.42%)</title><rect x="52.0252%" y="869" width="0.4205%" height="15" fill="rgb(209,80,39)" fg:x="57030" fg:w="461"/><text x="52.2752%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (468 samples, 0.43%)</title><rect x="52.4457%" y="901" width="0.4269%" height="15" fill="rgb(239,155,6)" fg:x="57491" fg:w="468"/><text x="52.6957%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (468 samples, 0.43%)</title><rect x="52.4457%" y="885" width="0.4269%" height="15" fill="rgb(212,104,12)" fg:x="57491" fg:w="468"/><text x="52.6957%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,677 samples, 1.53%)</title><rect x="51.5289%" y="933" width="1.5298%" height="15" fill="rgb(234,204,3)" fg:x="56486" fg:w="1677"/><text x="51.7789%" y="943.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,656 samples, 1.51%)</title><rect x="51.5481%" y="917" width="1.5107%" height="15" fill="rgb(251,218,7)" fg:x="56507" fg:w="1656"/><text x="51.7981%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (204 samples, 0.19%)</title><rect x="52.8727%" y="901" width="0.1861%" height="15" fill="rgb(221,81,32)" fg:x="57959" fg:w="204"/><text x="53.1227%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (203 samples, 0.19%)</title><rect x="52.8736%" y="885" width="0.1852%" height="15" fill="rgb(214,152,26)" fg:x="57960" fg:w="203"/><text x="53.1236%" y="895.50"></text></g><g><title>futex_wake_mark (13 samples, 0.01%)</title><rect x="53.1235%" y="725" width="0.0119%" height="15" fill="rgb(223,22,3)" fg:x="58234" fg:w="13"/><text x="53.3735%" y="735.50"></text></g><g><title>__x2apic_send_IPI_dest (12 samples, 0.01%)</title><rect x="53.1783%" y="677" width="0.0109%" height="15" fill="rgb(207,174,7)" fg:x="58294" fg:w="12"/><text x="53.4283%" y="687.50"></text></g><g><title>ttwu_queue_wakelist (53 samples, 0.05%)</title><rect x="53.1637%" y="693" width="0.0483%" height="15" fill="rgb(224,19,52)" fg:x="58278" fg:w="53"/><text x="53.4137%" y="703.50"></text></g><g><title>x2apic_send_IPI (15 samples, 0.01%)</title><rect x="53.1983%" y="677" width="0.0137%" height="15" fill="rgb(228,24,14)" fg:x="58316" fg:w="15"/><text x="53.4483%" y="687.50"></text></g><g><title>__x64_sys_futex (126 samples, 0.11%)</title><rect x="53.0980%" y="773" width="0.1149%" height="15" fill="rgb(230,153,43)" fg:x="58206" fg:w="126"/><text x="53.3480%" y="783.50"></text></g><g><title>do_futex (120 samples, 0.11%)</title><rect x="53.1034%" y="757" width="0.1095%" height="15" fill="rgb(231,106,12)" fg:x="58212" fg:w="120"/><text x="53.3534%" y="767.50"></text></g><g><title>futex_wake (117 samples, 0.11%)</title><rect x="53.1062%" y="741" width="0.1067%" height="15" fill="rgb(215,92,2)" fg:x="58215" fg:w="117"/><text x="53.3562%" y="751.50"></text></g><g><title>wake_up_q (81 samples, 0.07%)</title><rect x="53.1390%" y="725" width="0.0739%" height="15" fill="rgb(249,143,25)" fg:x="58251" fg:w="81"/><text x="53.3890%" y="735.50"></text></g><g><title>try_to_wake_up (76 samples, 0.07%)</title><rect x="53.1436%" y="709" width="0.0693%" height="15" fill="rgb(252,7,35)" fg:x="58256" fg:w="76"/><text x="53.3936%" y="719.50"></text></g><g><title>syscall_exit_to_user_mode (61 samples, 0.06%)</title><rect x="53.2157%" y="773" width="0.0556%" height="15" fill="rgb(216,69,40)" fg:x="58335" fg:w="61"/><text x="53.4657%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (199 samples, 0.18%)</title><rect x="53.0934%" y="805" width="0.1815%" height="15" fill="rgb(240,36,33)" fg:x="58201" fg:w="199"/><text x="53.3434%" y="815.50"></text></g><g><title>do_syscall_64 (198 samples, 0.18%)</title><rect x="53.0943%" y="789" width="0.1806%" height="15" fill="rgb(231,128,14)" fg:x="58202" fg:w="198"/><text x="53.3443%" y="799.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (231 samples, 0.21%)</title><rect x="53.0670%" y="837" width="0.2107%" height="15" fill="rgb(245,143,14)" fg:x="58172" fg:w="231"/><text x="53.3170%" y="847.50"></text></g><g><title>__GI___lll_lock_wake (211 samples, 0.19%)</title><rect x="53.0852%" y="821" width="0.1925%" height="15" fill="rgb(222,130,28)" fg:x="58192" fg:w="211"/><text x="53.3352%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (235 samples, 0.21%)</title><rect x="53.0642%" y="917" width="0.2144%" height="15" fill="rgb(212,10,48)" fg:x="58169" fg:w="235"/><text x="53.3142%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (232 samples, 0.21%)</title><rect x="53.0670%" y="901" width="0.2116%" height="15" fill="rgb(254,118,45)" fg:x="58172" fg:w="232"/><text x="53.3170%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (232 samples, 0.21%)</title><rect x="53.0670%" y="885" width="0.2116%" height="15" fill="rgb(228,6,45)" fg:x="58172" fg:w="232"/><text x="53.3170%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (232 samples, 0.21%)</title><rect x="53.0670%" y="869" width="0.2116%" height="15" fill="rgb(241,18,35)" fg:x="58172" fg:w="232"/><text x="53.3170%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (232 samples, 0.21%)</title><rect x="53.0670%" y="853" width="0.2116%" height="15" fill="rgb(227,214,53)" fg:x="58172" fg:w="232"/><text x="53.3170%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="53.2786%" y="917" width="0.0100%" height="15" fill="rgb(224,107,51)" fg:x="58404" fg:w="11"/><text x="53.5286%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="53.2786%" y="901" width="0.0100%" height="15" fill="rgb(248,60,28)" fg:x="58404" fg:w="11"/><text x="53.5286%" y="911.50"></text></g><g><title>event_listener::Inner::lock (49 samples, 0.04%)</title><rect x="53.2932%" y="917" width="0.0447%" height="15" fill="rgb(249,101,23)" fg:x="58420" fg:w="49"/><text x="53.5432%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (49 samples, 0.04%)</title><rect x="53.2932%" y="901" width="0.0447%" height="15" fill="rgb(228,51,19)" fg:x="58420" fg:w="49"/><text x="53.5432%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (48 samples, 0.04%)</title><rect x="53.2941%" y="885" width="0.0438%" height="15" fill="rgb(213,20,6)" fg:x="58421" fg:w="48"/><text x="53.5441%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (44 samples, 0.04%)</title><rect x="53.2978%" y="869" width="0.0401%" height="15" fill="rgb(212,124,10)" fg:x="58425" fg:w="44"/><text x="53.5478%" y="879.50"></text></g><g><title>___pthread_mutex_lock (44 samples, 0.04%)</title><rect x="53.2978%" y="853" width="0.0401%" height="15" fill="rgb(248,3,40)" fg:x="58425" fg:w="44"/><text x="53.5478%" y="863.50"></text></g><g><title>syscall_exit_to_user_mode (11 samples, 0.01%)</title><rect x="53.3634%" y="693" width="0.0100%" height="15" fill="rgb(223,178,23)" fg:x="58497" fg:w="11"/><text x="53.6134%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (30 samples, 0.03%)</title><rect x="53.3470%" y="821" width="0.0274%" height="15" fill="rgb(240,132,45)" fg:x="58479" fg:w="30"/><text x="53.5970%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="53.3470%" y="805" width="0.0274%" height="15" fill="rgb(245,164,36)" fg:x="58479" fg:w="30"/><text x="53.5970%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.03%)</title><rect x="53.3470%" y="789" width="0.0274%" height="15" fill="rgb(231,188,53)" fg:x="58479" fg:w="30"/><text x="53.5970%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (30 samples, 0.03%)</title><rect x="53.3470%" y="773" width="0.0274%" height="15" fill="rgb(237,198,39)" fg:x="58479" fg:w="30"/><text x="53.5970%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (30 samples, 0.03%)</title><rect x="53.3470%" y="757" width="0.0274%" height="15" fill="rgb(223,120,35)" fg:x="58479" fg:w="30"/><text x="53.5970%" y="767.50"></text></g><g><title>__GI___lll_lock_wake (18 samples, 0.02%)</title><rect x="53.3580%" y="741" width="0.0164%" height="15" fill="rgb(253,107,49)" fg:x="58491" fg:w="18"/><text x="53.6080%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="53.3598%" y="725" width="0.0146%" height="15" fill="rgb(216,44,31)" fg:x="58493" fg:w="16"/><text x="53.6098%" y="735.50"></text></g><g><title>do_syscall_64 (16 samples, 0.01%)</title><rect x="53.3598%" y="709" width="0.0146%" height="15" fill="rgb(253,87,21)" fg:x="58493" fg:w="16"/><text x="53.6098%" y="719.50"></text></g><g><title>enqueue_task_fair (20 samples, 0.02%)</title><rect x="53.4246%" y="501" width="0.0182%" height="15" fill="rgb(226,18,2)" fg:x="58564" fg:w="20"/><text x="53.6746%" y="511.50"></text></g><g><title>enqueue_entity (15 samples, 0.01%)</title><rect x="53.4291%" y="485" width="0.0137%" height="15" fill="rgb(216,8,46)" fg:x="58569" fg:w="15"/><text x="53.6791%" y="495.50"></text></g><g><title>psi_group_change (11 samples, 0.01%)</title><rect x="53.4501%" y="485" width="0.0100%" height="15" fill="rgb(226,140,39)" fg:x="58592" fg:w="11"/><text x="53.7001%" y="495.50"></text></g><g><title>ttwu_do_activate (41 samples, 0.04%)</title><rect x="53.4246%" y="533" width="0.0374%" height="15" fill="rgb(221,194,54)" fg:x="58564" fg:w="41"/><text x="53.6746%" y="543.50"></text></g><g><title>enqueue_task (41 samples, 0.04%)</title><rect x="53.4246%" y="517" width="0.0374%" height="15" fill="rgb(213,92,11)" fg:x="58564" fg:w="41"/><text x="53.6746%" y="527.50"></text></g><g><title>psi_task_change (19 samples, 0.02%)</title><rect x="53.4446%" y="501" width="0.0173%" height="15" fill="rgb(229,162,46)" fg:x="58586" fg:w="19"/><text x="53.6946%" y="511.50"></text></g><g><title>__wake_up_common_lock (69 samples, 0.06%)</title><rect x="53.4090%" y="597" width="0.0629%" height="15" fill="rgb(214,111,36)" fg:x="58547" fg:w="69"/><text x="53.6590%" y="607.50"></text></g><g><title>__wake_up_common (69 samples, 0.06%)</title><rect x="53.4090%" y="581" width="0.0629%" height="15" fill="rgb(207,6,21)" fg:x="58547" fg:w="69"/><text x="53.6590%" y="591.50"></text></g><g><title>autoremove_wake_function (65 samples, 0.06%)</title><rect x="53.4127%" y="565" width="0.0593%" height="15" fill="rgb(213,127,38)" fg:x="58551" fg:w="65"/><text x="53.6627%" y="575.50"></text></g><g><title>try_to_wake_up (64 samples, 0.06%)</title><rect x="53.4136%" y="549" width="0.0584%" height="15" fill="rgb(238,118,32)" fg:x="58552" fg:w="64"/><text x="53.6636%" y="559.50"></text></g><g><title>__wake_up_common (81 samples, 0.07%)</title><rect x="53.4036%" y="629" width="0.0739%" height="15" fill="rgb(240,139,39)" fg:x="58541" fg:w="81"/><text x="53.6536%" y="639.50"></text></g><g><title>ep_poll_callback (79 samples, 0.07%)</title><rect x="53.4054%" y="613" width="0.0721%" height="15" fill="rgb(235,10,37)" fg:x="58543" fg:w="79"/><text x="53.6554%" y="623.50"></text></g><g><title>eventfd_write (87 samples, 0.08%)</title><rect x="53.4018%" y="645" width="0.0794%" height="15" fill="rgb(249,171,38)" fg:x="58539" fg:w="87"/><text x="53.6518%" y="655.50"></text></g><g><title>ksys_write (102 samples, 0.09%)</title><rect x="53.3908%" y="677" width="0.0930%" height="15" fill="rgb(242,144,32)" fg:x="58527" fg:w="102"/><text x="53.6408%" y="687.50"></text></g><g><title>vfs_write (92 samples, 0.08%)</title><rect x="53.3999%" y="661" width="0.0839%" height="15" fill="rgb(217,117,21)" fg:x="58537" fg:w="92"/><text x="53.6499%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (117 samples, 0.11%)</title><rect x="53.3899%" y="709" width="0.1067%" height="15" fill="rgb(249,87,1)" fg:x="58526" fg:w="117"/><text x="53.6399%" y="719.50"></text></g><g><title>do_syscall_64 (117 samples, 0.11%)</title><rect x="53.3899%" y="693" width="0.1067%" height="15" fill="rgb(248,196,48)" fg:x="58526" fg:w="117"/><text x="53.6399%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::notify (124 samples, 0.11%)</title><rect x="53.3844%" y="773" width="0.1131%" height="15" fill="rgb(251,206,33)" fg:x="58520" fg:w="124"/><text x="53.6344%" y="783.50"></text></g><g><title>polling::Poller::notify (124 samples, 0.11%)</title><rect x="53.3844%" y="757" width="0.1131%" height="15" fill="rgb(232,141,28)" fg:x="58520" fg:w="124"/><text x="53.6344%" y="767.50"></text></g><g><title>polling::epoll::Poller::notify (122 samples, 0.11%)</title><rect x="53.3862%" y="741" width="0.1113%" height="15" fill="rgb(209,167,14)" fg:x="58522" fg:w="122"/><text x="53.6362%" y="751.50"></text></g><g><title>__GI___write (122 samples, 0.11%)</title><rect x="53.3862%" y="725" width="0.1113%" height="15" fill="rgb(225,11,50)" fg:x="58522" fg:w="122"/><text x="53.6362%" y="735.50"></text></g><g><title>futex_wake_mark (14 samples, 0.01%)</title><rect x="53.5687%" y="597" width="0.0128%" height="15" fill="rgb(209,50,20)" fg:x="58722" fg:w="14"/><text x="53.8187%" y="607.50"></text></g><g><title>select_task_rq_fair (17 samples, 0.02%)</title><rect x="53.6107%" y="565" width="0.0155%" height="15" fill="rgb(212,17,46)" fg:x="58768" fg:w="17"/><text x="53.8607%" y="575.50"></text></g><g><title>enqueue_task_fair (56 samples, 0.05%)</title><rect x="53.6298%" y="533" width="0.0511%" height="15" fill="rgb(216,101,39)" fg:x="58789" fg:w="56"/><text x="53.8798%" y="543.50"></text></g><g><title>enqueue_entity (37 samples, 0.03%)</title><rect x="53.6471%" y="517" width="0.0338%" height="15" fill="rgb(212,228,48)" fg:x="58808" fg:w="37"/><text x="53.8971%" y="527.50"></text></g><g><title>update_load_avg (14 samples, 0.01%)</title><rect x="53.6681%" y="501" width="0.0128%" height="15" fill="rgb(250,6,50)" fg:x="58831" fg:w="14"/><text x="53.9181%" y="511.50"></text></g><g><title>psi_group_change (13 samples, 0.01%)</title><rect x="53.6809%" y="533" width="0.0119%" height="15" fill="rgb(250,160,48)" fg:x="58845" fg:w="13"/><text x="53.9309%" y="543.50"></text></g><g><title>psi_group_change (50 samples, 0.05%)</title><rect x="53.7046%" y="517" width="0.0456%" height="15" fill="rgb(244,216,33)" fg:x="58871" fg:w="50"/><text x="53.9546%" y="527.50"></text></g><g><title>ttwu_do_activate (137 samples, 0.12%)</title><rect x="53.6262%" y="565" width="0.1250%" height="15" fill="rgb(207,157,5)" fg:x="58785" fg:w="137"/><text x="53.8762%" y="575.50"></text></g><g><title>enqueue_task (135 samples, 0.12%)</title><rect x="53.6280%" y="549" width="0.1232%" height="15" fill="rgb(228,199,8)" fg:x="58787" fg:w="135"/><text x="53.8780%" y="559.50"></text></g><g><title>psi_task_change (64 samples, 0.06%)</title><rect x="53.6928%" y="533" width="0.0584%" height="15" fill="rgb(227,80,20)" fg:x="58858" fg:w="64"/><text x="53.9428%" y="543.50"></text></g><g><title>ttwu_do_wakeup (15 samples, 0.01%)</title><rect x="53.7511%" y="565" width="0.0137%" height="15" fill="rgb(222,9,33)" fg:x="58922" fg:w="15"/><text x="54.0011%" y="575.50"></text></g><g><title>check_preempt_curr (11 samples, 0.01%)</title><rect x="53.7548%" y="549" width="0.0100%" height="15" fill="rgb(239,44,28)" fg:x="58926" fg:w="11"/><text x="54.0048%" y="559.50"></text></g><g><title>__x64_sys_futex (269 samples, 0.25%)</title><rect x="53.5377%" y="645" width="0.2454%" height="15" fill="rgb(249,187,43)" fg:x="58688" fg:w="269"/><text x="53.7877%" y="655.50"></text></g><g><title>do_futex (265 samples, 0.24%)</title><rect x="53.5413%" y="629" width="0.2417%" height="15" fill="rgb(216,141,28)" fg:x="58692" fg:w="265"/><text x="53.7913%" y="639.50"></text></g><g><title>futex_wake (264 samples, 0.24%)</title><rect x="53.5422%" y="613" width="0.2408%" height="15" fill="rgb(230,154,53)" fg:x="58693" fg:w="264"/><text x="53.7922%" y="623.50"></text></g><g><title>wake_up_q (211 samples, 0.19%)</title><rect x="53.5906%" y="597" width="0.1925%" height="15" fill="rgb(227,82,4)" fg:x="58746" fg:w="211"/><text x="53.8406%" y="607.50"></text></g><g><title>try_to_wake_up (208 samples, 0.19%)</title><rect x="53.5933%" y="581" width="0.1897%" height="15" fill="rgb(220,107,16)" fg:x="58749" fg:w="208"/><text x="53.8433%" y="591.50"></text></g><g><title>syscall_exit_to_user_mode (47 samples, 0.04%)</title><rect x="53.7849%" y="645" width="0.0429%" height="15" fill="rgb(207,187,2)" fg:x="58959" fg:w="47"/><text x="54.0349%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (331 samples, 0.30%)</title><rect x="53.5331%" y="677" width="0.3020%" height="15" fill="rgb(210,162,52)" fg:x="58683" fg:w="331"/><text x="53.7831%" y="687.50"></text></g><g><title>do_syscall_64 (330 samples, 0.30%)</title><rect x="53.5340%" y="661" width="0.3010%" height="15" fill="rgb(217,216,49)" fg:x="58684" fg:w="330"/><text x="53.7840%" y="671.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (351 samples, 0.32%)</title><rect x="53.5158%" y="741" width="0.3202%" height="15" fill="rgb(218,146,49)" fg:x="58664" fg:w="351"/><text x="53.7658%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (351 samples, 0.32%)</title><rect x="53.5158%" y="725" width="0.3202%" height="15" fill="rgb(216,55,40)" fg:x="58664" fg:w="351"/><text x="53.7658%" y="735.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (351 samples, 0.32%)</title><rect x="53.5158%" y="709" width="0.3202%" height="15" fill="rgb(208,196,21)" fg:x="58664" fg:w="351"/><text x="53.7658%" y="719.50"></text></g><g><title>__GI___pthread_cond_signal (351 samples, 0.32%)</title><rect x="53.5158%" y="693" width="0.3202%" height="15" fill="rgb(242,117,42)" fg:x="58664" fg:w="351"/><text x="53.7658%" y="703.50"></text></g><g><title>parking::Unparker::unpark (384 samples, 0.35%)</title><rect x="53.4975%" y="773" width="0.3503%" height="15" fill="rgb(210,11,23)" fg:x="58644" fg:w="384"/><text x="53.7475%" y="783.50"></text></g><g><title>parking::Inner::unpark (378 samples, 0.34%)</title><rect x="53.5030%" y="757" width="0.3448%" height="15" fill="rgb(217,110,2)" fg:x="58650" fg:w="378"/><text x="53.7530%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="53.8360%" y="741" width="0.0119%" height="15" fill="rgb(229,77,54)" fg:x="59015" fg:w="13"/><text x="54.0860%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="53.8360%" y="725" width="0.0119%" height="15" fill="rgb(218,53,16)" fg:x="59015" fg:w="13"/><text x="54.0860%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="53.8360%" y="709" width="0.0119%" height="15" fill="rgb(215,38,13)" fg:x="59015" fg:w="13"/><text x="54.0860%" y="719.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="53.8360%" y="693" width="0.0119%" height="15" fill="rgb(235,42,18)" fg:x="59015" fg:w="13"/><text x="54.0860%" y="703.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (513 samples, 0.47%)</title><rect x="53.3835%" y="789" width="0.4680%" height="15" fill="rgb(219,66,54)" fg:x="58519" fg:w="513"/><text x="53.6335%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (521 samples, 0.48%)</title><rect x="53.3835%" y="821" width="0.4753%" height="15" fill="rgb(222,205,4)" fg:x="58519" fg:w="521"/><text x="53.6335%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (521 samples, 0.48%)</title><rect x="53.3835%" y="805" width="0.4753%" height="15" fill="rgb(227,213,46)" fg:x="58519" fg:w="521"/><text x="53.6335%" y="815.50"></text></g><g><title>async_executor::State::notify (596 samples, 0.54%)</title><rect x="53.3443%" y="837" width="0.5437%" height="15" fill="rgb(250,145,42)" fg:x="58476" fg:w="596"/><text x="53.5943%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.03%)</title><rect x="53.8588%" y="821" width="0.0292%" height="15" fill="rgb(219,15,2)" fg:x="59040" fg:w="32"/><text x="54.1088%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (31 samples, 0.03%)</title><rect x="53.8597%" y="805" width="0.0283%" height="15" fill="rgb(231,181,52)" fg:x="59041" fg:w="31"/><text x="54.1097%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (29 samples, 0.03%)</title><rect x="53.8615%" y="789" width="0.0265%" height="15" fill="rgb(235,1,42)" fg:x="59043" fg:w="29"/><text x="54.1115%" y="799.50"></text></g><g><title>___pthread_mutex_lock (29 samples, 0.03%)</title><rect x="53.8615%" y="773" width="0.0265%" height="15" fill="rgb(249,88,27)" fg:x="59043" fg:w="29"/><text x="54.1115%" y="783.50"></text></g><g><title>__GI___lll_lock_wait (15 samples, 0.01%)</title><rect x="53.8743%" y="757" width="0.0137%" height="15" fill="rgb(235,145,16)" fg:x="59057" fg:w="15"/><text x="54.1243%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.01%)</title><rect x="53.8779%" y="741" width="0.0100%" height="15" fill="rgb(237,114,19)" fg:x="59061" fg:w="11"/><text x="54.1279%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (18 samples, 0.02%)</title><rect x="53.8980%" y="805" width="0.0164%" height="15" fill="rgb(238,51,50)" fg:x="59083" fg:w="18"/><text x="54.1480%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (18 samples, 0.02%)</title><rect x="53.8980%" y="789" width="0.0164%" height="15" fill="rgb(205,194,25)" fg:x="59083" fg:w="18"/><text x="54.1480%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (35 samples, 0.03%)</title><rect x="53.8880%" y="837" width="0.0319%" height="15" fill="rgb(215,203,17)" fg:x="59072" fg:w="35"/><text x="54.1380%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (29 samples, 0.03%)</title><rect x="53.8935%" y="821" width="0.0265%" height="15" fill="rgb(233,112,49)" fg:x="59078" fg:w="29"/><text x="54.1435%" y="831.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (632 samples, 0.58%)</title><rect x="53.3443%" y="853" width="0.5765%" height="15" fill="rgb(241,130,26)" fg:x="58476" fg:w="632"/><text x="53.5943%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (14 samples, 0.01%)</title><rect x="53.9208%" y="853" width="0.0128%" height="15" fill="rgb(252,223,19)" fg:x="59108" fg:w="14"/><text x="54.1708%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.01%)</title><rect x="53.9208%" y="837" width="0.0128%" height="15" fill="rgb(211,95,25)" fg:x="59108" fg:w="14"/><text x="54.1708%" y="847.50"></text></g><g><title>event_listener::List::notify (655 samples, 0.60%)</title><rect x="53.3379%" y="917" width="0.5975%" height="15" fill="rgb(251,182,27)" fg:x="58469" fg:w="655"/><text x="53.5879%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (653 samples, 0.60%)</title><rect x="53.3397%" y="901" width="0.5957%" height="15" fill="rgb(238,24,4)" fg:x="58471" fg:w="653"/><text x="53.5897%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (652 samples, 0.59%)</title><rect x="53.3406%" y="885" width="0.5948%" height="15" fill="rgb(224,220,25)" fg:x="58472" fg:w="652"/><text x="53.5906%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (648 samples, 0.59%)</title><rect x="53.3443%" y="869" width="0.5911%" height="15" fill="rgb(239,133,26)" fg:x="58476" fg:w="648"/><text x="53.5943%" y="879.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3,571 samples, 3.26%)</title><rect x="50.9451%" y="949" width="3.2576%" height="15" fill="rgb(211,94,48)" fg:x="55846" fg:w="3571"/><text x="51.1951%" y="959.50">asy..</text></g><g><title>event_listener::Event::notify (1,254 samples, 1.14%)</title><rect x="53.0587%" y="933" width="1.1440%" height="15" fill="rgb(239,87,6)" fg:x="58163" fg:w="1254"/><text x="53.3087%" y="943.50"></text></g><g><title>event_listener::full_fence (293 samples, 0.27%)</title><rect x="53.9354%" y="917" width="0.2673%" height="15" fill="rgb(227,62,0)" fg:x="59124" fg:w="293"/><text x="54.1854%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (288 samples, 0.26%)</title><rect x="53.9400%" y="901" width="0.2627%" height="15" fill="rgb(211,226,4)" fg:x="59129" fg:w="288"/><text x="54.1900%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (288 samples, 0.26%)</title><rect x="53.9400%" y="885" width="0.2627%" height="15" fill="rgb(253,38,52)" fg:x="59129" fg:w="288"/><text x="54.1900%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (23 samples, 0.02%)</title><rect x="54.2045%" y="949" width="0.0210%" height="15" fill="rgb(229,126,40)" fg:x="59419" fg:w="23"/><text x="54.4545%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (14 samples, 0.01%)</title><rect x="54.2127%" y="933" width="0.0128%" height="15" fill="rgb(229,165,44)" fg:x="59428" fg:w="14"/><text x="54.4627%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (12 samples, 0.01%)</title><rect x="54.2146%" y="917" width="0.0109%" height="15" fill="rgb(247,95,47)" fg:x="59430" fg:w="12"/><text x="54.4646%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="54.2146%" y="901" width="0.0109%" height="15" fill="rgb(216,140,30)" fg:x="59430" fg:w="12"/><text x="54.4646%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.01%)</title><rect x="54.2146%" y="885" width="0.0109%" height="15" fill="rgb(246,214,8)" fg:x="59430" fg:w="12"/><text x="54.4646%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.01%)</title><rect x="54.2146%" y="869" width="0.0109%" height="15" fill="rgb(227,224,15)" fg:x="59430" fg:w="12"/><text x="54.4646%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="54.2264%" y="933" width="0.0146%" height="15" fill="rgb(233,175,4)" fg:x="59443" fg:w="16"/><text x="54.4764%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.01%)</title><rect x="54.2264%" y="917" width="0.0146%" height="15" fill="rgb(221,66,45)" fg:x="59443" fg:w="16"/><text x="54.4764%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.01%)</title><rect x="54.2264%" y="901" width="0.0146%" height="15" fill="rgb(221,178,18)" fg:x="59443" fg:w="16"/><text x="54.4764%" y="911.50"></text></g><g><title>event_listener::Inner::lock (13 samples, 0.01%)</title><rect x="54.2474%" y="933" width="0.0119%" height="15" fill="rgb(213,81,29)" fg:x="59466" fg:w="13"/><text x="54.4974%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="54.2474%" y="917" width="0.0119%" height="15" fill="rgb(220,89,49)" fg:x="59466" fg:w="13"/><text x="54.4974%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="54.2474%" y="901" width="0.0119%" height="15" fill="rgb(227,60,33)" fg:x="59466" fg:w="13"/><text x="54.4974%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="54.2474%" y="885" width="0.0119%" height="15" fill="rgb(205,113,12)" fg:x="59466" fg:w="13"/><text x="54.4974%" y="895.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="54.2474%" y="869" width="0.0119%" height="15" fill="rgb(211,32,1)" fg:x="59466" fg:w="13"/><text x="54.4974%" y="879.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (4,653 samples, 4.24%)</title><rect x="50.0219%" y="1045" width="4.2447%" height="15" fill="rgb(246,2,12)" fg:x="54834" fg:w="4653"/><text x="50.2719%" y="1055.50">tremo..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,653 samples, 4.24%)</title><rect x="50.0219%" y="1029" width="4.2447%" height="15" fill="rgb(243,37,27)" fg:x="54834" fg:w="4653"/><text x="50.2719%" y="1039.50">&lt;asyn..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (4,653 samples, 4.24%)</title><rect x="50.0219%" y="1013" width="4.2447%" height="15" fill="rgb(248,211,31)" fg:x="54834" fg:w="4653"/><text x="50.2719%" y="1023.50">&lt;trem..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,653 samples, 4.24%)</title><rect x="50.0219%" y="997" width="4.2447%" height="15" fill="rgb(242,146,47)" fg:x="54834" fg:w="4653"/><text x="50.2719%" y="1007.50">&lt;asyn..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,653 samples, 4.24%)</title><rect x="50.0219%" y="981" width="4.2447%" height="15" fill="rgb(206,70,20)" fg:x="54834" fg:w="4653"/><text x="50.2719%" y="991.50">&lt;asyn..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,653 samples, 4.24%)</title><rect x="50.0219%" y="965" width="4.2447%" height="15" fill="rgb(215,10,51)" fg:x="54834" fg:w="4653"/><text x="50.2719%" y="975.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (45 samples, 0.04%)</title><rect x="54.2255%" y="949" width="0.0411%" height="15" fill="rgb(243,178,53)" fg:x="59442" fg:w="45"/><text x="54.4755%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (109 samples, 0.10%)</title><rect x="54.2821%" y="949" width="0.0994%" height="15" fill="rgb(233,221,20)" fg:x="59504" fg:w="109"/><text x="54.5321%" y="959.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="54.4818%" y="917" width="0.0100%" height="15" fill="rgb(218,95,35)" fg:x="59723" fg:w="11"/><text x="54.7318%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (300 samples, 0.27%)</title><rect x="54.6360%" y="869" width="0.2737%" height="15" fill="rgb(229,13,5)" fg:x="59892" fg:w="300"/><text x="54.8860%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (300 samples, 0.27%)</title><rect x="54.6360%" y="853" width="0.2737%" height="15" fill="rgb(252,164,30)" fg:x="59892" fg:w="300"/><text x="54.8860%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (355 samples, 0.32%)</title><rect x="54.9097%" y="869" width="0.3238%" height="15" fill="rgb(232,68,36)" fg:x="60192" fg:w="355"/><text x="55.1597%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (353 samples, 0.32%)</title><rect x="54.9115%" y="853" width="0.3220%" height="15" fill="rgb(219,59,54)" fg:x="60194" fg:w="353"/><text x="55.1615%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (805 samples, 0.73%)</title><rect x="54.5083%" y="901" width="0.7344%" height="15" fill="rgb(250,92,33)" fg:x="59752" fg:w="805"/><text x="54.7583%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (761 samples, 0.69%)</title><rect x="54.5484%" y="885" width="0.6942%" height="15" fill="rgb(229,162,54)" fg:x="59796" fg:w="761"/><text x="54.7984%" y="895.50"></text></g><g><title>__entry_text_start (15 samples, 0.01%)</title><rect x="55.3348%" y="773" width="0.0137%" height="15" fill="rgb(244,114,52)" fg:x="60658" fg:w="15"/><text x="55.5848%" y="783.50"></text></g><g><title>_raw_spin_lock (35 samples, 0.03%)</title><rect x="55.4224%" y="693" width="0.0319%" height="15" fill="rgb(212,211,43)" fg:x="60754" fg:w="35"/><text x="55.6724%" y="703.50"></text></g><g><title>futex_wake_mark (49 samples, 0.04%)</title><rect x="55.4634%" y="693" width="0.0447%" height="15" fill="rgb(226,147,8)" fg:x="60799" fg:w="49"/><text x="55.7134%" y="703.50"></text></g><g><title>__futex_unqueue (14 samples, 0.01%)</title><rect x="55.4953%" y="677" width="0.0128%" height="15" fill="rgb(226,23,13)" fg:x="60834" fg:w="14"/><text x="55.7453%" y="687.50"></text></g><g><title>enqueue_task_fair (14 samples, 0.01%)</title><rect x="55.5665%" y="629" width="0.0128%" height="15" fill="rgb(240,63,4)" fg:x="60912" fg:w="14"/><text x="55.8165%" y="639.50"></text></g><g><title>ttwu_do_activate (35 samples, 0.03%)</title><rect x="55.5656%" y="661" width="0.0319%" height="15" fill="rgb(221,1,32)" fg:x="60911" fg:w="35"/><text x="55.8156%" y="671.50"></text></g><g><title>enqueue_task (34 samples, 0.03%)</title><rect x="55.5665%" y="645" width="0.0310%" height="15" fill="rgb(242,117,10)" fg:x="60912" fg:w="34"/><text x="55.8165%" y="655.50"></text></g><g><title>psi_task_change (15 samples, 0.01%)</title><rect x="55.5838%" y="629" width="0.0137%" height="15" fill="rgb(249,172,44)" fg:x="60931" fg:w="15"/><text x="55.8338%" y="639.50"></text></g><g><title>__smp_call_single_queue (34 samples, 0.03%)</title><rect x="55.6367%" y="645" width="0.0310%" height="15" fill="rgb(244,46,45)" fg:x="60989" fg:w="34"/><text x="55.8867%" y="655.50"></text></g><g><title>llist_add_batch (34 samples, 0.03%)</title><rect x="55.6367%" y="629" width="0.0310%" height="15" fill="rgb(206,43,17)" fg:x="60989" fg:w="34"/><text x="55.8867%" y="639.50"></text></g><g><title>__x2apic_send_IPI_dest (47 samples, 0.04%)</title><rect x="55.6678%" y="645" width="0.0429%" height="15" fill="rgb(239,218,39)" fg:x="61023" fg:w="47"/><text x="55.9178%" y="655.50"></text></g><g><title>native_write_msr (40 samples, 0.04%)</title><rect x="55.6741%" y="629" width="0.0365%" height="15" fill="rgb(208,169,54)" fg:x="61030" fg:w="40"/><text x="55.9241%" y="639.50"></text></g><g><title>ttwu_queue_wakelist (161 samples, 0.15%)</title><rect x="55.6021%" y="661" width="0.1469%" height="15" fill="rgb(247,25,42)" fg:x="60951" fg:w="161"/><text x="55.8521%" y="671.50"></text></g><g><title>x2apic_send_IPI (24 samples, 0.02%)</title><rect x="55.7271%" y="645" width="0.0219%" height="15" fill="rgb(226,23,31)" fg:x="61088" fg:w="24"/><text x="55.9771%" y="655.50"></text></g><g><title>__x64_sys_futex (433 samples, 0.40%)</title><rect x="55.3594%" y="741" width="0.3950%" height="15" fill="rgb(247,16,28)" fg:x="60685" fg:w="433"/><text x="55.6094%" y="751.50"></text></g><g><title>do_futex (419 samples, 0.38%)</title><rect x="55.3722%" y="725" width="0.3822%" height="15" fill="rgb(231,147,38)" fg:x="60699" fg:w="419"/><text x="55.6222%" y="735.50"></text></g><g><title>futex_wake (416 samples, 0.38%)</title><rect x="55.3749%" y="709" width="0.3795%" height="15" fill="rgb(253,81,48)" fg:x="60702" fg:w="416"/><text x="55.6249%" y="719.50"></text></g><g><title>wake_up_q (256 samples, 0.23%)</title><rect x="55.5209%" y="693" width="0.2335%" height="15" fill="rgb(249,222,43)" fg:x="60862" fg:w="256"/><text x="55.7709%" y="703.50"></text></g><g><title>try_to_wake_up (241 samples, 0.22%)</title><rect x="55.5346%" y="677" width="0.2199%" height="15" fill="rgb(221,3,27)" fg:x="60877" fg:w="241"/><text x="55.7846%" y="687.50"></text></g><g><title>syscall_exit_to_user_mode (171 samples, 0.16%)</title><rect x="55.7553%" y="741" width="0.1560%" height="15" fill="rgb(228,180,5)" fg:x="61119" fg:w="171"/><text x="56.0053%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (625 samples, 0.57%)</title><rect x="55.3494%" y="773" width="0.5702%" height="15" fill="rgb(227,131,42)" fg:x="60674" fg:w="625"/><text x="55.5994%" y="783.50"></text></g><g><title>do_syscall_64 (620 samples, 0.57%)</title><rect x="55.3540%" y="757" width="0.5656%" height="15" fill="rgb(212,3,39)" fg:x="60679" fg:w="620"/><text x="55.6040%" y="767.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (723 samples, 0.66%)</title><rect x="55.2655%" y="805" width="0.6596%" height="15" fill="rgb(226,45,5)" fg:x="60582" fg:w="723"/><text x="55.5155%" y="815.50"></text></g><g><title>__GI___lll_lock_wake (660 samples, 0.60%)</title><rect x="55.3229%" y="789" width="0.6021%" height="15" fill="rgb(215,167,45)" fg:x="60645" fg:w="660"/><text x="55.5729%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (730 samples, 0.67%)</title><rect x="55.2600%" y="885" width="0.6659%" height="15" fill="rgb(250,218,53)" fg:x="60576" fg:w="730"/><text x="55.5100%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (727 samples, 0.66%)</title><rect x="55.2627%" y="869" width="0.6632%" height="15" fill="rgb(207,140,0)" fg:x="60579" fg:w="727"/><text x="55.5127%" y="879.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (727 samples, 0.66%)</title><rect x="55.2627%" y="853" width="0.6632%" height="15" fill="rgb(238,133,51)" fg:x="60579" fg:w="727"/><text x="55.5127%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (726 samples, 0.66%)</title><rect x="55.2636%" y="837" width="0.6623%" height="15" fill="rgb(218,203,53)" fg:x="60580" fg:w="726"/><text x="55.5136%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (724 samples, 0.66%)</title><rect x="55.2655%" y="821" width="0.6605%" height="15" fill="rgb(226,184,25)" fg:x="60582" fg:w="724"/><text x="55.5155%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (29 samples, 0.03%)</title><rect x="55.9259%" y="885" width="0.0265%" height="15" fill="rgb(231,121,21)" fg:x="61306" fg:w="29"/><text x="56.1759%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (29 samples, 0.03%)</title><rect x="55.9259%" y="869" width="0.0265%" height="15" fill="rgb(251,14,34)" fg:x="61306" fg:w="29"/><text x="56.1759%" y="879.50"></text></g><g><title>futex_q_lock (12 samples, 0.01%)</title><rect x="56.1075%" y="693" width="0.0109%" height="15" fill="rgb(249,193,11)" fg:x="61505" fg:w="12"/><text x="56.3575%" y="703.50"></text></g><g><title>__x64_sys_futex (38 samples, 0.03%)</title><rect x="56.0883%" y="757" width="0.0347%" height="15" fill="rgb(220,172,37)" fg:x="61484" fg:w="38"/><text x="56.3383%" y="767.50"></text></g><g><title>do_futex (35 samples, 0.03%)</title><rect x="56.0910%" y="741" width="0.0319%" height="15" fill="rgb(231,229,43)" fg:x="61487" fg:w="35"/><text x="56.3410%" y="751.50"></text></g><g><title>futex_wait (34 samples, 0.03%)</title><rect x="56.0920%" y="725" width="0.0310%" height="15" fill="rgb(250,161,5)" fg:x="61488" fg:w="34"/><text x="56.3420%" y="735.50"></text></g><g><title>futex_wait_setup (27 samples, 0.02%)</title><rect x="56.0983%" y="709" width="0.0246%" height="15" fill="rgb(218,225,18)" fg:x="61495" fg:w="27"/><text x="56.3483%" y="719.50"></text></g><g><title>syscall_exit_to_user_mode (23 samples, 0.02%)</title><rect x="56.1230%" y="757" width="0.0210%" height="15" fill="rgb(245,45,42)" fg:x="61522" fg:w="23"/><text x="56.3730%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (65 samples, 0.06%)</title><rect x="56.0883%" y="789" width="0.0593%" height="15" fill="rgb(211,115,1)" fg:x="61484" fg:w="65"/><text x="56.3383%" y="799.50"></text></g><g><title>do_syscall_64 (65 samples, 0.06%)</title><rect x="56.0883%" y="773" width="0.0593%" height="15" fill="rgb(248,133,52)" fg:x="61484" fg:w="65"/><text x="56.3383%" y="783.50"></text></g><g><title>__GI___lll_lock_wait (81 samples, 0.07%)</title><rect x="56.0764%" y="805" width="0.0739%" height="15" fill="rgb(238,100,21)" fg:x="61471" fg:w="81"/><text x="56.3264%" y="815.50"></text></g><g><title>event_listener::Inner::lock (215 samples, 0.20%)</title><rect x="55.9551%" y="885" width="0.1961%" height="15" fill="rgb(247,144,11)" fg:x="61338" fg:w="215"/><text x="56.2051%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (212 samples, 0.19%)</title><rect x="55.9579%" y="869" width="0.1934%" height="15" fill="rgb(206,164,16)" fg:x="61341" fg:w="212"/><text x="56.2079%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (209 samples, 0.19%)</title><rect x="55.9606%" y="853" width="0.1907%" height="15" fill="rgb(222,34,3)" fg:x="61344" fg:w="209"/><text x="56.2106%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (201 samples, 0.18%)</title><rect x="55.9679%" y="837" width="0.1834%" height="15" fill="rgb(248,82,4)" fg:x="61352" fg:w="201"/><text x="56.2179%" y="847.50"></text></g><g><title>___pthread_mutex_lock (201 samples, 0.18%)</title><rect x="55.9679%" y="821" width="0.1834%" height="15" fill="rgb(228,81,46)" fg:x="61352" fg:w="201"/><text x="56.2179%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (13 samples, 0.01%)</title><rect x="56.1649%" y="837" width="0.0119%" height="15" fill="rgb(227,67,47)" fg:x="61568" fg:w="13"/><text x="56.4149%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.01%)</title><rect x="56.1658%" y="821" width="0.0109%" height="15" fill="rgb(215,93,53)" fg:x="61569" fg:w="12"/><text x="56.4158%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.01%)</title><rect x="56.1658%" y="805" width="0.0109%" height="15" fill="rgb(248,194,39)" fg:x="61569" fg:w="12"/><text x="56.4158%" y="815.50"></text></g><g><title>async_executor::Sleepers::notify (13 samples, 0.01%)</title><rect x="56.1823%" y="789" width="0.0119%" height="15" fill="rgb(215,5,19)" fg:x="61587" fg:w="13"/><text x="56.4323%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (12 samples, 0.01%)</title><rect x="56.1832%" y="773" width="0.0109%" height="15" fill="rgb(226,215,51)" fg:x="61588" fg:w="12"/><text x="56.4332%" y="783.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="56.1832%" y="757" width="0.0109%" height="15" fill="rgb(225,56,26)" fg:x="61588" fg:w="12"/><text x="56.4332%" y="767.50"></text></g><g><title>__x64_sys_futex (19 samples, 0.02%)</title><rect x="56.2452%" y="661" width="0.0173%" height="15" fill="rgb(222,75,29)" fg:x="61656" fg:w="19"/><text x="56.4952%" y="671.50"></text></g><g><title>do_futex (17 samples, 0.02%)</title><rect x="56.2470%" y="645" width="0.0155%" height="15" fill="rgb(236,139,6)" fg:x="61658" fg:w="17"/><text x="56.4970%" y="655.50"></text></g><g><title>futex_wake (17 samples, 0.02%)</title><rect x="56.2470%" y="629" width="0.0155%" height="15" fill="rgb(223,137,36)" fg:x="61658" fg:w="17"/><text x="56.4970%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (30 samples, 0.03%)</title><rect x="56.2625%" y="661" width="0.0274%" height="15" fill="rgb(226,99,2)" fg:x="61675" fg:w="30"/><text x="56.5125%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (51 samples, 0.05%)</title><rect x="56.2443%" y="693" width="0.0465%" height="15" fill="rgb(206,133,23)" fg:x="61655" fg:w="51"/><text x="56.4943%" y="703.50"></text></g><g><title>do_syscall_64 (51 samples, 0.05%)</title><rect x="56.2443%" y="677" width="0.0465%" height="15" fill="rgb(243,173,15)" fg:x="61655" fg:w="51"/><text x="56.4943%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (107 samples, 0.10%)</title><rect x="56.1941%" y="789" width="0.0976%" height="15" fill="rgb(228,69,28)" fg:x="61600" fg:w="107"/><text x="56.4441%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (107 samples, 0.10%)</title><rect x="56.1941%" y="773" width="0.0976%" height="15" fill="rgb(212,51,22)" fg:x="61600" fg:w="107"/><text x="56.4441%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (106 samples, 0.10%)</title><rect x="56.1950%" y="757" width="0.0967%" height="15" fill="rgb(227,113,0)" fg:x="61601" fg:w="106"/><text x="56.4450%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (106 samples, 0.10%)</title><rect x="56.1950%" y="741" width="0.0967%" height="15" fill="rgb(252,84,27)" fg:x="61601" fg:w="106"/><text x="56.4450%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (106 samples, 0.10%)</title><rect x="56.1950%" y="725" width="0.0967%" height="15" fill="rgb(223,145,39)" fg:x="61601" fg:w="106"/><text x="56.4450%" y="735.50"></text></g><g><title>__GI___lll_lock_wake (55 samples, 0.05%)</title><rect x="56.2416%" y="709" width="0.0502%" height="15" fill="rgb(239,219,30)" fg:x="61652" fg:w="55"/><text x="56.4916%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (29 samples, 0.03%)</title><rect x="56.2917%" y="789" width="0.0265%" height="15" fill="rgb(224,196,39)" fg:x="61707" fg:w="29"/><text x="56.5417%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.03%)</title><rect x="56.2917%" y="773" width="0.0265%" height="15" fill="rgb(205,35,43)" fg:x="61707" fg:w="29"/><text x="56.5417%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (32 samples, 0.03%)</title><rect x="56.3565%" y="709" width="0.0292%" height="15" fill="rgb(228,201,21)" fg:x="61778" fg:w="32"/><text x="56.6065%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (32 samples, 0.03%)</title><rect x="56.3565%" y="693" width="0.0292%" height="15" fill="rgb(237,118,16)" fg:x="61778" fg:w="32"/><text x="56.6065%" y="703.50"></text></g><g><title>_raw_spin_lock (11 samples, 0.01%)</title><rect x="56.5125%" y="565" width="0.0100%" height="15" fill="rgb(241,17,19)" fg:x="61949" fg:w="11"/><text x="56.7625%" y="575.50"></text></g><g><title>futex_wake_mark (39 samples, 0.04%)</title><rect x="56.5307%" y="565" width="0.0356%" height="15" fill="rgb(214,10,25)" fg:x="61969" fg:w="39"/><text x="56.7807%" y="575.50"></text></g><g><title>__futex_unqueue (13 samples, 0.01%)</title><rect x="56.5545%" y="549" width="0.0119%" height="15" fill="rgb(238,37,29)" fg:x="61995" fg:w="13"/><text x="56.8045%" y="559.50"></text></g><g><title>wake_q_add_safe (11 samples, 0.01%)</title><rect x="56.5736%" y="565" width="0.0100%" height="15" fill="rgb(253,83,25)" fg:x="62016" fg:w="11"/><text x="56.8236%" y="575.50"></text></g><g><title>select_task_rq_fair (62 samples, 0.06%)</title><rect x="56.6238%" y="533" width="0.0566%" height="15" fill="rgb(234,192,12)" fg:x="62071" fg:w="62"/><text x="56.8738%" y="543.50"></text></g><g><title>available_idle_cpu (12 samples, 0.01%)</title><rect x="56.6694%" y="517" width="0.0109%" height="15" fill="rgb(241,216,45)" fg:x="62121" fg:w="12"/><text x="56.9194%" y="527.50"></text></g><g><title>reweight_entity (11 samples, 0.01%)</title><rect x="56.7770%" y="469" width="0.0100%" height="15" fill="rgb(242,22,33)" fg:x="62239" fg:w="11"/><text x="57.0270%" y="479.50"></text></g><g><title>update_cfs_group (12 samples, 0.01%)</title><rect x="56.7871%" y="469" width="0.0109%" height="15" fill="rgb(231,105,49)" fg:x="62250" fg:w="12"/><text x="57.0371%" y="479.50"></text></g><g><title>enqueue_task_fair (144 samples, 0.13%)</title><rect x="56.6867%" y="501" width="0.1314%" height="15" fill="rgb(218,204,15)" fg:x="62140" fg:w="144"/><text x="56.9367%" y="511.50"></text></g><g><title>enqueue_entity (83 samples, 0.08%)</title><rect x="56.7424%" y="485" width="0.0757%" height="15" fill="rgb(235,138,41)" fg:x="62201" fg:w="83"/><text x="56.9924%" y="495.50"></text></g><g><title>update_load_avg (18 samples, 0.02%)</title><rect x="56.8017%" y="469" width="0.0164%" height="15" fill="rgb(246,0,9)" fg:x="62266" fg:w="18"/><text x="57.0517%" y="479.50"></text></g><g><title>psi_group_change (31 samples, 0.03%)</title><rect x="56.8181%" y="501" width="0.0283%" height="15" fill="rgb(210,74,4)" fg:x="62284" fg:w="31"/><text x="57.0681%" y="511.50"></text></g><g><title>psi_group_change (89 samples, 0.08%)</title><rect x="56.8792%" y="485" width="0.0812%" height="15" fill="rgb(250,60,41)" fg:x="62351" fg:w="89"/><text x="57.1292%" y="495.50"></text></g><g><title>ttwu_do_activate (312 samples, 0.28%)</title><rect x="56.6804%" y="533" width="0.2846%" height="15" fill="rgb(220,115,12)" fg:x="62133" fg:w="312"/><text x="56.9304%" y="543.50"></text></g><g><title>enqueue_task (310 samples, 0.28%)</title><rect x="56.6822%" y="517" width="0.2828%" height="15" fill="rgb(237,100,13)" fg:x="62135" fg:w="310"/><text x="56.9322%" y="527.50"></text></g><g><title>psi_task_change (130 samples, 0.12%)</title><rect x="56.8464%" y="501" width="0.1186%" height="15" fill="rgb(213,55,26)" fg:x="62315" fg:w="130"/><text x="57.0964%" y="511.50"></text></g><g><title>ttwu_do_wakeup (21 samples, 0.02%)</title><rect x="56.9650%" y="533" width="0.0192%" height="15" fill="rgb(216,17,4)" fg:x="62445" fg:w="21"/><text x="57.2150%" y="543.50"></text></g><g><title>check_preempt_curr (19 samples, 0.02%)</title><rect x="56.9668%" y="517" width="0.0173%" height="15" fill="rgb(220,153,47)" fg:x="62447" fg:w="19"/><text x="57.2168%" y="527.50"></text></g><g><title>ttwu_queue_wakelist (32 samples, 0.03%)</title><rect x="56.9841%" y="533" width="0.0292%" height="15" fill="rgb(215,131,9)" fg:x="62466" fg:w="32"/><text x="57.2341%" y="543.50"></text></g><g><title>__x64_sys_futex (634 samples, 0.58%)</title><rect x="56.4514%" y="613" width="0.5784%" height="15" fill="rgb(233,46,42)" fg:x="61882" fg:w="634"/><text x="56.7014%" y="623.50"></text></g><g><title>do_futex (625 samples, 0.57%)</title><rect x="56.4596%" y="597" width="0.5702%" height="15" fill="rgb(226,86,7)" fg:x="61891" fg:w="625"/><text x="56.7096%" y="607.50"></text></g><g><title>futex_wake (624 samples, 0.57%)</title><rect x="56.4605%" y="581" width="0.5692%" height="15" fill="rgb(239,226,21)" fg:x="61892" fg:w="624"/><text x="56.7105%" y="591.50"></text></g><g><title>wake_up_q (489 samples, 0.45%)</title><rect x="56.5837%" y="565" width="0.4461%" height="15" fill="rgb(244,137,22)" fg:x="62027" fg:w="489"/><text x="56.8337%" y="575.50"></text></g><g><title>try_to_wake_up (481 samples, 0.44%)</title><rect x="56.5910%" y="549" width="0.4388%" height="15" fill="rgb(211,139,35)" fg:x="62035" fg:w="481"/><text x="56.8410%" y="559.50"></text></g><g><title>update_rq_clock (18 samples, 0.02%)</title><rect x="57.0133%" y="533" width="0.0164%" height="15" fill="rgb(214,62,50)" fg:x="62498" fg:w="18"/><text x="57.2633%" y="543.50"></text></g><g><title>syscall_exit_to_user_mode (148 samples, 0.14%)</title><rect x="57.0343%" y="613" width="0.1350%" height="15" fill="rgb(212,113,44)" fg:x="62521" fg:w="148"/><text x="57.2843%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (812 samples, 0.74%)</title><rect x="56.4423%" y="645" width="0.7407%" height="15" fill="rgb(226,150,43)" fg:x="61872" fg:w="812"/><text x="56.6923%" y="655.50"></text></g><g><title>do_syscall_64 (808 samples, 0.74%)</title><rect x="56.4459%" y="629" width="0.7371%" height="15" fill="rgb(250,71,37)" fg:x="61876" fg:w="808"/><text x="56.6959%" y="639.50"></text></g><g><title>syscall_trace_enter.constprop.0 (15 samples, 0.01%)</title><rect x="57.1693%" y="613" width="0.0137%" height="15" fill="rgb(219,76,19)" fg:x="62669" fg:w="15"/><text x="57.4193%" y="623.50"></text></g><g><title>__audit_syscall_entry (11 samples, 0.01%)</title><rect x="57.1730%" y="597" width="0.0100%" height="15" fill="rgb(250,39,11)" fg:x="62673" fg:w="11"/><text x="57.4230%" y="607.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (879 samples, 0.80%)</title><rect x="56.3857%" y="709" width="0.8019%" height="15" fill="rgb(230,64,31)" fg:x="61810" fg:w="879"/><text x="56.6357%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (879 samples, 0.80%)</title><rect x="56.3857%" y="693" width="0.8019%" height="15" fill="rgb(208,222,23)" fg:x="61810" fg:w="879"/><text x="56.6357%" y="703.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (879 samples, 0.80%)</title><rect x="56.3857%" y="677" width="0.8019%" height="15" fill="rgb(227,125,18)" fg:x="61810" fg:w="879"/><text x="56.6357%" y="687.50"></text></g><g><title>__GI___pthread_cond_signal (879 samples, 0.80%)</title><rect x="56.3857%" y="661" width="0.8019%" height="15" fill="rgb(234,210,9)" fg:x="61810" fg:w="879"/><text x="56.6357%" y="671.50"></text></g><g><title>parking::Inner::unpark (950 samples, 0.87%)</title><rect x="56.3519%" y="725" width="0.8666%" height="15" fill="rgb(217,127,24)" fg:x="61773" fg:w="950"/><text x="56.6019%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (34 samples, 0.03%)</title><rect x="57.1876%" y="709" width="0.0310%" height="15" fill="rgb(239,141,48)" fg:x="62689" fg:w="34"/><text x="57.4376%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (34 samples, 0.03%)</title><rect x="57.1876%" y="693" width="0.0310%" height="15" fill="rgb(227,109,8)" fg:x="62689" fg:w="34"/><text x="57.4376%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (34 samples, 0.03%)</title><rect x="57.1876%" y="677" width="0.0310%" height="15" fill="rgb(235,184,23)" fg:x="62689" fg:w="34"/><text x="57.4376%" y="687.50"></text></g><g><title>___pthread_mutex_lock (34 samples, 0.03%)</title><rect x="57.1876%" y="661" width="0.0310%" height="15" fill="rgb(227,226,48)" fg:x="62689" fg:w="34"/><text x="57.4376%" y="671.50"></text></g><g><title>parking::Unparker::unpark (977 samples, 0.89%)</title><rect x="56.3282%" y="741" width="0.8913%" height="15" fill="rgb(206,150,11)" fg:x="61747" fg:w="977"/><text x="56.5782%" y="751.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (993 samples, 0.91%)</title><rect x="56.3209%" y="757" width="0.9059%" height="15" fill="rgb(254,2,33)" fg:x="61739" fg:w="993"/><text x="56.5709%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (1,033 samples, 0.94%)</title><rect x="56.3182%" y="789" width="0.9423%" height="15" fill="rgb(243,160,20)" fg:x="61736" fg:w="1033"/><text x="56.5682%" y="799.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1,031 samples, 0.94%)</title><rect x="56.3200%" y="773" width="0.9405%" height="15" fill="rgb(218,208,30)" fg:x="61738" fg:w="1031"/><text x="56.5700%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (37 samples, 0.03%)</title><rect x="57.2268%" y="757" width="0.0338%" height="15" fill="rgb(224,120,49)" fg:x="62732" fg:w="37"/><text x="57.4768%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="57.2268%" y="741" width="0.0338%" height="15" fill="rgb(246,12,2)" fg:x="62732" fg:w="37"/><text x="57.4768%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (37 samples, 0.03%)</title><rect x="57.2268%" y="725" width="0.0338%" height="15" fill="rgb(236,117,3)" fg:x="62732" fg:w="37"/><text x="57.4768%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (37 samples, 0.03%)</title><rect x="57.2268%" y="709" width="0.0338%" height="15" fill="rgb(216,128,52)" fg:x="62732" fg:w="37"/><text x="57.4768%" y="719.50"></text></g><g><title>futex_get_value_locked (13 samples, 0.01%)</title><rect x="57.3390%" y="613" width="0.0119%" height="15" fill="rgb(246,145,19)" fg:x="62855" fg:w="13"/><text x="57.5890%" y="623.50"></text></g><g><title>__get_user_nocheck_4 (12 samples, 0.01%)</title><rect x="57.3399%" y="597" width="0.0109%" height="15" fill="rgb(222,11,46)" fg:x="62856" fg:w="12"/><text x="57.5899%" y="607.50"></text></g><g><title>futex_q_lock (14 samples, 0.01%)</title><rect x="57.3508%" y="613" width="0.0128%" height="15" fill="rgb(245,82,36)" fg:x="62868" fg:w="14"/><text x="57.6008%" y="623.50"></text></g><g><title>__x64_sys_futex (46 samples, 0.04%)</title><rect x="57.3262%" y="677" width="0.0420%" height="15" fill="rgb(250,73,51)" fg:x="62841" fg:w="46"/><text x="57.5762%" y="687.50"></text></g><g><title>do_futex (42 samples, 0.04%)</title><rect x="57.3299%" y="661" width="0.0383%" height="15" fill="rgb(221,189,23)" fg:x="62845" fg:w="42"/><text x="57.5799%" y="671.50"></text></g><g><title>futex_wait (42 samples, 0.04%)</title><rect x="57.3299%" y="645" width="0.0383%" height="15" fill="rgb(210,33,7)" fg:x="62845" fg:w="42"/><text x="57.5799%" y="655.50"></text></g><g><title>futex_wait_setup (35 samples, 0.03%)</title><rect x="57.3363%" y="629" width="0.0319%" height="15" fill="rgb(210,107,22)" fg:x="62852" fg:w="35"/><text x="57.5863%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (31 samples, 0.03%)</title><rect x="57.3682%" y="677" width="0.0283%" height="15" fill="rgb(222,116,37)" fg:x="62887" fg:w="31"/><text x="57.6182%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (78 samples, 0.07%)</title><rect x="57.3262%" y="709" width="0.0712%" height="15" fill="rgb(254,17,48)" fg:x="62841" fg:w="78"/><text x="57.5762%" y="719.50"></text></g><g><title>do_syscall_64 (78 samples, 0.07%)</title><rect x="57.3262%" y="693" width="0.0712%" height="15" fill="rgb(224,36,32)" fg:x="62841" fg:w="78"/><text x="57.5762%" y="703.50"></text></g><g><title>async_executor::State::notify (1,335 samples, 1.22%)</title><rect x="56.1804%" y="805" width="1.2178%" height="15" fill="rgb(232,90,46)" fg:x="61585" fg:w="1335"/><text x="56.4304%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (151 samples, 0.14%)</title><rect x="57.2605%" y="789" width="0.1377%" height="15" fill="rgb(241,66,40)" fg:x="62769" fg:w="151"/><text x="57.5105%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (146 samples, 0.13%)</title><rect x="57.2651%" y="773" width="0.1332%" height="15" fill="rgb(249,184,29)" fg:x="62774" fg:w="146"/><text x="57.5151%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (141 samples, 0.13%)</title><rect x="57.2697%" y="757" width="0.1286%" height="15" fill="rgb(231,181,1)" fg:x="62779" fg:w="141"/><text x="57.5197%" y="767.50"></text></g><g><title>___pthread_mutex_lock (141 samples, 0.13%)</title><rect x="57.2697%" y="741" width="0.1286%" height="15" fill="rgb(224,94,2)" fg:x="62779" fg:w="141"/><text x="57.5197%" y="751.50"></text></g><g><title>__GI___lll_lock_wait (99 samples, 0.09%)</title><rect x="57.3080%" y="725" width="0.0903%" height="15" fill="rgb(229,170,15)" fg:x="62821" fg:w="99"/><text x="57.5580%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (59 samples, 0.05%)</title><rect x="57.4120%" y="773" width="0.0538%" height="15" fill="rgb(240,127,35)" fg:x="62935" fg:w="59"/><text x="57.6620%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (59 samples, 0.05%)</title><rect x="57.4120%" y="757" width="0.0538%" height="15" fill="rgb(248,196,34)" fg:x="62935" fg:w="59"/><text x="57.6620%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (21 samples, 0.02%)</title><rect x="57.4658%" y="773" width="0.0192%" height="15" fill="rgb(236,137,7)" fg:x="62994" fg:w="21"/><text x="57.7158%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_or (21 samples, 0.02%)</title><rect x="57.4658%" y="757" width="0.0192%" height="15" fill="rgb(235,127,16)" fg:x="62994" fg:w="21"/><text x="57.7158%" y="767.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (1,436 samples, 1.31%)</title><rect x="56.1777%" y="821" width="1.3100%" height="15" fill="rgb(250,192,54)" fg:x="61582" fg:w="1436"/><text x="56.4277%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (98 samples, 0.09%)</title><rect x="57.3983%" y="805" width="0.0894%" height="15" fill="rgb(218,98,20)" fg:x="62920" fg:w="98"/><text x="57.6483%" y="815.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (93 samples, 0.08%)</title><rect x="57.4028%" y="789" width="0.0848%" height="15" fill="rgb(230,176,47)" fg:x="62925" fg:w="93"/><text x="57.6528%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (41 samples, 0.04%)</title><rect x="57.4877%" y="821" width="0.0374%" height="15" fill="rgb(244,2,33)" fg:x="63018" fg:w="41"/><text x="57.7377%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (41 samples, 0.04%)</title><rect x="57.4877%" y="805" width="0.0374%" height="15" fill="rgb(231,100,17)" fg:x="63018" fg:w="41"/><text x="57.7377%" y="815.50"></text></g><g><title>event_listener::List::notify (1,515 samples, 1.38%)</title><rect x="56.1512%" y="885" width="1.3820%" height="15" fill="rgb(245,23,12)" fg:x="61553" fg:w="1515"/><text x="56.4012%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (1,500 samples, 1.37%)</title><rect x="56.1649%" y="869" width="1.3684%" height="15" fill="rgb(249,55,22)" fg:x="61568" fg:w="1500"/><text x="56.4149%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (1,500 samples, 1.37%)</title><rect x="56.1649%" y="853" width="1.3684%" height="15" fill="rgb(207,134,9)" fg:x="61568" fg:w="1500"/><text x="56.4149%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1,487 samples, 1.36%)</title><rect x="56.1768%" y="837" width="1.3565%" height="15" fill="rgb(218,134,0)" fg:x="61581" fg:w="1487"/><text x="56.4268%" y="847.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (3,943 samples, 3.60%)</title><rect x="54.4919%" y="917" width="3.5970%" height="15" fill="rgb(213,212,33)" fg:x="59734" fg:w="3943"/><text x="54.7419%" y="927.50">asyn..</text></g><g><title>event_listener::Event::notify (3,120 samples, 2.85%)</title><rect x="55.2427%" y="901" width="2.8462%" height="15" fill="rgb(252,106,18)" fg:x="60557" fg:w="3120"/><text x="55.4927%" y="911.50">ev..</text></g><g><title>event_listener::full_fence (609 samples, 0.56%)</title><rect x="57.5333%" y="885" width="0.5556%" height="15" fill="rgb(208,126,42)" fg:x="63068" fg:w="609"/><text x="57.7833%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (598 samples, 0.55%)</title><rect x="57.5433%" y="869" width="0.5455%" height="15" fill="rgb(246,175,29)" fg:x="63079" fg:w="598"/><text x="57.7933%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (598 samples, 0.55%)</title><rect x="57.5433%" y="853" width="0.5455%" height="15" fill="rgb(215,13,50)" fg:x="63079" fg:w="598"/><text x="57.7933%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (17 samples, 0.02%)</title><rect x="58.0889%" y="917" width="0.0155%" height="15" fill="rgb(216,172,15)" fg:x="63677" fg:w="17"/><text x="58.3389%" y="927.50"></text></g><g><title>event_listener::Event::listen (11 samples, 0.01%)</title><rect x="58.1117%" y="917" width="0.0100%" height="15" fill="rgb(212,103,13)" fg:x="63702" fg:w="11"/><text x="58.3617%" y="927.50"></text></g><g><title>__x64_sys_futex (15 samples, 0.01%)</title><rect x="58.1354%" y="773" width="0.0137%" height="15" fill="rgb(231,171,36)" fg:x="63728" fg:w="15"/><text x="58.3854%" y="783.50"></text></g><g><title>do_futex (15 samples, 0.01%)</title><rect x="58.1354%" y="757" width="0.0137%" height="15" fill="rgb(250,123,20)" fg:x="63728" fg:w="15"/><text x="58.3854%" y="767.50"></text></g><g><title>futex_wait (14 samples, 0.01%)</title><rect x="58.1363%" y="741" width="0.0128%" height="15" fill="rgb(212,53,50)" fg:x="63729" fg:w="14"/><text x="58.3863%" y="751.50"></text></g><g><title>__GI___lll_lock_wait (18 samples, 0.02%)</title><rect x="58.1345%" y="821" width="0.0164%" height="15" fill="rgb(243,54,12)" fg:x="63727" fg:w="18"/><text x="58.3845%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.02%)</title><rect x="58.1354%" y="805" width="0.0155%" height="15" fill="rgb(234,101,34)" fg:x="63728" fg:w="17"/><text x="58.3854%" y="815.50"></text></g><g><title>do_syscall_64 (17 samples, 0.02%)</title><rect x="58.1354%" y="789" width="0.0155%" height="15" fill="rgb(254,67,22)" fg:x="63728" fg:w="17"/><text x="58.3854%" y="799.50"></text></g><g><title>event_listener::Inner::lock (22 samples, 0.02%)</title><rect x="58.1317%" y="901" width="0.0201%" height="15" fill="rgb(250,35,47)" fg:x="63724" fg:w="22"/><text x="58.3817%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="58.1317%" y="885" width="0.0201%" height="15" fill="rgb(226,126,38)" fg:x="63724" fg:w="22"/><text x="58.3817%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.02%)</title><rect x="58.1326%" y="869" width="0.0192%" height="15" fill="rgb(216,138,53)" fg:x="63725" fg:w="21"/><text x="58.3826%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (21 samples, 0.02%)</title><rect x="58.1326%" y="853" width="0.0192%" height="15" fill="rgb(246,199,43)" fg:x="63725" fg:w="21"/><text x="58.3826%" y="863.50"></text></g><g><title>___pthread_mutex_lock (21 samples, 0.02%)</title><rect x="58.1326%" y="837" width="0.0192%" height="15" fill="rgb(232,125,11)" fg:x="63725" fg:w="21"/><text x="58.3826%" y="847.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4,244 samples, 3.87%)</title><rect x="54.4289%" y="933" width="3.8716%" height="15" fill="rgb(218,219,45)" fg:x="59665" fg:w="4244"/><text x="54.6789%" y="943.50">&lt;asy..</text></g><g><title>event_listener::Event::notify (196 samples, 0.18%)</title><rect x="58.1217%" y="917" width="0.1788%" height="15" fill="rgb(216,102,54)" fg:x="63713" fg:w="196"/><text x="58.3717%" y="927.50"></text></g><g><title>event_listener::full_fence (163 samples, 0.15%)</title><rect x="58.1518%" y="901" width="0.1487%" height="15" fill="rgb(250,228,7)" fg:x="63746" fg:w="163"/><text x="58.4018%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (160 samples, 0.15%)</title><rect x="58.1545%" y="885" width="0.1460%" height="15" fill="rgb(226,125,25)" fg:x="63749" fg:w="160"/><text x="58.4045%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (160 samples, 0.15%)</title><rect x="58.1545%" y="869" width="0.1460%" height="15" fill="rgb(224,165,27)" fg:x="63749" fg:w="160"/><text x="58.4045%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="58.3124%" y="885" width="0.0100%" height="15" fill="rgb(233,86,3)" fg:x="63922" fg:w="11"/><text x="58.5624%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,448 samples, 4.06%)</title><rect x="54.2666%" y="997" width="4.0577%" height="15" fill="rgb(228,116,20)" fg:x="59487" fg:w="4448"/><text x="54.5166%" y="1007.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (4,448 samples, 4.06%)</title><rect x="54.2666%" y="981" width="4.0577%" height="15" fill="rgb(209,192,17)" fg:x="59487" fg:w="4448"/><text x="54.5166%" y="991.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,448 samples, 4.06%)</title><rect x="54.2666%" y="965" width="4.0577%" height="15" fill="rgb(224,88,34)" fg:x="59487" fg:w="4448"/><text x="54.5166%" y="975.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (4,322 samples, 3.94%)</title><rect x="54.3815%" y="949" width="3.9427%" height="15" fill="rgb(233,38,6)" fg:x="59613" fg:w="4322"/><text x="54.6315%" y="959.50">trem..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="58.3005%" y="933" width="0.0237%" height="15" fill="rgb(212,59,30)" fg:x="63909" fg:w="26"/><text x="58.5505%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (15 samples, 0.01%)</title><rect x="58.3105%" y="917" width="0.0137%" height="15" fill="rgb(213,80,3)" fg:x="63920" fg:w="15"/><text x="58.5605%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (13 samples, 0.01%)</title><rect x="58.3124%" y="901" width="0.0119%" height="15" fill="rgb(251,178,7)" fg:x="63922" fg:w="13"/><text x="58.5624%" y="911.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="58.9582%" y="981" width="0.0146%" height="15" fill="rgb(213,154,26)" fg:x="64630" fg:w="16"/><text x="59.2082%" y="991.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="59.5220%" y="677" width="0.0109%" height="15" fill="rgb(238,165,49)" fg:x="65248" fg:w="12"/><text x="59.7720%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="59.5421%" y="661" width="0.0338%" height="15" fill="rgb(248,91,46)" fg:x="65270" fg:w="37"/><text x="59.7921%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (37 samples, 0.03%)</title><rect x="59.5421%" y="645" width="0.0338%" height="15" fill="rgb(244,21,52)" fg:x="65270" fg:w="37"/><text x="59.7921%" y="655.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (29 samples, 0.03%)</title><rect x="59.5494%" y="629" width="0.0265%" height="15" fill="rgb(247,122,20)" fg:x="65278" fg:w="29"/><text x="59.7994%" y="639.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (25 samples, 0.02%)</title><rect x="59.5530%" y="613" width="0.0228%" height="15" fill="rgb(218,27,9)" fg:x="65282" fg:w="25"/><text x="59.8030%" y="623.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="59.5530%" y="597" width="0.0228%" height="15" fill="rgb(246,7,6)" fg:x="65282" fg:w="25"/><text x="59.8030%" y="607.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="59.5530%" y="581" width="0.0228%" height="15" fill="rgb(227,135,54)" fg:x="65282" fg:w="25"/><text x="59.8030%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (208 samples, 0.19%)</title><rect x="59.5202%" y="709" width="0.1897%" height="15" fill="rgb(247,14,11)" fg:x="65246" fg:w="208"/><text x="59.7702%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (206 samples, 0.19%)</title><rect x="59.5220%" y="693" width="0.1879%" height="15" fill="rgb(206,149,34)" fg:x="65248" fg:w="206"/><text x="59.7720%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (189 samples, 0.17%)</title><rect x="59.5375%" y="677" width="0.1724%" height="15" fill="rgb(227,228,4)" fg:x="65265" fg:w="189"/><text x="59.7875%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::take (137 samples, 0.12%)</title><rect x="59.5849%" y="661" width="0.1250%" height="15" fill="rgb(238,218,28)" fg:x="65317" fg:w="137"/><text x="59.8349%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (137 samples, 0.12%)</title><rect x="59.5849%" y="645" width="0.1250%" height="15" fill="rgb(252,86,40)" fg:x="65317" fg:w="137"/><text x="59.8349%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (243 samples, 0.22%)</title><rect x="59.4901%" y="821" width="0.2217%" height="15" fill="rgb(251,225,11)" fg:x="65213" fg:w="243"/><text x="59.7401%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (243 samples, 0.22%)</title><rect x="59.4901%" y="805" width="0.2217%" height="15" fill="rgb(206,46,49)" fg:x="65213" fg:w="243"/><text x="59.7401%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (243 samples, 0.22%)</title><rect x="59.4901%" y="789" width="0.2217%" height="15" fill="rgb(245,128,24)" fg:x="65213" fg:w="243"/><text x="59.7401%" y="799.50"></text></g><g><title>alloc::alloc::alloc (236 samples, 0.22%)</title><rect x="59.4964%" y="773" width="0.2153%" height="15" fill="rgb(219,177,34)" fg:x="65220" fg:w="236"/><text x="59.7464%" y="783.50"></text></g><g><title>__rg_alloc (236 samples, 0.22%)</title><rect x="59.4964%" y="757" width="0.2153%" height="15" fill="rgb(218,60,48)" fg:x="65220" fg:w="236"/><text x="59.7464%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (236 samples, 0.22%)</title><rect x="59.4964%" y="741" width="0.2153%" height="15" fill="rgb(221,11,5)" fg:x="65220" fg:w="236"/><text x="59.7464%" y="751.50"></text></g><g><title>rust_alloc (224 samples, 0.20%)</title><rect x="59.5074%" y="725" width="0.2043%" height="15" fill="rgb(220,148,13)" fg:x="65232" fg:w="224"/><text x="59.7574%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (245 samples, 0.22%)</title><rect x="59.4901%" y="853" width="0.2235%" height="15" fill="rgb(210,16,3)" fg:x="65213" fg:w="245"/><text x="59.7401%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (245 samples, 0.22%)</title><rect x="59.4901%" y="837" width="0.2235%" height="15" fill="rgb(236,80,2)" fg:x="65213" fg:w="245"/><text x="59.7401%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (311 samples, 0.28%)</title><rect x="59.4855%" y="949" width="0.2837%" height="15" fill="rgb(239,129,19)" fg:x="65208" fg:w="311"/><text x="59.7355%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (306 samples, 0.28%)</title><rect x="59.4901%" y="933" width="0.2791%" height="15" fill="rgb(220,106,35)" fg:x="65213" fg:w="306"/><text x="59.7401%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (306 samples, 0.28%)</title><rect x="59.4901%" y="917" width="0.2791%" height="15" fill="rgb(252,139,45)" fg:x="65213" fg:w="306"/><text x="59.7401%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (306 samples, 0.28%)</title><rect x="59.4901%" y="901" width="0.2791%" height="15" fill="rgb(229,8,36)" fg:x="65213" fg:w="306"/><text x="59.7401%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (306 samples, 0.28%)</title><rect x="59.4901%" y="885" width="0.2791%" height="15" fill="rgb(230,126,33)" fg:x="65213" fg:w="306"/><text x="59.7401%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (306 samples, 0.28%)</title><rect x="59.4901%" y="869" width="0.2791%" height="15" fill="rgb(239,140,21)" fg:x="65213" fg:w="306"/><text x="59.7401%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (61 samples, 0.06%)</title><rect x="59.7136%" y="853" width="0.0556%" height="15" fill="rgb(254,104,9)" fg:x="65458" fg:w="61"/><text x="59.9636%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (61 samples, 0.06%)</title><rect x="59.7136%" y="837" width="0.0556%" height="15" fill="rgb(239,52,14)" fg:x="65458" fg:w="61"/><text x="59.9636%" y="847.50"></text></g><g><title>__memcpy_avx_unaligned_erms (53 samples, 0.05%)</title><rect x="59.7209%" y="821" width="0.0483%" height="15" fill="rgb(208,227,44)" fg:x="65466" fg:w="53"/><text x="59.9709%" y="831.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (346 samples, 0.32%)</title><rect x="59.4600%" y="965" width="0.3156%" height="15" fill="rgb(246,18,19)" fg:x="65180" fg:w="346"/><text x="59.7100%" y="975.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (32 samples, 0.03%)</title><rect x="59.7902%" y="949" width="0.0292%" height="15" fill="rgb(235,228,25)" fg:x="65542" fg:w="32"/><text x="60.0402%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="59.8495%" y="565" width="0.0429%" height="15" fill="rgb(240,156,20)" fg:x="65607" fg:w="47"/><text x="60.0995%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (47 samples, 0.04%)</title><rect x="59.8495%" y="549" width="0.0429%" height="15" fill="rgb(224,8,20)" fg:x="65607" fg:w="47"/><text x="60.0995%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (45 samples, 0.04%)</title><rect x="59.8513%" y="533" width="0.0411%" height="15" fill="rgb(214,12,52)" fg:x="65609" fg:w="45"/><text x="60.1013%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (34 samples, 0.03%)</title><rect x="59.8613%" y="517" width="0.0310%" height="15" fill="rgb(211,220,47)" fg:x="65620" fg:w="34"/><text x="60.1113%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="59.8613%" y="501" width="0.0310%" height="15" fill="rgb(250,173,5)" fg:x="65620" fg:w="34"/><text x="60.1113%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="59.8613%" y="485" width="0.0310%" height="15" fill="rgb(250,125,52)" fg:x="65620" fg:w="34"/><text x="60.1113%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="59.8960%" y="565" width="0.0100%" height="15" fill="rgb(209,133,18)" fg:x="65658" fg:w="11"/><text x="60.1460%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="59.8960%" y="549" width="0.0100%" height="15" fill="rgb(216,173,22)" fg:x="65658" fg:w="11"/><text x="60.1460%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="59.8960%" y="533" width="0.0100%" height="15" fill="rgb(205,3,22)" fg:x="65658" fg:w="11"/><text x="60.1460%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="59.8960%" y="517" width="0.0100%" height="15" fill="rgb(248,22,20)" fg:x="65658" fg:w="11"/><text x="60.1460%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (11 samples, 0.01%)</title><rect x="59.8960%" y="501" width="0.0100%" height="15" fill="rgb(233,6,29)" fg:x="65658" fg:w="11"/><text x="60.1460%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.14%)</title><rect x="59.8404%" y="613" width="0.1359%" height="15" fill="rgb(240,22,54)" fg:x="65597" fg:w="149"/><text x="60.0904%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.14%)</title><rect x="59.8404%" y="597" width="0.1359%" height="15" fill="rgb(231,133,32)" fg:x="65597" fg:w="149"/><text x="60.0904%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (141 samples, 0.13%)</title><rect x="59.8477%" y="581" width="0.1286%" height="15" fill="rgb(248,193,4)" fg:x="65605" fg:w="141"/><text x="60.0977%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (76 samples, 0.07%)</title><rect x="59.9070%" y="565" width="0.0693%" height="15" fill="rgb(211,178,46)" fg:x="65670" fg:w="76"/><text x="60.1570%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (76 samples, 0.07%)</title><rect x="59.9070%" y="549" width="0.0693%" height="15" fill="rgb(224,5,42)" fg:x="65670" fg:w="76"/><text x="60.1570%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (182 samples, 0.17%)</title><rect x="59.8212%" y="757" width="0.1660%" height="15" fill="rgb(239,176,25)" fg:x="65576" fg:w="182"/><text x="60.0712%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (182 samples, 0.17%)</title><rect x="59.8212%" y="741" width="0.1660%" height="15" fill="rgb(245,187,50)" fg:x="65576" fg:w="182"/><text x="60.0712%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (177 samples, 0.16%)</title><rect x="59.8258%" y="725" width="0.1615%" height="15" fill="rgb(248,24,15)" fg:x="65581" fg:w="177"/><text x="60.0758%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (177 samples, 0.16%)</title><rect x="59.8258%" y="709" width="0.1615%" height="15" fill="rgb(205,166,13)" fg:x="65581" fg:w="177"/><text x="60.0758%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (177 samples, 0.16%)</title><rect x="59.8258%" y="693" width="0.1615%" height="15" fill="rgb(208,114,23)" fg:x="65581" fg:w="177"/><text x="60.0758%" y="703.50"></text></g><g><title>alloc::alloc::alloc (175 samples, 0.16%)</title><rect x="59.8276%" y="677" width="0.1596%" height="15" fill="rgb(239,127,18)" fg:x="65583" fg:w="175"/><text x="60.0776%" y="687.50"></text></g><g><title>__rg_alloc (175 samples, 0.16%)</title><rect x="59.8276%" y="661" width="0.1596%" height="15" fill="rgb(219,154,28)" fg:x="65583" fg:w="175"/><text x="60.0776%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (175 samples, 0.16%)</title><rect x="59.8276%" y="645" width="0.1596%" height="15" fill="rgb(225,157,23)" fg:x="65583" fg:w="175"/><text x="60.0776%" y="655.50"></text></g><g><title>rust_alloc (166 samples, 0.15%)</title><rect x="59.8358%" y="629" width="0.1514%" height="15" fill="rgb(219,8,6)" fg:x="65592" fg:w="166"/><text x="60.0858%" y="639.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="59.9763%" y="613" width="0.0109%" height="15" fill="rgb(212,47,6)" fg:x="65746" fg:w="12"/><text x="60.2263%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (223 samples, 0.20%)</title><rect x="59.8194%" y="869" width="0.2034%" height="15" fill="rgb(224,190,4)" fg:x="65574" fg:w="223"/><text x="60.0694%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (223 samples, 0.20%)</title><rect x="59.8194%" y="853" width="0.2034%" height="15" fill="rgb(239,183,29)" fg:x="65574" fg:w="223"/><text x="60.0694%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (221 samples, 0.20%)</title><rect x="59.8212%" y="837" width="0.2016%" height="15" fill="rgb(213,57,7)" fg:x="65576" fg:w="221"/><text x="60.0712%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (221 samples, 0.20%)</title><rect x="59.8212%" y="821" width="0.2016%" height="15" fill="rgb(216,148,1)" fg:x="65576" fg:w="221"/><text x="60.0712%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (221 samples, 0.20%)</title><rect x="59.8212%" y="805" width="0.2016%" height="15" fill="rgb(236,182,29)" fg:x="65576" fg:w="221"/><text x="60.0712%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (221 samples, 0.20%)</title><rect x="59.8212%" y="789" width="0.2016%" height="15" fill="rgb(244,120,48)" fg:x="65576" fg:w="221"/><text x="60.0712%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (221 samples, 0.20%)</title><rect x="59.8212%" y="773" width="0.2016%" height="15" fill="rgb(206,71,34)" fg:x="65576" fg:w="221"/><text x="60.0712%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (39 samples, 0.04%)</title><rect x="59.9872%" y="757" width="0.0356%" height="15" fill="rgb(242,32,6)" fg:x="65758" fg:w="39"/><text x="60.2372%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.03%)</title><rect x="59.9918%" y="741" width="0.0310%" height="15" fill="rgb(241,35,3)" fg:x="65763" fg:w="34"/><text x="60.2418%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (28 samples, 0.03%)</title><rect x="59.9973%" y="725" width="0.0255%" height="15" fill="rgb(222,62,19)" fg:x="65769" fg:w="28"/><text x="60.2473%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="60.0629%" y="677" width="0.0383%" height="15" fill="rgb(223,110,41)" fg:x="65841" fg:w="42"/><text x="60.3129%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (42 samples, 0.04%)</title><rect x="60.0629%" y="661" width="0.0383%" height="15" fill="rgb(208,224,4)" fg:x="65841" fg:w="42"/><text x="60.3129%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (34 samples, 0.03%)</title><rect x="60.0702%" y="645" width="0.0310%" height="15" fill="rgb(241,137,19)" fg:x="65849" fg:w="34"/><text x="60.3202%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (27 samples, 0.02%)</title><rect x="60.0766%" y="629" width="0.0246%" height="15" fill="rgb(244,24,17)" fg:x="65856" fg:w="27"/><text x="60.3266%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (27 samples, 0.02%)</title><rect x="60.0766%" y="613" width="0.0246%" height="15" fill="rgb(245,178,49)" fg:x="65856" fg:w="27"/><text x="60.3266%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (27 samples, 0.02%)</title><rect x="60.0766%" y="597" width="0.0246%" height="15" fill="rgb(219,160,38)" fg:x="65856" fg:w="27"/><text x="60.3266%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::empty (11 samples, 0.01%)</title><rect x="60.1058%" y="677" width="0.0100%" height="15" fill="rgb(228,137,14)" fg:x="65888" fg:w="11"/><text x="60.3558%" y="687.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (11 samples, 0.01%)</title><rect x="60.1058%" y="661" width="0.0100%" height="15" fill="rgb(237,134,11)" fg:x="65888" fg:w="11"/><text x="60.3558%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (154 samples, 0.14%)</title><rect x="60.0566%" y="725" width="0.1405%" height="15" fill="rgb(211,126,44)" fg:x="65834" fg:w="154"/><text x="60.3066%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (148 samples, 0.14%)</title><rect x="60.0620%" y="709" width="0.1350%" height="15" fill="rgb(226,171,33)" fg:x="65840" fg:w="148"/><text x="60.3120%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (148 samples, 0.14%)</title><rect x="60.0620%" y="693" width="0.1350%" height="15" fill="rgb(253,99,13)" fg:x="65840" fg:w="148"/><text x="60.3120%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (89 samples, 0.08%)</title><rect x="60.1159%" y="677" width="0.0812%" height="15" fill="rgb(244,48,7)" fg:x="65899" fg:w="89"/><text x="60.3659%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (89 samples, 0.08%)</title><rect x="60.1159%" y="661" width="0.0812%" height="15" fill="rgb(244,217,54)" fg:x="65899" fg:w="89"/><text x="60.3659%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (179 samples, 0.16%)</title><rect x="60.0429%" y="821" width="0.1633%" height="15" fill="rgb(224,15,18)" fg:x="65819" fg:w="179"/><text x="60.2929%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (179 samples, 0.16%)</title><rect x="60.0429%" y="805" width="0.1633%" height="15" fill="rgb(244,99,12)" fg:x="65819" fg:w="179"/><text x="60.2929%" y="815.50"></text></g><g><title>alloc::alloc::alloc (169 samples, 0.15%)</title><rect x="60.0520%" y="789" width="0.1542%" height="15" fill="rgb(233,226,8)" fg:x="65829" fg:w="169"/><text x="60.3020%" y="799.50"></text></g><g><title>__rg_alloc (169 samples, 0.15%)</title><rect x="60.0520%" y="773" width="0.1542%" height="15" fill="rgb(229,211,3)" fg:x="65829" fg:w="169"/><text x="60.3020%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (169 samples, 0.15%)</title><rect x="60.0520%" y="757" width="0.1542%" height="15" fill="rgb(216,140,21)" fg:x="65829" fg:w="169"/><text x="60.3020%" y="767.50"></text></g><g><title>rust_alloc (164 samples, 0.15%)</title><rect x="60.0566%" y="741" width="0.1496%" height="15" fill="rgb(234,122,30)" fg:x="65834" fg:w="164"/><text x="60.3066%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (202 samples, 0.18%)</title><rect x="60.0310%" y="869" width="0.1843%" height="15" fill="rgb(236,25,46)" fg:x="65806" fg:w="202"/><text x="60.2810%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (189 samples, 0.17%)</title><rect x="60.0429%" y="853" width="0.1724%" height="15" fill="rgb(217,52,54)" fg:x="65819" fg:w="189"/><text x="60.2929%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (189 samples, 0.17%)</title><rect x="60.0429%" y="837" width="0.1724%" height="15" fill="rgb(222,29,26)" fg:x="65819" fg:w="189"/><text x="60.2929%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (443 samples, 0.40%)</title><rect x="59.8194%" y="885" width="0.4041%" height="15" fill="rgb(216,177,29)" fg:x="65574" fg:w="443"/><text x="60.0694%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (507 samples, 0.46%)</title><rect x="59.7756%" y="965" width="0.4625%" height="15" fill="rgb(247,136,51)" fg:x="65526" fg:w="507"/><text x="60.0256%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (459 samples, 0.42%)</title><rect x="59.8194%" y="949" width="0.4187%" height="15" fill="rgb(231,47,47)" fg:x="65574" fg:w="459"/><text x="60.0694%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (459 samples, 0.42%)</title><rect x="59.8194%" y="933" width="0.4187%" height="15" fill="rgb(211,192,36)" fg:x="65574" fg:w="459"/><text x="60.0694%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (459 samples, 0.42%)</title><rect x="59.8194%" y="917" width="0.4187%" height="15" fill="rgb(229,156,32)" fg:x="65574" fg:w="459"/><text x="60.0694%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (459 samples, 0.42%)</title><rect x="59.8194%" y="901" width="0.4187%" height="15" fill="rgb(248,213,20)" fg:x="65574" fg:w="459"/><text x="60.0694%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (16 samples, 0.01%)</title><rect x="60.2235%" y="885" width="0.0146%" height="15" fill="rgb(217,64,7)" fg:x="66017" fg:w="16"/><text x="60.4735%" y="895.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,385 samples, 1.26%)</title><rect x="58.9765%" y="981" width="1.2635%" height="15" fill="rgb(232,142,8)" fg:x="64650" fg:w="1385"/><text x="59.2265%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (143 samples, 0.13%)</title><rect x="60.2399%" y="981" width="0.1305%" height="15" fill="rgb(224,92,44)" fg:x="66035" fg:w="143"/><text x="60.4899%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (317 samples, 0.29%)</title><rect x="60.3740%" y="981" width="0.2892%" height="15" fill="rgb(214,169,17)" fg:x="66182" fg:w="317"/><text x="60.6240%" y="991.50"></text></g><g><title>core::ptr::write (292 samples, 0.27%)</title><rect x="60.3968%" y="965" width="0.2664%" height="15" fill="rgb(210,59,37)" fg:x="66207" fg:w="292"/><text x="60.6468%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (286 samples, 0.26%)</title><rect x="60.4023%" y="949" width="0.2609%" height="15" fill="rgb(214,116,48)" fg:x="66213" fg:w="286"/><text x="60.6523%" y="959.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="60.7143%" y="661" width="0.0164%" height="15" fill="rgb(244,191,6)" fg:x="66555" fg:w="18"/><text x="60.9643%" y="671.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="60.7143%" y="645" width="0.0164%" height="15" fill="rgb(241,50,52)" fg:x="66555" fg:w="18"/><text x="60.9643%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (39 samples, 0.04%)</title><rect x="60.7070%" y="709" width="0.0356%" height="15" fill="rgb(236,75,39)" fg:x="66547" fg:w="39"/><text x="60.9570%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (39 samples, 0.04%)</title><rect x="60.7070%" y="693" width="0.0356%" height="15" fill="rgb(236,99,0)" fg:x="66547" fg:w="39"/><text x="60.9570%" y="703.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (34 samples, 0.03%)</title><rect x="60.7115%" y="677" width="0.0310%" height="15" fill="rgb(207,202,15)" fg:x="66552" fg:w="34"/><text x="60.9615%" y="687.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="60.7307%" y="661" width="0.0119%" height="15" fill="rgb(233,207,14)" fg:x="66573" fg:w="13"/><text x="60.9807%" y="671.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="60.7307%" y="645" width="0.0119%" height="15" fill="rgb(226,27,51)" fg:x="66573" fg:w="13"/><text x="60.9807%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (55 samples, 0.05%)</title><rect x="60.7070%" y="725" width="0.0502%" height="15" fill="rgb(206,104,42)" fg:x="66547" fg:w="55"/><text x="60.9570%" y="735.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (16 samples, 0.01%)</title><rect x="60.7426%" y="709" width="0.0146%" height="15" fill="rgb(212,225,4)" fg:x="66586" fg:w="16"/><text x="60.9926%" y="719.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (16 samples, 0.01%)</title><rect x="60.7426%" y="693" width="0.0146%" height="15" fill="rgb(233,96,42)" fg:x="66586" fg:w="16"/><text x="60.9926%" y="703.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (16 samples, 0.01%)</title><rect x="60.7426%" y="677" width="0.0146%" height="15" fill="rgb(229,21,32)" fg:x="66586" fg:w="16"/><text x="60.9926%" y="687.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.01%)</title><rect x="60.7426%" y="661" width="0.0146%" height="15" fill="rgb(226,216,24)" fg:x="66586" fg:w="16"/><text x="60.9926%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (73 samples, 0.07%)</title><rect x="60.6970%" y="741" width="0.0666%" height="15" fill="rgb(221,163,17)" fg:x="66536" fg:w="73"/><text x="60.9470%" y="751.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (53 samples, 0.05%)</title><rect x="60.7918%" y="725" width="0.0483%" height="15" fill="rgb(216,216,42)" fg:x="66640" fg:w="53"/><text x="61.0418%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (504 samples, 0.46%)</title><rect x="60.6970%" y="773" width="0.4598%" height="15" fill="rgb(240,118,7)" fg:x="66536" fg:w="504"/><text x="60.9470%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (504 samples, 0.46%)</title><rect x="60.6970%" y="757" width="0.4598%" height="15" fill="rgb(221,67,37)" fg:x="66536" fg:w="504"/><text x="60.9470%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (431 samples, 0.39%)</title><rect x="60.7635%" y="741" width="0.3932%" height="15" fill="rgb(241,32,44)" fg:x="66609" fg:w="431"/><text x="61.0135%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (347 samples, 0.32%)</title><rect x="60.8402%" y="725" width="0.3165%" height="15" fill="rgb(235,204,43)" fg:x="66693" fg:w="347"/><text x="61.0902%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (347 samples, 0.32%)</title><rect x="60.8402%" y="709" width="0.3165%" height="15" fill="rgb(213,116,10)" fg:x="66693" fg:w="347"/><text x="61.0902%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (347 samples, 0.32%)</title><rect x="60.8402%" y="693" width="0.3165%" height="15" fill="rgb(239,15,48)" fg:x="66693" fg:w="347"/><text x="61.0902%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (21 samples, 0.02%)</title><rect x="61.1677%" y="741" width="0.0192%" height="15" fill="rgb(207,123,36)" fg:x="67052" fg:w="21"/><text x="61.4177%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (21 samples, 0.02%)</title><rect x="61.1677%" y="725" width="0.0192%" height="15" fill="rgb(209,103,30)" fg:x="67052" fg:w="21"/><text x="61.4177%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="61.1567%" y="773" width="0.0338%" height="15" fill="rgb(238,100,19)" fg:x="67040" fg:w="37"/><text x="61.4067%" y="783.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (34 samples, 0.03%)</title><rect x="61.1595%" y="757" width="0.0310%" height="15" fill="rgb(244,30,14)" fg:x="67043" fg:w="34"/><text x="61.4095%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (659 samples, 0.60%)</title><rect x="60.6668%" y="917" width="0.6012%" height="15" fill="rgb(249,174,6)" fg:x="66503" fg:w="659"/><text x="60.9168%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (659 samples, 0.60%)</title><rect x="60.6668%" y="901" width="0.6012%" height="15" fill="rgb(235,213,41)" fg:x="66503" fg:w="659"/><text x="60.9168%" y="911.50"></text></g><g><title>alloc::alloc::alloc (653 samples, 0.60%)</title><rect x="60.6723%" y="885" width="0.5957%" height="15" fill="rgb(213,118,6)" fg:x="66509" fg:w="653"/><text x="60.9223%" y="895.50"></text></g><g><title>__rg_alloc (653 samples, 0.60%)</title><rect x="60.6723%" y="869" width="0.5957%" height="15" fill="rgb(235,44,51)" fg:x="66509" fg:w="653"/><text x="60.9223%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (653 samples, 0.60%)</title><rect x="60.6723%" y="853" width="0.5957%" height="15" fill="rgb(217,9,53)" fg:x="66509" fg:w="653"/><text x="60.9223%" y="863.50"></text></g><g><title>rust_alloc (649 samples, 0.59%)</title><rect x="60.6760%" y="837" width="0.5920%" height="15" fill="rgb(237,172,34)" fg:x="66513" fg:w="649"/><text x="60.9260%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (635 samples, 0.58%)</title><rect x="60.6887%" y="821" width="0.5793%" height="15" fill="rgb(206,206,11)" fg:x="66527" fg:w="635"/><text x="60.9387%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (635 samples, 0.58%)</title><rect x="60.6887%" y="805" width="0.5793%" height="15" fill="rgb(214,149,29)" fg:x="66527" fg:w="635"/><text x="60.9387%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (632 samples, 0.58%)</title><rect x="60.6915%" y="789" width="0.5765%" height="15" fill="rgb(208,123,3)" fg:x="66530" fg:w="632"/><text x="60.9415%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::take (78 samples, 0.07%)</title><rect x="61.1969%" y="773" width="0.0712%" height="15" fill="rgb(229,126,4)" fg:x="67084" fg:w="78"/><text x="61.4469%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (78 samples, 0.07%)</title><rect x="61.1969%" y="757" width="0.0712%" height="15" fill="rgb(222,92,36)" fg:x="67084" fg:w="78"/><text x="61.4469%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (674 samples, 0.61%)</title><rect x="60.6632%" y="981" width="0.6149%" height="15" fill="rgb(216,39,41)" fg:x="66499" fg:w="674"/><text x="60.9132%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (674 samples, 0.61%)</title><rect x="60.6632%" y="965" width="0.6149%" height="15" fill="rgb(253,127,28)" fg:x="66499" fg:w="674"/><text x="60.9132%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (670 samples, 0.61%)</title><rect x="60.6668%" y="949" width="0.6112%" height="15" fill="rgb(249,152,51)" fg:x="66503" fg:w="670"/><text x="60.9168%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (670 samples, 0.61%)</title><rect x="60.6668%" y="933" width="0.6112%" height="15" fill="rgb(209,123,42)" fg:x="66503" fg:w="670"/><text x="60.9168%" y="943.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="61.3228%" y="677" width="0.0100%" height="15" fill="rgb(241,118,22)" fg:x="67222" fg:w="11"/><text x="61.5728%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="61.3228%" y="661" width="0.0100%" height="15" fill="rgb(208,25,7)" fg:x="67222" fg:w="11"/><text x="61.5728%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (37 samples, 0.03%)</title><rect x="61.3054%" y="725" width="0.0338%" height="15" fill="rgb(243,144,39)" fg:x="67203" fg:w="37"/><text x="61.5554%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (37 samples, 0.03%)</title><rect x="61.3054%" y="709" width="0.0338%" height="15" fill="rgb(250,50,5)" fg:x="67203" fg:w="37"/><text x="61.5554%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (36 samples, 0.03%)</title><rect x="61.3063%" y="693" width="0.0328%" height="15" fill="rgb(207,67,11)" fg:x="67204" fg:w="36"/><text x="61.5563%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (52 samples, 0.05%)</title><rect x="61.2945%" y="757" width="0.0474%" height="15" fill="rgb(245,204,40)" fg:x="67191" fg:w="52"/><text x="61.5445%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (52 samples, 0.05%)</title><rect x="61.2945%" y="741" width="0.0474%" height="15" fill="rgb(238,228,24)" fg:x="67191" fg:w="52"/><text x="61.5445%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (55 samples, 0.05%)</title><rect x="61.2945%" y="789" width="0.0502%" height="15" fill="rgb(217,116,22)" fg:x="67191" fg:w="55"/><text x="61.5445%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (55 samples, 0.05%)</title><rect x="61.2945%" y="773" width="0.0502%" height="15" fill="rgb(234,98,12)" fg:x="67191" fg:w="55"/><text x="61.5445%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (64 samples, 0.06%)</title><rect x="61.2899%" y="805" width="0.0584%" height="15" fill="rgb(242,170,50)" fg:x="67186" fg:w="64"/><text x="61.5399%" y="815.50"></text></g><g><title>rust_dealloc (83 samples, 0.08%)</title><rect x="61.2817%" y="821" width="0.0757%" height="15" fill="rgb(235,7,5)" fg:x="67177" fg:w="83"/><text x="61.5317%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (89 samples, 0.08%)</title><rect x="61.2781%" y="885" width="0.0812%" height="15" fill="rgb(241,114,28)" fg:x="67173" fg:w="89"/><text x="61.5281%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (88 samples, 0.08%)</title><rect x="61.2790%" y="869" width="0.0803%" height="15" fill="rgb(246,112,42)" fg:x="67174" fg:w="88"/><text x="61.5290%" y="879.50"></text></g><g><title>__rg_dealloc (88 samples, 0.08%)</title><rect x="61.2790%" y="853" width="0.0803%" height="15" fill="rgb(248,228,14)" fg:x="67174" fg:w="88"/><text x="61.5290%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (88 samples, 0.08%)</title><rect x="61.2790%" y="837" width="0.0803%" height="15" fill="rgb(208,133,18)" fg:x="67174" fg:w="88"/><text x="61.5290%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (97 samples, 0.09%)</title><rect x="61.2781%" y="949" width="0.0885%" height="15" fill="rgb(207,35,49)" fg:x="67173" fg:w="97"/><text x="61.5281%" y="959.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.09%)</title><rect x="61.2781%" y="933" width="0.0885%" height="15" fill="rgb(205,68,36)" fg:x="67173" fg:w="97"/><text x="61.5281%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (97 samples, 0.09%)</title><rect x="61.2781%" y="917" width="0.0885%" height="15" fill="rgb(245,62,40)" fg:x="67173" fg:w="97"/><text x="61.5281%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.09%)</title><rect x="61.2781%" y="901" width="0.0885%" height="15" fill="rgb(228,27,24)" fg:x="67173" fg:w="97"/><text x="61.5281%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (99 samples, 0.09%)</title><rect x="61.2781%" y="981" width="0.0903%" height="15" fill="rgb(253,19,12)" fg:x="67173" fg:w="99"/><text x="61.5281%" y="991.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 0.09%)</title><rect x="61.2781%" y="965" width="0.0903%" height="15" fill="rgb(232,28,20)" fg:x="67173" fg:w="99"/><text x="61.5281%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (21 samples, 0.02%)</title><rect x="61.3784%" y="917" width="0.0192%" height="15" fill="rgb(218,35,51)" fg:x="67283" fg:w="21"/><text x="61.6284%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (21 samples, 0.02%)</title><rect x="61.3784%" y="901" width="0.0192%" height="15" fill="rgb(212,90,40)" fg:x="67283" fg:w="21"/><text x="61.6284%" y="911.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="61.3866%" y="885" width="0.0109%" height="15" fill="rgb(220,172,12)" fg:x="67292" fg:w="12"/><text x="61.6366%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="61.3866%" y="869" width="0.0109%" height="15" fill="rgb(226,159,20)" fg:x="67292" fg:w="12"/><text x="61.6366%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="61.3866%" y="853" width="0.0109%" height="15" fill="rgb(234,205,16)" fg:x="67292" fg:w="12"/><text x="61.6366%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="61.3866%" y="837" width="0.0109%" height="15" fill="rgb(207,9,39)" fg:x="67292" fg:w="12"/><text x="61.6366%" y="847.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (38 samples, 0.03%)</title><rect x="61.4569%" y="773" width="0.0347%" height="15" fill="rgb(249,143,15)" fg:x="67369" fg:w="38"/><text x="61.7069%" y="783.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (33 samples, 0.03%)</title><rect x="61.4614%" y="757" width="0.0301%" height="15" fill="rgb(253,133,29)" fg:x="67374" fg:w="33"/><text x="61.7114%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (79 samples, 0.07%)</title><rect x="61.4350%" y="821" width="0.0721%" height="15" fill="rgb(221,187,0)" fg:x="67345" fg:w="79"/><text x="61.6850%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (79 samples, 0.07%)</title><rect x="61.4350%" y="805" width="0.0721%" height="15" fill="rgb(205,204,26)" fg:x="67345" fg:w="79"/><text x="61.6850%" y="815.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (77 samples, 0.07%)</title><rect x="61.4368%" y="789" width="0.0702%" height="15" fill="rgb(224,68,54)" fg:x="67347" fg:w="77"/><text x="61.6868%" y="799.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (17 samples, 0.02%)</title><rect x="61.4915%" y="773" width="0.0155%" height="15" fill="rgb(209,67,4)" fg:x="67407" fg:w="17"/><text x="61.7415%" y="783.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (17 samples, 0.02%)</title><rect x="61.4915%" y="757" width="0.0155%" height="15" fill="rgb(228,229,18)" fg:x="67407" fg:w="17"/><text x="61.7415%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (112 samples, 0.10%)</title><rect x="61.4204%" y="853" width="0.1022%" height="15" fill="rgb(231,89,13)" fg:x="67329" fg:w="112"/><text x="61.6704%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (112 samples, 0.10%)</title><rect x="61.4204%" y="837" width="0.1022%" height="15" fill="rgb(210,182,18)" fg:x="67329" fg:w="112"/><text x="61.6704%" y="847.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (17 samples, 0.02%)</title><rect x="61.5070%" y="821" width="0.0155%" height="15" fill="rgb(240,105,2)" fg:x="67424" fg:w="17"/><text x="61.7570%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (117 samples, 0.11%)</title><rect x="61.4204%" y="885" width="0.1067%" height="15" fill="rgb(207,170,50)" fg:x="67329" fg:w="117"/><text x="61.6704%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (117 samples, 0.11%)</title><rect x="61.4204%" y="869" width="0.1067%" height="15" fill="rgb(232,133,24)" fg:x="67329" fg:w="117"/><text x="61.6704%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (137 samples, 0.12%)</title><rect x="61.4058%" y="901" width="0.1250%" height="15" fill="rgb(235,166,27)" fg:x="67313" fg:w="137"/><text x="61.6558%" y="911.50"></text></g><g><title>rust_dealloc (151 samples, 0.14%)</title><rect x="61.3976%" y="917" width="0.1377%" height="15" fill="rgb(209,19,13)" fg:x="67304" fg:w="151"/><text x="61.6476%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (187 samples, 0.17%)</title><rect x="61.3684%" y="965" width="0.1706%" height="15" fill="rgb(226,79,39)" fg:x="67272" fg:w="187"/><text x="61.6184%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (187 samples, 0.17%)</title><rect x="61.3684%" y="949" width="0.1706%" height="15" fill="rgb(222,163,10)" fg:x="67272" fg:w="187"/><text x="61.6184%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (187 samples, 0.17%)</title><rect x="61.3684%" y="933" width="0.1706%" height="15" fill="rgb(214,44,19)" fg:x="67272" fg:w="187"/><text x="61.6184%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (14 samples, 0.01%)</title><rect x="61.5818%" y="789" width="0.0128%" height="15" fill="rgb(210,217,13)" fg:x="67506" fg:w="14"/><text x="61.8318%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (14 samples, 0.01%)</title><rect x="61.5818%" y="773" width="0.0128%" height="15" fill="rgb(237,61,54)" fg:x="67506" fg:w="14"/><text x="61.8318%" y="783.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="61.6366%" y="645" width="0.0192%" height="15" fill="rgb(226,184,24)" fg:x="67566" fg:w="21"/><text x="61.8866%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="61.6393%" y="629" width="0.0164%" height="15" fill="rgb(223,226,4)" fg:x="67569" fg:w="18"/><text x="61.8893%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (53 samples, 0.05%)</title><rect x="61.6165%" y="693" width="0.0483%" height="15" fill="rgb(210,26,41)" fg:x="67544" fg:w="53"/><text x="61.8665%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (53 samples, 0.05%)</title><rect x="61.6165%" y="677" width="0.0483%" height="15" fill="rgb(220,221,6)" fg:x="67544" fg:w="53"/><text x="61.8665%" y="687.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (52 samples, 0.05%)</title><rect x="61.6174%" y="661" width="0.0474%" height="15" fill="rgb(225,89,49)" fg:x="67545" fg:w="52"/><text x="61.8674%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (69 samples, 0.06%)</title><rect x="61.6074%" y="725" width="0.0629%" height="15" fill="rgb(218,70,45)" fg:x="67534" fg:w="69"/><text x="61.8574%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (69 samples, 0.06%)</title><rect x="61.6074%" y="709" width="0.0629%" height="15" fill="rgb(238,166,21)" fg:x="67534" fg:w="69"/><text x="61.8574%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (72 samples, 0.07%)</title><rect x="61.6074%" y="757" width="0.0657%" height="15" fill="rgb(224,141,44)" fg:x="67534" fg:w="72"/><text x="61.8574%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (72 samples, 0.07%)</title><rect x="61.6074%" y="741" width="0.0657%" height="15" fill="rgb(230,12,49)" fg:x="67534" fg:w="72"/><text x="61.8574%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (87 samples, 0.08%)</title><rect x="61.6001%" y="773" width="0.0794%" height="15" fill="rgb(212,174,12)" fg:x="67526" fg:w="87"/><text x="61.8501%" y="783.50"></text></g><g><title>rust_dealloc (99 samples, 0.09%)</title><rect x="61.5946%" y="789" width="0.0903%" height="15" fill="rgb(246,67,9)" fg:x="67520" fg:w="99"/><text x="61.8446%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (127 samples, 0.12%)</title><rect x="61.5745%" y="805" width="0.1159%" height="15" fill="rgb(239,35,23)" fg:x="67498" fg:w="127"/><text x="61.8245%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (147 samples, 0.13%)</title><rect x="61.5572%" y="869" width="0.1341%" height="15" fill="rgb(211,167,0)" fg:x="67479" fg:w="147"/><text x="61.8072%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (144 samples, 0.13%)</title><rect x="61.5599%" y="853" width="0.1314%" height="15" fill="rgb(225,119,45)" fg:x="67482" fg:w="144"/><text x="61.8099%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (128 samples, 0.12%)</title><rect x="61.5745%" y="837" width="0.1168%" height="15" fill="rgb(210,162,6)" fg:x="67498" fg:w="128"/><text x="61.8245%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (128 samples, 0.12%)</title><rect x="61.5745%" y="821" width="0.1168%" height="15" fill="rgb(208,118,35)" fg:x="67498" fg:w="128"/><text x="61.8245%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (176 samples, 0.16%)</title><rect x="61.5417%" y="933" width="0.1606%" height="15" fill="rgb(239,4,53)" fg:x="67462" fg:w="176"/><text x="61.7917%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (168 samples, 0.15%)</title><rect x="61.5490%" y="917" width="0.1533%" height="15" fill="rgb(213,130,21)" fg:x="67470" fg:w="168"/><text x="61.7990%" y="927.50"></text></g><g><title>core::mem::drop (159 samples, 0.15%)</title><rect x="61.5572%" y="901" width="0.1450%" height="15" fill="rgb(235,148,0)" fg:x="67479" fg:w="159"/><text x="61.8072%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (159 samples, 0.15%)</title><rect x="61.5572%" y="885" width="0.1450%" height="15" fill="rgb(244,224,18)" fg:x="67479" fg:w="159"/><text x="61.8072%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (12 samples, 0.01%)</title><rect x="61.6913%" y="869" width="0.0109%" height="15" fill="rgb(211,214,4)" fg:x="67626" fg:w="12"/><text x="61.9413%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="61.6913%" y="853" width="0.0109%" height="15" fill="rgb(206,119,25)" fg:x="67626" fg:w="12"/><text x="61.9413%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="61.6913%" y="837" width="0.0109%" height="15" fill="rgb(243,93,47)" fg:x="67626" fg:w="12"/><text x="61.9413%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="61.6913%" y="821" width="0.0109%" height="15" fill="rgb(224,194,6)" fg:x="67626" fg:w="12"/><text x="61.9413%" y="831.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="61.6913%" y="805" width="0.0109%" height="15" fill="rgb(243,229,6)" fg:x="67626" fg:w="12"/><text x="61.9413%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="61.6913%" y="789" width="0.0109%" height="15" fill="rgb(207,23,50)" fg:x="67626" fg:w="12"/><text x="61.9413%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (30 samples, 0.03%)</title><rect x="61.7223%" y="837" width="0.0274%" height="15" fill="rgb(253,192,32)" fg:x="67660" fg:w="30"/><text x="61.9723%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (30 samples, 0.03%)</title><rect x="61.7223%" y="821" width="0.0274%" height="15" fill="rgb(213,21,6)" fg:x="67660" fg:w="30"/><text x="61.9723%" y="831.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (30 samples, 0.03%)</title><rect x="61.7223%" y="805" width="0.0274%" height="15" fill="rgb(243,151,13)" fg:x="67660" fg:w="30"/><text x="61.9723%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (41 samples, 0.04%)</title><rect x="61.7178%" y="869" width="0.0374%" height="15" fill="rgb(233,165,41)" fg:x="67655" fg:w="41"/><text x="61.9678%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (41 samples, 0.04%)</title><rect x="61.7178%" y="853" width="0.0374%" height="15" fill="rgb(246,176,45)" fg:x="67655" fg:w="41"/><text x="61.9678%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (55 samples, 0.05%)</title><rect x="61.7105%" y="917" width="0.0502%" height="15" fill="rgb(217,170,52)" fg:x="67647" fg:w="55"/><text x="61.9605%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (47 samples, 0.04%)</title><rect x="61.7178%" y="901" width="0.0429%" height="15" fill="rgb(214,203,54)" fg:x="67655" fg:w="47"/><text x="61.9678%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (47 samples, 0.04%)</title><rect x="61.7178%" y="885" width="0.0429%" height="15" fill="rgb(248,215,49)" fg:x="67655" fg:w="47"/><text x="61.9678%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (247 samples, 0.23%)</title><rect x="61.5390%" y="949" width="0.2253%" height="15" fill="rgb(208,46,10)" fg:x="67459" fg:w="247"/><text x="61.7890%" y="959.50"></text></g><g><title>rust_dealloc (68 samples, 0.06%)</title><rect x="61.7022%" y="933" width="0.0620%" height="15" fill="rgb(254,5,31)" fg:x="67638" fg:w="68"/><text x="61.9522%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (443 samples, 0.40%)</title><rect x="61.3684%" y="981" width="0.4041%" height="15" fill="rgb(222,104,33)" fg:x="67272" fg:w="443"/><text x="61.6184%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (256 samples, 0.23%)</title><rect x="61.5390%" y="965" width="0.2335%" height="15" fill="rgb(248,49,16)" fg:x="67459" fg:w="256"/><text x="61.7890%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (8,251 samples, 7.53%)</title><rect x="54.2666%" y="1045" width="7.5269%" height="15" fill="rgb(232,198,41)" fg:x="59487" fg:w="8251"/><text x="54.5166%" y="1055.50">tremor_run..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,251 samples, 7.53%)</title><rect x="54.2666%" y="1029" width="7.5269%" height="15" fill="rgb(214,125,3)" fg:x="59487" fg:w="8251"/><text x="54.5166%" y="1039.50">&lt;core::fut..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (8,251 samples, 7.53%)</title><rect x="54.2666%" y="1013" width="7.5269%" height="15" fill="rgb(229,220,28)" fg:x="59487" fg:w="8251"/><text x="54.5166%" y="1023.50">tremor_run..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,803 samples, 3.47%)</title><rect x="58.3242%" y="997" width="3.4693%" height="15" fill="rgb(222,64,37)" fg:x="63935" fg:w="3803"/><text x="58.5742%" y="1007.50">tre..</text></g><g><title>core::cell::Cell&lt;T&gt;::replace (162 samples, 0.15%)</title><rect x="61.9203%" y="917" width="0.1478%" height="15" fill="rgb(249,184,13)" fg:x="67877" fg:w="162"/><text x="62.1703%" y="927.50"></text></g><g><title>core::mem::replace (162 samples, 0.15%)</title><rect x="61.9203%" y="901" width="0.1478%" height="15" fill="rgb(252,176,6)" fg:x="67877" fg:w="162"/><text x="62.1703%" y="911.50"></text></g><g><title>core::ptr::read (162 samples, 0.15%)</title><rect x="61.9203%" y="885" width="0.1478%" height="15" fill="rgb(228,153,7)" fg:x="67877" fg:w="162"/><text x="62.1703%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (267 samples, 0.24%)</title><rect x="61.8710%" y="933" width="0.2436%" height="15" fill="rgb(242,193,5)" fg:x="67823" fg:w="267"/><text x="62.1210%" y="943.50"></text></g><g><title>core::mem::drop (51 samples, 0.05%)</title><rect x="62.0681%" y="917" width="0.0465%" height="15" fill="rgb(232,140,9)" fg:x="68039" fg:w="51"/><text x="62.3181%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (51 samples, 0.05%)</title><rect x="62.0681%" y="901" width="0.0465%" height="15" fill="rgb(213,222,16)" fg:x="68039" fg:w="51"/><text x="62.3181%" y="911.50"></text></g><g><title>std::sync::poison::Flag::done (15 samples, 0.01%)</title><rect x="62.1337%" y="885" width="0.0137%" height="15" fill="rgb(222,75,50)" fg:x="68111" fg:w="15"/><text x="62.3837%" y="895.50"></text></g><g><title>std::thread::panicking (15 samples, 0.01%)</title><rect x="62.1337%" y="869" width="0.0137%" height="15" fill="rgb(205,180,2)" fg:x="68111" fg:w="15"/><text x="62.3837%" y="879.50"></text></g><g><title>std::panicking::panicking (15 samples, 0.01%)</title><rect x="62.1337%" y="853" width="0.0137%" height="15" fill="rgb(216,34,7)" fg:x="68111" fg:w="15"/><text x="62.3837%" y="863.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (15 samples, 0.01%)</title><rect x="62.1337%" y="837" width="0.0137%" height="15" fill="rgb(253,16,32)" fg:x="68111" fg:w="15"/><text x="62.3837%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (239 samples, 0.22%)</title><rect x="62.1565%" y="853" width="0.2180%" height="15" fill="rgb(208,97,28)" fg:x="68136" fg:w="239"/><text x="62.4065%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (297 samples, 0.27%)</title><rect x="62.1146%" y="933" width="0.2709%" height="15" fill="rgb(225,92,11)" fg:x="68090" fg:w="297"/><text x="62.3646%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (286 samples, 0.26%)</title><rect x="62.1246%" y="917" width="0.2609%" height="15" fill="rgb(243,38,12)" fg:x="68101" fg:w="286"/><text x="62.3746%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (286 samples, 0.26%)</title><rect x="62.1246%" y="901" width="0.2609%" height="15" fill="rgb(208,139,16)" fg:x="68101" fg:w="286"/><text x="62.3746%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (261 samples, 0.24%)</title><rect x="62.1474%" y="885" width="0.2381%" height="15" fill="rgb(227,24,9)" fg:x="68126" fg:w="261"/><text x="62.3974%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (251 samples, 0.23%)</title><rect x="62.1565%" y="869" width="0.2290%" height="15" fill="rgb(206,62,11)" fg:x="68136" fg:w="251"/><text x="62.4065%" y="879.50"></text></g><g><title>___pthread_mutex_unlock (12 samples, 0.01%)</title><rect x="62.3746%" y="853" width="0.0109%" height="15" fill="rgb(228,134,27)" fg:x="68375" fg:w="12"/><text x="62.6246%" y="863.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (21 samples, 0.02%)</title><rect x="62.3955%" y="885" width="0.0192%" height="15" fill="rgb(205,55,33)" fg:x="68398" fg:w="21"/><text x="62.6455%" y="895.50"></text></g><g><title>core::task::wake::Waker::will_wake (36 samples, 0.03%)</title><rect x="62.3873%" y="933" width="0.0328%" height="15" fill="rgb(243,75,43)" fg:x="68389" fg:w="36"/><text x="62.6373%" y="943.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (36 samples, 0.03%)</title><rect x="62.3873%" y="917" width="0.0328%" height="15" fill="rgb(223,27,42)" fg:x="68389" fg:w="36"/><text x="62.6373%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (27 samples, 0.02%)</title><rect x="62.3955%" y="901" width="0.0246%" height="15" fill="rgb(232,189,33)" fg:x="68398" fg:w="27"/><text x="62.6455%" y="911.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,499 samples, 1.37%)</title><rect x="61.7935%" y="1029" width="1.3675%" height="15" fill="rgb(210,9,39)" fg:x="67738" fg:w="1499"/><text x="62.0435%" y="1039.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,499 samples, 1.37%)</title><rect x="61.7935%" y="1013" width="1.3675%" height="15" fill="rgb(242,85,26)" fg:x="67738" fg:w="1499"/><text x="62.0435%" y="1023.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,499 samples, 1.37%)</title><rect x="61.7935%" y="997" width="1.3675%" height="15" fill="rgb(248,44,4)" fg:x="67738" fg:w="1499"/><text x="62.0435%" y="1007.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,499 samples, 1.37%)</title><rect x="61.7935%" y="981" width="1.3675%" height="15" fill="rgb(250,96,46)" fg:x="67738" fg:w="1499"/><text x="62.0435%" y="991.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,499 samples, 1.37%)</title><rect x="61.7935%" y="965" width="1.3675%" height="15" fill="rgb(229,116,26)" fg:x="67738" fg:w="1499"/><text x="62.0435%" y="975.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,499 samples, 1.37%)</title><rect x="61.7935%" y="949" width="1.3675%" height="15" fill="rgb(246,94,34)" fg:x="67738" fg:w="1499"/><text x="62.0435%" y="959.50"></text></g><g><title>event_listener::Inner::lock (812 samples, 0.74%)</title><rect x="62.4202%" y="933" width="0.7407%" height="15" fill="rgb(251,73,21)" fg:x="68425" fg:w="812"/><text x="62.6702%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (805 samples, 0.73%)</title><rect x="62.4266%" y="917" width="0.7344%" height="15" fill="rgb(254,121,25)" fg:x="68432" fg:w="805"/><text x="62.6766%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (797 samples, 0.73%)</title><rect x="62.4339%" y="901" width="0.7271%" height="15" fill="rgb(215,161,49)" fg:x="68440" fg:w="797"/><text x="62.6839%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (748 samples, 0.68%)</title><rect x="62.4786%" y="885" width="0.6824%" height="15" fill="rgb(221,43,13)" fg:x="68489" fg:w="748"/><text x="62.7286%" y="895.50"></text></g><g><title>___pthread_mutex_lock (748 samples, 0.68%)</title><rect x="62.4786%" y="869" width="0.6824%" height="15" fill="rgb(249,5,37)" fg:x="68489" fg:w="748"/><text x="62.7286%" y="879.50"></text></g><g><title>__memcpy_avx_unaligned_erms (251 samples, 0.23%)</title><rect x="63.1846%" y="981" width="0.2290%" height="15" fill="rgb(226,25,44)" fg:x="69263" fg:w="251"/><text x="63.4346%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (687 samples, 0.63%)</title><rect x="63.5085%" y="965" width="0.6267%" height="15" fill="rgb(238,189,16)" fg:x="69618" fg:w="687"/><text x="63.7585%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (19 samples, 0.02%)</title><rect x="64.1352%" y="949" width="0.0173%" height="15" fill="rgb(251,186,8)" fg:x="70305" fg:w="19"/><text x="64.3852%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,501 samples, 14.14%)</title><rect x="50.0201%" y="1125" width="14.1407%" height="15" fill="rgb(254,34,31)" fg:x="54832" fg:w="15501"/><text x="50.2701%" y="1135.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15,499 samples, 14.14%)</title><rect x="50.0219%" y="1109" width="14.1388%" height="15" fill="rgb(225,215,27)" fg:x="54834" fg:w="15499"/><text x="50.2719%" y="1119.50">std::thread::local::L..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (15,499 samples, 14.14%)</title><rect x="50.0219%" y="1093" width="14.1388%" height="15" fill="rgb(221,192,48)" fg:x="54834" fg:w="15499"/><text x="50.2719%" y="1103.50">async_std::task::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (15,499 samples, 14.14%)</title><rect x="50.0219%" y="1077" width="14.1388%" height="15" fill="rgb(219,137,20)" fg:x="54834" fg:w="15499"/><text x="50.2719%" y="1087.50">&lt;async_std::task::bui..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,499 samples, 14.14%)</title><rect x="50.0219%" y="1061" width="14.1388%" height="15" fill="rgb(219,84,11)" fg:x="54834" fg:w="15499"/><text x="50.2719%" y="1071.50">&lt;core::future::from_g..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,595 samples, 2.37%)</title><rect x="61.7935%" y="1045" width="2.3673%" height="15" fill="rgb(224,10,23)" fg:x="67738" fg:w="2595"/><text x="62.0435%" y="1055.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,096 samples, 1.00%)</title><rect x="63.1609%" y="1029" width="0.9998%" height="15" fill="rgb(248,22,39)" fg:x="69237" fg:w="1096"/><text x="63.4109%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,096 samples, 1.00%)</title><rect x="63.1609%" y="1013" width="0.9998%" height="15" fill="rgb(212,154,20)" fg:x="69237" fg:w="1096"/><text x="63.4109%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,096 samples, 1.00%)</title><rect x="63.1609%" y="997" width="0.9998%" height="15" fill="rgb(236,199,50)" fg:x="69237" fg:w="1096"/><text x="63.4109%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (819 samples, 0.75%)</title><rect x="63.4136%" y="981" width="0.7471%" height="15" fill="rgb(211,9,17)" fg:x="69514" fg:w="819"/><text x="63.6636%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (28 samples, 0.03%)</title><rect x="64.1352%" y="965" width="0.0255%" height="15" fill="rgb(243,216,36)" fg:x="70305" fg:w="28"/><text x="64.3852%" y="975.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (21 samples, 0.02%)</title><rect x="64.1680%" y="1125" width="0.0192%" height="15" fill="rgb(250,2,10)" fg:x="70341" fg:w="21"/><text x="64.4180%" y="1135.50"></text></g><g><title>__fdget_pos (17 samples, 0.02%)</title><rect x="64.2136%" y="709" width="0.0155%" height="15" fill="rgb(226,50,48)" fg:x="70391" fg:w="17"/><text x="64.4636%" y="719.50"></text></g><g><title>__fget_light (17 samples, 0.02%)</title><rect x="64.2136%" y="693" width="0.0155%" height="15" fill="rgb(243,81,16)" fg:x="70391" fg:w="17"/><text x="64.4636%" y="703.50"></text></g><g><title>enqueue_task_fair (39 samples, 0.04%)</title><rect x="64.2720%" y="549" width="0.0356%" height="15" fill="rgb(250,14,2)" fg:x="70455" fg:w="39"/><text x="64.5220%" y="559.50"></text></g><g><title>enqueue_entity (23 samples, 0.02%)</title><rect x="64.2866%" y="533" width="0.0210%" height="15" fill="rgb(233,135,29)" fg:x="70471" fg:w="23"/><text x="64.5366%" y="543.50"></text></g><g><title>psi_group_change (19 samples, 0.02%)</title><rect x="64.3222%" y="533" width="0.0173%" height="15" fill="rgb(224,64,43)" fg:x="70510" fg:w="19"/><text x="64.5722%" y="543.50"></text></g><g><title>ttwu_do_activate (76 samples, 0.07%)</title><rect x="64.2711%" y="581" width="0.0693%" height="15" fill="rgb(238,84,13)" fg:x="70454" fg:w="76"/><text x="64.5211%" y="591.50"></text></g><g><title>enqueue_task (76 samples, 0.07%)</title><rect x="64.2711%" y="565" width="0.0693%" height="15" fill="rgb(253,48,26)" fg:x="70454" fg:w="76"/><text x="64.5211%" y="575.50"></text></g><g><title>psi_task_change (28 samples, 0.03%)</title><rect x="64.3149%" y="549" width="0.0255%" height="15" fill="rgb(205,223,31)" fg:x="70502" fg:w="28"/><text x="64.5649%" y="559.50"></text></g><g><title>ttwu_queue_wakelist (12 samples, 0.01%)</title><rect x="64.3459%" y="581" width="0.0109%" height="15" fill="rgb(221,41,32)" fg:x="70536" fg:w="12"/><text x="64.5959%" y="591.50"></text></g><g><title>__wake_up_common (127 samples, 0.12%)</title><rect x="64.2438%" y="629" width="0.1159%" height="15" fill="rgb(213,158,31)" fg:x="70424" fg:w="127"/><text x="64.4938%" y="639.50"></text></g><g><title>autoremove_wake_function (120 samples, 0.11%)</title><rect x="64.2501%" y="613" width="0.1095%" height="15" fill="rgb(245,126,43)" fg:x="70431" fg:w="120"/><text x="64.5001%" y="623.50"></text></g><g><title>try_to_wake_up (117 samples, 0.11%)</title><rect x="64.2529%" y="597" width="0.1067%" height="15" fill="rgb(227,7,22)" fg:x="70434" fg:w="117"/><text x="64.5029%" y="607.50"></text></g><g><title>__wake_up_common_lock (131 samples, 0.12%)</title><rect x="64.2438%" y="645" width="0.1195%" height="15" fill="rgb(252,90,44)" fg:x="70424" fg:w="131"/><text x="64.4938%" y="655.50"></text></g><g><title>_raw_read_lock_irqsave (18 samples, 0.02%)</title><rect x="64.3633%" y="645" width="0.0164%" height="15" fill="rgb(253,91,0)" fg:x="70555" fg:w="18"/><text x="64.6133%" y="655.50"></text></g><g><title>__wake_up_common (159 samples, 0.15%)</title><rect x="64.2365%" y="677" width="0.1450%" height="15" fill="rgb(252,175,49)" fg:x="70416" fg:w="159"/><text x="64.4865%" y="687.50"></text></g><g><title>ep_poll_callback (159 samples, 0.15%)</title><rect x="64.2365%" y="661" width="0.1450%" height="15" fill="rgb(246,150,1)" fg:x="70416" fg:w="159"/><text x="64.4865%" y="671.50"></text></g><g><title>eventfd_write (179 samples, 0.16%)</title><rect x="64.2310%" y="693" width="0.1633%" height="15" fill="rgb(241,192,25)" fg:x="70410" fg:w="179"/><text x="64.4810%" y="703.50"></text></g><g><title>ksys_write (202 samples, 0.18%)</title><rect x="64.2109%" y="725" width="0.1843%" height="15" fill="rgb(239,187,11)" fg:x="70388" fg:w="202"/><text x="64.4609%" y="735.50"></text></g><g><title>vfs_write (182 samples, 0.17%)</title><rect x="64.2292%" y="709" width="0.1660%" height="15" fill="rgb(218,202,51)" fg:x="70408" fg:w="182"/><text x="64.4792%" y="719.50"></text></g><g><title>syscall_exit_to_user_mode (33 samples, 0.03%)</title><rect x="64.3970%" y="725" width="0.0301%" height="15" fill="rgb(225,176,8)" fg:x="70592" fg:w="33"/><text x="64.6470%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (249 samples, 0.23%)</title><rect x="64.2036%" y="757" width="0.2271%" height="15" fill="rgb(219,122,41)" fg:x="70380" fg:w="249"/><text x="64.4536%" y="767.50"></text></g><g><title>do_syscall_64 (246 samples, 0.22%)</title><rect x="64.2063%" y="741" width="0.2244%" height="15" fill="rgb(248,140,20)" fg:x="70383" fg:w="246"/><text x="64.4563%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (264 samples, 0.24%)</title><rect x="64.1927%" y="1077" width="0.2408%" height="15" fill="rgb(245,41,37)" fg:x="70368" fg:w="264"/><text x="64.4427%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (264 samples, 0.24%)</title><rect x="64.1927%" y="1061" width="0.2408%" height="15" fill="rgb(235,82,39)" fg:x="70368" fg:w="264"/><text x="64.4427%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (264 samples, 0.24%)</title><rect x="64.1927%" y="1045" width="0.2408%" height="15" fill="rgb(230,108,42)" fg:x="70368" fg:w="264"/><text x="64.4427%" y="1055.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (264 samples, 0.24%)</title><rect x="64.1927%" y="1029" width="0.2408%" height="15" fill="rgb(215,150,50)" fg:x="70368" fg:w="264"/><text x="64.4427%" y="1039.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (264 samples, 0.24%)</title><rect x="64.1927%" y="1013" width="0.2408%" height="15" fill="rgb(233,212,5)" fg:x="70368" fg:w="264"/><text x="64.4427%" y="1023.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (264 samples, 0.24%)</title><rect x="64.1927%" y="997" width="0.2408%" height="15" fill="rgb(245,80,22)" fg:x="70368" fg:w="264"/><text x="64.4427%" y="1007.50"></text></g><g><title>event_listener::Event::notify (264 samples, 0.24%)</title><rect x="64.1927%" y="981" width="0.2408%" height="15" fill="rgb(238,129,16)" fg:x="70368" fg:w="264"/><text x="64.4427%" y="991.50"></text></g><g><title>event_listener::List::notify (261 samples, 0.24%)</title><rect x="64.1954%" y="965" width="0.2381%" height="15" fill="rgb(240,19,0)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (261 samples, 0.24%)</title><rect x="64.1954%" y="949" width="0.2381%" height="15" fill="rgb(232,42,35)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (261 samples, 0.24%)</title><rect x="64.1954%" y="933" width="0.2381%" height="15" fill="rgb(223,130,24)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (261 samples, 0.24%)</title><rect x="64.1954%" y="917" width="0.2381%" height="15" fill="rgb(237,16,22)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="927.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (261 samples, 0.24%)</title><rect x="64.1954%" y="901" width="0.2381%" height="15" fill="rgb(248,192,20)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="911.50"></text></g><g><title>async_executor::State::notify (261 samples, 0.24%)</title><rect x="64.1954%" y="885" width="0.2381%" height="15" fill="rgb(233,167,2)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (261 samples, 0.24%)</title><rect x="64.1954%" y="869" width="0.2381%" height="15" fill="rgb(252,71,44)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="879.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (261 samples, 0.24%)</title><rect x="64.1954%" y="853" width="0.2381%" height="15" fill="rgb(238,37,47)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="863.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (261 samples, 0.24%)</title><rect x="64.1954%" y="837" width="0.2381%" height="15" fill="rgb(214,202,54)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="847.50"></text></g><g><title>async_io::reactor::Reactor::notify (261 samples, 0.24%)</title><rect x="64.1954%" y="821" width="0.2381%" height="15" fill="rgb(254,165,40)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="831.50"></text></g><g><title>polling::Poller::notify (261 samples, 0.24%)</title><rect x="64.1954%" y="805" width="0.2381%" height="15" fill="rgb(246,173,38)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="815.50"></text></g><g><title>polling::epoll::Poller::notify (261 samples, 0.24%)</title><rect x="64.1954%" y="789" width="0.2381%" height="15" fill="rgb(215,3,27)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="799.50"></text></g><g><title>__GI___write (261 samples, 0.24%)</title><rect x="64.1954%" y="773" width="0.2381%" height="15" fill="rgb(239,169,51)" fg:x="70371" fg:w="261"/><text x="64.4454%" y="783.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="64.9343%" y="1029" width="0.0119%" height="15" fill="rgb(212,5,25)" fg:x="71181" fg:w="13"/><text x="65.1843%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::default::Default for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::default (11 samples, 0.01%)</title><rect x="64.9361%" y="1013" width="0.0100%" height="15" fill="rgb(243,45,17)" fg:x="71183" fg:w="11"/><text x="65.1861%" y="1023.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (12 samples, 0.01%)</title><rect x="64.9735%" y="933" width="0.0109%" height="15" fill="rgb(242,97,9)" fg:x="71224" fg:w="12"/><text x="65.2235%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (32 samples, 0.03%)</title><rect x="64.9562%" y="997" width="0.0292%" height="15" fill="rgb(228,71,31)" fg:x="71205" fg:w="32"/><text x="65.2062%" y="1007.50"></text></g><g><title>std::collections::hash::map::RandomState::new (32 samples, 0.03%)</title><rect x="64.9562%" y="981" width="0.0292%" height="15" fill="rgb(252,184,16)" fg:x="71205" fg:w="32"/><text x="65.2062%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32 samples, 0.03%)</title><rect x="64.9562%" y="965" width="0.0292%" height="15" fill="rgb(236,169,46)" fg:x="71205" fg:w="32"/><text x="65.2062%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32 samples, 0.03%)</title><rect x="64.9562%" y="949" width="0.0292%" height="15" fill="rgb(207,17,47)" fg:x="71205" fg:w="32"/><text x="65.2062%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (45 samples, 0.04%)</title><rect x="65.0201%" y="757" width="0.0411%" height="15" fill="rgb(206,201,28)" fg:x="71275" fg:w="45"/><text x="65.2701%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (45 samples, 0.04%)</title><rect x="65.0201%" y="741" width="0.0411%" height="15" fill="rgb(224,184,23)" fg:x="71275" fg:w="45"/><text x="65.2701%" y="751.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (36 samples, 0.03%)</title><rect x="65.0283%" y="725" width="0.0328%" height="15" fill="rgb(208,139,48)" fg:x="71284" fg:w="36"/><text x="65.2783%" y="735.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (33 samples, 0.03%)</title><rect x="65.0310%" y="709" width="0.0301%" height="15" fill="rgb(208,130,10)" fg:x="71287" fg:w="33"/><text x="65.2810%" y="719.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (33 samples, 0.03%)</title><rect x="65.0310%" y="693" width="0.0301%" height="15" fill="rgb(211,213,45)" fg:x="71287" fg:w="33"/><text x="65.2810%" y="703.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (33 samples, 0.03%)</title><rect x="65.0310%" y="677" width="0.0301%" height="15" fill="rgb(235,100,30)" fg:x="71287" fg:w="33"/><text x="65.2810%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="65.0639%" y="757" width="0.0228%" height="15" fill="rgb(206,144,31)" fg:x="71323" fg:w="25"/><text x="65.3139%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="65.0639%" y="741" width="0.0228%" height="15" fill="rgb(224,200,26)" fg:x="71323" fg:w="25"/><text x="65.3139%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="65.0639%" y="725" width="0.0228%" height="15" fill="rgb(247,104,53)" fg:x="71323" fg:w="25"/><text x="65.3139%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="65.0648%" y="709" width="0.0219%" height="15" fill="rgb(220,14,17)" fg:x="71324" fg:w="24"/><text x="65.3148%" y="719.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (24 samples, 0.02%)</title><rect x="65.0648%" y="693" width="0.0219%" height="15" fill="rgb(230,140,40)" fg:x="71324" fg:w="24"/><text x="65.3148%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (150 samples, 0.14%)</title><rect x="65.0109%" y="805" width="0.1368%" height="15" fill="rgb(229,2,41)" fg:x="71265" fg:w="150"/><text x="65.2609%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.14%)</title><rect x="65.0119%" y="789" width="0.1359%" height="15" fill="rgb(232,89,16)" fg:x="71266" fg:w="149"/><text x="65.2619%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (145 samples, 0.13%)</title><rect x="65.0155%" y="773" width="0.1323%" height="15" fill="rgb(247,59,52)" fg:x="71270" fg:w="145"/><text x="65.2655%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::take (64 samples, 0.06%)</title><rect x="65.0894%" y="757" width="0.0584%" height="15" fill="rgb(226,110,21)" fg:x="71351" fg:w="64"/><text x="65.3394%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (64 samples, 0.06%)</title><rect x="65.0894%" y="741" width="0.0584%" height="15" fill="rgb(224,176,43)" fg:x="71351" fg:w="64"/><text x="65.3394%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (182 samples, 0.17%)</title><rect x="64.9854%" y="933" width="0.1660%" height="15" fill="rgb(221,73,6)" fg:x="71237" fg:w="182"/><text x="65.2354%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (168 samples, 0.15%)</title><rect x="64.9982%" y="917" width="0.1533%" height="15" fill="rgb(232,78,19)" fg:x="71251" fg:w="168"/><text x="65.2482%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (168 samples, 0.15%)</title><rect x="64.9982%" y="901" width="0.1533%" height="15" fill="rgb(233,112,48)" fg:x="71251" fg:w="168"/><text x="65.2482%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (168 samples, 0.15%)</title><rect x="64.9982%" y="885" width="0.1533%" height="15" fill="rgb(243,131,47)" fg:x="71251" fg:w="168"/><text x="65.2482%" y="895.50"></text></g><g><title>alloc::alloc::alloc (168 samples, 0.15%)</title><rect x="64.9982%" y="869" width="0.1533%" height="15" fill="rgb(226,51,1)" fg:x="71251" fg:w="168"/><text x="65.2482%" y="879.50"></text></g><g><title>__rg_alloc (168 samples, 0.15%)</title><rect x="64.9982%" y="853" width="0.1533%" height="15" fill="rgb(247,58,7)" fg:x="71251" fg:w="168"/><text x="65.2482%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (168 samples, 0.15%)</title><rect x="64.9982%" y="837" width="0.1533%" height="15" fill="rgb(209,7,32)" fg:x="71251" fg:w="168"/><text x="65.2482%" y="847.50"></text></g><g><title>rust_alloc (160 samples, 0.15%)</title><rect x="65.0055%" y="821" width="0.1460%" height="15" fill="rgb(209,39,41)" fg:x="71259" fg:w="160"/><text x="65.2555%" y="831.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (228 samples, 0.21%)</title><rect x="64.9462%" y="1029" width="0.2080%" height="15" fill="rgb(226,182,46)" fg:x="71194" fg:w="228"/><text x="65.1962%" y="1039.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (217 samples, 0.20%)</title><rect x="64.9562%" y="1013" width="0.1980%" height="15" fill="rgb(230,219,10)" fg:x="71205" fg:w="217"/><text x="65.2062%" y="1023.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (185 samples, 0.17%)</title><rect x="64.9854%" y="997" width="0.1688%" height="15" fill="rgb(227,175,30)" fg:x="71237" fg:w="185"/><text x="65.2354%" y="1007.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (185 samples, 0.17%)</title><rect x="64.9854%" y="981" width="0.1688%" height="15" fill="rgb(217,2,50)" fg:x="71237" fg:w="185"/><text x="65.2354%" y="991.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (185 samples, 0.17%)</title><rect x="64.9854%" y="965" width="0.1688%" height="15" fill="rgb(229,160,0)" fg:x="71237" fg:w="185"/><text x="65.2354%" y="975.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (185 samples, 0.17%)</title><rect x="64.9854%" y="949" width="0.1688%" height="15" fill="rgb(207,78,37)" fg:x="71237" fg:w="185"/><text x="65.2354%" y="959.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="65.5656%" y="821" width="0.0119%" height="15" fill="rgb(225,57,0)" fg:x="71873" fg:w="13"/><text x="65.8156%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (11 samples, 0.01%)</title><rect x="65.5975%" y="741" width="0.0100%" height="15" fill="rgb(232,154,2)" fg:x="71908" fg:w="11"/><text x="65.8475%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (75 samples, 0.07%)</title><rect x="65.5975%" y="773" width="0.0684%" height="15" fill="rgb(241,212,25)" fg:x="71908" fg:w="75"/><text x="65.8475%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (75 samples, 0.07%)</title><rect x="65.5975%" y="757" width="0.0684%" height="15" fill="rgb(226,69,20)" fg:x="71908" fg:w="75"/><text x="65.8475%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (64 samples, 0.06%)</title><rect x="65.6076%" y="741" width="0.0584%" height="15" fill="rgb(247,184,54)" fg:x="71919" fg:w="64"/><text x="65.8576%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (53 samples, 0.05%)</title><rect x="65.6176%" y="725" width="0.0483%" height="15" fill="rgb(210,145,0)" fg:x="71930" fg:w="53"/><text x="65.8676%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (53 samples, 0.05%)</title><rect x="65.6176%" y="709" width="0.0483%" height="15" fill="rgb(253,82,12)" fg:x="71930" fg:w="53"/><text x="65.8676%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (53 samples, 0.05%)</title><rect x="65.6176%" y="693" width="0.0483%" height="15" fill="rgb(245,42,11)" fg:x="71930" fg:w="53"/><text x="65.8676%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (258 samples, 0.24%)</title><rect x="65.5784%" y="821" width="0.2354%" height="15" fill="rgb(219,147,32)" fg:x="71887" fg:w="258"/><text x="65.8284%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (255 samples, 0.23%)</title><rect x="65.5811%" y="805" width="0.2326%" height="15" fill="rgb(246,12,7)" fg:x="71890" fg:w="255"/><text x="65.8311%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (245 samples, 0.22%)</title><rect x="65.5902%" y="789" width="0.2235%" height="15" fill="rgb(243,50,9)" fg:x="71900" fg:w="245"/><text x="65.8402%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::take (152 samples, 0.14%)</title><rect x="65.6751%" y="773" width="0.1387%" height="15" fill="rgb(219,149,6)" fg:x="71993" fg:w="152"/><text x="65.9251%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (152 samples, 0.14%)</title><rect x="65.6751%" y="757" width="0.1387%" height="15" fill="rgb(241,51,42)" fg:x="71993" fg:w="152"/><text x="65.9251%" y="767.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (305 samples, 0.28%)</title><rect x="65.5364%" y="965" width="0.2782%" height="15" fill="rgb(226,128,27)" fg:x="71841" fg:w="305"/><text x="65.7864%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (305 samples, 0.28%)</title><rect x="65.5364%" y="949" width="0.2782%" height="15" fill="rgb(244,144,4)" fg:x="71841" fg:w="305"/><text x="65.7864%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (281 samples, 0.26%)</title><rect x="65.5583%" y="933" width="0.2563%" height="15" fill="rgb(221,4,13)" fg:x="71865" fg:w="281"/><text x="65.8083%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (281 samples, 0.26%)</title><rect x="65.5583%" y="917" width="0.2563%" height="15" fill="rgb(208,170,28)" fg:x="71865" fg:w="281"/><text x="65.8083%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (281 samples, 0.26%)</title><rect x="65.5583%" y="901" width="0.2563%" height="15" fill="rgb(226,131,13)" fg:x="71865" fg:w="281"/><text x="65.8083%" y="911.50"></text></g><g><title>alloc::alloc::alloc (275 samples, 0.25%)</title><rect x="65.5638%" y="885" width="0.2509%" height="15" fill="rgb(215,72,41)" fg:x="71871" fg:w="275"/><text x="65.8138%" y="895.50"></text></g><g><title>__rg_alloc (275 samples, 0.25%)</title><rect x="65.5638%" y="869" width="0.2509%" height="15" fill="rgb(243,108,20)" fg:x="71871" fg:w="275"/><text x="65.8138%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (275 samples, 0.25%)</title><rect x="65.5638%" y="853" width="0.2509%" height="15" fill="rgb(230,189,17)" fg:x="71871" fg:w="275"/><text x="65.8138%" y="863.50"></text></g><g><title>rust_alloc (273 samples, 0.25%)</title><rect x="65.5656%" y="837" width="0.2490%" height="15" fill="rgb(220,50,17)" fg:x="71873" fg:w="273"/><text x="65.8156%" y="847.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (16 samples, 0.01%)</title><rect x="65.8238%" y="853" width="0.0146%" height="15" fill="rgb(248,152,48)" fg:x="72156" fg:w="16"/><text x="66.0738%" y="863.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (29 samples, 0.03%)</title><rect x="65.8238%" y="869" width="0.0265%" height="15" fill="rgb(244,91,11)" fg:x="72156" fg:w="29"/><text x="66.0738%" y="879.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="65.8384%" y="853" width="0.0119%" height="15" fill="rgb(220,157,5)" fg:x="72172" fg:w="13"/><text x="66.0884%" y="863.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="65.8384%" y="837" width="0.0119%" height="15" fill="rgb(253,137,8)" fg:x="72172" fg:w="13"/><text x="66.0884%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="65.8384%" y="821" width="0.0119%" height="15" fill="rgb(217,137,51)" fg:x="72172" fg:w="13"/><text x="66.0884%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (115 samples, 0.10%)</title><rect x="65.8146%" y="933" width="0.1049%" height="15" fill="rgb(218,209,53)" fg:x="72146" fg:w="115"/><text x="66.0646%" y="943.50"></text></g><g><title>std::collections::hash::map::RandomState::new (115 samples, 0.10%)</title><rect x="65.8146%" y="917" width="0.1049%" height="15" fill="rgb(249,137,25)" fg:x="72146" fg:w="115"/><text x="66.0646%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (115 samples, 0.10%)</title><rect x="65.8146%" y="901" width="0.1049%" height="15" fill="rgb(239,155,26)" fg:x="72146" fg:w="115"/><text x="66.0646%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (115 samples, 0.10%)</title><rect x="65.8146%" y="885" width="0.1049%" height="15" fill="rgb(227,85,46)" fg:x="72146" fg:w="115"/><text x="66.0646%" y="895.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (76 samples, 0.07%)</title><rect x="65.8502%" y="869" width="0.0693%" height="15" fill="rgb(251,107,43)" fg:x="72185" fg:w="76"/><text x="66.1002%" y="879.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (14 samples, 0.01%)</title><rect x="65.9195%" y="869" width="0.0128%" height="15" fill="rgb(234,170,33)" fg:x="72261" fg:w="14"/><text x="66.1695%" y="879.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="66.0172%" y="581" width="0.0137%" height="15" fill="rgb(206,29,35)" fg:x="72368" fg:w="15"/><text x="66.2672%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="66.0172%" y="565" width="0.0137%" height="15" fill="rgb(227,138,25)" fg:x="72368" fg:w="15"/><text x="66.2672%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="66.0089%" y="629" width="0.0283%" height="15" fill="rgb(249,131,35)" fg:x="72359" fg:w="31"/><text x="66.2589%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="66.0089%" y="613" width="0.0283%" height="15" fill="rgb(239,6,40)" fg:x="72359" fg:w="31"/><text x="66.2589%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (27 samples, 0.02%)</title><rect x="66.0126%" y="597" width="0.0246%" height="15" fill="rgb(246,136,47)" fg:x="72363" fg:w="27"/><text x="66.2626%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (41 samples, 0.04%)</title><rect x="66.0080%" y="645" width="0.0374%" height="15" fill="rgb(253,58,26)" fg:x="72358" fg:w="41"/><text x="66.2580%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (58 samples, 0.05%)</title><rect x="66.0007%" y="661" width="0.0529%" height="15" fill="rgb(237,141,10)" fg:x="72350" fg:w="58"/><text x="66.2507%" y="671.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (36 samples, 0.03%)</title><rect x="66.0673%" y="645" width="0.0328%" height="15" fill="rgb(234,156,12)" fg:x="72423" fg:w="36"/><text x="66.3173%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (335 samples, 0.31%)</title><rect x="66.0007%" y="693" width="0.3056%" height="15" fill="rgb(243,224,36)" fg:x="72350" fg:w="335"/><text x="66.2507%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (335 samples, 0.31%)</title><rect x="66.0007%" y="677" width="0.3056%" height="15" fill="rgb(205,229,51)" fg:x="72350" fg:w="335"/><text x="66.2507%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (277 samples, 0.25%)</title><rect x="66.0536%" y="661" width="0.2527%" height="15" fill="rgb(223,189,4)" fg:x="72408" fg:w="277"/><text x="66.3036%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (226 samples, 0.21%)</title><rect x="66.1002%" y="645" width="0.2062%" height="15" fill="rgb(249,167,54)" fg:x="72459" fg:w="226"/><text x="66.3502%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (226 samples, 0.21%)</title><rect x="66.1002%" y="629" width="0.2062%" height="15" fill="rgb(218,34,28)" fg:x="72459" fg:w="226"/><text x="66.3502%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (226 samples, 0.21%)</title><rect x="66.1002%" y="613" width="0.2062%" height="15" fill="rgb(232,109,42)" fg:x="72459" fg:w="226"/><text x="66.3502%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::take (12 samples, 0.01%)</title><rect x="66.3118%" y="661" width="0.0109%" height="15" fill="rgb(248,214,46)" fg:x="72691" fg:w="12"/><text x="66.5618%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (12 samples, 0.01%)</title><rect x="66.3118%" y="645" width="0.0109%" height="15" fill="rgb(244,216,40)" fg:x="72691" fg:w="12"/><text x="66.5618%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="66.3063%" y="693" width="0.0192%" height="15" fill="rgb(231,226,31)" fg:x="72685" fg:w="21"/><text x="66.5563%" y="703.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (20 samples, 0.02%)</title><rect x="66.3072%" y="677" width="0.0182%" height="15" fill="rgb(238,38,43)" fg:x="72686" fg:w="20"/><text x="66.5572%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="66.3255%" y="693" width="0.0182%" height="15" fill="rgb(208,88,43)" fg:x="72706" fg:w="20"/><text x="66.5755%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="66.3255%" y="677" width="0.0182%" height="15" fill="rgb(205,136,37)" fg:x="72706" fg:w="20"/><text x="66.5755%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="66.3255%" y="661" width="0.0182%" height="15" fill="rgb(237,34,14)" fg:x="72706" fg:w="20"/><text x="66.5755%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="66.3264%" y="645" width="0.0173%" height="15" fill="rgb(236,193,44)" fg:x="72707" fg:w="19"/><text x="66.5764%" y="655.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (19 samples, 0.02%)</title><rect x="66.3264%" y="629" width="0.0173%" height="15" fill="rgb(231,48,10)" fg:x="72707" fg:w="19"/><text x="66.5764%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (589 samples, 0.54%)</title><rect x="65.9816%" y="741" width="0.5373%" height="15" fill="rgb(213,141,34)" fg:x="72329" fg:w="589"/><text x="66.2316%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (585 samples, 0.53%)</title><rect x="65.9852%" y="725" width="0.5337%" height="15" fill="rgb(249,130,34)" fg:x="72333" fg:w="585"/><text x="66.2352%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (571 samples, 0.52%)</title><rect x="65.9980%" y="709" width="0.5209%" height="15" fill="rgb(219,42,41)" fg:x="72347" fg:w="571"/><text x="66.2480%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (190 samples, 0.17%)</title><rect x="66.3456%" y="693" width="0.1733%" height="15" fill="rgb(224,100,54)" fg:x="72728" fg:w="190"/><text x="66.5956%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (190 samples, 0.17%)</title><rect x="66.3456%" y="677" width="0.1733%" height="15" fill="rgb(229,200,27)" fg:x="72728" fg:w="190"/><text x="66.5956%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (783 samples, 0.71%)</title><rect x="65.8146%" y="965" width="0.7143%" height="15" fill="rgb(217,118,10)" fg:x="72146" fg:w="783"/><text x="66.0646%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (783 samples, 0.71%)</title><rect x="65.8146%" y="949" width="0.7143%" height="15" fill="rgb(206,22,3)" fg:x="72146" fg:w="783"/><text x="66.0646%" y="959.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (668 samples, 0.61%)</title><rect x="65.9195%" y="933" width="0.6094%" height="15" fill="rgb(232,163,46)" fg:x="72261" fg:w="668"/><text x="66.1695%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (668 samples, 0.61%)</title><rect x="65.9195%" y="917" width="0.6094%" height="15" fill="rgb(206,95,13)" fg:x="72261" fg:w="668"/><text x="66.1695%" y="927.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (668 samples, 0.61%)</title><rect x="65.9195%" y="901" width="0.6094%" height="15" fill="rgb(253,154,18)" fg:x="72261" fg:w="668"/><text x="66.1695%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (668 samples, 0.61%)</title><rect x="65.9195%" y="885" width="0.6094%" height="15" fill="rgb(219,32,23)" fg:x="72261" fg:w="668"/><text x="66.1695%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (654 samples, 0.60%)</title><rect x="65.9323%" y="869" width="0.5966%" height="15" fill="rgb(230,191,45)" fg:x="72275" fg:w="654"/><text x="66.1823%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (623 samples, 0.57%)</title><rect x="65.9606%" y="853" width="0.5683%" height="15" fill="rgb(229,64,36)" fg:x="72306" fg:w="623"/><text x="66.2106%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (623 samples, 0.57%)</title><rect x="65.9606%" y="837" width="0.5683%" height="15" fill="rgb(205,129,25)" fg:x="72306" fg:w="623"/><text x="66.2106%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (623 samples, 0.57%)</title><rect x="65.9606%" y="821" width="0.5683%" height="15" fill="rgb(254,112,7)" fg:x="72306" fg:w="623"/><text x="66.2106%" y="831.50"></text></g><g><title>alloc::alloc::alloc (621 samples, 0.57%)</title><rect x="65.9624%" y="805" width="0.5665%" height="15" fill="rgb(226,53,48)" fg:x="72308" fg:w="621"/><text x="66.2124%" y="815.50"></text></g><g><title>__rg_alloc (621 samples, 0.57%)</title><rect x="65.9624%" y="789" width="0.5665%" height="15" fill="rgb(214,153,38)" fg:x="72308" fg:w="621"/><text x="66.2124%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (621 samples, 0.57%)</title><rect x="65.9624%" y="773" width="0.5665%" height="15" fill="rgb(243,101,7)" fg:x="72308" fg:w="621"/><text x="66.2124%" y="783.50"></text></g><g><title>rust_alloc (611 samples, 0.56%)</title><rect x="65.9715%" y="757" width="0.5574%" height="15" fill="rgb(240,140,22)" fg:x="72318" fg:w="611"/><text x="66.2215%" y="767.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="66.5189%" y="741" width="0.0100%" height="15" fill="rgb(235,114,2)" fg:x="72918" fg:w="11"/><text x="66.7689%" y="751.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (1,223 samples, 1.12%)</title><rect x="65.4205%" y="1013" width="1.1157%" height="15" fill="rgb(242,59,12)" fg:x="71714" fg:w="1223"/><text x="65.6705%" y="1023.50"></text></g><g><title>value_trait::Builder::object (1,096 samples, 1.00%)</title><rect x="65.5364%" y="997" width="0.9998%" height="15" fill="rgb(252,134,9)" fg:x="71841" fg:w="1096"/><text x="65.7864%" y="1007.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (1,096 samples, 1.00%)</title><rect x="65.5364%" y="981" width="0.9998%" height="15" fill="rgb(236,4,44)" fg:x="71841" fg:w="1096"/><text x="65.7864%" y="991.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,842 samples, 1.68%)</title><rect x="64.8632%" y="1045" width="1.6804%" height="15" fill="rgb(254,172,41)" fg:x="71103" fg:w="1842"/><text x="65.1132%" y="1055.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (1,523 samples, 1.39%)</title><rect x="65.1542%" y="1029" width="1.3893%" height="15" fill="rgb(244,63,20)" fg:x="71422" fg:w="1523"/><text x="65.4042%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (29 samples, 0.03%)</title><rect x="66.5463%" y="1045" width="0.0265%" height="15" fill="rgb(250,73,31)" fg:x="72948" fg:w="29"/><text x="66.7963%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (29 samples, 0.03%)</title><rect x="66.5463%" y="1029" width="0.0265%" height="15" fill="rgb(241,38,36)" fg:x="72948" fg:w="29"/><text x="66.7963%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (29 samples, 0.03%)</title><rect x="66.5463%" y="1013" width="0.0265%" height="15" fill="rgb(245,211,2)" fg:x="72948" fg:w="29"/><text x="66.7963%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (11 samples, 0.01%)</title><rect x="66.5627%" y="997" width="0.0100%" height="15" fill="rgb(206,120,28)" fg:x="72966" fg:w="11"/><text x="66.8127%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (11 samples, 0.01%)</title><rect x="66.5627%" y="981" width="0.0100%" height="15" fill="rgb(211,59,34)" fg:x="72966" fg:w="11"/><text x="66.8127%" y="991.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="66.5627%" y="965" width="0.0100%" height="15" fill="rgb(233,168,5)" fg:x="72966" fg:w="11"/><text x="66.8127%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (11 samples, 0.01%)</title><rect x="66.5627%" y="949" width="0.0100%" height="15" fill="rgb(234,33,13)" fg:x="72966" fg:w="11"/><text x="66.8127%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (11 samples, 0.01%)</title><rect x="66.5627%" y="933" width="0.0100%" height="15" fill="rgb(231,150,26)" fg:x="72966" fg:w="11"/><text x="66.8127%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="66.5627%" y="917" width="0.0100%" height="15" fill="rgb(217,191,4)" fg:x="72966" fg:w="11"/><text x="66.8127%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="66.5627%" y="901" width="0.0100%" height="15" fill="rgb(246,198,38)" fg:x="72966" fg:w="11"/><text x="66.8127%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (11 samples, 0.01%)</title><rect x="66.5809%" y="965" width="0.0100%" height="15" fill="rgb(245,64,37)" fg:x="72986" fg:w="11"/><text x="66.8309%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (11 samples, 0.01%)</title><rect x="66.5809%" y="949" width="0.0100%" height="15" fill="rgb(250,30,36)" fg:x="72986" fg:w="11"/><text x="66.8309%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (34 samples, 0.03%)</title><rect x="66.5727%" y="1029" width="0.0310%" height="15" fill="rgb(217,86,53)" fg:x="72977" fg:w="34"/><text x="66.8227%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (34 samples, 0.03%)</title><rect x="66.5727%" y="1013" width="0.0310%" height="15" fill="rgb(228,157,16)" fg:x="72977" fg:w="34"/><text x="66.8227%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (29 samples, 0.03%)</title><rect x="66.5773%" y="997" width="0.0265%" height="15" fill="rgb(217,59,31)" fg:x="72982" fg:w="29"/><text x="66.8273%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (28 samples, 0.03%)</title><rect x="66.5782%" y="981" width="0.0255%" height="15" fill="rgb(237,138,41)" fg:x="72983" fg:w="28"/><text x="66.8282%" y="991.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="66.5910%" y="965" width="0.0128%" height="15" fill="rgb(227,91,49)" fg:x="72997" fg:w="14"/><text x="66.8410%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="66.5910%" y="949" width="0.0128%" height="15" fill="rgb(247,21,44)" fg:x="72997" fg:w="14"/><text x="66.8410%" y="959.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (53 samples, 0.05%)</title><rect x="66.6767%" y="901" width="0.0483%" height="15" fill="rgb(219,210,51)" fg:x="73091" fg:w="53"/><text x="66.9267%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="66.7077%" y="885" width="0.0173%" height="15" fill="rgb(209,140,6)" fg:x="73125" fg:w="19"/><text x="66.9577%" y="895.50"></text></g><g><title>alloc::alloc::box_free (19 samples, 0.02%)</title><rect x="66.7077%" y="869" width="0.0173%" height="15" fill="rgb(221,188,24)" fg:x="73125" fg:w="19"/><text x="66.9577%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="66.7077%" y="853" width="0.0173%" height="15" fill="rgb(232,154,20)" fg:x="73125" fg:w="19"/><text x="66.9577%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="66.7077%" y="837" width="0.0173%" height="15" fill="rgb(244,137,50)" fg:x="73125" fg:w="19"/><text x="66.9577%" y="847.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="66.7077%" y="821" width="0.0173%" height="15" fill="rgb(225,185,43)" fg:x="73125" fg:w="19"/><text x="66.9577%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="66.7077%" y="805" width="0.0173%" height="15" fill="rgb(213,205,38)" fg:x="73125" fg:w="19"/><text x="66.9577%" y="815.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="66.7524%" y="805" width="0.0100%" height="15" fill="rgb(236,73,12)" fg:x="73174" fg:w="11"/><text x="67.0024%" y="815.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (26 samples, 0.02%)</title><rect x="66.7944%" y="757" width="0.0237%" height="15" fill="rgb(235,219,13)" fg:x="73220" fg:w="26"/><text x="67.0444%" y="767.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="66.7999%" y="741" width="0.0182%" height="15" fill="rgb(218,59,36)" fg:x="73226" fg:w="20"/><text x="67.0499%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (68 samples, 0.06%)</title><rect x="66.7707%" y="805" width="0.0620%" height="15" fill="rgb(205,110,39)" fg:x="73194" fg:w="68"/><text x="67.0207%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (68 samples, 0.06%)</title><rect x="66.7707%" y="789" width="0.0620%" height="15" fill="rgb(218,206,42)" fg:x="73194" fg:w="68"/><text x="67.0207%" y="799.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (65 samples, 0.06%)</title><rect x="66.7734%" y="773" width="0.0593%" height="15" fill="rgb(248,125,24)" fg:x="73197" fg:w="65"/><text x="67.0234%" y="783.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (16 samples, 0.01%)</title><rect x="66.8181%" y="757" width="0.0146%" height="15" fill="rgb(242,28,27)" fg:x="73246" fg:w="16"/><text x="67.0681%" y="767.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (16 samples, 0.01%)</title><rect x="66.8181%" y="741" width="0.0146%" height="15" fill="rgb(216,228,15)" fg:x="73246" fg:w="16"/><text x="67.0681%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (104 samples, 0.09%)</title><rect x="66.7433%" y="837" width="0.0949%" height="15" fill="rgb(235,116,46)" fg:x="73164" fg:w="104"/><text x="66.9933%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (104 samples, 0.09%)</title><rect x="66.7433%" y="821" width="0.0949%" height="15" fill="rgb(224,18,32)" fg:x="73164" fg:w="104"/><text x="66.9933%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (115 samples, 0.10%)</title><rect x="66.7433%" y="869" width="0.1049%" height="15" fill="rgb(252,5,12)" fg:x="73164" fg:w="115"/><text x="66.9933%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (115 samples, 0.10%)</title><rect x="66.7433%" y="853" width="0.1049%" height="15" fill="rgb(251,36,5)" fg:x="73164" fg:w="115"/><text x="66.9933%" y="863.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="66.8382%" y="837" width="0.0100%" height="15" fill="rgb(217,53,14)" fg:x="73268" fg:w="11"/><text x="67.0882%" y="847.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="66.8382%" y="821" width="0.0100%" height="15" fill="rgb(215,86,45)" fg:x="73268" fg:w="11"/><text x="67.0882%" y="831.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="66.8382%" y="805" width="0.0100%" height="15" fill="rgb(242,169,11)" fg:x="73268" fg:w="11"/><text x="67.0882%" y="815.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="66.8382%" y="789" width="0.0100%" height="15" fill="rgb(211,213,45)" fg:x="73268" fg:w="11"/><text x="67.0882%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (139 samples, 0.13%)</title><rect x="66.7287%" y="885" width="0.1268%" height="15" fill="rgb(205,88,11)" fg:x="73148" fg:w="139"/><text x="66.9787%" y="895.50"></text></g><g><title>rust_dealloc (152 samples, 0.14%)</title><rect x="66.7251%" y="901" width="0.1387%" height="15" fill="rgb(252,69,26)" fg:x="73144" fg:w="152"/><text x="66.9751%" y="911.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (13 samples, 0.01%)</title><rect x="66.8637%" y="885" width="0.0119%" height="15" fill="rgb(246,123,37)" fg:x="73296" fg:w="13"/><text x="67.1137%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (232 samples, 0.21%)</title><rect x="66.6648%" y="949" width="0.2116%" height="15" fill="rgb(212,205,5)" fg:x="73078" fg:w="232"/><text x="66.9148%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (232 samples, 0.21%)</title><rect x="66.6648%" y="933" width="0.2116%" height="15" fill="rgb(253,148,0)" fg:x="73078" fg:w="232"/><text x="66.9148%" y="943.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (232 samples, 0.21%)</title><rect x="66.6648%" y="917" width="0.2116%" height="15" fill="rgb(239,22,4)" fg:x="73078" fg:w="232"/><text x="66.9148%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (14 samples, 0.01%)</title><rect x="66.8637%" y="901" width="0.0128%" height="15" fill="rgb(226,26,53)" fg:x="73296" fg:w="14"/><text x="67.1137%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (266 samples, 0.24%)</title><rect x="66.6448%" y="965" width="0.2427%" height="15" fill="rgb(225,229,45)" fg:x="73056" fg:w="266"/><text x="66.8948%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="66.8765%" y="949" width="0.0109%" height="15" fill="rgb(220,60,37)" fg:x="73310" fg:w="12"/><text x="67.1265%" y="959.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="66.8765%" y="933" width="0.0109%" height="15" fill="rgb(217,180,35)" fg:x="73310" fg:w="12"/><text x="67.1265%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="66.8765%" y="917" width="0.0109%" height="15" fill="rgb(229,7,53)" fg:x="73310" fg:w="12"/><text x="67.1265%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="66.8765%" y="901" width="0.0109%" height="15" fill="rgb(254,137,3)" fg:x="73310" fg:w="12"/><text x="67.1265%" y="911.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="66.8765%" y="885" width="0.0109%" height="15" fill="rgb(215,140,41)" fg:x="73310" fg:w="12"/><text x="67.1265%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="66.8765%" y="869" width="0.0109%" height="15" fill="rgb(250,80,15)" fg:x="73310" fg:w="12"/><text x="67.1265%" y="879.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="66.8902%" y="949" width="0.0128%" height="15" fill="rgb(252,191,6)" fg:x="73325" fg:w="14"/><text x="67.1402%" y="959.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (23 samples, 0.02%)</title><rect x="66.9522%" y="821" width="0.0210%" height="15" fill="rgb(246,217,18)" fg:x="73393" fg:w="23"/><text x="67.2022%" y="831.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="66.9522%" y="805" width="0.0210%" height="15" fill="rgb(223,93,7)" fg:x="73393" fg:w="23"/><text x="67.2022%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (72 samples, 0.07%)</title><rect x="66.9267%" y="869" width="0.0657%" height="15" fill="rgb(225,55,52)" fg:x="73365" fg:w="72"/><text x="67.1767%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (72 samples, 0.07%)</title><rect x="66.9267%" y="853" width="0.0657%" height="15" fill="rgb(240,31,24)" fg:x="73365" fg:w="72"/><text x="67.1767%" y="863.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (71 samples, 0.06%)</title><rect x="66.9276%" y="837" width="0.0648%" height="15" fill="rgb(205,56,52)" fg:x="73366" fg:w="71"/><text x="67.1776%" y="847.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (21 samples, 0.02%)</title><rect x="66.9732%" y="821" width="0.0192%" height="15" fill="rgb(246,146,12)" fg:x="73416" fg:w="21"/><text x="67.2232%" y="831.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (21 samples, 0.02%)</title><rect x="66.9732%" y="805" width="0.0192%" height="15" fill="rgb(239,84,36)" fg:x="73416" fg:w="21"/><text x="67.2232%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (89 samples, 0.08%)</title><rect x="66.9157%" y="901" width="0.0812%" height="15" fill="rgb(207,41,40)" fg:x="73353" fg:w="89"/><text x="67.1657%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (89 samples, 0.08%)</title><rect x="66.9157%" y="885" width="0.0812%" height="15" fill="rgb(241,179,25)" fg:x="73353" fg:w="89"/><text x="67.1657%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (90 samples, 0.08%)</title><rect x="66.9157%" y="933" width="0.0821%" height="15" fill="rgb(210,0,34)" fg:x="73353" fg:w="90"/><text x="67.1657%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (90 samples, 0.08%)</title><rect x="66.9157%" y="917" width="0.0821%" height="15" fill="rgb(225,217,29)" fg:x="73353" fg:w="90"/><text x="67.1657%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (107 samples, 0.10%)</title><rect x="66.9029%" y="949" width="0.0976%" height="15" fill="rgb(216,191,38)" fg:x="73339" fg:w="107"/><text x="67.1529%" y="959.50"></text></g><g><title>rust_dealloc (131 samples, 0.12%)</title><rect x="66.8874%" y="965" width="0.1195%" height="15" fill="rgb(232,140,52)" fg:x="73322" fg:w="131"/><text x="67.1374%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (445 samples, 0.41%)</title><rect x="66.6037%" y="1013" width="0.4059%" height="15" fill="rgb(223,158,51)" fg:x="73011" fg:w="445"/><text x="66.8537%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (441 samples, 0.40%)</title><rect x="66.6074%" y="997" width="0.4023%" height="15" fill="rgb(235,29,51)" fg:x="73015" fg:w="441"/><text x="66.8574%" y="1007.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (441 samples, 0.40%)</title><rect x="66.6074%" y="981" width="0.4023%" height="15" fill="rgb(215,181,18)" fg:x="73015" fg:w="441"/><text x="66.8574%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (526 samples, 0.48%)</title><rect x="66.5727%" y="1045" width="0.4798%" height="15" fill="rgb(227,125,34)" fg:x="72977" fg:w="526"/><text x="66.8227%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (492 samples, 0.45%)</title><rect x="66.6037%" y="1029" width="0.4488%" height="15" fill="rgb(230,197,49)" fg:x="73011" fg:w="492"/><text x="66.8537%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (47 samples, 0.04%)</title><rect x="67.0097%" y="1013" width="0.0429%" height="15" fill="rgb(239,141,16)" fg:x="73456" fg:w="47"/><text x="67.2597%" y="1023.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (2,892 samples, 2.64%)</title><rect x="64.4344%" y="1061" width="2.6382%" height="15" fill="rgb(225,105,43)" fg:x="70633" fg:w="2892"/><text x="64.6844%" y="1071.50">tr..</text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (22 samples, 0.02%)</title><rect x="67.0525%" y="1045" width="0.0201%" height="15" fill="rgb(214,131,14)" fg:x="73503" fg:w="22"/><text x="67.3025%" y="1055.50"></text></g><g><title>tremor_pipeline::EventId::new (13 samples, 0.01%)</title><rect x="67.0608%" y="1029" width="0.0119%" height="15" fill="rgb(229,177,11)" fg:x="73512" fg:w="13"/><text x="67.3108%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (17 samples, 0.02%)</title><rect x="67.4257%" y="853" width="0.0155%" height="15" fill="rgb(231,180,14)" fg:x="73912" fg:w="17"/><text x="67.6757%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (61 samples, 0.06%)</title><rect x="67.4257%" y="885" width="0.0556%" height="15" fill="rgb(232,88,2)" fg:x="73912" fg:w="61"/><text x="67.6757%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (61 samples, 0.06%)</title><rect x="67.4257%" y="869" width="0.0556%" height="15" fill="rgb(205,220,8)" fg:x="73912" fg:w="61"/><text x="67.6757%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (44 samples, 0.04%)</title><rect x="67.4412%" y="853" width="0.0401%" height="15" fill="rgb(225,23,53)" fg:x="73929" fg:w="44"/><text x="67.6912%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (36 samples, 0.03%)</title><rect x="67.4485%" y="837" width="0.0328%" height="15" fill="rgb(213,62,29)" fg:x="73937" fg:w="36"/><text x="67.6985%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (36 samples, 0.03%)</title><rect x="67.4485%" y="821" width="0.0328%" height="15" fill="rgb(227,75,7)" fg:x="73937" fg:w="36"/><text x="67.6985%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (36 samples, 0.03%)</title><rect x="67.4485%" y="805" width="0.0328%" height="15" fill="rgb(207,105,14)" fg:x="73937" fg:w="36"/><text x="67.6985%" y="815.50"></text></g><g><title>snmalloc::FreeListIter::empty (21 samples, 0.02%)</title><rect x="67.4849%" y="885" width="0.0192%" height="15" fill="rgb(245,62,29)" fg:x="73977" fg:w="21"/><text x="67.7349%" y="895.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (21 samples, 0.02%)</title><rect x="67.4849%" y="869" width="0.0192%" height="15" fill="rgb(236,202,4)" fg:x="73977" fg:w="21"/><text x="67.7349%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (240 samples, 0.22%)</title><rect x="67.4174%" y="933" width="0.2189%" height="15" fill="rgb(250,67,1)" fg:x="73903" fg:w="240"/><text x="67.6674%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (234 samples, 0.21%)</title><rect x="67.4229%" y="917" width="0.2135%" height="15" fill="rgb(253,115,44)" fg:x="73909" fg:w="234"/><text x="67.6729%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (233 samples, 0.21%)</title><rect x="67.4238%" y="901" width="0.2126%" height="15" fill="rgb(251,139,18)" fg:x="73910" fg:w="233"/><text x="67.6738%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (145 samples, 0.13%)</title><rect x="67.5041%" y="885" width="0.1323%" height="15" fill="rgb(218,22,32)" fg:x="73998" fg:w="145"/><text x="67.7541%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (145 samples, 0.13%)</title><rect x="67.5041%" y="869" width="0.1323%" height="15" fill="rgb(243,53,5)" fg:x="73998" fg:w="145"/><text x="67.7541%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (252 samples, 0.23%)</title><rect x="67.4111%" y="1045" width="0.2299%" height="15" fill="rgb(227,56,16)" fg:x="73896" fg:w="252"/><text x="67.6611%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (252 samples, 0.23%)</title><rect x="67.4111%" y="1029" width="0.2299%" height="15" fill="rgb(245,53,0)" fg:x="73896" fg:w="252"/><text x="67.6611%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (252 samples, 0.23%)</title><rect x="67.4111%" y="1013" width="0.2299%" height="15" fill="rgb(216,170,35)" fg:x="73896" fg:w="252"/><text x="67.6611%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (252 samples, 0.23%)</title><rect x="67.4111%" y="997" width="0.2299%" height="15" fill="rgb(211,200,8)" fg:x="73896" fg:w="252"/><text x="67.6611%" y="1007.50"></text></g><g><title>__rg_alloc (252 samples, 0.23%)</title><rect x="67.4111%" y="981" width="0.2299%" height="15" fill="rgb(228,204,44)" fg:x="73896" fg:w="252"/><text x="67.6611%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (252 samples, 0.23%)</title><rect x="67.4111%" y="965" width="0.2299%" height="15" fill="rgb(214,121,17)" fg:x="73896" fg:w="252"/><text x="67.6611%" y="975.50"></text></g><g><title>rust_alloc (249 samples, 0.23%)</title><rect x="67.4138%" y="949" width="0.2271%" height="15" fill="rgb(233,64,38)" fg:x="73899" fg:w="249"/><text x="67.6638%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (12 samples, 0.01%)</title><rect x="67.6409%" y="1045" width="0.0109%" height="15" fill="rgb(253,54,19)" fg:x="74148" fg:w="12"/><text x="67.8909%" y="1055.50"></text></g><g><title>alloc::slice::hack::into_vec (12 samples, 0.01%)</title><rect x="67.6409%" y="1029" width="0.0109%" height="15" fill="rgb(253,94,18)" fg:x="74148" fg:w="12"/><text x="67.8909%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (12 samples, 0.01%)</title><rect x="67.6409%" y="1013" width="0.0109%" height="15" fill="rgb(227,57,52)" fg:x="74148" fg:w="12"/><text x="67.8909%" y="1023.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (653 samples, 0.60%)</title><rect x="67.0726%" y="1061" width="0.5957%" height="15" fill="rgb(230,228,50)" fg:x="73525" fg:w="653"/><text x="67.3226%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (263 samples, 0.24%)</title><rect x="67.8654%" y="1045" width="0.2399%" height="15" fill="rgb(217,205,27)" fg:x="74394" fg:w="263"/><text x="68.1154%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="68.1427%" y="821" width="0.0137%" height="15" fill="rgb(252,71,50)" fg:x="74698" fg:w="15"/><text x="68.3927%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.05%)</title><rect x="68.1427%" y="853" width="0.0547%" height="15" fill="rgb(209,86,4)" fg:x="74698" fg:w="60"/><text x="68.3927%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (60 samples, 0.05%)</title><rect x="68.1427%" y="837" width="0.0547%" height="15" fill="rgb(229,94,0)" fg:x="74698" fg:w="60"/><text x="68.3927%" y="847.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (45 samples, 0.04%)</title><rect x="68.1564%" y="821" width="0.0411%" height="15" fill="rgb(252,223,21)" fg:x="74713" fg:w="45"/><text x="68.4064%" y="831.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (35 samples, 0.03%)</title><rect x="68.1655%" y="805" width="0.0319%" height="15" fill="rgb(230,210,4)" fg:x="74723" fg:w="35"/><text x="68.4155%" y="815.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (35 samples, 0.03%)</title><rect x="68.1655%" y="789" width="0.0319%" height="15" fill="rgb(240,149,38)" fg:x="74723" fg:w="35"/><text x="68.4155%" y="799.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (35 samples, 0.03%)</title><rect x="68.1655%" y="773" width="0.0319%" height="15" fill="rgb(254,105,20)" fg:x="74723" fg:w="35"/><text x="68.4155%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (100 samples, 0.09%)</title><rect x="68.1308%" y="901" width="0.0912%" height="15" fill="rgb(253,87,46)" fg:x="74685" fg:w="100"/><text x="68.3808%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (99 samples, 0.09%)</title><rect x="68.1317%" y="885" width="0.0903%" height="15" fill="rgb(253,116,33)" fg:x="74686" fg:w="99"/><text x="68.3817%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (92 samples, 0.08%)</title><rect x="68.1381%" y="869" width="0.0839%" height="15" fill="rgb(229,198,5)" fg:x="74693" fg:w="92"/><text x="68.3881%" y="879.50"></text></g><g><title>snmalloc::FreeListIter::take (13 samples, 0.01%)</title><rect x="68.2102%" y="853" width="0.0119%" height="15" fill="rgb(242,38,37)" fg:x="74772" fg:w="13"/><text x="68.4602%" y="863.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (13 samples, 0.01%)</title><rect x="68.2102%" y="837" width="0.0119%" height="15" fill="rgb(242,69,53)" fg:x="74772" fg:w="13"/><text x="68.4602%" y="847.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (132 samples, 0.12%)</title><rect x="68.1053%" y="1045" width="0.1204%" height="15" fill="rgb(249,80,16)" fg:x="74657" fg:w="132"/><text x="68.3553%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (132 samples, 0.12%)</title><rect x="68.1053%" y="1029" width="0.1204%" height="15" fill="rgb(206,128,11)" fg:x="74657" fg:w="132"/><text x="68.3553%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (115 samples, 0.10%)</title><rect x="68.1208%" y="1013" width="0.1049%" height="15" fill="rgb(212,35,20)" fg:x="74674" fg:w="115"/><text x="68.3708%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (115 samples, 0.10%)</title><rect x="68.1208%" y="997" width="0.1049%" height="15" fill="rgb(236,79,13)" fg:x="74674" fg:w="115"/><text x="68.3708%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (115 samples, 0.10%)</title><rect x="68.1208%" y="981" width="0.1049%" height="15" fill="rgb(233,123,3)" fg:x="74674" fg:w="115"/><text x="68.3708%" y="991.50"></text></g><g><title>alloc::alloc::alloc (114 samples, 0.10%)</title><rect x="68.1217%" y="965" width="0.1040%" height="15" fill="rgb(214,93,52)" fg:x="74675" fg:w="114"/><text x="68.3717%" y="975.50"></text></g><g><title>__rg_alloc (114 samples, 0.10%)</title><rect x="68.1217%" y="949" width="0.1040%" height="15" fill="rgb(251,37,40)" fg:x="74675" fg:w="114"/><text x="68.3717%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (114 samples, 0.10%)</title><rect x="68.1217%" y="933" width="0.1040%" height="15" fill="rgb(227,80,54)" fg:x="74675" fg:w="114"/><text x="68.3717%" y="943.50"></text></g><g><title>rust_alloc (108 samples, 0.10%)</title><rect x="68.1272%" y="917" width="0.0985%" height="15" fill="rgb(254,48,11)" fg:x="74681" fg:w="108"/><text x="68.3772%" y="927.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="68.2284%" y="933" width="0.0100%" height="15" fill="rgb(235,193,26)" fg:x="74792" fg:w="11"/><text x="68.4784%" y="943.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="68.2385%" y="901" width="0.0119%" height="15" fill="rgb(229,99,21)" fg:x="74803" fg:w="13"/><text x="68.4885%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="68.2558%" y="885" width="0.0228%" height="15" fill="rgb(211,140,41)" fg:x="74822" fg:w="25"/><text x="68.5058%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (25 samples, 0.02%)</title><rect x="68.2558%" y="869" width="0.0228%" height="15" fill="rgb(240,227,30)" fg:x="74822" fg:w="25"/><text x="68.5058%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (23 samples, 0.02%)</title><rect x="68.2576%" y="853" width="0.0210%" height="15" fill="rgb(215,224,45)" fg:x="74824" fg:w="23"/><text x="68.5076%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (18 samples, 0.02%)</title><rect x="68.2622%" y="837" width="0.0164%" height="15" fill="rgb(206,123,31)" fg:x="74829" fg:w="18"/><text x="68.5122%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="68.2622%" y="821" width="0.0164%" height="15" fill="rgb(210,138,16)" fg:x="74829" fg:w="18"/><text x="68.5122%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="68.2622%" y="805" width="0.0164%" height="15" fill="rgb(228,57,28)" fg:x="74829" fg:w="18"/><text x="68.5122%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (106 samples, 0.10%)</title><rect x="68.2257%" y="1045" width="0.0967%" height="15" fill="rgb(242,170,10)" fg:x="74789" fg:w="106"/><text x="68.4757%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (106 samples, 0.10%)</title><rect x="68.2257%" y="1029" width="0.0967%" height="15" fill="rgb(228,214,39)" fg:x="74789" fg:w="106"/><text x="68.4757%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (106 samples, 0.10%)</title><rect x="68.2257%" y="1013" width="0.0967%" height="15" fill="rgb(218,179,33)" fg:x="74789" fg:w="106"/><text x="68.4757%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (106 samples, 0.10%)</title><rect x="68.2257%" y="997" width="0.0967%" height="15" fill="rgb(235,193,39)" fg:x="74789" fg:w="106"/><text x="68.4757%" y="1007.50"></text></g><g><title>__rg_alloc (106 samples, 0.10%)</title><rect x="68.2257%" y="981" width="0.0967%" height="15" fill="rgb(219,221,36)" fg:x="74789" fg:w="106"/><text x="68.4757%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (106 samples, 0.10%)</title><rect x="68.2257%" y="965" width="0.0967%" height="15" fill="rgb(248,218,19)" fg:x="74789" fg:w="106"/><text x="68.4757%" y="975.50"></text></g><g><title>rust_alloc (103 samples, 0.09%)</title><rect x="68.2284%" y="949" width="0.0940%" height="15" fill="rgb(205,50,9)" fg:x="74792" fg:w="103"/><text x="68.4784%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (92 samples, 0.08%)</title><rect x="68.2385%" y="933" width="0.0839%" height="15" fill="rgb(238,81,28)" fg:x="74803" fg:w="92"/><text x="68.4885%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (92 samples, 0.08%)</title><rect x="68.2385%" y="917" width="0.0839%" height="15" fill="rgb(235,110,19)" fg:x="74803" fg:w="92"/><text x="68.4885%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (79 samples, 0.07%)</title><rect x="68.2503%" y="901" width="0.0721%" height="15" fill="rgb(214,7,14)" fg:x="74816" fg:w="79"/><text x="68.5003%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (43 samples, 0.04%)</title><rect x="68.2832%" y="885" width="0.0392%" height="15" fill="rgb(211,77,3)" fg:x="74852" fg:w="43"/><text x="68.5332%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (43 samples, 0.04%)</title><rect x="68.2832%" y="869" width="0.0392%" height="15" fill="rgb(229,5,9)" fg:x="74852" fg:w="43"/><text x="68.5332%" y="879.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::new (11 samples, 0.01%)</title><rect x="68.3224%" y="1045" width="0.0100%" height="15" fill="rgb(225,90,11)" fg:x="74895" fg:w="11"/><text x="68.5724%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (54 samples, 0.05%)</title><rect x="68.6554%" y="693" width="0.0493%" height="15" fill="rgb(242,56,8)" fg:x="75260" fg:w="54"/><text x="68.9054%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (54 samples, 0.05%)</title><rect x="68.6554%" y="677" width="0.0493%" height="15" fill="rgb(249,212,39)" fg:x="75260" fg:w="54"/><text x="68.9054%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (44 samples, 0.04%)</title><rect x="68.6645%" y="661" width="0.0401%" height="15" fill="rgb(236,90,9)" fg:x="75270" fg:w="44"/><text x="68.9145%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (33 samples, 0.03%)</title><rect x="68.6745%" y="645" width="0.0301%" height="15" fill="rgb(206,88,35)" fg:x="75281" fg:w="33"/><text x="68.9245%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (33 samples, 0.03%)</title><rect x="68.6745%" y="629" width="0.0301%" height="15" fill="rgb(205,126,30)" fg:x="75281" fg:w="33"/><text x="68.9245%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (33 samples, 0.03%)</title><rect x="68.6745%" y="613" width="0.0301%" height="15" fill="rgb(230,176,12)" fg:x="75281" fg:w="33"/><text x="68.9245%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (165 samples, 0.15%)</title><rect x="68.6426%" y="741" width="0.1505%" height="15" fill="rgb(243,19,9)" fg:x="75246" fg:w="165"/><text x="68.8926%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (164 samples, 0.15%)</title><rect x="68.6435%" y="725" width="0.1496%" height="15" fill="rgb(245,171,17)" fg:x="75247" fg:w="164"/><text x="68.8935%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (157 samples, 0.14%)</title><rect x="68.6499%" y="709" width="0.1432%" height="15" fill="rgb(227,52,21)" fg:x="75254" fg:w="157"/><text x="68.8999%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (82 samples, 0.07%)</title><rect x="68.7183%" y="693" width="0.0748%" height="15" fill="rgb(238,69,14)" fg:x="75329" fg:w="82"/><text x="68.9683%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (82 samples, 0.07%)</title><rect x="68.7183%" y="677" width="0.0748%" height="15" fill="rgb(241,156,39)" fg:x="75329" fg:w="82"/><text x="68.9683%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (184 samples, 0.17%)</title><rect x="68.6262%" y="901" width="0.1679%" height="15" fill="rgb(212,227,28)" fg:x="75228" fg:w="184"/><text x="68.8762%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (176 samples, 0.16%)</title><rect x="68.6335%" y="885" width="0.1606%" height="15" fill="rgb(209,118,27)" fg:x="75236" fg:w="176"/><text x="68.8835%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (176 samples, 0.16%)</title><rect x="68.6335%" y="869" width="0.1606%" height="15" fill="rgb(226,102,5)" fg:x="75236" fg:w="176"/><text x="68.8835%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (173 samples, 0.16%)</title><rect x="68.6362%" y="853" width="0.1578%" height="15" fill="rgb(223,34,3)" fg:x="75239" fg:w="173"/><text x="68.8862%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (173 samples, 0.16%)</title><rect x="68.6362%" y="837" width="0.1578%" height="15" fill="rgb(221,81,38)" fg:x="75239" fg:w="173"/><text x="68.8862%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (173 samples, 0.16%)</title><rect x="68.6362%" y="821" width="0.1578%" height="15" fill="rgb(236,219,28)" fg:x="75239" fg:w="173"/><text x="68.8862%" y="831.50"></text></g><g><title>alloc::alloc::alloc (173 samples, 0.16%)</title><rect x="68.6362%" y="805" width="0.1578%" height="15" fill="rgb(213,200,14)" fg:x="75239" fg:w="173"/><text x="68.8862%" y="815.50"></text></g><g><title>__rg_alloc (173 samples, 0.16%)</title><rect x="68.6362%" y="789" width="0.1578%" height="15" fill="rgb(240,33,19)" fg:x="75239" fg:w="173"/><text x="68.8862%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (173 samples, 0.16%)</title><rect x="68.6362%" y="773" width="0.1578%" height="15" fill="rgb(233,113,27)" fg:x="75239" fg:w="173"/><text x="68.8862%" y="783.50"></text></g><g><title>rust_alloc (172 samples, 0.16%)</title><rect x="68.6371%" y="757" width="0.1569%" height="15" fill="rgb(220,221,18)" fg:x="75240" fg:w="172"/><text x="68.8871%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (12 samples, 0.01%)</title><rect x="68.7949%" y="837" width="0.0109%" height="15" fill="rgb(238,92,8)" fg:x="75413" fg:w="12"/><text x="69.0449%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (12 samples, 0.01%)</title><rect x="68.7949%" y="821" width="0.0109%" height="15" fill="rgb(222,164,16)" fg:x="75413" fg:w="12"/><text x="69.0449%" y="831.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (212 samples, 0.19%)</title><rect x="68.6180%" y="981" width="0.1934%" height="15" fill="rgb(241,119,3)" fg:x="75219" fg:w="212"/><text x="68.8680%" y="991.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (207 samples, 0.19%)</title><rect x="68.6225%" y="965" width="0.1888%" height="15" fill="rgb(241,44,8)" fg:x="75224" fg:w="207"/><text x="68.8725%" y="975.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (203 samples, 0.19%)</title><rect x="68.6262%" y="949" width="0.1852%" height="15" fill="rgb(230,36,40)" fg:x="75228" fg:w="203"/><text x="68.8762%" y="959.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (203 samples, 0.19%)</title><rect x="68.6262%" y="933" width="0.1852%" height="15" fill="rgb(243,16,36)" fg:x="75228" fg:w="203"/><text x="68.8762%" y="943.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (203 samples, 0.19%)</title><rect x="68.6262%" y="917" width="0.1852%" height="15" fill="rgb(231,4,26)" fg:x="75228" fg:w="203"/><text x="68.8762%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (19 samples, 0.02%)</title><rect x="68.7940%" y="901" width="0.0173%" height="15" fill="rgb(240,9,31)" fg:x="75412" fg:w="19"/><text x="69.0440%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (19 samples, 0.02%)</title><rect x="68.7940%" y="885" width="0.0173%" height="15" fill="rgb(207,173,15)" fg:x="75412" fg:w="19"/><text x="69.0440%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (19 samples, 0.02%)</title><rect x="68.7940%" y="869" width="0.0173%" height="15" fill="rgb(224,192,53)" fg:x="75412" fg:w="19"/><text x="69.0440%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="68.7949%" y="853" width="0.0164%" height="15" fill="rgb(223,67,28)" fg:x="75413" fg:w="18"/><text x="69.0449%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (16 samples, 0.01%)</title><rect x="69.0996%" y="933" width="0.0146%" height="15" fill="rgb(211,20,47)" fg:x="75747" fg:w="16"/><text x="69.3496%" y="943.50"></text></g><g><title>std::collections::hash::map::RandomState::new (16 samples, 0.01%)</title><rect x="69.0996%" y="917" width="0.0146%" height="15" fill="rgb(240,228,2)" fg:x="75747" fg:w="16"/><text x="69.3496%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.01%)</title><rect x="69.0996%" y="901" width="0.0146%" height="15" fill="rgb(248,151,12)" fg:x="75747" fg:w="16"/><text x="69.3496%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.01%)</title><rect x="69.0996%" y="885" width="0.0146%" height="15" fill="rgb(244,8,39)" fg:x="75747" fg:w="16"/><text x="69.3496%" y="895.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (14 samples, 0.01%)</title><rect x="69.1014%" y="869" width="0.0128%" height="15" fill="rgb(222,26,8)" fg:x="75749" fg:w="14"/><text x="69.3514%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="69.1507%" y="629" width="0.0109%" height="15" fill="rgb(213,106,44)" fg:x="75803" fg:w="12"/><text x="69.4007%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="69.1507%" y="613" width="0.0109%" height="15" fill="rgb(214,129,20)" fg:x="75803" fg:w="12"/><text x="69.4007%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="69.1516%" y="597" width="0.0100%" height="15" fill="rgb(212,32,13)" fg:x="75804" fg:w="11"/><text x="69.4016%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="69.1507%" y="645" width="0.0119%" height="15" fill="rgb(208,168,33)" fg:x="75803" fg:w="13"/><text x="69.4007%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (20 samples, 0.02%)</title><rect x="69.1480%" y="661" width="0.0182%" height="15" fill="rgb(231,207,8)" fg:x="75800" fg:w="20"/><text x="69.3980%" y="671.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (17 samples, 0.02%)</title><rect x="69.1744%" y="645" width="0.0155%" height="15" fill="rgb(235,219,23)" fg:x="75829" fg:w="17"/><text x="69.4244%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (166 samples, 0.15%)</title><rect x="69.1480%" y="693" width="0.1514%" height="15" fill="rgb(226,216,26)" fg:x="75800" fg:w="166"/><text x="69.3980%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (166 samples, 0.15%)</title><rect x="69.1480%" y="677" width="0.1514%" height="15" fill="rgb(239,137,16)" fg:x="75800" fg:w="166"/><text x="69.3980%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (146 samples, 0.13%)</title><rect x="69.1662%" y="661" width="0.1332%" height="15" fill="rgb(207,12,36)" fg:x="75820" fg:w="146"/><text x="69.4162%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (120 samples, 0.11%)</title><rect x="69.1899%" y="645" width="0.1095%" height="15" fill="rgb(210,214,24)" fg:x="75846" fg:w="120"/><text x="69.4399%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (120 samples, 0.11%)</title><rect x="69.1899%" y="629" width="0.1095%" height="15" fill="rgb(206,56,30)" fg:x="75846" fg:w="120"/><text x="69.4399%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (120 samples, 0.11%)</title><rect x="69.1899%" y="613" width="0.1095%" height="15" fill="rgb(228,143,26)" fg:x="75846" fg:w="120"/><text x="69.4399%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (208 samples, 0.19%)</title><rect x="69.1443%" y="741" width="0.1897%" height="15" fill="rgb(216,218,46)" fg:x="75796" fg:w="208"/><text x="69.3943%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (208 samples, 0.19%)</title><rect x="69.1443%" y="725" width="0.1897%" height="15" fill="rgb(206,6,19)" fg:x="75796" fg:w="208"/><text x="69.3943%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (204 samples, 0.19%)</title><rect x="69.1480%" y="709" width="0.1861%" height="15" fill="rgb(239,177,51)" fg:x="75800" fg:w="204"/><text x="69.3980%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (33 samples, 0.03%)</title><rect x="69.3040%" y="693" width="0.0301%" height="15" fill="rgb(216,55,25)" fg:x="75971" fg:w="33"/><text x="69.5540%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (33 samples, 0.03%)</title><rect x="69.3040%" y="677" width="0.0301%" height="15" fill="rgb(231,163,29)" fg:x="75971" fg:w="33"/><text x="69.5540%" y="687.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (237 samples, 0.22%)</title><rect x="69.1252%" y="901" width="0.2162%" height="15" fill="rgb(232,149,50)" fg:x="75775" fg:w="237"/><text x="69.3752%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (237 samples, 0.22%)</title><rect x="69.1252%" y="885" width="0.2162%" height="15" fill="rgb(223,142,48)" fg:x="75775" fg:w="237"/><text x="69.3752%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (237 samples, 0.22%)</title><rect x="69.1252%" y="869" width="0.2162%" height="15" fill="rgb(245,83,23)" fg:x="75775" fg:w="237"/><text x="69.3752%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (223 samples, 0.20%)</title><rect x="69.1379%" y="853" width="0.2034%" height="15" fill="rgb(224,63,2)" fg:x="75789" fg:w="223"/><text x="69.3879%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (221 samples, 0.20%)</title><rect x="69.1398%" y="837" width="0.2016%" height="15" fill="rgb(218,65,53)" fg:x="75791" fg:w="221"/><text x="69.3898%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (221 samples, 0.20%)</title><rect x="69.1398%" y="821" width="0.2016%" height="15" fill="rgb(221,84,29)" fg:x="75791" fg:w="221"/><text x="69.3898%" y="831.50"></text></g><g><title>alloc::alloc::alloc (221 samples, 0.20%)</title><rect x="69.1398%" y="805" width="0.2016%" height="15" fill="rgb(234,0,32)" fg:x="75791" fg:w="221"/><text x="69.3898%" y="815.50"></text></g><g><title>__rg_alloc (221 samples, 0.20%)</title><rect x="69.1398%" y="789" width="0.2016%" height="15" fill="rgb(206,20,16)" fg:x="75791" fg:w="221"/><text x="69.3898%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (221 samples, 0.20%)</title><rect x="69.1398%" y="773" width="0.2016%" height="15" fill="rgb(244,172,18)" fg:x="75791" fg:w="221"/><text x="69.3898%" y="783.50"></text></g><g><title>rust_alloc (220 samples, 0.20%)</title><rect x="69.1407%" y="757" width="0.2007%" height="15" fill="rgb(254,133,1)" fg:x="75792" fg:w="220"/><text x="69.3907%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (266 samples, 0.24%)</title><rect x="69.0996%" y="949" width="0.2427%" height="15" fill="rgb(222,206,41)" fg:x="75747" fg:w="266"/><text x="69.3496%" y="959.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (250 samples, 0.23%)</title><rect x="69.1142%" y="933" width="0.2281%" height="15" fill="rgb(212,3,42)" fg:x="75763" fg:w="250"/><text x="69.3642%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (250 samples, 0.23%)</title><rect x="69.1142%" y="917" width="0.2281%" height="15" fill="rgb(241,11,4)" fg:x="75763" fg:w="250"/><text x="69.3642%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="69.3906%" y="869" width="0.0137%" height="15" fill="rgb(205,19,26)" fg:x="76066" fg:w="15"/><text x="69.6406%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="69.3906%" y="853" width="0.0137%" height="15" fill="rgb(210,179,32)" fg:x="76066" fg:w="15"/><text x="69.6406%" y="863.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="69.3906%" y="837" width="0.0137%" height="15" fill="rgb(227,116,49)" fg:x="76066" fg:w="15"/><text x="69.6406%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="69.3906%" y="821" width="0.0137%" height="15" fill="rgb(211,146,6)" fg:x="76066" fg:w="15"/><text x="69.6406%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="69.3906%" y="805" width="0.0137%" height="15" fill="rgb(219,44,39)" fg:x="76066" fg:w="15"/><text x="69.6406%" y="815.50"></text></g><g><title>abi_stable::erased_types::iterator::next (27 samples, 0.02%)</title><rect x="69.3870%" y="901" width="0.0246%" height="15" fill="rgb(234,128,11)" fg:x="76062" fg:w="27"/><text x="69.6370%" y="911.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (23 samples, 0.02%)</title><rect x="69.3906%" y="885" width="0.0210%" height="15" fill="rgb(220,183,53)" fg:x="76066" fg:w="23"/><text x="69.6406%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.05%)</title><rect x="69.3687%" y="933" width="0.0483%" height="15" fill="rgb(213,219,32)" fg:x="76042" fg:w="53"/><text x="69.6187%" y="943.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (53 samples, 0.05%)</title><rect x="69.3687%" y="917" width="0.0483%" height="15" fill="rgb(232,156,16)" fg:x="76042" fg:w="53"/><text x="69.6187%" y="927.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (15 samples, 0.01%)</title><rect x="69.4326%" y="901" width="0.0137%" height="15" fill="rgb(246,135,34)" fg:x="76112" fg:w="15"/><text x="69.6826%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (48 samples, 0.04%)</title><rect x="69.4171%" y="933" width="0.0438%" height="15" fill="rgb(241,99,0)" fg:x="76095" fg:w="48"/><text x="69.6671%" y="943.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (48 samples, 0.04%)</title><rect x="69.4171%" y="917" width="0.0438%" height="15" fill="rgb(222,103,45)" fg:x="76095" fg:w="48"/><text x="69.6671%" y="927.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (16 samples, 0.01%)</title><rect x="69.4463%" y="901" width="0.0146%" height="15" fill="rgb(212,57,4)" fg:x="76127" fg:w="16"/><text x="69.6963%" y="911.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (16 samples, 0.01%)</title><rect x="69.4463%" y="885" width="0.0146%" height="15" fill="rgb(215,68,47)" fg:x="76127" fg:w="16"/><text x="69.6963%" y="895.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (11 samples, 0.01%)</title><rect x="69.4873%" y="821" width="0.0100%" height="15" fill="rgb(230,84,2)" fg:x="76172" fg:w="11"/><text x="69.7373%" y="831.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (22 samples, 0.02%)</title><rect x="69.5430%" y="677" width="0.0201%" height="15" fill="rgb(220,102,14)" fg:x="76233" fg:w="22"/><text x="69.7930%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="69.5457%" y="661" width="0.0173%" height="15" fill="rgb(240,10,32)" fg:x="76236" fg:w="19"/><text x="69.7957%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (46 samples, 0.04%)</title><rect x="69.5284%" y="725" width="0.0420%" height="15" fill="rgb(215,47,27)" fg:x="76217" fg:w="46"/><text x="69.7784%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (46 samples, 0.04%)</title><rect x="69.5284%" y="709" width="0.0420%" height="15" fill="rgb(233,188,43)" fg:x="76217" fg:w="46"/><text x="69.7784%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (44 samples, 0.04%)</title><rect x="69.5302%" y="693" width="0.0401%" height="15" fill="rgb(253,190,1)" fg:x="76219" fg:w="44"/><text x="69.7802%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (63 samples, 0.06%)</title><rect x="69.5147%" y="757" width="0.0575%" height="15" fill="rgb(206,114,52)" fg:x="76202" fg:w="63"/><text x="69.7647%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (63 samples, 0.06%)</title><rect x="69.5147%" y="741" width="0.0575%" height="15" fill="rgb(233,120,37)" fg:x="76202" fg:w="63"/><text x="69.7647%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (65 samples, 0.06%)</title><rect x="69.5147%" y="789" width="0.0593%" height="15" fill="rgb(214,52,39)" fg:x="76202" fg:w="65"/><text x="69.7647%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (65 samples, 0.06%)</title><rect x="69.5147%" y="773" width="0.0593%" height="15" fill="rgb(223,80,29)" fg:x="76202" fg:w="65"/><text x="69.7647%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (77 samples, 0.07%)</title><rect x="69.5056%" y="805" width="0.0702%" height="15" fill="rgb(230,101,40)" fg:x="76192" fg:w="77"/><text x="69.7556%" y="815.50"></text></g><g><title>rust_dealloc (87 samples, 0.08%)</title><rect x="69.4974%" y="821" width="0.0794%" height="15" fill="rgb(219,211,8)" fg:x="76183" fg:w="87"/><text x="69.7474%" y="831.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (129 samples, 0.12%)</title><rect x="69.4618%" y="901" width="0.1177%" height="15" fill="rgb(252,126,28)" fg:x="76144" fg:w="129"/><text x="69.7118%" y="911.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (122 samples, 0.11%)</title><rect x="69.4682%" y="885" width="0.1113%" height="15" fill="rgb(215,56,38)" fg:x="76151" fg:w="122"/><text x="69.7182%" y="895.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (115 samples, 0.10%)</title><rect x="69.4745%" y="869" width="0.1049%" height="15" fill="rgb(249,55,44)" fg:x="76158" fg:w="115"/><text x="69.7245%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (115 samples, 0.10%)</title><rect x="69.4745%" y="853" width="0.1049%" height="15" fill="rgb(220,221,32)" fg:x="76158" fg:w="115"/><text x="69.7245%" y="863.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (115 samples, 0.10%)</title><rect x="69.4745%" y="837" width="0.1049%" height="15" fill="rgb(212,216,41)" fg:x="76158" fg:w="115"/><text x="69.7245%" y="847.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,058 samples, 0.97%)</title><rect x="68.6180%" y="997" width="0.9652%" height="15" fill="rgb(228,213,43)" fg:x="75219" fg:w="1058"/><text x="68.8680%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (846 samples, 0.77%)</title><rect x="68.8113%" y="981" width="0.7718%" height="15" fill="rgb(211,31,26)" fg:x="75431" fg:w="846"/><text x="69.0613%" y="991.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (532 samples, 0.49%)</title><rect x="69.0978%" y="965" width="0.4853%" height="15" fill="rgb(229,202,19)" fg:x="75745" fg:w="532"/><text x="69.3478%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (264 samples, 0.24%)</title><rect x="69.3423%" y="949" width="0.2408%" height="15" fill="rgb(229,105,46)" fg:x="76013" fg:w="264"/><text x="69.5923%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (133 samples, 0.12%)</title><rect x="69.4618%" y="933" width="0.1213%" height="15" fill="rgb(235,108,1)" fg:x="76144" fg:w="133"/><text x="69.7118%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (133 samples, 0.12%)</title><rect x="69.4618%" y="917" width="0.1213%" height="15" fill="rgb(245,111,35)" fg:x="76144" fg:w="133"/><text x="69.7118%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (45 samples, 0.04%)</title><rect x="69.6296%" y="789" width="0.0411%" height="15" fill="rgb(219,185,31)" fg:x="76328" fg:w="45"/><text x="69.8796%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (45 samples, 0.04%)</title><rect x="69.6296%" y="773" width="0.0411%" height="15" fill="rgb(214,4,43)" fg:x="76328" fg:w="45"/><text x="69.8796%" y="783.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (37 samples, 0.03%)</title><rect x="69.6369%" y="757" width="0.0338%" height="15" fill="rgb(235,227,40)" fg:x="76336" fg:w="37"/><text x="69.8869%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (27 samples, 0.02%)</title><rect x="69.6460%" y="741" width="0.0246%" height="15" fill="rgb(230,88,30)" fg:x="76346" fg:w="27"/><text x="69.8960%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (27 samples, 0.02%)</title><rect x="69.6460%" y="725" width="0.0246%" height="15" fill="rgb(216,217,1)" fg:x="76346" fg:w="27"/><text x="69.8960%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (27 samples, 0.02%)</title><rect x="69.6460%" y="709" width="0.0246%" height="15" fill="rgb(248,139,50)" fg:x="76346" fg:w="27"/><text x="69.8960%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (126 samples, 0.11%)</title><rect x="69.6214%" y="837" width="0.1149%" height="15" fill="rgb(233,1,21)" fg:x="76319" fg:w="126"/><text x="69.8714%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (121 samples, 0.11%)</title><rect x="69.6260%" y="821" width="0.1104%" height="15" fill="rgb(215,183,12)" fg:x="76324" fg:w="121"/><text x="69.8760%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (118 samples, 0.11%)</title><rect x="69.6287%" y="805" width="0.1076%" height="15" fill="rgb(229,104,42)" fg:x="76327" fg:w="118"/><text x="69.8787%" y="815.50"></text></g><g><title>snmalloc::FreeListIter::take (66 samples, 0.06%)</title><rect x="69.6762%" y="789" width="0.0602%" height="15" fill="rgb(243,34,48)" fg:x="76379" fg:w="66"/><text x="69.9262%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (66 samples, 0.06%)</title><rect x="69.6762%" y="773" width="0.0602%" height="15" fill="rgb(239,11,44)" fg:x="76379" fg:w="66"/><text x="69.9262%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (170 samples, 0.16%)</title><rect x="69.5840%" y="965" width="0.1551%" height="15" fill="rgb(231,98,35)" fg:x="76278" fg:w="170"/><text x="69.8340%" y="975.50"></text></g><g><title>alloc::alloc::exchange_malloc (137 samples, 0.12%)</title><rect x="69.6141%" y="949" width="0.1250%" height="15" fill="rgb(233,28,25)" fg:x="76311" fg:w="137"/><text x="69.8641%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (137 samples, 0.12%)</title><rect x="69.6141%" y="933" width="0.1250%" height="15" fill="rgb(234,123,11)" fg:x="76311" fg:w="137"/><text x="69.8641%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (137 samples, 0.12%)</title><rect x="69.6141%" y="917" width="0.1250%" height="15" fill="rgb(220,69,3)" fg:x="76311" fg:w="137"/><text x="69.8641%" y="927.50"></text></g><g><title>alloc::alloc::alloc (137 samples, 0.12%)</title><rect x="69.6141%" y="901" width="0.1250%" height="15" fill="rgb(214,64,36)" fg:x="76311" fg:w="137"/><text x="69.8641%" y="911.50"></text></g><g><title>__rg_alloc (137 samples, 0.12%)</title><rect x="69.6141%" y="885" width="0.1250%" height="15" fill="rgb(211,138,32)" fg:x="76311" fg:w="137"/><text x="69.8641%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (137 samples, 0.12%)</title><rect x="69.6141%" y="869" width="0.1250%" height="15" fill="rgb(213,118,47)" fg:x="76311" fg:w="137"/><text x="69.8641%" y="879.50"></text></g><g><title>rust_alloc (132 samples, 0.12%)</title><rect x="69.6187%" y="853" width="0.1204%" height="15" fill="rgb(243,124,49)" fg:x="76316" fg:w="132"/><text x="69.8687%" y="863.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (1,247 samples, 1.14%)</title><rect x="68.6061%" y="1029" width="1.1376%" height="15" fill="rgb(221,30,28)" fg:x="75206" fg:w="1247"/><text x="68.8561%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::clone::Clone for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::clone (1,238 samples, 1.13%)</title><rect x="68.6143%" y="1013" width="1.1294%" height="15" fill="rgb(246,37,13)" fg:x="75215" fg:w="1238"/><text x="68.8643%" y="1023.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (175 samples, 0.16%)</title><rect x="69.5840%" y="997" width="0.1596%" height="15" fill="rgb(249,66,14)" fg:x="76278" fg:w="175"/><text x="69.8340%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (175 samples, 0.16%)</title><rect x="69.5840%" y="981" width="0.1596%" height="15" fill="rgb(213,166,5)" fg:x="76278" fg:w="175"/><text x="69.8340%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (6,093 samples, 5.56%)</title><rect x="64.1927%" y="1125" width="5.5583%" height="15" fill="rgb(221,66,24)" fg:x="70368" fg:w="6093"/><text x="64.4427%" y="1135.50">tremor_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,093 samples, 5.56%)</title><rect x="64.1927%" y="1109" width="5.5583%" height="15" fill="rgb(210,132,17)" fg:x="70368" fg:w="6093"/><text x="64.4427%" y="1119.50">&lt;core::..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (6,093 samples, 5.56%)</title><rect x="64.1927%" y="1093" width="5.5583%" height="15" fill="rgb(243,202,5)" fg:x="70368" fg:w="6093"/><text x="64.4427%" y="1103.50">tremor_..</text></g><g><title>tremor_runtime::connectors::source::build_events (5,829 samples, 5.32%)</title><rect x="64.4335%" y="1077" width="5.3175%" height="15" fill="rgb(233,70,48)" fg:x="70632" fg:w="5829"/><text x="64.6835%" y="1087.50">tremor_..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,283 samples, 2.08%)</title><rect x="67.6683%" y="1061" width="2.0826%" height="15" fill="rgb(238,41,26)" fg:x="74178" fg:w="2283"/><text x="67.9183%" y="1071.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,555 samples, 1.42%)</title><rect x="68.3324%" y="1045" width="1.4185%" height="15" fill="rgb(241,19,31)" fg:x="74906" fg:w="1555"/><text x="68.5824%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="69.9881%" y="949" width="0.0182%" height="15" fill="rgb(214,76,10)" fg:x="76721" fg:w="20"/><text x="70.2381%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="69.9881%" y="933" width="0.0182%" height="15" fill="rgb(254,202,22)" fg:x="76721" fg:w="20"/><text x="70.2381%" y="943.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="69.9881%" y="981" width="0.0192%" height="15" fill="rgb(214,72,24)" fg:x="76721" fg:w="21"/><text x="70.2381%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (21 samples, 0.02%)</title><rect x="69.9881%" y="965" width="0.0192%" height="15" fill="rgb(221,92,46)" fg:x="76721" fg:w="21"/><text x="70.2381%" y="975.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="70.0073%" y="981" width="0.0119%" height="15" fill="rgb(246,13,50)" fg:x="76742" fg:w="13"/><text x="70.2573%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (21 samples, 0.02%)</title><rect x="70.0192%" y="981" width="0.0192%" height="15" fill="rgb(240,165,38)" fg:x="76755" fg:w="21"/><text x="70.2692%" y="991.50"></text></g><g><title>core::mem::replace (21 samples, 0.02%)</title><rect x="70.0192%" y="965" width="0.0192%" height="15" fill="rgb(241,24,51)" fg:x="76755" fg:w="21"/><text x="70.2692%" y="975.50"></text></g><g><title>core::ptr::read (21 samples, 0.02%)</title><rect x="70.0192%" y="949" width="0.0192%" height="15" fill="rgb(227,51,44)" fg:x="76755" fg:w="21"/><text x="70.2692%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (144 samples, 0.13%)</title><rect x="70.0958%" y="965" width="0.1314%" height="15" fill="rgb(231,121,3)" fg:x="76839" fg:w="144"/><text x="70.3458%" y="975.50"></text></g><g><title>core::mem::replace (144 samples, 0.13%)</title><rect x="70.0958%" y="949" width="0.1314%" height="15" fill="rgb(245,3,41)" fg:x="76839" fg:w="144"/><text x="70.3458%" y="959.50"></text></g><g><title>core::ptr::read (144 samples, 0.13%)</title><rect x="70.0958%" y="933" width="0.1314%" height="15" fill="rgb(214,13,26)" fg:x="76839" fg:w="144"/><text x="70.3458%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (268 samples, 0.24%)</title><rect x="70.0383%" y="981" width="0.2445%" height="15" fill="rgb(252,75,11)" fg:x="76776" fg:w="268"/><text x="70.2883%" y="991.50"></text></g><g><title>core::mem::drop (61 samples, 0.06%)</title><rect x="70.2271%" y="965" width="0.0556%" height="15" fill="rgb(218,226,17)" fg:x="76983" fg:w="61"/><text x="70.4771%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (61 samples, 0.06%)</title><rect x="70.2271%" y="949" width="0.0556%" height="15" fill="rgb(248,89,38)" fg:x="76983" fg:w="61"/><text x="70.4771%" y="959.50"></text></g><g><title>__GI___lll_lock_wait (13 samples, 0.01%)</title><rect x="70.3065%" y="869" width="0.0119%" height="15" fill="rgb(237,73,46)" fg:x="77070" fg:w="13"/><text x="70.5565%" y="879.50"></text></g><g><title>__entry_text_start (13 samples, 0.01%)</title><rect x="70.3065%" y="853" width="0.0119%" height="15" fill="rgb(242,78,33)" fg:x="77070" fg:w="13"/><text x="70.5565%" y="863.50"></text></g><g><title>__x64_sys_futex (75 samples, 0.07%)</title><rect x="70.3612%" y="821" width="0.0684%" height="15" fill="rgb(235,60,3)" fg:x="77130" fg:w="75"/><text x="70.6112%" y="831.50"></text></g><g><title>do_futex (59 samples, 0.05%)</title><rect x="70.3758%" y="805" width="0.0538%" height="15" fill="rgb(216,172,19)" fg:x="77146" fg:w="59"/><text x="70.6258%" y="815.50"></text></g><g><title>futex_wake (51 samples, 0.05%)</title><rect x="70.3831%" y="789" width="0.0465%" height="15" fill="rgb(227,6,42)" fg:x="77154" fg:w="51"/><text x="70.6331%" y="799.50"></text></g><g><title>syscall_exit_to_user_mode (166 samples, 0.15%)</title><rect x="70.4342%" y="821" width="0.1514%" height="15" fill="rgb(223,207,42)" fg:x="77210" fg:w="166"/><text x="70.6842%" y="831.50"></text></g><g><title>__audit_syscall_entry (15 samples, 0.01%)</title><rect x="70.5902%" y="805" width="0.0137%" height="15" fill="rgb(246,138,30)" fg:x="77381" fg:w="15"/><text x="70.8402%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (289 samples, 0.26%)</title><rect x="70.3421%" y="853" width="0.2636%" height="15" fill="rgb(251,199,47)" fg:x="77109" fg:w="289"/><text x="70.5921%" y="863.50"></text></g><g><title>do_syscall_64 (282 samples, 0.26%)</title><rect x="70.3485%" y="837" width="0.2573%" height="15" fill="rgb(228,218,44)" fg:x="77116" fg:w="282"/><text x="70.5985%" y="847.50"></text></g><g><title>syscall_trace_enter.constprop.0 (22 samples, 0.02%)</title><rect x="70.5857%" y="821" width="0.0201%" height="15" fill="rgb(220,68,6)" fg:x="77376" fg:w="22"/><text x="70.8357%" y="831.50"></text></g><g><title>core::mem::drop (363 samples, 0.33%)</title><rect x="70.2828%" y="981" width="0.3311%" height="15" fill="rgb(240,60,26)" fg:x="77044" fg:w="363"/><text x="70.5328%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (363 samples, 0.33%)</title><rect x="70.2828%" y="965" width="0.3311%" height="15" fill="rgb(211,200,19)" fg:x="77044" fg:w="363"/><text x="70.5328%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (360 samples, 0.33%)</title><rect x="70.2855%" y="949" width="0.3284%" height="15" fill="rgb(242,145,30)" fg:x="77047" fg:w="360"/><text x="70.5355%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (360 samples, 0.33%)</title><rect x="70.2855%" y="933" width="0.3284%" height="15" fill="rgb(225,64,13)" fg:x="77047" fg:w="360"/><text x="70.5355%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (360 samples, 0.33%)</title><rect x="70.2855%" y="917" width="0.3284%" height="15" fill="rgb(218,103,35)" fg:x="77047" fg:w="360"/><text x="70.5355%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (360 samples, 0.33%)</title><rect x="70.2855%" y="901" width="0.3284%" height="15" fill="rgb(216,93,46)" fg:x="77047" fg:w="360"/><text x="70.5355%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (360 samples, 0.33%)</title><rect x="70.2855%" y="885" width="0.3284%" height="15" fill="rgb(225,159,27)" fg:x="77047" fg:w="360"/><text x="70.5355%" y="895.50"></text></g><g><title>__GI___lll_lock_wake (324 samples, 0.30%)</title><rect x="70.3184%" y="869" width="0.2956%" height="15" fill="rgb(225,204,11)" fg:x="77083" fg:w="324"/><text x="70.5684%" y="879.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="70.6139%" y="965" width="0.0100%" height="15" fill="rgb(205,56,4)" fg:x="77407" fg:w="11"/><text x="70.8639%" y="975.50"></text></g><g><title>std::sync::poison::Flag::done (14 samples, 0.01%)</title><rect x="70.6285%" y="933" width="0.0128%" height="15" fill="rgb(206,6,35)" fg:x="77423" fg:w="14"/><text x="70.8785%" y="943.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="70.6294%" y="917" width="0.0119%" height="15" fill="rgb(247,73,52)" fg:x="77424" fg:w="13"/><text x="70.8794%" y="927.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="70.6294%" y="901" width="0.0119%" height="15" fill="rgb(246,97,4)" fg:x="77424" fg:w="13"/><text x="70.8794%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="70.6294%" y="885" width="0.0119%" height="15" fill="rgb(212,37,15)" fg:x="77424" fg:w="13"/><text x="70.8794%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (256 samples, 0.23%)</title><rect x="70.6468%" y="901" width="0.2335%" height="15" fill="rgb(208,130,40)" fg:x="77443" fg:w="256"/><text x="70.8968%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (297 samples, 0.27%)</title><rect x="70.6139%" y="981" width="0.2709%" height="15" fill="rgb(236,55,29)" fg:x="77407" fg:w="297"/><text x="70.8639%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (286 samples, 0.26%)</title><rect x="70.6240%" y="965" width="0.2609%" height="15" fill="rgb(209,156,45)" fg:x="77418" fg:w="286"/><text x="70.8740%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (286 samples, 0.26%)</title><rect x="70.6240%" y="949" width="0.2609%" height="15" fill="rgb(249,107,4)" fg:x="77418" fg:w="286"/><text x="70.8740%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (267 samples, 0.24%)</title><rect x="70.6413%" y="933" width="0.2436%" height="15" fill="rgb(227,7,13)" fg:x="77437" fg:w="267"/><text x="70.8913%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (261 samples, 0.24%)</title><rect x="70.6468%" y="917" width="0.2381%" height="15" fill="rgb(250,129,14)" fg:x="77443" fg:w="261"/><text x="70.8968%" y="927.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (15 samples, 0.01%)</title><rect x="70.8922%" y="933" width="0.0137%" height="15" fill="rgb(229,92,13)" fg:x="77712" fg:w="15"/><text x="71.1422%" y="943.50"></text></g><g><title>core::task::wake::Waker::will_wake (26 samples, 0.02%)</title><rect x="70.8858%" y="981" width="0.0237%" height="15" fill="rgb(245,98,39)" fg:x="77705" fg:w="26"/><text x="71.1358%" y="991.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (26 samples, 0.02%)</title><rect x="70.8858%" y="965" width="0.0237%" height="15" fill="rgb(234,135,48)" fg:x="77705" fg:w="26"/><text x="71.1358%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.02%)</title><rect x="70.8922%" y="949" width="0.0173%" height="15" fill="rgb(230,98,28)" fg:x="77712" fg:w="19"/><text x="71.1422%" y="959.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="70.9223%" y="949" width="0.0164%" height="15" fill="rgb(223,121,0)" fg:x="77745" fg:w="18"/><text x="71.1723%" y="959.50"></text></g><g><title>std::sync::poison::Flag::borrow (18 samples, 0.02%)</title><rect x="70.9223%" y="933" width="0.0164%" height="15" fill="rgb(234,173,33)" fg:x="77745" fg:w="18"/><text x="71.1723%" y="943.50"></text></g><g><title>std::thread::panicking (14 samples, 0.01%)</title><rect x="70.9259%" y="917" width="0.0128%" height="15" fill="rgb(245,47,8)" fg:x="77749" fg:w="14"/><text x="71.1759%" y="927.50"></text></g><g><title>std::panicking::panicking (14 samples, 0.01%)</title><rect x="70.9259%" y="901" width="0.0128%" height="15" fill="rgb(205,17,20)" fg:x="77749" fg:w="14"/><text x="71.1759%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (14 samples, 0.01%)</title><rect x="70.9259%" y="885" width="0.0128%" height="15" fill="rgb(232,151,16)" fg:x="77749" fg:w="14"/><text x="71.1759%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="70.9259%" y="869" width="0.0128%" height="15" fill="rgb(208,30,32)" fg:x="77749" fg:w="14"/><text x="71.1759%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="70.9259%" y="853" width="0.0128%" height="15" fill="rgb(254,26,3)" fg:x="77749" fg:w="14"/><text x="71.1759%" y="863.50"></text></g><g><title>__entry_text_start (12 samples, 0.01%)</title><rect x="71.4340%" y="885" width="0.0109%" height="15" fill="rgb(240,177,30)" fg:x="78306" fg:w="12"/><text x="71.6840%" y="895.50"></text></g><g><title>__perf_event_task_sched_out (51 samples, 0.05%)</title><rect x="71.6429%" y="757" width="0.0465%" height="15" fill="rgb(248,76,44)" fg:x="78535" fg:w="51"/><text x="71.8929%" y="767.50"></text></g><g><title>x86_pmu_disable (16 samples, 0.01%)</title><rect x="71.6749%" y="741" width="0.0146%" height="15" fill="rgb(241,186,54)" fg:x="78570" fg:w="16"/><text x="71.9249%" y="751.50"></text></g><g><title>reweight_entity (14 samples, 0.01%)</title><rect x="71.7615%" y="725" width="0.0128%" height="15" fill="rgb(249,171,29)" fg:x="78665" fg:w="14"/><text x="72.0115%" y="735.50"></text></g><g><title>update_cfs_group (26 samples, 0.02%)</title><rect x="71.7743%" y="725" width="0.0237%" height="15" fill="rgb(237,151,44)" fg:x="78679" fg:w="26"/><text x="72.0243%" y="735.50"></text></g><g><title>__calc_delta (31 samples, 0.03%)</title><rect x="71.8300%" y="709" width="0.0283%" height="15" fill="rgb(228,174,30)" fg:x="78740" fg:w="31"/><text x="72.0800%" y="719.50"></text></g><g><title>cpuacct_charge (31 samples, 0.03%)</title><rect x="71.8683%" y="709" width="0.0283%" height="15" fill="rgb(252,14,37)" fg:x="78782" fg:w="31"/><text x="72.1183%" y="719.50"></text></g><g><title>update_curr (113 samples, 0.10%)</title><rect x="71.7980%" y="725" width="0.1031%" height="15" fill="rgb(207,111,40)" fg:x="78705" fg:w="113"/><text x="72.0480%" y="735.50"></text></g><g><title>__update_load_avg_cfs_rq (21 samples, 0.02%)</title><rect x="71.9139%" y="709" width="0.0192%" height="15" fill="rgb(248,171,54)" fg:x="78832" fg:w="21"/><text x="72.1639%" y="719.50"></text></g><g><title>dequeue_entity (226 samples, 0.21%)</title><rect x="71.7396%" y="741" width="0.2062%" height="15" fill="rgb(211,127,2)" fg:x="78641" fg:w="226"/><text x="71.9896%" y="751.50"></text></g><g><title>update_load_avg (49 samples, 0.04%)</title><rect x="71.9011%" y="725" width="0.0447%" height="15" fill="rgb(236,87,47)" fg:x="78818" fg:w="49"/><text x="72.1511%" y="735.50"></text></g><g><title>__update_load_avg_se (14 samples, 0.01%)</title><rect x="71.9330%" y="709" width="0.0128%" height="15" fill="rgb(223,190,45)" fg:x="78853" fg:w="14"/><text x="72.1830%" y="719.50"></text></g><g><title>dequeue_task_fair (273 samples, 0.25%)</title><rect x="71.6977%" y="757" width="0.2490%" height="15" fill="rgb(215,5,16)" fg:x="78595" fg:w="273"/><text x="71.9477%" y="767.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (40 samples, 0.04%)</title><rect x="72.0279%" y="725" width="0.0365%" height="15" fill="rgb(252,82,33)" fg:x="78957" fg:w="40"/><text x="72.2779%" y="735.50"></text></g><g><title>native_write_msr (37 samples, 0.03%)</title><rect x="72.0307%" y="709" width="0.0338%" height="15" fill="rgb(247,213,44)" fg:x="78960" fg:w="37"/><text x="72.2807%" y="719.50"></text></g><g><title>__perf_event_task_sched_in (50 samples, 0.05%)</title><rect x="72.0197%" y="741" width="0.0456%" height="15" fill="rgb(205,196,44)" fg:x="78948" fg:w="50"/><text x="72.2697%" y="751.50"></text></g><g><title>finish_task_switch.isra.0 (131 samples, 0.12%)</title><rect x="71.9467%" y="757" width="0.1195%" height="15" fill="rgb(237,96,54)" fg:x="78868" fg:w="131"/><text x="72.1967%" y="767.50"></text></g><g><title>pick_next_task_fair (34 samples, 0.03%)</title><rect x="72.0662%" y="757" width="0.0310%" height="15" fill="rgb(230,113,34)" fg:x="78999" fg:w="34"/><text x="72.3162%" y="767.50"></text></g><g><title>newidle_balance (26 samples, 0.02%)</title><rect x="72.0735%" y="741" width="0.0237%" height="15" fill="rgb(221,224,12)" fg:x="79007" fg:w="26"/><text x="72.3235%" y="751.50"></text></g><g><title>pick_next_task_idle (13 samples, 0.01%)</title><rect x="72.0972%" y="757" width="0.0119%" height="15" fill="rgb(219,112,44)" fg:x="79033" fg:w="13"/><text x="72.3472%" y="767.50"></text></g><g><title>set_next_task_idle (12 samples, 0.01%)</title><rect x="72.0982%" y="741" width="0.0109%" height="15" fill="rgb(210,31,13)" fg:x="79034" fg:w="12"/><text x="72.3482%" y="751.50"></text></g><g><title>__update_idle_core (12 samples, 0.01%)</title><rect x="72.0982%" y="725" width="0.0109%" height="15" fill="rgb(230,25,16)" fg:x="79034" fg:w="12"/><text x="72.3482%" y="735.50"></text></g><g><title>iterate_groups (13 samples, 0.01%)</title><rect x="72.1201%" y="741" width="0.0119%" height="15" fill="rgb(246,108,53)" fg:x="79058" fg:w="13"/><text x="72.3701%" y="751.50"></text></g><g><title>psi_group_change (159 samples, 0.15%)</title><rect x="72.1346%" y="741" width="0.1450%" height="15" fill="rgb(241,172,50)" fg:x="79074" fg:w="159"/><text x="72.3846%" y="751.50"></text></g><g><title>psi_task_switch (197 samples, 0.18%)</title><rect x="72.1091%" y="757" width="0.1797%" height="15" fill="rgb(235,141,10)" fg:x="79046" fg:w="197"/><text x="72.3591%" y="767.50"></text></g><g><title>put_prev_task_fair (45 samples, 0.04%)</title><rect x="72.2888%" y="757" width="0.0411%" height="15" fill="rgb(220,174,43)" fg:x="79243" fg:w="45"/><text x="72.5388%" y="767.50"></text></g><g><title>put_prev_entity (25 samples, 0.02%)</title><rect x="72.3071%" y="741" width="0.0228%" height="15" fill="rgb(215,181,40)" fg:x="79263" fg:w="25"/><text x="72.5571%" y="751.50"></text></g><g><title>sched_clock_cpu (21 samples, 0.02%)</title><rect x="72.3545%" y="741" width="0.0192%" height="15" fill="rgb(230,97,2)" fg:x="79315" fg:w="21"/><text x="72.6045%" y="751.50"></text></g><g><title>native_sched_clock (19 samples, 0.02%)</title><rect x="72.3563%" y="725" width="0.0173%" height="15" fill="rgb(211,25,27)" fg:x="79317" fg:w="19"/><text x="72.6063%" y="735.50"></text></g><g><title>futex_wait_queue (918 samples, 0.84%)</title><rect x="71.5481%" y="805" width="0.8374%" height="15" fill="rgb(230,87,26)" fg:x="78431" fg:w="918"/><text x="71.7981%" y="815.50"></text></g><g><title>schedule (897 samples, 0.82%)</title><rect x="71.5672%" y="789" width="0.8183%" height="15" fill="rgb(227,160,17)" fg:x="78452" fg:w="897"/><text x="71.8172%" y="799.50"></text></g><g><title>__schedule (882 samples, 0.80%)</title><rect x="71.5809%" y="773" width="0.8046%" height="15" fill="rgb(244,85,34)" fg:x="78467" fg:w="882"/><text x="71.8309%" y="783.50"></text></g><g><title>update_rq_clock (47 samples, 0.04%)</title><rect x="72.3426%" y="757" width="0.0429%" height="15" fill="rgb(207,70,0)" fg:x="79302" fg:w="47"/><text x="72.5926%" y="767.50"></text></g><g><title>update_irq_load_avg (13 samples, 0.01%)</title><rect x="72.3737%" y="741" width="0.0119%" height="15" fill="rgb(223,129,7)" fg:x="79336" fg:w="13"/><text x="72.6237%" y="751.50"></text></g><g><title>futex_get_value_locked (18 samples, 0.02%)</title><rect x="72.3883%" y="789" width="0.0164%" height="15" fill="rgb(246,105,7)" fg:x="79352" fg:w="18"/><text x="72.6383%" y="799.50"></text></g><g><title>__get_user_nocheck_4 (12 samples, 0.01%)</title><rect x="72.3937%" y="773" width="0.0109%" height="15" fill="rgb(215,154,42)" fg:x="79358" fg:w="12"/><text x="72.6437%" y="783.50"></text></g><g><title>futex_q_lock (41 samples, 0.04%)</title><rect x="72.4047%" y="789" width="0.0374%" height="15" fill="rgb(220,215,30)" fg:x="79370" fg:w="41"/><text x="72.6547%" y="799.50"></text></g><g><title>futex_hash (11 samples, 0.01%)</title><rect x="72.4320%" y="773" width="0.0100%" height="15" fill="rgb(228,81,51)" fg:x="79400" fg:w="11"/><text x="72.6820%" y="783.50"></text></g><g><title>__x64_sys_futex (1,062 samples, 0.97%)</title><rect x="71.4815%" y="853" width="0.9688%" height="15" fill="rgb(247,71,54)" fg:x="78358" fg:w="1062"/><text x="71.7315%" y="863.50"></text></g><g><title>do_futex (1,041 samples, 0.95%)</title><rect x="71.5006%" y="837" width="0.9496%" height="15" fill="rgb(234,176,34)" fg:x="78379" fg:w="1041"/><text x="71.7506%" y="847.50"></text></g><g><title>futex_wait (1,026 samples, 0.94%)</title><rect x="71.5143%" y="821" width="0.9360%" height="15" fill="rgb(241,103,54)" fg:x="78394" fg:w="1026"/><text x="71.7643%" y="831.50"></text></g><g><title>futex_wait_setup (71 samples, 0.06%)</title><rect x="72.3855%" y="805" width="0.0648%" height="15" fill="rgb(228,22,34)" fg:x="79349" fg:w="71"/><text x="72.6355%" y="815.50"></text></g><g><title>__get_user_8 (26 samples, 0.02%)</title><rect x="72.6464%" y="805" width="0.0237%" height="15" fill="rgb(241,179,48)" fg:x="79635" fg:w="26"/><text x="72.8964%" y="815.50"></text></g><g><title>__rseq_handle_notify_resume (59 samples, 0.05%)</title><rect x="72.6282%" y="821" width="0.0538%" height="15" fill="rgb(235,167,37)" fg:x="79615" fg:w="59"/><text x="72.8782%" y="831.50"></text></g><g><title>__put_user_nocheck_8 (12 samples, 0.01%)</title><rect x="72.6710%" y="805" width="0.0109%" height="15" fill="rgb(213,109,30)" fg:x="79662" fg:w="12"/><text x="72.9210%" y="815.50"></text></g><g><title>exit_to_user_mode_prepare (117 samples, 0.11%)</title><rect x="72.5999%" y="837" width="0.1067%" height="15" fill="rgb(222,172,16)" fg:x="79584" fg:w="117"/><text x="72.8499%" y="847.50"></text></g><g><title>switch_fpu_return (13 samples, 0.01%)</title><rect x="72.6948%" y="821" width="0.0119%" height="15" fill="rgb(233,192,5)" fg:x="79688" fg:w="13"/><text x="72.9448%" y="831.50"></text></g><g><title>syscall_exit_to_user_mode (304 samples, 0.28%)</title><rect x="72.4539%" y="853" width="0.2773%" height="15" fill="rgb(247,189,41)" fg:x="79424" fg:w="304"/><text x="72.7039%" y="863.50"></text></g><g><title>syscall_exit_work (27 samples, 0.02%)</title><rect x="72.7066%" y="837" width="0.0246%" height="15" fill="rgb(218,134,47)" fg:x="79701" fg:w="27"/><text x="72.9566%" y="847.50"></text></g><g><title>__audit_syscall_entry (14 samples, 0.01%)</title><rect x="72.7358%" y="837" width="0.0128%" height="15" fill="rgb(216,29,3)" fg:x="79733" fg:w="14"/><text x="72.9858%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,428 samples, 1.30%)</title><rect x="71.4468%" y="885" width="1.3027%" height="15" fill="rgb(246,140,12)" fg:x="78320" fg:w="1428"/><text x="71.6968%" y="895.50"></text></g><g><title>do_syscall_64 (1,423 samples, 1.30%)</title><rect x="71.4514%" y="869" width="1.2981%" height="15" fill="rgb(230,136,11)" fg:x="78325" fg:w="1423"/><text x="71.7014%" y="879.50"></text></g><g><title>syscall_trace_enter.constprop.0 (20 samples, 0.02%)</title><rect x="72.7313%" y="853" width="0.0182%" height="15" fill="rgb(247,22,47)" fg:x="79728" fg:w="20"/><text x="72.9813%" y="863.50"></text></g><g><title>event_listener::Inner::lock (2,027 samples, 1.85%)</title><rect x="70.9095%" y="981" width="1.8491%" height="15" fill="rgb(218,84,22)" fg:x="77731" fg:w="2027"/><text x="71.1595%" y="991.50">e..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2,013 samples, 1.84%)</title><rect x="70.9223%" y="965" width="1.8363%" height="15" fill="rgb(216,87,39)" fg:x="77745" fg:w="2013"/><text x="71.1723%" y="975.50">s..</text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,995 samples, 1.82%)</title><rect x="70.9387%" y="949" width="1.8199%" height="15" fill="rgb(221,178,8)" fg:x="77763" fg:w="1995"/><text x="71.1887%" y="959.50">s..</text></g><g><title>std::sys::unix::mutex::Mutex::lock (1,982 samples, 1.81%)</title><rect x="70.9506%" y="933" width="1.8081%" height="15" fill="rgb(230,42,11)" fg:x="77776" fg:w="1982"/><text x="71.2006%" y="943.50">s..</text></g><g><title>___pthread_mutex_lock (1,982 samples, 1.81%)</title><rect x="70.9506%" y="917" width="1.8081%" height="15" fill="rgb(237,229,4)" fg:x="77776" fg:w="1982"/><text x="71.2006%" y="927.50">_..</text></g><g><title>__GI___lll_lock_wait (1,505 samples, 1.37%)</title><rect x="71.3857%" y="901" width="1.3729%" height="15" fill="rgb(222,31,33)" fg:x="78253" fg:w="1505"/><text x="71.6357%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (3,163 samples, 2.89%)</title><rect x="69.9179%" y="997" width="2.8854%" height="15" fill="rgb(210,17,39)" fg:x="76644" fg:w="3163"/><text x="70.1679%" y="1007.50">&lt;e..</text></g><g><title>event_listener::List::remove (49 samples, 0.04%)</title><rect x="72.7586%" y="981" width="0.0447%" height="15" fill="rgb(244,93,20)" fg:x="79758" fg:w="49"/><text x="73.0086%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (39 samples, 0.04%)</title><rect x="72.7677%" y="965" width="0.0356%" height="15" fill="rgb(210,40,47)" fg:x="79768" fg:w="39"/><text x="73.0177%" y="975.50"></text></g><g><title>core::mem::replace (39 samples, 0.04%)</title><rect x="72.7677%" y="949" width="0.0356%" height="15" fill="rgb(239,211,47)" fg:x="79768" fg:w="39"/><text x="73.0177%" y="959.50"></text></g><g><title>core::ptr::read (39 samples, 0.04%)</title><rect x="72.7677%" y="933" width="0.0356%" height="15" fill="rgb(251,223,49)" fg:x="79768" fg:w="39"/><text x="73.0177%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (54 samples, 0.05%)</title><rect x="72.9566%" y="949" width="0.0493%" height="15" fill="rgb(221,149,5)" fg:x="79975" fg:w="54"/><text x="73.2066%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (51 samples, 0.05%)</title><rect x="72.9593%" y="933" width="0.0465%" height="15" fill="rgb(219,224,51)" fg:x="79978" fg:w="51"/><text x="73.2093%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (51 samples, 0.05%)</title><rect x="72.9593%" y="917" width="0.0465%" height="15" fill="rgb(223,7,8)" fg:x="79978" fg:w="51"/><text x="73.2093%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (51 samples, 0.05%)</title><rect x="72.9593%" y="901" width="0.0465%" height="15" fill="rgb(241,217,22)" fg:x="79978" fg:w="51"/><text x="73.2093%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (139 samples, 0.13%)</title><rect x="73.0086%" y="949" width="0.1268%" height="15" fill="rgb(248,209,0)" fg:x="80032" fg:w="139"/><text x="73.2586%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (139 samples, 0.13%)</title><rect x="73.0086%" y="933" width="0.1268%" height="15" fill="rgb(217,205,4)" fg:x="80032" fg:w="139"/><text x="73.2586%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (363 samples, 0.33%)</title><rect x="73.1354%" y="949" width="0.3311%" height="15" fill="rgb(228,124,39)" fg:x="80171" fg:w="363"/><text x="73.3854%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (356 samples, 0.32%)</title><rect x="73.1418%" y="933" width="0.3248%" height="15" fill="rgb(250,116,42)" fg:x="80178" fg:w="356"/><text x="73.3918%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (723 samples, 0.66%)</title><rect x="72.8161%" y="981" width="0.6596%" height="15" fill="rgb(223,202,9)" fg:x="79821" fg:w="723"/><text x="73.0661%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (690 samples, 0.63%)</title><rect x="72.8462%" y="965" width="0.6294%" height="15" fill="rgb(242,222,40)" fg:x="79854" fg:w="690"/><text x="73.0962%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (86 samples, 0.08%)</title><rect x="73.5039%" y="965" width="0.0785%" height="15" fill="rgb(229,99,46)" fg:x="80575" fg:w="86"/><text x="73.7539%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (86 samples, 0.08%)</title><rect x="73.5039%" y="949" width="0.0785%" height="15" fill="rgb(225,56,46)" fg:x="80575" fg:w="86"/><text x="73.7539%" y="959.50"></text></g><g><title>event_listener::Event::try_inner (134 samples, 0.12%)</title><rect x="73.5824%" y="965" width="0.1222%" height="15" fill="rgb(227,94,5)" fg:x="80661" fg:w="134"/><text x="73.8324%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (134 samples, 0.12%)</title><rect x="73.5824%" y="949" width="0.1222%" height="15" fill="rgb(205,112,38)" fg:x="80661" fg:w="134"/><text x="73.8324%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (134 samples, 0.12%)</title><rect x="73.5824%" y="933" width="0.1222%" height="15" fill="rgb(231,133,46)" fg:x="80661" fg:w="134"/><text x="73.8324%" y="943.50"></text></g><g><title>event_listener::Inner::lock (18 samples, 0.02%)</title><rect x="73.7046%" y="965" width="0.0164%" height="15" fill="rgb(217,16,9)" fg:x="80795" fg:w="18"/><text x="73.9546%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="73.7046%" y="949" width="0.0164%" height="15" fill="rgb(249,173,9)" fg:x="80795" fg:w="18"/><text x="73.9546%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.02%)</title><rect x="73.7046%" y="933" width="0.0164%" height="15" fill="rgb(205,163,53)" fg:x="80795" fg:w="18"/><text x="73.9546%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (16 samples, 0.01%)</title><rect x="73.7064%" y="917" width="0.0146%" height="15" fill="rgb(217,54,41)" fg:x="80797" fg:w="16"/><text x="73.9564%" y="927.50"></text></g><g><title>___pthread_mutex_lock (16 samples, 0.01%)</title><rect x="73.7064%" y="901" width="0.0146%" height="15" fill="rgb(228,216,12)" fg:x="80797" fg:w="16"/><text x="73.9564%" y="911.50"></text></g><g><title>ttwu_do_activate (11 samples, 0.01%)</title><rect x="73.7347%" y="581" width="0.0100%" height="15" fill="rgb(244,228,15)" fg:x="80828" fg:w="11"/><text x="73.9847%" y="591.50"></text></g><g><title>enqueue_task (11 samples, 0.01%)</title><rect x="73.7347%" y="565" width="0.0100%" height="15" fill="rgb(221,176,53)" fg:x="80828" fg:w="11"/><text x="73.9847%" y="575.50"></text></g><g><title>__wake_up_common_lock (14 samples, 0.01%)</title><rect x="73.7329%" y="645" width="0.0128%" height="15" fill="rgb(205,94,34)" fg:x="80826" fg:w="14"/><text x="73.9829%" y="655.50"></text></g><g><title>__wake_up_common (14 samples, 0.01%)</title><rect x="73.7329%" y="629" width="0.0128%" height="15" fill="rgb(213,110,48)" fg:x="80826" fg:w="14"/><text x="73.9829%" y="639.50"></text></g><g><title>autoremove_wake_function (14 samples, 0.01%)</title><rect x="73.7329%" y="613" width="0.0128%" height="15" fill="rgb(236,142,28)" fg:x="80826" fg:w="14"/><text x="73.9829%" y="623.50"></text></g><g><title>try_to_wake_up (14 samples, 0.01%)</title><rect x="73.7329%" y="597" width="0.0128%" height="15" fill="rgb(225,135,29)" fg:x="80826" fg:w="14"/><text x="73.9829%" y="607.50"></text></g><g><title>ksys_write (18 samples, 0.02%)</title><rect x="73.7302%" y="725" width="0.0164%" height="15" fill="rgb(252,45,31)" fg:x="80823" fg:w="18"/><text x="73.9802%" y="735.50"></text></g><g><title>vfs_write (17 samples, 0.02%)</title><rect x="73.7311%" y="709" width="0.0155%" height="15" fill="rgb(211,187,50)" fg:x="80824" fg:w="17"/><text x="73.9811%" y="719.50"></text></g><g><title>eventfd_write (17 samples, 0.02%)</title><rect x="73.7311%" y="693" width="0.0155%" height="15" fill="rgb(229,109,7)" fg:x="80824" fg:w="17"/><text x="73.9811%" y="703.50"></text></g><g><title>__wake_up_common (17 samples, 0.02%)</title><rect x="73.7311%" y="677" width="0.0155%" height="15" fill="rgb(251,131,51)" fg:x="80824" fg:w="17"/><text x="73.9811%" y="687.50"></text></g><g><title>ep_poll_callback (17 samples, 0.02%)</title><rect x="73.7311%" y="661" width="0.0155%" height="15" fill="rgb(251,180,35)" fg:x="80824" fg:w="17"/><text x="73.9811%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::notify (23 samples, 0.02%)</title><rect x="73.7292%" y="821" width="0.0210%" height="15" fill="rgb(211,46,32)" fg:x="80822" fg:w="23"/><text x="73.9792%" y="831.50"></text></g><g><title>polling::Poller::notify (23 samples, 0.02%)</title><rect x="73.7292%" y="805" width="0.0210%" height="15" fill="rgb(248,123,17)" fg:x="80822" fg:w="23"/><text x="73.9792%" y="815.50"></text></g><g><title>polling::epoll::Poller::notify (23 samples, 0.02%)</title><rect x="73.7292%" y="789" width="0.0210%" height="15" fill="rgb(227,141,18)" fg:x="80822" fg:w="23"/><text x="73.9792%" y="799.50"></text></g><g><title>__GI___write (23 samples, 0.02%)</title><rect x="73.7292%" y="773" width="0.0210%" height="15" fill="rgb(216,102,9)" fg:x="80822" fg:w="23"/><text x="73.9792%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (23 samples, 0.02%)</title><rect x="73.7292%" y="757" width="0.0210%" height="15" fill="rgb(253,47,13)" fg:x="80822" fg:w="23"/><text x="73.9792%" y="767.50"></text></g><g><title>do_syscall_64 (23 samples, 0.02%)</title><rect x="73.7292%" y="741" width="0.0210%" height="15" fill="rgb(226,93,23)" fg:x="80822" fg:w="23"/><text x="73.9792%" y="751.50"></text></g><g><title>select_task_rq_fair (13 samples, 0.01%)</title><rect x="73.8004%" y="613" width="0.0119%" height="15" fill="rgb(247,104,17)" fg:x="80900" fg:w="13"/><text x="74.0504%" y="623.50"></text></g><g><title>enqueue_task_fair (20 samples, 0.02%)</title><rect x="73.8150%" y="581" width="0.0182%" height="15" fill="rgb(233,203,26)" fg:x="80916" fg:w="20"/><text x="74.0650%" y="591.50"></text></g><g><title>enqueue_entity (13 samples, 0.01%)</title><rect x="73.8214%" y="565" width="0.0119%" height="15" fill="rgb(244,98,49)" fg:x="80923" fg:w="13"/><text x="74.0714%" y="575.50"></text></g><g><title>ttwu_do_activate (54 samples, 0.05%)</title><rect x="73.8123%" y="613" width="0.0493%" height="15" fill="rgb(235,134,22)" fg:x="80913" fg:w="54"/><text x="74.0623%" y="623.50"></text></g><g><title>enqueue_task (52 samples, 0.05%)</title><rect x="73.8141%" y="597" width="0.0474%" height="15" fill="rgb(221,70,32)" fg:x="80915" fg:w="52"/><text x="74.0641%" y="607.50"></text></g><g><title>psi_task_change (22 samples, 0.02%)</title><rect x="73.8415%" y="581" width="0.0201%" height="15" fill="rgb(238,15,50)" fg:x="80945" fg:w="22"/><text x="74.0915%" y="591.50"></text></g><g><title>psi_group_change (17 samples, 0.02%)</title><rect x="73.8460%" y="565" width="0.0155%" height="15" fill="rgb(215,221,48)" fg:x="80950" fg:w="17"/><text x="74.0960%" y="575.50"></text></g><g><title>__x64_sys_futex (116 samples, 0.11%)</title><rect x="73.7694%" y="693" width="0.1058%" height="15" fill="rgb(236,73,3)" fg:x="80866" fg:w="116"/><text x="74.0194%" y="703.50"></text></g><g><title>do_futex (114 samples, 0.10%)</title><rect x="73.7712%" y="677" width="0.1040%" height="15" fill="rgb(250,107,11)" fg:x="80868" fg:w="114"/><text x="74.0212%" y="687.50"></text></g><g><title>futex_wake (114 samples, 0.10%)</title><rect x="73.7712%" y="661" width="0.1040%" height="15" fill="rgb(242,39,14)" fg:x="80868" fg:w="114"/><text x="74.0212%" y="671.50"></text></g><g><title>wake_up_q (90 samples, 0.08%)</title><rect x="73.7931%" y="645" width="0.0821%" height="15" fill="rgb(248,164,37)" fg:x="80892" fg:w="90"/><text x="74.0431%" y="655.50"></text></g><g><title>try_to_wake_up (89 samples, 0.08%)</title><rect x="73.7940%" y="629" width="0.0812%" height="15" fill="rgb(217,60,12)" fg:x="80893" fg:w="89"/><text x="74.0440%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (27 samples, 0.02%)</title><rect x="73.8761%" y="693" width="0.0246%" height="15" fill="rgb(240,125,29)" fg:x="80983" fg:w="27"/><text x="74.1261%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (148 samples, 0.14%)</title><rect x="73.7676%" y="725" width="0.1350%" height="15" fill="rgb(208,207,28)" fg:x="80864" fg:w="148"/><text x="74.0176%" y="735.50"></text></g><g><title>do_syscall_64 (147 samples, 0.13%)</title><rect x="73.7685%" y="709" width="0.1341%" height="15" fill="rgb(209,159,27)" fg:x="80865" fg:w="147"/><text x="74.0185%" y="719.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (158 samples, 0.14%)</title><rect x="73.7594%" y="789" width="0.1441%" height="15" fill="rgb(251,176,53)" fg:x="80855" fg:w="158"/><text x="74.0094%" y="799.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (158 samples, 0.14%)</title><rect x="73.7594%" y="773" width="0.1441%" height="15" fill="rgb(211,85,7)" fg:x="80855" fg:w="158"/><text x="74.0094%" y="783.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (158 samples, 0.14%)</title><rect x="73.7594%" y="757" width="0.1441%" height="15" fill="rgb(216,64,54)" fg:x="80855" fg:w="158"/><text x="74.0094%" y="767.50"></text></g><g><title>__GI___pthread_cond_signal (158 samples, 0.14%)</title><rect x="73.7594%" y="741" width="0.1441%" height="15" fill="rgb(217,54,24)" fg:x="80855" fg:w="158"/><text x="74.0094%" y="751.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (195 samples, 0.18%)</title><rect x="73.7292%" y="837" width="0.1779%" height="15" fill="rgb(208,206,53)" fg:x="80822" fg:w="195"/><text x="73.9792%" y="847.50"></text></g><g><title>parking::Unparker::unpark (172 samples, 0.16%)</title><rect x="73.7502%" y="821" width="0.1569%" height="15" fill="rgb(251,74,39)" fg:x="80845" fg:w="172"/><text x="74.0002%" y="831.50"></text></g><g><title>parking::Inner::unpark (169 samples, 0.15%)</title><rect x="73.7530%" y="805" width="0.1542%" height="15" fill="rgb(226,47,5)" fg:x="80848" fg:w="169"/><text x="74.0030%" y="815.50"></text></g><g><title>core::task::wake::Waker::wake (197 samples, 0.18%)</title><rect x="73.7292%" y="869" width="0.1797%" height="15" fill="rgb(234,111,33)" fg:x="80822" fg:w="197"/><text x="73.9792%" y="879.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (197 samples, 0.18%)</title><rect x="73.7292%" y="853" width="0.1797%" height="15" fill="rgb(251,14,10)" fg:x="80822" fg:w="197"/><text x="73.9792%" y="863.50"></text></g><g><title>async_executor::State::notify (207 samples, 0.19%)</title><rect x="73.7229%" y="885" width="0.1888%" height="15" fill="rgb(232,43,0)" fg:x="80815" fg:w="207"/><text x="73.9729%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.01%)</title><rect x="73.9144%" y="853" width="0.0100%" height="15" fill="rgb(222,68,43)" fg:x="81025" fg:w="11"/><text x="74.1644%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.01%)</title><rect x="73.9144%" y="837" width="0.0100%" height="15" fill="rgb(217,24,23)" fg:x="81025" fg:w="11"/><text x="74.1644%" y="847.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (224 samples, 0.20%)</title><rect x="73.7229%" y="901" width="0.2043%" height="15" fill="rgb(229,209,14)" fg:x="80815" fg:w="224"/><text x="73.9729%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (17 samples, 0.02%)</title><rect x="73.9117%" y="885" width="0.0155%" height="15" fill="rgb(250,149,48)" fg:x="81022" fg:w="17"/><text x="74.1617%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (15 samples, 0.01%)</title><rect x="73.9135%" y="869" width="0.0137%" height="15" fill="rgb(210,120,37)" fg:x="81024" fg:w="15"/><text x="74.1635%" y="879.50"></text></g><g><title>event_listener::List::notify (231 samples, 0.21%)</title><rect x="73.7210%" y="965" width="0.2107%" height="15" fill="rgb(210,21,8)" fg:x="80813" fg:w="231"/><text x="73.9710%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (231 samples, 0.21%)</title><rect x="73.7210%" y="949" width="0.2107%" height="15" fill="rgb(243,145,7)" fg:x="80813" fg:w="231"/><text x="73.9710%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (231 samples, 0.21%)</title><rect x="73.7210%" y="933" width="0.2107%" height="15" fill="rgb(238,178,32)" fg:x="80813" fg:w="231"/><text x="73.9710%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (229 samples, 0.21%)</title><rect x="73.7229%" y="917" width="0.2089%" height="15" fill="rgb(222,4,10)" fg:x="80815" fg:w="229"/><text x="73.9729%" y="927.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,876 samples, 1.71%)</title><rect x="72.8033%" y="997" width="1.7114%" height="15" fill="rgb(239,7,37)" fg:x="79807" fg:w="1876"/><text x="73.0533%" y="1007.50"></text></g><g><title>event_listener::Event::notify (1,139 samples, 1.04%)</title><rect x="73.4756%" y="981" width="1.0390%" height="15" fill="rgb(215,31,37)" fg:x="80544" fg:w="1139"/><text x="73.7256%" y="991.50"></text></g><g><title>event_listener::full_fence (639 samples, 0.58%)</title><rect x="73.9318%" y="965" width="0.5829%" height="15" fill="rgb(224,83,33)" fg:x="81044" fg:w="639"/><text x="74.1818%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (638 samples, 0.58%)</title><rect x="73.9327%" y="949" width="0.5820%" height="15" fill="rgb(239,55,3)" fg:x="81045" fg:w="638"/><text x="74.1827%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (638 samples, 0.58%)</title><rect x="73.9327%" y="933" width="0.5820%" height="15" fill="rgb(247,92,11)" fg:x="81045" fg:w="638"/><text x="74.1827%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (16 samples, 0.01%)</title><rect x="74.5147%" y="997" width="0.0146%" height="15" fill="rgb(239,200,7)" fg:x="81683" fg:w="16"/><text x="74.7647%" y="1007.50"></text></g><g><title>__x64_sys_futex (39 samples, 0.04%)</title><rect x="74.5877%" y="805" width="0.0356%" height="15" fill="rgb(227,115,8)" fg:x="81763" fg:w="39"/><text x="74.8377%" y="815.50"></text></g><g><title>do_futex (36 samples, 0.03%)</title><rect x="74.5904%" y="789" width="0.0328%" height="15" fill="rgb(215,189,27)" fg:x="81766" fg:w="36"/><text x="74.8404%" y="799.50"></text></g><g><title>futex_wake (35 samples, 0.03%)</title><rect x="74.5913%" y="773" width="0.0319%" height="15" fill="rgb(251,216,39)" fg:x="81767" fg:w="35"/><text x="74.8413%" y="783.50"></text></g><g><title>syscall_exit_to_user_mode (70 samples, 0.06%)</title><rect x="74.6232%" y="805" width="0.0639%" height="15" fill="rgb(207,29,47)" fg:x="81802" fg:w="70"/><text x="74.8732%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (117 samples, 0.11%)</title><rect x="74.5831%" y="837" width="0.1067%" height="15" fill="rgb(210,71,34)" fg:x="81758" fg:w="117"/><text x="74.8331%" y="847.50"></text></g><g><title>do_syscall_64 (112 samples, 0.10%)</title><rect x="74.5877%" y="821" width="0.1022%" height="15" fill="rgb(253,217,51)" fg:x="81763" fg:w="112"/><text x="74.8377%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (156 samples, 0.14%)</title><rect x="74.5494%" y="949" width="0.1423%" height="15" fill="rgb(222,117,46)" fg:x="81721" fg:w="156"/><text x="74.7994%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (155 samples, 0.14%)</title><rect x="74.5503%" y="933" width="0.1414%" height="15" fill="rgb(226,132,6)" fg:x="81722" fg:w="155"/><text x="74.8003%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (155 samples, 0.14%)</title><rect x="74.5503%" y="917" width="0.1414%" height="15" fill="rgb(254,145,51)" fg:x="81722" fg:w="155"/><text x="74.8003%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (154 samples, 0.14%)</title><rect x="74.5512%" y="901" width="0.1405%" height="15" fill="rgb(231,199,27)" fg:x="81723" fg:w="154"/><text x="74.8012%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (154 samples, 0.14%)</title><rect x="74.5512%" y="885" width="0.1405%" height="15" fill="rgb(245,158,14)" fg:x="81723" fg:w="154"/><text x="74.8012%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (154 samples, 0.14%)</title><rect x="74.5512%" y="869" width="0.1405%" height="15" fill="rgb(240,113,14)" fg:x="81723" fg:w="154"/><text x="74.8012%" y="879.50"></text></g><g><title>__GI___lll_lock_wake (126 samples, 0.11%)</title><rect x="74.5767%" y="853" width="0.1149%" height="15" fill="rgb(210,20,13)" fg:x="81751" fg:w="126"/><text x="74.8267%" y="863.50"></text></g><g><title>__x64_sys_futex (28 samples, 0.03%)</title><rect x="74.7583%" y="821" width="0.0255%" height="15" fill="rgb(241,144,13)" fg:x="81950" fg:w="28"/><text x="75.0083%" y="831.50"></text></g><g><title>do_futex (27 samples, 0.02%)</title><rect x="74.7592%" y="805" width="0.0246%" height="15" fill="rgb(235,43,34)" fg:x="81951" fg:w="27"/><text x="75.0092%" y="815.50"></text></g><g><title>futex_wait (26 samples, 0.02%)</title><rect x="74.7601%" y="789" width="0.0237%" height="15" fill="rgb(208,36,20)" fg:x="81952" fg:w="26"/><text x="75.0101%" y="799.50"></text></g><g><title>futex_wait_setup (23 samples, 0.02%)</title><rect x="74.7628%" y="773" width="0.0210%" height="15" fill="rgb(239,204,10)" fg:x="81955" fg:w="23"/><text x="75.0128%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (50 samples, 0.05%)</title><rect x="74.7573%" y="853" width="0.0456%" height="15" fill="rgb(217,84,43)" fg:x="81949" fg:w="50"/><text x="75.0073%" y="863.50"></text></g><g><title>do_syscall_64 (49 samples, 0.04%)</title><rect x="74.7583%" y="837" width="0.0447%" height="15" fill="rgb(241,170,50)" fg:x="81950" fg:w="49"/><text x="75.0083%" y="847.50"></text></g><g><title>syscall_exit_to_user_mode (20 samples, 0.02%)</title><rect x="74.7847%" y="821" width="0.0182%" height="15" fill="rgb(226,205,29)" fg:x="81979" fg:w="20"/><text x="75.0347%" y="831.50"></text></g><g><title>__GI___lll_lock_wait (69 samples, 0.06%)</title><rect x="74.7409%" y="869" width="0.0629%" height="15" fill="rgb(233,113,1)" fg:x="81931" fg:w="69"/><text x="74.9909%" y="879.50"></text></g><g><title>event_listener::Inner::lock (124 samples, 0.11%)</title><rect x="74.6917%" y="949" width="0.1131%" height="15" fill="rgb(253,98,13)" fg:x="81877" fg:w="124"/><text x="74.9417%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (123 samples, 0.11%)</title><rect x="74.6926%" y="933" width="0.1122%" height="15" fill="rgb(211,115,12)" fg:x="81878" fg:w="123"/><text x="74.9426%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (117 samples, 0.11%)</title><rect x="74.6980%" y="917" width="0.1067%" height="15" fill="rgb(208,12,16)" fg:x="81884" fg:w="117"/><text x="74.9480%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (107 samples, 0.10%)</title><rect x="74.7072%" y="901" width="0.0976%" height="15" fill="rgb(237,193,54)" fg:x="81894" fg:w="107"/><text x="74.9572%" y="911.50"></text></g><g><title>___pthread_mutex_lock (107 samples, 0.10%)</title><rect x="74.7072%" y="885" width="0.0976%" height="15" fill="rgb(243,22,42)" fg:x="81894" fg:w="107"/><text x="74.9572%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (296 samples, 0.27%)</title><rect x="74.5475%" y="965" width="0.2700%" height="15" fill="rgb(233,151,36)" fg:x="81719" fg:w="296"/><text x="74.7975%" y="975.50"></text></g><g><title>event_listener::List::remove (12 samples, 0.01%)</title><rect x="74.8066%" y="949" width="0.0109%" height="15" fill="rgb(237,57,45)" fg:x="82003" fg:w="12"/><text x="75.0566%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (336 samples, 0.31%)</title><rect x="74.5293%" y="997" width="0.3065%" height="15" fill="rgb(221,88,17)" fg:x="81699" fg:w="336"/><text x="74.7793%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (317 samples, 0.29%)</title><rect x="74.5466%" y="981" width="0.2892%" height="15" fill="rgb(230,79,15)" fg:x="81718" fg:w="317"/><text x="74.7966%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (20 samples, 0.02%)</title><rect x="74.8176%" y="965" width="0.0182%" height="15" fill="rgb(213,57,13)" fg:x="82015" fg:w="20"/><text x="75.0676%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="74.8176%" y="949" width="0.0182%" height="15" fill="rgb(222,116,39)" fg:x="82015" fg:w="20"/><text x="75.0676%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.02%)</title><rect x="74.8176%" y="933" width="0.0182%" height="15" fill="rgb(245,107,2)" fg:x="82015" fg:w="20"/><text x="75.0676%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.02%)</title><rect x="74.8176%" y="917" width="0.0182%" height="15" fill="rgb(238,1,10)" fg:x="82015" fg:w="20"/><text x="75.0676%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (59 samples, 0.05%)</title><rect x="74.8385%" y="981" width="0.0538%" height="15" fill="rgb(249,4,48)" fg:x="82038" fg:w="59"/><text x="75.0885%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (59 samples, 0.05%)</title><rect x="74.8385%" y="965" width="0.0538%" height="15" fill="rgb(223,151,18)" fg:x="82038" fg:w="59"/><text x="75.0885%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (59 samples, 0.05%)</title><rect x="74.8385%" y="949" width="0.0538%" height="15" fill="rgb(227,65,43)" fg:x="82038" fg:w="59"/><text x="75.0885%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (35 samples, 0.03%)</title><rect x="74.8969%" y="901" width="0.0319%" height="15" fill="rgb(218,40,45)" fg:x="82102" fg:w="35"/><text x="75.1469%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (41 samples, 0.04%)</title><rect x="74.8924%" y="981" width="0.0374%" height="15" fill="rgb(252,121,31)" fg:x="82097" fg:w="41"/><text x="75.1424%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (37 samples, 0.03%)</title><rect x="74.8960%" y="965" width="0.0338%" height="15" fill="rgb(219,158,43)" fg:x="82101" fg:w="37"/><text x="75.1460%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="74.8960%" y="949" width="0.0338%" height="15" fill="rgb(231,162,42)" fg:x="82101" fg:w="37"/><text x="75.1460%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (36 samples, 0.03%)</title><rect x="74.8969%" y="933" width="0.0328%" height="15" fill="rgb(217,179,25)" fg:x="82102" fg:w="36"/><text x="75.1469%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (36 samples, 0.03%)</title><rect x="74.8969%" y="917" width="0.0328%" height="15" fill="rgb(206,212,31)" fg:x="82102" fg:w="36"/><text x="75.1469%" y="927.50"></text></g><g><title>event_listener::Inner::lock (45 samples, 0.04%)</title><rect x="74.9316%" y="981" width="0.0411%" height="15" fill="rgb(235,144,12)" fg:x="82140" fg:w="45"/><text x="75.1816%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (45 samples, 0.04%)</title><rect x="74.9316%" y="965" width="0.0411%" height="15" fill="rgb(213,51,10)" fg:x="82140" fg:w="45"/><text x="75.1816%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (44 samples, 0.04%)</title><rect x="74.9325%" y="949" width="0.0401%" height="15" fill="rgb(231,145,14)" fg:x="82141" fg:w="44"/><text x="75.1825%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (44 samples, 0.04%)</title><rect x="74.9325%" y="933" width="0.0401%" height="15" fill="rgb(235,15,28)" fg:x="82141" fg:w="44"/><text x="75.1825%" y="943.50"></text></g><g><title>___pthread_mutex_lock (42 samples, 0.04%)</title><rect x="74.9343%" y="917" width="0.0383%" height="15" fill="rgb(237,206,10)" fg:x="82143" fg:w="42"/><text x="75.1843%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5,642 samples, 5.15%)</title><rect x="69.8540%" y="1013" width="5.1469%" height="15" fill="rgb(236,227,27)" fg:x="76574" fg:w="5642"/><text x="70.1040%" y="1023.50">&lt;async..</text></g><g><title>event_listener::Event::listen (181 samples, 0.17%)</title><rect x="74.8358%" y="997" width="0.1651%" height="15" fill="rgb(246,83,35)" fg:x="82035" fg:w="181"/><text x="75.0858%" y="1007.50"></text></g><g><title>event_listener::full_fence (26 samples, 0.02%)</title><rect x="74.9772%" y="981" width="0.0237%" height="15" fill="rgb(220,136,24)" fg:x="82190" fg:w="26"/><text x="75.2272%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (26 samples, 0.02%)</title><rect x="74.9772%" y="965" width="0.0237%" height="15" fill="rgb(217,3,25)" fg:x="82190" fg:w="26"/><text x="75.2272%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.02%)</title><rect x="74.9772%" y="949" width="0.0237%" height="15" fill="rgb(239,24,14)" fg:x="82190" fg:w="26"/><text x="75.2272%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (745 samples, 0.68%)</title><rect x="75.0082%" y="1013" width="0.6796%" height="15" fill="rgb(244,16,53)" fg:x="82224" fg:w="745"/><text x="75.2582%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (178 samples, 0.16%)</title><rect x="75.6933%" y="997" width="0.1624%" height="15" fill="rgb(208,175,44)" fg:x="82975" fg:w="178"/><text x="75.9433%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (760 samples, 0.69%)</title><rect x="75.8648%" y="965" width="0.6933%" height="15" fill="rgb(252,18,48)" fg:x="83163" fg:w="760"/><text x="76.1148%" y="975.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="76.5955%" y="789" width="0.0109%" height="15" fill="rgb(234,199,32)" fg:x="83964" fg:w="12"/><text x="76.8455%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (60 samples, 0.05%)</title><rect x="76.6101%" y="789" width="0.0547%" height="15" fill="rgb(225,77,54)" fg:x="83980" fg:w="60"/><text x="76.8601%" y="799.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (46 samples, 0.04%)</title><rect x="76.6229%" y="773" width="0.0420%" height="15" fill="rgb(225,42,25)" fg:x="83994" fg:w="46"/><text x="76.8729%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (96 samples, 0.09%)</title><rect x="76.5910%" y="821" width="0.0876%" height="15" fill="rgb(242,227,46)" fg:x="83959" fg:w="96"/><text x="76.8410%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (96 samples, 0.09%)</title><rect x="76.5910%" y="805" width="0.0876%" height="15" fill="rgb(246,197,35)" fg:x="83959" fg:w="96"/><text x="76.8410%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (102 samples, 0.09%)</title><rect x="76.5910%" y="853" width="0.0930%" height="15" fill="rgb(215,159,26)" fg:x="83959" fg:w="102"/><text x="76.8410%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (102 samples, 0.09%)</title><rect x="76.5910%" y="837" width="0.0930%" height="15" fill="rgb(212,194,50)" fg:x="83959" fg:w="102"/><text x="76.8410%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (119 samples, 0.11%)</title><rect x="76.5791%" y="869" width="0.1086%" height="15" fill="rgb(246,132,1)" fg:x="83946" fg:w="119"/><text x="76.8291%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (7,540 samples, 6.88%)</title><rect x="69.8130%" y="1029" width="6.8783%" height="15" fill="rgb(217,71,7)" fg:x="76529" fg:w="7540"/><text x="70.0630%" y="1039.50">&lt;async_st..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,100 samples, 1.00%)</title><rect x="75.6878%" y="1013" width="1.0035%" height="15" fill="rgb(252,59,32)" fg:x="82969" fg:w="1100"/><text x="75.9378%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (916 samples, 0.84%)</title><rect x="75.8557%" y="997" width="0.8356%" height="15" fill="rgb(253,204,25)" fg:x="83153" fg:w="916"/><text x="76.1057%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (916 samples, 0.84%)</title><rect x="75.8557%" y="981" width="0.8356%" height="15" fill="rgb(232,21,16)" fg:x="83153" fg:w="916"/><text x="76.1057%" y="991.50"></text></g><g><title>alloc::alloc::box_free (146 samples, 0.13%)</title><rect x="76.5581%" y="965" width="0.1332%" height="15" fill="rgb(248,90,29)" fg:x="83923" fg:w="146"/><text x="76.8081%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (146 samples, 0.13%)</title><rect x="76.5581%" y="949" width="0.1332%" height="15" fill="rgb(249,223,7)" fg:x="83923" fg:w="146"/><text x="76.8081%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (146 samples, 0.13%)</title><rect x="76.5581%" y="933" width="0.1332%" height="15" fill="rgb(231,119,42)" fg:x="83923" fg:w="146"/><text x="76.8081%" y="943.50"></text></g><g><title>__rg_dealloc (146 samples, 0.13%)</title><rect x="76.5581%" y="917" width="0.1332%" height="15" fill="rgb(215,41,35)" fg:x="83923" fg:w="146"/><text x="76.8081%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (146 samples, 0.13%)</title><rect x="76.5581%" y="901" width="0.1332%" height="15" fill="rgb(220,44,45)" fg:x="83923" fg:w="146"/><text x="76.8081%" y="911.50"></text></g><g><title>rust_dealloc (137 samples, 0.12%)</title><rect x="76.5663%" y="885" width="0.1250%" height="15" fill="rgb(253,197,36)" fg:x="83932" fg:w="137"/><text x="76.8163%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (7,914 samples, 7.22%)</title><rect x="69.7838%" y="1045" width="7.2195%" height="15" fill="rgb(245,225,54)" fg:x="76497" fg:w="7914"/><text x="70.0338%" y="1055.50">&lt;async_std..</text></g><g><title>__memcpy_avx_unaligned_erms (342 samples, 0.31%)</title><rect x="76.6913%" y="1029" width="0.3120%" height="15" fill="rgb(239,94,37)" fg:x="84069" fg:w="342"/><text x="76.9413%" y="1039.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,268 samples, 7.54%)</title><rect x="69.7610%" y="1109" width="7.5424%" height="15" fill="rgb(242,217,10)" fg:x="76472" fg:w="8268"/><text x="70.0110%" y="1119.50">&lt;async_std..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (8,263 samples, 7.54%)</title><rect x="69.7656%" y="1093" width="7.5379%" height="15" fill="rgb(250,193,7)" fg:x="76477" fg:w="8263"/><text x="70.0156%" y="1103.50">&lt;tremor_ru..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (8,263 samples, 7.54%)</title><rect x="69.7656%" y="1077" width="7.5379%" height="15" fill="rgb(230,104,19)" fg:x="76477" fg:w="8263"/><text x="70.0156%" y="1087.50">&lt;async_std..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (8,263 samples, 7.54%)</title><rect x="69.7656%" y="1061" width="7.5379%" height="15" fill="rgb(230,181,4)" fg:x="76477" fg:w="8263"/><text x="70.0156%" y="1071.50">&lt;tremor_ru..</text></g><g><title>__memcpy_avx_unaligned_erms (329 samples, 0.30%)</title><rect x="77.0033%" y="1045" width="0.3001%" height="15" fill="rgb(216,219,49)" fg:x="84411" fg:w="329"/><text x="77.2533%" y="1055.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="77.3654%" y="1029" width="0.0255%" height="15" fill="rgb(254,144,0)" fg:x="84808" fg:w="28"/><text x="77.6154%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (12 samples, 0.01%)</title><rect x="77.4019%" y="1013" width="0.0109%" height="15" fill="rgb(205,209,38)" fg:x="84848" fg:w="12"/><text x="77.6519%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (12 samples, 0.01%)</title><rect x="77.4019%" y="997" width="0.0109%" height="15" fill="rgb(240,21,42)" fg:x="84848" fg:w="12"/><text x="77.6519%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="77.4019%" y="981" width="0.0109%" height="15" fill="rgb(241,132,3)" fg:x="84848" fg:w="12"/><text x="77.6519%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="77.4019%" y="965" width="0.0109%" height="15" fill="rgb(225,14,2)" fg:x="84848" fg:w="12"/><text x="77.6519%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="77.4028%" y="949" width="0.0100%" height="15" fill="rgb(210,141,35)" fg:x="84849" fg:w="11"/><text x="77.6528%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="77.4028%" y="933" width="0.0100%" height="15" fill="rgb(251,14,44)" fg:x="84849" fg:w="11"/><text x="77.6528%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="77.3910%" y="1029" width="0.0310%" height="15" fill="rgb(247,48,18)" fg:x="84836" fg:w="34"/><text x="77.6410%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20 samples, 0.02%)</title><rect x="77.4220%" y="1029" width="0.0182%" height="15" fill="rgb(225,0,40)" fg:x="84870" fg:w="20"/><text x="77.6720%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="77.4576%" y="1013" width="0.0137%" height="15" fill="rgb(221,31,33)" fg:x="84909" fg:w="15"/><text x="77.7076%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (311 samples, 0.28%)</title><rect x="77.5588%" y="997" width="0.2837%" height="15" fill="rgb(237,42,40)" fg:x="85020" fg:w="311"/><text x="77.8088%" y="1007.50"></text></g><g><title>concurrent_queue::full_fence (23 samples, 0.02%)</title><rect x="77.9201%" y="981" width="0.0210%" height="15" fill="rgb(233,51,29)" fg:x="85416" fg:w="23"/><text x="78.1701%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (22 samples, 0.02%)</title><rect x="77.9210%" y="965" width="0.0201%" height="15" fill="rgb(226,58,20)" fg:x="85417" fg:w="22"/><text x="78.1710%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (22 samples, 0.02%)</title><rect x="77.9210%" y="949" width="0.0201%" height="15" fill="rgb(208,98,7)" fg:x="85417" fg:w="22"/><text x="78.1710%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="77.9210%" y="933" width="0.0201%" height="15" fill="rgb(228,143,44)" fg:x="85417" fg:w="22"/><text x="78.1710%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (182 samples, 0.17%)</title><rect x="77.9502%" y="981" width="0.1660%" height="15" fill="rgb(246,55,38)" fg:x="85449" fg:w="182"/><text x="78.2002%" y="991.50"></text></g><g><title>core::ptr::write (182 samples, 0.17%)</title><rect x="77.9502%" y="965" width="0.1660%" height="15" fill="rgb(247,87,16)" fg:x="85449" fg:w="182"/><text x="78.2002%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (176 samples, 0.16%)</title><rect x="77.9557%" y="949" width="0.1606%" height="15" fill="rgb(234,129,42)" fg:x="85455" fg:w="176"/><text x="78.2057%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (246 samples, 0.22%)</title><rect x="78.1162%" y="981" width="0.2244%" height="15" fill="rgb(220,82,16)" fg:x="85631" fg:w="246"/><text x="78.3662%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (246 samples, 0.22%)</title><rect x="78.1162%" y="965" width="0.2244%" height="15" fill="rgb(211,88,4)" fg:x="85631" fg:w="246"/><text x="78.3662%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (149 samples, 0.14%)</title><rect x="78.3406%" y="981" width="0.1359%" height="15" fill="rgb(248,151,21)" fg:x="85877" fg:w="149"/><text x="78.5906%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (148 samples, 0.14%)</title><rect x="78.3415%" y="965" width="0.1350%" height="15" fill="rgb(238,163,6)" fg:x="85878" fg:w="148"/><text x="78.5915%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,107 samples, 1.01%)</title><rect x="77.4713%" y="1013" width="1.0099%" height="15" fill="rgb(209,183,11)" fg:x="84924" fg:w="1107"/><text x="77.7213%" y="1023.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (700 samples, 0.64%)</title><rect x="77.8425%" y="997" width="0.6386%" height="15" fill="rgb(219,37,20)" fg:x="85331" fg:w="700"/><text x="78.0925%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="78.5076%" y="885" width="0.0119%" height="15" fill="rgb(210,158,4)" fg:x="86060" fg:w="13"/><text x="78.7576%" y="895.50"></text></g><g><title>do_syscall_64 (13 samples, 0.01%)</title><rect x="78.5076%" y="869" width="0.0119%" height="15" fill="rgb(221,167,53)" fg:x="86060" fg:w="13"/><text x="78.7576%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="78.5039%" y="917" width="0.0164%" height="15" fill="rgb(237,151,45)" fg:x="86056" fg:w="18"/><text x="78.7539%" y="927.50"></text></g><g><title>__GI___lll_lock_wake (14 samples, 0.01%)</title><rect x="78.5076%" y="901" width="0.0128%" height="15" fill="rgb(231,39,3)" fg:x="86060" fg:w="14"/><text x="78.7576%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (20 samples, 0.02%)</title><rect x="78.5030%" y="997" width="0.0182%" height="15" fill="rgb(212,167,28)" fg:x="86055" fg:w="20"/><text x="78.7530%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (20 samples, 0.02%)</title><rect x="78.5030%" y="981" width="0.0182%" height="15" fill="rgb(232,178,8)" fg:x="86055" fg:w="20"/><text x="78.7530%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="78.5030%" y="965" width="0.0182%" height="15" fill="rgb(225,151,20)" fg:x="86055" fg:w="20"/><text x="78.7530%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (19 samples, 0.02%)</title><rect x="78.5039%" y="949" width="0.0173%" height="15" fill="rgb(238,3,37)" fg:x="86056" fg:w="19"/><text x="78.7539%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="78.5039%" y="933" width="0.0173%" height="15" fill="rgb(251,147,42)" fg:x="86056" fg:w="19"/><text x="78.7539%" y="943.50"></text></g><g><title>event_listener::Inner::lock (52 samples, 0.05%)</title><rect x="78.5313%" y="997" width="0.0474%" height="15" fill="rgb(208,173,10)" fg:x="86086" fg:w="52"/><text x="78.7813%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (51 samples, 0.05%)</title><rect x="78.5322%" y="981" width="0.0465%" height="15" fill="rgb(246,225,4)" fg:x="86087" fg:w="51"/><text x="78.7822%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (51 samples, 0.05%)</title><rect x="78.5322%" y="965" width="0.0465%" height="15" fill="rgb(248,102,6)" fg:x="86087" fg:w="51"/><text x="78.7822%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (50 samples, 0.05%)</title><rect x="78.5331%" y="949" width="0.0456%" height="15" fill="rgb(232,6,21)" fg:x="86088" fg:w="50"/><text x="78.7831%" y="959.50"></text></g><g><title>___pthread_mutex_lock (50 samples, 0.05%)</title><rect x="78.5331%" y="933" width="0.0456%" height="15" fill="rgb(221,179,22)" fg:x="86088" fg:w="50"/><text x="78.7831%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (18 samples, 0.02%)</title><rect x="78.5924%" y="901" width="0.0164%" height="15" fill="rgb(252,50,20)" fg:x="86153" fg:w="18"/><text x="78.8424%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="78.5924%" y="885" width="0.0164%" height="15" fill="rgb(222,56,38)" fg:x="86153" fg:w="18"/><text x="78.8424%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.02%)</title><rect x="78.5924%" y="869" width="0.0164%" height="15" fill="rgb(206,193,29)" fg:x="86153" fg:w="18"/><text x="78.8424%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (18 samples, 0.02%)</title><rect x="78.5924%" y="853" width="0.0164%" height="15" fill="rgb(239,192,45)" fg:x="86153" fg:w="18"/><text x="78.8424%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="78.5924%" y="837" width="0.0164%" height="15" fill="rgb(254,18,36)" fg:x="86153" fg:w="18"/><text x="78.8424%" y="847.50"></text></g><g><title>__wake_up_common_lock (13 samples, 0.01%)</title><rect x="78.6280%" y="677" width="0.0119%" height="15" fill="rgb(221,127,11)" fg:x="86192" fg:w="13"/><text x="78.8780%" y="687.50"></text></g><g><title>__wake_up_common (13 samples, 0.01%)</title><rect x="78.6280%" y="661" width="0.0119%" height="15" fill="rgb(234,146,35)" fg:x="86192" fg:w="13"/><text x="78.8780%" y="671.50"></text></g><g><title>autoremove_wake_function (13 samples, 0.01%)</title><rect x="78.6280%" y="645" width="0.0119%" height="15" fill="rgb(254,201,37)" fg:x="86192" fg:w="13"/><text x="78.8780%" y="655.50"></text></g><g><title>try_to_wake_up (13 samples, 0.01%)</title><rect x="78.6280%" y="629" width="0.0119%" height="15" fill="rgb(211,202,23)" fg:x="86192" fg:w="13"/><text x="78.8780%" y="639.50"></text></g><g><title>__wake_up_common (21 samples, 0.02%)</title><rect x="78.6234%" y="709" width="0.0192%" height="15" fill="rgb(237,91,2)" fg:x="86187" fg:w="21"/><text x="78.8734%" y="719.50"></text></g><g><title>ep_poll_callback (21 samples, 0.02%)</title><rect x="78.6234%" y="693" width="0.0192%" height="15" fill="rgb(226,228,36)" fg:x="86187" fg:w="21"/><text x="78.8734%" y="703.50"></text></g><g><title>eventfd_write (25 samples, 0.02%)</title><rect x="78.6234%" y="725" width="0.0228%" height="15" fill="rgb(213,63,50)" fg:x="86187" fg:w="25"/><text x="78.8734%" y="735.50"></text></g><g><title>ksys_write (31 samples, 0.03%)</title><rect x="78.6189%" y="757" width="0.0283%" height="15" fill="rgb(235,194,19)" fg:x="86182" fg:w="31"/><text x="78.8689%" y="767.50"></text></g><g><title>vfs_write (28 samples, 0.03%)</title><rect x="78.6216%" y="741" width="0.0255%" height="15" fill="rgb(207,204,18)" fg:x="86185" fg:w="28"/><text x="78.8716%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::notify (45 samples, 0.04%)</title><rect x="78.6152%" y="853" width="0.0411%" height="15" fill="rgb(248,8,7)" fg:x="86178" fg:w="45"/><text x="78.8652%" y="863.50"></text></g><g><title>polling::Poller::notify (45 samples, 0.04%)</title><rect x="78.6152%" y="837" width="0.0411%" height="15" fill="rgb(223,145,47)" fg:x="86178" fg:w="45"/><text x="78.8652%" y="847.50"></text></g><g><title>polling::epoll::Poller::notify (44 samples, 0.04%)</title><rect x="78.6161%" y="821" width="0.0401%" height="15" fill="rgb(228,84,11)" fg:x="86179" fg:w="44"/><text x="78.8661%" y="831.50"></text></g><g><title>__GI___write (44 samples, 0.04%)</title><rect x="78.6161%" y="805" width="0.0401%" height="15" fill="rgb(218,76,45)" fg:x="86179" fg:w="44"/><text x="78.8661%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (42 samples, 0.04%)</title><rect x="78.6180%" y="789" width="0.0383%" height="15" fill="rgb(223,80,15)" fg:x="86181" fg:w="42"/><text x="78.8680%" y="799.50"></text></g><g><title>do_syscall_64 (41 samples, 0.04%)</title><rect x="78.6189%" y="773" width="0.0374%" height="15" fill="rgb(219,218,33)" fg:x="86182" fg:w="41"/><text x="78.8689%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (16 samples, 0.01%)</title><rect x="78.6681%" y="821" width="0.0146%" height="15" fill="rgb(208,51,11)" fg:x="86236" fg:w="16"/><text x="78.9181%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_swap (16 samples, 0.01%)</title><rect x="78.6681%" y="805" width="0.0146%" height="15" fill="rgb(229,165,39)" fg:x="86236" fg:w="16"/><text x="78.9181%" y="815.50"></text></g><g><title>_raw_spin_lock (13 samples, 0.01%)</title><rect x="78.7502%" y="677" width="0.0119%" height="15" fill="rgb(241,100,24)" fg:x="86326" fg:w="13"/><text x="79.0002%" y="687.50"></text></g><g><title>futex_wake_mark (22 samples, 0.02%)</title><rect x="78.7657%" y="677" width="0.0201%" height="15" fill="rgb(228,14,23)" fg:x="86343" fg:w="22"/><text x="79.0157%" y="687.50"></text></g><g><title>select_task_rq_fair (27 samples, 0.02%)</title><rect x="78.8205%" y="645" width="0.0246%" height="15" fill="rgb(247,116,52)" fg:x="86403" fg:w="27"/><text x="79.0705%" y="655.50"></text></g><g><title>enqueue_task_fair (68 samples, 0.06%)</title><rect x="78.8551%" y="613" width="0.0620%" height="15" fill="rgb(216,149,33)" fg:x="86441" fg:w="68"/><text x="79.1051%" y="623.50"></text></g><g><title>enqueue_entity (54 samples, 0.05%)</title><rect x="78.8679%" y="597" width="0.0493%" height="15" fill="rgb(238,142,29)" fg:x="86455" fg:w="54"/><text x="79.1179%" y="607.50"></text></g><g><title>psi_group_change (12 samples, 0.01%)</title><rect x="78.9172%" y="613" width="0.0109%" height="15" fill="rgb(224,83,40)" fg:x="86509" fg:w="12"/><text x="79.1672%" y="623.50"></text></g><g><title>psi_group_change (37 samples, 0.03%)</title><rect x="78.9537%" y="597" width="0.0338%" height="15" fill="rgb(234,165,11)" fg:x="86549" fg:w="37"/><text x="79.2037%" y="607.50"></text></g><g><title>ttwu_do_activate (157 samples, 0.14%)</title><rect x="78.8451%" y="645" width="0.1432%" height="15" fill="rgb(215,96,23)" fg:x="86430" fg:w="157"/><text x="79.0951%" y="655.50"></text></g><g><title>enqueue_task (151 samples, 0.14%)</title><rect x="78.8506%" y="629" width="0.1377%" height="15" fill="rgb(233,179,26)" fg:x="86436" fg:w="151"/><text x="79.1006%" y="639.50"></text></g><g><title>psi_task_change (66 samples, 0.06%)</title><rect x="78.9281%" y="613" width="0.0602%" height="15" fill="rgb(225,129,33)" fg:x="86521" fg:w="66"/><text x="79.1781%" y="623.50"></text></g><g><title>ttwu_do_wakeup (16 samples, 0.01%)</title><rect x="78.9883%" y="645" width="0.0146%" height="15" fill="rgb(237,49,13)" fg:x="86587" fg:w="16"/><text x="79.2383%" y="655.50"></text></g><g><title>check_preempt_curr (16 samples, 0.01%)</title><rect x="78.9883%" y="629" width="0.0146%" height="15" fill="rgb(211,3,31)" fg:x="86587" fg:w="16"/><text x="79.2383%" y="639.50"></text></g><g><title>ttwu_queue_wakelist (41 samples, 0.04%)</title><rect x="79.0029%" y="645" width="0.0374%" height="15" fill="rgb(216,152,19)" fg:x="86603" fg:w="41"/><text x="79.2529%" y="655.50"></text></g><g><title>__x64_sys_futex (365 samples, 0.33%)</title><rect x="78.7192%" y="725" width="0.3330%" height="15" fill="rgb(251,121,35)" fg:x="86292" fg:w="365"/><text x="78.9692%" y="735.50"></text></g><g><title>do_futex (359 samples, 0.33%)</title><rect x="78.7247%" y="709" width="0.3275%" height="15" fill="rgb(210,217,47)" fg:x="86298" fg:w="359"/><text x="78.9747%" y="719.50"></text></g><g><title>futex_wake (358 samples, 0.33%)</title><rect x="78.7256%" y="693" width="0.3266%" height="15" fill="rgb(244,116,22)" fg:x="86299" fg:w="358"/><text x="78.9756%" y="703.50"></text></g><g><title>wake_up_q (288 samples, 0.26%)</title><rect x="78.7895%" y="677" width="0.2627%" height="15" fill="rgb(228,17,21)" fg:x="86369" fg:w="288"/><text x="79.0395%" y="687.50"></text></g><g><title>try_to_wake_up (283 samples, 0.26%)</title><rect x="78.7940%" y="661" width="0.2582%" height="15" fill="rgb(240,149,34)" fg:x="86374" fg:w="283"/><text x="79.0440%" y="671.50"></text></g><g><title>update_rq_clock (13 samples, 0.01%)</title><rect x="79.0403%" y="645" width="0.0119%" height="15" fill="rgb(208,125,47)" fg:x="86644" fg:w="13"/><text x="79.2903%" y="655.50"></text></g><g><title>syscall_exit_to_user_mode (62 samples, 0.06%)</title><rect x="79.0549%" y="725" width="0.0566%" height="15" fill="rgb(249,186,39)" fg:x="86660" fg:w="62"/><text x="79.3049%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (434 samples, 0.40%)</title><rect x="78.7192%" y="757" width="0.3959%" height="15" fill="rgb(240,220,33)" fg:x="86292" fg:w="434"/><text x="78.9692%" y="767.50"></text></g><g><title>do_syscall_64 (434 samples, 0.40%)</title><rect x="78.7192%" y="741" width="0.3959%" height="15" fill="rgb(243,110,23)" fg:x="86292" fg:w="434"/><text x="78.9692%" y="751.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (477 samples, 0.44%)</title><rect x="78.6827%" y="821" width="0.4351%" height="15" fill="rgb(219,163,46)" fg:x="86252" fg:w="477"/><text x="78.9327%" y="831.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (477 samples, 0.44%)</title><rect x="78.6827%" y="805" width="0.4351%" height="15" fill="rgb(216,126,30)" fg:x="86252" fg:w="477"/><text x="78.9327%" y="815.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (477 samples, 0.44%)</title><rect x="78.6827%" y="789" width="0.4351%" height="15" fill="rgb(208,139,11)" fg:x="86252" fg:w="477"/><text x="78.9327%" y="799.50"></text></g><g><title>__GI___pthread_cond_signal (477 samples, 0.44%)</title><rect x="78.6827%" y="773" width="0.4351%" height="15" fill="rgb(213,118,36)" fg:x="86252" fg:w="477"/><text x="78.9327%" y="783.50"></text></g><g><title>parking::Unparker::unpark (527 samples, 0.48%)</title><rect x="78.6572%" y="853" width="0.4808%" height="15" fill="rgb(226,43,17)" fg:x="86224" fg:w="527"/><text x="78.9072%" y="863.50"></text></g><g><title>parking::Inner::unpark (521 samples, 0.48%)</title><rect x="78.6627%" y="837" width="0.4753%" height="15" fill="rgb(254,217,4)" fg:x="86230" fg:w="521"/><text x="78.9127%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="79.1179%" y="821" width="0.0201%" height="15" fill="rgb(210,134,47)" fg:x="86729" fg:w="22"/><text x="79.3679%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="79.1179%" y="805" width="0.0201%" height="15" fill="rgb(237,24,49)" fg:x="86729" fg:w="22"/><text x="79.3679%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (22 samples, 0.02%)</title><rect x="79.1179%" y="789" width="0.0201%" height="15" fill="rgb(251,39,46)" fg:x="86729" fg:w="22"/><text x="79.3679%" y="799.50"></text></g><g><title>___pthread_mutex_lock (22 samples, 0.02%)</title><rect x="79.1179%" y="773" width="0.0201%" height="15" fill="rgb(251,220,3)" fg:x="86729" fg:w="22"/><text x="79.3679%" y="783.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (575 samples, 0.52%)</title><rect x="78.6143%" y="869" width="0.5245%" height="15" fill="rgb(228,105,12)" fg:x="86177" fg:w="575"/><text x="78.8643%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (588 samples, 0.54%)</title><rect x="78.6143%" y="901" width="0.5364%" height="15" fill="rgb(215,196,1)" fg:x="86177" fg:w="588"/><text x="78.8643%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (588 samples, 0.54%)</title><rect x="78.6143%" y="885" width="0.5364%" height="15" fill="rgb(214,33,39)" fg:x="86177" fg:w="588"/><text x="78.8643%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="79.1388%" y="869" width="0.0119%" height="15" fill="rgb(220,19,52)" fg:x="86752" fg:w="13"/><text x="79.3888%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="79.1388%" y="853" width="0.0119%" height="15" fill="rgb(221,78,38)" fg:x="86752" fg:w="13"/><text x="79.3888%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.01%)</title><rect x="79.1398%" y="837" width="0.0109%" height="15" fill="rgb(253,30,16)" fg:x="86753" fg:w="12"/><text x="79.3898%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.01%)</title><rect x="79.1398%" y="821" width="0.0109%" height="15" fill="rgb(242,65,0)" fg:x="86753" fg:w="12"/><text x="79.3898%" y="831.50"></text></g><g><title>async_executor::State::notify (632 samples, 0.58%)</title><rect x="78.5897%" y="917" width="0.5765%" height="15" fill="rgb(235,201,12)" fg:x="86150" fg:w="632"/><text x="78.8397%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="79.1507%" y="901" width="0.0155%" height="15" fill="rgb(233,161,9)" fg:x="86765" fg:w="17"/><text x="79.4007%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="79.1507%" y="885" width="0.0155%" height="15" fill="rgb(241,207,41)" fg:x="86765" fg:w="17"/><text x="79.4007%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="79.1534%" y="869" width="0.0128%" height="15" fill="rgb(212,69,46)" fg:x="86768" fg:w="14"/><text x="79.4034%" y="879.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="79.1534%" y="853" width="0.0128%" height="15" fill="rgb(239,69,45)" fg:x="86768" fg:w="14"/><text x="79.4034%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (26 samples, 0.02%)</title><rect x="79.1717%" y="885" width="0.0237%" height="15" fill="rgb(242,117,48)" fg:x="86788" fg:w="26"/><text x="79.4217%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (26 samples, 0.02%)</title><rect x="79.1717%" y="869" width="0.0237%" height="15" fill="rgb(228,41,36)" fg:x="86788" fg:w="26"/><text x="79.4217%" y="879.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (42 samples, 0.04%)</title><rect x="79.1662%" y="917" width="0.0383%" height="15" fill="rgb(212,3,32)" fg:x="86782" fg:w="42"/><text x="79.4162%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (40 samples, 0.04%)</title><rect x="79.1680%" y="901" width="0.0365%" height="15" fill="rgb(233,41,49)" fg:x="86784" fg:w="40"/><text x="79.4180%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (676 samples, 0.62%)</title><rect x="78.5888%" y="933" width="0.6167%" height="15" fill="rgb(252,170,49)" fg:x="86149" fg:w="676"/><text x="78.8388%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (25 samples, 0.02%)</title><rect x="79.2054%" y="933" width="0.0228%" height="15" fill="rgb(229,53,26)" fg:x="86825" fg:w="25"/><text x="79.4554%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 0.02%)</title><rect x="79.2054%" y="917" width="0.0228%" height="15" fill="rgb(217,157,12)" fg:x="86825" fg:w="25"/><text x="79.4554%" y="927.50"></text></g><g><title>event_listener::List::notify (715 samples, 0.65%)</title><rect x="78.5787%" y="997" width="0.6523%" height="15" fill="rgb(227,17,9)" fg:x="86138" fg:w="715"/><text x="78.8287%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (713 samples, 0.65%)</title><rect x="78.5806%" y="981" width="0.6504%" height="15" fill="rgb(218,84,12)" fg:x="86140" fg:w="713"/><text x="78.8306%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (713 samples, 0.65%)</title><rect x="78.5806%" y="965" width="0.6504%" height="15" fill="rgb(212,79,24)" fg:x="86140" fg:w="713"/><text x="78.8306%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (704 samples, 0.64%)</title><rect x="78.5888%" y="949" width="0.6422%" height="15" fill="rgb(217,222,37)" fg:x="86149" fg:w="704"/><text x="78.8388%" y="959.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,805 samples, 2.56%)</title><rect x="77.4402%" y="1029" width="2.5588%" height="15" fill="rgb(246,208,8)" fg:x="84890" fg:w="2805"/><text x="77.6902%" y="1039.50">as..</text></g><g><title>event_listener::Event::notify (1,664 samples, 1.52%)</title><rect x="78.4811%" y="1013" width="1.5180%" height="15" fill="rgb(244,133,10)" fg:x="86031" fg:w="1664"/><text x="78.7311%" y="1023.50"></text></g><g><title>event_listener::full_fence (842 samples, 0.77%)</title><rect x="79.2310%" y="997" width="0.7681%" height="15" fill="rgb(209,219,41)" fg:x="86853" fg:w="842"/><text x="79.4810%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (831 samples, 0.76%)</title><rect x="79.2410%" y="981" width="0.7581%" height="15" fill="rgb(253,175,45)" fg:x="86864" fg:w="831"/><text x="79.4910%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (831 samples, 0.76%)</title><rect x="79.2410%" y="965" width="0.7581%" height="15" fill="rgb(235,100,37)" fg:x="86864" fg:w="831"/><text x="79.4910%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (15 samples, 0.01%)</title><rect x="79.9991%" y="1029" width="0.0137%" height="15" fill="rgb(225,87,19)" fg:x="87695" fg:w="15"/><text x="80.2491%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (363 samples, 0.33%)</title><rect x="80.0128%" y="1029" width="0.3311%" height="15" fill="rgb(217,152,17)" fg:x="87710" fg:w="363"/><text x="80.2628%" y="1039.50"></text></g><g><title>core::mem::replace (363 samples, 0.33%)</title><rect x="80.0128%" y="1013" width="0.3311%" height="15" fill="rgb(235,72,13)" fg:x="87710" fg:w="363"/><text x="80.2628%" y="1023.50"></text></g><g><title>core::ptr::read (360 samples, 0.33%)</title><rect x="80.0155%" y="997" width="0.3284%" height="15" fill="rgb(233,140,18)" fg:x="87713" fg:w="360"/><text x="80.2655%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (353 samples, 0.32%)</title><rect x="80.0219%" y="981" width="0.3220%" height="15" fill="rgb(207,212,28)" fg:x="87720" fg:w="353"/><text x="80.2719%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (420 samples, 0.38%)</title><rect x="80.3439%" y="1029" width="0.3831%" height="15" fill="rgb(220,130,25)" fg:x="88073" fg:w="420"/><text x="80.5939%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (414 samples, 0.38%)</title><rect x="80.3494%" y="1013" width="0.3777%" height="15" fill="rgb(205,55,34)" fg:x="88079" fg:w="414"/><text x="80.5994%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="80.7271%" y="1013" width="0.0146%" height="15" fill="rgb(237,54,35)" fg:x="88493" fg:w="16"/><text x="80.9771%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.01%)</title><rect x="80.7271%" y="997" width="0.0146%" height="15" fill="rgb(208,67,23)" fg:x="88493" fg:w="16"/><text x="80.9771%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.01%)</title><rect x="80.7271%" y="981" width="0.0146%" height="15" fill="rgb(206,207,50)" fg:x="88493" fg:w="16"/><text x="80.9771%" y="991.50"></text></g><g><title>event_listener::Inner::lock (11 samples, 0.01%)</title><rect x="80.7517%" y="1013" width="0.0100%" height="15" fill="rgb(213,211,42)" fg:x="88520" fg:w="11"/><text x="81.0017%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="80.7517%" y="997" width="0.0100%" height="15" fill="rgb(252,197,50)" fg:x="88520" fg:w="11"/><text x="81.0017%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="80.7517%" y="981" width="0.0100%" height="15" fill="rgb(251,211,41)" fg:x="88520" fg:w="11"/><text x="81.0017%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (11 samples, 0.01%)</title><rect x="80.7517%" y="965" width="0.0100%" height="15" fill="rgb(229,211,5)" fg:x="88520" fg:w="11"/><text x="81.0017%" y="975.50"></text></g><g><title>___pthread_mutex_lock (11 samples, 0.01%)</title><rect x="80.7517%" y="949" width="0.0100%" height="15" fill="rgb(239,36,31)" fg:x="88520" fg:w="11"/><text x="81.0017%" y="959.50"></text></g><g><title>event_listener::Event::listen (58 samples, 0.05%)</title><rect x="80.7271%" y="1029" width="0.0529%" height="15" fill="rgb(248,67,31)" fg:x="88493" fg:w="58"/><text x="80.9771%" y="1039.50"></text></g><g><title>event_listener::full_fence (15 samples, 0.01%)</title><rect x="80.7663%" y="1013" width="0.0137%" height="15" fill="rgb(249,55,44)" fg:x="88536" fg:w="15"/><text x="81.0163%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.01%)</title><rect x="80.7681%" y="997" width="0.0119%" height="15" fill="rgb(216,82,12)" fg:x="88538" fg:w="13"/><text x="81.0181%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.01%)</title><rect x="80.7681%" y="981" width="0.0119%" height="15" fill="rgb(242,174,1)" fg:x="88538" fg:w="13"/><text x="81.0181%" y="991.50"></text></g><g><title>__x64_sys_futex (31 samples, 0.03%)</title><rect x="80.8210%" y="869" width="0.0283%" height="15" fill="rgb(208,120,29)" fg:x="88596" fg:w="31"/><text x="81.0710%" y="879.50"></text></g><g><title>do_futex (25 samples, 0.02%)</title><rect x="80.8265%" y="853" width="0.0228%" height="15" fill="rgb(221,105,43)" fg:x="88602" fg:w="25"/><text x="81.0765%" y="863.50"></text></g><g><title>futex_wake (21 samples, 0.02%)</title><rect x="80.8301%" y="837" width="0.0192%" height="15" fill="rgb(234,124,22)" fg:x="88606" fg:w="21"/><text x="81.0801%" y="847.50"></text></g><g><title>syscall_exit_to_user_mode (65 samples, 0.06%)</title><rect x="80.8511%" y="869" width="0.0593%" height="15" fill="rgb(212,23,30)" fg:x="88629" fg:w="65"/><text x="81.1011%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (112 samples, 0.10%)</title><rect x="80.8155%" y="901" width="0.1022%" height="15" fill="rgb(219,122,53)" fg:x="88590" fg:w="112"/><text x="81.0655%" y="911.50"></text></g><g><title>do_syscall_64 (109 samples, 0.10%)</title><rect x="80.8183%" y="885" width="0.0994%" height="15" fill="rgb(248,84,24)" fg:x="88593" fg:w="109"/><text x="81.0683%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (145 samples, 0.13%)</title><rect x="80.7873%" y="1013" width="0.1323%" height="15" fill="rgb(245,115,18)" fg:x="88559" fg:w="145"/><text x="81.0373%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (145 samples, 0.13%)</title><rect x="80.7873%" y="997" width="0.1323%" height="15" fill="rgb(227,176,51)" fg:x="88559" fg:w="145"/><text x="81.0373%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 0.13%)</title><rect x="80.7873%" y="981" width="0.1323%" height="15" fill="rgb(229,63,42)" fg:x="88559" fg:w="145"/><text x="81.0373%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (145 samples, 0.13%)</title><rect x="80.7873%" y="965" width="0.1323%" height="15" fill="rgb(247,202,24)" fg:x="88559" fg:w="145"/><text x="81.0373%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (145 samples, 0.13%)</title><rect x="80.7873%" y="949" width="0.1323%" height="15" fill="rgb(244,173,20)" fg:x="88559" fg:w="145"/><text x="81.0373%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (145 samples, 0.13%)</title><rect x="80.7873%" y="933" width="0.1323%" height="15" fill="rgb(242,81,47)" fg:x="88559" fg:w="145"/><text x="81.0373%" y="943.50"></text></g><g><title>__GI___lll_lock_wake (124 samples, 0.11%)</title><rect x="80.8064%" y="917" width="0.1131%" height="15" fill="rgb(231,185,54)" fg:x="88580" fg:w="124"/><text x="81.0564%" y="927.50"></text></g><g><title>__perf_event_task_sched_out (26 samples, 0.02%)</title><rect x="81.0390%" y="789" width="0.0237%" height="15" fill="rgb(243,55,32)" fg:x="88835" fg:w="26"/><text x="81.2890%" y="799.50"></text></g><g><title>update_curr (40 samples, 0.04%)</title><rect x="81.0993%" y="757" width="0.0365%" height="15" fill="rgb(208,167,19)" fg:x="88901" fg:w="40"/><text x="81.3493%" y="767.50"></text></g><g><title>dequeue_entity (81 samples, 0.07%)</title><rect x="81.0764%" y="773" width="0.0739%" height="15" fill="rgb(231,72,35)" fg:x="88876" fg:w="81"/><text x="81.3264%" y="783.50"></text></g><g><title>update_load_avg (16 samples, 0.01%)</title><rect x="81.1357%" y="757" width="0.0146%" height="15" fill="rgb(250,173,51)" fg:x="88941" fg:w="16"/><text x="81.3857%" y="767.50"></text></g><g><title>dequeue_task_fair (98 samples, 0.09%)</title><rect x="81.0646%" y="789" width="0.0894%" height="15" fill="rgb(209,5,22)" fg:x="88863" fg:w="98"/><text x="81.3146%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (14 samples, 0.01%)</title><rect x="81.1859%" y="757" width="0.0128%" height="15" fill="rgb(250,174,19)" fg:x="88996" fg:w="14"/><text x="81.4359%" y="767.50"></text></g><g><title>native_write_msr (12 samples, 0.01%)</title><rect x="81.1877%" y="741" width="0.0109%" height="15" fill="rgb(217,3,49)" fg:x="88998" fg:w="12"/><text x="81.4377%" y="751.50"></text></g><g><title>__perf_event_task_sched_in (19 samples, 0.02%)</title><rect x="81.1832%" y="773" width="0.0173%" height="15" fill="rgb(218,225,5)" fg:x="88993" fg:w="19"/><text x="81.4332%" y="783.50"></text></g><g><title>finish_task_switch.isra.0 (54 samples, 0.05%)</title><rect x="81.1540%" y="789" width="0.0493%" height="15" fill="rgb(236,89,11)" fg:x="88961" fg:w="54"/><text x="81.4040%" y="799.50"></text></g><g><title>pick_next_task_fair (14 samples, 0.01%)</title><rect x="81.2032%" y="789" width="0.0128%" height="15" fill="rgb(206,33,28)" fg:x="89015" fg:w="14"/><text x="81.4532%" y="799.50"></text></g><g><title>iterate_groups (14 samples, 0.01%)</title><rect x="81.2297%" y="773" width="0.0128%" height="15" fill="rgb(241,56,42)" fg:x="89044" fg:w="14"/><text x="81.4797%" y="783.50"></text></g><g><title>psi_group_change (59 samples, 0.05%)</title><rect x="81.2425%" y="773" width="0.0538%" height="15" fill="rgb(222,44,11)" fg:x="89058" fg:w="59"/><text x="81.4925%" y="783.50"></text></g><g><title>psi_task_switch (88 samples, 0.08%)</title><rect x="81.2197%" y="789" width="0.0803%" height="15" fill="rgb(234,111,20)" fg:x="89033" fg:w="88"/><text x="81.4697%" y="799.50"></text></g><g><title>futex_wait_queue (373 samples, 0.34%)</title><rect x="80.9889%" y="837" width="0.3403%" height="15" fill="rgb(237,77,6)" fg:x="88780" fg:w="373"/><text x="81.2389%" y="847.50"></text></g><g><title>schedule (357 samples, 0.33%)</title><rect x="81.0035%" y="821" width="0.3257%" height="15" fill="rgb(235,111,23)" fg:x="88796" fg:w="357"/><text x="81.2535%" y="831.50"></text></g><g><title>__schedule (351 samples, 0.32%)</title><rect x="81.0089%" y="805" width="0.3202%" height="15" fill="rgb(251,135,29)" fg:x="88802" fg:w="351"/><text x="81.2589%" y="815.50"></text></g><g><title>update_rq_clock (17 samples, 0.02%)</title><rect x="81.3136%" y="789" width="0.0155%" height="15" fill="rgb(217,57,1)" fg:x="89136" fg:w="17"/><text x="81.5636%" y="799.50"></text></g><g><title>futex_q_lock (16 samples, 0.01%)</title><rect x="81.3364%" y="821" width="0.0146%" height="15" fill="rgb(249,119,31)" fg:x="89161" fg:w="16"/><text x="81.5864%" y="831.50"></text></g><g><title>__x64_sys_futex (436 samples, 0.40%)</title><rect x="80.9588%" y="885" width="0.3977%" height="15" fill="rgb(233,164,33)" fg:x="88747" fg:w="436"/><text x="81.2088%" y="895.50"></text></g><g><title>do_futex (427 samples, 0.39%)</title><rect x="80.9670%" y="869" width="0.3895%" height="15" fill="rgb(250,217,43)" fg:x="88756" fg:w="427"/><text x="81.2170%" y="879.50"></text></g><g><title>futex_wait (423 samples, 0.39%)</title><rect x="80.9706%" y="853" width="0.3859%" height="15" fill="rgb(232,154,50)" fg:x="88760" fg:w="423"/><text x="81.2206%" y="863.50"></text></g><g><title>futex_wait_setup (30 samples, 0.03%)</title><rect x="81.3291%" y="837" width="0.0274%" height="15" fill="rgb(227,190,8)" fg:x="89153" fg:w="30"/><text x="81.5791%" y="847.50"></text></g><g><title>__rseq_handle_notify_resume (24 samples, 0.02%)</title><rect x="81.4286%" y="853" width="0.0219%" height="15" fill="rgb(209,217,32)" fg:x="89262" fg:w="24"/><text x="81.6786%" y="863.50"></text></g><g><title>exit_to_user_mode_prepare (36 samples, 0.03%)</title><rect x="81.4185%" y="869" width="0.0328%" height="15" fill="rgb(243,203,50)" fg:x="89251" fg:w="36"/><text x="81.6685%" y="879.50"></text></g><g><title>syscall_exit_to_user_mode (118 samples, 0.11%)</title><rect x="81.3602%" y="885" width="0.1076%" height="15" fill="rgb(232,152,27)" fg:x="89187" fg:w="118"/><text x="81.6102%" y="895.50"></text></g><g><title>syscall_exit_work (18 samples, 0.02%)</title><rect x="81.4514%" y="869" width="0.0164%" height="15" fill="rgb(240,34,29)" fg:x="89287" fg:w="18"/><text x="81.7014%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (575 samples, 0.52%)</title><rect x="80.9524%" y="917" width="0.5245%" height="15" fill="rgb(215,185,52)" fg:x="88740" fg:w="575"/><text x="81.2024%" y="927.50"></text></g><g><title>do_syscall_64 (575 samples, 0.52%)</title><rect x="80.9524%" y="901" width="0.5245%" height="15" fill="rgb(240,89,49)" fg:x="88740" fg:w="575"/><text x="81.2024%" y="911.50"></text></g><g><title>event_listener::Inner::lock (611 samples, 0.56%)</title><rect x="80.9241%" y="1013" width="0.5574%" height="15" fill="rgb(225,12,52)" fg:x="88709" fg:w="611"/><text x="81.1741%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (611 samples, 0.56%)</title><rect x="80.9241%" y="997" width="0.5574%" height="15" fill="rgb(239,128,45)" fg:x="88709" fg:w="611"/><text x="81.1741%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (608 samples, 0.55%)</title><rect x="80.9268%" y="981" width="0.5546%" height="15" fill="rgb(211,78,47)" fg:x="88712" fg:w="608"/><text x="81.1768%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (607 samples, 0.55%)</title><rect x="80.9278%" y="965" width="0.5537%" height="15" fill="rgb(232,31,21)" fg:x="88713" fg:w="607"/><text x="81.1778%" y="975.50"></text></g><g><title>___pthread_mutex_lock (607 samples, 0.55%)</title><rect x="80.9278%" y="949" width="0.5537%" height="15" fill="rgb(222,168,14)" fg:x="88713" fg:w="607"/><text x="81.1778%" y="959.50"></text></g><g><title>__GI___lll_lock_wait (598 samples, 0.55%)</title><rect x="80.9360%" y="933" width="0.5455%" height="15" fill="rgb(209,128,24)" fg:x="88722" fg:w="598"/><text x="81.1860%" y="943.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4,794 samples, 4.37%)</title><rect x="77.3034%" y="1045" width="4.3733%" height="15" fill="rgb(249,35,13)" fg:x="84740" fg:w="4794"/><text x="77.5534%" y="1055.50">&lt;asyn..</text></g><g><title>event_listener::Event::notify (983 samples, 0.90%)</title><rect x="80.7800%" y="1029" width="0.8967%" height="15" fill="rgb(218,7,2)" fg:x="88551" fg:w="983"/><text x="81.0300%" y="1039.50"></text></g><g><title>event_listener::full_fence (213 samples, 0.19%)</title><rect x="81.4824%" y="1013" width="0.1943%" height="15" fill="rgb(238,107,27)" fg:x="89321" fg:w="213"/><text x="81.7324%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (200 samples, 0.18%)</title><rect x="81.4943%" y="997" width="0.1824%" height="15" fill="rgb(217,88,38)" fg:x="89334" fg:w="200"/><text x="81.7443%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (200 samples, 0.18%)</title><rect x="81.4943%" y="981" width="0.1824%" height="15" fill="rgb(230,207,0)" fg:x="89334" fg:w="200"/><text x="81.7443%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="81.6767%" y="981" width="0.0119%" height="15" fill="rgb(249,64,54)" fg:x="89534" fg:w="13"/><text x="81.9267%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (12 samples, 0.01%)</title><rect x="81.6776%" y="965" width="0.0109%" height="15" fill="rgb(231,7,11)" fg:x="89535" fg:w="12"/><text x="81.9276%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="81.6776%" y="949" width="0.0109%" height="15" fill="rgb(205,149,21)" fg:x="89535" fg:w="12"/><text x="81.9276%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (11 samples, 0.01%)</title><rect x="81.6785%" y="933" width="0.0100%" height="15" fill="rgb(215,126,34)" fg:x="89536" fg:w="11"/><text x="81.9285%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="81.6785%" y="917" width="0.0100%" height="15" fill="rgb(241,132,45)" fg:x="89536" fg:w="11"/><text x="81.9285%" y="927.50"></text></g><g><title>event_listener::Inner::lock (23 samples, 0.02%)</title><rect x="81.6895%" y="981" width="0.0210%" height="15" fill="rgb(252,69,32)" fg:x="89548" fg:w="23"/><text x="81.9395%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="81.6895%" y="965" width="0.0210%" height="15" fill="rgb(232,204,19)" fg:x="89548" fg:w="23"/><text x="81.9395%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.02%)</title><rect x="81.6895%" y="949" width="0.0210%" height="15" fill="rgb(249,15,47)" fg:x="89548" fg:w="23"/><text x="81.9395%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (23 samples, 0.02%)</title><rect x="81.6895%" y="933" width="0.0210%" height="15" fill="rgb(209,227,23)" fg:x="89548" fg:w="23"/><text x="81.9395%" y="943.50"></text></g><g><title>___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="81.6895%" y="917" width="0.0210%" height="15" fill="rgb(248,92,24)" fg:x="89548" fg:w="23"/><text x="81.9395%" y="927.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (13,107 samples, 11.96%)</title><rect x="69.7610%" y="1125" width="11.9568%" height="15" fill="rgb(247,59,2)" fg:x="76472" fg:w="13107"/><text x="70.0110%" y="1135.50">tremor_runtime::pi..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,839 samples, 4.41%)</title><rect x="77.3034%" y="1109" width="4.4143%" height="15" fill="rgb(221,30,5)" fg:x="84740" fg:w="4839"/><text x="77.5534%" y="1119.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (4,839 samples, 4.41%)</title><rect x="77.3034%" y="1093" width="4.4143%" height="15" fill="rgb(208,108,53)" fg:x="84740" fg:w="4839"/><text x="77.5534%" y="1103.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,839 samples, 4.41%)</title><rect x="77.3034%" y="1077" width="4.4143%" height="15" fill="rgb(211,183,26)" fg:x="84740" fg:w="4839"/><text x="77.5534%" y="1087.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (4,839 samples, 4.41%)</title><rect x="77.3034%" y="1061" width="4.4143%" height="15" fill="rgb(232,132,4)" fg:x="84740" fg:w="4839"/><text x="77.5534%" y="1071.50">tremo..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (45 samples, 0.04%)</title><rect x="81.6767%" y="1045" width="0.0411%" height="15" fill="rgb(253,128,37)" fg:x="89534" fg:w="45"/><text x="81.9267%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (45 samples, 0.04%)</title><rect x="81.6767%" y="1029" width="0.0411%" height="15" fill="rgb(221,58,24)" fg:x="89534" fg:w="45"/><text x="81.9267%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (45 samples, 0.04%)</title><rect x="81.6767%" y="1013" width="0.0411%" height="15" fill="rgb(230,54,45)" fg:x="89534" fg:w="45"/><text x="81.9267%" y="1023.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="81.6767%" y="997" width="0.0411%" height="15" fill="rgb(254,21,18)" fg:x="89534" fg:w="45"/><text x="81.9267%" y="1007.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (37 samples, 0.03%)</title><rect x="81.7178%" y="1125" width="0.0338%" height="15" fill="rgb(221,108,0)" fg:x="89579" fg:w="37"/><text x="81.9678%" y="1135.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (71 samples, 0.06%)</title><rect x="81.7515%" y="1125" width="0.0648%" height="15" fill="rgb(206,95,1)" fg:x="89616" fg:w="71"/><text x="82.0015%" y="1135.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (68 samples, 0.06%)</title><rect x="81.8172%" y="1125" width="0.0620%" height="15" fill="rgb(237,52,5)" fg:x="89688" fg:w="68"/><text x="82.0672%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (21 samples, 0.02%)</title><rect x="81.8601%" y="1109" width="0.0192%" height="15" fill="rgb(218,150,34)" fg:x="89735" fg:w="21"/><text x="82.1101%" y="1119.50"></text></g><g><title>[unknown] (84,381 samples, 76.98%)</title><rect x="4.9307%" y="1141" width="76.9759%" height="15" fill="rgb(235,194,28)" fg:x="5405" fg:w="84381"/><text x="5.1807%" y="1151.50">[unknown]</text></g><g><title>value_trait::Builder::object (30 samples, 0.03%)</title><rect x="81.8792%" y="1125" width="0.0274%" height="15" fill="rgb(245,92,18)" fg:x="89756" fg:w="30"/><text x="82.1292%" y="1135.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (18 samples, 0.02%)</title><rect x="81.8902%" y="1109" width="0.0164%" height="15" fill="rgb(253,203,53)" fg:x="89768" fg:w="18"/><text x="82.1402%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (13 samples, 0.01%)</title><rect x="81.8947%" y="1093" width="0.0119%" height="15" fill="rgb(249,185,47)" fg:x="89773" fg:w="13"/><text x="82.1447%" y="1103.50"></text></g><g><title>ret_from_fork (25 samples, 0.02%)</title><rect x="81.9066%" y="1125" width="0.0228%" height="15" fill="rgb(252,194,52)" fg:x="89786" fg:w="25"/><text x="82.1566%" y="1135.50"></text></g><g><title>schedule_tail (25 samples, 0.02%)</title><rect x="81.9066%" y="1109" width="0.0228%" height="15" fill="rgb(210,53,36)" fg:x="89786" fg:w="25"/><text x="82.1566%" y="1119.50"></text></g><g><title>finish_task_switch.isra.0 (25 samples, 0.02%)</title><rect x="81.9066%" y="1093" width="0.0228%" height="15" fill="rgb(237,37,25)" fg:x="89786" fg:w="25"/><text x="82.1566%" y="1103.50"></text></g><g><title>__perf_event_task_sched_in (25 samples, 0.02%)</title><rect x="81.9066%" y="1077" width="0.0228%" height="15" fill="rgb(242,116,27)" fg:x="89786" fg:w="25"/><text x="82.1566%" y="1087.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (25 samples, 0.02%)</title><rect x="81.9066%" y="1061" width="0.0228%" height="15" fill="rgb(213,185,26)" fg:x="89786" fg:w="25"/><text x="82.1566%" y="1071.50"></text></g><g><title>native_write_msr (22 samples, 0.02%)</title><rect x="81.9093%" y="1045" width="0.0201%" height="15" fill="rgb(225,204,8)" fg:x="89789" fg:w="22"/><text x="82.1593%" y="1055.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="82.0525%" y="549" width="0.0128%" height="15" fill="rgb(254,111,37)" fg:x="89946" fg:w="14"/><text x="82.3025%" y="559.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="82.1976%" y="453" width="0.0164%" height="15" fill="rgb(242,35,9)" fg:x="90105" fg:w="18"/><text x="82.4476%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (18 samples, 0.02%)</title><rect x="82.2295%" y="437" width="0.0164%" height="15" fill="rgb(232,138,49)" fg:x="90140" fg:w="18"/><text x="82.4795%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (17 samples, 0.02%)</title><rect x="82.2304%" y="421" width="0.0155%" height="15" fill="rgb(247,56,4)" fg:x="90141" fg:w="17"/><text x="82.4804%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.01%)</title><rect x="82.2359%" y="405" width="0.0100%" height="15" fill="rgb(226,179,17)" fg:x="90147" fg:w="11"/><text x="82.4859%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="82.2459%" y="437" width="0.0146%" height="15" fill="rgb(216,163,45)" fg:x="90158" fg:w="16"/><text x="82.4959%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="82.2605%" y="437" width="0.0237%" height="15" fill="rgb(211,157,3)" fg:x="90174" fg:w="26"/><text x="82.5105%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (164 samples, 0.15%)</title><rect x="82.1657%" y="485" width="0.1496%" height="15" fill="rgb(234,44,20)" fg:x="90070" fg:w="164"/><text x="82.4157%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (138 samples, 0.13%)</title><rect x="82.1894%" y="469" width="0.1259%" height="15" fill="rgb(254,138,23)" fg:x="90096" fg:w="138"/><text x="82.4394%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (111 samples, 0.10%)</title><rect x="82.2140%" y="453" width="0.1013%" height="15" fill="rgb(206,119,39)" fg:x="90123" fg:w="111"/><text x="82.4640%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (34 samples, 0.03%)</title><rect x="82.2843%" y="437" width="0.0310%" height="15" fill="rgb(231,105,52)" fg:x="90200" fg:w="34"/><text x="82.5343%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (34 samples, 0.03%)</title><rect x="82.2843%" y="421" width="0.0310%" height="15" fill="rgb(250,20,5)" fg:x="90200" fg:w="34"/><text x="82.5343%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (29 samples, 0.03%)</title><rect x="82.2888%" y="405" width="0.0265%" height="15" fill="rgb(215,198,30)" fg:x="90205" fg:w="29"/><text x="82.5388%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (29 samples, 0.03%)</title><rect x="82.2888%" y="389" width="0.0265%" height="15" fill="rgb(246,142,8)" fg:x="90205" fg:w="29"/><text x="82.5388%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (207 samples, 0.19%)</title><rect x="82.1456%" y="533" width="0.1888%" height="15" fill="rgb(243,26,38)" fg:x="90048" fg:w="207"/><text x="82.3956%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (207 samples, 0.19%)</title><rect x="82.1456%" y="517" width="0.1888%" height="15" fill="rgb(205,133,28)" fg:x="90048" fg:w="207"/><text x="82.3956%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (207 samples, 0.19%)</title><rect x="82.1456%" y="501" width="0.1888%" height="15" fill="rgb(212,34,0)" fg:x="90048" fg:w="207"/><text x="82.3956%" y="511.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (21 samples, 0.02%)</title><rect x="82.3153%" y="485" width="0.0192%" height="15" fill="rgb(251,226,22)" fg:x="90234" fg:w="21"/><text x="82.5653%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (365 samples, 0.33%)</title><rect x="82.4849%" y="501" width="0.3330%" height="15" fill="rgb(252,119,9)" fg:x="90420" fg:w="365"/><text x="82.7349%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (252 samples, 0.23%)</title><rect x="82.5880%" y="485" width="0.2299%" height="15" fill="rgb(213,150,50)" fg:x="90533" fg:w="252"/><text x="82.8380%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (252 samples, 0.23%)</title><rect x="82.5880%" y="469" width="0.2299%" height="15" fill="rgb(212,24,39)" fg:x="90533" fg:w="252"/><text x="82.8380%" y="479.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (521 samples, 0.48%)</title><rect x="82.3536%" y="517" width="0.4753%" height="15" fill="rgb(213,46,39)" fg:x="90276" fg:w="521"/><text x="82.6036%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (12 samples, 0.01%)</title><rect x="82.8179%" y="501" width="0.0109%" height="15" fill="rgb(239,106,12)" fg:x="90785" fg:w="12"/><text x="83.0679%" y="511.50"></text></g><g><title>async_executor::steal (543 samples, 0.50%)</title><rect x="82.3344%" y="533" width="0.4953%" height="15" fill="rgb(249,229,21)" fg:x="90255" fg:w="543"/><text x="82.5844%" y="543.50"></text></g><g><title>concurrent_queue::full_fence (646 samples, 0.59%)</title><rect x="83.1819%" y="501" width="0.5893%" height="15" fill="rgb(212,158,3)" fg:x="91184" fg:w="646"/><text x="83.4319%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (641 samples, 0.58%)</title><rect x="83.1865%" y="485" width="0.5847%" height="15" fill="rgb(253,26,48)" fg:x="91189" fg:w="641"/><text x="83.4365%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (641 samples, 0.58%)</title><rect x="83.1865%" y="469" width="0.5847%" height="15" fill="rgb(238,178,20)" fg:x="91189" fg:w="641"/><text x="83.4365%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (641 samples, 0.58%)</title><rect x="83.1865%" y="453" width="0.5847%" height="15" fill="rgb(208,86,15)" fg:x="91189" fg:w="641"/><text x="83.4365%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (964 samples, 0.88%)</title><rect x="82.9493%" y="517" width="0.8794%" height="15" fill="rgb(239,42,53)" fg:x="90929" fg:w="964"/><text x="83.1993%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (63 samples, 0.06%)</title><rect x="83.7712%" y="501" width="0.0575%" height="15" fill="rgb(245,226,8)" fg:x="91830" fg:w="63"/><text x="84.0212%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (61 samples, 0.06%)</title><rect x="83.7730%" y="485" width="0.0556%" height="15" fill="rgb(216,176,32)" fg:x="91832" fg:w="61"/><text x="84.0230%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (228 samples, 0.21%)</title><rect x="83.8624%" y="501" width="0.2080%" height="15" fill="rgb(231,186,21)" fg:x="91930" fg:w="228"/><text x="84.1124%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (220 samples, 0.20%)</title><rect x="83.8697%" y="485" width="0.2007%" height="15" fill="rgb(205,95,49)" fg:x="91938" fg:w="220"/><text x="84.1197%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (220 samples, 0.20%)</title><rect x="83.8697%" y="469" width="0.2007%" height="15" fill="rgb(217,145,8)" fg:x="91938" fg:w="220"/><text x="84.1197%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (220 samples, 0.20%)</title><rect x="83.8697%" y="453" width="0.2007%" height="15" fill="rgb(239,144,48)" fg:x="91938" fg:w="220"/><text x="84.1197%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="84.0759%" y="485" width="0.0119%" height="15" fill="rgb(214,189,23)" fg:x="92164" fg:w="13"/><text x="84.3259%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="84.0759%" y="469" width="0.0119%" height="15" fill="rgb(229,157,17)" fg:x="92164" fg:w="13"/><text x="84.3259%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (17 samples, 0.02%)</title><rect x="84.0750%" y="501" width="0.0155%" height="15" fill="rgb(230,5,48)" fg:x="92163" fg:w="17"/><text x="84.3250%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (17 samples, 0.02%)</title><rect x="84.0978%" y="501" width="0.0155%" height="15" fill="rgb(224,156,48)" fg:x="92188" fg:w="17"/><text x="84.3478%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.02%)</title><rect x="84.0978%" y="485" width="0.0155%" height="15" fill="rgb(223,14,29)" fg:x="92188" fg:w="17"/><text x="84.3478%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (103 samples, 0.09%)</title><rect x="84.1133%" y="501" width="0.0940%" height="15" fill="rgb(229,96,36)" fg:x="92205" fg:w="103"/><text x="84.3633%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (103 samples, 0.09%)</title><rect x="84.1133%" y="485" width="0.0940%" height="15" fill="rgb(231,102,53)" fg:x="92205" fg:w="103"/><text x="84.3633%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (57 samples, 0.05%)</title><rect x="84.2073%" y="501" width="0.0520%" height="15" fill="rgb(210,77,38)" fg:x="92308" fg:w="57"/><text x="84.4573%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_or (57 samples, 0.05%)</title><rect x="84.2073%" y="485" width="0.0520%" height="15" fill="rgb(235,131,6)" fg:x="92308" fg:w="57"/><text x="84.4573%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,742 samples, 1.59%)</title><rect x="82.8298%" y="533" width="1.5891%" height="15" fill="rgb(252,55,38)" fg:x="90798" fg:w="1742"/><text x="83.0798%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (647 samples, 0.59%)</title><rect x="83.8287%" y="517" width="0.5902%" height="15" fill="rgb(246,38,14)" fg:x="91893" fg:w="647"/><text x="84.0787%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (175 samples, 0.16%)</title><rect x="84.2593%" y="501" width="0.1596%" height="15" fill="rgb(242,27,5)" fg:x="92365" fg:w="175"/><text x="84.5093%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (175 samples, 0.16%)</title><rect x="84.2593%" y="485" width="0.1596%" height="15" fill="rgb(228,65,35)" fg:x="92365" fg:w="175"/><text x="84.5093%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (109 samples, 0.10%)</title><rect x="84.4371%" y="469" width="0.0994%" height="15" fill="rgb(245,93,11)" fg:x="92560" fg:w="109"/><text x="84.6871%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (109 samples, 0.10%)</title><rect x="84.4371%" y="453" width="0.0994%" height="15" fill="rgb(213,1,31)" fg:x="92560" fg:w="109"/><text x="84.6871%" y="463.50"></text></g><g><title>___pthread_rwlock_unlock (121 samples, 0.11%)</title><rect x="84.5366%" y="453" width="0.1104%" height="15" fill="rgb(237,205,14)" fg:x="92669" fg:w="121"/><text x="84.7866%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (251 samples, 0.23%)</title><rect x="84.4189%" y="533" width="0.2290%" height="15" fill="rgb(232,118,45)" fg:x="92540" fg:w="251"/><text x="84.6689%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (251 samples, 0.23%)</title><rect x="84.4189%" y="517" width="0.2290%" height="15" fill="rgb(218,5,6)" fg:x="92540" fg:w="251"/><text x="84.6689%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (246 samples, 0.22%)</title><rect x="84.4235%" y="501" width="0.2244%" height="15" fill="rgb(251,87,51)" fg:x="92545" fg:w="246"/><text x="84.6735%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (233 samples, 0.21%)</title><rect x="84.4353%" y="485" width="0.2126%" height="15" fill="rgb(207,225,20)" fg:x="92558" fg:w="233"/><text x="84.6853%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (122 samples, 0.11%)</title><rect x="84.5366%" y="469" width="0.1113%" height="15" fill="rgb(222,78,54)" fg:x="92669" fg:w="122"/><text x="84.7866%" y="479.50"></text></g><g><title>fastrand::Rng::usize (16 samples, 0.01%)</title><rect x="84.6570%" y="469" width="0.0146%" height="15" fill="rgb(232,85,16)" fg:x="92801" fg:w="16"/><text x="84.9070%" y="479.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (16 samples, 0.01%)</title><rect x="84.6570%" y="453" width="0.0146%" height="15" fill="rgb(244,25,33)" fg:x="92801" fg:w="16"/><text x="84.9070%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21 samples, 0.02%)</title><rect x="84.6533%" y="501" width="0.0192%" height="15" fill="rgb(233,24,36)" fg:x="92797" fg:w="21"/><text x="84.9033%" y="511.50"></text></g><g><title>fastrand::usize::{{closure}} (17 samples, 0.02%)</title><rect x="84.6570%" y="485" width="0.0155%" height="15" fill="rgb(253,49,54)" fg:x="92801" fg:w="17"/><text x="84.9070%" y="495.50"></text></g><g><title>fastrand::usize (33 samples, 0.03%)</title><rect x="84.6479%" y="533" width="0.0301%" height="15" fill="rgb(245,12,22)" fg:x="92791" fg:w="33"/><text x="84.8979%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.02%)</title><rect x="84.6533%" y="517" width="0.0246%" height="15" fill="rgb(253,141,28)" fg:x="92797" fg:w="27"/><text x="84.9033%" y="527.50"></text></g><g><title>___pthread_rwlock_rdlock (176 samples, 0.16%)</title><rect x="84.6971%" y="485" width="0.1606%" height="15" fill="rgb(225,207,27)" fg:x="92845" fg:w="176"/><text x="84.9471%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (3,155 samples, 2.88%)</title><rect x="82.0653%" y="549" width="2.8781%" height="15" fill="rgb(220,84,2)" fg:x="89960" fg:w="3155"/><text x="82.3153%" y="559.50">as..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (291 samples, 0.27%)</title><rect x="84.6780%" y="533" width="0.2655%" height="15" fill="rgb(224,37,37)" fg:x="92824" fg:w="291"/><text x="84.9280%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (287 samples, 0.26%)</title><rect x="84.6816%" y="517" width="0.2618%" height="15" fill="rgb(220,143,18)" fg:x="92828" fg:w="287"/><text x="84.9316%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (282 samples, 0.26%)</title><rect x="84.6862%" y="501" width="0.2573%" height="15" fill="rgb(210,88,33)" fg:x="92833" fg:w="282"/><text x="84.9362%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (94 samples, 0.09%)</title><rect x="84.8577%" y="485" width="0.0858%" height="15" fill="rgb(219,87,51)" fg:x="93021" fg:w="94"/><text x="85.1077%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (94 samples, 0.09%)</title><rect x="84.8577%" y="469" width="0.0858%" height="15" fill="rgb(211,7,35)" fg:x="93021" fg:w="94"/><text x="85.1077%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="84.9498%" y="469" width="0.0182%" height="15" fill="rgb(232,77,2)" fg:x="93122" fg:w="20"/><text x="85.1998%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (24 samples, 0.02%)</title><rect x="84.9471%" y="533" width="0.0219%" height="15" fill="rgb(249,94,25)" fg:x="93119" fg:w="24"/><text x="85.1971%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="84.9471%" y="517" width="0.0219%" height="15" fill="rgb(215,112,2)" fg:x="93119" fg:w="24"/><text x="85.1971%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.02%)</title><rect x="84.9489%" y="501" width="0.0201%" height="15" fill="rgb(226,115,48)" fg:x="93121" fg:w="22"/><text x="85.1989%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (21 samples, 0.02%)</title><rect x="84.9498%" y="485" width="0.0192%" height="15" fill="rgb(249,196,10)" fg:x="93122" fg:w="21"/><text x="85.1998%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (40 samples, 0.04%)</title><rect x="84.9690%" y="533" width="0.0365%" height="15" fill="rgb(237,109,14)" fg:x="93143" fg:w="40"/><text x="85.2190%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (40 samples, 0.04%)</title><rect x="84.9690%" y="517" width="0.0365%" height="15" fill="rgb(217,103,53)" fg:x="93143" fg:w="40"/><text x="85.2190%" y="527.50"></text></g><g><title>__fdget_pos (24 samples, 0.02%)</title><rect x="85.0356%" y="373" width="0.0219%" height="15" fill="rgb(244,137,9)" fg:x="93216" fg:w="24"/><text x="85.2856%" y="383.50"></text></g><g><title>__fget_light (24 samples, 0.02%)</title><rect x="85.0356%" y="357" width="0.0219%" height="15" fill="rgb(227,201,3)" fg:x="93216" fg:w="24"/><text x="85.2856%" y="367.50"></text></g><g><title>fput_many (11 samples, 0.01%)</title><rect x="85.0584%" y="373" width="0.0100%" height="15" fill="rgb(243,94,6)" fg:x="93241" fg:w="11"/><text x="85.3084%" y="383.50"></text></g><g><title>_raw_spin_lock_irqsave (13 samples, 0.01%)</title><rect x="85.1460%" y="245" width="0.0119%" height="15" fill="rgb(235,118,5)" fg:x="93337" fg:w="13"/><text x="85.3960%" y="255.50"></text></g><g><title>select_task_rq_fair (20 samples, 0.02%)</title><rect x="85.1642%" y="245" width="0.0182%" height="15" fill="rgb(247,10,30)" fg:x="93357" fg:w="20"/><text x="85.4142%" y="255.50"></text></g><g><title>available_idle_cpu (12 samples, 0.01%)</title><rect x="85.1715%" y="229" width="0.0109%" height="15" fill="rgb(205,26,28)" fg:x="93365" fg:w="12"/><text x="85.4215%" y="239.50"></text></g><g><title>enqueue_task_fair (78 samples, 0.07%)</title><rect x="85.1870%" y="213" width="0.0712%" height="15" fill="rgb(206,99,35)" fg:x="93382" fg:w="78"/><text x="85.4370%" y="223.50"></text></g><g><title>enqueue_entity (53 samples, 0.05%)</title><rect x="85.2098%" y="197" width="0.0483%" height="15" fill="rgb(238,130,40)" fg:x="93407" fg:w="53"/><text x="85.4598%" y="207.50"></text></g><g><title>update_load_avg (15 samples, 0.01%)</title><rect x="85.2445%" y="181" width="0.0137%" height="15" fill="rgb(224,126,31)" fg:x="93445" fg:w="15"/><text x="85.4945%" y="191.50"></text></g><g><title>psi_group_change (37 samples, 0.03%)</title><rect x="85.2874%" y="197" width="0.0338%" height="15" fill="rgb(254,105,17)" fg:x="93492" fg:w="37"/><text x="85.5374%" y="207.50"></text></g><g><title>ttwu_do_activate (154 samples, 0.14%)</title><rect x="85.1824%" y="245" width="0.1405%" height="15" fill="rgb(216,87,36)" fg:x="93377" fg:w="154"/><text x="85.4324%" y="255.50"></text></g><g><title>enqueue_task (152 samples, 0.14%)</title><rect x="85.1843%" y="229" width="0.1387%" height="15" fill="rgb(240,21,12)" fg:x="93379" fg:w="152"/><text x="85.4343%" y="239.50"></text></g><g><title>psi_task_change (61 samples, 0.06%)</title><rect x="85.2673%" y="213" width="0.0556%" height="15" fill="rgb(245,192,34)" fg:x="93470" fg:w="61"/><text x="85.5173%" y="223.50"></text></g><g><title>ttwu_queue_wakelist (12 samples, 0.01%)</title><rect x="85.3311%" y="245" width="0.0109%" height="15" fill="rgb(226,100,49)" fg:x="93540" fg:w="12"/><text x="85.5811%" y="255.50"></text></g><g><title>__wake_up_common (265 samples, 0.24%)</title><rect x="85.1113%" y="293" width="0.2417%" height="15" fill="rgb(245,188,27)" fg:x="93299" fg:w="265"/><text x="85.3613%" y="303.50"></text></g><g><title>autoremove_wake_function (252 samples, 0.23%)</title><rect x="85.1232%" y="277" width="0.2299%" height="15" fill="rgb(212,170,8)" fg:x="93312" fg:w="252"/><text x="85.3732%" y="287.50"></text></g><g><title>try_to_wake_up (237 samples, 0.22%)</title><rect x="85.1368%" y="261" width="0.2162%" height="15" fill="rgb(217,113,29)" fg:x="93327" fg:w="237"/><text x="85.3868%" y="271.50"></text></g><g><title>update_rq_clock (12 samples, 0.01%)</title><rect x="85.3421%" y="245" width="0.0109%" height="15" fill="rgb(237,30,3)" fg:x="93552" fg:w="12"/><text x="85.5921%" y="255.50"></text></g><g><title>__wake_up_common_lock (268 samples, 0.24%)</title><rect x="85.1113%" y="309" width="0.2445%" height="15" fill="rgb(227,19,28)" fg:x="93299" fg:w="268"/><text x="85.3613%" y="319.50"></text></g><g><title>_raw_read_lock_irqsave (25 samples, 0.02%)</title><rect x="85.3558%" y="309" width="0.0228%" height="15" fill="rgb(239,172,45)" fg:x="93567" fg:w="25"/><text x="85.6058%" y="319.50"></text></g><g><title>__wake_up_common (333 samples, 0.30%)</title><rect x="85.0785%" y="341" width="0.3038%" height="15" fill="rgb(254,55,39)" fg:x="93263" fg:w="333"/><text x="85.3285%" y="351.50"></text></g><g><title>ep_poll_callback (329 samples, 0.30%)</title><rect x="85.0821%" y="325" width="0.3001%" height="15" fill="rgb(249,208,12)" fg:x="93267" fg:w="329"/><text x="85.3321%" y="335.50"></text></g><g><title>_raw_spin_lock_irq (16 samples, 0.01%)</title><rect x="85.3877%" y="341" width="0.0146%" height="15" fill="rgb(240,52,13)" fg:x="93602" fg:w="16"/><text x="85.6377%" y="351.50"></text></g><g><title>eventfd_write (365 samples, 0.33%)</title><rect x="85.0702%" y="357" width="0.3330%" height="15" fill="rgb(252,149,13)" fg:x="93254" fg:w="365"/><text x="85.3202%" y="367.50"></text></g><g><title>ksys_write (406 samples, 0.37%)</title><rect x="85.0338%" y="389" width="0.3704%" height="15" fill="rgb(232,81,48)" fg:x="93214" fg:w="406"/><text x="85.2838%" y="399.50"></text></g><g><title>vfs_write (368 samples, 0.34%)</title><rect x="85.0684%" y="373" width="0.3357%" height="15" fill="rgb(222,144,2)" fg:x="93252" fg:w="368"/><text x="85.3184%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (65 samples, 0.06%)</title><rect x="85.4050%" y="389" width="0.0593%" height="15" fill="rgb(216,81,32)" fg:x="93621" fg:w="65"/><text x="85.6550%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (485 samples, 0.44%)</title><rect x="85.0283%" y="421" width="0.4424%" height="15" fill="rgb(244,78,51)" fg:x="93208" fg:w="485"/><text x="85.2783%" y="431.50"></text></g><g><title>do_syscall_64 (484 samples, 0.44%)</title><rect x="85.0292%" y="405" width="0.4415%" height="15" fill="rgb(217,66,21)" fg:x="93209" fg:w="484"/><text x="85.2792%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::notify (501 samples, 0.46%)</title><rect x="85.0155%" y="485" width="0.4570%" height="15" fill="rgb(247,101,42)" fg:x="93194" fg:w="501"/><text x="85.2655%" y="495.50"></text></g><g><title>polling::Poller::notify (499 samples, 0.46%)</title><rect x="85.0173%" y="469" width="0.4552%" height="15" fill="rgb(227,81,39)" fg:x="93196" fg:w="499"/><text x="85.2673%" y="479.50"></text></g><g><title>polling::epoll::Poller::notify (496 samples, 0.45%)</title><rect x="85.0201%" y="453" width="0.4525%" height="15" fill="rgb(220,223,44)" fg:x="93199" fg:w="496"/><text x="85.2701%" y="463.50"></text></g><g><title>__GI___write (496 samples, 0.45%)</title><rect x="85.0201%" y="437" width="0.4525%" height="15" fill="rgb(205,218,2)" fg:x="93199" fg:w="496"/><text x="85.2701%" y="447.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="85.4990%" y="373" width="0.0100%" height="15" fill="rgb(212,207,28)" fg:x="93724" fg:w="11"/><text x="85.7490%" y="383.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="85.4972%" y="453" width="0.0128%" height="15" fill="rgb(224,12,41)" fg:x="93722" fg:w="14"/><text x="85.7472%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (14 samples, 0.01%)</title><rect x="85.4972%" y="437" width="0.0128%" height="15" fill="rgb(216,118,12)" fg:x="93722" fg:w="14"/><text x="85.7472%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="85.4972%" y="421" width="0.0128%" height="15" fill="rgb(252,97,46)" fg:x="93722" fg:w="14"/><text x="85.7472%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="85.4990%" y="405" width="0.0109%" height="15" fill="rgb(244,206,19)" fg:x="93724" fg:w="12"/><text x="85.7490%" y="415.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="85.4990%" y="389" width="0.0109%" height="15" fill="rgb(231,84,31)" fg:x="93724" fg:w="12"/><text x="85.7490%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (70 samples, 0.06%)</title><rect x="85.5099%" y="453" width="0.0639%" height="15" fill="rgb(244,133,0)" fg:x="93736" fg:w="70"/><text x="85.7599%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (70 samples, 0.06%)</title><rect x="85.5099%" y="437" width="0.0639%" height="15" fill="rgb(223,15,50)" fg:x="93736" fg:w="70"/><text x="85.7599%" y="447.50"></text></g><g><title>__entry_text_start (19 samples, 0.02%)</title><rect x="85.6687%" y="389" width="0.0173%" height="15" fill="rgb(250,118,49)" fg:x="93910" fg:w="19"/><text x="85.9187%" y="399.50"></text></g><g><title>_raw_spin_lock (41 samples, 0.04%)</title><rect x="85.7964%" y="309" width="0.0374%" height="15" fill="rgb(248,25,38)" fg:x="94050" fg:w="41"/><text x="86.0464%" y="319.50"></text></g><g><title>futex_hash (17 samples, 0.02%)</title><rect x="85.8347%" y="309" width="0.0155%" height="15" fill="rgb(215,70,14)" fg:x="94092" fg:w="17"/><text x="86.0847%" y="319.50"></text></g><g><title>futex_wake_mark (106 samples, 0.10%)</title><rect x="85.8502%" y="309" width="0.0967%" height="15" fill="rgb(215,28,15)" fg:x="94109" fg:w="106"/><text x="86.1002%" y="319.50"></text></g><g><title>__futex_unqueue (38 samples, 0.03%)</title><rect x="85.9122%" y="293" width="0.0347%" height="15" fill="rgb(243,6,28)" fg:x="94177" fg:w="38"/><text x="86.1622%" y="303.50"></text></g><g><title>wake_q_add_safe (15 samples, 0.01%)</title><rect x="85.9515%" y="309" width="0.0137%" height="15" fill="rgb(222,130,1)" fg:x="94220" fg:w="15"/><text x="86.2015%" y="319.50"></text></g><g><title>_raw_spin_lock_irqsave (12 samples, 0.01%)</title><rect x="86.0217%" y="277" width="0.0109%" height="15" fill="rgb(236,166,44)" fg:x="94297" fg:w="12"/><text x="86.2717%" y="287.50"></text></g><g><title>raw_spin_rq_lock_nested (18 samples, 0.02%)</title><rect x="86.0427%" y="277" width="0.0164%" height="15" fill="rgb(221,108,14)" fg:x="94320" fg:w="18"/><text x="86.2927%" y="287.50"></text></g><g><title>_raw_spin_lock (17 samples, 0.02%)</title><rect x="86.0436%" y="261" width="0.0155%" height="15" fill="rgb(252,3,45)" fg:x="94321" fg:w="17"/><text x="86.2936%" y="271.50"></text></g><g><title>select_task_rq_fair (122 samples, 0.11%)</title><rect x="86.0591%" y="277" width="0.1113%" height="15" fill="rgb(237,68,30)" fg:x="94338" fg:w="122"/><text x="86.3091%" y="287.50"></text></g><g><title>available_idle_cpu (48 samples, 0.04%)</title><rect x="86.1266%" y="261" width="0.0438%" height="15" fill="rgb(211,79,22)" fg:x="94412" fg:w="48"/><text x="86.3766%" y="271.50"></text></g><g><title>place_entity (15 samples, 0.01%)</title><rect x="86.3428%" y="213" width="0.0137%" height="15" fill="rgb(252,185,21)" fg:x="94649" fg:w="15"/><text x="86.5928%" y="223.50"></text></g><g><title>reweight_entity (27 samples, 0.02%)</title><rect x="86.3592%" y="213" width="0.0246%" height="15" fill="rgb(225,189,26)" fg:x="94667" fg:w="27"/><text x="86.6092%" y="223.50"></text></g><g><title>update_cfs_group (23 samples, 0.02%)</title><rect x="86.3839%" y="213" width="0.0210%" height="15" fill="rgb(241,30,40)" fg:x="94694" fg:w="23"/><text x="86.6339%" y="223.50"></text></g><g><title>__update_load_avg_cfs_rq (14 samples, 0.01%)</title><rect x="86.4322%" y="197" width="0.0128%" height="15" fill="rgb(235,215,44)" fg:x="94747" fg:w="14"/><text x="86.6822%" y="207.50"></text></g><g><title>enqueue_task_fair (296 samples, 0.27%)</title><rect x="86.1932%" y="245" width="0.2700%" height="15" fill="rgb(205,8,29)" fg:x="94485" fg:w="296"/><text x="86.4432%" y="255.50"></text></g><g><title>enqueue_entity (204 samples, 0.19%)</title><rect x="86.2771%" y="229" width="0.1861%" height="15" fill="rgb(241,137,42)" fg:x="94577" fg:w="204"/><text x="86.5271%" y="239.50"></text></g><g><title>update_load_avg (61 samples, 0.06%)</title><rect x="86.4076%" y="213" width="0.0556%" height="15" fill="rgb(237,155,2)" fg:x="94720" fg:w="61"/><text x="86.6576%" y="223.50"></text></g><g><title>__update_load_avg_se (20 samples, 0.02%)</title><rect x="86.4450%" y="197" width="0.0182%" height="15" fill="rgb(245,29,42)" fg:x="94761" fg:w="20"/><text x="86.6950%" y="207.50"></text></g><g><title>psi_group_change (52 samples, 0.05%)</title><rect x="86.4632%" y="245" width="0.0474%" height="15" fill="rgb(234,101,35)" fg:x="94781" fg:w="52"/><text x="86.7132%" y="255.50"></text></g><g><title>psi_flags_change (12 samples, 0.01%)</title><rect x="86.5800%" y="229" width="0.0109%" height="15" fill="rgb(228,64,37)" fg:x="94909" fg:w="12"/><text x="86.8300%" y="239.50"></text></g><g><title>psi_group_change (159 samples, 0.15%)</title><rect x="86.5910%" y="229" width="0.1450%" height="15" fill="rgb(217,214,36)" fg:x="94921" fg:w="159"/><text x="86.8410%" y="239.50"></text></g><g><title>ttwu_do_activate (625 samples, 0.57%)</title><rect x="86.1704%" y="277" width="0.5702%" height="15" fill="rgb(243,70,3)" fg:x="94460" fg:w="625"/><text x="86.4204%" y="287.50"></text></g><g><title>enqueue_task (609 samples, 0.56%)</title><rect x="86.1850%" y="261" width="0.5556%" height="15" fill="rgb(253,158,52)" fg:x="94476" fg:w="609"/><text x="86.4350%" y="271.50"></text></g><g><title>psi_task_change (252 samples, 0.23%)</title><rect x="86.5107%" y="245" width="0.2299%" height="15" fill="rgb(234,111,54)" fg:x="94833" fg:w="252"/><text x="86.7607%" y="255.50"></text></g><g><title>ttwu_do_wakeup (48 samples, 0.04%)</title><rect x="86.7406%" y="277" width="0.0438%" height="15" fill="rgb(217,70,32)" fg:x="95085" fg:w="48"/><text x="86.9906%" y="287.50"></text></g><g><title>check_preempt_curr (43 samples, 0.04%)</title><rect x="86.7451%" y="261" width="0.0392%" height="15" fill="rgb(234,18,33)" fg:x="95090" fg:w="43"/><text x="86.9951%" y="271.50"></text></g><g><title>resched_curr (36 samples, 0.03%)</title><rect x="86.7515%" y="245" width="0.0328%" height="15" fill="rgb(234,12,49)" fg:x="95097" fg:w="36"/><text x="87.0015%" y="255.50"></text></g><g><title>ttwu_queue_wakelist (46 samples, 0.04%)</title><rect x="86.7843%" y="277" width="0.0420%" height="15" fill="rgb(236,10,21)" fg:x="95133" fg:w="46"/><text x="87.0343%" y="287.50"></text></g><g><title>sched_clock_cpu (20 samples, 0.02%)</title><rect x="86.8728%" y="261" width="0.0182%" height="15" fill="rgb(248,182,45)" fg:x="95230" fg:w="20"/><text x="87.1228%" y="271.50"></text></g><g><title>native_sched_clock (20 samples, 0.02%)</title><rect x="86.8728%" y="245" width="0.0182%" height="15" fill="rgb(217,95,36)" fg:x="95230" fg:w="20"/><text x="87.1228%" y="255.50"></text></g><g><title>__x64_sys_futex (1,306 samples, 1.19%)</title><rect x="85.7015%" y="357" width="1.1914%" height="15" fill="rgb(212,110,31)" fg:x="93946" fg:w="1306"/><text x="85.9515%" y="367.50"></text></g><g><title>do_futex (1,284 samples, 1.17%)</title><rect x="85.7216%" y="341" width="1.1713%" height="15" fill="rgb(206,32,53)" fg:x="93968" fg:w="1284"/><text x="85.9716%" y="351.50"></text></g><g><title>futex_wake (1,278 samples, 1.17%)</title><rect x="85.7271%" y="325" width="1.1658%" height="15" fill="rgb(246,141,37)" fg:x="93974" fg:w="1278"/><text x="85.9771%" y="335.50"></text></g><g><title>wake_up_q (1,017 samples, 0.93%)</title><rect x="85.9652%" y="309" width="0.9278%" height="15" fill="rgb(219,16,7)" fg:x="94235" fg:w="1017"/><text x="86.2152%" y="319.50"></text></g><g><title>try_to_wake_up (1,002 samples, 0.91%)</title><rect x="85.9788%" y="293" width="0.9141%" height="15" fill="rgb(230,205,45)" fg:x="94250" fg:w="1002"/><text x="86.2288%" y="303.50"></text></g><g><title>update_rq_clock (73 samples, 0.07%)</title><rect x="86.8263%" y="277" width="0.0666%" height="15" fill="rgb(231,43,49)" fg:x="95179" fg:w="73"/><text x="87.0763%" y="287.50"></text></g><g><title>syscall_exit_to_user_mode (237 samples, 0.22%)</title><rect x="86.9002%" y="357" width="0.2162%" height="15" fill="rgb(212,106,34)" fg:x="95260" fg:w="237"/><text x="87.1502%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,573 samples, 1.43%)</title><rect x="85.6915%" y="389" width="1.4350%" height="15" fill="rgb(206,83,17)" fg:x="93935" fg:w="1573"/><text x="85.9415%" y="399.50"></text></g><g><title>do_syscall_64 (1,570 samples, 1.43%)</title><rect x="85.6942%" y="373" width="1.4322%" height="15" fill="rgb(244,154,49)" fg:x="93938" fg:w="1570"/><text x="85.9442%" y="383.50"></text></g><g><title>syscall_trace_enter.constprop.0 (11 samples, 0.01%)</title><rect x="87.1164%" y="357" width="0.0100%" height="15" fill="rgb(244,149,49)" fg:x="95497" fg:w="11"/><text x="87.3664%" y="367.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1,712 samples, 1.56%)</title><rect x="85.5738%" y="453" width="1.5618%" height="15" fill="rgb(227,134,18)" fg:x="93806" fg:w="1712"/><text x="85.8238%" y="463.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1,712 samples, 1.56%)</title><rect x="85.5738%" y="437" width="1.5618%" height="15" fill="rgb(237,116,36)" fg:x="93806" fg:w="1712"/><text x="85.8238%" y="447.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1,712 samples, 1.56%)</title><rect x="85.5738%" y="421" width="1.5618%" height="15" fill="rgb(205,129,40)" fg:x="93806" fg:w="1712"/><text x="85.8238%" y="431.50"></text></g><g><title>__GI___pthread_cond_signal (1,712 samples, 1.56%)</title><rect x="85.5738%" y="405" width="1.5618%" height="15" fill="rgb(236,178,4)" fg:x="93806" fg:w="1712"/><text x="85.8238%" y="415.50"></text></g><g><title>parking::Unparker::unpark (1,915 samples, 1.75%)</title><rect x="85.4762%" y="485" width="1.7469%" height="15" fill="rgb(251,76,53)" fg:x="93699" fg:w="1915"/><text x="85.7262%" y="495.50"></text></g><g><title>parking::Inner::unpark (1,894 samples, 1.73%)</title><rect x="85.4953%" y="469" width="1.7278%" height="15" fill="rgb(242,92,40)" fg:x="93720" fg:w="1894"/><text x="85.7453%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (96 samples, 0.09%)</title><rect x="87.1356%" y="453" width="0.0876%" height="15" fill="rgb(209,45,30)" fg:x="95518" fg:w="96"/><text x="87.3856%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (95 samples, 0.09%)</title><rect x="87.1365%" y="437" width="0.0867%" height="15" fill="rgb(218,157,36)" fg:x="95519" fg:w="95"/><text x="87.3865%" y="447.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (91 samples, 0.08%)</title><rect x="87.1401%" y="421" width="0.0830%" height="15" fill="rgb(222,186,16)" fg:x="95523" fg:w="91"/><text x="87.3901%" y="431.50"></text></g><g><title>___pthread_mutex_lock (91 samples, 0.08%)</title><rect x="87.1401%" y="405" width="0.0830%" height="15" fill="rgb(254,72,35)" fg:x="95523" fg:w="91"/><text x="87.3901%" y="415.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (2,438 samples, 2.22%)</title><rect x="85.0073%" y="501" width="2.2240%" height="15" fill="rgb(224,25,35)" fg:x="93185" fg:w="2438"/><text x="85.2573%" y="511.50">a..</text></g><g><title>core::task::wake::Waker::wake (2,482 samples, 2.26%)</title><rect x="85.0055%" y="533" width="2.2642%" height="15" fill="rgb(206,135,52)" fg:x="93183" fg:w="2482"/><text x="85.2555%" y="543.50">c..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (2,482 samples, 2.26%)</title><rect x="85.0055%" y="517" width="2.2642%" height="15" fill="rgb(229,174,47)" fg:x="93183" fg:w="2482"/><text x="85.2555%" y="527.50">w..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (42 samples, 0.04%)</title><rect x="87.2313%" y="501" width="0.0383%" height="15" fill="rgb(242,184,21)" fg:x="95623" fg:w="42"/><text x="87.4813%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="87.2313%" y="485" width="0.0383%" height="15" fill="rgb(213,22,45)" fg:x="95623" fg:w="42"/><text x="87.4813%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (42 samples, 0.04%)</title><rect x="87.2313%" y="469" width="0.0383%" height="15" fill="rgb(237,81,54)" fg:x="95623" fg:w="42"/><text x="87.4813%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (42 samples, 0.04%)</title><rect x="87.2313%" y="453" width="0.0383%" height="15" fill="rgb(248,177,18)" fg:x="95623" fg:w="42"/><text x="87.4813%" y="463.50"></text></g><g><title>async_executor::State::notify (2,583 samples, 2.36%)</title><rect x="84.9434%" y="549" width="2.3563%" height="15" fill="rgb(254,31,16)" fg:x="93115" fg:w="2583"/><text x="85.1934%" y="559.50">a..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (33 samples, 0.03%)</title><rect x="87.2697%" y="533" width="0.0301%" height="15" fill="rgb(235,20,31)" fg:x="95665" fg:w="33"/><text x="87.5197%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (32 samples, 0.03%)</title><rect x="87.2706%" y="517" width="0.0292%" height="15" fill="rgb(240,56,43)" fg:x="95666" fg:w="32"/><text x="87.5206%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (31 samples, 0.03%)</title><rect x="87.2715%" y="501" width="0.0283%" height="15" fill="rgb(237,197,51)" fg:x="95667" fg:w="31"/><text x="87.5215%" y="511.50"></text></g><g><title>___pthread_mutex_lock (31 samples, 0.03%)</title><rect x="87.2715%" y="485" width="0.0283%" height="15" fill="rgb(241,162,44)" fg:x="95667" fg:w="31"/><text x="87.5215%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (12 samples, 0.01%)</title><rect x="87.2888%" y="469" width="0.0109%" height="15" fill="rgb(224,23,20)" fg:x="95686" fg:w="12"/><text x="87.5388%" y="479.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (82 samples, 0.07%)</title><rect x="87.3107%" y="517" width="0.0748%" height="15" fill="rgb(250,109,34)" fg:x="95710" fg:w="82"/><text x="87.5607%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (81 samples, 0.07%)</title><rect x="87.3116%" y="501" width="0.0739%" height="15" fill="rgb(214,175,50)" fg:x="95711" fg:w="81"/><text x="87.5616%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (81 samples, 0.07%)</title><rect x="87.3116%" y="485" width="0.0739%" height="15" fill="rgb(213,182,5)" fg:x="95711" fg:w="81"/><text x="87.5616%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (81 samples, 0.07%)</title><rect x="87.3116%" y="469" width="0.0739%" height="15" fill="rgb(209,199,19)" fg:x="95711" fg:w="81"/><text x="87.5616%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (81 samples, 0.07%)</title><rect x="87.3116%" y="453" width="0.0739%" height="15" fill="rgb(236,224,42)" fg:x="95711" fg:w="81"/><text x="87.5616%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (81 samples, 0.07%)</title><rect x="87.3116%" y="437" width="0.0739%" height="15" fill="rgb(246,226,29)" fg:x="95711" fg:w="81"/><text x="87.5616%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (21 samples, 0.02%)</title><rect x="87.3855%" y="517" width="0.0192%" height="15" fill="rgb(227,223,11)" fg:x="95792" fg:w="21"/><text x="87.6355%" y="527.50"></text></g><g><title>async_executor::Sleepers::insert (127 samples, 0.12%)</title><rect x="87.3098%" y="533" width="0.1159%" height="15" fill="rgb(219,7,51)" fg:x="95709" fg:w="127"/><text x="87.5598%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 0.02%)</title><rect x="87.4047%" y="517" width="0.0210%" height="15" fill="rgb(245,167,10)" fg:x="95813" fg:w="23"/><text x="87.6547%" y="527.50"></text></g><g><title>core::ptr::write (22 samples, 0.02%)</title><rect x="87.4056%" y="501" width="0.0201%" height="15" fill="rgb(237,224,16)" fg:x="95814" fg:w="22"/><text x="87.6556%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="87.4558%" y="517" width="0.0465%" height="15" fill="rgb(226,132,13)" fg:x="95869" fg:w="51"/><text x="87.7058%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (49 samples, 0.04%)</title><rect x="87.4576%" y="501" width="0.0447%" height="15" fill="rgb(214,140,3)" fg:x="95871" fg:w="49"/><text x="87.7076%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (49 samples, 0.04%)</title><rect x="87.4576%" y="485" width="0.0447%" height="15" fill="rgb(221,177,4)" fg:x="95871" fg:w="49"/><text x="87.7076%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (49 samples, 0.04%)</title><rect x="87.4576%" y="469" width="0.0447%" height="15" fill="rgb(238,139,3)" fg:x="95871" fg:w="49"/><text x="87.7076%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (49 samples, 0.04%)</title><rect x="87.4576%" y="453" width="0.0447%" height="15" fill="rgb(216,17,39)" fg:x="95871" fg:w="49"/><text x="87.7076%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (49 samples, 0.04%)</title><rect x="87.4576%" y="437" width="0.0447%" height="15" fill="rgb(238,120,9)" fg:x="95871" fg:w="49"/><text x="87.7076%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 0.02%)</title><rect x="87.5023%" y="517" width="0.0192%" height="15" fill="rgb(244,92,53)" fg:x="95920" fg:w="21"/><text x="87.7523%" y="527.50"></text></g><g><title>core::ptr::write (21 samples, 0.02%)</title><rect x="87.5023%" y="501" width="0.0192%" height="15" fill="rgb(224,148,33)" fg:x="95920" fg:w="21"/><text x="87.7523%" y="511.50"></text></g><g><title>async_executor::Sleepers::update (107 samples, 0.10%)</title><rect x="87.4284%" y="533" width="0.0976%" height="15" fill="rgb(243,6,36)" fg:x="95839" fg:w="107"/><text x="87.6784%" y="543.50"></text></g><g><title>_raw_spin_lock (12 samples, 0.01%)</title><rect x="87.7240%" y="357" width="0.0109%" height="15" fill="rgb(230,102,11)" fg:x="96163" fg:w="12"/><text x="87.9740%" y="367.50"></text></g><g><title>__x64_sys_futex (59 samples, 0.05%)</title><rect x="87.6920%" y="405" width="0.0538%" height="15" fill="rgb(234,148,36)" fg:x="96128" fg:w="59"/><text x="87.9420%" y="415.50"></text></g><g><title>do_futex (55 samples, 0.05%)</title><rect x="87.6957%" y="389" width="0.0502%" height="15" fill="rgb(251,153,25)" fg:x="96132" fg:w="55"/><text x="87.9457%" y="399.50"></text></g><g><title>futex_wake (52 samples, 0.05%)</title><rect x="87.6984%" y="373" width="0.0474%" height="15" fill="rgb(215,129,8)" fg:x="96135" fg:w="52"/><text x="87.9484%" y="383.50"></text></g><g><title>exit_to_user_mode_prepare (13 samples, 0.01%)</title><rect x="87.8508%" y="389" width="0.0119%" height="15" fill="rgb(224,128,35)" fg:x="96302" fg:w="13"/><text x="88.1008%" y="399.50"></text></g><g><title>syscall_exit_to_user_mode (130 samples, 0.12%)</title><rect x="87.7486%" y="405" width="0.1186%" height="15" fill="rgb(237,56,52)" fg:x="96190" fg:w="130"/><text x="87.9986%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (201 samples, 0.18%)</title><rect x="87.6884%" y="437" width="0.1834%" height="15" fill="rgb(234,213,19)" fg:x="96124" fg:w="201"/><text x="87.9384%" y="447.50"></text></g><g><title>do_syscall_64 (199 samples, 0.18%)</title><rect x="87.6902%" y="421" width="0.1815%" height="15" fill="rgb(252,82,23)" fg:x="96126" fg:w="199"/><text x="87.9402%" y="431.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (377 samples, 0.34%)</title><rect x="87.5342%" y="469" width="0.3439%" height="15" fill="rgb(254,201,21)" fg:x="95955" fg:w="377"/><text x="87.7842%" y="479.50"></text></g><g><title>__GI___lll_lock_wake (219 samples, 0.20%)</title><rect x="87.6783%" y="453" width="0.1998%" height="15" fill="rgb(250,186,11)" fg:x="96113" fg:w="219"/><text x="87.9283%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (389 samples, 0.35%)</title><rect x="87.5260%" y="533" width="0.3549%" height="15" fill="rgb(211,174,5)" fg:x="95946" fg:w="389"/><text x="87.7760%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (389 samples, 0.35%)</title><rect x="87.5260%" y="517" width="0.3549%" height="15" fill="rgb(214,121,10)" fg:x="95946" fg:w="389"/><text x="87.7760%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (381 samples, 0.35%)</title><rect x="87.5333%" y="501" width="0.3476%" height="15" fill="rgb(241,66,2)" fg:x="95954" fg:w="381"/><text x="87.7833%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (380 samples, 0.35%)</title><rect x="87.5342%" y="485" width="0.3467%" height="15" fill="rgb(220,167,19)" fg:x="95955" fg:w="380"/><text x="87.7842%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (125 samples, 0.11%)</title><rect x="87.8809%" y="533" width="0.1140%" height="15" fill="rgb(231,54,50)" fg:x="96335" fg:w="125"/><text x="88.1309%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (125 samples, 0.11%)</title><rect x="87.8809%" y="517" width="0.1140%" height="15" fill="rgb(239,217,53)" fg:x="96335" fg:w="125"/><text x="88.1309%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (69 samples, 0.06%)</title><rect x="87.9949%" y="533" width="0.0629%" height="15" fill="rgb(248,8,0)" fg:x="96460" fg:w="69"/><text x="88.2449%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (69 samples, 0.06%)</title><rect x="87.9949%" y="517" width="0.0629%" height="15" fill="rgb(229,118,37)" fg:x="96460" fg:w="69"/><text x="88.2449%" y="527.50"></text></g><g><title>futex_q_lock (11 samples, 0.01%)</title><rect x="88.5514%" y="357" width="0.0100%" height="15" fill="rgb(253,223,43)" fg:x="97070" fg:w="11"/><text x="88.8014%" y="367.50"></text></g><g><title>__x64_sys_futex (53 samples, 0.05%)</title><rect x="88.5222%" y="421" width="0.0483%" height="15" fill="rgb(211,77,36)" fg:x="97038" fg:w="53"/><text x="88.7722%" y="431.50"></text></g><g><title>do_futex (51 samples, 0.05%)</title><rect x="88.5240%" y="405" width="0.0465%" height="15" fill="rgb(219,3,53)" fg:x="97040" fg:w="51"/><text x="88.7740%" y="415.50"></text></g><g><title>futex_wait (49 samples, 0.04%)</title><rect x="88.5258%" y="389" width="0.0447%" height="15" fill="rgb(244,45,42)" fg:x="97042" fg:w="49"/><text x="88.7758%" y="399.50"></text></g><g><title>futex_wait_setup (37 samples, 0.03%)</title><rect x="88.5368%" y="373" width="0.0338%" height="15" fill="rgb(225,95,27)" fg:x="97054" fg:w="37"/><text x="88.7868%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (27 samples, 0.02%)</title><rect x="88.5705%" y="421" width="0.0246%" height="15" fill="rgb(207,74,8)" fg:x="97091" fg:w="27"/><text x="88.8205%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (87 samples, 0.08%)</title><rect x="88.5213%" y="453" width="0.0794%" height="15" fill="rgb(243,63,36)" fg:x="97037" fg:w="87"/><text x="88.7713%" y="463.50"></text></g><g><title>do_syscall_64 (87 samples, 0.08%)</title><rect x="88.5213%" y="437" width="0.0794%" height="15" fill="rgb(211,180,12)" fg:x="97037" fg:w="87"/><text x="88.7713%" y="447.50"></text></g><g><title>async_executor::Ticker::sleep (1,427 samples, 1.30%)</title><rect x="87.2998%" y="549" width="1.3018%" height="15" fill="rgb(254,166,49)" fg:x="95698" fg:w="1427"/><text x="87.5498%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (596 samples, 0.54%)</title><rect x="88.0578%" y="533" width="0.5437%" height="15" fill="rgb(205,19,0)" fg:x="96529" fg:w="596"/><text x="88.3078%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (587 samples, 0.54%)</title><rect x="88.0660%" y="517" width="0.5355%" height="15" fill="rgb(224,172,32)" fg:x="96538" fg:w="587"/><text x="88.3160%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (542 samples, 0.49%)</title><rect x="88.1071%" y="501" width="0.4944%" height="15" fill="rgb(254,136,30)" fg:x="96583" fg:w="542"/><text x="88.3571%" y="511.50"></text></g><g><title>___pthread_mutex_lock (542 samples, 0.49%)</title><rect x="88.1071%" y="485" width="0.4944%" height="15" fill="rgb(246,19,35)" fg:x="96583" fg:w="542"/><text x="88.3571%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (103 samples, 0.09%)</title><rect x="88.5076%" y="469" width="0.0940%" height="15" fill="rgb(219,24,36)" fg:x="97022" fg:w="103"/><text x="88.7576%" y="479.50"></text></g><g><title>async_executor::Sleepers::remove (40 samples, 0.04%)</title><rect x="88.6034%" y="533" width="0.0365%" height="15" fill="rgb(251,55,1)" fg:x="97127" fg:w="40"/><text x="88.8534%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (23 samples, 0.02%)</title><rect x="88.6189%" y="517" width="0.0210%" height="15" fill="rgb(218,117,39)" fg:x="97144" fg:w="23"/><text x="88.8689%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (23 samples, 0.02%)</title><rect x="88.6189%" y="501" width="0.0210%" height="15" fill="rgb(248,169,11)" fg:x="97144" fg:w="23"/><text x="88.8689%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="88.6189%" y="485" width="0.0210%" height="15" fill="rgb(244,40,44)" fg:x="97144" fg:w="23"/><text x="88.8689%" y="495.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (23 samples, 0.02%)</title><rect x="88.6189%" y="469" width="0.0210%" height="15" fill="rgb(234,62,37)" fg:x="97144" fg:w="23"/><text x="88.8689%" y="479.50"></text></g><g><title>core::mem::drop (23 samples, 0.02%)</title><rect x="88.6189%" y="453" width="0.0210%" height="15" fill="rgb(207,117,42)" fg:x="97144" fg:w="23"/><text x="88.8689%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="88.6189%" y="437" width="0.0210%" height="15" fill="rgb(213,43,2)" fg:x="97144" fg:w="23"/><text x="88.8689%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="88.6189%" y="421" width="0.0210%" height="15" fill="rgb(244,202,51)" fg:x="97144" fg:w="23"/><text x="88.8689%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.02%)</title><rect x="88.6189%" y="405" width="0.0210%" height="15" fill="rgb(253,174,46)" fg:x="97144" fg:w="23"/><text x="88.8689%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (23 samples, 0.02%)</title><rect x="88.6189%" y="389" width="0.0210%" height="15" fill="rgb(251,23,1)" fg:x="97144" fg:w="23"/><text x="88.8689%" y="399.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.02%)</title><rect x="88.6809%" y="405" width="0.0155%" height="15" fill="rgb(253,26,1)" fg:x="97212" fg:w="17"/><text x="88.9309%" y="415.50"></text></g><g><title>do_futex (17 samples, 0.02%)</title><rect x="88.6809%" y="389" width="0.0155%" height="15" fill="rgb(216,89,31)" fg:x="97212" fg:w="17"/><text x="88.9309%" y="399.50"></text></g><g><title>futex_wake (17 samples, 0.02%)</title><rect x="88.6809%" y="373" width="0.0155%" height="15" fill="rgb(209,109,5)" fg:x="97212" fg:w="17"/><text x="88.9309%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (43 samples, 0.04%)</title><rect x="88.6964%" y="405" width="0.0392%" height="15" fill="rgb(229,63,13)" fg:x="97229" fg:w="43"/><text x="88.9464%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (65 samples, 0.06%)</title><rect x="88.6791%" y="437" width="0.0593%" height="15" fill="rgb(238,137,54)" fg:x="97210" fg:w="65"/><text x="88.9291%" y="447.50"></text></g><g><title>do_syscall_64 (64 samples, 0.06%)</title><rect x="88.6800%" y="421" width="0.0584%" height="15" fill="rgb(228,1,9)" fg:x="97211" fg:w="64"/><text x="88.9300%" y="431.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (107 samples, 0.10%)</title><rect x="88.6417%" y="469" width="0.0976%" height="15" fill="rgb(249,120,48)" fg:x="97169" fg:w="107"/><text x="88.8917%" y="479.50"></text></g><g><title>__GI___lll_lock_wake (70 samples, 0.06%)</title><rect x="88.6754%" y="453" width="0.0639%" height="15" fill="rgb(209,72,36)" fg:x="97206" fg:w="70"/><text x="88.9254%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (111 samples, 0.10%)</title><rect x="88.6398%" y="533" width="0.1013%" height="15" fill="rgb(247,98,49)" fg:x="97167" fg:w="111"/><text x="88.8898%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.10%)</title><rect x="88.6398%" y="517" width="0.1013%" height="15" fill="rgb(233,75,36)" fg:x="97167" fg:w="111"/><text x="88.8898%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (109 samples, 0.10%)</title><rect x="88.6417%" y="501" width="0.0994%" height="15" fill="rgb(225,14,24)" fg:x="97169" fg:w="109"/><text x="88.8917%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (109 samples, 0.10%)</title><rect x="88.6417%" y="485" width="0.0994%" height="15" fill="rgb(237,193,20)" fg:x="97169" fg:w="109"/><text x="88.8917%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (39 samples, 0.04%)</title><rect x="88.7411%" y="533" width="0.0356%" height="15" fill="rgb(239,122,19)" fg:x="97278" fg:w="39"/><text x="88.9911%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (39 samples, 0.04%)</title><rect x="88.7411%" y="517" width="0.0356%" height="15" fill="rgb(231,220,10)" fg:x="97278" fg:w="39"/><text x="88.9911%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (57 samples, 0.05%)</title><rect x="88.7767%" y="533" width="0.0520%" height="15" fill="rgb(220,66,15)" fg:x="97317" fg:w="57"/><text x="89.0267%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (57 samples, 0.05%)</title><rect x="88.7767%" y="517" width="0.0520%" height="15" fill="rgb(215,171,52)" fg:x="97317" fg:w="57"/><text x="89.0267%" y="527.50"></text></g><g><title>__x64_sys_futex (28 samples, 0.03%)</title><rect x="88.8880%" y="421" width="0.0255%" height="15" fill="rgb(241,169,50)" fg:x="97439" fg:w="28"/><text x="89.1380%" y="431.50"></text></g><g><title>do_futex (28 samples, 0.03%)</title><rect x="88.8880%" y="405" width="0.0255%" height="15" fill="rgb(236,189,0)" fg:x="97439" fg:w="28"/><text x="89.1380%" y="415.50"></text></g><g><title>futex_wait (27 samples, 0.02%)</title><rect x="88.8889%" y="389" width="0.0246%" height="15" fill="rgb(217,147,20)" fg:x="97440" fg:w="27"/><text x="89.1389%" y="399.50"></text></g><g><title>futex_wait_setup (22 samples, 0.02%)</title><rect x="88.8935%" y="373" width="0.0201%" height="15" fill="rgb(206,188,39)" fg:x="97445" fg:w="22"/><text x="89.1435%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (13 samples, 0.01%)</title><rect x="88.9135%" y="421" width="0.0119%" height="15" fill="rgb(227,118,25)" fg:x="97467" fg:w="13"/><text x="89.1635%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (43 samples, 0.04%)</title><rect x="88.8871%" y="453" width="0.0392%" height="15" fill="rgb(248,171,40)" fg:x="97438" fg:w="43"/><text x="89.1371%" y="463.50"></text></g><g><title>do_syscall_64 (43 samples, 0.04%)</title><rect x="88.8871%" y="437" width="0.0392%" height="15" fill="rgb(251,90,54)" fg:x="97438" fg:w="43"/><text x="89.1371%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,616 samples, 6.95%)</title><rect x="81.9796%" y="613" width="6.9476%" height="15" fill="rgb(234,11,46)" fg:x="89866" fg:w="7616"/><text x="82.2296%" y="623.50">&lt;core::fu..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (7,612 samples, 6.94%)</title><rect x="81.9832%" y="597" width="6.9440%" height="15" fill="rgb(229,134,13)" fg:x="89870" fg:w="7612"/><text x="82.2332%" y="607.50">async_exe..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (7,601 samples, 6.93%)</title><rect x="81.9932%" y="581" width="6.9340%" height="15" fill="rgb(223,129,3)" fg:x="89881" fg:w="7601"/><text x="82.2432%" y="591.50">&lt;futures_..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (7,593 samples, 6.93%)</title><rect x="82.0005%" y="565" width="6.9267%" height="15" fill="rgb(221,124,13)" fg:x="89889" fg:w="7593"/><text x="82.2505%" y="575.50">async_exe..</text></g><g><title>async_executor::Ticker::wake (357 samples, 0.33%)</title><rect x="88.6015%" y="549" width="0.3257%" height="15" fill="rgb(234,3,18)" fg:x="97125" fg:w="357"/><text x="88.8515%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (108 samples, 0.10%)</title><rect x="88.8287%" y="533" width="0.0985%" height="15" fill="rgb(249,199,20)" fg:x="97374" fg:w="108"/><text x="89.0787%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (107 samples, 0.10%)</title><rect x="88.8296%" y="517" width="0.0976%" height="15" fill="rgb(224,134,6)" fg:x="97375" fg:w="107"/><text x="89.0796%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (107 samples, 0.10%)</title><rect x="88.8296%" y="501" width="0.0976%" height="15" fill="rgb(254,83,26)" fg:x="97375" fg:w="107"/><text x="89.0796%" y="511.50"></text></g><g><title>___pthread_mutex_lock (107 samples, 0.10%)</title><rect x="88.8296%" y="485" width="0.0976%" height="15" fill="rgb(217,88,9)" fg:x="97375" fg:w="107"/><text x="89.0796%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (58 samples, 0.05%)</title><rect x="88.8743%" y="469" width="0.0529%" height="15" fill="rgb(225,73,2)" fg:x="97424" fg:w="58"/><text x="89.1243%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,675 samples, 7.00%)</title><rect x="81.9641%" y="645" width="7.0015%" height="15" fill="rgb(226,44,39)" fg:x="89849" fg:w="7675"/><text x="82.2141%" y="655.50">&lt;core::fu..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (7,673 samples, 7.00%)</title><rect x="81.9659%" y="629" width="6.9996%" height="15" fill="rgb(228,53,17)" fg:x="89851" fg:w="7673"/><text x="82.2159%" y="639.50">async_exe..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (42 samples, 0.04%)</title><rect x="88.9272%" y="613" width="0.0383%" height="15" fill="rgb(212,27,27)" fg:x="97482" fg:w="42"/><text x="89.1772%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (42 samples, 0.04%)</title><rect x="88.9272%" y="597" width="0.0383%" height="15" fill="rgb(241,50,6)" fg:x="97482" fg:w="42"/><text x="89.1772%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (46 samples, 0.04%)</title><rect x="89.0558%" y="517" width="0.0420%" height="15" fill="rgb(225,28,51)" fg:x="97623" fg:w="46"/><text x="89.3058%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (45 samples, 0.04%)</title><rect x="89.0567%" y="501" width="0.0411%" height="15" fill="rgb(215,33,16)" fg:x="97624" fg:w="45"/><text x="89.3067%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (23 samples, 0.02%)</title><rect x="89.0978%" y="501" width="0.0210%" height="15" fill="rgb(243,40,39)" fg:x="97669" fg:w="23"/><text x="89.3478%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (129 samples, 0.12%)</title><rect x="89.0193%" y="597" width="0.1177%" height="15" fill="rgb(225,11,42)" fg:x="97583" fg:w="129"/><text x="89.2693%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (127 samples, 0.12%)</title><rect x="89.0212%" y="581" width="0.1159%" height="15" fill="rgb(241,220,38)" fg:x="97585" fg:w="127"/><text x="89.2712%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (93 samples, 0.08%)</title><rect x="89.0522%" y="565" width="0.0848%" height="15" fill="rgb(244,52,35)" fg:x="97619" fg:w="93"/><text x="89.3022%" y="575.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (93 samples, 0.08%)</title><rect x="89.0522%" y="549" width="0.0848%" height="15" fill="rgb(246,42,46)" fg:x="97619" fg:w="93"/><text x="89.3022%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (92 samples, 0.08%)</title><rect x="89.0531%" y="533" width="0.0839%" height="15" fill="rgb(205,184,13)" fg:x="97620" fg:w="92"/><text x="89.3031%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (43 samples, 0.04%)</title><rect x="89.0978%" y="517" width="0.0392%" height="15" fill="rgb(209,48,36)" fg:x="97669" fg:w="43"/><text x="89.3478%" y="527.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (14 samples, 0.01%)</title><rect x="89.1242%" y="501" width="0.0128%" height="15" fill="rgb(244,34,51)" fg:x="97698" fg:w="14"/><text x="89.3742%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (130 samples, 0.12%)</title><rect x="89.0193%" y="613" width="0.1186%" height="15" fill="rgb(221,107,33)" fg:x="97583" fg:w="130"/><text x="89.2693%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (44 samples, 0.04%)</title><rect x="89.1379%" y="613" width="0.0401%" height="15" fill="rgb(224,203,12)" fg:x="97713" fg:w="44"/><text x="89.3879%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (31 samples, 0.03%)</title><rect x="89.1498%" y="597" width="0.0283%" height="15" fill="rgb(230,215,18)" fg:x="97726" fg:w="31"/><text x="89.3998%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (31 samples, 0.03%)</title><rect x="89.1498%" y="581" width="0.0283%" height="15" fill="rgb(206,185,35)" fg:x="97726" fg:w="31"/><text x="89.3998%" y="591.50"></text></g><g><title>ttwu_do_activate (12 samples, 0.01%)</title><rect x="89.2009%" y="277" width="0.0109%" height="15" fill="rgb(228,140,34)" fg:x="97782" fg:w="12"/><text x="89.4509%" y="287.50"></text></g><g><title>enqueue_task (12 samples, 0.01%)</title><rect x="89.2009%" y="261" width="0.0109%" height="15" fill="rgb(208,93,13)" fg:x="97782" fg:w="12"/><text x="89.4509%" y="271.50"></text></g><g><title>__wake_up_common (24 samples, 0.02%)</title><rect x="89.1927%" y="325" width="0.0219%" height="15" fill="rgb(221,193,39)" fg:x="97773" fg:w="24"/><text x="89.4427%" y="335.50"></text></g><g><title>autoremove_wake_function (22 samples, 0.02%)</title><rect x="89.1945%" y="309" width="0.0201%" height="15" fill="rgb(241,132,34)" fg:x="97775" fg:w="22"/><text x="89.4445%" y="319.50"></text></g><g><title>try_to_wake_up (21 samples, 0.02%)</title><rect x="89.1954%" y="293" width="0.0192%" height="15" fill="rgb(221,141,10)" fg:x="97776" fg:w="21"/><text x="89.4454%" y="303.50"></text></g><g><title>__wake_up_common (27 samples, 0.02%)</title><rect x="89.1908%" y="373" width="0.0246%" height="15" fill="rgb(226,90,31)" fg:x="97771" fg:w="27"/><text x="89.4408%" y="383.50"></text></g><g><title>ep_poll_callback (27 samples, 0.02%)</title><rect x="89.1908%" y="357" width="0.0246%" height="15" fill="rgb(243,75,5)" fg:x="97771" fg:w="27"/><text x="89.4408%" y="367.50"></text></g><g><title>__wake_up_common_lock (25 samples, 0.02%)</title><rect x="89.1927%" y="341" width="0.0228%" height="15" fill="rgb(227,156,21)" fg:x="97773" fg:w="25"/><text x="89.4427%" y="351.50"></text></g><g><title>ksys_write (35 samples, 0.03%)</title><rect x="89.1881%" y="421" width="0.0319%" height="15" fill="rgb(250,195,8)" fg:x="97768" fg:w="35"/><text x="89.4381%" y="431.50"></text></g><g><title>vfs_write (32 samples, 0.03%)</title><rect x="89.1908%" y="405" width="0.0292%" height="15" fill="rgb(220,134,5)" fg:x="97771" fg:w="32"/><text x="89.4408%" y="415.50"></text></g><g><title>eventfd_write (32 samples, 0.03%)</title><rect x="89.1908%" y="389" width="0.0292%" height="15" fill="rgb(246,106,34)" fg:x="97771" fg:w="32"/><text x="89.4408%" y="399.50"></text></g><g><title>async_io::reactor::Reactor::notify (44 samples, 0.04%)</title><rect x="89.1863%" y="517" width="0.0401%" height="15" fill="rgb(205,1,4)" fg:x="97766" fg:w="44"/><text x="89.4363%" y="527.50"></text></g><g><title>polling::Poller::notify (44 samples, 0.04%)</title><rect x="89.1863%" y="501" width="0.0401%" height="15" fill="rgb(224,151,29)" fg:x="97766" fg:w="44"/><text x="89.4363%" y="511.50"></text></g><g><title>polling::epoll::Poller::notify (44 samples, 0.04%)</title><rect x="89.1863%" y="485" width="0.0401%" height="15" fill="rgb(251,196,0)" fg:x="97766" fg:w="44"/><text x="89.4363%" y="495.50"></text></g><g><title>__GI___write (44 samples, 0.04%)</title><rect x="89.1863%" y="469" width="0.0401%" height="15" fill="rgb(212,127,0)" fg:x="97766" fg:w="44"/><text x="89.4363%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (43 samples, 0.04%)</title><rect x="89.1872%" y="453" width="0.0392%" height="15" fill="rgb(236,71,53)" fg:x="97767" fg:w="43"/><text x="89.4372%" y="463.50"></text></g><g><title>do_syscall_64 (42 samples, 0.04%)</title><rect x="89.1881%" y="437" width="0.0383%" height="15" fill="rgb(227,99,0)" fg:x="97768" fg:w="42"/><text x="89.4381%" y="447.50"></text></g><g><title>select_task_rq_fair (11 samples, 0.01%)</title><rect x="89.2684%" y="309" width="0.0100%" height="15" fill="rgb(239,89,21)" fg:x="97856" fg:w="11"/><text x="89.5184%" y="319.50"></text></g><g><title>enqueue_task_fair (18 samples, 0.02%)</title><rect x="89.2784%" y="277" width="0.0164%" height="15" fill="rgb(243,122,19)" fg:x="97867" fg:w="18"/><text x="89.5284%" y="287.50"></text></g><g><title>ttwu_do_activate (45 samples, 0.04%)</title><rect x="89.2784%" y="309" width="0.0411%" height="15" fill="rgb(229,192,45)" fg:x="97867" fg:w="45"/><text x="89.5284%" y="319.50"></text></g><g><title>enqueue_task (45 samples, 0.04%)</title><rect x="89.2784%" y="293" width="0.0411%" height="15" fill="rgb(235,165,35)" fg:x="97867" fg:w="45"/><text x="89.5284%" y="303.50"></text></g><g><title>psi_task_change (22 samples, 0.02%)</title><rect x="89.2994%" y="277" width="0.0201%" height="15" fill="rgb(253,202,0)" fg:x="97890" fg:w="22"/><text x="89.5494%" y="287.50"></text></g><g><title>psi_group_change (13 samples, 0.01%)</title><rect x="89.3076%" y="261" width="0.0119%" height="15" fill="rgb(235,51,20)" fg:x="97899" fg:w="13"/><text x="89.5576%" y="271.50"></text></g><g><title>__x64_sys_futex (94 samples, 0.09%)</title><rect x="89.2456%" y="389" width="0.0858%" height="15" fill="rgb(218,95,46)" fg:x="97831" fg:w="94"/><text x="89.4956%" y="399.50"></text></g><g><title>do_futex (93 samples, 0.08%)</title><rect x="89.2465%" y="373" width="0.0848%" height="15" fill="rgb(212,81,10)" fg:x="97832" fg:w="93"/><text x="89.4965%" y="383.50"></text></g><g><title>futex_wake (91 samples, 0.08%)</title><rect x="89.2483%" y="357" width="0.0830%" height="15" fill="rgb(240,59,0)" fg:x="97834" fg:w="91"/><text x="89.4983%" y="367.50"></text></g><g><title>wake_up_q (73 samples, 0.07%)</title><rect x="89.2647%" y="341" width="0.0666%" height="15" fill="rgb(212,191,42)" fg:x="97852" fg:w="73"/><text x="89.5147%" y="351.50"></text></g><g><title>try_to_wake_up (73 samples, 0.07%)</title><rect x="89.2647%" y="325" width="0.0666%" height="15" fill="rgb(233,140,3)" fg:x="97852" fg:w="73"/><text x="89.5147%" y="335.50"></text></g><g><title>syscall_exit_to_user_mode (24 samples, 0.02%)</title><rect x="89.3322%" y="389" width="0.0219%" height="15" fill="rgb(215,69,23)" fg:x="97926" fg:w="24"/><text x="89.5822%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (126 samples, 0.11%)</title><rect x="89.2428%" y="421" width="0.1149%" height="15" fill="rgb(240,202,20)" fg:x="97828" fg:w="126"/><text x="89.4928%" y="431.50"></text></g><g><title>do_syscall_64 (124 samples, 0.11%)</title><rect x="89.2447%" y="405" width="0.1131%" height="15" fill="rgb(209,146,50)" fg:x="97830" fg:w="124"/><text x="89.4947%" y="415.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (141 samples, 0.13%)</title><rect x="89.2310%" y="485" width="0.1286%" height="15" fill="rgb(253,102,54)" fg:x="97815" fg:w="141"/><text x="89.4810%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (141 samples, 0.13%)</title><rect x="89.2310%" y="469" width="0.1286%" height="15" fill="rgb(250,173,47)" fg:x="97815" fg:w="141"/><text x="89.4810%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (141 samples, 0.13%)</title><rect x="89.2310%" y="453" width="0.1286%" height="15" fill="rgb(232,142,7)" fg:x="97815" fg:w="141"/><text x="89.4810%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (141 samples, 0.13%)</title><rect x="89.2310%" y="437" width="0.1286%" height="15" fill="rgb(230,157,47)" fg:x="97815" fg:w="141"/><text x="89.4810%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (194 samples, 0.18%)</title><rect x="89.1854%" y="533" width="0.1770%" height="15" fill="rgb(214,177,35)" fg:x="97765" fg:w="194"/><text x="89.4354%" y="543.50"></text></g><g><title>parking::Unparker::unpark (148 samples, 0.14%)</title><rect x="89.2273%" y="517" width="0.1350%" height="15" fill="rgb(234,119,46)" fg:x="97811" fg:w="148"/><text x="89.4773%" y="527.50"></text></g><g><title>parking::Inner::unpark (146 samples, 0.13%)</title><rect x="89.2292%" y="501" width="0.1332%" height="15" fill="rgb(241,180,50)" fg:x="97813" fg:w="146"/><text x="89.4792%" y="511.50"></text></g><g><title>core::task::wake::Waker::wake (197 samples, 0.18%)</title><rect x="89.1854%" y="565" width="0.1797%" height="15" fill="rgb(221,54,25)" fg:x="97765" fg:w="197"/><text x="89.4354%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (197 samples, 0.18%)</title><rect x="89.1854%" y="549" width="0.1797%" height="15" fill="rgb(209,157,44)" fg:x="97765" fg:w="197"/><text x="89.4354%" y="559.50"></text></g><g><title>async_executor::State::notify (206 samples, 0.19%)</title><rect x="89.1790%" y="581" width="0.1879%" height="15" fill="rgb(246,115,41)" fg:x="97758" fg:w="206"/><text x="89.4290%" y="591.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (217 samples, 0.20%)</title><rect x="89.1790%" y="597" width="0.1980%" height="15" fill="rgb(229,86,1)" fg:x="97758" fg:w="217"/><text x="89.4290%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (11 samples, 0.01%)</title><rect x="89.3669%" y="581" width="0.0100%" height="15" fill="rgb(240,108,53)" fg:x="97964" fg:w="11"/><text x="89.6169%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (220 samples, 0.20%)</title><rect x="89.1790%" y="613" width="0.2007%" height="15" fill="rgb(227,134,2)" fg:x="97758" fg:w="220"/><text x="89.4290%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (143 samples, 0.13%)</title><rect x="89.3797%" y="613" width="0.1305%" height="15" fill="rgb(213,129,25)" fg:x="97978" fg:w="143"/><text x="89.6297%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (143 samples, 0.13%)</title><rect x="89.3797%" y="597" width="0.1305%" height="15" fill="rgb(226,35,21)" fg:x="97978" fg:w="143"/><text x="89.6297%" y="607.50"></text></g><g><title>async_task::runnable::Runnable::run (597 samples, 0.54%)</title><rect x="88.9664%" y="645" width="0.5446%" height="15" fill="rgb(208,129,26)" fg:x="97525" fg:w="597"/><text x="89.2164%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (580 samples, 0.53%)</title><rect x="88.9819%" y="629" width="0.5291%" height="15" fill="rgb(224,83,6)" fg:x="97542" fg:w="580"/><text x="89.2319%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (8,293 samples, 7.57%)</title><rect x="81.9549%" y="709" width="7.5652%" height="15" fill="rgb(227,52,39)" fg:x="89839" fg:w="8293"/><text x="82.2049%" y="719.50">async_exec..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,291 samples, 7.56%)</title><rect x="81.9568%" y="693" width="7.5634%" height="15" fill="rgb(241,30,17)" fg:x="89841" fg:w="8291"/><text x="82.2068%" y="703.50">&lt;futures_l..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,291 samples, 7.56%)</title><rect x="81.9568%" y="677" width="7.5634%" height="15" fill="rgb(246,186,42)" fg:x="89841" fg:w="8291"/><text x="82.2068%" y="687.50">&lt;core::fut..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,291 samples, 7.56%)</title><rect x="81.9568%" y="661" width="7.5634%" height="15" fill="rgb(221,169,15)" fg:x="89841" fg:w="8291"/><text x="82.2068%" y="671.50">async_exec..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="89.5694%" y="453" width="0.0100%" height="15" fill="rgb(235,108,21)" fg:x="98186" fg:w="11"/><text x="89.8194%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.01%)</title><rect x="89.5694%" y="437" width="0.0100%" height="15" fill="rgb(219,148,30)" fg:x="98186" fg:w="11"/><text x="89.8194%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.01%)</title><rect x="89.5694%" y="421" width="0.0100%" height="15" fill="rgb(220,109,5)" fg:x="98186" fg:w="11"/><text x="89.8194%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="89.5694%" y="501" width="0.0109%" height="15" fill="rgb(213,203,48)" fg:x="98186" fg:w="12"/><text x="89.8194%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (12 samples, 0.01%)</title><rect x="89.5694%" y="485" width="0.0109%" height="15" fill="rgb(244,71,33)" fg:x="98186" fg:w="12"/><text x="89.8194%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.01%)</title><rect x="89.5694%" y="469" width="0.0109%" height="15" fill="rgb(209,23,2)" fg:x="98186" fg:w="12"/><text x="89.8194%" y="479.50"></text></g><g><title>concurrent_queue::full_fence (34 samples, 0.03%)</title><rect x="89.5959%" y="469" width="0.0310%" height="15" fill="rgb(219,97,7)" fg:x="98215" fg:w="34"/><text x="89.8459%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (34 samples, 0.03%)</title><rect x="89.5959%" y="453" width="0.0310%" height="15" fill="rgb(216,161,23)" fg:x="98215" fg:w="34"/><text x="89.8459%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (34 samples, 0.03%)</title><rect x="89.5959%" y="437" width="0.0310%" height="15" fill="rgb(207,45,42)" fg:x="98215" fg:w="34"/><text x="89.8459%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (34 samples, 0.03%)</title><rect x="89.5959%" y="421" width="0.0310%" height="15" fill="rgb(241,61,4)" fg:x="98215" fg:w="34"/><text x="89.8459%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (89 samples, 0.08%)</title><rect x="89.5849%" y="485" width="0.0812%" height="15" fill="rgb(236,170,1)" fg:x="98203" fg:w="89"/><text x="89.8349%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (43 samples, 0.04%)</title><rect x="89.6269%" y="469" width="0.0392%" height="15" fill="rgb(239,72,5)" fg:x="98249" fg:w="43"/><text x="89.8769%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (43 samples, 0.04%)</title><rect x="89.6269%" y="453" width="0.0392%" height="15" fill="rgb(214,13,50)" fg:x="98249" fg:w="43"/><text x="89.8769%" y="463.50"></text></g><g><title>concurrent_queue::full_fence (33 samples, 0.03%)</title><rect x="89.6698%" y="469" width="0.0301%" height="15" fill="rgb(224,88,9)" fg:x="98296" fg:w="33"/><text x="89.9198%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (32 samples, 0.03%)</title><rect x="89.6707%" y="453" width="0.0292%" height="15" fill="rgb(238,192,34)" fg:x="98297" fg:w="32"/><text x="89.9207%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (32 samples, 0.03%)</title><rect x="89.6707%" y="437" width="0.0292%" height="15" fill="rgb(217,203,50)" fg:x="98297" fg:w="32"/><text x="89.9207%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.03%)</title><rect x="89.6707%" y="421" width="0.0292%" height="15" fill="rgb(241,123,32)" fg:x="98297" fg:w="32"/><text x="89.9207%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (138 samples, 0.13%)</title><rect x="89.5804%" y="501" width="0.1259%" height="15" fill="rgb(248,151,39)" fg:x="98198" fg:w="138"/><text x="89.8304%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (44 samples, 0.04%)</title><rect x="89.6661%" y="485" width="0.0401%" height="15" fill="rgb(208,89,6)" fg:x="98292" fg:w="44"/><text x="89.9161%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.02%)</title><rect x="89.7126%" y="437" width="0.0246%" height="15" fill="rgb(254,43,26)" fg:x="98343" fg:w="27"/><text x="89.9626%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.02%)</title><rect x="89.7126%" y="421" width="0.0246%" height="15" fill="rgb(216,158,13)" fg:x="98343" fg:w="27"/><text x="89.9626%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (69 samples, 0.06%)</title><rect x="89.7063%" y="501" width="0.0629%" height="15" fill="rgb(212,47,37)" fg:x="98336" fg:w="69"/><text x="89.9563%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.06%)</title><rect x="89.7063%" y="485" width="0.0629%" height="15" fill="rgb(254,16,10)" fg:x="98336" fg:w="69"/><text x="89.9563%" y="495.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (67 samples, 0.06%)</title><rect x="89.7081%" y="469" width="0.0611%" height="15" fill="rgb(223,228,16)" fg:x="98338" fg:w="67"/><text x="89.9581%" y="479.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (66 samples, 0.06%)</title><rect x="89.7090%" y="453" width="0.0602%" height="15" fill="rgb(249,108,50)" fg:x="98339" fg:w="66"/><text x="89.9590%" y="463.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (35 samples, 0.03%)</title><rect x="89.7373%" y="437" width="0.0319%" height="15" fill="rgb(208,220,5)" fg:x="98370" fg:w="35"/><text x="89.9873%" y="447.50"></text></g><g><title>___pthread_rwlock_unlock (35 samples, 0.03%)</title><rect x="89.7373%" y="421" width="0.0319%" height="15" fill="rgb(217,89,48)" fg:x="98370" fg:w="35"/><text x="89.9873%" y="431.50"></text></g><g><title>___pthread_rwlock_rdlock (30 samples, 0.03%)</title><rect x="89.7838%" y="453" width="0.0274%" height="15" fill="rgb(212,113,41)" fg:x="98421" fg:w="30"/><text x="90.0338%" y="463.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (305 samples, 0.28%)</title><rect x="89.5639%" y="517" width="0.2782%" height="15" fill="rgb(231,127,5)" fg:x="98180" fg:w="305"/><text x="89.8139%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (71 samples, 0.06%)</title><rect x="89.7774%" y="501" width="0.0648%" height="15" fill="rgb(217,141,17)" fg:x="98414" fg:w="71"/><text x="90.0274%" y="511.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (69 samples, 0.06%)</title><rect x="89.7792%" y="485" width="0.0629%" height="15" fill="rgb(245,125,54)" fg:x="98416" fg:w="69"/><text x="90.0292%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (69 samples, 0.06%)</title><rect x="89.7792%" y="469" width="0.0629%" height="15" fill="rgb(248,125,3)" fg:x="98416" fg:w="69"/><text x="90.0292%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (34 samples, 0.03%)</title><rect x="89.8112%" y="453" width="0.0310%" height="15" fill="rgb(236,119,51)" fg:x="98451" fg:w="34"/><text x="90.0612%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (34 samples, 0.03%)</title><rect x="89.8112%" y="437" width="0.0310%" height="15" fill="rgb(239,99,8)" fg:x="98451" fg:w="34"/><text x="90.0612%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (18 samples, 0.02%)</title><rect x="89.8486%" y="501" width="0.0164%" height="15" fill="rgb(224,228,4)" fg:x="98492" fg:w="18"/><text x="90.0986%" y="511.50"></text></g><g><title>core::task::wake::Waker::will_wake (15 samples, 0.01%)</title><rect x="89.8513%" y="485" width="0.0137%" height="15" fill="rgb(220,131,45)" fg:x="98495" fg:w="15"/><text x="90.1013%" y="495.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (15 samples, 0.01%)</title><rect x="89.8513%" y="469" width="0.0137%" height="15" fill="rgb(215,62,5)" fg:x="98495" fg:w="15"/><text x="90.1013%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (32 samples, 0.03%)</title><rect x="89.8650%" y="501" width="0.0292%" height="15" fill="rgb(253,12,24)" fg:x="98510" fg:w="32"/><text x="90.1150%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="89.8650%" y="485" width="0.0292%" height="15" fill="rgb(248,120,50)" fg:x="98510" fg:w="32"/><text x="90.1150%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (31 samples, 0.03%)</title><rect x="89.8659%" y="469" width="0.0283%" height="15" fill="rgb(245,194,10)" fg:x="98511" fg:w="31"/><text x="90.1159%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (31 samples, 0.03%)</title><rect x="89.8659%" y="453" width="0.0283%" height="15" fill="rgb(241,149,38)" fg:x="98511" fg:w="31"/><text x="90.1159%" y="463.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (31 samples, 0.03%)</title><rect x="89.8659%" y="437" width="0.0283%" height="15" fill="rgb(219,215,7)" fg:x="98511" fg:w="31"/><text x="90.1159%" y="447.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (436 samples, 0.40%)</title><rect x="89.5512%" y="629" width="0.3977%" height="15" fill="rgb(208,120,31)" fg:x="98166" fg:w="436"/><text x="89.8012%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (435 samples, 0.40%)</title><rect x="89.5521%" y="613" width="0.3968%" height="15" fill="rgb(244,30,8)" fg:x="98167" fg:w="435"/><text x="89.8021%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (435 samples, 0.40%)</title><rect x="89.5521%" y="597" width="0.3968%" height="15" fill="rgb(238,35,44)" fg:x="98167" fg:w="435"/><text x="89.8021%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (433 samples, 0.40%)</title><rect x="89.5539%" y="581" width="0.3950%" height="15" fill="rgb(243,218,37)" fg:x="98169" fg:w="433"/><text x="89.8039%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (433 samples, 0.40%)</title><rect x="89.5539%" y="565" width="0.3950%" height="15" fill="rgb(218,169,10)" fg:x="98169" fg:w="433"/><text x="89.8039%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (431 samples, 0.39%)</title><rect x="89.5557%" y="549" width="0.3932%" height="15" fill="rgb(221,144,10)" fg:x="98171" fg:w="431"/><text x="89.8057%" y="559.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (425 samples, 0.39%)</title><rect x="89.5612%" y="533" width="0.3877%" height="15" fill="rgb(226,41,38)" fg:x="98177" fg:w="425"/><text x="89.8112%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (117 samples, 0.11%)</title><rect x="89.8422%" y="517" width="0.1067%" height="15" fill="rgb(228,3,1)" fg:x="98485" fg:w="117"/><text x="90.0922%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (60 samples, 0.05%)</title><rect x="89.8942%" y="501" width="0.0547%" height="15" fill="rgb(209,129,12)" fg:x="98542" fg:w="60"/><text x="90.1442%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (58 samples, 0.05%)</title><rect x="89.8960%" y="485" width="0.0529%" height="15" fill="rgb(213,136,33)" fg:x="98544" fg:w="58"/><text x="90.1460%" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (58 samples, 0.05%)</title><rect x="89.8960%" y="469" width="0.0529%" height="15" fill="rgb(209,181,29)" fg:x="98544" fg:w="58"/><text x="90.1460%" y="479.50"></text></g><g><title>___pthread_mutex_lock (58 samples, 0.05%)</title><rect x="89.8960%" y="453" width="0.0529%" height="15" fill="rgb(234,173,18)" fg:x="98544" fg:w="58"/><text x="90.1460%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18 samples, 0.02%)</title><rect x="89.9973%" y="565" width="0.0164%" height="15" fill="rgb(227,73,47)" fg:x="98655" fg:w="18"/><text x="90.2473%" y="575.50"></text></g><g><title>core::mem::replace (18 samples, 0.02%)</title><rect x="89.9973%" y="549" width="0.0164%" height="15" fill="rgb(234,9,34)" fg:x="98655" fg:w="18"/><text x="90.2473%" y="559.50"></text></g><g><title>core::ptr::read (18 samples, 0.02%)</title><rect x="89.9973%" y="533" width="0.0164%" height="15" fill="rgb(235,172,15)" fg:x="98655" fg:w="18"/><text x="90.2473%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (30 samples, 0.03%)</title><rect x="89.9918%" y="581" width="0.0274%" height="15" fill="rgb(245,61,2)" fg:x="98649" fg:w="30"/><text x="90.2418%" y="591.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (39 samples, 0.04%)</title><rect x="90.0219%" y="501" width="0.0356%" height="15" fill="rgb(238,39,47)" fg:x="98682" fg:w="39"/><text x="90.2719%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (43 samples, 0.04%)</title><rect x="90.0192%" y="581" width="0.0392%" height="15" fill="rgb(234,37,24)" fg:x="98679" fg:w="43"/><text x="90.2692%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (42 samples, 0.04%)</title><rect x="90.0201%" y="565" width="0.0383%" height="15" fill="rgb(248,223,24)" fg:x="98680" fg:w="42"/><text x="90.2701%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="90.0201%" y="549" width="0.0383%" height="15" fill="rgb(223,12,15)" fg:x="98680" fg:w="42"/><text x="90.2701%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (41 samples, 0.04%)</title><rect x="90.0210%" y="533" width="0.0374%" height="15" fill="rgb(249,6,3)" fg:x="98681" fg:w="41"/><text x="90.2710%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (40 samples, 0.04%)</title><rect x="90.0219%" y="517" width="0.0365%" height="15" fill="rgb(237,105,33)" fg:x="98682" fg:w="40"/><text x="90.2719%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (178 samples, 0.16%)</title><rect x="89.9754%" y="597" width="0.1624%" height="15" fill="rgb(252,208,35)" fg:x="98631" fg:w="178"/><text x="90.2254%" y="607.50"></text></g><g><title>event_listener::Inner::lock (85 samples, 0.08%)</title><rect x="90.0602%" y="581" width="0.0775%" height="15" fill="rgb(215,181,35)" fg:x="98724" fg:w="85"/><text x="90.3102%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (84 samples, 0.08%)</title><rect x="90.0611%" y="565" width="0.0766%" height="15" fill="rgb(246,212,3)" fg:x="98725" fg:w="84"/><text x="90.3111%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (84 samples, 0.08%)</title><rect x="90.0611%" y="549" width="0.0766%" height="15" fill="rgb(247,156,24)" fg:x="98725" fg:w="84"/><text x="90.3111%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (78 samples, 0.07%)</title><rect x="90.0666%" y="533" width="0.0712%" height="15" fill="rgb(248,9,31)" fg:x="98731" fg:w="78"/><text x="90.3166%" y="543.50"></text></g><g><title>___pthread_mutex_lock (78 samples, 0.07%)</title><rect x="90.0666%" y="517" width="0.0712%" height="15" fill="rgb(234,26,45)" fg:x="98731" fg:w="78"/><text x="90.3166%" y="527.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (69 samples, 0.06%)</title><rect x="90.1377%" y="597" width="0.0629%" height="15" fill="rgb(249,11,32)" fg:x="98809" fg:w="69"/><text x="90.3877%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (68 samples, 0.06%)</title><rect x="90.1387%" y="581" width="0.0620%" height="15" fill="rgb(249,162,33)" fg:x="98810" fg:w="68"/><text x="90.3887%" y="591.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (40 samples, 0.04%)</title><rect x="90.1642%" y="565" width="0.0365%" height="15" fill="rgb(232,4,32)" fg:x="98838" fg:w="40"/><text x="90.4142%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (38 samples, 0.03%)</title><rect x="90.1660%" y="549" width="0.0347%" height="15" fill="rgb(212,5,45)" fg:x="98840" fg:w="38"/><text x="90.4160%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (38 samples, 0.03%)</title><rect x="90.1660%" y="533" width="0.0347%" height="15" fill="rgb(227,95,13)" fg:x="98840" fg:w="38"/><text x="90.4160%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (38 samples, 0.03%)</title><rect x="90.1660%" y="517" width="0.0347%" height="15" fill="rgb(223,205,10)" fg:x="98840" fg:w="38"/><text x="90.4160%" y="527.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (719 samples, 0.66%)</title><rect x="89.5494%" y="661" width="0.6559%" height="15" fill="rgb(222,178,8)" fg:x="98164" fg:w="719"/><text x="89.7994%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (718 samples, 0.65%)</title><rect x="89.5503%" y="645" width="0.6550%" height="15" fill="rgb(216,13,22)" fg:x="98165" fg:w="718"/><text x="89.8003%" y="655.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (281 samples, 0.26%)</title><rect x="89.9489%" y="629" width="0.2563%" height="15" fill="rgb(240,167,12)" fg:x="98602" fg:w="281"/><text x="90.1989%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (274 samples, 0.25%)</title><rect x="89.9553%" y="613" width="0.2500%" height="15" fill="rgb(235,68,35)" fg:x="98609" fg:w="274"/><text x="90.2053%" y="623.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (9,065 samples, 8.27%)</title><rect x="81.9422%" y="741" width="8.2695%" height="15" fill="rgb(253,40,27)" fg:x="89825" fg:w="9065"/><text x="82.1922%" y="751.50">&lt;futures_lit..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,055 samples, 8.26%)</title><rect x="81.9513%" y="725" width="8.2604%" height="15" fill="rgb(214,19,28)" fg:x="89835" fg:w="9055"/><text x="82.2013%" y="735.50">&lt;core::futur..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (758 samples, 0.69%)</title><rect x="89.5202%" y="709" width="0.6915%" height="15" fill="rgb(210,167,45)" fg:x="98132" fg:w="758"/><text x="89.7702%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (730 samples, 0.67%)</title><rect x="89.5457%" y="693" width="0.6659%" height="15" fill="rgb(232,97,40)" fg:x="98160" fg:w="730"/><text x="89.7957%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (729 samples, 0.67%)</title><rect x="89.5466%" y="677" width="0.6650%" height="15" fill="rgb(250,35,23)" fg:x="98161" fg:w="729"/><text x="89.7966%" y="687.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (16 samples, 0.01%)</title><rect x="90.2144%" y="661" width="0.0146%" height="15" fill="rgb(248,47,53)" fg:x="98893" fg:w="16"/><text x="90.4644%" y="671.50"></text></g><g><title>once_cell::imp::initialize_inner (16 samples, 0.01%)</title><rect x="90.2144%" y="645" width="0.0146%" height="15" fill="rgb(226,58,50)" fg:x="98893" fg:w="16"/><text x="90.4644%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::get (25 samples, 0.02%)</title><rect x="90.2144%" y="741" width="0.0228%" height="15" fill="rgb(217,105,26)" fg:x="98893" fg:w="25"/><text x="90.4644%" y="751.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (25 samples, 0.02%)</title><rect x="90.2144%" y="725" width="0.0228%" height="15" fill="rgb(208,64,1)" fg:x="98893" fg:w="25"/><text x="90.4644%" y="735.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (25 samples, 0.02%)</title><rect x="90.2144%" y="709" width="0.0228%" height="15" fill="rgb(214,80,1)" fg:x="98893" fg:w="25"/><text x="90.4644%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (25 samples, 0.02%)</title><rect x="90.2144%" y="693" width="0.0228%" height="15" fill="rgb(206,175,26)" fg:x="98893" fg:w="25"/><text x="90.4644%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (25 samples, 0.02%)</title><rect x="90.2144%" y="677" width="0.0228%" height="15" fill="rgb(235,156,37)" fg:x="98893" fg:w="25"/><text x="90.4644%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (172 samples, 0.16%)</title><rect x="90.2372%" y="741" width="0.1569%" height="15" fill="rgb(213,100,9)" fg:x="98918" fg:w="172"/><text x="90.4872%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (172 samples, 0.16%)</title><rect x="90.2372%" y="725" width="0.1569%" height="15" fill="rgb(241,15,13)" fg:x="98918" fg:w="172"/><text x="90.4872%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (169 samples, 0.15%)</title><rect x="90.2399%" y="709" width="0.1542%" height="15" fill="rgb(205,97,43)" fg:x="98921" fg:w="169"/><text x="90.4899%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (165 samples, 0.15%)</title><rect x="90.2436%" y="693" width="0.1505%" height="15" fill="rgb(216,106,32)" fg:x="98925" fg:w="165"/><text x="90.4936%" y="703.50"></text></g><g><title>__GI___pthread_mutex_trylock (165 samples, 0.15%)</title><rect x="90.2436%" y="677" width="0.1505%" height="15" fill="rgb(226,200,8)" fg:x="98925" fg:w="165"/><text x="90.4936%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (12 samples, 0.01%)</title><rect x="90.4205%" y="549" width="0.0109%" height="15" fill="rgb(244,54,29)" fg:x="99119" fg:w="12"/><text x="90.6705%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (12 samples, 0.01%)</title><rect x="90.4205%" y="533" width="0.0109%" height="15" fill="rgb(252,169,12)" fg:x="99119" fg:w="12"/><text x="90.6705%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (12 samples, 0.01%)</title><rect x="90.4205%" y="517" width="0.0109%" height="15" fill="rgb(231,199,11)" fg:x="99119" fg:w="12"/><text x="90.6705%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (12 samples, 0.01%)</title><rect x="90.4205%" y="501" width="0.0109%" height="15" fill="rgb(233,191,18)" fg:x="99119" fg:w="12"/><text x="90.6705%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (12 samples, 0.01%)</title><rect x="90.4205%" y="485" width="0.0109%" height="15" fill="rgb(215,83,47)" fg:x="99119" fg:w="12"/><text x="90.6705%" y="495.50"></text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="90.4178%" y="565" width="0.0155%" height="15" fill="rgb(251,67,19)" fg:x="99116" fg:w="17"/><text x="90.6678%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="90.4151%" y="709" width="0.0192%" height="15" fill="rgb(240,7,20)" fg:x="99113" fg:w="21"/><text x="90.6651%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (21 samples, 0.02%)</title><rect x="90.4151%" y="693" width="0.0192%" height="15" fill="rgb(210,150,26)" fg:x="99113" fg:w="21"/><text x="90.6651%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (20 samples, 0.02%)</title><rect x="90.4160%" y="677" width="0.0182%" height="15" fill="rgb(228,75,42)" fg:x="99114" fg:w="20"/><text x="90.6660%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (20 samples, 0.02%)</title><rect x="90.4160%" y="661" width="0.0182%" height="15" fill="rgb(237,134,48)" fg:x="99114" fg:w="20"/><text x="90.6660%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (20 samples, 0.02%)</title><rect x="90.4160%" y="645" width="0.0182%" height="15" fill="rgb(205,80,50)" fg:x="99114" fg:w="20"/><text x="90.6660%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="90.4169%" y="629" width="0.0173%" height="15" fill="rgb(217,74,48)" fg:x="99115" fg:w="19"/><text x="90.6669%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="90.4169%" y="613" width="0.0173%" height="15" fill="rgb(205,82,50)" fg:x="99115" fg:w="19"/><text x="90.6669%" y="623.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="90.4169%" y="597" width="0.0173%" height="15" fill="rgb(228,1,33)" fg:x="99115" fg:w="19"/><text x="90.6669%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="90.4178%" y="581" width="0.0164%" height="15" fill="rgb(214,50,23)" fg:x="99116" fg:w="18"/><text x="90.6678%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="90.4342%" y="693" width="0.0100%" height="15" fill="rgb(210,62,9)" fg:x="99134" fg:w="11"/><text x="90.6842%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="90.4342%" y="709" width="0.0109%" height="15" fill="rgb(210,104,37)" fg:x="99134" fg:w="12"/><text x="90.6842%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (12 samples, 0.01%)</title><rect x="90.4725%" y="645" width="0.0109%" height="15" fill="rgb(232,104,43)" fg:x="99176" fg:w="12"/><text x="90.7225%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (20 samples, 0.02%)</title><rect x="90.4698%" y="677" width="0.0182%" height="15" fill="rgb(244,52,6)" fg:x="99173" fg:w="20"/><text x="90.7198%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (20 samples, 0.02%)</title><rect x="90.4698%" y="661" width="0.0182%" height="15" fill="rgb(211,174,52)" fg:x="99173" fg:w="20"/><text x="90.7198%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="90.4944%" y="357" width="0.0119%" height="15" fill="rgb(229,48,4)" fg:x="99200" fg:w="13"/><text x="90.7444%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="90.4944%" y="341" width="0.0119%" height="15" fill="rgb(205,155,16)" fg:x="99200" fg:w="13"/><text x="90.7444%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="90.4944%" y="325" width="0.0119%" height="15" fill="rgb(211,141,53)" fg:x="99200" fg:w="13"/><text x="90.7444%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (20 samples, 0.02%)</title><rect x="90.4917%" y="389" width="0.0182%" height="15" fill="rgb(240,148,11)" fg:x="99197" fg:w="20"/><text x="90.7417%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (17 samples, 0.02%)</title><rect x="90.4944%" y="373" width="0.0155%" height="15" fill="rgb(214,45,23)" fg:x="99200" fg:w="17"/><text x="90.7444%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="90.5191%" y="373" width="0.0128%" height="15" fill="rgb(248,74,26)" fg:x="99227" fg:w="14"/><text x="90.7691%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (125 samples, 0.11%)</title><rect x="90.4917%" y="421" width="0.1140%" height="15" fill="rgb(218,121,16)" fg:x="99197" fg:w="125"/><text x="90.7417%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (125 samples, 0.11%)</title><rect x="90.4917%" y="405" width="0.1140%" height="15" fill="rgb(218,10,47)" fg:x="99197" fg:w="125"/><text x="90.7417%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (105 samples, 0.10%)</title><rect x="90.5099%" y="389" width="0.0958%" height="15" fill="rgb(227,99,14)" fg:x="99217" fg:w="105"/><text x="90.7599%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (81 samples, 0.07%)</title><rect x="90.5318%" y="373" width="0.0739%" height="15" fill="rgb(229,83,46)" fg:x="99241" fg:w="81"/><text x="90.7818%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (81 samples, 0.07%)</title><rect x="90.5318%" y="357" width="0.0739%" height="15" fill="rgb(228,25,1)" fg:x="99241" fg:w="81"/><text x="90.7818%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (81 samples, 0.07%)</title><rect x="90.5318%" y="341" width="0.0739%" height="15" fill="rgb(252,190,15)" fg:x="99241" fg:w="81"/><text x="90.7818%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="90.6057%" y="421" width="0.0109%" height="15" fill="rgb(213,103,51)" fg:x="99322" fg:w="12"/><text x="90.8557%" y="431.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (227 samples, 0.21%)</title><rect x="90.4543%" y="693" width="0.2071%" height="15" fill="rgb(220,38,44)" fg:x="99156" fg:w="227"/><text x="90.7043%" y="703.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (190 samples, 0.17%)</title><rect x="90.4880%" y="677" width="0.1733%" height="15" fill="rgb(210,45,26)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (190 samples, 0.17%)</title><rect x="90.4880%" y="661" width="0.1733%" height="15" fill="rgb(205,95,48)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (190 samples, 0.17%)</title><rect x="90.4880%" y="645" width="0.1733%" height="15" fill="rgb(225,179,37)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="655.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (190 samples, 0.17%)</title><rect x="90.4880%" y="629" width="0.1733%" height="15" fill="rgb(230,209,3)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (190 samples, 0.17%)</title><rect x="90.4880%" y="613" width="0.1733%" height="15" fill="rgb(248,12,46)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (190 samples, 0.17%)</title><rect x="90.4880%" y="597" width="0.1733%" height="15" fill="rgb(234,18,0)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (190 samples, 0.17%)</title><rect x="90.4880%" y="581" width="0.1733%" height="15" fill="rgb(238,197,14)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (190 samples, 0.17%)</title><rect x="90.4880%" y="565" width="0.1733%" height="15" fill="rgb(251,162,48)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (190 samples, 0.17%)</title><rect x="90.4880%" y="549" width="0.1733%" height="15" fill="rgb(237,73,42)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="559.50"></text></g><g><title>alloc::alloc::alloc (190 samples, 0.17%)</title><rect x="90.4880%" y="533" width="0.1733%" height="15" fill="rgb(211,108,8)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="543.50"></text></g><g><title>__rg_alloc (190 samples, 0.17%)</title><rect x="90.4880%" y="517" width="0.1733%" height="15" fill="rgb(213,45,22)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (190 samples, 0.17%)</title><rect x="90.4880%" y="501" width="0.1733%" height="15" fill="rgb(252,154,5)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="511.50"></text></g><g><title>rust_alloc (190 samples, 0.17%)</title><rect x="90.4880%" y="485" width="0.1733%" height="15" fill="rgb(221,79,52)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (190 samples, 0.17%)</title><rect x="90.4880%" y="469" width="0.1733%" height="15" fill="rgb(229,220,36)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (190 samples, 0.17%)</title><rect x="90.4880%" y="453" width="0.1733%" height="15" fill="rgb(211,17,16)" fg:x="99193" fg:w="190"/><text x="90.7380%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (188 samples, 0.17%)</title><rect x="90.4899%" y="437" width="0.1715%" height="15" fill="rgb(222,55,31)" fg:x="99195" fg:w="188"/><text x="90.7399%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (47 samples, 0.04%)</title><rect x="90.6185%" y="421" width="0.0429%" height="15" fill="rgb(221,221,31)" fg:x="99336" fg:w="47"/><text x="90.8685%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (47 samples, 0.04%)</title><rect x="90.6185%" y="405" width="0.0429%" height="15" fill="rgb(227,168,26)" fg:x="99336" fg:w="47"/><text x="90.8685%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (236 samples, 0.22%)</title><rect x="90.4470%" y="709" width="0.2153%" height="15" fill="rgb(224,139,9)" fg:x="99148" fg:w="236"/><text x="90.6970%" y="719.50"></text></g><g><title>concurrent_queue::full_fence (16 samples, 0.01%)</title><rect x="90.6714%" y="661" width="0.0146%" height="15" fill="rgb(254,172,0)" fg:x="99394" fg:w="16"/><text x="90.9214%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (14 samples, 0.01%)</title><rect x="90.6732%" y="645" width="0.0128%" height="15" fill="rgb(235,203,1)" fg:x="99396" fg:w="14"/><text x="90.9232%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (14 samples, 0.01%)</title><rect x="90.6732%" y="629" width="0.0128%" height="15" fill="rgb(216,205,24)" fg:x="99396" fg:w="14"/><text x="90.9232%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="90.6732%" y="613" width="0.0128%" height="15" fill="rgb(233,24,6)" fg:x="99396" fg:w="14"/><text x="90.9232%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (29 samples, 0.03%)</title><rect x="90.6678%" y="693" width="0.0265%" height="15" fill="rgb(244,110,9)" fg:x="99390" fg:w="29"/><text x="90.9178%" y="703.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (29 samples, 0.03%)</title><rect x="90.6678%" y="677" width="0.0265%" height="15" fill="rgb(239,222,42)" fg:x="99390" fg:w="29"/><text x="90.9178%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (36 samples, 0.03%)</title><rect x="90.6623%" y="709" width="0.0328%" height="15" fill="rgb(218,145,13)" fg:x="99384" fg:w="36"/><text x="90.9123%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (39 samples, 0.04%)</title><rect x="90.6970%" y="629" width="0.0356%" height="15" fill="rgb(207,69,11)" fg:x="99422" fg:w="39"/><text x="90.9470%" y="639.50"></text></g><g><title>core::mem::drop (42 samples, 0.04%)</title><rect x="90.6951%" y="709" width="0.0383%" height="15" fill="rgb(220,223,22)" fg:x="99420" fg:w="42"/><text x="90.9451%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (42 samples, 0.04%)</title><rect x="90.6951%" y="693" width="0.0383%" height="15" fill="rgb(245,102,5)" fg:x="99420" fg:w="42"/><text x="90.9451%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="90.6951%" y="677" width="0.0383%" height="15" fill="rgb(211,148,2)" fg:x="99420" fg:w="42"/><text x="90.9451%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.04%)</title><rect x="90.6970%" y="661" width="0.0365%" height="15" fill="rgb(241,13,44)" fg:x="99422" fg:w="40"/><text x="90.9470%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (40 samples, 0.04%)</title><rect x="90.6970%" y="645" width="0.0365%" height="15" fill="rgb(219,137,21)" fg:x="99422" fg:w="40"/><text x="90.9470%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.01%)</title><rect x="90.7353%" y="709" width="0.0128%" height="15" fill="rgb(242,206,5)" fg:x="99464" fg:w="14"/><text x="90.9853%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (13 samples, 0.01%)</title><rect x="90.7362%" y="693" width="0.0119%" height="15" fill="rgb(217,114,22)" fg:x="99465" fg:w="13"/><text x="90.9862%" y="703.50"></text></g><g><title>std::time::Instant::saturating_duration_since (12 samples, 0.01%)</title><rect x="90.7371%" y="677" width="0.0109%" height="15" fill="rgb(253,206,42)" fg:x="99466" fg:w="12"/><text x="90.9871%" y="687.50"></text></g><g><title>std::time::Instant::checked_duration_since (12 samples, 0.01%)</title><rect x="90.7371%" y="661" width="0.0109%" height="15" fill="rgb(236,102,18)" fg:x="99466" fg:w="12"/><text x="90.9871%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (12 samples, 0.01%)</title><rect x="90.7371%" y="645" width="0.0109%" height="15" fill="rgb(208,59,49)" fg:x="99466" fg:w="12"/><text x="90.9871%" y="655.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="90.7490%" y="709" width="0.0155%" height="15" fill="rgb(215,194,28)" fg:x="99479" fg:w="17"/><text x="90.9990%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="90.7517%" y="693" width="0.0128%" height="15" fill="rgb(243,207,11)" fg:x="99482" fg:w="14"/><text x="91.0017%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="90.7517%" y="677" width="0.0128%" height="15" fill="rgb(254,179,35)" fg:x="99482" fg:w="14"/><text x="91.0017%" y="687.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="90.7517%" y="661" width="0.0128%" height="15" fill="rgb(235,97,3)" fg:x="99482" fg:w="14"/><text x="91.0017%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (416 samples, 0.38%)</title><rect x="90.4087%" y="725" width="0.3795%" height="15" fill="rgb(215,155,33)" fg:x="99106" fg:w="416"/><text x="90.6587%" y="735.50"></text></g><g><title>std::time::Instant::now (26 samples, 0.02%)</title><rect x="90.7645%" y="709" width="0.0237%" height="15" fill="rgb(223,128,12)" fg:x="99496" fg:w="26"/><text x="91.0145%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (26 samples, 0.02%)</title><rect x="90.7645%" y="693" width="0.0237%" height="15" fill="rgb(208,157,18)" fg:x="99496" fg:w="26"/><text x="91.0145%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (26 samples, 0.02%)</title><rect x="90.7645%" y="677" width="0.0237%" height="15" fill="rgb(249,70,54)" fg:x="99496" fg:w="26"/><text x="91.0145%" y="687.50"></text></g><g><title>__clock_gettime_2 (23 samples, 0.02%)</title><rect x="90.7672%" y="661" width="0.0210%" height="15" fill="rgb(244,118,24)" fg:x="99499" fg:w="23"/><text x="91.0172%" y="671.50"></text></g><g><title>__vdso_clock_gettime (22 samples, 0.02%)</title><rect x="90.7681%" y="645" width="0.0201%" height="15" fill="rgb(211,54,0)" fg:x="99500" fg:w="22"/><text x="91.0181%" y="655.50"></text></g><g><title>[[vdso]] (15 samples, 0.01%)</title><rect x="90.7745%" y="629" width="0.0137%" height="15" fill="rgb(245,137,45)" fg:x="99507" fg:w="15"/><text x="91.0245%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="90.7882%" y="725" width="0.0100%" height="15" fill="rgb(232,154,31)" fg:x="99522" fg:w="11"/><text x="91.0382%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (27 samples, 0.02%)</title><rect x="90.8092%" y="645" width="0.0246%" height="15" fill="rgb(253,6,39)" fg:x="99545" fg:w="27"/><text x="91.0592%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (30 samples, 0.03%)</title><rect x="90.8082%" y="709" width="0.0274%" height="15" fill="rgb(234,183,24)" fg:x="99544" fg:w="30"/><text x="91.0582%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="90.8082%" y="693" width="0.0274%" height="15" fill="rgb(252,84,40)" fg:x="99544" fg:w="30"/><text x="91.0582%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.03%)</title><rect x="90.8082%" y="677" width="0.0274%" height="15" fill="rgb(224,65,2)" fg:x="99544" fg:w="30"/><text x="91.0582%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (29 samples, 0.03%)</title><rect x="90.8092%" y="661" width="0.0265%" height="15" fill="rgb(229,38,24)" fg:x="99545" fg:w="29"/><text x="91.0592%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (34 samples, 0.03%)</title><rect x="90.8356%" y="709" width="0.0310%" height="15" fill="rgb(218,131,50)" fg:x="99574" fg:w="34"/><text x="91.0856%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (34 samples, 0.03%)</title><rect x="90.8356%" y="693" width="0.0310%" height="15" fill="rgb(233,106,18)" fg:x="99574" fg:w="34"/><text x="91.0856%" y="703.50"></text></g><g><title>__entry_text_start (16 samples, 0.01%)</title><rect x="90.8976%" y="677" width="0.0146%" height="15" fill="rgb(220,216,11)" fg:x="99642" fg:w="16"/><text x="91.1476%" y="687.50"></text></g><g><title>__x64_sys_read (17 samples, 0.02%)</title><rect x="90.9287%" y="645" width="0.0155%" height="15" fill="rgb(251,100,45)" fg:x="99676" fg:w="17"/><text x="91.1787%" y="655.50"></text></g><g><title>__fdget_pos (49 samples, 0.04%)</title><rect x="90.9524%" y="629" width="0.0447%" height="15" fill="rgb(235,143,32)" fg:x="99702" fg:w="49"/><text x="91.2024%" y="639.50"></text></g><g><title>__fget_light (49 samples, 0.04%)</title><rect x="90.9524%" y="613" width="0.0447%" height="15" fill="rgb(248,124,34)" fg:x="99702" fg:w="49"/><text x="91.2024%" y="623.50"></text></g><g><title>__wake_up_common (44 samples, 0.04%)</title><rect x="91.0646%" y="581" width="0.0401%" height="15" fill="rgb(225,221,4)" fg:x="99825" fg:w="44"/><text x="91.3146%" y="591.50"></text></g><g><title>ep_poll_callback (39 samples, 0.04%)</title><rect x="91.0691%" y="565" width="0.0356%" height="15" fill="rgb(242,27,43)" fg:x="99830" fg:w="39"/><text x="91.3191%" y="575.50"></text></g><g><title>_raw_read_unlock_irqrestore (11 samples, 0.01%)</title><rect x="91.0947%" y="549" width="0.0100%" height="15" fill="rgb(227,54,8)" fg:x="99858" fg:w="11"/><text x="91.3447%" y="559.50"></text></g><g><title>_copy_to_iter (37 samples, 0.03%)</title><rect x="91.1056%" y="581" width="0.0338%" height="15" fill="rgb(253,139,49)" fg:x="99870" fg:w="37"/><text x="91.3556%" y="591.50"></text></g><g><title>copy_user_generic_unrolled (11 samples, 0.01%)</title><rect x="91.1294%" y="565" width="0.0100%" height="15" fill="rgb(231,26,43)" fg:x="99896" fg:w="11"/><text x="91.3794%" y="575.50"></text></g><g><title>eventfd_read (140 samples, 0.13%)</title><rect x="91.0381%" y="597" width="0.1277%" height="15" fill="rgb(207,121,39)" fg:x="99796" fg:w="140"/><text x="91.2881%" y="607.50"></text></g><g><title>_raw_spin_lock_irq (29 samples, 0.03%)</title><rect x="91.1394%" y="581" width="0.0265%" height="15" fill="rgb(223,101,35)" fg:x="99907" fg:w="29"/><text x="91.3894%" y="591.50"></text></g><g><title>new_sync_read (157 samples, 0.14%)</title><rect x="91.0235%" y="613" width="0.1432%" height="15" fill="rgb(232,87,23)" fg:x="99780" fg:w="157"/><text x="91.2735%" y="623.50"></text></g><g><title>ksys_read (247 samples, 0.23%)</title><rect x="90.9442%" y="645" width="0.2253%" height="15" fill="rgb(225,180,29)" fg:x="99693" fg:w="247"/><text x="91.1942%" y="655.50"></text></g><g><title>vfs_read (181 samples, 0.17%)</title><rect x="91.0044%" y="629" width="0.1651%" height="15" fill="rgb(225,25,17)" fg:x="99759" fg:w="181"/><text x="91.2544%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (157 samples, 0.14%)</title><rect x="91.1704%" y="645" width="0.1432%" height="15" fill="rgb(223,8,52)" fg:x="99941" fg:w="157"/><text x="91.4204%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (449 samples, 0.41%)</title><rect x="90.9159%" y="677" width="0.4096%" height="15" fill="rgb(246,42,21)" fg:x="99662" fg:w="449"/><text x="91.1659%" y="687.50"></text></g><g><title>do_syscall_64 (441 samples, 0.40%)</title><rect x="90.9232%" y="661" width="0.4023%" height="15" fill="rgb(205,64,43)" fg:x="99670" fg:w="441"/><text x="91.1732%" y="671.50"></text></g><g><title>syscall_trace_enter.constprop.0 (13 samples, 0.01%)</title><rect x="91.3136%" y="645" width="0.0119%" height="15" fill="rgb(221,160,13)" fg:x="100098" fg:w="13"/><text x="91.5636%" y="655.50"></text></g><g><title>__libc_read (493 samples, 0.45%)</title><rect x="90.8803%" y="693" width="0.4497%" height="15" fill="rgb(239,58,35)" fg:x="99623" fg:w="493"/><text x="91.1303%" y="703.50"></text></g><g><title>__entry_text_start (15 samples, 0.01%)</title><rect x="91.3611%" y="677" width="0.0137%" height="15" fill="rgb(251,26,40)" fg:x="100150" fg:w="15"/><text x="91.6111%" y="687.50"></text></g><g><title>__fget_light (18 samples, 0.02%)</title><rect x="91.4678%" y="613" width="0.0164%" height="15" fill="rgb(247,0,4)" fg:x="100267" fg:w="18"/><text x="91.7178%" y="623.50"></text></g><g><title>__put_user_nocheck_4 (16 samples, 0.01%)</title><rect x="91.4860%" y="613" width="0.0146%" height="15" fill="rgb(218,130,10)" fg:x="100287" fg:w="16"/><text x="91.7360%" y="623.50"></text></g><g><title>_raw_write_lock_irq (16 samples, 0.01%)</title><rect x="91.5088%" y="613" width="0.0146%" height="15" fill="rgb(239,32,7)" fg:x="100312" fg:w="16"/><text x="91.7588%" y="623.50"></text></g><g><title>ep_done_scan (24 samples, 0.02%)</title><rect x="91.5271%" y="613" width="0.0219%" height="15" fill="rgb(210,192,24)" fg:x="100332" fg:w="24"/><text x="91.7771%" y="623.50"></text></g><g><title>_raw_write_lock_irq (18 samples, 0.02%)</title><rect x="91.5326%" y="597" width="0.0164%" height="15" fill="rgb(226,212,17)" fg:x="100338" fg:w="18"/><text x="91.7826%" y="607.50"></text></g><g><title>ep_item_poll.isra.0 (85 samples, 0.08%)</title><rect x="91.5490%" y="613" width="0.0775%" height="15" fill="rgb(219,201,28)" fg:x="100356" fg:w="85"/><text x="91.7990%" y="623.50"></text></g><g><title>eventfd_poll (51 samples, 0.05%)</title><rect x="91.5800%" y="597" width="0.0465%" height="15" fill="rgb(235,207,41)" fg:x="100390" fg:w="51"/><text x="91.8300%" y="607.50"></text></g><g><title>fput_many (11 samples, 0.01%)</title><rect x="91.6265%" y="613" width="0.0100%" height="15" fill="rgb(241,95,54)" fg:x="100441" fg:w="11"/><text x="91.8765%" y="623.50"></text></g><g><title>mutex_lock (24 samples, 0.02%)</title><rect x="91.6366%" y="613" width="0.0219%" height="15" fill="rgb(248,12,23)" fg:x="100452" fg:w="24"/><text x="91.8866%" y="623.50"></text></g><g><title>__perf_event_task_sched_out (28 samples, 0.03%)</title><rect x="91.7132%" y="565" width="0.0255%" height="15" fill="rgb(228,173,4)" fg:x="100536" fg:w="28"/><text x="91.9632%" y="575.50"></text></g><g><title>reweight_entity (11 samples, 0.01%)</title><rect x="91.7807%" y="533" width="0.0100%" height="15" fill="rgb(254,99,5)" fg:x="100610" fg:w="11"/><text x="92.0307%" y="543.50"></text></g><g><title>update_cfs_group (13 samples, 0.01%)</title><rect x="91.7907%" y="533" width="0.0119%" height="15" fill="rgb(212,184,17)" fg:x="100621" fg:w="13"/><text x="92.0407%" y="543.50"></text></g><g><title>__calc_delta (13 samples, 0.01%)</title><rect x="91.8181%" y="517" width="0.0119%" height="15" fill="rgb(252,174,1)" fg:x="100651" fg:w="13"/><text x="92.0681%" y="527.50"></text></g><g><title>cpuacct_charge (14 samples, 0.01%)</title><rect x="91.8345%" y="517" width="0.0128%" height="15" fill="rgb(241,118,51)" fg:x="100669" fg:w="14"/><text x="92.0845%" y="527.50"></text></g><g><title>update_curr (52 samples, 0.05%)</title><rect x="91.8026%" y="533" width="0.0474%" height="15" fill="rgb(227,94,47)" fg:x="100634" fg:w="52"/><text x="92.0526%" y="543.50"></text></g><g><title>__update_load_avg_cfs_rq (15 samples, 0.01%)</title><rect x="91.8564%" y="517" width="0.0137%" height="15" fill="rgb(229,104,2)" fg:x="100693" fg:w="15"/><text x="92.1064%" y="527.50"></text></g><g><title>dequeue_entity (139 samples, 0.13%)</title><rect x="91.7634%" y="549" width="0.1268%" height="15" fill="rgb(219,28,31)" fg:x="100591" fg:w="139"/><text x="92.0134%" y="559.50"></text></g><g><title>update_load_avg (44 samples, 0.04%)</title><rect x="91.8500%" y="533" width="0.0401%" height="15" fill="rgb(233,109,36)" fg:x="100686" fg:w="44"/><text x="92.1000%" y="543.50"></text></g><g><title>__update_load_avg_se (22 samples, 0.02%)</title><rect x="91.8701%" y="517" width="0.0201%" height="15" fill="rgb(246,88,11)" fg:x="100708" fg:w="22"/><text x="92.1201%" y="527.50"></text></g><g><title>dequeue_task_fair (167 samples, 0.15%)</title><rect x="91.7415%" y="565" width="0.1523%" height="15" fill="rgb(209,212,17)" fg:x="100567" fg:w="167"/><text x="91.9915%" y="575.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (52 samples, 0.05%)</title><rect x="91.9312%" y="533" width="0.0474%" height="15" fill="rgb(243,59,29)" fg:x="100775" fg:w="52"/><text x="92.1812%" y="543.50"></text></g><g><title>native_write_msr (50 samples, 0.05%)</title><rect x="91.9330%" y="517" width="0.0456%" height="15" fill="rgb(244,205,48)" fg:x="100777" fg:w="50"/><text x="92.1830%" y="527.50"></text></g><g><title>__perf_event_task_sched_in (66 samples, 0.06%)</title><rect x="91.9294%" y="549" width="0.0602%" height="15" fill="rgb(227,30,6)" fg:x="100773" fg:w="66"/><text x="92.1794%" y="559.50"></text></g><g><title>_raw_spin_unlock (12 samples, 0.01%)</title><rect x="91.9787%" y="533" width="0.0109%" height="15" fill="rgb(220,205,48)" fg:x="100827" fg:w="12"/><text x="92.2287%" y="543.50"></text></g><g><title>finish_task_switch.isra.0 (107 samples, 0.10%)</title><rect x="91.8938%" y="565" width="0.0976%" height="15" fill="rgb(250,94,14)" fg:x="100734" fg:w="107"/><text x="92.1438%" y="575.50"></text></g><g><title>pick_next_task_fair (13 samples, 0.01%)</title><rect x="91.9914%" y="565" width="0.0119%" height="15" fill="rgb(216,119,42)" fg:x="100841" fg:w="13"/><text x="92.2414%" y="575.50"></text></g><g><title>newidle_balance (13 samples, 0.01%)</title><rect x="91.9914%" y="549" width="0.0119%" height="15" fill="rgb(232,155,0)" fg:x="100841" fg:w="13"/><text x="92.2414%" y="559.50"></text></g><g><title>iterate_groups (14 samples, 0.01%)</title><rect x="92.0170%" y="549" width="0.0128%" height="15" fill="rgb(212,24,32)" fg:x="100869" fg:w="14"/><text x="92.2670%" y="559.50"></text></g><g><title>psi_group_change (66 samples, 0.06%)</title><rect x="92.0316%" y="549" width="0.0602%" height="15" fill="rgb(216,69,20)" fg:x="100885" fg:w="66"/><text x="92.2816%" y="559.50"></text></g><g><title>psi_task_switch (96 samples, 0.09%)</title><rect x="92.0078%" y="565" width="0.0876%" height="15" fill="rgb(229,73,31)" fg:x="100859" fg:w="96"/><text x="92.2578%" y="575.50"></text></g><g><title>put_prev_task_fair (15 samples, 0.01%)</title><rect x="92.0954%" y="565" width="0.0137%" height="15" fill="rgb(224,219,20)" fg:x="100955" fg:w="15"/><text x="92.3454%" y="575.50"></text></g><g><title>raw_spin_rq_lock_nested (12 samples, 0.01%)</title><rect x="92.1091%" y="565" width="0.0109%" height="15" fill="rgb(215,146,41)" fg:x="100970" fg:w="12"/><text x="92.3591%" y="575.50"></text></g><g><title>sched_clock_cpu (12 samples, 0.01%)</title><rect x="92.1301%" y="549" width="0.0109%" height="15" fill="rgb(244,71,31)" fg:x="100993" fg:w="12"/><text x="92.3801%" y="559.50"></text></g><g><title>native_sched_clock (11 samples, 0.01%)</title><rect x="92.1310%" y="533" width="0.0100%" height="15" fill="rgb(224,24,11)" fg:x="100994" fg:w="11"/><text x="92.3810%" y="543.50"></text></g><g><title>do_epoll_wait (790 samples, 0.72%)</title><rect x="91.4231%" y="629" width="0.7207%" height="15" fill="rgb(229,76,15)" fg:x="100218" fg:w="790"/><text x="91.6731%" y="639.50"></text></g><g><title>schedule_hrtimeout_range_clock (522 samples, 0.48%)</title><rect x="91.6676%" y="613" width="0.4762%" height="15" fill="rgb(209,93,2)" fg:x="100486" fg:w="522"/><text x="91.9176%" y="623.50"></text></g><g><title>schedule (505 samples, 0.46%)</title><rect x="91.6831%" y="597" width="0.4607%" height="15" fill="rgb(216,200,50)" fg:x="100503" fg:w="505"/><text x="91.9331%" y="607.50"></text></g><g><title>__schedule (501 samples, 0.46%)</title><rect x="91.6867%" y="581" width="0.4570%" height="15" fill="rgb(211,67,34)" fg:x="100507" fg:w="501"/><text x="91.9367%" y="591.50"></text></g><g><title>update_rq_clock (26 samples, 0.02%)</title><rect x="92.1201%" y="565" width="0.0237%" height="15" fill="rgb(225,87,47)" fg:x="100982" fg:w="26"/><text x="92.3701%" y="575.50"></text></g><g><title>__x64_sys_epoll_wait (813 samples, 0.74%)</title><rect x="91.4076%" y="645" width="0.7417%" height="15" fill="rgb(217,185,16)" fg:x="100201" fg:w="813"/><text x="91.6576%" y="655.50"></text></g><g><title>__get_user_8 (16 samples, 0.01%)</title><rect x="92.3280%" y="597" width="0.0146%" height="15" fill="rgb(205,0,0)" fg:x="101210" fg:w="16"/><text x="92.5780%" y="607.50"></text></g><g><title>__rseq_handle_notify_resume (44 samples, 0.04%)</title><rect x="92.3098%" y="613" width="0.0401%" height="15" fill="rgb(207,116,45)" fg:x="101190" fg:w="44"/><text x="92.5598%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (86 samples, 0.08%)</title><rect x="92.2824%" y="629" width="0.0785%" height="15" fill="rgb(221,156,26)" fg:x="101160" fg:w="86"/><text x="92.5324%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (259 samples, 0.24%)</title><rect x="92.1492%" y="645" width="0.2363%" height="15" fill="rgb(213,140,4)" fg:x="101014" fg:w="259"/><text x="92.3992%" y="655.50"></text></g><g><title>syscall_exit_work (27 samples, 0.02%)</title><rect x="92.3609%" y="629" width="0.0246%" height="15" fill="rgb(231,224,15)" fg:x="101246" fg:w="27"/><text x="92.6109%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,116 samples, 1.02%)</title><rect x="91.3766%" y="677" width="1.0181%" height="15" fill="rgb(244,76,20)" fg:x="100167" fg:w="1116"/><text x="91.6266%" y="687.50"></text></g><g><title>do_syscall_64 (1,092 samples, 1.00%)</title><rect x="91.3985%" y="661" width="0.9962%" height="15" fill="rgb(238,117,7)" fg:x="100191" fg:w="1092"/><text x="91.6485%" y="671.50"></text></g><g><title>epoll_wait (1,175 samples, 1.07%)</title><rect x="91.3300%" y="693" width="1.0719%" height="15" fill="rgb(235,1,10)" fg:x="100116" fg:w="1175"/><text x="91.5800%" y="703.50"></text></g><g><title>__entry_text_start (23 samples, 0.02%)</title><rect x="92.4293%" y="645" width="0.0210%" height="15" fill="rgb(216,165,6)" fg:x="101321" fg:w="23"/><text x="92.6793%" y="655.50"></text></g><g><title>_copy_from_user (28 samples, 0.03%)</title><rect x="92.4932%" y="597" width="0.0255%" height="15" fill="rgb(246,91,35)" fg:x="101391" fg:w="28"/><text x="92.7432%" y="607.50"></text></g><g><title>copy_user_generic_unrolled (16 samples, 0.01%)</title><rect x="92.5041%" y="581" width="0.0146%" height="15" fill="rgb(228,96,24)" fg:x="101403" fg:w="16"/><text x="92.7541%" y="591.50"></text></g><g><title>__fget_light (60 samples, 0.05%)</title><rect x="92.5716%" y="581" width="0.0547%" height="15" fill="rgb(254,217,53)" fg:x="101477" fg:w="60"/><text x="92.8216%" y="591.50"></text></g><g><title>_raw_spin_lock_irqsave (21 samples, 0.02%)</title><rect x="92.6364%" y="549" width="0.0192%" height="15" fill="rgb(209,60,0)" fg:x="101548" fg:w="21"/><text x="92.8864%" y="559.50"></text></g><g><title>ep_item_poll.isra.0 (33 samples, 0.03%)</title><rect x="92.6263%" y="581" width="0.0301%" height="15" fill="rgb(250,93,26)" fg:x="101537" fg:w="33"/><text x="92.8763%" y="591.50"></text></g><g><title>timerfd_poll (27 samples, 0.02%)</title><rect x="92.6318%" y="565" width="0.0246%" height="15" fill="rgb(211,9,40)" fg:x="101543" fg:w="27"/><text x="92.8818%" y="575.50"></text></g><g><title>fput_many (19 samples, 0.02%)</title><rect x="92.6564%" y="581" width="0.0173%" height="15" fill="rgb(242,57,20)" fg:x="101570" fg:w="19"/><text x="92.9064%" y="591.50"></text></g><g><title>mutex_lock (16 samples, 0.01%)</title><rect x="92.6738%" y="581" width="0.0146%" height="15" fill="rgb(248,85,48)" fg:x="101589" fg:w="16"/><text x="92.9238%" y="591.50"></text></g><g><title>__x64_sys_epoll_ctl (263 samples, 0.24%)</title><rect x="92.4640%" y="613" width="0.2399%" height="15" fill="rgb(212,117,2)" fg:x="101359" fg:w="263"/><text x="92.7140%" y="623.50"></text></g><g><title>do_epoll_ctl (203 samples, 0.19%)</title><rect x="92.5187%" y="597" width="0.1852%" height="15" fill="rgb(243,19,3)" fg:x="101419" fg:w="203"/><text x="92.7687%" y="607.50"></text></g><g><title>mutex_unlock (17 samples, 0.02%)</title><rect x="92.6884%" y="581" width="0.0155%" height="15" fill="rgb(232,217,24)" fg:x="101605" fg:w="17"/><text x="92.9384%" y="591.50"></text></g><g><title>exit_to_user_mode_prepare (28 samples, 0.03%)</title><rect x="92.9538%" y="597" width="0.0255%" height="15" fill="rgb(224,175,40)" fg:x="101896" fg:w="28"/><text x="93.2038%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (309 samples, 0.28%)</title><rect x="92.7084%" y="613" width="0.2819%" height="15" fill="rgb(212,162,32)" fg:x="101627" fg:w="309"/><text x="92.9584%" y="623.50"></text></g><g><title>syscall_exit_work (12 samples, 0.01%)</title><rect x="92.9794%" y="597" width="0.0109%" height="15" fill="rgb(215,9,4)" fg:x="101924" fg:w="12"/><text x="93.2294%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (609 samples, 0.56%)</title><rect x="92.4521%" y="645" width="0.5556%" height="15" fill="rgb(242,42,7)" fg:x="101346" fg:w="609"/><text x="92.7021%" y="655.50"></text></g><g><title>do_syscall_64 (604 samples, 0.55%)</title><rect x="92.4567%" y="629" width="0.5510%" height="15" fill="rgb(242,184,45)" fg:x="101351" fg:w="604"/><text x="92.7067%" y="639.50"></text></g><g><title>syscall_trace_enter.constprop.0 (19 samples, 0.02%)</title><rect x="92.9903%" y="613" width="0.0173%" height="15" fill="rgb(228,111,51)" fg:x="101936" fg:w="19"/><text x="93.2403%" y="623.50"></text></g><g><title>__GI_epoll_ctl (671 samples, 0.61%)</title><rect x="92.4074%" y="661" width="0.6121%" height="15" fill="rgb(236,147,17)" fg:x="101297" fg:w="671"/><text x="92.6574%" y="671.50"></text></g><g><title>syscall_return_via_sysret (13 samples, 0.01%)</title><rect x="93.0077%" y="645" width="0.0119%" height="15" fill="rgb(210,75,22)" fg:x="101955" fg:w="13"/><text x="93.2577%" y="655.50"></text></g><g><title>polling::epoll::Poller::modify (680 samples, 0.62%)</title><rect x="92.4019%" y="693" width="0.6203%" height="15" fill="rgb(217,159,45)" fg:x="101291" fg:w="680"/><text x="92.6519%" y="703.50"></text></g><g><title>polling::epoll::Poller::ctl (676 samples, 0.62%)</title><rect x="92.4056%" y="677" width="0.6167%" height="15" fill="rgb(245,165,53)" fg:x="101295" fg:w="676"/><text x="92.6556%" y="687.50"></text></g><g><title>__entry_text_start (18 samples, 0.02%)</title><rect x="93.0332%" y="677" width="0.0164%" height="15" fill="rgb(251,190,50)" fg:x="101983" fg:w="18"/><text x="93.2832%" y="687.50"></text></g><g><title>__fget_light (32 samples, 0.03%)</title><rect x="93.0998%" y="613" width="0.0292%" height="15" fill="rgb(208,203,29)" fg:x="102056" fg:w="32"/><text x="93.3498%" y="623.50"></text></g><g><title>fput_many (12 samples, 0.01%)</title><rect x="93.1518%" y="613" width="0.0109%" height="15" fill="rgb(207,209,35)" fg:x="102113" fg:w="12"/><text x="93.4018%" y="623.50"></text></g><g><title>enqueue_hrtimer (14 samples, 0.01%)</title><rect x="93.1919%" y="597" width="0.0128%" height="15" fill="rgb(230,144,49)" fg:x="102157" fg:w="14"/><text x="93.4419%" y="607.50"></text></g><g><title>timerqueue_add (13 samples, 0.01%)</title><rect x="93.1928%" y="581" width="0.0119%" height="15" fill="rgb(229,31,6)" fg:x="102158" fg:w="13"/><text x="93.4428%" y="591.50"></text></g><g><title>hrtimer_start_range_ns (69 samples, 0.06%)</title><rect x="93.1664%" y="613" width="0.0629%" height="15" fill="rgb(251,129,24)" fg:x="102129" fg:w="69"/><text x="93.4164%" y="623.50"></text></g><g><title>ktime_get (24 samples, 0.02%)</title><rect x="93.2074%" y="597" width="0.0219%" height="15" fill="rgb(235,105,15)" fg:x="102174" fg:w="24"/><text x="93.4574%" y="607.50"></text></g><g><title>read_tsc (17 samples, 0.02%)</title><rect x="93.2138%" y="581" width="0.0155%" height="15" fill="rgb(216,52,43)" fg:x="102181" fg:w="17"/><text x="93.4638%" y="591.50"></text></g><g><title>_raw_spin_lock_irqsave (19 samples, 0.02%)</title><rect x="93.2385%" y="597" width="0.0173%" height="15" fill="rgb(238,144,41)" fg:x="102208" fg:w="19"/><text x="93.4885%" y="607.50"></text></g><g><title>hrtimer_try_to_cancel (39 samples, 0.04%)</title><rect x="93.2293%" y="613" width="0.0356%" height="15" fill="rgb(243,63,9)" fg:x="102198" fg:w="39"/><text x="93.4793%" y="623.50"></text></g><g><title>ktime_get (32 samples, 0.03%)</title><rect x="93.2649%" y="613" width="0.0292%" height="15" fill="rgb(246,208,1)" fg:x="102237" fg:w="32"/><text x="93.5149%" y="623.50"></text></g><g><title>read_tsc (13 samples, 0.01%)</title><rect x="93.2822%" y="597" width="0.0119%" height="15" fill="rgb(233,182,18)" fg:x="102256" fg:w="13"/><text x="93.5322%" y="607.50"></text></g><g><title>do_timerfd_settime (236 samples, 0.22%)</title><rect x="93.0843%" y="629" width="0.2153%" height="15" fill="rgb(242,224,8)" fg:x="102039" fg:w="236"/><text x="93.3343%" y="639.50"></text></g><g><title>get_itimerspec64 (22 samples, 0.02%)</title><rect x="93.2996%" y="629" width="0.0201%" height="15" fill="rgb(243,54,37)" fg:x="102275" fg:w="22"/><text x="93.5496%" y="639.50"></text></g><g><title>get_timespec64 (20 samples, 0.02%)</title><rect x="93.3014%" y="613" width="0.0182%" height="15" fill="rgb(233,192,12)" fg:x="102277" fg:w="20"/><text x="93.5514%" y="623.50"></text></g><g><title>_copy_from_user (12 samples, 0.01%)</title><rect x="93.3087%" y="597" width="0.0109%" height="15" fill="rgb(251,192,53)" fg:x="102285" fg:w="12"/><text x="93.5587%" y="607.50"></text></g><g><title>copy_user_enhanced_fast_string (12 samples, 0.01%)</title><rect x="93.3279%" y="597" width="0.0109%" height="15" fill="rgb(246,141,26)" fg:x="102306" fg:w="12"/><text x="93.5779%" y="607.50"></text></g><g><title>__x64_sys_timerfd_settime (310 samples, 0.28%)</title><rect x="93.0651%" y="645" width="0.2828%" height="15" fill="rgb(239,195,19)" fg:x="102018" fg:w="310"/><text x="93.3151%" y="655.50"></text></g><g><title>get_timespec64 (31 samples, 0.03%)</title><rect x="93.3196%" y="629" width="0.0283%" height="15" fill="rgb(241,16,39)" fg:x="102297" fg:w="31"/><text x="93.5696%" y="639.50"></text></g><g><title>_copy_from_user (24 samples, 0.02%)</title><rect x="93.3260%" y="613" width="0.0219%" height="15" fill="rgb(223,13,53)" fg:x="102304" fg:w="24"/><text x="93.5760%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (146 samples, 0.13%)</title><rect x="93.3516%" y="645" width="0.1332%" height="15" fill="rgb(214,227,0)" fg:x="102332" fg:w="146"/><text x="93.6016%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (485 samples, 0.44%)</title><rect x="93.0533%" y="677" width="0.4424%" height="15" fill="rgb(228,103,26)" fg:x="102005" fg:w="485"/><text x="93.3033%" y="687.50"></text></g><g><title>do_syscall_64 (481 samples, 0.44%)</title><rect x="93.0569%" y="661" width="0.4388%" height="15" fill="rgb(254,177,53)" fg:x="102009" fg:w="481"/><text x="93.3069%" y="671.50"></text></g><g><title>syscall_trace_enter.constprop.0 (12 samples, 0.01%)</title><rect x="93.4848%" y="645" width="0.0109%" height="15" fill="rgb(208,201,34)" fg:x="102478" fg:w="12"/><text x="93.7348%" y="655.50"></text></g><g><title>polling::epoll::Poller::wait (2,889 samples, 2.64%)</title><rect x="90.8675%" y="709" width="2.6355%" height="15" fill="rgb(212,39,5)" fg:x="99609" fg:w="2889"/><text x="91.1175%" y="719.50">po..</text></g><g><title>syscall (527 samples, 0.48%)</title><rect x="93.0223%" y="693" width="0.4808%" height="15" fill="rgb(246,117,3)" fg:x="101971" fg:w="527"/><text x="93.2723%" y="703.50"></text></g><g><title>polling::Poller::wait (2,988 samples, 2.73%)</title><rect x="90.7982%" y="725" width="2.7258%" height="15" fill="rgb(244,118,39)" fg:x="99533" fg:w="2988"/><text x="91.0482%" y="735.50">po..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (23 samples, 0.02%)</title><rect x="93.5030%" y="709" width="0.0210%" height="15" fill="rgb(241,64,10)" fg:x="102498" fg:w="23"/><text x="93.7530%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (23 samples, 0.02%)</title><rect x="93.5030%" y="693" width="0.0210%" height="15" fill="rgb(229,39,44)" fg:x="102498" fg:w="23"/><text x="93.7530%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (23 samples, 0.02%)</title><rect x="93.5030%" y="677" width="0.0210%" height="15" fill="rgb(230,226,3)" fg:x="102498" fg:w="23"/><text x="93.7530%" y="687.50"></text></g><g><title>__GI___pthread_mutex_trylock (23 samples, 0.02%)</title><rect x="93.5030%" y="661" width="0.0210%" height="15" fill="rgb(222,13,42)" fg:x="102498" fg:w="23"/><text x="93.7530%" y="671.50"></text></g><g><title>async_io::reactor::ReactorLock::react (3,432 samples, 3.13%)</title><rect x="90.3941%" y="741" width="3.1308%" height="15" fill="rgb(247,180,54)" fg:x="99090" fg:w="3432"/><text x="90.6441%" y="751.50">asy..</text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="93.5249%" y="741" width="0.0201%" height="15" fill="rgb(205,96,16)" fg:x="102522" fg:w="22"/><text x="93.7749%" y="751.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="93.5249%" y="725" width="0.0201%" height="15" fill="rgb(205,100,21)" fg:x="102522" fg:w="22"/><text x="93.7749%" y="735.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (22 samples, 0.02%)</title><rect x="93.5249%" y="709" width="0.0201%" height="15" fill="rgb(248,51,4)" fg:x="102522" fg:w="22"/><text x="93.7749%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (22 samples, 0.02%)</title><rect x="93.5249%" y="693" width="0.0201%" height="15" fill="rgb(217,197,30)" fg:x="102522" fg:w="22"/><text x="93.7749%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (22 samples, 0.02%)</title><rect x="93.5249%" y="677" width="0.0201%" height="15" fill="rgb(240,179,40)" fg:x="102522" fg:w="22"/><text x="93.7749%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::reactor::ReactorLock&gt; (11 samples, 0.01%)</title><rect x="93.5450%" y="741" width="0.0100%" height="15" fill="rgb(212,185,35)" fg:x="102544" fg:w="11"/><text x="93.7950%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="93.5450%" y="725" width="0.0100%" height="15" fill="rgb(251,222,31)" fg:x="102544" fg:w="11"/><text x="93.7950%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="93.5450%" y="709" width="0.0100%" height="15" fill="rgb(208,140,36)" fg:x="102544" fg:w="11"/><text x="93.7950%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (11 samples, 0.01%)</title><rect x="93.5450%" y="693" width="0.0100%" height="15" fill="rgb(220,148,1)" fg:x="102544" fg:w="11"/><text x="93.7950%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="93.5450%" y="677" width="0.0100%" height="15" fill="rgb(254,4,28)" fg:x="102544" fg:w="11"/><text x="93.7950%" y="687.50"></text></g><g><title>__GI___pthread_cond_wait (21 samples, 0.02%)</title><rect x="93.5787%" y="709" width="0.0192%" height="15" fill="rgb(222,185,44)" fg:x="102581" fg:w="21"/><text x="93.8287%" y="719.50"></text></g><g><title>__futex_abstimed_wait_common (21 samples, 0.02%)</title><rect x="93.5787%" y="693" width="0.0192%" height="15" fill="rgb(215,74,39)" fg:x="102581" fg:w="21"/><text x="93.8287%" y="703.50"></text></g><g><title>__entry_text_start (21 samples, 0.02%)</title><rect x="93.5787%" y="677" width="0.0192%" height="15" fill="rgb(247,86,4)" fg:x="102581" fg:w="21"/><text x="93.8287%" y="687.50"></text></g><g><title>__entry_text_start (37 samples, 0.03%)</title><rect x="93.6636%" y="677" width="0.0338%" height="15" fill="rgb(231,105,32)" fg:x="102674" fg:w="37"/><text x="93.9136%" y="687.50"></text></g><g><title>futex_hash (32 samples, 0.03%)</title><rect x="93.8633%" y="597" width="0.0292%" height="15" fill="rgb(222,65,35)" fg:x="102893" fg:w="32"/><text x="94.1133%" y="607.50"></text></g><g><title>__x64_sys_futex (199 samples, 0.18%)</title><rect x="93.7283%" y="645" width="0.1815%" height="15" fill="rgb(218,145,35)" fg:x="102745" fg:w="199"/><text x="93.9783%" y="655.50"></text></g><g><title>do_futex (144 samples, 0.13%)</title><rect x="93.7785%" y="629" width="0.1314%" height="15" fill="rgb(208,7,15)" fg:x="102800" fg:w="144"/><text x="94.0285%" y="639.50"></text></g><g><title>futex_wake (117 samples, 0.11%)</title><rect x="93.8031%" y="613" width="0.1067%" height="15" fill="rgb(209,83,13)" fg:x="102827" fg:w="117"/><text x="94.0531%" y="623.50"></text></g><g><title>get_futex_key (19 samples, 0.02%)</title><rect x="93.8925%" y="597" width="0.0173%" height="15" fill="rgb(218,3,10)" fg:x="102925" fg:w="19"/><text x="94.1425%" y="607.50"></text></g><g><title>exit_to_user_mode_prepare (26 samples, 0.02%)</title><rect x="94.3295%" y="629" width="0.0237%" height="15" fill="rgb(211,219,4)" fg:x="103404" fg:w="26"/><text x="94.5795%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (490 samples, 0.45%)</title><rect x="93.9153%" y="645" width="0.4470%" height="15" fill="rgb(228,194,12)" fg:x="102950" fg:w="490"/><text x="94.1653%" y="655.50"></text></g><g><title>__audit_syscall_entry (27 samples, 0.02%)</title><rect x="94.3779%" y="629" width="0.0246%" height="15" fill="rgb(210,175,7)" fg:x="103457" fg:w="27"/><text x="94.6279%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (771 samples, 0.70%)</title><rect x="93.7010%" y="677" width="0.7033%" height="15" fill="rgb(243,132,6)" fg:x="102715" fg:w="771"/><text x="93.9510%" y="687.50"></text></g><g><title>do_syscall_64 (755 samples, 0.69%)</title><rect x="93.7156%" y="661" width="0.6887%" height="15" fill="rgb(207,72,18)" fg:x="102731" fg:w="755"/><text x="93.9656%" y="671.50"></text></g><g><title>syscall_trace_enter.constprop.0 (46 samples, 0.04%)</title><rect x="94.3623%" y="645" width="0.0420%" height="15" fill="rgb(236,1,18)" fg:x="103440" fg:w="46"/><text x="94.6123%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (896 samples, 0.82%)</title><rect x="93.5979%" y="709" width="0.8174%" height="15" fill="rgb(227,0,18)" fg:x="102602" fg:w="896"/><text x="93.8479%" y="719.50"></text></g><g><title>__GI___lll_lock_wake (867 samples, 0.79%)</title><rect x="93.6243%" y="693" width="0.7909%" height="15" fill="rgb(247,37,5)" fg:x="102631" fg:w="867"/><text x="93.8743%" y="703.50"></text></g><g><title>syscall_return_via_sysret (12 samples, 0.01%)</title><rect x="94.4043%" y="677" width="0.0109%" height="15" fill="rgb(237,179,24)" fg:x="103486" fg:w="12"/><text x="94.6543%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (93 samples, 0.08%)</title><rect x="94.4235%" y="709" width="0.0848%" height="15" fill="rgb(226,53,20)" fg:x="103507" fg:w="93"/><text x="94.6735%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (93 samples, 0.08%)</title><rect x="94.4235%" y="693" width="0.0848%" height="15" fill="rgb(247,75,7)" fg:x="103507" fg:w="93"/><text x="94.6735%" y="703.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (22 samples, 0.02%)</title><rect x="94.6214%" y="645" width="0.0201%" height="15" fill="rgb(233,96,12)" fg:x="103724" fg:w="22"/><text x="94.8714%" y="655.50"></text></g><g><title>__condvar_confirm_wakeup (30 samples, 0.03%)</title><rect x="94.6415%" y="645" width="0.0274%" height="15" fill="rgb(224,125,0)" fg:x="103746" fg:w="30"/><text x="94.8915%" y="655.50"></text></g><g><title>__condvar_dec_grefs (160 samples, 0.15%)</title><rect x="94.6689%" y="645" width="0.1460%" height="15" fill="rgb(224,92,25)" fg:x="103776" fg:w="160"/><text x="94.9189%" y="655.50"></text></g><g><title>__GI___pthread_disable_asynccancel (21 samples, 0.02%)</title><rect x="94.8768%" y="629" width="0.0192%" height="15" fill="rgb(224,42,24)" fg:x="104004" fg:w="21"/><text x="95.1268%" y="639.50"></text></g><g><title>__entry_text_start (35 samples, 0.03%)</title><rect x="94.9015%" y="629" width="0.0319%" height="15" fill="rgb(234,132,49)" fg:x="104031" fg:w="35"/><text x="95.1515%" y="639.50"></text></g><g><title>futex_unqueue (47 samples, 0.04%)</title><rect x="95.1934%" y="549" width="0.0429%" height="15" fill="rgb(248,100,35)" fg:x="104351" fg:w="47"/><text x="95.4434%" y="559.50"></text></g><g><title>__futex_queue (38 samples, 0.03%)</title><rect x="95.3047%" y="533" width="0.0347%" height="15" fill="rgb(239,94,40)" fg:x="104473" fg:w="38"/><text x="95.5547%" y="543.50"></text></g><g><title>plist_add (32 samples, 0.03%)</title><rect x="95.3102%" y="517" width="0.0292%" height="15" fill="rgb(235,139,28)" fg:x="104479" fg:w="32"/><text x="95.5602%" y="527.50"></text></g><g><title>_raw_spin_lock (21 samples, 0.02%)</title><rect x="95.5674%" y="485" width="0.0192%" height="15" fill="rgb(217,144,7)" fg:x="104761" fg:w="21"/><text x="95.8174%" y="495.50"></text></g><g><title>__perf_event_task_sched_out (126 samples, 0.11%)</title><rect x="95.5026%" y="501" width="0.1149%" height="15" fill="rgb(227,55,4)" fg:x="104690" fg:w="126"/><text x="95.7526%" y="511.50"></text></g><g><title>x86_pmu_disable (32 samples, 0.03%)</title><rect x="95.5884%" y="485" width="0.0292%" height="15" fill="rgb(252,82,54)" fg:x="104784" fg:w="32"/><text x="95.8384%" y="495.50"></text></g><g><title>dequeue_task (15 samples, 0.01%)</title><rect x="95.6176%" y="501" width="0.0137%" height="15" fill="rgb(245,172,4)" fg:x="104816" fg:w="15"/><text x="95.8676%" y="511.50"></text></g><g><title>reweight_entity (38 samples, 0.03%)</title><rect x="95.7864%" y="469" width="0.0347%" height="15" fill="rgb(207,26,27)" fg:x="105001" fg:w="38"/><text x="96.0364%" y="479.50"></text></g><g><title>update_cfs_group (69 samples, 0.06%)</title><rect x="95.8210%" y="469" width="0.0629%" height="15" fill="rgb(252,98,18)" fg:x="105039" fg:w="69"/><text x="96.0710%" y="479.50"></text></g><g><title>__calc_delta (62 samples, 0.06%)</title><rect x="95.9661%" y="453" width="0.0566%" height="15" fill="rgb(244,8,26)" fg:x="105198" fg:w="62"/><text x="96.2161%" y="463.50"></text></g><g><title>__cgroup_account_cputime (23 samples, 0.02%)</title><rect x="96.0226%" y="453" width="0.0210%" height="15" fill="rgb(237,173,45)" fg:x="105260" fg:w="23"/><text x="96.2726%" y="463.50"></text></g><g><title>__rcu_read_unlock (12 samples, 0.01%)</title><rect x="96.0473%" y="453" width="0.0109%" height="15" fill="rgb(208,213,49)" fg:x="105287" fg:w="12"/><text x="96.2973%" y="463.50"></text></g><g><title>cpuacct_charge (52 samples, 0.05%)</title><rect x="96.0582%" y="453" width="0.0474%" height="15" fill="rgb(212,122,37)" fg:x="105299" fg:w="52"/><text x="96.3082%" y="463.50"></text></g><g><title>update_curr (261 samples, 0.24%)</title><rect x="95.8840%" y="469" width="0.2381%" height="15" fill="rgb(213,80,17)" fg:x="105108" fg:w="261"/><text x="96.1340%" y="479.50"></text></g><g><title>update_min_vruntime (18 samples, 0.02%)</title><rect x="96.1056%" y="453" width="0.0164%" height="15" fill="rgb(206,210,43)" fg:x="105351" fg:w="18"/><text x="96.3556%" y="463.50"></text></g><g><title>__update_load_avg_cfs_rq (86 samples, 0.08%)</title><rect x="96.1503%" y="453" width="0.0785%" height="15" fill="rgb(229,214,3)" fg:x="105400" fg:w="86"/><text x="96.4003%" y="463.50"></text></g><g><title>dequeue_entity (653 samples, 0.60%)</title><rect x="95.7261%" y="485" width="0.5957%" height="15" fill="rgb(235,213,29)" fg:x="104935" fg:w="653"/><text x="95.9761%" y="495.50"></text></g><g><title>update_load_avg (219 samples, 0.20%)</title><rect x="96.1221%" y="469" width="0.1998%" height="15" fill="rgb(248,135,26)" fg:x="105369" fg:w="219"/><text x="96.3721%" y="479.50"></text></g><g><title>__update_load_avg_se (102 samples, 0.09%)</title><rect x="96.2288%" y="453" width="0.0930%" height="15" fill="rgb(242,188,12)" fg:x="105486" fg:w="102"/><text x="96.4788%" y="463.50"></text></g><g><title>dequeue_task_fair (764 samples, 0.70%)</title><rect x="95.6313%" y="501" width="0.6970%" height="15" fill="rgb(245,38,12)" fg:x="104831" fg:w="764"/><text x="95.8813%" y="511.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (302 samples, 0.28%)</title><rect x="96.4641%" y="469" width="0.2755%" height="15" fill="rgb(218,42,13)" fg:x="105744" fg:w="302"/><text x="96.7141%" y="479.50"></text></g><g><title>native_write_msr (286 samples, 0.26%)</title><rect x="96.4787%" y="453" width="0.2609%" height="15" fill="rgb(238,132,49)" fg:x="105760" fg:w="286"/><text x="96.7287%" y="463.50"></text></g><g><title>__perf_event_task_sched_in (326 samples, 0.30%)</title><rect x="96.4532%" y="485" width="0.2974%" height="15" fill="rgb(209,196,19)" fg:x="105732" fg:w="326"/><text x="96.7032%" y="495.50"></text></g><g><title>_raw_spin_unlock (12 samples, 0.01%)</title><rect x="96.7396%" y="469" width="0.0109%" height="15" fill="rgb(244,131,22)" fg:x="106046" fg:w="12"/><text x="96.9896%" y="479.50"></text></g><g><title>_raw_spin_unlock (12 samples, 0.01%)</title><rect x="96.7506%" y="485" width="0.0109%" height="15" fill="rgb(223,18,34)" fg:x="106058" fg:w="12"/><text x="97.0006%" y="495.50"></text></g><g><title>finish_task_switch.isra.0 (488 samples, 0.45%)</title><rect x="96.3282%" y="501" width="0.4452%" height="15" fill="rgb(252,124,54)" fg:x="105595" fg:w="488"/><text x="96.5782%" y="511.50"></text></g><g><title>pick_next_task_fair (94 samples, 0.09%)</title><rect x="96.7752%" y="501" width="0.0858%" height="15" fill="rgb(229,106,42)" fg:x="106085" fg:w="94"/><text x="97.0252%" y="511.50"></text></g><g><title>newidle_balance (66 samples, 0.06%)</title><rect x="96.8008%" y="485" width="0.0602%" height="15" fill="rgb(221,129,1)" fg:x="106113" fg:w="66"/><text x="97.0508%" y="495.50"></text></g><g><title>pick_next_task_idle (33 samples, 0.03%)</title><rect x="96.8610%" y="501" width="0.0301%" height="15" fill="rgb(229,74,15)" fg:x="106179" fg:w="33"/><text x="97.1110%" y="511.50"></text></g><g><title>set_next_task_idle (28 samples, 0.03%)</title><rect x="96.8655%" y="485" width="0.0255%" height="15" fill="rgb(210,206,50)" fg:x="106184" fg:w="28"/><text x="97.1155%" y="495.50"></text></g><g><title>__update_idle_core (23 samples, 0.02%)</title><rect x="96.8701%" y="469" width="0.0210%" height="15" fill="rgb(251,114,31)" fg:x="106189" fg:w="23"/><text x="97.1201%" y="479.50"></text></g><g><title>iterate_groups (69 samples, 0.06%)</title><rect x="96.9303%" y="485" width="0.0629%" height="15" fill="rgb(215,225,28)" fg:x="106255" fg:w="69"/><text x="97.1803%" y="495.50"></text></g><g><title>psi_group_change (301 samples, 0.27%)</title><rect x="97.0005%" y="485" width="0.2746%" height="15" fill="rgb(237,109,14)" fg:x="106332" fg:w="301"/><text x="97.2505%" y="495.50"></text></g><g><title>psi_task_switch (454 samples, 0.41%)</title><rect x="96.8911%" y="501" width="0.4142%" height="15" fill="rgb(230,13,37)" fg:x="106212" fg:w="454"/><text x="97.1411%" y="511.50"></text></g><g><title>sched_clock_cpu (33 samples, 0.03%)</title><rect x="97.2751%" y="485" width="0.0301%" height="15" fill="rgb(231,40,28)" fg:x="106633" fg:w="33"/><text x="97.5251%" y="495.50"></text></g><g><title>native_sched_clock (30 samples, 0.03%)</title><rect x="97.2779%" y="469" width="0.0274%" height="15" fill="rgb(231,202,18)" fg:x="106636" fg:w="30"/><text x="97.5279%" y="479.50"></text></g><g><title>put_prev_task_fair (77 samples, 0.07%)</title><rect x="97.3052%" y="501" width="0.0702%" height="15" fill="rgb(225,33,18)" fg:x="106666" fg:w="77"/><text x="97.5552%" y="511.50"></text></g><g><title>put_prev_entity (35 samples, 0.03%)</title><rect x="97.3436%" y="485" width="0.0319%" height="15" fill="rgb(223,64,47)" fg:x="106708" fg:w="35"/><text x="97.5936%" y="495.50"></text></g><g><title>raw_spin_rq_lock_nested (38 samples, 0.03%)</title><rect x="97.3755%" y="501" width="0.0347%" height="15" fill="rgb(234,114,13)" fg:x="106743" fg:w="38"/><text x="97.6255%" y="511.50"></text></g><g><title>_raw_spin_lock (32 samples, 0.03%)</title><rect x="97.3810%" y="485" width="0.0292%" height="15" fill="rgb(248,56,40)" fg:x="106749" fg:w="32"/><text x="97.6310%" y="495.50"></text></g><g><title>rcu_note_context_switch (13 samples, 0.01%)</title><rect x="97.4101%" y="501" width="0.0119%" height="15" fill="rgb(221,194,21)" fg:x="106781" fg:w="13"/><text x="97.6601%" y="511.50"></text></g><g><title>sched_clock_cpu (60 samples, 0.05%)</title><rect x="97.4649%" y="485" width="0.0547%" height="15" fill="rgb(242,108,46)" fg:x="106841" fg:w="60"/><text x="97.7149%" y="495.50"></text></g><g><title>native_sched_clock (54 samples, 0.05%)</title><rect x="97.4704%" y="469" width="0.0493%" height="15" fill="rgb(220,106,10)" fg:x="106847" fg:w="54"/><text x="97.7204%" y="479.50"></text></g><g><title>futex_wait_queue (2,531 samples, 2.31%)</title><rect x="95.2363%" y="549" width="2.3089%" height="15" fill="rgb(211,88,4)" fg:x="104398" fg:w="2531"/><text x="95.4863%" y="559.50">f..</text></g><g><title>schedule (2,415 samples, 2.20%)</title><rect x="95.3421%" y="533" width="2.2031%" height="15" fill="rgb(214,95,34)" fg:x="104514" fg:w="2415"/><text x="95.5921%" y="543.50">s..</text></g><g><title>__schedule (2,373 samples, 2.16%)</title><rect x="95.3804%" y="517" width="2.1648%" height="15" fill="rgb(250,160,33)" fg:x="104556" fg:w="2373"/><text x="95.6304%" y="527.50">_..</text></g><g><title>update_rq_clock (135 samples, 0.12%)</title><rect x="97.4220%" y="501" width="0.1232%" height="15" fill="rgb(225,29,10)" fg:x="106794" fg:w="135"/><text x="97.6720%" y="511.50"></text></g><g><title>update_irq_load_avg (28 samples, 0.03%)</title><rect x="97.5196%" y="485" width="0.0255%" height="15" fill="rgb(224,28,30)" fg:x="106901" fg:w="28"/><text x="97.7696%" y="495.50"></text></g><g><title>__get_user_nocheck_4 (41 samples, 0.04%)</title><rect x="97.5743%" y="517" width="0.0374%" height="15" fill="rgb(231,77,4)" fg:x="106961" fg:w="41"/><text x="97.8243%" y="527.50"></text></g><g><title>futex_get_value_locked (52 samples, 0.05%)</title><rect x="97.5652%" y="533" width="0.0474%" height="15" fill="rgb(209,63,21)" fg:x="106951" fg:w="52"/><text x="97.8152%" y="543.50"></text></g><g><title>_raw_spin_lock (28 samples, 0.03%)</title><rect x="97.7395%" y="517" width="0.0255%" height="15" fill="rgb(226,22,11)" fg:x="107142" fg:w="28"/><text x="97.9895%" y="527.50"></text></g><g><title>futex_q_lock (196 samples, 0.18%)</title><rect x="97.6127%" y="533" width="0.1788%" height="15" fill="rgb(216,82,30)" fg:x="107003" fg:w="196"/><text x="97.8627%" y="543.50"></text></g><g><title>futex_hash (29 samples, 0.03%)</title><rect x="97.7650%" y="517" width="0.0265%" height="15" fill="rgb(246,227,38)" fg:x="107170" fg:w="29"/><text x="98.0150%" y="527.50"></text></g><g><title>__x64_sys_futex (3,056 samples, 2.79%)</title><rect x="95.0192%" y="597" width="2.7878%" height="15" fill="rgb(251,203,53)" fg:x="104160" fg:w="3056"/><text x="95.2692%" y="607.50">__..</text></g><g><title>do_futex (2,979 samples, 2.72%)</title><rect x="95.0894%" y="581" width="2.7176%" height="15" fill="rgb(254,101,1)" fg:x="104237" fg:w="2979"/><text x="95.3394%" y="591.50">do..</text></g><g><title>futex_wait (2,960 samples, 2.70%)</title><rect x="95.1067%" y="565" width="2.7002%" height="15" fill="rgb(241,180,5)" fg:x="104256" fg:w="2960"/><text x="95.3567%" y="575.50">fu..</text></g><g><title>futex_wait_setup (287 samples, 0.26%)</title><rect x="97.5452%" y="549" width="0.2618%" height="15" fill="rgb(218,168,4)" fg:x="106929" fg:w="287"/><text x="97.7952%" y="559.50"></text></g><g><title>get_futex_key (17 samples, 0.02%)</title><rect x="97.7915%" y="533" width="0.0155%" height="15" fill="rgb(224,223,32)" fg:x="107199" fg:w="17"/><text x="98.0415%" y="543.50"></text></g><g><title>syscall_enter_from_user_mode (27 samples, 0.02%)</title><rect x="97.8070%" y="597" width="0.0246%" height="15" fill="rgb(236,106,22)" fg:x="107216" fg:w="27"/><text x="98.0570%" y="607.50"></text></g><g><title>__get_user_8 (47 samples, 0.04%)</title><rect x="98.4921%" y="549" width="0.0429%" height="15" fill="rgb(206,121,5)" fg:x="107967" fg:w="47"/><text x="98.7421%" y="559.50"></text></g><g><title>__rseq_handle_notify_resume (162 samples, 0.15%)</title><rect x="98.4109%" y="565" width="0.1478%" height="15" fill="rgb(233,87,28)" fg:x="107878" fg:w="162"/><text x="98.6609%" y="575.50"></text></g><g><title>__put_user_nocheck_8 (25 samples, 0.02%)</title><rect x="98.5359%" y="549" width="0.0228%" height="15" fill="rgb(236,137,17)" fg:x="108015" fg:w="25"/><text x="98.7859%" y="559.50"></text></g><g><title>exit_to_user_mode_prepare (316 samples, 0.29%)</title><rect x="98.3187%" y="581" width="0.2883%" height="15" fill="rgb(209,183,38)" fg:x="107777" fg:w="316"/><text x="98.5687%" y="591.50"></text></g><g><title>switch_fpu_return (27 samples, 0.02%)</title><rect x="98.5824%" y="565" width="0.0246%" height="15" fill="rgb(206,162,44)" fg:x="108066" fg:w="27"/><text x="98.8324%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (932 samples, 0.85%)</title><rect x="97.8316%" y="597" width="0.8502%" height="15" fill="rgb(237,70,39)" fg:x="107243" fg:w="932"/><text x="98.0816%" y="607.50"></text></g><g><title>syscall_exit_work (82 samples, 0.07%)</title><rect x="98.6070%" y="581" width="0.0748%" height="15" fill="rgb(212,176,5)" fg:x="108093" fg:w="82"/><text x="98.8570%" y="591.50"></text></g><g><title>__audit_syscall_exit (25 samples, 0.02%)</title><rect x="98.6590%" y="565" width="0.0228%" height="15" fill="rgb(232,95,16)" fg:x="108150" fg:w="25"/><text x="98.9090%" y="575.50"></text></g><g><title>__audit_syscall_entry (23 samples, 0.02%)</title><rect x="98.6946%" y="581" width="0.0210%" height="15" fill="rgb(219,115,35)" fg:x="108189" fg:w="23"/><text x="98.9446%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,141 samples, 3.78%)</title><rect x="94.9389%" y="629" width="3.7776%" height="15" fill="rgb(251,67,27)" fg:x="104072" fg:w="4141"/><text x="95.1889%" y="639.50">entr..</text></g><g><title>do_syscall_64 (4,118 samples, 3.76%)</title><rect x="94.9599%" y="613" width="3.7566%" height="15" fill="rgb(222,95,40)" fg:x="104095" fg:w="4118"/><text x="95.2099%" y="623.50">do_s..</text></g><g><title>syscall_trace_enter.constprop.0 (38 samples, 0.03%)</title><rect x="98.6818%" y="597" width="0.0347%" height="15" fill="rgb(250,35,16)" fg:x="108175" fg:w="38"/><text x="98.9318%" y="607.50"></text></g><g><title>__futex_abstimed_wait_common (4,306 samples, 3.93%)</title><rect x="94.8148%" y="645" width="3.9281%" height="15" fill="rgb(224,86,44)" fg:x="103936" fg:w="4306"/><text x="95.0648%" y="655.50">__fu..</text></g><g><title>syscall_return_via_sysret (29 samples, 0.03%)</title><rect x="98.7165%" y="629" width="0.0265%" height="15" fill="rgb(237,53,53)" fg:x="108213" fg:w="29"/><text x="98.9665%" y="639.50"></text></g><g><title>__pthread_cleanup_pop (11 samples, 0.01%)</title><rect x="98.7429%" y="645" width="0.0100%" height="15" fill="rgb(208,171,33)" fg:x="108242" fg:w="11"/><text x="98.9929%" y="655.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (4,673 samples, 4.26%)</title><rect x="94.5165%" y="677" width="4.2629%" height="15" fill="rgb(222,64,27)" fg:x="103609" fg:w="4673"/><text x="94.7665%" y="687.50">std::..</text></g><g><title>__GI___pthread_cond_wait (4,673 samples, 4.26%)</title><rect x="94.5165%" y="661" width="4.2629%" height="15" fill="rgb(221,121,35)" fg:x="103609" fg:w="4673"/><text x="94.7665%" y="671.50">__GI_..</text></g><g><title>__pthread_mutex_cond_lock (29 samples, 0.03%)</title><rect x="98.7530%" y="645" width="0.0265%" height="15" fill="rgb(228,137,42)" fg:x="108253" fg:w="29"/><text x="99.0030%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::wait (4,703 samples, 4.29%)</title><rect x="94.5083%" y="709" width="4.2903%" height="15" fill="rgb(227,54,21)" fg:x="103600" fg:w="4703"/><text x="94.7583%" y="719.50">std::..</text></g><g><title>std::sys_common::condvar::Condvar::wait (4,694 samples, 4.28%)</title><rect x="94.5165%" y="693" width="4.2821%" height="15" fill="rgb(240,168,33)" fg:x="103609" fg:w="4694"/><text x="94.7665%" y="703.50">std::..</text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (21 samples, 0.02%)</title><rect x="98.7794%" y="677" width="0.0192%" height="15" fill="rgb(243,159,6)" fg:x="108282" fg:w="21"/><text x="99.0294%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (20 samples, 0.02%)</title><rect x="98.7803%" y="661" width="0.0182%" height="15" fill="rgb(205,211,41)" fg:x="108283" fg:w="20"/><text x="99.0303%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.02%)</title><rect x="98.7803%" y="645" width="0.0182%" height="15" fill="rgb(253,30,1)" fg:x="108283" fg:w="20"/><text x="99.0303%" y="655.50"></text></g><g><title>parking::Parker::park (5,753 samples, 5.25%)</title><rect x="93.5669%" y="741" width="5.2481%" height="15" fill="rgb(226,80,18)" fg:x="102568" fg:w="5753"/><text x="93.8169%" y="751.50">parkin..</text></g><g><title>parking::Inner::park (5,751 samples, 5.25%)</title><rect x="93.5687%" y="725" width="5.2463%" height="15" fill="rgb(253,156,46)" fg:x="102570" fg:w="5751"/><text x="93.8187%" y="735.50">parkin..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="98.7986%" y="709" width="0.0164%" height="15" fill="rgb(248,87,27)" fg:x="108303" fg:w="18"/><text x="99.0486%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="98.7995%" y="693" width="0.0155%" height="15" fill="rgb(227,122,2)" fg:x="108304" fg:w="17"/><text x="99.0495%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="98.7995%" y="677" width="0.0155%" height="15" fill="rgb(229,94,39)" fg:x="108304" fg:w="17"/><text x="99.0495%" y="687.50"></text></g><g><title>___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="98.7995%" y="661" width="0.0155%" height="15" fill="rgb(225,173,31)" fg:x="108304" fg:w="17"/><text x="99.0495%" y="671.50"></text></g><g><title>parking::Parker::park_timeout (142 samples, 0.13%)</title><rect x="98.8150%" y="741" width="0.1295%" height="15" fill="rgb(239,176,30)" fg:x="108321" fg:w="142"/><text x="99.0650%" y="751.50"></text></g><g><title>parking::Inner::park (138 samples, 0.13%)</title><rect x="98.8186%" y="725" width="0.1259%" height="15" fill="rgb(212,104,21)" fg:x="108325" fg:w="138"/><text x="99.0686%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (130 samples, 0.12%)</title><rect x="98.8259%" y="709" width="0.1186%" height="15" fill="rgb(240,209,40)" fg:x="108333" fg:w="130"/><text x="99.0759%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (130 samples, 0.12%)</title><rect x="98.8259%" y="693" width="0.1186%" height="15" fill="rgb(234,195,5)" fg:x="108333" fg:w="130"/><text x="99.0759%" y="703.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (18,675 samples, 17.04%)</title><rect x="81.9367%" y="773" width="17.0361%" height="15" fill="rgb(238,213,1)" fg:x="89819" fg:w="18675"/><text x="82.1867%" y="783.50">async_global_executor::rea..</text></g><g><title>async_io::driver::block_on (18,675 samples, 17.04%)</title><rect x="81.9367%" y="757" width="17.0361%" height="15" fill="rgb(235,182,54)" fg:x="89819" fg:w="18675"/><text x="82.1867%" y="767.50">async_io::driver::block_on</text></g><g><title>std::time::Instant::now (22 samples, 0.02%)</title><rect x="98.9527%" y="741" width="0.0201%" height="15" fill="rgb(229,50,46)" fg:x="108472" fg:w="22"/><text x="99.2027%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (22 samples, 0.02%)</title><rect x="98.9527%" y="725" width="0.0201%" height="15" fill="rgb(219,145,13)" fg:x="108472" fg:w="22"/><text x="99.2027%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (22 samples, 0.02%)</title><rect x="98.9527%" y="709" width="0.0201%" height="15" fill="rgb(220,226,10)" fg:x="108472" fg:w="22"/><text x="99.2027%" y="719.50"></text></g><g><title>__clock_gettime_2 (18 samples, 0.02%)</title><rect x="98.9564%" y="693" width="0.0164%" height="15" fill="rgb(248,47,30)" fg:x="108476" fg:w="18"/><text x="99.2064%" y="703.50"></text></g><g><title>__vdso_clock_gettime (13 samples, 0.01%)</title><rect x="98.9610%" y="677" width="0.0119%" height="15" fill="rgb(231,209,44)" fg:x="108481" fg:w="13"/><text x="99.2110%" y="687.50"></text></g><g><title>std::panic::catch_unwind (18,682 samples, 17.04%)</title><rect x="81.9312%" y="1029" width="17.0425%" height="15" fill="rgb(209,80,30)" fg:x="89813" fg:w="18682"/><text x="82.1812%" y="1039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (18,682 samples, 17.04%)</title><rect x="81.9312%" y="1013" width="17.0425%" height="15" fill="rgb(232,9,14)" fg:x="89813" fg:w="18682"/><text x="82.1812%" y="1023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (18,682 samples, 17.04%)</title><rect x="81.9312%" y="997" width="17.0425%" height="15" fill="rgb(243,91,43)" fg:x="89813" fg:w="18682"/><text x="82.1812%" y="1007.50">std::panicking::try::do_ca..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18,682 samples, 17.04%)</title><rect x="81.9312%" y="981" width="17.0425%" height="15" fill="rgb(231,90,52)" fg:x="89813" fg:w="18682"/><text x="82.1812%" y="991.50">&lt;core::panic::unwind_safe:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (18,682 samples, 17.04%)</title><rect x="81.9312%" y="965" width="17.0425%" height="15" fill="rgb(253,192,44)" fg:x="89813" fg:w="18682"/><text x="82.1812%" y="975.50">std::thread::Builder::spaw..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18,682 samples, 17.04%)</title><rect x="81.9312%" y="949" width="17.0425%" height="15" fill="rgb(241,66,31)" fg:x="89813" fg:w="18682"/><text x="82.1812%" y="959.50">std::sys_common::backtrace..</text></g><g><title>core::ops::function::FnOnce::call_once (18,682 samples, 17.04%)</title><rect x="81.9312%" y="933" width="17.0425%" height="15" fill="rgb(235,81,37)" fg:x="89813" fg:w="18682"/><text x="82.1812%" y="943.50">core::ops::function::FnOnc..</text></g><g><title>async_global_executor::threading::thread_main_loop (18,682 samples, 17.04%)</title><rect x="81.9312%" y="917" width="17.0425%" height="15" fill="rgb(223,221,9)" fg:x="89813" fg:w="18682"/><text x="82.1812%" y="927.50">async_global_executor::thr..</text></g><g><title>std::panic::catch_unwind (18,676 samples, 17.04%)</title><rect x="81.9367%" y="901" width="17.0370%" height="15" fill="rgb(242,180,7)" fg:x="89819" fg:w="18676"/><text x="82.1867%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (18,676 samples, 17.04%)</title><rect x="81.9367%" y="885" width="17.0370%" height="15" fill="rgb(243,78,19)" fg:x="89819" fg:w="18676"/><text x="82.1867%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (18,676 samples, 17.04%)</title><rect x="81.9367%" y="869" width="17.0370%" height="15" fill="rgb(233,23,17)" fg:x="89819" fg:w="18676"/><text x="82.1867%" y="879.50">std::panicking::try::do_ca..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (18,676 samples, 17.04%)</title><rect x="81.9367%" y="853" width="17.0370%" height="15" fill="rgb(252,122,45)" fg:x="89819" fg:w="18676"/><text x="82.1867%" y="863.50">async_global_executor::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18,676 samples, 17.04%)</title><rect x="81.9367%" y="837" width="17.0370%" height="15" fill="rgb(247,108,20)" fg:x="89819" fg:w="18676"/><text x="82.1867%" y="847.50">std::thread::local::LocalK..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18,676 samples, 17.04%)</title><rect x="81.9367%" y="821" width="17.0370%" height="15" fill="rgb(235,84,21)" fg:x="89819" fg:w="18676"/><text x="82.1867%" y="831.50">std::thread::local::LocalK..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (18,676 samples, 17.04%)</title><rect x="81.9367%" y="805" width="17.0370%" height="15" fill="rgb(247,129,10)" fg:x="89819" fg:w="18676"/><text x="82.1867%" y="815.50">async_global_executor::thr..</text></g><g><title>async_global_executor::reactor::block_on (18,676 samples, 17.04%)</title><rect x="81.9367%" y="789" width="17.0370%" height="15" fill="rgb(208,173,14)" fg:x="89819" fg:w="18676"/><text x="82.1867%" y="799.50">async_global_executor::rea..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18,689 samples, 17.05%)</title><rect x="81.9312%" y="1093" width="17.0489%" height="15" fill="rgb(236,31,38)" fg:x="89813" fg:w="18689"/><text x="82.1812%" y="1103.50">&lt;alloc::boxed::Box&lt;F,A&gt; as..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18,689 samples, 17.05%)</title><rect x="81.9312%" y="1077" width="17.0489%" height="15" fill="rgb(232,65,17)" fg:x="89813" fg:w="18689"/><text x="82.1812%" y="1087.50">&lt;alloc::boxed::Box&lt;F,A&gt; as..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (18,689 samples, 17.05%)</title><rect x="81.9312%" y="1061" width="17.0489%" height="15" fill="rgb(224,45,49)" fg:x="89813" fg:w="18689"/><text x="82.1812%" y="1071.50">core::ops::function::FnOnc..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (18,689 samples, 17.05%)</title><rect x="81.9312%" y="1045" width="17.0489%" height="15" fill="rgb(225,2,53)" fg:x="89813" fg:w="18689"/><text x="82.1812%" y="1055.50">std::thread::Builder::spaw..</text></g><g><title>__GI___clone (18,718 samples, 17.08%)</title><rect x="81.9066%" y="1141" width="17.0754%" height="15" fill="rgb(248,210,53)" fg:x="89786" fg:w="18718"/><text x="82.1566%" y="1151.50">__GI___clone</text></g><g><title>start_thread (18,693 samples, 17.05%)</title><rect x="81.9294%" y="1125" width="17.0525%" height="15" fill="rgb(211,1,30)" fg:x="89811" fg:w="18693"/><text x="82.1794%" y="1135.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (18,691 samples, 17.05%)</title><rect x="81.9312%" y="1109" width="17.0507%" height="15" fill="rgb(224,96,15)" fg:x="89813" fg:w="18691"/><text x="82.1812%" y="1119.50">std::sys::unix::thread::Th..</text></g><g><title>abi_stable::std_types::boxed::destroy_box (50 samples, 0.05%)</title><rect x="98.9974%" y="1141" width="0.0456%" height="15" fill="rgb(252,45,11)" fg:x="108521" fg:w="50"/><text x="99.2474%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="99.0577%" y="1125" width="0.0155%" height="15" fill="rgb(220,125,38)" fg:x="108587" fg:w="17"/><text x="99.3077%" y="1135.50"></text></g><g><title>anon.23a3371eb37fc94817be509838165768.73.llvm.16328265080049972961 (22 samples, 0.02%)</title><rect x="99.0577%" y="1141" width="0.0201%" height="15" fill="rgb(243,161,33)" fg:x="108587" fg:w="22"/><text x="99.3077%" y="1151.50"></text></g><g><title>anon.23a3371eb37fc94817be509838165768.74.llvm.16328265080049972961 (11 samples, 0.01%)</title><rect x="99.0777%" y="1141" width="0.0100%" height="15" fill="rgb(248,197,34)" fg:x="108609" fg:w="11"/><text x="99.3277%" y="1151.50"></text></g><g><title>anon.35f0de85e04b0f8bb947972ea9348f1d.14.llvm.4070801126149029742 (19 samples, 0.02%)</title><rect x="99.0951%" y="1141" width="0.0173%" height="15" fill="rgb(228,165,23)" fg:x="108628" fg:w="19"/><text x="99.3451%" y="1151.50"></text></g><g><title>abi_stable::erased_types::iterator::next (12 samples, 0.01%)</title><rect x="99.1151%" y="1125" width="0.0109%" height="15" fill="rgb(236,94,38)" fg:x="108650" fg:w="12"/><text x="99.3651%" y="1135.50"></text></g><g><title>anon.60428f314eac9a34fd6a5f5dd740730b.0.llvm.6682858220796171858 (18 samples, 0.02%)</title><rect x="99.1151%" y="1141" width="0.0164%" height="15" fill="rgb(220,13,23)" fg:x="108650" fg:w="18"/><text x="99.3651%" y="1151.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (16 samples, 0.01%)</title><rect x="99.1416%" y="1125" width="0.0146%" height="15" fill="rgb(234,26,39)" fg:x="108679" fg:w="16"/><text x="99.3916%" y="1135.50"></text></g><g><title>anon.8c5413703f4f186253e43f95062f97a6.113.llvm.12695769662175795486 (20 samples, 0.02%)</title><rect x="99.1388%" y="1141" width="0.0182%" height="15" fill="rgb(205,117,44)" fg:x="108676" fg:w="20"/><text x="99.3888%" y="1151.50"></text></g><g><title>anon.adf543dd20ecce45fc53651bd1207dc5.78.llvm.3254357054457597259 (17 samples, 0.02%)</title><rect x="99.1571%" y="1141" width="0.0155%" height="15" fill="rgb(250,42,2)" fg:x="108696" fg:w="17"/><text x="99.4071%" y="1151.50"></text></g><g><title>rust_alloc (16 samples, 0.01%)</title><rect x="99.1580%" y="1125" width="0.0146%" height="15" fill="rgb(223,83,14)" fg:x="108697" fg:w="16"/><text x="99.4080%" y="1135.50"></text></g><g><title>async_executor::steal (26 samples, 0.02%)</title><rect x="99.1854%" y="1141" width="0.0237%" height="15" fill="rgb(241,147,50)" fg:x="108727" fg:w="26"/><text x="99.4354%" y="1151.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (14 samples, 0.01%)</title><rect x="99.2091%" y="1141" width="0.0128%" height="15" fill="rgb(218,90,6)" fg:x="108753" fg:w="14"/><text x="99.4591%" y="1151.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (23 samples, 0.02%)</title><rect x="99.2219%" y="1141" width="0.0210%" height="15" fill="rgb(210,191,5)" fg:x="108767" fg:w="23"/><text x="99.4719%" y="1151.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (24 samples, 0.02%)</title><rect x="99.2465%" y="1141" width="0.0219%" height="15" fill="rgb(225,139,19)" fg:x="108794" fg:w="24"/><text x="99.4965%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (18 samples, 0.02%)</title><rect x="99.2866%" y="1093" width="0.0164%" height="15" fill="rgb(210,1,33)" fg:x="108838" fg:w="18"/><text x="99.5366%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (18 samples, 0.02%)</title><rect x="99.2866%" y="1077" width="0.0164%" height="15" fill="rgb(213,50,3)" fg:x="108838" fg:w="18"/><text x="99.5366%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (18 samples, 0.02%)</title><rect x="99.2866%" y="1061" width="0.0164%" height="15" fill="rgb(234,227,4)" fg:x="108838" fg:w="18"/><text x="99.5366%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (27 samples, 0.02%)</title><rect x="99.2866%" y="1125" width="0.0246%" height="15" fill="rgb(246,63,5)" fg:x="108838" fg:w="27"/><text x="99.5366%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (27 samples, 0.02%)</title><rect x="99.2866%" y="1109" width="0.0246%" height="15" fill="rgb(245,136,27)" fg:x="108838" fg:w="27"/><text x="99.5366%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (30 samples, 0.03%)</title><rect x="99.3113%" y="1125" width="0.0274%" height="15" fill="rgb(247,199,27)" fg:x="108865" fg:w="30"/><text x="99.5613%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (30 samples, 0.03%)</title><rect x="99.3113%" y="1109" width="0.0274%" height="15" fill="rgb(252,158,49)" fg:x="108865" fg:w="30"/><text x="99.5613%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (30 samples, 0.03%)</title><rect x="99.3113%" y="1093" width="0.0274%" height="15" fill="rgb(254,73,1)" fg:x="108865" fg:w="30"/><text x="99.5613%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (87 samples, 0.08%)</title><rect x="99.2821%" y="1141" width="0.0794%" height="15" fill="rgb(248,93,19)" fg:x="108833" fg:w="87"/><text x="99.5321%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (25 samples, 0.02%)</title><rect x="99.3386%" y="1125" width="0.0228%" height="15" fill="rgb(206,67,5)" fg:x="108895" fg:w="25"/><text x="99.5886%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="99.3477%" y="1109" width="0.0137%" height="15" fill="rgb(209,210,4)" fg:x="108905" fg:w="15"/><text x="99.5977%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (15 samples, 0.01%)</title><rect x="99.3477%" y="1093" width="0.0137%" height="15" fill="rgb(214,185,36)" fg:x="108905" fg:w="15"/><text x="99.5977%" y="1103.50"></text></g><g><title>futex_wait_queue (15 samples, 0.01%)</title><rect x="99.4235%" y="1061" width="0.0137%" height="15" fill="rgb(233,191,26)" fg:x="108988" fg:w="15"/><text x="99.6735%" y="1071.50"></text></g><g><title>schedule (15 samples, 0.01%)</title><rect x="99.4235%" y="1045" width="0.0137%" height="15" fill="rgb(248,94,17)" fg:x="108988" fg:w="15"/><text x="99.6735%" y="1055.50"></text></g><g><title>__schedule (15 samples, 0.01%)</title><rect x="99.4235%" y="1029" width="0.0137%" height="15" fill="rgb(250,64,4)" fg:x="108988" fg:w="15"/><text x="99.6735%" y="1039.50"></text></g><g><title>futex_wait (19 samples, 0.02%)</title><rect x="99.4216%" y="1077" width="0.0173%" height="15" fill="rgb(218,41,53)" fg:x="108986" fg:w="19"/><text x="99.6716%" y="1087.50"></text></g><g><title>__x64_sys_futex (30 samples, 0.03%)</title><rect x="99.4216%" y="1109" width="0.0274%" height="15" fill="rgb(251,176,28)" fg:x="108986" fg:w="30"/><text x="99.6716%" y="1119.50"></text></g><g><title>do_futex (30 samples, 0.03%)</title><rect x="99.4216%" y="1093" width="0.0274%" height="15" fill="rgb(247,22,9)" fg:x="108986" fg:w="30"/><text x="99.6716%" y="1103.50"></text></g><g><title>futex_wake (11 samples, 0.01%)</title><rect x="99.4390%" y="1077" width="0.0100%" height="15" fill="rgb(218,201,14)" fg:x="109005" fg:w="11"/><text x="99.6890%" y="1087.50"></text></g><g><title>syscall_exit_to_user_mode (14 samples, 0.01%)</title><rect x="99.4554%" y="1109" width="0.0128%" height="15" fill="rgb(218,94,10)" fg:x="109023" fg:w="14"/><text x="99.7054%" y="1119.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (116 samples, 0.11%)</title><rect x="99.3633%" y="1141" width="0.1058%" height="15" fill="rgb(222,183,52)" fg:x="108922" fg:w="116"/><text x="99.6133%" y="1151.50"></text></g><g><title>do_syscall_64 (59 samples, 0.05%)</title><rect x="99.4153%" y="1125" width="0.0538%" height="15" fill="rgb(242,140,25)" fg:x="108979" fg:w="59"/><text x="99.6653%" y="1135.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (80 samples, 0.07%)</title><rect x="99.4691%" y="1141" width="0.0730%" height="15" fill="rgb(235,197,38)" fg:x="109038" fg:w="80"/><text x="99.7191%" y="1151.50"></text></g><g><title>syscall_return_via_sysret (19 samples, 0.02%)</title><rect x="99.5530%" y="1141" width="0.0173%" height="15" fill="rgb(237,136,15)" fg:x="109130" fg:w="19"/><text x="99.8030%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (11 samples, 0.01%)</title><rect x="99.5703%" y="1141" width="0.0100%" height="15" fill="rgb(223,44,49)" fg:x="109149" fg:w="11"/><text x="99.8203%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="99.5703%" y="1125" width="0.0100%" height="15" fill="rgb(227,71,15)" fg:x="109149" fg:w="11"/><text x="99.8203%" y="1135.50"></text></g><g><title>async-std/runti (109,072 samples, 99.50%)</title><rect x="0.0930%" y="1157" width="99.5001%" height="15" fill="rgb(225,153,20)" fg:x="102" fg:w="109072"/><text x="0.3430%" y="1167.50">async-std/runti</text></g><g><title>tremor_runtime::connectors::source::build_event (12 samples, 0.01%)</title><rect x="99.5822%" y="1141" width="0.0109%" height="15" fill="rgb(210,190,26)" fg:x="109162" fg:w="12"/><text x="99.8322%" y="1151.50"></text></g><g><title>__x64_sys_futex (15 samples, 0.01%)</title><rect x="99.6059%" y="789" width="0.0137%" height="15" fill="rgb(223,147,5)" fg:x="109188" fg:w="15"/><text x="99.8559%" y="799.50"></text></g><g><title>do_futex (15 samples, 0.01%)</title><rect x="99.6059%" y="773" width="0.0137%" height="15" fill="rgb(207,14,23)" fg:x="109188" fg:w="15"/><text x="99.8559%" y="783.50"></text></g><g><title>futex_wait (15 samples, 0.01%)</title><rect x="99.6059%" y="757" width="0.0137%" height="15" fill="rgb(211,195,53)" fg:x="109188" fg:w="15"/><text x="99.8559%" y="767.50"></text></g><g><title>futex_wait_queue (15 samples, 0.01%)</title><rect x="99.6059%" y="741" width="0.0137%" height="15" fill="rgb(237,75,46)" fg:x="109188" fg:w="15"/><text x="99.8559%" y="751.50"></text></g><g><title>schedule (15 samples, 0.01%)</title><rect x="99.6059%" y="725" width="0.0137%" height="15" fill="rgb(254,55,14)" fg:x="109188" fg:w="15"/><text x="99.8559%" y="735.50"></text></g><g><title>__schedule (15 samples, 0.01%)</title><rect x="99.6059%" y="709" width="0.0137%" height="15" fill="rgb(230,185,30)" fg:x="109188" fg:w="15"/><text x="99.8559%" y="719.50"></text></g><g><title>finish_task_switch.isra.0 (15 samples, 0.01%)</title><rect x="99.6059%" y="693" width="0.0137%" height="15" fill="rgb(220,14,11)" fg:x="109188" fg:w="15"/><text x="99.8559%" y="703.50"></text></g><g><title>__perf_event_task_sched_in (15 samples, 0.01%)</title><rect x="99.6059%" y="677" width="0.0137%" height="15" fill="rgb(215,169,44)" fg:x="109188" fg:w="15"/><text x="99.8559%" y="687.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (15 samples, 0.01%)</title><rect x="99.6059%" y="661" width="0.0137%" height="15" fill="rgb(253,203,20)" fg:x="109188" fg:w="15"/><text x="99.8559%" y="671.50"></text></g><g><title>native_write_msr (15 samples, 0.01%)</title><rect x="99.6059%" y="645" width="0.0137%" height="15" fill="rgb(229,225,17)" fg:x="109188" fg:w="15"/><text x="99.8559%" y="655.50"></text></g><g><title>blocking-1 (30 samples, 0.03%)</title><rect x="99.5931%" y="1157" width="0.0274%" height="15" fill="rgb(236,76,26)" fg:x="109174" fg:w="30"/><text x="99.8431%" y="1167.50"></text></g><g><title>__GI___clone (29 samples, 0.03%)</title><rect x="99.5941%" y="1141" width="0.0265%" height="15" fill="rgb(234,15,30)" fg:x="109175" fg:w="29"/><text x="99.8441%" y="1151.50"></text></g><g><title>start_thread (24 samples, 0.02%)</title><rect x="99.5986%" y="1125" width="0.0219%" height="15" fill="rgb(211,113,48)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (24 samples, 0.02%)</title><rect x="99.5986%" y="1109" width="0.0219%" height="15" fill="rgb(221,31,36)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24 samples, 0.02%)</title><rect x="99.5986%" y="1093" width="0.0219%" height="15" fill="rgb(215,118,52)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24 samples, 0.02%)</title><rect x="99.5986%" y="1077" width="0.0219%" height="15" fill="rgb(241,151,27)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (24 samples, 0.02%)</title><rect x="99.5986%" y="1061" width="0.0219%" height="15" fill="rgb(253,51,3)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (24 samples, 0.02%)</title><rect x="99.5986%" y="1045" width="0.0219%" height="15" fill="rgb(216,201,24)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (24 samples, 0.02%)</title><rect x="99.5986%" y="1029" width="0.0219%" height="15" fill="rgb(231,107,4)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="1039.50"></text></g><g><title>std::panicking::try (24 samples, 0.02%)</title><rect x="99.5986%" y="1013" width="0.0219%" height="15" fill="rgb(243,97,54)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (24 samples, 0.02%)</title><rect x="99.5986%" y="997" width="0.0219%" height="15" fill="rgb(221,32,51)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24 samples, 0.02%)</title><rect x="99.5986%" y="981" width="0.0219%" height="15" fill="rgb(218,171,35)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (24 samples, 0.02%)</title><rect x="99.5986%" y="965" width="0.0219%" height="15" fill="rgb(214,20,53)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24 samples, 0.02%)</title><rect x="99.5986%" y="949" width="0.0219%" height="15" fill="rgb(239,9,52)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (24 samples, 0.02%)</title><rect x="99.5986%" y="933" width="0.0219%" height="15" fill="rgb(215,114,45)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (24 samples, 0.02%)</title><rect x="99.5986%" y="917" width="0.0219%" height="15" fill="rgb(208,118,9)" fg:x="109180" fg:w="24"/><text x="99.8486%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (16 samples, 0.01%)</title><rect x="99.6059%" y="901" width="0.0146%" height="15" fill="rgb(235,7,39)" fg:x="109188" fg:w="16"/><text x="99.8559%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (16 samples, 0.01%)</title><rect x="99.6059%" y="885" width="0.0146%" height="15" fill="rgb(243,225,15)" fg:x="109188" fg:w="16"/><text x="99.8559%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (16 samples, 0.01%)</title><rect x="99.6059%" y="869" width="0.0146%" height="15" fill="rgb(225,216,18)" fg:x="109188" fg:w="16"/><text x="99.8559%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (16 samples, 0.01%)</title><rect x="99.6059%" y="853" width="0.0146%" height="15" fill="rgb(233,36,38)" fg:x="109188" fg:w="16"/><text x="99.8559%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common (16 samples, 0.01%)</title><rect x="99.6059%" y="837" width="0.0146%" height="15" fill="rgb(239,88,23)" fg:x="109188" fg:w="16"/><text x="99.8559%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="99.6059%" y="821" width="0.0146%" height="15" fill="rgb(219,181,35)" fg:x="109188" fg:w="16"/><text x="99.8559%" y="831.50"></text></g><g><title>do_syscall_64 (16 samples, 0.01%)</title><rect x="99.6059%" y="805" width="0.0146%" height="15" fill="rgb(215,18,46)" fg:x="109188" fg:w="16"/><text x="99.8559%" y="815.50"></text></g><g><title>__x64_sys_futex (81 samples, 0.07%)</title><rect x="99.6497%" y="773" width="0.0739%" height="15" fill="rgb(241,38,11)" fg:x="109236" fg:w="81"/><text x="99.8997%" y="783.50"></text></g><g><title>do_futex (81 samples, 0.07%)</title><rect x="99.6497%" y="757" width="0.0739%" height="15" fill="rgb(248,169,45)" fg:x="109236" fg:w="81"/><text x="99.8997%" y="767.50"></text></g><g><title>futex_wait (81 samples, 0.07%)</title><rect x="99.6497%" y="741" width="0.0739%" height="15" fill="rgb(239,50,49)" fg:x="109236" fg:w="81"/><text x="99.8997%" y="751.50"></text></g><g><title>futex_wait_queue (81 samples, 0.07%)</title><rect x="99.6497%" y="725" width="0.0739%" height="15" fill="rgb(231,96,31)" fg:x="109236" fg:w="81"/><text x="99.8997%" y="735.50"></text></g><g><title>schedule (81 samples, 0.07%)</title><rect x="99.6497%" y="709" width="0.0739%" height="15" fill="rgb(224,193,37)" fg:x="109236" fg:w="81"/><text x="99.8997%" y="719.50"></text></g><g><title>__schedule (81 samples, 0.07%)</title><rect x="99.6497%" y="693" width="0.0739%" height="15" fill="rgb(227,153,50)" fg:x="109236" fg:w="81"/><text x="99.8997%" y="703.50"></text></g><g><title>finish_task_switch.isra.0 (80 samples, 0.07%)</title><rect x="99.6506%" y="677" width="0.0730%" height="15" fill="rgb(249,228,3)" fg:x="109237" fg:w="80"/><text x="99.9006%" y="687.50"></text></g><g><title>__perf_event_task_sched_in (80 samples, 0.07%)</title><rect x="99.6506%" y="661" width="0.0730%" height="15" fill="rgb(219,164,43)" fg:x="109237" fg:w="80"/><text x="99.9006%" y="671.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (80 samples, 0.07%)</title><rect x="99.6506%" y="645" width="0.0730%" height="15" fill="rgb(216,45,41)" fg:x="109237" fg:w="80"/><text x="99.9006%" y="655.50"></text></g><g><title>native_write_msr (80 samples, 0.07%)</title><rect x="99.6506%" y="629" width="0.0730%" height="15" fill="rgb(210,226,51)" fg:x="109237" fg:w="80"/><text x="99.9006%" y="639.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (83 samples, 0.08%)</title><rect x="99.6488%" y="901" width="0.0757%" height="15" fill="rgb(209,117,49)" fg:x="109235" fg:w="83"/><text x="99.8988%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (83 samples, 0.08%)</title><rect x="99.6488%" y="885" width="0.0757%" height="15" fill="rgb(206,196,24)" fg:x="109235" fg:w="83"/><text x="99.8988%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (82 samples, 0.07%)</title><rect x="99.6497%" y="869" width="0.0748%" height="15" fill="rgb(253,218,3)" fg:x="109236" fg:w="82"/><text x="99.8997%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (82 samples, 0.07%)</title><rect x="99.6497%" y="853" width="0.0748%" height="15" fill="rgb(252,166,2)" fg:x="109236" fg:w="82"/><text x="99.8997%" y="863.50"></text></g><g><title>___pthread_mutex_lock (82 samples, 0.07%)</title><rect x="99.6497%" y="837" width="0.0748%" height="15" fill="rgb(236,218,26)" fg:x="109236" fg:w="82"/><text x="99.8997%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (82 samples, 0.07%)</title><rect x="99.6497%" y="821" width="0.0748%" height="15" fill="rgb(254,84,19)" fg:x="109236" fg:w="82"/><text x="99.8997%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (82 samples, 0.07%)</title><rect x="99.6497%" y="805" width="0.0748%" height="15" fill="rgb(219,137,29)" fg:x="109236" fg:w="82"/><text x="99.8997%" y="815.50"></text></g><g><title>do_syscall_64 (82 samples, 0.07%)</title><rect x="99.6497%" y="789" width="0.0748%" height="15" fill="rgb(227,47,52)" fg:x="109236" fg:w="82"/><text x="99.8997%" y="799.50"></text></g><g><title>__x64_sys_futex (12 samples, 0.01%)</title><rect x="99.7245%" y="389" width="0.0109%" height="15" fill="rgb(229,167,24)" fg:x="109318" fg:w="12"/><text x="99.9745%" y="399.50"></text></g><g><title>do_futex (12 samples, 0.01%)</title><rect x="99.7245%" y="373" width="0.0109%" height="15" fill="rgb(233,164,1)" fg:x="109318" fg:w="12"/><text x="99.9745%" y="383.50"></text></g><g><title>futex_wait (12 samples, 0.01%)</title><rect x="99.7245%" y="357" width="0.0109%" height="15" fill="rgb(218,88,48)" fg:x="109318" fg:w="12"/><text x="99.9745%" y="367.50"></text></g><g><title>futex_wait_queue (12 samples, 0.01%)</title><rect x="99.7245%" y="341" width="0.0109%" height="15" fill="rgb(226,214,24)" fg:x="109318" fg:w="12"/><text x="99.9745%" y="351.50"></text></g><g><title>schedule (12 samples, 0.01%)</title><rect x="99.7245%" y="325" width="0.0109%" height="15" fill="rgb(233,29,12)" fg:x="109318" fg:w="12"/><text x="99.9745%" y="335.50"></text></g><g><title>__schedule (12 samples, 0.01%)</title><rect x="99.7245%" y="309" width="0.0109%" height="15" fill="rgb(219,120,34)" fg:x="109318" fg:w="12"/><text x="99.9745%" y="319.50"></text></g><g><title>finish_task_switch.isra.0 (11 samples, 0.01%)</title><rect x="99.7254%" y="293" width="0.0100%" height="15" fill="rgb(226,78,44)" fg:x="109319" fg:w="11"/><text x="99.9754%" y="303.50"></text></g><g><title>__perf_event_task_sched_in (11 samples, 0.01%)</title><rect x="99.7254%" y="277" width="0.0100%" height="15" fill="rgb(240,15,48)" fg:x="109319" fg:w="11"/><text x="99.9754%" y="287.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (11 samples, 0.01%)</title><rect x="99.7254%" y="261" width="0.0100%" height="15" fill="rgb(253,176,7)" fg:x="109319" fg:w="11"/><text x="99.9754%" y="271.50"></text></g><g><title>native_write_msr (11 samples, 0.01%)</title><rect x="99.7254%" y="245" width="0.0100%" height="15" fill="rgb(206,166,28)" fg:x="109319" fg:w="11"/><text x="99.9754%" y="255.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (14 samples, 0.01%)</title><rect x="99.7245%" y="821" width="0.0128%" height="15" fill="rgb(241,53,51)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="831.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.01%)</title><rect x="99.7245%" y="805" width="0.0128%" height="15" fill="rgb(249,112,30)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="815.50"></text></g><g><title>std::panicking::try (14 samples, 0.01%)</title><rect x="99.7245%" y="789" width="0.0128%" height="15" fill="rgb(217,85,30)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="799.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.01%)</title><rect x="99.7245%" y="773" width="0.0128%" height="15" fill="rgb(233,49,7)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.01%)</title><rect x="99.7245%" y="757" width="0.0128%" height="15" fill="rgb(234,109,9)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (14 samples, 0.01%)</title><rect x="99.7245%" y="741" width="0.0128%" height="15" fill="rgb(253,95,22)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="751.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (14 samples, 0.01%)</title><rect x="99.7245%" y="725" width="0.0128%" height="15" fill="rgb(233,176,25)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="735.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (14 samples, 0.01%)</title><rect x="99.7245%" y="709" width="0.0128%" height="15" fill="rgb(236,33,39)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="719.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (14 samples, 0.01%)</title><rect x="99.7245%" y="693" width="0.0128%" height="15" fill="rgb(223,226,42)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="703.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="99.7245%" y="677" width="0.0128%" height="15" fill="rgb(216,99,33)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (14 samples, 0.01%)</title><rect x="99.7245%" y="661" width="0.0128%" height="15" fill="rgb(235,84,23)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (14 samples, 0.01%)</title><rect x="99.7245%" y="645" width="0.0128%" height="15" fill="rgb(232,2,27)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="655.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (14 samples, 0.01%)</title><rect x="99.7245%" y="629" width="0.0128%" height="15" fill="rgb(241,23,22)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (14 samples, 0.01%)</title><rect x="99.7245%" y="613" width="0.0128%" height="15" fill="rgb(211,73,27)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (14 samples, 0.01%)</title><rect x="99.7245%" y="597" width="0.0128%" height="15" fill="rgb(235,109,49)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (14 samples, 0.01%)</title><rect x="99.7245%" y="581" width="0.0128%" height="15" fill="rgb(230,99,29)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (14 samples, 0.01%)</title><rect x="99.7245%" y="565" width="0.0128%" height="15" fill="rgb(245,199,7)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="575.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (14 samples, 0.01%)</title><rect x="99.7245%" y="549" width="0.0128%" height="15" fill="rgb(217,179,10)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="559.50"></text></g><g><title>tokio::runtime::park::Inner::park (14 samples, 0.01%)</title><rect x="99.7245%" y="533" width="0.0128%" height="15" fill="rgb(254,99,47)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="543.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (14 samples, 0.01%)</title><rect x="99.7245%" y="517" width="0.0128%" height="15" fill="rgb(251,121,7)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="527.50"></text></g><g><title>std::sync::condvar::Condvar::wait (14 samples, 0.01%)</title><rect x="99.7245%" y="501" width="0.0128%" height="15" fill="rgb(250,177,26)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="511.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (14 samples, 0.01%)</title><rect x="99.7245%" y="485" width="0.0128%" height="15" fill="rgb(232,88,15)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="495.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (14 samples, 0.01%)</title><rect x="99.7245%" y="469" width="0.0128%" height="15" fill="rgb(251,54,54)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="479.50"></text></g><g><title>__GI___pthread_cond_wait (14 samples, 0.01%)</title><rect x="99.7245%" y="453" width="0.0128%" height="15" fill="rgb(208,177,15)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="463.50"></text></g><g><title>__futex_abstimed_wait_common (14 samples, 0.01%)</title><rect x="99.7245%" y="437" width="0.0128%" height="15" fill="rgb(205,97,32)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="99.7245%" y="421" width="0.0128%" height="15" fill="rgb(217,192,13)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="431.50"></text></g><g><title>do_syscall_64 (14 samples, 0.01%)</title><rect x="99.7245%" y="405" width="0.0128%" height="15" fill="rgb(215,163,41)" fg:x="109318" fg:w="14"/><text x="99.9745%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (15 samples, 0.01%)</title><rect x="99.7245%" y="853" width="0.0137%" height="15" fill="rgb(246,83,29)" fg:x="109318" fg:w="15"/><text x="99.9745%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (15 samples, 0.01%)</title><rect x="99.7245%" y="837" width="0.0137%" height="15" fill="rgb(219,2,45)" fg:x="109318" fg:w="15"/><text x="99.9745%" y="847.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (16 samples, 0.01%)</title><rect x="99.7245%" y="901" width="0.0146%" height="15" fill="rgb(242,215,33)" fg:x="109318" fg:w="16"/><text x="99.9745%" y="911.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (16 samples, 0.01%)</title><rect x="99.7245%" y="885" width="0.0146%" height="15" fill="rgb(217,1,6)" fg:x="109318" fg:w="16"/><text x="99.9745%" y="895.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (16 samples, 0.01%)</title><rect x="99.7245%" y="869" width="0.0146%" height="15" fill="rgb(207,85,52)" fg:x="109318" fg:w="16"/><text x="99.9745%" y="879.50"></text></g><g><title>std::panic::catch_unwind (112 samples, 0.10%)</title><rect x="99.6451%" y="1029" width="0.1022%" height="15" fill="rgb(231,171,19)" fg:x="109231" fg:w="112"/><text x="99.8951%" y="1039.50"></text></g><g><title>std::panicking::try (112 samples, 0.10%)</title><rect x="99.6451%" y="1013" width="0.1022%" height="15" fill="rgb(207,128,4)" fg:x="109231" fg:w="112"/><text x="99.8951%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (112 samples, 0.10%)</title><rect x="99.6451%" y="997" width="0.1022%" height="15" fill="rgb(219,208,4)" fg:x="109231" fg:w="112"/><text x="99.8951%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (112 samples, 0.10%)</title><rect x="99.6451%" y="981" width="0.1022%" height="15" fill="rgb(235,161,42)" fg:x="109231" fg:w="112"/><text x="99.8951%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (112 samples, 0.10%)</title><rect x="99.6451%" y="965" width="0.1022%" height="15" fill="rgb(247,218,18)" fg:x="109231" fg:w="112"/><text x="99.8951%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (112 samples, 0.10%)</title><rect x="99.6451%" y="949" width="0.1022%" height="15" fill="rgb(232,114,51)" fg:x="109231" fg:w="112"/><text x="99.8951%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (112 samples, 0.10%)</title><rect x="99.6451%" y="933" width="0.1022%" height="15" fill="rgb(222,95,3)" fg:x="109231" fg:w="112"/><text x="99.8951%" y="943.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (112 samples, 0.10%)</title><rect x="99.6451%" y="917" width="0.1022%" height="15" fill="rgb(240,65,29)" fg:x="109231" fg:w="112"/><text x="99.8951%" y="927.50"></text></g><g><title>__GI___clone (118 samples, 0.11%)</title><rect x="99.6451%" y="1141" width="0.1076%" height="15" fill="rgb(249,209,20)" fg:x="109231" fg:w="118"/><text x="99.8951%" y="1151.50"></text></g><g><title>start_thread (118 samples, 0.11%)</title><rect x="99.6451%" y="1125" width="0.1076%" height="15" fill="rgb(241,48,37)" fg:x="109231" fg:w="118"/><text x="99.8951%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (118 samples, 0.11%)</title><rect x="99.6451%" y="1109" width="0.1076%" height="15" fill="rgb(230,140,42)" fg:x="109231" fg:w="118"/><text x="99.8951%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (118 samples, 0.11%)</title><rect x="99.6451%" y="1093" width="0.1076%" height="15" fill="rgb(230,176,45)" fg:x="109231" fg:w="118"/><text x="99.8951%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (118 samples, 0.11%)</title><rect x="99.6451%" y="1077" width="0.1076%" height="15" fill="rgb(245,112,21)" fg:x="109231" fg:w="118"/><text x="99.8951%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (118 samples, 0.11%)</title><rect x="99.6451%" y="1061" width="0.1076%" height="15" fill="rgb(207,183,35)" fg:x="109231" fg:w="118"/><text x="99.8951%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (118 samples, 0.11%)</title><rect x="99.6451%" y="1045" width="0.1076%" height="15" fill="rgb(227,44,33)" fg:x="109231" fg:w="118"/><text x="99.8951%" y="1055.50"></text></g><g><title>tokio-runtime-w (119 samples, 0.11%)</title><rect x="99.6451%" y="1157" width="0.1086%" height="15" fill="rgb(246,120,21)" fg:x="109231" fg:w="119"/><text x="99.8951%" y="1167.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="99.7546%" y="1141" width="0.0119%" height="15" fill="rgb(235,57,52)" fg:x="109351" fg:w="13"/><text x="100.0046%" y="1151.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (206 samples, 0.19%)</title><rect x="99.7738%" y="1061" width="0.1879%" height="15" fill="rgb(238,84,10)" fg:x="109372" fg:w="206"/><text x="100.0238%" y="1071.50"></text></g><g><title>native_write_msr (205 samples, 0.19%)</title><rect x="99.7747%" y="1045" width="0.1870%" height="15" fill="rgb(251,200,32)" fg:x="109373" fg:w="205"/><text x="100.0247%" y="1055.50"></text></g><g><title>schedule_tail (215 samples, 0.20%)</title><rect x="99.7665%" y="1109" width="0.1961%" height="15" fill="rgb(247,159,13)" fg:x="109364" fg:w="215"/><text x="100.0165%" y="1119.50"></text></g><g><title>finish_task_switch.isra.0 (215 samples, 0.20%)</title><rect x="99.7665%" y="1093" width="0.1961%" height="15" fill="rgb(238,64,4)" fg:x="109364" fg:w="215"/><text x="100.0165%" y="1103.50"></text></g><g><title>__perf_event_task_sched_in (210 samples, 0.19%)</title><rect x="99.7710%" y="1077" width="0.1916%" height="15" fill="rgb(221,131,51)" fg:x="109369" fg:w="210"/><text x="100.0210%" y="1087.50"></text></g><g><title>ret_from_fork (216 samples, 0.20%)</title><rect x="99.7665%" y="1125" width="0.1970%" height="15" fill="rgb(242,5,29)" fg:x="109364" fg:w="216"/><text x="100.0165%" y="1135.50"></text></g><g><title>__GI___mmap64 (21 samples, 0.02%)</title><rect x="99.9745%" y="1029" width="0.0192%" height="15" fill="rgb(214,130,32)" fg:x="109592" fg:w="21"/><text x="100.2245%" y="1039.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.02%)</title><rect x="99.9763%" y="1013" width="0.0173%" height="15" fill="rgb(244,210,16)" fg:x="109594" fg:w="19"/><text x="100.2263%" y="1023.50"></text></g><g><title>do_syscall_64 (19 samples, 0.02%)</title><rect x="99.9763%" y="997" width="0.0173%" height="15" fill="rgb(234,48,26)" fg:x="109594" fg:w="19"/><text x="100.2263%" y="1007.50"></text></g><g><title>vm_mmap_pgoff (18 samples, 0.02%)</title><rect x="99.9772%" y="981" width="0.0164%" height="15" fill="rgb(231,82,38)" fg:x="109595" fg:w="18"/><text x="100.2272%" y="991.50"></text></g><g><title>__GI___clone (254 samples, 0.23%)</title><rect x="99.7665%" y="1141" width="0.2317%" height="15" fill="rgb(254,128,41)" fg:x="109364" fg:w="254"/><text x="100.0165%" y="1151.50"></text></g><g><title>start_thread (38 samples, 0.03%)</title><rect x="99.9635%" y="1125" width="0.0347%" height="15" fill="rgb(212,73,49)" fg:x="109580" fg:w="38"/><text x="100.2135%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (31 samples, 0.03%)</title><rect x="99.9699%" y="1109" width="0.0283%" height="15" fill="rgb(205,62,54)" fg:x="109587" fg:w="31"/><text x="100.2199%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (29 samples, 0.03%)</title><rect x="99.9717%" y="1093" width="0.0265%" height="15" fill="rgb(228,0,8)" fg:x="109589" fg:w="29"/><text x="100.2217%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (29 samples, 0.03%)</title><rect x="99.9717%" y="1077" width="0.0265%" height="15" fill="rgb(251,28,17)" fg:x="109589" fg:w="29"/><text x="100.2217%" y="1087.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (26 samples, 0.02%)</title><rect x="99.9745%" y="1061" width="0.0237%" height="15" fill="rgb(238,105,27)" fg:x="109592" fg:w="26"/><text x="100.2245%" y="1071.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (26 samples, 0.02%)</title><rect x="99.9745%" y="1045" width="0.0237%" height="15" fill="rgb(237,216,33)" fg:x="109592" fg:w="26"/><text x="100.2245%" y="1055.50"></text></g><g><title>all (109,620 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(229,228,25)" fg:x="0" fg:w="109620"/><text x="0.2500%" y="1183.50"></text></g><g><title>tremor-pdk-sing (270 samples, 0.25%)</title><rect x="99.7537%" y="1157" width="0.2463%" height="15" fill="rgb(233,75,23)" fg:x="109350" fg:w="270"/><text x="100.0037%" y="1167.50"></text></g></svg></svg>