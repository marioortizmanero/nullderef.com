<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="106808"><g><title>__futex_abstimed_wait_common (27 samples, 0.03%)</title><rect x="0.0206%" y="805" width="0.0253%" height="15" fill="rgb(227,0,7)" fg:x="22" fg:w="27"/><text x="0.2706%" y="815.50"></text></g><g><title>___pthread_cond_timedwait (33 samples, 0.03%)</title><rect x="0.0159%" y="821" width="0.0309%" height="15" fill="rgb(217,0,24)" fg:x="17" fg:w="33"/><text x="0.2659%" y="831.50"></text></g><g><title>std::panic::catch_unwind (48 samples, 0.04%)</title><rect x="0.0037%" y="1029" width="0.0449%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="48"/><text x="0.2537%" y="1039.50"></text></g><g><title>std::panicking::try (48 samples, 0.04%)</title><rect x="0.0037%" y="1013" width="0.0449%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="48"/><text x="0.2537%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (48 samples, 0.04%)</title><rect x="0.0037%" y="997" width="0.0449%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="48"/><text x="0.2537%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (48 samples, 0.04%)</title><rect x="0.0037%" y="981" width="0.0449%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="48"/><text x="0.2537%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (48 samples, 0.04%)</title><rect x="0.0037%" y="965" width="0.0449%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="48"/><text x="0.2537%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (48 samples, 0.04%)</title><rect x="0.0037%" y="949" width="0.0449%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="48"/><text x="0.2537%" y="959.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (48 samples, 0.04%)</title><rect x="0.0037%" y="933" width="0.0449%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="48"/><text x="0.2537%" y="943.50"></text></g><g><title>async_io::driver::main_loop (48 samples, 0.04%)</title><rect x="0.0037%" y="917" width="0.0449%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="48"/><text x="0.2537%" y="927.50"></text></g><g><title>parking::Parker::park_timeout (36 samples, 0.03%)</title><rect x="0.0150%" y="901" width="0.0337%" height="15" fill="rgb(250,228,42)" fg:x="16" fg:w="36"/><text x="0.2650%" y="911.50"></text></g><g><title>parking::Inner::park (36 samples, 0.03%)</title><rect x="0.0150%" y="885" width="0.0337%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="36"/><text x="0.2650%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (35 samples, 0.03%)</title><rect x="0.0159%" y="869" width="0.0328%" height="15" fill="rgb(216,20,37)" fg:x="17" fg:w="35"/><text x="0.2659%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (35 samples, 0.03%)</title><rect x="0.0159%" y="853" width="0.0328%" height="15" fill="rgb(206,188,39)" fg:x="17" fg:w="35"/><text x="0.2659%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (35 samples, 0.03%)</title><rect x="0.0159%" y="837" width="0.0328%" height="15" fill="rgb(217,207,13)" fg:x="17" fg:w="35"/><text x="0.2659%" y="847.50"></text></g><g><title>async-io (55 samples, 0.05%)</title><rect x="0.0028%" y="1157" width="0.0515%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="55"/><text x="0.2528%" y="1167.50"></text></g><g><title>__GI___clone (54 samples, 0.05%)</title><rect x="0.0037%" y="1141" width="0.0506%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="54"/><text x="0.2537%" y="1151.50"></text></g><g><title>start_thread (54 samples, 0.05%)</title><rect x="0.0037%" y="1125" width="0.0506%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="54"/><text x="0.2537%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (54 samples, 0.05%)</title><rect x="0.0037%" y="1109" width="0.0506%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="54"/><text x="0.2537%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (54 samples, 0.05%)</title><rect x="0.0037%" y="1093" width="0.0506%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="54"/><text x="0.2537%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (54 samples, 0.05%)</title><rect x="0.0037%" y="1077" width="0.0506%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="54"/><text x="0.2537%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (54 samples, 0.05%)</title><rect x="0.0037%" y="1061" width="0.0506%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="54"/><text x="0.2537%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (54 samples, 0.05%)</title><rect x="0.0037%" y="1045" width="0.0506%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="54"/><text x="0.2537%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="0.3923%" y="1141" width="0.0206%" height="15" fill="rgb(247,18,42)" fg:x="419" fg:w="22"/><text x="0.6423%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (135 samples, 0.13%)</title><rect x="0.4129%" y="1141" width="0.1264%" height="15" fill="rgb(241,131,45)" fg:x="441" fg:w="135"/><text x="0.6629%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (133 samples, 0.12%)</title><rect x="0.4148%" y="1125" width="0.1245%" height="15" fill="rgb(249,31,29)" fg:x="443" fg:w="133"/><text x="0.6648%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (49 samples, 0.05%)</title><rect x="0.7069%" y="1109" width="0.0459%" height="15" fill="rgb(225,111,53)" fg:x="755" fg:w="49"/><text x="0.9569%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (25 samples, 0.02%)</title><rect x="0.7528%" y="1077" width="0.0234%" height="15" fill="rgb(238,160,17)" fg:x="804" fg:w="25"/><text x="1.0028%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (25 samples, 0.02%)</title><rect x="0.7528%" y="1061" width="0.0234%" height="15" fill="rgb(214,148,48)" fg:x="804" fg:w="25"/><text x="1.0028%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (25 samples, 0.02%)</title><rect x="0.7528%" y="1045" width="0.0234%" height="15" fill="rgb(232,36,49)" fg:x="804" fg:w="25"/><text x="1.0028%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (25 samples, 0.02%)</title><rect x="0.7528%" y="1029" width="0.0234%" height="15" fill="rgb(209,103,24)" fg:x="804" fg:w="25"/><text x="1.0028%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="0.7528%" y="1013" width="0.0234%" height="15" fill="rgb(229,88,8)" fg:x="804" fg:w="25"/><text x="1.0028%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="0.7528%" y="997" width="0.0234%" height="15" fill="rgb(213,181,19)" fg:x="804" fg:w="25"/><text x="1.0028%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (25 samples, 0.02%)</title><rect x="0.7528%" y="981" width="0.0234%" height="15" fill="rgb(254,191,54)" fg:x="804" fg:w="25"/><text x="1.0028%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.02%)</title><rect x="0.7528%" y="965" width="0.0234%" height="15" fill="rgb(241,83,37)" fg:x="804" fg:w="25"/><text x="1.0028%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.02%)</title><rect x="0.7528%" y="949" width="0.0234%" height="15" fill="rgb(233,36,39)" fg:x="804" fg:w="25"/><text x="1.0028%" y="959.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.02%)</title><rect x="0.7528%" y="933" width="0.0234%" height="15" fill="rgb(226,3,54)" fg:x="804" fg:w="25"/><text x="1.0028%" y="943.50"></text></g><g><title>__rg_alloc (25 samples, 0.02%)</title><rect x="0.7528%" y="917" width="0.0234%" height="15" fill="rgb(245,192,40)" fg:x="804" fg:w="25"/><text x="1.0028%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (25 samples, 0.02%)</title><rect x="0.7528%" y="901" width="0.0234%" height="15" fill="rgb(238,167,29)" fg:x="804" fg:w="25"/><text x="1.0028%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (16 samples, 0.01%)</title><rect x="0.7818%" y="1061" width="0.0150%" height="15" fill="rgb(232,182,51)" fg:x="835" fg:w="16"/><text x="1.0318%" y="1071.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (16 samples, 0.01%)</title><rect x="0.7818%" y="1045" width="0.0150%" height="15" fill="rgb(231,60,39)" fg:x="835" fg:w="16"/><text x="1.0318%" y="1055.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (292 samples, 0.27%)</title><rect x="0.5412%" y="1125" width="0.2734%" height="15" fill="rgb(208,69,12)" fg:x="578" fg:w="292"/><text x="0.7912%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (66 samples, 0.06%)</title><rect x="0.7528%" y="1109" width="0.0618%" height="15" fill="rgb(235,93,37)" fg:x="804" fg:w="66"/><text x="1.0028%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (66 samples, 0.06%)</title><rect x="0.7528%" y="1093" width="0.0618%" height="15" fill="rgb(213,116,39)" fg:x="804" fg:w="66"/><text x="1.0028%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (41 samples, 0.04%)</title><rect x="0.7762%" y="1077" width="0.0384%" height="15" fill="rgb(222,207,29)" fg:x="829" fg:w="41"/><text x="1.0262%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="0.7968%" y="1061" width="0.0178%" height="15" fill="rgb(206,96,30)" fg:x="851" fg:w="19"/><text x="1.0468%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="0.7968%" y="1045" width="0.0178%" height="15" fill="rgb(218,138,4)" fg:x="851" fg:w="19"/><text x="1.0468%" y="1055.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="0.7968%" y="1029" width="0.0178%" height="15" fill="rgb(250,191,14)" fg:x="851" fg:w="19"/><text x="1.0468%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (23 samples, 0.02%)</title><rect x="0.8202%" y="1109" width="0.0215%" height="15" fill="rgb(239,60,40)" fg:x="876" fg:w="23"/><text x="1.0702%" y="1119.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (23 samples, 0.02%)</title><rect x="0.8202%" y="1093" width="0.0215%" height="15" fill="rgb(206,27,48)" fg:x="876" fg:w="23"/><text x="1.0702%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (23 samples, 0.02%)</title><rect x="0.8202%" y="1077" width="0.0215%" height="15" fill="rgb(225,35,8)" fg:x="876" fg:w="23"/><text x="1.0702%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (23 samples, 0.02%)</title><rect x="0.8202%" y="1061" width="0.0215%" height="15" fill="rgb(250,213,24)" fg:x="876" fg:w="23"/><text x="1.0702%" y="1071.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (33 samples, 0.03%)</title><rect x="0.8145%" y="1125" width="0.0309%" height="15" fill="rgb(247,123,22)" fg:x="870" fg:w="33"/><text x="1.0645%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="0.8511%" y="1125" width="0.0262%" height="15" fill="rgb(231,138,38)" fg:x="909" fg:w="28"/><text x="1.1011%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (17 samples, 0.02%)</title><rect x="0.8614%" y="1109" width="0.0159%" height="15" fill="rgb(231,145,46)" fg:x="920" fg:w="17"/><text x="1.1114%" y="1119.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="0.8614%" y="1093" width="0.0159%" height="15" fill="rgb(251,118,11)" fg:x="920" fg:w="17"/><text x="1.1114%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (17 samples, 0.02%)</title><rect x="0.8614%" y="1077" width="0.0159%" height="15" fill="rgb(217,147,25)" fg:x="920" fg:w="17"/><text x="1.1114%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="0.8614%" y="1061" width="0.0159%" height="15" fill="rgb(247,81,37)" fg:x="920" fg:w="17"/><text x="1.1114%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="0.8614%" y="1045" width="0.0159%" height="15" fill="rgb(209,12,38)" fg:x="920" fg:w="17"/><text x="1.1114%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="0.8614%" y="1029" width="0.0159%" height="15" fill="rgb(227,1,9)" fg:x="920" fg:w="17"/><text x="1.1114%" y="1039.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="0.8614%" y="1013" width="0.0159%" height="15" fill="rgb(248,47,43)" fg:x="920" fg:w="17"/><text x="1.1114%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="0.8614%" y="997" width="0.0159%" height="15" fill="rgb(221,10,30)" fg:x="920" fg:w="17"/><text x="1.1114%" y="1007.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (143 samples, 0.13%)</title><rect x="0.8773%" y="1125" width="0.1339%" height="15" fill="rgb(210,229,1)" fg:x="937" fg:w="143"/><text x="1.1273%" y="1135.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (19 samples, 0.02%)</title><rect x="0.9934%" y="1109" width="0.0178%" height="15" fill="rgb(222,148,37)" fg:x="1061" fg:w="19"/><text x="1.2434%" y="1119.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (52 samples, 0.05%)</title><rect x="1.0898%" y="1109" width="0.0487%" height="15" fill="rgb(234,67,33)" fg:x="1164" fg:w="52"/><text x="1.3398%" y="1119.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (39 samples, 0.04%)</title><rect x="1.1020%" y="1093" width="0.0365%" height="15" fill="rgb(247,98,35)" fg:x="1177" fg:w="39"/><text x="1.3520%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (74 samples, 0.07%)</title><rect x="1.1385%" y="1109" width="0.0693%" height="15" fill="rgb(247,138,52)" fg:x="1216" fg:w="74"/><text x="1.3885%" y="1119.50"></text></g><g><title>core::mem::replace (74 samples, 0.07%)</title><rect x="1.1385%" y="1093" width="0.0693%" height="15" fill="rgb(213,79,30)" fg:x="1216" fg:w="74"/><text x="1.3885%" y="1103.50"></text></g><g><title>core::ptr::read (74 samples, 0.07%)</title><rect x="1.1385%" y="1077" width="0.0693%" height="15" fill="rgb(246,177,23)" fg:x="1216" fg:w="74"/><text x="1.3885%" y="1087.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (210 samples, 0.20%)</title><rect x="1.0158%" y="1125" width="0.1966%" height="15" fill="rgb(230,62,27)" fg:x="1085" fg:w="210"/><text x="1.2658%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="1.5776%" y="1093" width="0.0131%" height="15" fill="rgb(216,154,8)" fg:x="1685" fg:w="14"/><text x="1.8276%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="1.5776%" y="1077" width="0.0131%" height="15" fill="rgb(244,35,45)" fg:x="1685" fg:w="14"/><text x="1.8276%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (66 samples, 0.06%)</title><rect x="1.5355%" y="1109" width="0.0618%" height="15" fill="rgb(251,115,12)" fg:x="1640" fg:w="66"/><text x="1.7855%" y="1119.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="1.5973%" y="1093" width="0.0318%" height="15" fill="rgb(240,54,50)" fg:x="1706" fg:w="34"/><text x="1.8473%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="1.6066%" y="1077" width="0.0225%" height="15" fill="rgb(233,84,52)" fg:x="1716" fg:w="24"/><text x="1.8566%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (24 samples, 0.02%)</title><rect x="1.6066%" y="1061" width="0.0225%" height="15" fill="rgb(207,117,47)" fg:x="1716" fg:w="24"/><text x="1.8566%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (24 samples, 0.02%)</title><rect x="1.6066%" y="1045" width="0.0225%" height="15" fill="rgb(249,43,39)" fg:x="1716" fg:w="24"/><text x="1.8566%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 0.02%)</title><rect x="1.6066%" y="1029" width="0.0225%" height="15" fill="rgb(209,38,44)" fg:x="1716" fg:w="24"/><text x="1.8566%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.02%)</title><rect x="1.6066%" y="1013" width="0.0225%" height="15" fill="rgb(236,212,23)" fg:x="1716" fg:w="24"/><text x="1.8566%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.02%)</title><rect x="1.6066%" y="997" width="0.0225%" height="15" fill="rgb(242,79,21)" fg:x="1716" fg:w="24"/><text x="1.8566%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.02%)</title><rect x="1.6066%" y="981" width="0.0225%" height="15" fill="rgb(211,96,35)" fg:x="1716" fg:w="24"/><text x="1.8566%" y="991.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (16 samples, 0.01%)</title><rect x="1.6141%" y="965" width="0.0150%" height="15" fill="rgb(253,215,40)" fg:x="1724" fg:w="16"/><text x="1.8641%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="1.6141%" y="949" width="0.0150%" height="15" fill="rgb(211,81,21)" fg:x="1724" fg:w="16"/><text x="1.8641%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="1.6291%" y="1013" width="0.0103%" height="15" fill="rgb(208,190,38)" fg:x="1740" fg:w="11"/><text x="1.8791%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="1.6291%" y="997" width="0.0103%" height="15" fill="rgb(235,213,38)" fg:x="1740" fg:w="11"/><text x="1.8791%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="1.6291%" y="981" width="0.0103%" height="15" fill="rgb(237,122,38)" fg:x="1740" fg:w="11"/><text x="1.8791%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="1.6291%" y="965" width="0.0103%" height="15" fill="rgb(244,218,35)" fg:x="1740" fg:w="11"/><text x="1.8791%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="1.6291%" y="949" width="0.0103%" height="15" fill="rgb(240,68,47)" fg:x="1740" fg:w="11"/><text x="1.8791%" y="959.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="1.6291%" y="933" width="0.0103%" height="15" fill="rgb(210,16,53)" fg:x="1740" fg:w="11"/><text x="1.8791%" y="943.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="1.6291%" y="917" width="0.0103%" height="15" fill="rgb(235,124,12)" fg:x="1740" fg:w="11"/><text x="1.8791%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="1.6291%" y="901" width="0.0103%" height="15" fill="rgb(224,169,11)" fg:x="1740" fg:w="11"/><text x="1.8791%" y="911.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (53 samples, 0.05%)</title><rect x="1.5973%" y="1109" width="0.0496%" height="15" fill="rgb(250,166,2)" fg:x="1706" fg:w="53"/><text x="1.8473%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (19 samples, 0.02%)</title><rect x="1.6291%" y="1093" width="0.0178%" height="15" fill="rgb(242,216,29)" fg:x="1740" fg:w="19"/><text x="1.8791%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="1.6291%" y="1077" width="0.0178%" height="15" fill="rgb(230,116,27)" fg:x="1740" fg:w="19"/><text x="1.8791%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="1.6291%" y="1061" width="0.0178%" height="15" fill="rgb(228,99,48)" fg:x="1740" fg:w="19"/><text x="1.8791%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="1.6291%" y="1045" width="0.0178%" height="15" fill="rgb(253,11,6)" fg:x="1740" fg:w="19"/><text x="1.8791%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="1.6291%" y="1029" width="0.0178%" height="15" fill="rgb(247,143,39)" fg:x="1740" fg:w="19"/><text x="1.8791%" y="1039.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (17 samples, 0.02%)</title><rect x="1.6469%" y="1109" width="0.0159%" height="15" fill="rgb(236,97,10)" fg:x="1759" fg:w="17"/><text x="1.8969%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="1.6469%" y="1093" width="0.0159%" height="15" fill="rgb(233,208,19)" fg:x="1759" fg:w="17"/><text x="1.8969%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="1.6469%" y="1077" width="0.0159%" height="15" fill="rgb(216,164,2)" fg:x="1759" fg:w="17"/><text x="1.8969%" y="1087.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="1.6469%" y="1061" width="0.0159%" height="15" fill="rgb(220,129,5)" fg:x="1759" fg:w="17"/><text x="1.8969%" y="1071.50"></text></g><g><title>async_task::runnable::Runnable::run (17 samples, 0.02%)</title><rect x="1.6469%" y="1045" width="0.0159%" height="15" fill="rgb(242,17,10)" fg:x="1759" fg:w="17"/><text x="1.8969%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (43 samples, 0.04%)</title><rect x="1.6778%" y="1077" width="0.0403%" height="15" fill="rgb(242,107,0)" fg:x="1792" fg:w="43"/><text x="1.9278%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (43 samples, 0.04%)</title><rect x="1.6778%" y="1061" width="0.0403%" height="15" fill="rgb(251,28,31)" fg:x="1792" fg:w="43"/><text x="1.9278%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (43 samples, 0.04%)</title><rect x="1.6778%" y="1045" width="0.0403%" height="15" fill="rgb(233,223,10)" fg:x="1792" fg:w="43"/><text x="1.9278%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (47 samples, 0.04%)</title><rect x="1.6778%" y="1109" width="0.0440%" height="15" fill="rgb(215,21,27)" fg:x="1792" fg:w="47"/><text x="1.9278%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (47 samples, 0.04%)</title><rect x="1.6778%" y="1093" width="0.0440%" height="15" fill="rgb(232,23,21)" fg:x="1792" fg:w="47"/><text x="1.9278%" y="1103.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (13 samples, 0.01%)</title><rect x="1.7733%" y="1093" width="0.0122%" height="15" fill="rgb(244,5,23)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (13 samples, 0.01%)</title><rect x="1.7733%" y="1077" width="0.0122%" height="15" fill="rgb(226,81,46)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="1087.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (13 samples, 0.01%)</title><rect x="1.7733%" y="1061" width="0.0122%" height="15" fill="rgb(247,70,30)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (13 samples, 0.01%)</title><rect x="1.7733%" y="1045" width="0.0122%" height="15" fill="rgb(212,68,19)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 0.01%)</title><rect x="1.7733%" y="1029" width="0.0122%" height="15" fill="rgb(240,187,13)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="1.7733%" y="1013" width="0.0122%" height="15" fill="rgb(223,113,26)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="1.7733%" y="997" width="0.0122%" height="15" fill="rgb(206,192,2)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="1.7733%" y="981" width="0.0122%" height="15" fill="rgb(241,108,4)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="1.7733%" y="965" width="0.0122%" height="15" fill="rgb(247,173,49)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="1.7733%" y="949" width="0.0122%" height="15" fill="rgb(224,114,35)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="1.7733%" y="933" width="0.0122%" height="15" fill="rgb(245,159,27)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="1.7733%" y="917" width="0.0122%" height="15" fill="rgb(245,172,44)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="1.7733%" y="901" width="0.0122%" height="15" fill="rgb(236,23,11)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="911.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="1.7733%" y="885" width="0.0122%" height="15" fill="rgb(205,117,38)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="895.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="1.7733%" y="869" width="0.0122%" height="15" fill="rgb(237,72,25)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="1.7733%" y="853" width="0.0122%" height="15" fill="rgb(244,70,9)" fg:x="1894" fg:w="13"/><text x="2.0233%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="1.7854%" y="1093" width="0.0159%" height="15" fill="rgb(217,125,39)" fg:x="1907" fg:w="17"/><text x="2.0354%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (92 samples, 0.09%)</title><rect x="1.7218%" y="1109" width="0.0861%" height="15" fill="rgb(235,36,10)" fg:x="1839" fg:w="92"/><text x="1.9718%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (17 samples, 0.02%)</title><rect x="1.8079%" y="1109" width="0.0159%" height="15" fill="rgb(251,123,47)" fg:x="1931" fg:w="17"/><text x="2.0579%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (45 samples, 0.04%)</title><rect x="1.8238%" y="1109" width="0.0421%" height="15" fill="rgb(221,13,13)" fg:x="1948" fg:w="45"/><text x="2.0738%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="1.9100%" y="1093" width="0.0150%" height="15" fill="rgb(238,131,9)" fg:x="2040" fg:w="16"/><text x="2.1600%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.01%)</title><rect x="1.9100%" y="1077" width="0.0150%" height="15" fill="rgb(211,50,8)" fg:x="2040" fg:w="16"/><text x="2.1600%" y="1087.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (16 samples, 0.01%)</title><rect x="1.9100%" y="1061" width="0.0150%" height="15" fill="rgb(245,182,24)" fg:x="2040" fg:w="16"/><text x="2.1600%" y="1071.50"></text></g><g><title>core::ptr::read (16 samples, 0.01%)</title><rect x="1.9100%" y="1045" width="0.0150%" height="15" fill="rgb(242,14,37)" fg:x="2040" fg:w="16"/><text x="2.1600%" y="1055.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (13 samples, 0.01%)</title><rect x="1.9249%" y="1093" width="0.0122%" height="15" fill="rgb(246,228,12)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (13 samples, 0.01%)</title><rect x="1.9249%" y="1077" width="0.0122%" height="15" fill="rgb(213,55,15)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="1087.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (13 samples, 0.01%)</title><rect x="1.9249%" y="1061" width="0.0122%" height="15" fill="rgb(209,9,3)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (13 samples, 0.01%)</title><rect x="1.9249%" y="1045" width="0.0122%" height="15" fill="rgb(230,59,30)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 0.01%)</title><rect x="1.9249%" y="1029" width="0.0122%" height="15" fill="rgb(209,121,21)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="1.9249%" y="1013" width="0.0122%" height="15" fill="rgb(220,109,13)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="1.9249%" y="997" width="0.0122%" height="15" fill="rgb(232,18,1)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="1.9249%" y="981" width="0.0122%" height="15" fill="rgb(215,41,42)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="1.9249%" y="965" width="0.0122%" height="15" fill="rgb(224,123,36)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="1.9249%" y="949" width="0.0122%" height="15" fill="rgb(240,125,3)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="1.9249%" y="933" width="0.0122%" height="15" fill="rgb(205,98,50)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="1.9249%" y="917" width="0.0122%" height="15" fill="rgb(205,185,37)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="1.9249%" y="901" width="0.0122%" height="15" fill="rgb(238,207,15)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="911.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="1.9249%" y="885" width="0.0122%" height="15" fill="rgb(213,199,42)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="895.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="1.9249%" y="869" width="0.0122%" height="15" fill="rgb(235,201,11)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="1.9249%" y="853" width="0.0122%" height="15" fill="rgb(207,46,11)" fg:x="2056" fg:w="13"/><text x="2.1749%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (781 samples, 0.73%)</title><rect x="1.2125%" y="1125" width="0.7312%" height="15" fill="rgb(241,35,35)" fg:x="1295" fg:w="781"/><text x="1.4625%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (83 samples, 0.08%)</title><rect x="1.8660%" y="1109" width="0.0777%" height="15" fill="rgb(243,32,47)" fg:x="1993" fg:w="83"/><text x="2.1160%" y="1119.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (96 samples, 0.09%)</title><rect x="1.9437%" y="1125" width="0.0899%" height="15" fill="rgb(247,202,23)" fg:x="2076" fg:w="96"/><text x="2.1937%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (16 samples, 0.01%)</title><rect x="2.0186%" y="1109" width="0.0150%" height="15" fill="rgb(219,102,11)" fg:x="2156" fg:w="16"/><text x="2.2686%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="2.0186%" y="1093" width="0.0150%" height="15" fill="rgb(243,110,44)" fg:x="2156" fg:w="16"/><text x="2.2686%" y="1103.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.01%)</title><rect x="2.0186%" y="1077" width="0.0150%" height="15" fill="rgb(222,74,54)" fg:x="2156" fg:w="16"/><text x="2.2686%" y="1087.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (16 samples, 0.01%)</title><rect x="2.0186%" y="1061" width="0.0150%" height="15" fill="rgb(216,99,12)" fg:x="2156" fg:w="16"/><text x="2.2686%" y="1071.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="2.0336%" y="1125" width="0.0122%" height="15" fill="rgb(226,22,26)" fg:x="2172" fg:w="13"/><text x="2.2836%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (26 samples, 0.02%)</title><rect x="2.0757%" y="1077" width="0.0243%" height="15" fill="rgb(217,163,10)" fg:x="2217" fg:w="26"/><text x="2.3257%" y="1087.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (63 samples, 0.06%)</title><rect x="2.0457%" y="1125" width="0.0590%" height="15" fill="rgb(213,25,53)" fg:x="2185" fg:w="63"/><text x="2.2957%" y="1135.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (43 samples, 0.04%)</title><rect x="2.0645%" y="1109" width="0.0403%" height="15" fill="rgb(252,105,26)" fg:x="2205" fg:w="43"/><text x="2.3145%" y="1119.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (37 samples, 0.03%)</title><rect x="2.0701%" y="1093" width="0.0346%" height="15" fill="rgb(220,39,43)" fg:x="2211" fg:w="37"/><text x="2.3201%" y="1103.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (24 samples, 0.02%)</title><rect x="2.1075%" y="1125" width="0.0225%" height="15" fill="rgb(229,68,48)" fg:x="2251" fg:w="24"/><text x="2.3575%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (111 samples, 0.10%)</title><rect x="2.1300%" y="1125" width="0.1039%" height="15" fill="rgb(252,8,32)" fg:x="2275" fg:w="111"/><text x="2.3800%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (67 samples, 0.06%)</title><rect x="2.1712%" y="1109" width="0.0627%" height="15" fill="rgb(223,20,43)" fg:x="2319" fg:w="67"/><text x="2.4212%" y="1119.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (58 samples, 0.05%)</title><rect x="2.1796%" y="1093" width="0.0543%" height="15" fill="rgb(229,81,49)" fg:x="2328" fg:w="58"/><text x="2.4296%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.02%)</title><rect x="2.2143%" y="1077" width="0.0197%" height="15" fill="rgb(236,28,36)" fg:x="2365" fg:w="21"/><text x="2.4643%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="2.2629%" y="1077" width="0.0112%" height="15" fill="rgb(249,185,26)" fg:x="2417" fg:w="12"/><text x="2.5129%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="2.2629%" y="1061" width="0.0112%" height="15" fill="rgb(249,174,33)" fg:x="2417" fg:w="12"/><text x="2.5129%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="2.2629%" y="1045" width="0.0112%" height="15" fill="rgb(233,201,37)" fg:x="2417" fg:w="12"/><text x="2.5129%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="2.2629%" y="1029" width="0.0112%" height="15" fill="rgb(221,78,26)" fg:x="2417" fg:w="12"/><text x="2.5129%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="2.2629%" y="1013" width="0.0112%" height="15" fill="rgb(250,127,30)" fg:x="2417" fg:w="12"/><text x="2.5129%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="2.2629%" y="997" width="0.0112%" height="15" fill="rgb(230,49,44)" fg:x="2417" fg:w="12"/><text x="2.5129%" y="1007.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="2.2629%" y="981" width="0.0112%" height="15" fill="rgb(229,67,23)" fg:x="2417" fg:w="12"/><text x="2.5129%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="2.2629%" y="965" width="0.0112%" height="15" fill="rgb(249,83,47)" fg:x="2417" fg:w="12"/><text x="2.5129%" y="975.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (60 samples, 0.06%)</title><rect x="2.2339%" y="1125" width="0.0562%" height="15" fill="rgb(215,43,3)" fg:x="2386" fg:w="60"/><text x="2.4839%" y="1135.50"></text></g><g><title>value_trait::Builder::object (29 samples, 0.03%)</title><rect x="2.2629%" y="1109" width="0.0272%" height="15" fill="rgb(238,154,13)" fg:x="2417" fg:w="29"/><text x="2.5129%" y="1119.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (29 samples, 0.03%)</title><rect x="2.2629%" y="1093" width="0.0272%" height="15" fill="rgb(219,56,2)" fg:x="2417" fg:w="29"/><text x="2.5129%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (17 samples, 0.02%)</title><rect x="2.2742%" y="1077" width="0.0159%" height="15" fill="rgb(233,0,4)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="1087.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (17 samples, 0.02%)</title><rect x="2.2742%" y="1061" width="0.0159%" height="15" fill="rgb(235,30,7)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (17 samples, 0.02%)</title><rect x="2.2742%" y="1045" width="0.0159%" height="15" fill="rgb(250,79,13)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (17 samples, 0.02%)</title><rect x="2.2742%" y="1029" width="0.0159%" height="15" fill="rgb(211,146,34)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="1039.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (17 samples, 0.02%)</title><rect x="2.2742%" y="1013" width="0.0159%" height="15" fill="rgb(228,22,38)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="1023.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="2.2742%" y="997" width="0.0159%" height="15" fill="rgb(235,168,5)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="2.2742%" y="981" width="0.0159%" height="15" fill="rgb(221,155,16)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.02%)</title><rect x="2.2742%" y="965" width="0.0159%" height="15" fill="rgb(215,215,53)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="2.2742%" y="949" width="0.0159%" height="15" fill="rgb(223,4,10)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="2.2742%" y="933" width="0.0159%" height="15" fill="rgb(234,103,6)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="943.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="2.2742%" y="917" width="0.0159%" height="15" fill="rgb(227,97,0)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="927.50"></text></g><g><title>__rg_alloc (17 samples, 0.02%)</title><rect x="2.2742%" y="901" width="0.0159%" height="15" fill="rgb(234,150,53)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.02%)</title><rect x="2.2742%" y="885" width="0.0159%" height="15" fill="rgb(228,201,54)" fg:x="2429" fg:w="17"/><text x="2.5242%" y="895.50"></text></g><g><title>__GI___pthread_cond_wait (12 samples, 0.01%)</title><rect x="2.3060%" y="1125" width="0.0112%" height="15" fill="rgb(222,22,37)" fg:x="2463" fg:w="12"/><text x="2.5560%" y="1135.50"></text></g><g><title>__GI___pthread_mutex_trylock (12 samples, 0.01%)</title><rect x="2.3172%" y="1125" width="0.0112%" height="15" fill="rgb(237,53,32)" fg:x="2475" fg:w="12"/><text x="2.5672%" y="1135.50"></text></g><g><title>___pthread_mutex_lock (53 samples, 0.05%)</title><rect x="2.3369%" y="1125" width="0.0496%" height="15" fill="rgb(233,25,53)" fg:x="2496" fg:w="53"/><text x="2.5869%" y="1135.50"></text></g><g><title>___pthread_rwlock_unlock (18 samples, 0.02%)</title><rect x="2.3940%" y="1125" width="0.0169%" height="15" fill="rgb(210,40,34)" fg:x="2557" fg:w="18"/><text x="2.6440%" y="1135.50"></text></g><g><title>__clock_gettime_2 (59 samples, 0.06%)</title><rect x="2.4109%" y="1125" width="0.0552%" height="15" fill="rgb(241,220,44)" fg:x="2575" fg:w="59"/><text x="2.6609%" y="1135.50"></text></g><g><title>__futex_abstimed_wait_common (16 samples, 0.01%)</title><rect x="2.4661%" y="1125" width="0.0150%" height="15" fill="rgb(235,28,35)" fg:x="2634" fg:w="16"/><text x="2.7161%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (31 samples, 0.03%)</title><rect x="2.4811%" y="1125" width="0.0290%" height="15" fill="rgb(210,56,17)" fg:x="2650" fg:w="31"/><text x="2.7311%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (60 samples, 0.06%)</title><rect x="2.5120%" y="1125" width="0.0562%" height="15" fill="rgb(224,130,29)" fg:x="2683" fg:w="60"/><text x="2.7620%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (45 samples, 0.04%)</title><rect x="2.5691%" y="1125" width="0.0421%" height="15" fill="rgb(235,212,8)" fg:x="2744" fg:w="45"/><text x="2.8191%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (37 samples, 0.03%)</title><rect x="2.7011%" y="1109" width="0.0346%" height="15" fill="rgb(223,33,50)" fg:x="2885" fg:w="37"/><text x="2.9511%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (37 samples, 0.03%)</title><rect x="2.7011%" y="1093" width="0.0346%" height="15" fill="rgb(219,149,13)" fg:x="2885" fg:w="37"/><text x="2.9511%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (37 samples, 0.03%)</title><rect x="2.7011%" y="1077" width="0.0346%" height="15" fill="rgb(250,156,29)" fg:x="2885" fg:w="37"/><text x="2.9511%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="2.7423%" y="1109" width="0.0103%" height="15" fill="rgb(216,193,19)" fg:x="2929" fg:w="11"/><text x="2.9923%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="2.7423%" y="1093" width="0.0103%" height="15" fill="rgb(216,135,14)" fg:x="2929" fg:w="11"/><text x="2.9923%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="2.7423%" y="1077" width="0.0103%" height="15" fill="rgb(241,47,5)" fg:x="2929" fg:w="11"/><text x="2.9923%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="2.7423%" y="1061" width="0.0103%" height="15" fill="rgb(233,42,35)" fg:x="2929" fg:w="11"/><text x="2.9923%" y="1071.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="2.7423%" y="1045" width="0.0103%" height="15" fill="rgb(231,13,6)" fg:x="2929" fg:w="11"/><text x="2.9923%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="2.7423%" y="1029" width="0.0103%" height="15" fill="rgb(207,181,40)" fg:x="2929" fg:w="11"/><text x="2.9923%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (138 samples, 0.13%)</title><rect x="2.6300%" y="1125" width="0.1292%" height="15" fill="rgb(254,173,49)" fg:x="2809" fg:w="138"/><text x="2.8800%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (88 samples, 0.08%)</title><rect x="2.7592%" y="1125" width="0.0824%" height="15" fill="rgb(221,1,38)" fg:x="2947" fg:w="88"/><text x="3.0092%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (21 samples, 0.02%)</title><rect x="2.8219%" y="1109" width="0.0197%" height="15" fill="rgb(206,124,46)" fg:x="3014" fg:w="21"/><text x="3.0719%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (21 samples, 0.02%)</title><rect x="2.8219%" y="1093" width="0.0197%" height="15" fill="rgb(249,21,11)" fg:x="3014" fg:w="21"/><text x="3.0719%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (21 samples, 0.02%)</title><rect x="2.8219%" y="1077" width="0.0197%" height="15" fill="rgb(222,201,40)" fg:x="3014" fg:w="21"/><text x="3.0719%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (21 samples, 0.02%)</title><rect x="2.8219%" y="1061" width="0.0197%" height="15" fill="rgb(235,61,29)" fg:x="3014" fg:w="21"/><text x="3.0719%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="2.8219%" y="1045" width="0.0197%" height="15" fill="rgb(219,207,3)" fg:x="3014" fg:w="21"/><text x="3.0719%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="2.8219%" y="1029" width="0.0197%" height="15" fill="rgb(222,56,46)" fg:x="3014" fg:w="21"/><text x="3.0719%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.02%)</title><rect x="2.8219%" y="1013" width="0.0197%" height="15" fill="rgb(239,76,54)" fg:x="3014" fg:w="21"/><text x="3.0719%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="2.8219%" y="997" width="0.0197%" height="15" fill="rgb(231,124,27)" fg:x="3014" fg:w="21"/><text x="3.0719%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="2.8219%" y="981" width="0.0197%" height="15" fill="rgb(249,195,6)" fg:x="3014" fg:w="21"/><text x="3.0719%" y="991.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="2.8219%" y="965" width="0.0197%" height="15" fill="rgb(237,174,47)" fg:x="3014" fg:w="21"/><text x="3.0719%" y="975.50"></text></g><g><title>__rg_alloc (21 samples, 0.02%)</title><rect x="2.8219%" y="949" width="0.0197%" height="15" fill="rgb(206,201,31)" fg:x="3014" fg:w="21"/><text x="3.0719%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (21 samples, 0.02%)</title><rect x="2.8219%" y="933" width="0.0197%" height="15" fill="rgb(231,57,52)" fg:x="3014" fg:w="21"/><text x="3.0719%" y="943.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (42 samples, 0.04%)</title><rect x="2.8415%" y="1125" width="0.0393%" height="15" fill="rgb(248,177,22)" fg:x="3035" fg:w="42"/><text x="3.0915%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (21 samples, 0.02%)</title><rect x="2.8612%" y="1109" width="0.0197%" height="15" fill="rgb(215,211,37)" fg:x="3056" fg:w="21"/><text x="3.1112%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (21 samples, 0.02%)</title><rect x="2.8612%" y="1093" width="0.0197%" height="15" fill="rgb(241,128,51)" fg:x="3056" fg:w="21"/><text x="3.1112%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (21 samples, 0.02%)</title><rect x="2.8612%" y="1077" width="0.0197%" height="15" fill="rgb(227,165,31)" fg:x="3056" fg:w="21"/><text x="3.1112%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (14 samples, 0.01%)</title><rect x="2.8809%" y="1125" width="0.0131%" height="15" fill="rgb(228,167,24)" fg:x="3077" fg:w="14"/><text x="3.1309%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (65 samples, 0.06%)</title><rect x="2.8940%" y="1125" width="0.0609%" height="15" fill="rgb(228,143,12)" fg:x="3091" fg:w="65"/><text x="3.1440%" y="1135.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (51 samples, 0.05%)</title><rect x="2.9071%" y="1109" width="0.0477%" height="15" fill="rgb(249,149,8)" fg:x="3105" fg:w="51"/><text x="3.1571%" y="1119.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (51 samples, 0.05%)</title><rect x="2.9071%" y="1093" width="0.0477%" height="15" fill="rgb(243,35,44)" fg:x="3105" fg:w="51"/><text x="3.1571%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.01%)</title><rect x="2.9942%" y="917" width="0.0150%" height="15" fill="rgb(246,89,9)" fg:x="3198" fg:w="16"/><text x="3.2442%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.01%)</title><rect x="2.9942%" y="901" width="0.0150%" height="15" fill="rgb(233,213,13)" fg:x="3198" fg:w="16"/><text x="3.2442%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.01%)</title><rect x="2.9942%" y="885" width="0.0150%" height="15" fill="rgb(233,141,41)" fg:x="3198" fg:w="16"/><text x="3.2442%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.01%)</title><rect x="2.9942%" y="869" width="0.0150%" height="15" fill="rgb(239,167,4)" fg:x="3198" fg:w="16"/><text x="3.2442%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.01%)</title><rect x="2.9942%" y="853" width="0.0150%" height="15" fill="rgb(209,217,16)" fg:x="3198" fg:w="16"/><text x="3.2442%" y="863.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.01%)</title><rect x="2.9942%" y="837" width="0.0150%" height="15" fill="rgb(219,88,35)" fg:x="3198" fg:w="16"/><text x="3.2442%" y="847.50"></text></g><g><title>__rg_alloc (16 samples, 0.01%)</title><rect x="2.9942%" y="821" width="0.0150%" height="15" fill="rgb(220,193,23)" fg:x="3198" fg:w="16"/><text x="3.2442%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.01%)</title><rect x="2.9942%" y="805" width="0.0150%" height="15" fill="rgb(230,90,52)" fg:x="3198" fg:w="16"/><text x="3.2442%" y="815.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="2.9942%" y="1029" width="0.0206%" height="15" fill="rgb(252,106,19)" fg:x="3198" fg:w="22"/><text x="3.2442%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (22 samples, 0.02%)</title><rect x="2.9942%" y="1013" width="0.0206%" height="15" fill="rgb(206,74,20)" fg:x="3198" fg:w="22"/><text x="3.2442%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (22 samples, 0.02%)</title><rect x="2.9942%" y="997" width="0.0206%" height="15" fill="rgb(230,138,44)" fg:x="3198" fg:w="22"/><text x="3.2442%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (22 samples, 0.02%)</title><rect x="2.9942%" y="981" width="0.0206%" height="15" fill="rgb(235,182,43)" fg:x="3198" fg:w="22"/><text x="3.2442%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.02%)</title><rect x="2.9942%" y="965" width="0.0206%" height="15" fill="rgb(242,16,51)" fg:x="3198" fg:w="22"/><text x="3.2442%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.02%)</title><rect x="2.9942%" y="949" width="0.0206%" height="15" fill="rgb(248,9,4)" fg:x="3198" fg:w="22"/><text x="3.2442%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.02%)</title><rect x="2.9942%" y="933" width="0.0206%" height="15" fill="rgb(210,31,22)" fg:x="3198" fg:w="22"/><text x="3.2442%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (72 samples, 0.07%)</title><rect x="2.9548%" y="1125" width="0.0674%" height="15" fill="rgb(239,54,39)" fg:x="3156" fg:w="72"/><text x="3.2048%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (30 samples, 0.03%)</title><rect x="2.9942%" y="1109" width="0.0281%" height="15" fill="rgb(230,99,41)" fg:x="3198" fg:w="30"/><text x="3.2442%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (30 samples, 0.03%)</title><rect x="2.9942%" y="1093" width="0.0281%" height="15" fill="rgb(253,106,12)" fg:x="3198" fg:w="30"/><text x="3.2442%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30 samples, 0.03%)</title><rect x="2.9942%" y="1077" width="0.0281%" height="15" fill="rgb(213,46,41)" fg:x="3198" fg:w="30"/><text x="3.2442%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.03%)</title><rect x="2.9942%" y="1061" width="0.0281%" height="15" fill="rgb(215,133,35)" fg:x="3198" fg:w="30"/><text x="3.2442%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 0.03%)</title><rect x="2.9942%" y="1045" width="0.0281%" height="15" fill="rgb(213,28,5)" fg:x="3198" fg:w="30"/><text x="3.2442%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (110 samples, 0.10%)</title><rect x="3.0775%" y="1061" width="0.1030%" height="15" fill="rgb(215,77,49)" fg:x="3287" fg:w="110"/><text x="3.3275%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (110 samples, 0.10%)</title><rect x="3.0775%" y="1045" width="0.1030%" height="15" fill="rgb(248,100,22)" fg:x="3287" fg:w="110"/><text x="3.3275%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (110 samples, 0.10%)</title><rect x="3.0775%" y="1029" width="0.1030%" height="15" fill="rgb(208,67,9)" fg:x="3287" fg:w="110"/><text x="3.3275%" y="1039.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (110 samples, 0.10%)</title><rect x="3.0775%" y="1013" width="0.1030%" height="15" fill="rgb(219,133,21)" fg:x="3287" fg:w="110"/><text x="3.3275%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (115 samples, 0.11%)</title><rect x="3.0775%" y="1077" width="0.1077%" height="15" fill="rgb(246,46,29)" fg:x="3287" fg:w="115"/><text x="3.3275%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="3.1852%" y="1061" width="0.0477%" height="15" fill="rgb(246,185,52)" fg:x="3402" fg:w="51"/><text x="3.4352%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (51 samples, 0.05%)</title><rect x="3.1852%" y="1045" width="0.0477%" height="15" fill="rgb(252,136,11)" fg:x="3402" fg:w="51"/><text x="3.4352%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (51 samples, 0.05%)</title><rect x="3.1852%" y="1029" width="0.0477%" height="15" fill="rgb(219,138,53)" fg:x="3402" fg:w="51"/><text x="3.4352%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (51 samples, 0.05%)</title><rect x="3.1852%" y="1013" width="0.0477%" height="15" fill="rgb(211,51,23)" fg:x="3402" fg:w="51"/><text x="3.4352%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (51 samples, 0.05%)</title><rect x="3.1852%" y="997" width="0.0477%" height="15" fill="rgb(247,221,28)" fg:x="3402" fg:w="51"/><text x="3.4352%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (62 samples, 0.06%)</title><rect x="3.1852%" y="1077" width="0.0580%" height="15" fill="rgb(251,222,45)" fg:x="3402" fg:w="62"/><text x="3.4352%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (11 samples, 0.01%)</title><rect x="3.2329%" y="1061" width="0.0103%" height="15" fill="rgb(217,162,53)" fg:x="3453" fg:w="11"/><text x="3.4829%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="3.2329%" y="1045" width="0.0103%" height="15" fill="rgb(229,93,14)" fg:x="3453" fg:w="11"/><text x="3.4829%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="3.2329%" y="1029" width="0.0103%" height="15" fill="rgb(209,67,49)" fg:x="3453" fg:w="11"/><text x="3.4829%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="3.2329%" y="1013" width="0.0103%" height="15" fill="rgb(213,87,29)" fg:x="3453" fg:w="11"/><text x="3.4829%" y="1023.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="3.2329%" y="997" width="0.0103%" height="15" fill="rgb(205,151,52)" fg:x="3453" fg:w="11"/><text x="3.4829%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="3.2329%" y="981" width="0.0103%" height="15" fill="rgb(253,215,39)" fg:x="3453" fg:w="11"/><text x="3.4829%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (247 samples, 0.23%)</title><rect x="3.0222%" y="1125" width="0.2313%" height="15" fill="rgb(221,220,41)" fg:x="3228" fg:w="247"/><text x="3.2722%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (188 samples, 0.18%)</title><rect x="3.0775%" y="1109" width="0.1760%" height="15" fill="rgb(218,133,21)" fg:x="3287" fg:w="188"/><text x="3.3275%" y="1119.50"></text></g><g><title>core::mem::drop (188 samples, 0.18%)</title><rect x="3.0775%" y="1093" width="0.1760%" height="15" fill="rgb(221,193,43)" fg:x="3287" fg:w="188"/><text x="3.3275%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="3.2432%" y="1077" width="0.0103%" height="15" fill="rgb(240,128,52)" fg:x="3464" fg:w="11"/><text x="3.4932%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="3.2432%" y="1061" width="0.0103%" height="15" fill="rgb(253,114,12)" fg:x="3464" fg:w="11"/><text x="3.4932%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (11 samples, 0.01%)</title><rect x="3.2432%" y="1045" width="0.0103%" height="15" fill="rgb(215,223,47)" fg:x="3464" fg:w="11"/><text x="3.4932%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="3.2432%" y="1029" width="0.0103%" height="15" fill="rgb(248,225,23)" fg:x="3464" fg:w="11"/><text x="3.4932%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (11 samples, 0.01%)</title><rect x="3.2432%" y="1013" width="0.0103%" height="15" fill="rgb(250,108,0)" fg:x="3464" fg:w="11"/><text x="3.4932%" y="1023.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (13 samples, 0.01%)</title><rect x="3.2591%" y="1125" width="0.0122%" height="15" fill="rgb(228,208,7)" fg:x="3481" fg:w="13"/><text x="3.5091%" y="1135.50"></text></g><g><title>async_executor::State::notify (11 samples, 0.01%)</title><rect x="3.2713%" y="1125" width="0.0103%" height="15" fill="rgb(244,45,10)" fg:x="3494" fg:w="11"/><text x="3.5213%" y="1135.50"></text></g><g><title>async_executor::Ticker::sleep (35 samples, 0.03%)</title><rect x="3.2816%" y="1125" width="0.0328%" height="15" fill="rgb(207,125,25)" fg:x="3505" fg:w="35"/><text x="3.5316%" y="1135.50"></text></g><g><title>async_executor::steal (89 samples, 0.08%)</title><rect x="3.3200%" y="1125" width="0.0833%" height="15" fill="rgb(210,195,18)" fg:x="3546" fg:w="89"/><text x="3.5700%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (61 samples, 0.06%)</title><rect x="3.4033%" y="1125" width="0.0571%" height="15" fill="rgb(249,80,12)" fg:x="3635" fg:w="61"/><text x="3.6533%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (30 samples, 0.03%)</title><rect x="3.4604%" y="1125" width="0.0281%" height="15" fill="rgb(221,65,9)" fg:x="3696" fg:w="30"/><text x="3.7104%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (29 samples, 0.03%)</title><rect x="3.4951%" y="1125" width="0.0272%" height="15" fill="rgb(235,49,36)" fg:x="3733" fg:w="29"/><text x="3.7451%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (123 samples, 0.12%)</title><rect x="3.5231%" y="1125" width="0.1152%" height="15" fill="rgb(225,32,20)" fg:x="3763" fg:w="123"/><text x="3.7731%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (128 samples, 0.12%)</title><rect x="3.6383%" y="1125" width="0.1198%" height="15" fill="rgb(215,141,46)" fg:x="3886" fg:w="128"/><text x="3.8883%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="3.7581%" y="1125" width="0.0169%" height="15" fill="rgb(250,160,47)" fg:x="4014" fg:w="18"/><text x="4.0081%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (15 samples, 0.01%)</title><rect x="3.7750%" y="1125" width="0.0140%" height="15" fill="rgb(216,222,40)" fg:x="4032" fg:w="15"/><text x="4.0250%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (63 samples, 0.06%)</title><rect x="3.7890%" y="1125" width="0.0590%" height="15" fill="rgb(234,217,39)" fg:x="4047" fg:w="63"/><text x="4.0390%" y="1135.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.05%)</title><rect x="3.7984%" y="1109" width="0.0496%" height="15" fill="rgb(207,178,40)" fg:x="4057" fg:w="53"/><text x="4.0484%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (27 samples, 0.03%)</title><rect x="3.8518%" y="1125" width="0.0253%" height="15" fill="rgb(221,136,13)" fg:x="4114" fg:w="27"/><text x="4.1018%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (27 samples, 0.03%)</title><rect x="3.8518%" y="1109" width="0.0253%" height="15" fill="rgb(249,199,10)" fg:x="4114" fg:w="27"/><text x="4.1018%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="3.8771%" y="1125" width="0.0215%" height="15" fill="rgb(249,222,13)" fg:x="4141" fg:w="23"/><text x="4.1271%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="3.8986%" y="1125" width="0.0150%" height="15" fill="rgb(244,185,38)" fg:x="4164" fg:w="16"/><text x="4.1486%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (33 samples, 0.03%)</title><rect x="3.9136%" y="1125" width="0.0309%" height="15" fill="rgb(236,202,9)" fg:x="4180" fg:w="33"/><text x="4.1636%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (34 samples, 0.03%)</title><rect x="3.9445%" y="1125" width="0.0318%" height="15" fill="rgb(250,229,37)" fg:x="4213" fg:w="34"/><text x="4.1945%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (13 samples, 0.01%)</title><rect x="3.9763%" y="1125" width="0.0122%" height="15" fill="rgb(206,174,23)" fg:x="4247" fg:w="13"/><text x="4.2263%" y="1135.50"></text></g><g><title>event_listener::Event::listen (21 samples, 0.02%)</title><rect x="3.9978%" y="1125" width="0.0197%" height="15" fill="rgb(211,33,43)" fg:x="4270" fg:w="21"/><text x="4.2478%" y="1135.50"></text></g><g><title>event_listener::Event::inner (16 samples, 0.01%)</title><rect x="4.0025%" y="1109" width="0.0150%" height="15" fill="rgb(245,58,50)" fg:x="4275" fg:w="16"/><text x="4.2525%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (16 samples, 0.01%)</title><rect x="4.0025%" y="1093" width="0.0150%" height="15" fill="rgb(244,68,36)" fg:x="4275" fg:w="16"/><text x="4.2525%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.01%)</title><rect x="4.0025%" y="1077" width="0.0150%" height="15" fill="rgb(232,229,15)" fg:x="4275" fg:w="16"/><text x="4.2525%" y="1087.50"></text></g><g><title>event_listener::Event::notify (154 samples, 0.14%)</title><rect x="4.0175%" y="1125" width="0.1442%" height="15" fill="rgb(254,30,23)" fg:x="4291" fg:w="154"/><text x="4.2675%" y="1135.50"></text></g><g><title>event_listener::full_fence (44 samples, 0.04%)</title><rect x="4.1205%" y="1109" width="0.0412%" height="15" fill="rgb(235,160,14)" fg:x="4401" fg:w="44"/><text x="4.3705%" y="1119.50"></text></g><g><title>event_listener::List::notify (15 samples, 0.01%)</title><rect x="4.1617%" y="1125" width="0.0140%" height="15" fill="rgb(212,155,44)" fg:x="4445" fg:w="15"/><text x="4.4117%" y="1135.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (40 samples, 0.04%)</title><rect x="4.1757%" y="1125" width="0.0375%" height="15" fill="rgb(226,2,50)" fg:x="4460" fg:w="40"/><text x="4.4257%" y="1135.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (29 samples, 0.03%)</title><rect x="4.2132%" y="1125" width="0.0272%" height="15" fill="rgb(234,177,6)" fg:x="4500" fg:w="29"/><text x="4.4632%" y="1135.50"></text></g><g><title>parking::Inner::park (31 samples, 0.03%)</title><rect x="4.2403%" y="1125" width="0.0290%" height="15" fill="rgb(217,24,9)" fg:x="4529" fg:w="31"/><text x="4.4903%" y="1135.50"></text></g><g><title>parking::Unparker::unpark (19 samples, 0.02%)</title><rect x="4.2693%" y="1125" width="0.0178%" height="15" fill="rgb(220,13,46)" fg:x="4560" fg:w="19"/><text x="4.5193%" y="1135.50"></text></g><g><title>rust_alloc (91 samples, 0.09%)</title><rect x="4.2881%" y="1125" width="0.0852%" height="15" fill="rgb(239,221,27)" fg:x="4580" fg:w="91"/><text x="4.5381%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (55 samples, 0.05%)</title><rect x="4.4032%" y="1125" width="0.0515%" height="15" fill="rgb(222,198,25)" fg:x="4703" fg:w="55"/><text x="4.6532%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (47 samples, 0.04%)</title><rect x="4.4557%" y="1125" width="0.0440%" height="15" fill="rgb(211,99,13)" fg:x="4759" fg:w="47"/><text x="4.7057%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (23 samples, 0.02%)</title><rect x="4.4997%" y="1125" width="0.0215%" height="15" fill="rgb(232,111,31)" fg:x="4806" fg:w="23"/><text x="4.7497%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.01%)</title><rect x="4.5072%" y="1109" width="0.0140%" height="15" fill="rgb(245,82,37)" fg:x="4814" fg:w="15"/><text x="4.7572%" y="1119.50"></text></g><g><title>tremor_common::time::nanotime (76 samples, 0.07%)</title><rect x="4.5221%" y="1125" width="0.0712%" height="15" fill="rgb(227,149,46)" fg:x="4830" fg:w="76"/><text x="4.7721%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (76 samples, 0.07%)</title><rect x="4.5221%" y="1109" width="0.0712%" height="15" fill="rgb(218,36,50)" fg:x="4830" fg:w="76"/><text x="4.7721%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (76 samples, 0.07%)</title><rect x="4.5221%" y="1093" width="0.0712%" height="15" fill="rgb(226,80,48)" fg:x="4830" fg:w="76"/><text x="4.7721%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (76 samples, 0.07%)</title><rect x="4.5221%" y="1077" width="0.0712%" height="15" fill="rgb(238,224,15)" fg:x="4830" fg:w="76"/><text x="4.7721%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (50 samples, 0.05%)</title><rect x="4.5980%" y="1125" width="0.0468%" height="15" fill="rgb(241,136,10)" fg:x="4911" fg:w="50"/><text x="4.8480%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (18 samples, 0.02%)</title><rect x="4.6279%" y="1109" width="0.0169%" height="15" fill="rgb(208,32,45)" fg:x="4943" fg:w="18"/><text x="4.8779%" y="1119.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (18 samples, 0.02%)</title><rect x="4.6279%" y="1093" width="0.0169%" height="15" fill="rgb(207,135,9)" fg:x="4943" fg:w="18"/><text x="4.8779%" y="1103.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="4.6279%" y="1077" width="0.0169%" height="15" fill="rgb(206,86,44)" fg:x="4943" fg:w="18"/><text x="4.8779%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="4.6279%" y="1061" width="0.0169%" height="15" fill="rgb(245,177,15)" fg:x="4943" fg:w="18"/><text x="4.8779%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="4.6279%" y="1045" width="0.0169%" height="15" fill="rgb(206,64,50)" fg:x="4943" fg:w="18"/><text x="4.8779%" y="1055.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="4.7253%" y="1077" width="0.0112%" height="15" fill="rgb(234,36,40)" fg:x="5047" fg:w="12"/><text x="4.9753%" y="1087.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="4.7253%" y="1061" width="0.0112%" height="15" fill="rgb(213,64,8)" fg:x="5047" fg:w="12"/><text x="4.9753%" y="1071.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (12 samples, 0.01%)</title><rect x="4.7253%" y="1045" width="0.0112%" height="15" fill="rgb(210,75,36)" fg:x="5047" fg:w="12"/><text x="4.9753%" y="1055.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (12 samples, 0.01%)</title><rect x="4.7253%" y="1029" width="0.0112%" height="15" fill="rgb(229,88,21)" fg:x="5047" fg:w="12"/><text x="4.9753%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="4.7187%" y="1109" width="0.0290%" height="15" fill="rgb(252,204,47)" fg:x="5040" fg:w="31"/><text x="4.9687%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (31 samples, 0.03%)</title><rect x="4.7187%" y="1093" width="0.0290%" height="15" fill="rgb(208,77,27)" fg:x="5040" fg:w="31"/><text x="4.9687%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="4.7590%" y="1093" width="0.0122%" height="15" fill="rgb(221,76,26)" fg:x="5083" fg:w="13"/><text x="5.0090%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (151 samples, 0.14%)</title><rect x="4.6448%" y="1125" width="0.1414%" height="15" fill="rgb(225,139,18)" fg:x="4961" fg:w="151"/><text x="4.8948%" y="1135.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (29 samples, 0.03%)</title><rect x="4.7590%" y="1109" width="0.0272%" height="15" fill="rgb(230,137,11)" fg:x="5083" fg:w="29"/><text x="5.0090%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (16 samples, 0.01%)</title><rect x="4.7712%" y="1093" width="0.0150%" height="15" fill="rgb(212,28,1)" fg:x="5096" fg:w="16"/><text x="5.0212%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="4.7712%" y="1077" width="0.0150%" height="15" fill="rgb(248,164,17)" fg:x="5096" fg:w="16"/><text x="5.0212%" y="1087.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="4.7712%" y="1061" width="0.0150%" height="15" fill="rgb(222,171,42)" fg:x="5096" fg:w="16"/><text x="5.0212%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (31 samples, 0.03%)</title><rect x="4.7862%" y="1125" width="0.0290%" height="15" fill="rgb(243,84,45)" fg:x="5112" fg:w="31"/><text x="5.0362%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (18 samples, 0.02%)</title><rect x="4.8152%" y="1125" width="0.0169%" height="15" fill="rgb(252,49,23)" fg:x="5143" fg:w="18"/><text x="5.0652%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="4.9275%" y="981" width="0.0103%" height="15" fill="rgb(215,19,7)" fg:x="5263" fg:w="11"/><text x="5.1775%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="4.9275%" y="965" width="0.0103%" height="15" fill="rgb(238,81,41)" fg:x="5263" fg:w="11"/><text x="5.1775%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="4.9275%" y="949" width="0.0103%" height="15" fill="rgb(210,199,37)" fg:x="5263" fg:w="11"/><text x="5.1775%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="4.9275%" y="933" width="0.0103%" height="15" fill="rgb(244,192,49)" fg:x="5263" fg:w="11"/><text x="5.1775%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="4.9275%" y="917" width="0.0103%" height="15" fill="rgb(226,211,11)" fg:x="5263" fg:w="11"/><text x="5.1775%" y="927.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="4.9275%" y="901" width="0.0103%" height="15" fill="rgb(236,162,54)" fg:x="5263" fg:w="11"/><text x="5.1775%" y="911.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="4.9275%" y="885" width="0.0103%" height="15" fill="rgb(220,229,9)" fg:x="5263" fg:w="11"/><text x="5.1775%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="4.9275%" y="869" width="0.0103%" height="15" fill="rgb(250,87,22)" fg:x="5263" fg:w="11"/><text x="5.1775%" y="879.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="4.9219%" y="1109" width="0.0300%" height="15" fill="rgb(239,43,17)" fg:x="5257" fg:w="32"/><text x="5.1719%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="4.9275%" y="1093" width="0.0243%" height="15" fill="rgb(231,177,25)" fg:x="5263" fg:w="26"/><text x="5.1775%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (26 samples, 0.02%)</title><rect x="4.9275%" y="1077" width="0.0243%" height="15" fill="rgb(219,179,1)" fg:x="5263" fg:w="26"/><text x="5.1775%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (26 samples, 0.02%)</title><rect x="4.9275%" y="1061" width="0.0243%" height="15" fill="rgb(238,219,53)" fg:x="5263" fg:w="26"/><text x="5.1775%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (26 samples, 0.02%)</title><rect x="4.9275%" y="1045" width="0.0243%" height="15" fill="rgb(232,167,36)" fg:x="5263" fg:w="26"/><text x="5.1775%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.02%)</title><rect x="4.9275%" y="1029" width="0.0243%" height="15" fill="rgb(244,19,51)" fg:x="5263" fg:w="26"/><text x="5.1775%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.02%)</title><rect x="4.9275%" y="1013" width="0.0243%" height="15" fill="rgb(224,6,22)" fg:x="5263" fg:w="26"/><text x="5.1775%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.02%)</title><rect x="4.9275%" y="997" width="0.0243%" height="15" fill="rgb(224,145,5)" fg:x="5263" fg:w="26"/><text x="5.1775%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15 samples, 0.01%)</title><rect x="4.9378%" y="981" width="0.0140%" height="15" fill="rgb(234,130,49)" fg:x="5274" fg:w="15"/><text x="5.1878%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="4.9378%" y="965" width="0.0140%" height="15" fill="rgb(254,6,2)" fg:x="5274" fg:w="15"/><text x="5.1878%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="4.9584%" y="1109" width="0.0103%" height="15" fill="rgb(208,96,46)" fg:x="5296" fg:w="11"/><text x="5.2084%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="4.9584%" y="1093" width="0.0103%" height="15" fill="rgb(239,3,39)" fg:x="5296" fg:w="11"/><text x="5.2084%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="4.9584%" y="1077" width="0.0103%" height="15" fill="rgb(233,210,1)" fg:x="5296" fg:w="11"/><text x="5.2084%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="4.9584%" y="1061" width="0.0103%" height="15" fill="rgb(244,137,37)" fg:x="5296" fg:w="11"/><text x="5.2084%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="4.9584%" y="1045" width="0.0103%" height="15" fill="rgb(240,136,2)" fg:x="5296" fg:w="11"/><text x="5.2084%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="4.9584%" y="1029" width="0.0103%" height="15" fill="rgb(239,18,37)" fg:x="5296" fg:w="11"/><text x="5.2084%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="4.9584%" y="1013" width="0.0103%" height="15" fill="rgb(218,185,22)" fg:x="5296" fg:w="11"/><text x="5.2084%" y="1023.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="4.9584%" y="997" width="0.0103%" height="15" fill="rgb(225,218,4)" fg:x="5296" fg:w="11"/><text x="5.2084%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="4.9584%" y="981" width="0.0103%" height="15" fill="rgb(230,182,32)" fg:x="5296" fg:w="11"/><text x="5.2084%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (16 samples, 0.01%)</title><rect x="4.9706%" y="1093" width="0.0150%" height="15" fill="rgb(242,56,43)" fg:x="5309" fg:w="16"/><text x="5.2206%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (16 samples, 0.01%)</title><rect x="4.9706%" y="1077" width="0.0150%" height="15" fill="rgb(233,99,24)" fg:x="5309" fg:w="16"/><text x="5.2206%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (16 samples, 0.01%)</title><rect x="4.9706%" y="1061" width="0.0150%" height="15" fill="rgb(234,209,42)" fg:x="5309" fg:w="16"/><text x="5.2206%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (176 samples, 0.16%)</title><rect x="4.8320%" y="1125" width="0.1648%" height="15" fill="rgb(227,7,12)" fg:x="5161" fg:w="176"/><text x="5.0820%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (28 samples, 0.03%)</title><rect x="4.9706%" y="1109" width="0.0262%" height="15" fill="rgb(245,203,43)" fg:x="5309" fg:w="28"/><text x="5.2206%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (12 samples, 0.01%)</title><rect x="4.9856%" y="1093" width="0.0112%" height="15" fill="rgb(238,205,33)" fg:x="5325" fg:w="12"/><text x="5.2356%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (12 samples, 0.01%)</title><rect x="4.9856%" y="1077" width="0.0112%" height="15" fill="rgb(231,56,7)" fg:x="5325" fg:w="12"/><text x="5.2356%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (34 samples, 0.03%)</title><rect x="4.9968%" y="1125" width="0.0318%" height="15" fill="rgb(244,186,29)" fg:x="5337" fg:w="34"/><text x="5.2468%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (15 samples, 0.01%)</title><rect x="5.0286%" y="1125" width="0.0140%" height="15" fill="rgb(234,111,31)" fg:x="5371" fg:w="15"/><text x="5.2786%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24 samples, 0.02%)</title><rect x="5.1429%" y="1077" width="0.0225%" height="15" fill="rgb(241,149,10)" fg:x="5493" fg:w="24"/><text x="5.3929%" y="1087.50"></text></g><g><title>core::ptr::write (24 samples, 0.02%)</title><rect x="5.1429%" y="1061" width="0.0225%" height="15" fill="rgb(249,206,44)" fg:x="5493" fg:w="24"/><text x="5.3929%" y="1071.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (12 samples, 0.01%)</title><rect x="5.1653%" y="1077" width="0.0112%" height="15" fill="rgb(251,153,30)" fg:x="5517" fg:w="12"/><text x="5.4153%" y="1087.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (12 samples, 0.01%)</title><rect x="5.1653%" y="1061" width="0.0112%" height="15" fill="rgb(239,152,38)" fg:x="5517" fg:w="12"/><text x="5.4153%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.01%)</title><rect x="5.1653%" y="1045" width="0.0112%" height="15" fill="rgb(249,139,47)" fg:x="5517" fg:w="12"/><text x="5.4153%" y="1055.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (12 samples, 0.01%)</title><rect x="5.1653%" y="1029" width="0.0112%" height="15" fill="rgb(244,64,35)" fg:x="5517" fg:w="12"/><text x="5.4153%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.01%)</title><rect x="5.1653%" y="1013" width="0.0112%" height="15" fill="rgb(216,46,15)" fg:x="5517" fg:w="12"/><text x="5.4153%" y="1023.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (12 samples, 0.01%)</title><rect x="5.1653%" y="997" width="0.0112%" height="15" fill="rgb(250,74,19)" fg:x="5517" fg:w="12"/><text x="5.4153%" y="1007.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (12 samples, 0.01%)</title><rect x="5.1653%" y="981" width="0.0112%" height="15" fill="rgb(249,42,33)" fg:x="5517" fg:w="12"/><text x="5.4153%" y="991.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (157 samples, 0.15%)</title><rect x="5.0427%" y="1125" width="0.1470%" height="15" fill="rgb(242,149,17)" fg:x="5386" fg:w="157"/><text x="5.2927%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 0.07%)</title><rect x="5.1204%" y="1109" width="0.0693%" height="15" fill="rgb(244,29,21)" fg:x="5469" fg:w="74"/><text x="5.3704%" y="1119.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (74 samples, 0.07%)</title><rect x="5.1204%" y="1093" width="0.0693%" height="15" fill="rgb(220,130,37)" fg:x="5469" fg:w="74"/><text x="5.3704%" y="1103.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (14 samples, 0.01%)</title><rect x="5.1766%" y="1077" width="0.0131%" height="15" fill="rgb(211,67,2)" fg:x="5529" fg:w="14"/><text x="5.4266%" y="1087.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (14 samples, 0.01%)</title><rect x="5.1766%" y="1061" width="0.0131%" height="15" fill="rgb(235,68,52)" fg:x="5529" fg:w="14"/><text x="5.4266%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.01%)</title><rect x="5.1766%" y="1045" width="0.0131%" height="15" fill="rgb(246,142,3)" fg:x="5529" fg:w="14"/><text x="5.4266%" y="1055.50"></text></g><g><title>core::ptr::write (14 samples, 0.01%)</title><rect x="5.1766%" y="1029" width="0.0131%" height="15" fill="rgb(241,25,7)" fg:x="5529" fg:w="14"/><text x="5.4266%" y="1039.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (12 samples, 0.01%)</title><rect x="5.2009%" y="1125" width="0.0112%" height="15" fill="rgb(242,119,39)" fg:x="5555" fg:w="12"/><text x="5.4509%" y="1135.50"></text></g><g><title>[anon] (4,990 samples, 4.67%)</title><rect x="0.5412%" y="1141" width="4.6719%" height="15" fill="rgb(241,98,45)" fg:x="578" fg:w="4990"/><text x="0.7912%" y="1151.50">[anon]</text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="5.2421%" y="1077" width="0.0112%" height="15" fill="rgb(254,28,30)" fg:x="5599" fg:w="12"/><text x="5.4921%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (12 samples, 0.01%)</title><rect x="5.2421%" y="1061" width="0.0112%" height="15" fill="rgb(241,142,54)" fg:x="5599" fg:w="12"/><text x="5.4921%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (12 samples, 0.01%)</title><rect x="5.2421%" y="1045" width="0.0112%" height="15" fill="rgb(222,85,15)" fg:x="5599" fg:w="12"/><text x="5.4921%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (12 samples, 0.01%)</title><rect x="5.2421%" y="1029" width="0.0112%" height="15" fill="rgb(210,85,47)" fg:x="5599" fg:w="12"/><text x="5.4921%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="5.2421%" y="1013" width="0.0112%" height="15" fill="rgb(224,206,25)" fg:x="5599" fg:w="12"/><text x="5.4921%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="5.2421%" y="997" width="0.0112%" height="15" fill="rgb(243,201,19)" fg:x="5599" fg:w="12"/><text x="5.4921%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="5.2421%" y="981" width="0.0112%" height="15" fill="rgb(236,59,4)" fg:x="5599" fg:w="12"/><text x="5.4921%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="5.2421%" y="965" width="0.0112%" height="15" fill="rgb(254,179,45)" fg:x="5599" fg:w="12"/><text x="5.4921%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="5.2421%" y="949" width="0.0112%" height="15" fill="rgb(226,14,10)" fg:x="5599" fg:w="12"/><text x="5.4921%" y="959.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="5.2421%" y="933" width="0.0112%" height="15" fill="rgb(244,27,41)" fg:x="5599" fg:w="12"/><text x="5.4921%" y="943.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="5.2421%" y="917" width="0.0112%" height="15" fill="rgb(235,35,32)" fg:x="5599" fg:w="12"/><text x="5.4921%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="5.2421%" y="901" width="0.0112%" height="15" fill="rgb(218,68,31)" fg:x="5599" fg:w="12"/><text x="5.4921%" y="911.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="5.2225%" y="1125" width="0.0403%" height="15" fill="rgb(207,120,37)" fg:x="5578" fg:w="43"/><text x="5.4725%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (22 samples, 0.02%)</title><rect x="5.2421%" y="1109" width="0.0206%" height="15" fill="rgb(227,98,0)" fg:x="5599" fg:w="22"/><text x="5.4921%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (22 samples, 0.02%)</title><rect x="5.2421%" y="1093" width="0.0206%" height="15" fill="rgb(207,7,3)" fg:x="5599" fg:w="22"/><text x="5.4921%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.03%)</title><rect x="5.2711%" y="1125" width="0.0300%" height="15" fill="rgb(206,98,19)" fg:x="5630" fg:w="32"/><text x="5.5211%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="5.3030%" y="1125" width="0.0103%" height="15" fill="rgb(217,5,26)" fg:x="5664" fg:w="11"/><text x="5.5530%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.09%)</title><rect x="5.3133%" y="1125" width="0.0880%" height="15" fill="rgb(235,190,38)" fg:x="5675" fg:w="94"/><text x="5.5633%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (56 samples, 0.05%)</title><rect x="5.4013%" y="1125" width="0.0524%" height="15" fill="rgb(247,86,24)" fg:x="5769" fg:w="56"/><text x="5.6513%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (22 samples, 0.02%)</title><rect x="5.4331%" y="1109" width="0.0206%" height="15" fill="rgb(205,101,16)" fg:x="5803" fg:w="22"/><text x="5.6831%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (33 samples, 0.03%)</title><rect x="5.4537%" y="1125" width="0.0309%" height="15" fill="rgb(246,168,33)" fg:x="5825" fg:w="33"/><text x="5.7037%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (22 samples, 0.02%)</title><rect x="5.4640%" y="1109" width="0.0206%" height="15" fill="rgb(231,114,1)" fg:x="5836" fg:w="22"/><text x="5.7140%" y="1119.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="5.4940%" y="1125" width="0.0103%" height="15" fill="rgb(207,184,53)" fg:x="5868" fg:w="11"/><text x="5.7440%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (106 samples, 0.10%)</title><rect x="5.5061%" y="1125" width="0.0992%" height="15" fill="rgb(224,95,51)" fg:x="5881" fg:w="106"/><text x="5.7561%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (106 samples, 0.10%)</title><rect x="5.5061%" y="1109" width="0.0992%" height="15" fill="rgb(212,188,45)" fg:x="5881" fg:w="106"/><text x="5.7561%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (106 samples, 0.10%)</title><rect x="5.5061%" y="1093" width="0.0992%" height="15" fill="rgb(223,154,38)" fg:x="5881" fg:w="106"/><text x="5.7561%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (106 samples, 0.10%)</title><rect x="5.5061%" y="1077" width="0.0992%" height="15" fill="rgb(251,22,52)" fg:x="5881" fg:w="106"/><text x="5.7561%" y="1087.50"></text></g><g><title>abi_stable::erased_types::iterator::next (13 samples, 0.01%)</title><rect x="5.6054%" y="1125" width="0.0122%" height="15" fill="rgb(229,209,22)" fg:x="5987" fg:w="13"/><text x="5.8554%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (43 samples, 0.04%)</title><rect x="5.6419%" y="1109" width="0.0403%" height="15" fill="rgb(234,138,34)" fg:x="6026" fg:w="43"/><text x="5.8919%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (43 samples, 0.04%)</title><rect x="5.6419%" y="1093" width="0.0403%" height="15" fill="rgb(212,95,11)" fg:x="6026" fg:w="43"/><text x="5.8919%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (43 samples, 0.04%)</title><rect x="5.6419%" y="1077" width="0.0403%" height="15" fill="rgb(240,179,47)" fg:x="6026" fg:w="43"/><text x="5.8919%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (45 samples, 0.04%)</title><rect x="5.6822%" y="1109" width="0.0421%" height="15" fill="rgb(240,163,11)" fg:x="6069" fg:w="45"/><text x="5.9322%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (45 samples, 0.04%)</title><rect x="5.6822%" y="1093" width="0.0421%" height="15" fill="rgb(236,37,12)" fg:x="6069" fg:w="45"/><text x="5.9322%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (45 samples, 0.04%)</title><rect x="5.6822%" y="1077" width="0.0421%" height="15" fill="rgb(232,164,16)" fg:x="6069" fg:w="45"/><text x="5.9322%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (45 samples, 0.04%)</title><rect x="5.6822%" y="1061" width="0.0421%" height="15" fill="rgb(244,205,15)" fg:x="6069" fg:w="45"/><text x="5.9322%" y="1071.50"></text></g><g><title>__rg_dealloc (45 samples, 0.04%)</title><rect x="5.6822%" y="1045" width="0.0421%" height="15" fill="rgb(223,117,47)" fg:x="6069" fg:w="45"/><text x="5.9322%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (45 samples, 0.04%)</title><rect x="5.6822%" y="1029" width="0.0421%" height="15" fill="rgb(244,107,35)" fg:x="6069" fg:w="45"/><text x="5.9322%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (110 samples, 0.10%)</title><rect x="5.6307%" y="1125" width="0.1030%" height="15" fill="rgb(205,140,8)" fg:x="6014" fg:w="110"/><text x="5.8807%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (26 samples, 0.02%)</title><rect x="5.7337%" y="1125" width="0.0243%" height="15" fill="rgb(228,84,46)" fg:x="6124" fg:w="26"/><text x="5.9837%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (20 samples, 0.02%)</title><rect x="5.7636%" y="1125" width="0.0187%" height="15" fill="rgb(254,188,9)" fg:x="6156" fg:w="20"/><text x="6.0136%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="5.7823%" y="1125" width="0.0150%" height="15" fill="rgb(206,112,54)" fg:x="6176" fg:w="16"/><text x="6.0323%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (16 samples, 0.01%)</title><rect x="5.7823%" y="1109" width="0.0150%" height="15" fill="rgb(216,84,49)" fg:x="6176" fg:w="16"/><text x="6.0323%" y="1119.50"></text></g><g><title>event_listener::Event::notify (16 samples, 0.01%)</title><rect x="5.7973%" y="1125" width="0.0150%" height="15" fill="rgb(214,194,35)" fg:x="6192" fg:w="16"/><text x="6.0473%" y="1135.50"></text></g><g><title>event_listener::full_fence (12 samples, 0.01%)</title><rect x="5.8011%" y="1109" width="0.0112%" height="15" fill="rgb(249,28,3)" fg:x="6196" fg:w="12"/><text x="6.0511%" y="1119.50"></text></g><g><title>rust_alloc (33 samples, 0.03%)</title><rect x="5.8123%" y="1125" width="0.0309%" height="15" fill="rgb(222,56,52)" fg:x="6208" fg:w="33"/><text x="6.0623%" y="1135.50"></text></g><g><title>[tremor-pdk-singlevalue] (691 samples, 0.65%)</title><rect x="5.2225%" y="1141" width="0.6470%" height="15" fill="rgb(245,217,50)" fg:x="5578" fg:w="691"/><text x="5.4725%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="5.8694%" y="1125" width="0.0365%" height="15" fill="rgb(213,201,24)" fg:x="6269" fg:w="39"/><text x="6.1194%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (17 samples, 0.02%)</title><rect x="5.9059%" y="1125" width="0.0159%" height="15" fill="rgb(248,116,28)" fg:x="6308" fg:w="17"/><text x="6.1559%" y="1135.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (122 samples, 0.11%)</title><rect x="5.9228%" y="1125" width="0.1142%" height="15" fill="rgb(219,72,43)" fg:x="6326" fg:w="122"/><text x="6.1728%" y="1135.50"></text></g><g><title>snmalloc::FreeListIter::empty (12 samples, 0.01%)</title><rect x="6.3525%" y="437" width="0.0112%" height="15" fill="rgb(209,138,14)" fg:x="6785" fg:w="12"/><text x="6.6025%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (12 samples, 0.01%)</title><rect x="6.3525%" y="421" width="0.0112%" height="15" fill="rgb(222,18,33)" fg:x="6785" fg:w="12"/><text x="6.6025%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (266 samples, 0.25%)</title><rect x="6.3244%" y="485" width="0.2490%" height="15" fill="rgb(213,199,7)" fg:x="6755" fg:w="266"/><text x="6.5744%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (266 samples, 0.25%)</title><rect x="6.3244%" y="469" width="0.2490%" height="15" fill="rgb(250,110,10)" fg:x="6755" fg:w="266"/><text x="6.5744%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (252 samples, 0.24%)</title><rect x="6.3375%" y="453" width="0.2359%" height="15" fill="rgb(248,123,6)" fg:x="6769" fg:w="252"/><text x="6.5875%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (224 samples, 0.21%)</title><rect x="6.3638%" y="437" width="0.2097%" height="15" fill="rgb(206,91,31)" fg:x="6797" fg:w="224"/><text x="6.6138%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (224 samples, 0.21%)</title><rect x="6.3638%" y="421" width="0.2097%" height="15" fill="rgb(211,154,13)" fg:x="6797" fg:w="224"/><text x="6.6138%" y="431.50"></text></g><g><title>alloc::alloc::exchange_malloc (278 samples, 0.26%)</title><rect x="6.3169%" y="597" width="0.2603%" height="15" fill="rgb(225,148,7)" fg:x="6747" fg:w="278"/><text x="6.5669%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (278 samples, 0.26%)</title><rect x="6.3169%" y="581" width="0.2603%" height="15" fill="rgb(220,160,43)" fg:x="6747" fg:w="278"/><text x="6.5669%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (278 samples, 0.26%)</title><rect x="6.3169%" y="565" width="0.2603%" height="15" fill="rgb(213,52,39)" fg:x="6747" fg:w="278"/><text x="6.5669%" y="575.50"></text></g><g><title>alloc::alloc::alloc (277 samples, 0.26%)</title><rect x="6.3179%" y="549" width="0.2593%" height="15" fill="rgb(243,137,7)" fg:x="6748" fg:w="277"/><text x="6.5679%" y="559.50"></text></g><g><title>__rg_alloc (277 samples, 0.26%)</title><rect x="6.3179%" y="533" width="0.2593%" height="15" fill="rgb(230,79,13)" fg:x="6748" fg:w="277"/><text x="6.5679%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (277 samples, 0.26%)</title><rect x="6.3179%" y="517" width="0.2593%" height="15" fill="rgb(247,105,23)" fg:x="6748" fg:w="277"/><text x="6.5679%" y="527.50"></text></g><g><title>rust_alloc (277 samples, 0.26%)</title><rect x="6.3179%" y="501" width="0.2593%" height="15" fill="rgb(223,179,41)" fg:x="6748" fg:w="277"/><text x="6.5679%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (66 samples, 0.06%)</title><rect x="6.6615%" y="533" width="0.0618%" height="15" fill="rgb(218,9,34)" fg:x="7115" fg:w="66"/><text x="6.9115%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::ge (66 samples, 0.06%)</title><rect x="6.6615%" y="517" width="0.0618%" height="15" fill="rgb(222,106,8)" fg:x="7115" fg:w="66"/><text x="6.9115%" y="527.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (66 samples, 0.06%)</title><rect x="6.6615%" y="501" width="0.0618%" height="15" fill="rgb(211,220,0)" fg:x="7115" fg:w="66"/><text x="6.9115%" y="511.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (66 samples, 0.06%)</title><rect x="6.6615%" y="485" width="0.0618%" height="15" fill="rgb(229,52,16)" fg:x="7115" fg:w="66"/><text x="6.9115%" y="495.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (66 samples, 0.06%)</title><rect x="6.6615%" y="469" width="0.0618%" height="15" fill="rgb(212,155,18)" fg:x="7115" fg:w="66"/><text x="6.9115%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (43 samples, 0.04%)</title><rect x="6.6830%" y="453" width="0.0403%" height="15" fill="rgb(242,21,14)" fg:x="7138" fg:w="43"/><text x="6.9330%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (122 samples, 0.11%)</title><rect x="6.6250%" y="565" width="0.1142%" height="15" fill="rgb(222,19,48)" fg:x="7076" fg:w="122"/><text x="6.8750%" y="575.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (122 samples, 0.11%)</title><rect x="6.6250%" y="549" width="0.1142%" height="15" fill="rgb(232,45,27)" fg:x="7076" fg:w="122"/><text x="6.8750%" y="559.50"></text></g><g><title>core::time::Duration::new (17 samples, 0.02%)</title><rect x="6.7233%" y="533" width="0.0159%" height="15" fill="rgb(249,103,42)" fg:x="7181" fg:w="17"/><text x="6.9733%" y="543.50"></text></g><g><title>std::time::SystemTime::duration_since (131 samples, 0.12%)</title><rect x="6.6250%" y="581" width="0.1226%" height="15" fill="rgb(246,81,33)" fg:x="7076" fg:w="131"/><text x="6.8750%" y="591.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (1,129 samples, 1.06%)</title><rect x="6.1391%" y="981" width="1.0570%" height="15" fill="rgb(252,33,42)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,129 samples, 1.06%)</title><rect x="6.1391%" y="965" width="1.0570%" height="15" fill="rgb(209,212,41)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="975.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,129 samples, 1.06%)</title><rect x="6.1391%" y="949" width="1.0570%" height="15" fill="rgb(207,154,6)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="959.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,129 samples, 1.06%)</title><rect x="6.1391%" y="933" width="1.0570%" height="15" fill="rgb(223,64,47)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,129 samples, 1.06%)</title><rect x="6.1391%" y="917" width="1.0570%" height="15" fill="rgb(211,161,38)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="927.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,129 samples, 1.06%)</title><rect x="6.1391%" y="901" width="1.0570%" height="15" fill="rgb(219,138,40)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,129 samples, 1.06%)</title><rect x="6.1391%" y="885" width="1.0570%" height="15" fill="rgb(241,228,46)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="895.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,129 samples, 1.06%)</title><rect x="6.1391%" y="869" width="1.0570%" height="15" fill="rgb(223,209,38)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="879.50"></text></g><g><title>std::panic::catch_unwind (1,129 samples, 1.06%)</title><rect x="6.1391%" y="853" width="1.0570%" height="15" fill="rgb(236,164,45)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="863.50"></text></g><g><title>std::panicking::try (1,129 samples, 1.06%)</title><rect x="6.1391%" y="837" width="1.0570%" height="15" fill="rgb(231,15,5)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="847.50"></text></g><g><title>std::panicking::try::do_call (1,129 samples, 1.06%)</title><rect x="6.1391%" y="821" width="1.0570%" height="15" fill="rgb(252,35,15)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,129 samples, 1.06%)</title><rect x="6.1391%" y="805" width="1.0570%" height="15" fill="rgb(248,181,18)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,129 samples, 1.06%)</title><rect x="6.1391%" y="789" width="1.0570%" height="15" fill="rgb(233,39,42)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,129 samples, 1.06%)</title><rect x="6.1391%" y="773" width="1.0570%" height="15" fill="rgb(238,110,33)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="783.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,129 samples, 1.06%)</title><rect x="6.1391%" y="757" width="1.0570%" height="15" fill="rgb(233,195,10)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,129 samples, 1.06%)</title><rect x="6.1391%" y="741" width="1.0570%" height="15" fill="rgb(254,105,3)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,129 samples, 1.06%)</title><rect x="6.1391%" y="725" width="1.0570%" height="15" fill="rgb(221,225,9)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,129 samples, 1.06%)</title><rect x="6.1391%" y="709" width="1.0570%" height="15" fill="rgb(224,227,45)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="719.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,129 samples, 1.06%)</title><rect x="6.1391%" y="693" width="1.0570%" height="15" fill="rgb(229,198,43)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,129 samples, 1.06%)</title><rect x="6.1391%" y="677" width="1.0570%" height="15" fill="rgb(206,209,35)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="687.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,129 samples, 1.06%)</title><rect x="6.1391%" y="661" width="1.0570%" height="15" fill="rgb(245,195,53)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,129 samples, 1.06%)</title><rect x="6.1391%" y="645" width="1.0570%" height="15" fill="rgb(240,92,26)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,129 samples, 1.06%)</title><rect x="6.1391%" y="629" width="1.0570%" height="15" fill="rgb(207,40,23)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="639.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,129 samples, 1.06%)</title><rect x="6.1391%" y="613" width="1.0570%" height="15" fill="rgb(223,111,35)" fg:x="6557" fg:w="1129"/><text x="6.3891%" y="623.50"></text></g><g><title>tremor_common::time::nanotime (637 samples, 0.60%)</title><rect x="6.5997%" y="597" width="0.5964%" height="15" fill="rgb(229,147,28)" fg:x="7049" fg:w="637"/><text x="6.8497%" y="607.50"></text></g><g><title>std::time::SystemTime::now (479 samples, 0.45%)</title><rect x="6.7476%" y="581" width="0.4485%" height="15" fill="rgb(211,29,28)" fg:x="7207" fg:w="479"/><text x="6.9976%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (479 samples, 0.45%)</title><rect x="6.7476%" y="565" width="0.4485%" height="15" fill="rgb(228,72,33)" fg:x="7207" fg:w="479"/><text x="6.9976%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::now (479 samples, 0.45%)</title><rect x="6.7476%" y="549" width="0.4485%" height="15" fill="rgb(205,214,31)" fg:x="7207" fg:w="479"/><text x="6.9976%" y="559.50"></text></g><g><title>__clock_gettime_2 (389 samples, 0.36%)</title><rect x="6.8319%" y="533" width="0.3642%" height="15" fill="rgb(224,111,15)" fg:x="7297" fg:w="389"/><text x="7.0819%" y="543.50"></text></g><g><title>__vdso_clock_gettime (376 samples, 0.35%)</title><rect x="6.8441%" y="517" width="0.3520%" height="15" fill="rgb(253,21,26)" fg:x="7310" fg:w="376"/><text x="7.0941%" y="527.50"></text></g><g><title>[[vdso]] (264 samples, 0.25%)</title><rect x="6.9489%" y="501" width="0.2472%" height="15" fill="rgb(245,139,43)" fg:x="7422" fg:w="264"/><text x="7.1989%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (13 samples, 0.01%)</title><rect x="7.1961%" y="341" width="0.0122%" height="15" fill="rgb(252,170,7)" fg:x="7686" fg:w="13"/><text x="7.4461%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="7.1970%" y="325" width="0.0112%" height="15" fill="rgb(231,118,14)" fg:x="7687" fg:w="12"/><text x="7.4470%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (57 samples, 0.05%)</title><rect x="7.1961%" y="373" width="0.0534%" height="15" fill="rgb(238,83,0)" fg:x="7686" fg:w="57"/><text x="7.4461%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (57 samples, 0.05%)</title><rect x="7.1961%" y="357" width="0.0534%" height="15" fill="rgb(221,39,39)" fg:x="7686" fg:w="57"/><text x="7.4461%" y="367.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (44 samples, 0.04%)</title><rect x="7.2083%" y="341" width="0.0412%" height="15" fill="rgb(222,119,46)" fg:x="7699" fg:w="44"/><text x="7.4583%" y="351.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (35 samples, 0.03%)</title><rect x="7.2167%" y="325" width="0.0328%" height="15" fill="rgb(222,165,49)" fg:x="7708" fg:w="35"/><text x="7.4667%" y="335.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (35 samples, 0.03%)</title><rect x="7.2167%" y="309" width="0.0328%" height="15" fill="rgb(219,113,52)" fg:x="7708" fg:w="35"/><text x="7.4667%" y="319.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (35 samples, 0.03%)</title><rect x="7.2167%" y="293" width="0.0328%" height="15" fill="rgb(214,7,15)" fg:x="7708" fg:w="35"/><text x="7.4667%" y="303.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (58 samples, 0.05%)</title><rect x="7.1961%" y="677" width="0.0543%" height="15" fill="rgb(235,32,4)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (58 samples, 0.05%)</title><rect x="7.1961%" y="661" width="0.0543%" height="15" fill="rgb(238,90,54)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="671.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (58 samples, 0.05%)</title><rect x="7.1961%" y="645" width="0.0543%" height="15" fill="rgb(213,208,19)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (58 samples, 0.05%)</title><rect x="7.1961%" y="629" width="0.0543%" height="15" fill="rgb(233,156,4)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (58 samples, 0.05%)</title><rect x="7.1961%" y="613" width="0.0543%" height="15" fill="rgb(207,194,5)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (58 samples, 0.05%)</title><rect x="7.1961%" y="597" width="0.0543%" height="15" fill="rgb(206,111,30)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (58 samples, 0.05%)</title><rect x="7.1961%" y="581" width="0.0543%" height="15" fill="rgb(243,70,54)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (58 samples, 0.05%)</title><rect x="7.1961%" y="565" width="0.0543%" height="15" fill="rgb(242,28,8)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (58 samples, 0.05%)</title><rect x="7.1961%" y="549" width="0.0543%" height="15" fill="rgb(219,106,18)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (58 samples, 0.05%)</title><rect x="7.1961%" y="533" width="0.0543%" height="15" fill="rgb(244,222,10)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (58 samples, 0.05%)</title><rect x="7.1961%" y="517" width="0.0543%" height="15" fill="rgb(236,179,52)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (58 samples, 0.05%)</title><rect x="7.1961%" y="501" width="0.0543%" height="15" fill="rgb(213,23,39)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="511.50"></text></g><g><title>alloc::alloc::alloc (58 samples, 0.05%)</title><rect x="7.1961%" y="485" width="0.0543%" height="15" fill="rgb(238,48,10)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="495.50"></text></g><g><title>__rg_alloc (58 samples, 0.05%)</title><rect x="7.1961%" y="469" width="0.0543%" height="15" fill="rgb(251,196,23)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (58 samples, 0.05%)</title><rect x="7.1961%" y="453" width="0.0543%" height="15" fill="rgb(250,152,24)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="463.50"></text></g><g><title>rust_alloc (58 samples, 0.05%)</title><rect x="7.1961%" y="437" width="0.0543%" height="15" fill="rgb(209,150,17)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="7.1961%" y="421" width="0.0543%" height="15" fill="rgb(234,202,34)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="7.1961%" y="405" width="0.0543%" height="15" fill="rgb(253,148,53)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="7.1961%" y="389" width="0.0543%" height="15" fill="rgb(218,129,16)" fg:x="7686" fg:w="58"/><text x="7.4461%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (46 samples, 0.04%)</title><rect x="7.2616%" y="661" width="0.0431%" height="15" fill="rgb(216,85,19)" fg:x="7756" fg:w="46"/><text x="7.5116%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (21 samples, 0.02%)</title><rect x="7.2850%" y="645" width="0.0197%" height="15" fill="rgb(235,228,7)" fg:x="7781" fg:w="21"/><text x="7.5350%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (14 samples, 0.01%)</title><rect x="7.3515%" y="245" width="0.0131%" height="15" fill="rgb(245,175,0)" fg:x="7852" fg:w="14"/><text x="7.6015%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (55 samples, 0.05%)</title><rect x="7.3515%" y="277" width="0.0515%" height="15" fill="rgb(208,168,36)" fg:x="7852" fg:w="55"/><text x="7.6015%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (55 samples, 0.05%)</title><rect x="7.3515%" y="261" width="0.0515%" height="15" fill="rgb(246,171,24)" fg:x="7852" fg:w="55"/><text x="7.6015%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (41 samples, 0.04%)</title><rect x="7.3646%" y="245" width="0.0384%" height="15" fill="rgb(215,142,24)" fg:x="7866" fg:w="41"/><text x="7.6146%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (29 samples, 0.03%)</title><rect x="7.3759%" y="229" width="0.0272%" height="15" fill="rgb(250,187,7)" fg:x="7878" fg:w="29"/><text x="7.6259%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (29 samples, 0.03%)</title><rect x="7.3759%" y="213" width="0.0272%" height="15" fill="rgb(228,66,33)" fg:x="7878" fg:w="29"/><text x="7.6259%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (29 samples, 0.03%)</title><rect x="7.3759%" y="197" width="0.0272%" height="15" fill="rgb(234,215,21)" fg:x="7878" fg:w="29"/><text x="7.6259%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (185 samples, 0.17%)</title><rect x="7.3384%" y="325" width="0.1732%" height="15" fill="rgb(222,191,20)" fg:x="7838" fg:w="185"/><text x="7.5884%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (185 samples, 0.17%)</title><rect x="7.3384%" y="309" width="0.1732%" height="15" fill="rgb(245,79,54)" fg:x="7838" fg:w="185"/><text x="7.5884%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (172 samples, 0.16%)</title><rect x="7.3506%" y="293" width="0.1610%" height="15" fill="rgb(240,10,37)" fg:x="7851" fg:w="172"/><text x="7.6006%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (101 samples, 0.09%)</title><rect x="7.4170%" y="277" width="0.0946%" height="15" fill="rgb(214,192,32)" fg:x="7922" fg:w="101"/><text x="7.6670%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (101 samples, 0.09%)</title><rect x="7.4170%" y="261" width="0.0946%" height="15" fill="rgb(209,36,54)" fg:x="7922" fg:w="101"/><text x="7.6670%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (225 samples, 0.21%)</title><rect x="7.3094%" y="469" width="0.2107%" height="15" fill="rgb(220,10,11)" fg:x="7807" fg:w="225"/><text x="7.5594%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (225 samples, 0.21%)</title><rect x="7.3094%" y="453" width="0.2107%" height="15" fill="rgb(221,106,17)" fg:x="7807" fg:w="225"/><text x="7.5594%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (215 samples, 0.20%)</title><rect x="7.3187%" y="437" width="0.2013%" height="15" fill="rgb(251,142,44)" fg:x="7817" fg:w="215"/><text x="7.5687%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (215 samples, 0.20%)</title><rect x="7.3187%" y="421" width="0.2013%" height="15" fill="rgb(238,13,15)" fg:x="7817" fg:w="215"/><text x="7.5687%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (215 samples, 0.20%)</title><rect x="7.3187%" y="405" width="0.2013%" height="15" fill="rgb(208,107,27)" fg:x="7817" fg:w="215"/><text x="7.5687%" y="415.50"></text></g><g><title>alloc::alloc::alloc (212 samples, 0.20%)</title><rect x="7.3215%" y="389" width="0.1985%" height="15" fill="rgb(205,136,37)" fg:x="7820" fg:w="212"/><text x="7.5715%" y="399.50"></text></g><g><title>__rg_alloc (212 samples, 0.20%)</title><rect x="7.3215%" y="373" width="0.1985%" height="15" fill="rgb(250,205,27)" fg:x="7820" fg:w="212"/><text x="7.5715%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (212 samples, 0.20%)</title><rect x="7.3215%" y="357" width="0.1985%" height="15" fill="rgb(210,80,43)" fg:x="7820" fg:w="212"/><text x="7.5715%" y="367.50"></text></g><g><title>rust_alloc (204 samples, 0.19%)</title><rect x="7.3290%" y="341" width="0.1910%" height="15" fill="rgb(247,160,36)" fg:x="7828" fg:w="204"/><text x="7.5790%" y="351.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (282 samples, 0.26%)</title><rect x="7.3047%" y="581" width="0.2640%" height="15" fill="rgb(234,13,49)" fg:x="7802" fg:w="282"/><text x="7.5547%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (282 samples, 0.26%)</title><rect x="7.3047%" y="565" width="0.2640%" height="15" fill="rgb(234,122,0)" fg:x="7802" fg:w="282"/><text x="7.5547%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (277 samples, 0.26%)</title><rect x="7.3094%" y="549" width="0.2593%" height="15" fill="rgb(207,146,38)" fg:x="7807" fg:w="277"/><text x="7.5594%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (277 samples, 0.26%)</title><rect x="7.3094%" y="533" width="0.2593%" height="15" fill="rgb(207,177,25)" fg:x="7807" fg:w="277"/><text x="7.5594%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (277 samples, 0.26%)</title><rect x="7.3094%" y="517" width="0.2593%" height="15" fill="rgb(211,178,42)" fg:x="7807" fg:w="277"/><text x="7.5594%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (277 samples, 0.26%)</title><rect x="7.3094%" y="501" width="0.2593%" height="15" fill="rgb(230,69,54)" fg:x="7807" fg:w="277"/><text x="7.5594%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (277 samples, 0.26%)</title><rect x="7.3094%" y="485" width="0.2593%" height="15" fill="rgb(214,135,41)" fg:x="7807" fg:w="277"/><text x="7.5594%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (52 samples, 0.05%)</title><rect x="7.5200%" y="469" width="0.0487%" height="15" fill="rgb(237,67,25)" fg:x="8032" fg:w="52"/><text x="7.7700%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.05%)</title><rect x="7.5228%" y="453" width="0.0459%" height="15" fill="rgb(222,189,50)" fg:x="8035" fg:w="49"/><text x="7.7728%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (40 samples, 0.04%)</title><rect x="7.5313%" y="437" width="0.0375%" height="15" fill="rgb(245,148,34)" fg:x="8044" fg:w="40"/><text x="7.7813%" y="447.50"></text></g><g><title>aligned_size (16 samples, 0.01%)</title><rect x="7.6034%" y="437" width="0.0150%" height="15" fill="rgb(222,29,6)" fg:x="8121" fg:w="16"/><text x="7.8534%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (46 samples, 0.04%)</title><rect x="7.6258%" y="389" width="0.0431%" height="15" fill="rgb(221,189,43)" fg:x="8145" fg:w="46"/><text x="7.8758%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (46 samples, 0.04%)</title><rect x="7.6258%" y="373" width="0.0431%" height="15" fill="rgb(207,36,27)" fg:x="8145" fg:w="46"/><text x="7.8758%" y="383.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (42 samples, 0.04%)</title><rect x="7.6296%" y="357" width="0.0393%" height="15" fill="rgb(217,90,24)" fg:x="8149" fg:w="42"/><text x="7.8796%" y="367.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (33 samples, 0.03%)</title><rect x="7.6380%" y="341" width="0.0309%" height="15" fill="rgb(224,66,35)" fg:x="8158" fg:w="33"/><text x="7.8880%" y="351.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (33 samples, 0.03%)</title><rect x="7.6380%" y="325" width="0.0309%" height="15" fill="rgb(221,13,50)" fg:x="8158" fg:w="33"/><text x="7.8880%" y="335.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (33 samples, 0.03%)</title><rect x="7.6380%" y="309" width="0.0309%" height="15" fill="rgb(236,68,49)" fg:x="8158" fg:w="33"/><text x="7.8880%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (130 samples, 0.12%)</title><rect x="7.6193%" y="437" width="0.1217%" height="15" fill="rgb(229,146,28)" fg:x="8138" fg:w="130"/><text x="7.8693%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (130 samples, 0.12%)</title><rect x="7.6193%" y="421" width="0.1217%" height="15" fill="rgb(225,31,38)" fg:x="8138" fg:w="130"/><text x="7.8693%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (124 samples, 0.12%)</title><rect x="7.6249%" y="405" width="0.1161%" height="15" fill="rgb(250,208,3)" fg:x="8144" fg:w="124"/><text x="7.8749%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (71 samples, 0.07%)</title><rect x="7.6745%" y="389" width="0.0665%" height="15" fill="rgb(246,54,23)" fg:x="8197" fg:w="71"/><text x="7.9245%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (71 samples, 0.07%)</title><rect x="7.6745%" y="373" width="0.0665%" height="15" fill="rgb(243,76,11)" fg:x="8197" fg:w="71"/><text x="7.9245%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (168 samples, 0.16%)</title><rect x="7.5846%" y="533" width="0.1573%" height="15" fill="rgb(245,21,50)" fg:x="8101" fg:w="168"/><text x="7.8346%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (168 samples, 0.16%)</title><rect x="7.5846%" y="517" width="0.1573%" height="15" fill="rgb(228,9,43)" fg:x="8101" fg:w="168"/><text x="7.8346%" y="527.50"></text></g><g><title>alloc::alloc::alloc (161 samples, 0.15%)</title><rect x="7.5912%" y="501" width="0.1507%" height="15" fill="rgb(208,100,47)" fg:x="8108" fg:w="161"/><text x="7.8412%" y="511.50"></text></g><g><title>__rg_alloc (161 samples, 0.15%)</title><rect x="7.5912%" y="485" width="0.1507%" height="15" fill="rgb(232,26,8)" fg:x="8108" fg:w="161"/><text x="7.8412%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (161 samples, 0.15%)</title><rect x="7.5912%" y="469" width="0.1507%" height="15" fill="rgb(216,166,38)" fg:x="8108" fg:w="161"/><text x="7.8412%" y="479.50"></text></g><g><title>rust_alloc (148 samples, 0.14%)</title><rect x="7.6034%" y="453" width="0.1386%" height="15" fill="rgb(251,202,51)" fg:x="8121" fg:w="148"/><text x="7.8534%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (183 samples, 0.17%)</title><rect x="7.5762%" y="581" width="0.1713%" height="15" fill="rgb(254,216,34)" fg:x="8092" fg:w="183"/><text x="7.8262%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (174 samples, 0.16%)</title><rect x="7.5846%" y="565" width="0.1629%" height="15" fill="rgb(251,32,27)" fg:x="8101" fg:w="174"/><text x="7.8346%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (174 samples, 0.16%)</title><rect x="7.5846%" y="549" width="0.1629%" height="15" fill="rgb(208,127,28)" fg:x="8101" fg:w="174"/><text x="7.8346%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (483 samples, 0.45%)</title><rect x="7.3047%" y="597" width="0.4522%" height="15" fill="rgb(224,137,22)" fg:x="7802" fg:w="483"/><text x="7.5547%" y="607.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (617 samples, 0.58%)</title><rect x="7.1961%" y="693" width="0.5777%" height="15" fill="rgb(254,70,32)" fg:x="7686" fg:w="617"/><text x="7.4461%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (559 samples, 0.52%)</title><rect x="7.2504%" y="677" width="0.5234%" height="15" fill="rgb(229,75,37)" fg:x="7744" fg:w="559"/><text x="7.5004%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (501 samples, 0.47%)</title><rect x="7.3047%" y="661" width="0.4691%" height="15" fill="rgb(252,64,23)" fg:x="7802" fg:w="501"/><text x="7.5547%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (501 samples, 0.47%)</title><rect x="7.3047%" y="645" width="0.4691%" height="15" fill="rgb(232,162,48)" fg:x="7802" fg:w="501"/><text x="7.5547%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (501 samples, 0.47%)</title><rect x="7.3047%" y="629" width="0.4691%" height="15" fill="rgb(246,160,12)" fg:x="7802" fg:w="501"/><text x="7.5547%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (501 samples, 0.47%)</title><rect x="7.3047%" y="613" width="0.4691%" height="15" fill="rgb(247,166,0)" fg:x="7802" fg:w="501"/><text x="7.5547%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (18 samples, 0.02%)</title><rect x="7.7569%" y="597" width="0.0169%" height="15" fill="rgb(249,219,21)" fg:x="8285" fg:w="18"/><text x="8.0069%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (27 samples, 0.03%)</title><rect x="7.7841%" y="357" width="0.0253%" height="15" fill="rgb(205,209,3)" fg:x="8314" fg:w="27"/><text x="8.0341%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (27 samples, 0.03%)</title><rect x="7.7841%" y="341" width="0.0253%" height="15" fill="rgb(243,44,1)" fg:x="8314" fg:w="27"/><text x="8.0341%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (23 samples, 0.02%)</title><rect x="7.7878%" y="325" width="0.0215%" height="15" fill="rgb(206,159,16)" fg:x="8318" fg:w="23"/><text x="8.0378%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (43 samples, 0.04%)</title><rect x="7.7841%" y="373" width="0.0403%" height="15" fill="rgb(244,77,30)" fg:x="8314" fg:w="43"/><text x="8.0341%" y="383.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (16 samples, 0.01%)</title><rect x="7.8093%" y="357" width="0.0150%" height="15" fill="rgb(218,69,12)" fg:x="8341" fg:w="16"/><text x="8.0593%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (16 samples, 0.01%)</title><rect x="7.8093%" y="341" width="0.0150%" height="15" fill="rgb(212,87,7)" fg:x="8341" fg:w="16"/><text x="8.0593%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (16 samples, 0.01%)</title><rect x="7.8093%" y="325" width="0.0150%" height="15" fill="rgb(245,114,25)" fg:x="8341" fg:w="16"/><text x="8.0593%" y="335.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.01%)</title><rect x="7.8093%" y="309" width="0.0150%" height="15" fill="rgb(210,61,42)" fg:x="8341" fg:w="16"/><text x="8.0593%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (67 samples, 0.06%)</title><rect x="7.7738%" y="389" width="0.0627%" height="15" fill="rgb(211,52,33)" fg:x="8303" fg:w="67"/><text x="8.0238%" y="399.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="7.8253%" y="373" width="0.0112%" height="15" fill="rgb(234,58,33)" fg:x="8358" fg:w="12"/><text x="8.0753%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="7.8253%" y="357" width="0.0112%" height="15" fill="rgb(220,115,36)" fg:x="8358" fg:w="12"/><text x="8.0753%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="7.8253%" y="341" width="0.0112%" height="15" fill="rgb(243,153,54)" fg:x="8358" fg:w="12"/><text x="8.0753%" y="351.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="7.8253%" y="325" width="0.0112%" height="15" fill="rgb(251,47,18)" fg:x="8358" fg:w="12"/><text x="8.0753%" y="335.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (39 samples, 0.04%)</title><rect x="7.8730%" y="373" width="0.0365%" height="15" fill="rgb(242,102,42)" fg:x="8409" fg:w="39"/><text x="8.1230%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (525 samples, 0.49%)</title><rect x="7.7738%" y="421" width="0.4915%" height="15" fill="rgb(234,31,38)" fg:x="8303" fg:w="525"/><text x="8.0238%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (525 samples, 0.49%)</title><rect x="7.7738%" y="405" width="0.4915%" height="15" fill="rgb(221,117,51)" fg:x="8303" fg:w="525"/><text x="8.0238%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (458 samples, 0.43%)</title><rect x="7.8365%" y="389" width="0.4288%" height="15" fill="rgb(212,20,18)" fg:x="8370" fg:w="458"/><text x="8.0865%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (380 samples, 0.36%)</title><rect x="7.9095%" y="373" width="0.3558%" height="15" fill="rgb(245,133,36)" fg:x="8448" fg:w="380"/><text x="8.1595%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (380 samples, 0.36%)</title><rect x="7.9095%" y="357" width="0.3558%" height="15" fill="rgb(212,6,19)" fg:x="8448" fg:w="380"/><text x="8.1595%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (380 samples, 0.36%)</title><rect x="7.9095%" y="341" width="0.3558%" height="15" fill="rgb(218,1,36)" fg:x="8448" fg:w="380"/><text x="8.1595%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (17 samples, 0.02%)</title><rect x="8.2728%" y="373" width="0.0159%" height="15" fill="rgb(246,84,54)" fg:x="8836" fg:w="17"/><text x="8.5228%" y="383.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (11 samples, 0.01%)</title><rect x="8.2784%" y="357" width="0.0103%" height="15" fill="rgb(242,110,6)" fg:x="8842" fg:w="11"/><text x="8.5284%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="8.2887%" y="373" width="0.0318%" height="15" fill="rgb(214,47,5)" fg:x="8853" fg:w="34"/><text x="8.5387%" y="383.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (26 samples, 0.02%)</title><rect x="8.2962%" y="357" width="0.0243%" height="15" fill="rgb(218,159,25)" fg:x="8861" fg:w="26"/><text x="8.5462%" y="367.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (19 samples, 0.02%)</title><rect x="8.3027%" y="341" width="0.0178%" height="15" fill="rgb(215,211,28)" fg:x="8868" fg:w="19"/><text x="8.5527%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="8.3027%" y="325" width="0.0178%" height="15" fill="rgb(238,59,32)" fg:x="8868" fg:w="19"/><text x="8.5527%" y="335.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (1,202 samples, 1.13%)</title><rect x="7.1961%" y="949" width="1.1254%" height="15" fill="rgb(226,82,3)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="959.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,202 samples, 1.13%)</title><rect x="7.1961%" y="933" width="1.1254%" height="15" fill="rgb(240,164,32)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,202 samples, 1.13%)</title><rect x="7.1961%" y="917" width="1.1254%" height="15" fill="rgb(232,46,7)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="927.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,202 samples, 1.13%)</title><rect x="7.1961%" y="901" width="1.1254%" height="15" fill="rgb(229,129,53)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,202 samples, 1.13%)</title><rect x="7.1961%" y="885" width="1.1254%" height="15" fill="rgb(234,188,29)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="895.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,202 samples, 1.13%)</title><rect x="7.1961%" y="869" width="1.1254%" height="15" fill="rgb(246,141,4)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="879.50"></text></g><g><title>std::panic::catch_unwind (1,202 samples, 1.13%)</title><rect x="7.1961%" y="853" width="1.1254%" height="15" fill="rgb(229,23,39)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="863.50"></text></g><g><title>std::panicking::try (1,202 samples, 1.13%)</title><rect x="7.1961%" y="837" width="1.1254%" height="15" fill="rgb(206,12,3)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="847.50"></text></g><g><title>std::panicking::try::do_call (1,202 samples, 1.13%)</title><rect x="7.1961%" y="821" width="1.1254%" height="15" fill="rgb(252,226,20)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,202 samples, 1.13%)</title><rect x="7.1961%" y="805" width="1.1254%" height="15" fill="rgb(216,123,35)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,202 samples, 1.13%)</title><rect x="7.1961%" y="789" width="1.1254%" height="15" fill="rgb(212,68,40)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,202 samples, 1.13%)</title><rect x="7.1961%" y="773" width="1.1254%" height="15" fill="rgb(254,125,32)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="783.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,202 samples, 1.13%)</title><rect x="7.1961%" y="757" width="1.1254%" height="15" fill="rgb(253,97,22)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,202 samples, 1.13%)</title><rect x="7.1961%" y="741" width="1.1254%" height="15" fill="rgb(241,101,14)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,202 samples, 1.13%)</title><rect x="7.1961%" y="725" width="1.1254%" height="15" fill="rgb(238,103,29)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (1,202 samples, 1.13%)</title><rect x="7.1961%" y="709" width="1.1254%" height="15" fill="rgb(233,195,47)" fg:x="7686" fg:w="1202"/><text x="7.4461%" y="719.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (585 samples, 0.55%)</title><rect x="7.7738%" y="693" width="0.5477%" height="15" fill="rgb(246,218,30)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (585 samples, 0.55%)</title><rect x="7.7738%" y="677" width="0.5477%" height="15" fill="rgb(219,145,47)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (585 samples, 0.55%)</title><rect x="7.7738%" y="661" width="0.5477%" height="15" fill="rgb(243,12,26)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (585 samples, 0.55%)</title><rect x="7.7738%" y="645" width="0.5477%" height="15" fill="rgb(214,87,16)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (585 samples, 0.55%)</title><rect x="7.7738%" y="629" width="0.5477%" height="15" fill="rgb(208,99,42)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (585 samples, 0.55%)</title><rect x="7.7738%" y="613" width="0.5477%" height="15" fill="rgb(253,99,2)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (585 samples, 0.55%)</title><rect x="7.7738%" y="597" width="0.5477%" height="15" fill="rgb(220,168,23)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (585 samples, 0.55%)</title><rect x="7.7738%" y="581" width="0.5477%" height="15" fill="rgb(242,38,24)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (585 samples, 0.55%)</title><rect x="7.7738%" y="565" width="0.5477%" height="15" fill="rgb(225,182,9)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (585 samples, 0.55%)</title><rect x="7.7738%" y="549" width="0.5477%" height="15" fill="rgb(243,178,37)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="559.50"></text></g><g><title>alloc::alloc::alloc (585 samples, 0.55%)</title><rect x="7.7738%" y="533" width="0.5477%" height="15" fill="rgb(232,139,19)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="543.50"></text></g><g><title>__rg_alloc (585 samples, 0.55%)</title><rect x="7.7738%" y="517" width="0.5477%" height="15" fill="rgb(225,201,24)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (585 samples, 0.55%)</title><rect x="7.7738%" y="501" width="0.5477%" height="15" fill="rgb(221,47,46)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="511.50"></text></g><g><title>rust_alloc (585 samples, 0.55%)</title><rect x="7.7738%" y="485" width="0.5477%" height="15" fill="rgb(249,23,13)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (585 samples, 0.55%)</title><rect x="7.7738%" y="469" width="0.5477%" height="15" fill="rgb(219,9,5)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (585 samples, 0.55%)</title><rect x="7.7738%" y="453" width="0.5477%" height="15" fill="rgb(254,171,16)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (585 samples, 0.55%)</title><rect x="7.7738%" y="437" width="0.5477%" height="15" fill="rgb(230,171,20)" fg:x="8303" fg:w="585"/><text x="8.0238%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.06%)</title><rect x="8.2653%" y="421" width="0.0562%" height="15" fill="rgb(210,71,41)" fg:x="8828" fg:w="60"/><text x="8.5153%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="8.2672%" y="405" width="0.0543%" height="15" fill="rgb(206,173,20)" fg:x="8830" fg:w="58"/><text x="8.5172%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (54 samples, 0.05%)</title><rect x="8.2709%" y="389" width="0.0506%" height="15" fill="rgb(233,88,34)" fg:x="8834" fg:w="54"/><text x="8.5209%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="8.3252%" y="917" width="0.0206%" height="15" fill="rgb(223,209,46)" fg:x="8892" fg:w="22"/><text x="8.5752%" y="927.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (351 samples, 0.33%)</title><rect x="8.5883%" y="901" width="0.3286%" height="15" fill="rgb(250,43,18)" fg:x="9173" fg:w="351"/><text x="8.8383%" y="911.50"></text></g><g><title>core::ptr::read (312 samples, 0.29%)</title><rect x="8.6248%" y="885" width="0.2921%" height="15" fill="rgb(208,13,10)" fg:x="9212" fg:w="312"/><text x="8.8748%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (305 samples, 0.29%)</title><rect x="8.6314%" y="869" width="0.2856%" height="15" fill="rgb(212,200,36)" fg:x="9219" fg:w="305"/><text x="8.8814%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="8.9226%" y="901" width="0.0112%" height="15" fill="rgb(225,90,30)" fg:x="9530" fg:w="12"/><text x="9.1726%" y="911.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="8.9338%" y="901" width="0.0103%" height="15" fill="rgb(236,182,39)" fg:x="9542" fg:w="11"/><text x="9.1838%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="8.9441%" y="741" width="0.0112%" height="15" fill="rgb(212,144,35)" fg:x="9553" fg:w="12"/><text x="9.1941%" y="751.50"></text></g><g><title>rust_alloc (31 samples, 0.03%)</title><rect x="8.9656%" y="597" width="0.0290%" height="15" fill="rgb(228,63,44)" fg:x="9576" fg:w="31"/><text x="9.2156%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="9.0124%" y="581" width="0.0169%" height="15" fill="rgb(228,109,6)" fg:x="9626" fg:w="18"/><text x="9.2624%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (18 samples, 0.02%)</title><rect x="9.0124%" y="565" width="0.0169%" height="15" fill="rgb(238,117,24)" fg:x="9626" fg:w="18"/><text x="9.2624%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (17 samples, 0.02%)</title><rect x="9.0134%" y="549" width="0.0159%" height="15" fill="rgb(242,26,26)" fg:x="9627" fg:w="17"/><text x="9.2634%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (16 samples, 0.01%)</title><rect x="9.0143%" y="533" width="0.0150%" height="15" fill="rgb(221,92,48)" fg:x="9628" fg:w="16"/><text x="9.2643%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (16 samples, 0.01%)</title><rect x="9.0143%" y="517" width="0.0150%" height="15" fill="rgb(209,209,32)" fg:x="9628" fg:w="16"/><text x="9.2643%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (16 samples, 0.01%)</title><rect x="9.0143%" y="501" width="0.0150%" height="15" fill="rgb(221,70,22)" fg:x="9628" fg:w="16"/><text x="9.2643%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (88 samples, 0.08%)</title><rect x="9.0312%" y="581" width="0.0824%" height="15" fill="rgb(248,145,5)" fg:x="9646" fg:w="88"/><text x="9.2812%" y="591.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (88 samples, 0.08%)</title><rect x="9.0312%" y="565" width="0.0824%" height="15" fill="rgb(226,116,26)" fg:x="9646" fg:w="88"/><text x="9.2812%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (475 samples, 0.44%)</title><rect x="8.9656%" y="629" width="0.4447%" height="15" fill="rgb(244,5,17)" fg:x="9576" fg:w="475"/><text x="9.2156%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (475 samples, 0.44%)</title><rect x="8.9656%" y="613" width="0.4447%" height="15" fill="rgb(252,159,33)" fg:x="9576" fg:w="475"/><text x="9.2156%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (436 samples, 0.41%)</title><rect x="9.0021%" y="597" width="0.4082%" height="15" fill="rgb(206,71,0)" fg:x="9615" fg:w="436"/><text x="9.2521%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (317 samples, 0.30%)</title><rect x="9.1135%" y="581" width="0.2968%" height="15" fill="rgb(233,118,54)" fg:x="9734" fg:w="317"/><text x="9.3635%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (317 samples, 0.30%)</title><rect x="9.1135%" y="565" width="0.2968%" height="15" fill="rgb(234,83,48)" fg:x="9734" fg:w="317"/><text x="9.3635%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (506 samples, 0.47%)</title><rect x="8.9441%" y="773" width="0.4737%" height="15" fill="rgb(228,3,54)" fg:x="9553" fg:w="506"/><text x="9.1941%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (506 samples, 0.47%)</title><rect x="8.9441%" y="757" width="0.4737%" height="15" fill="rgb(226,155,13)" fg:x="9553" fg:w="506"/><text x="9.1941%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (494 samples, 0.46%)</title><rect x="8.9553%" y="741" width="0.4625%" height="15" fill="rgb(241,28,37)" fg:x="9565" fg:w="494"/><text x="9.2053%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (494 samples, 0.46%)</title><rect x="8.9553%" y="725" width="0.4625%" height="15" fill="rgb(233,93,10)" fg:x="9565" fg:w="494"/><text x="9.2053%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (494 samples, 0.46%)</title><rect x="8.9553%" y="709" width="0.4625%" height="15" fill="rgb(225,113,19)" fg:x="9565" fg:w="494"/><text x="9.2053%" y="719.50"></text></g><g><title>alloc::alloc::alloc (489 samples, 0.46%)</title><rect x="8.9600%" y="693" width="0.4578%" height="15" fill="rgb(241,2,18)" fg:x="9570" fg:w="489"/><text x="9.2100%" y="703.50"></text></g><g><title>__rg_alloc (489 samples, 0.46%)</title><rect x="8.9600%" y="677" width="0.4578%" height="15" fill="rgb(228,207,21)" fg:x="9570" fg:w="489"/><text x="9.2100%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (489 samples, 0.46%)</title><rect x="8.9600%" y="661" width="0.4578%" height="15" fill="rgb(213,211,35)" fg:x="9570" fg:w="489"/><text x="9.2100%" y="671.50"></text></g><g><title>rust_alloc (489 samples, 0.46%)</title><rect x="8.9600%" y="645" width="0.4578%" height="15" fill="rgb(209,83,10)" fg:x="9570" fg:w="489"/><text x="9.2100%" y="655.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (545 samples, 0.51%)</title><rect x="8.9441%" y="901" width="0.5103%" height="15" fill="rgb(209,164,1)" fg:x="9553" fg:w="545"/><text x="9.1941%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (545 samples, 0.51%)</title><rect x="8.9441%" y="885" width="0.5103%" height="15" fill="rgb(213,184,43)" fg:x="9553" fg:w="545"/><text x="9.1941%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (545 samples, 0.51%)</title><rect x="8.9441%" y="869" width="0.5103%" height="15" fill="rgb(231,61,34)" fg:x="9553" fg:w="545"/><text x="9.1941%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (545 samples, 0.51%)</title><rect x="8.9441%" y="853" width="0.5103%" height="15" fill="rgb(235,75,3)" fg:x="9553" fg:w="545"/><text x="9.1941%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (545 samples, 0.51%)</title><rect x="8.9441%" y="837" width="0.5103%" height="15" fill="rgb(220,106,47)" fg:x="9553" fg:w="545"/><text x="9.1941%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (545 samples, 0.51%)</title><rect x="8.9441%" y="821" width="0.5103%" height="15" fill="rgb(210,196,33)" fg:x="9553" fg:w="545"/><text x="9.1941%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (545 samples, 0.51%)</title><rect x="8.9441%" y="805" width="0.5103%" height="15" fill="rgb(229,154,42)" fg:x="9553" fg:w="545"/><text x="9.1941%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (545 samples, 0.51%)</title><rect x="8.9441%" y="789" width="0.5103%" height="15" fill="rgb(228,114,26)" fg:x="9553" fg:w="545"/><text x="9.1941%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (39 samples, 0.04%)</title><rect x="9.4178%" y="773" width="0.0365%" height="15" fill="rgb(208,144,1)" fg:x="10059" fg:w="39"/><text x="9.6678%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.04%)</title><rect x="9.4178%" y="757" width="0.0365%" height="15" fill="rgb(239,112,37)" fg:x="10059" fg:w="39"/><text x="9.6678%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (32 samples, 0.03%)</title><rect x="9.4244%" y="741" width="0.0300%" height="15" fill="rgb(210,96,50)" fg:x="10066" fg:w="32"/><text x="9.6744%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (675 samples, 0.63%)</title><rect x="9.4543%" y="901" width="0.6320%" height="15" fill="rgb(222,178,2)" fg:x="10098" fg:w="675"/><text x="9.7043%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (356 samples, 0.33%)</title><rect x="10.1022%" y="885" width="0.3333%" height="15" fill="rgb(226,74,18)" fg:x="10790" fg:w="356"/><text x="10.3522%" y="895.50"></text></g><g><title>aligned_size (19 samples, 0.02%)</title><rect x="10.4412%" y="773" width="0.0178%" height="15" fill="rgb(225,67,54)" fg:x="11152" fg:w="19"/><text x="10.6912%" y="783.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="10.4590%" y="741" width="0.0159%" height="15" fill="rgb(251,92,32)" fg:x="11171" fg:w="17"/><text x="10.7090%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="10.5133%" y="613" width="0.0140%" height="15" fill="rgb(228,149,22)" fg:x="11229" fg:w="15"/><text x="10.7633%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="10.5133%" y="597" width="0.0140%" height="15" fill="rgb(243,54,13)" fg:x="11229" fg:w="15"/><text x="10.7633%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (48 samples, 0.04%)</title><rect x="10.5020%" y="661" width="0.0449%" height="15" fill="rgb(243,180,28)" fg:x="11217" fg:w="48"/><text x="10.7520%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (48 samples, 0.04%)</title><rect x="10.5020%" y="645" width="0.0449%" height="15" fill="rgb(208,167,24)" fg:x="11217" fg:w="48"/><text x="10.7520%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (41 samples, 0.04%)</title><rect x="10.5086%" y="629" width="0.0384%" height="15" fill="rgb(245,73,45)" fg:x="11224" fg:w="41"/><text x="10.7586%" y="639.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (21 samples, 0.02%)</title><rect x="10.5273%" y="613" width="0.0197%" height="15" fill="rgb(237,203,48)" fg:x="11244" fg:w="21"/><text x="10.7773%" y="623.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (21 samples, 0.02%)</title><rect x="10.5273%" y="597" width="0.0197%" height="15" fill="rgb(211,197,16)" fg:x="11244" fg:w="21"/><text x="10.7773%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (66 samples, 0.06%)</title><rect x="10.5020%" y="677" width="0.0618%" height="15" fill="rgb(243,99,51)" fg:x="11217" fg:w="66"/><text x="10.7520%" y="687.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (18 samples, 0.02%)</title><rect x="10.5470%" y="661" width="0.0169%" height="15" fill="rgb(215,123,29)" fg:x="11265" fg:w="18"/><text x="10.7970%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (18 samples, 0.02%)</title><rect x="10.5470%" y="645" width="0.0169%" height="15" fill="rgb(239,186,37)" fg:x="11265" fg:w="18"/><text x="10.7970%" y="655.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (18 samples, 0.02%)</title><rect x="10.5470%" y="629" width="0.0169%" height="15" fill="rgb(252,136,39)" fg:x="11265" fg:w="18"/><text x="10.7970%" y="639.50"></text></g><g><title>snmalloc::bits::align_down (18 samples, 0.02%)</title><rect x="10.5470%" y="613" width="0.0169%" height="15" fill="rgb(223,213,32)" fg:x="11265" fg:w="18"/><text x="10.7970%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (99 samples, 0.09%)</title><rect x="10.4880%" y="693" width="0.0927%" height="15" fill="rgb(233,115,5)" fg:x="11202" fg:w="99"/><text x="10.7380%" y="703.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (18 samples, 0.02%)</title><rect x="10.5638%" y="677" width="0.0169%" height="15" fill="rgb(207,226,44)" fg:x="11283" fg:w="18"/><text x="10.8138%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (18 samples, 0.02%)</title><rect x="10.5638%" y="661" width="0.0169%" height="15" fill="rgb(208,126,0)" fg:x="11283" fg:w="18"/><text x="10.8138%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (18 samples, 0.02%)</title><rect x="10.5638%" y="645" width="0.0169%" height="15" fill="rgb(244,66,21)" fg:x="11283" fg:w="18"/><text x="10.8138%" y="655.50"></text></g><g><title>snmalloc::bits::align_down (18 samples, 0.02%)</title><rect x="10.5638%" y="629" width="0.0169%" height="15" fill="rgb(222,97,12)" fg:x="11283" fg:w="18"/><text x="10.8138%" y="639.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (61 samples, 0.06%)</title><rect x="10.6191%" y="677" width="0.0571%" height="15" fill="rgb(219,213,19)" fg:x="11342" fg:w="61"/><text x="10.8691%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (600 samples, 0.56%)</title><rect x="10.4870%" y="725" width="0.5618%" height="15" fill="rgb(252,169,30)" fg:x="11201" fg:w="600"/><text x="10.7370%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (600 samples, 0.56%)</title><rect x="10.4870%" y="709" width="0.5618%" height="15" fill="rgb(206,32,51)" fg:x="11201" fg:w="600"/><text x="10.7370%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (500 samples, 0.47%)</title><rect x="10.5807%" y="693" width="0.4681%" height="15" fill="rgb(250,172,42)" fg:x="11301" fg:w="500"/><text x="10.8307%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (398 samples, 0.37%)</title><rect x="10.6762%" y="677" width="0.3726%" height="15" fill="rgb(209,34,43)" fg:x="11403" fg:w="398"/><text x="10.9262%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (398 samples, 0.37%)</title><rect x="10.6762%" y="661" width="0.3726%" height="15" fill="rgb(223,11,35)" fg:x="11403" fg:w="398"/><text x="10.9262%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (398 samples, 0.37%)</title><rect x="10.6762%" y="645" width="0.3726%" height="15" fill="rgb(251,219,26)" fg:x="11403" fg:w="398"/><text x="10.9262%" y="655.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (16 samples, 0.01%)</title><rect x="11.0572%" y="693" width="0.0150%" height="15" fill="rgb(231,119,3)" fg:x="11810" fg:w="16"/><text x="11.3072%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (16 samples, 0.01%)</title><rect x="11.0572%" y="677" width="0.0150%" height="15" fill="rgb(216,97,11)" fg:x="11810" fg:w="16"/><text x="11.3072%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="11.0572%" y="661" width="0.0150%" height="15" fill="rgb(223,59,9)" fg:x="11810" fg:w="16"/><text x="11.3072%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (59 samples, 0.06%)</title><rect x="11.0488%" y="725" width="0.0552%" height="15" fill="rgb(233,93,31)" fg:x="11801" fg:w="59"/><text x="11.2988%" y="735.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (54 samples, 0.05%)</title><rect x="11.0535%" y="709" width="0.0506%" height="15" fill="rgb(239,81,33)" fg:x="11806" fg:w="54"/><text x="11.3035%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (34 samples, 0.03%)</title><rect x="11.0722%" y="693" width="0.0318%" height="15" fill="rgb(213,120,34)" fg:x="11826" fg:w="34"/><text x="11.3222%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (34 samples, 0.03%)</title><rect x="11.0722%" y="677" width="0.0318%" height="15" fill="rgb(243,49,53)" fg:x="11826" fg:w="34"/><text x="11.3222%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (12 samples, 0.01%)</title><rect x="11.1059%" y="677" width="0.0112%" height="15" fill="rgb(247,216,33)" fg:x="11862" fg:w="12"/><text x="11.3559%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="11.1040%" y="725" width="0.0281%" height="15" fill="rgb(226,26,14)" fg:x="11860" fg:w="30"/><text x="11.3540%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="11.1040%" y="709" width="0.0281%" height="15" fill="rgb(215,49,53)" fg:x="11860" fg:w="30"/><text x="11.3540%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="11.1059%" y="693" width="0.0262%" height="15" fill="rgb(245,162,40)" fg:x="11862" fg:w="28"/><text x="11.3559%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="11.1171%" y="677" width="0.0150%" height="15" fill="rgb(229,68,17)" fg:x="11874" fg:w="16"/><text x="11.3671%" y="687.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (16 samples, 0.01%)</title><rect x="11.1171%" y="661" width="0.0150%" height="15" fill="rgb(213,182,10)" fg:x="11874" fg:w="16"/><text x="11.3671%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (13 samples, 0.01%)</title><rect x="11.1200%" y="645" width="0.0122%" height="15" fill="rgb(245,125,30)" fg:x="11877" fg:w="13"/><text x="11.3700%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="11.1200%" y="629" width="0.0122%" height="15" fill="rgb(232,202,2)" fg:x="11877" fg:w="13"/><text x="11.3700%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (863 samples, 0.81%)</title><rect x="10.4590%" y="773" width="0.8080%" height="15" fill="rgb(237,140,51)" fg:x="11171" fg:w="863"/><text x="10.7090%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (863 samples, 0.81%)</title><rect x="10.4590%" y="757" width="0.8080%" height="15" fill="rgb(236,157,25)" fg:x="11171" fg:w="863"/><text x="10.7090%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (845 samples, 0.79%)</title><rect x="10.4758%" y="741" width="0.7911%" height="15" fill="rgb(219,209,0)" fg:x="11189" fg:w="845"/><text x="10.7258%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::take (135 samples, 0.13%)</title><rect x="11.1406%" y="725" width="0.1264%" height="15" fill="rgb(240,116,54)" fg:x="11899" fg:w="135"/><text x="11.3906%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (135 samples, 0.13%)</title><rect x="11.1406%" y="709" width="0.1264%" height="15" fill="rgb(216,10,36)" fg:x="11899" fg:w="135"/><text x="11.3906%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,266 samples, 1.19%)</title><rect x="10.0863%" y="901" width="1.1853%" height="15" fill="rgb(222,72,44)" fg:x="10773" fg:w="1266"/><text x="10.3363%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (893 samples, 0.84%)</title><rect x="10.4355%" y="885" width="0.8361%" height="15" fill="rgb(232,159,9)" fg:x="11146" fg:w="893"/><text x="10.6855%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (893 samples, 0.84%)</title><rect x="10.4355%" y="869" width="0.8361%" height="15" fill="rgb(210,39,32)" fg:x="11146" fg:w="893"/><text x="10.6855%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (893 samples, 0.84%)</title><rect x="10.4355%" y="853" width="0.8361%" height="15" fill="rgb(216,194,45)" fg:x="11146" fg:w="893"/><text x="10.6855%" y="863.50"></text></g><g><title>alloc::alloc::alloc (893 samples, 0.84%)</title><rect x="10.4355%" y="837" width="0.8361%" height="15" fill="rgb(218,18,35)" fg:x="11146" fg:w="893"/><text x="10.6855%" y="847.50"></text></g><g><title>__rg_alloc (893 samples, 0.84%)</title><rect x="10.4355%" y="821" width="0.8361%" height="15" fill="rgb(207,83,51)" fg:x="11146" fg:w="893"/><text x="10.6855%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (893 samples, 0.84%)</title><rect x="10.4355%" y="805" width="0.8361%" height="15" fill="rgb(225,63,43)" fg:x="11146" fg:w="893"/><text x="10.6855%" y="815.50"></text></g><g><title>rust_alloc (887 samples, 0.83%)</title><rect x="10.4412%" y="789" width="0.8305%" height="15" fill="rgb(207,57,36)" fg:x="11152" fg:w="887"/><text x="10.6912%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (12 samples, 0.01%)</title><rect x="11.2885%" y="869" width="0.0112%" height="15" fill="rgb(216,99,33)" fg:x="12057" fg:w="12"/><text x="11.5385%" y="879.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="11.2885%" y="853" width="0.0112%" height="15" fill="rgb(225,42,16)" fg:x="12057" fg:w="12"/><text x="11.5385%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (11 samples, 0.01%)</title><rect x="11.2894%" y="837" width="0.0103%" height="15" fill="rgb(220,201,45)" fg:x="12058" fg:w="11"/><text x="11.5394%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="11.2894%" y="821" width="0.0103%" height="15" fill="rgb(225,33,4)" fg:x="12058" fg:w="11"/><text x="11.5394%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="11.2716%" y="885" width="0.0365%" height="15" fill="rgb(224,33,50)" fg:x="12039" fg:w="39"/><text x="11.5216%" y="895.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="11.3110%" y="869" width="0.0103%" height="15" fill="rgb(246,198,51)" fg:x="12081" fg:w="11"/><text x="11.5610%" y="879.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="11.3212%" y="853" width="0.0112%" height="15" fill="rgb(205,22,4)" fg:x="12092" fg:w="12"/><text x="11.5712%" y="863.50"></text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="11.3325%" y="789" width="0.0159%" height="15" fill="rgb(206,3,8)" fg:x="12104" fg:w="17"/><text x="11.5825%" y="799.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (23 samples, 0.02%)</title><rect x="11.3681%" y="741" width="0.0215%" height="15" fill="rgb(251,23,15)" fg:x="12142" fg:w="23"/><text x="11.6181%" y="751.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="11.3746%" y="725" width="0.0150%" height="15" fill="rgb(252,88,28)" fg:x="12149" fg:w="16"/><text x="11.6246%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (46 samples, 0.04%)</title><rect x="11.3512%" y="789" width="0.0431%" height="15" fill="rgb(212,127,14)" fg:x="12124" fg:w="46"/><text x="11.6012%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (46 samples, 0.04%)</title><rect x="11.3512%" y="773" width="0.0431%" height="15" fill="rgb(247,145,37)" fg:x="12124" fg:w="46"/><text x="11.6012%" y="783.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (42 samples, 0.04%)</title><rect x="11.3550%" y="757" width="0.0393%" height="15" fill="rgb(209,117,53)" fg:x="12128" fg:w="42"/><text x="11.6050%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (79 samples, 0.07%)</title><rect x="11.3325%" y="821" width="0.0740%" height="15" fill="rgb(212,90,42)" fg:x="12104" fg:w="79"/><text x="11.5825%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (79 samples, 0.07%)</title><rect x="11.3325%" y="805" width="0.0740%" height="15" fill="rgb(218,164,37)" fg:x="12104" fg:w="79"/><text x="11.5825%" y="815.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="11.3943%" y="789" width="0.0122%" height="15" fill="rgb(246,65,34)" fg:x="12170" fg:w="13"/><text x="11.6443%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (91 samples, 0.09%)</title><rect x="11.3325%" y="853" width="0.0852%" height="15" fill="rgb(231,100,33)" fg:x="12104" fg:w="91"/><text x="11.5825%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (91 samples, 0.09%)</title><rect x="11.3325%" y="837" width="0.0852%" height="15" fill="rgb(228,126,14)" fg:x="12104" fg:w="91"/><text x="11.5825%" y="847.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="11.4064%" y="821" width="0.0112%" height="15" fill="rgb(215,173,21)" fg:x="12183" fg:w="12"/><text x="11.6564%" y="831.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="11.4064%" y="805" width="0.0112%" height="15" fill="rgb(210,6,40)" fg:x="12183" fg:w="12"/><text x="11.6564%" y="815.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="11.4064%" y="789" width="0.0112%" height="15" fill="rgb(212,48,18)" fg:x="12183" fg:w="12"/><text x="11.6564%" y="799.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="11.4064%" y="773" width="0.0112%" height="15" fill="rgb(230,214,11)" fg:x="12183" fg:w="12"/><text x="11.6564%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (112 samples, 0.10%)</title><rect x="11.3212%" y="869" width="0.1049%" height="15" fill="rgb(254,105,39)" fg:x="12092" fg:w="112"/><text x="11.5712%" y="879.50"></text></g><g><title>rust_dealloc (144 samples, 0.13%)</title><rect x="11.3081%" y="885" width="0.1348%" height="15" fill="rgb(245,158,5)" fg:x="12078" fg:w="144"/><text x="11.5581%" y="895.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (18 samples, 0.02%)</title><rect x="11.4261%" y="869" width="0.0169%" height="15" fill="rgb(249,208,11)" fg:x="12204" fg:w="18"/><text x="11.6761%" y="879.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (29 samples, 0.03%)</title><rect x="11.4458%" y="869" width="0.0272%" height="15" fill="rgb(210,39,28)" fg:x="12225" fg:w="29"/><text x="11.6958%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (223 samples, 0.21%)</title><rect x="11.2716%" y="901" width="0.2088%" height="15" fill="rgb(211,56,53)" fg:x="12039" fg:w="223"/><text x="11.5216%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (40 samples, 0.04%)</title><rect x="11.4430%" y="885" width="0.0375%" height="15" fill="rgb(226,201,30)" fg:x="12222" fg:w="40"/><text x="11.6930%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (11 samples, 0.01%)</title><rect x="11.4804%" y="901" width="0.0103%" height="15" fill="rgb(239,101,34)" fg:x="12262" fg:w="11"/><text x="11.7304%" y="911.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="11.4804%" y="885" width="0.0103%" height="15" fill="rgb(226,209,5)" fg:x="12262" fg:w="11"/><text x="11.7304%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="11.4907%" y="901" width="0.0112%" height="15" fill="rgb(250,105,47)" fg:x="12273" fg:w="12"/><text x="11.7407%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (12 samples, 0.01%)</title><rect x="11.5019%" y="901" width="0.0112%" height="15" fill="rgb(230,72,3)" fg:x="12285" fg:w="12"/><text x="11.7519%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (62 samples, 0.06%)</title><rect x="11.5132%" y="901" width="0.0580%" height="15" fill="rgb(232,218,39)" fg:x="12297" fg:w="62"/><text x="11.7632%" y="911.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (62 samples, 0.06%)</title><rect x="11.5132%" y="885" width="0.0580%" height="15" fill="rgb(248,166,6)" fg:x="12297" fg:w="62"/><text x="11.7632%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (62 samples, 0.06%)</title><rect x="11.5132%" y="869" width="0.0580%" height="15" fill="rgb(247,89,20)" fg:x="12297" fg:w="62"/><text x="11.7632%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (62 samples, 0.06%)</title><rect x="11.5132%" y="853" width="0.0580%" height="15" fill="rgb(248,130,54)" fg:x="12297" fg:w="62"/><text x="11.7632%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (28 samples, 0.03%)</title><rect x="11.5450%" y="837" width="0.0262%" height="15" fill="rgb(234,196,4)" fg:x="12331" fg:w="28"/><text x="11.7950%" y="847.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (28 samples, 0.03%)</title><rect x="11.5450%" y="821" width="0.0262%" height="15" fill="rgb(250,143,31)" fg:x="12331" fg:w="28"/><text x="11.7950%" y="831.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (28 samples, 0.03%)</title><rect x="11.5450%" y="805" width="0.0262%" height="15" fill="rgb(211,110,34)" fg:x="12331" fg:w="28"/><text x="11.7950%" y="815.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (23 samples, 0.02%)</title><rect x="11.5497%" y="789" width="0.0215%" height="15" fill="rgb(215,124,48)" fg:x="12336" fg:w="23"/><text x="11.7997%" y="799.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (17 samples, 0.02%)</title><rect x="11.5553%" y="773" width="0.0159%" height="15" fill="rgb(216,46,13)" fg:x="12342" fg:w="17"/><text x="11.8053%" y="783.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (17 samples, 0.02%)</title><rect x="11.5759%" y="901" width="0.0159%" height="15" fill="rgb(205,184,25)" fg:x="12364" fg:w="17"/><text x="11.8259%" y="911.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (4,775 samples, 4.47%)</title><rect x="7.1961%" y="981" width="4.4706%" height="15" fill="rgb(228,1,10)" fg:x="7686" fg:w="4775"/><text x="7.4461%" y="991.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,775 samples, 4.47%)</title><rect x="7.1961%" y="965" width="4.4706%" height="15" fill="rgb(213,116,27)" fg:x="7686" fg:w="4775"/><text x="7.4461%" y="975.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,573 samples, 3.35%)</title><rect x="8.3215%" y="949" width="3.3453%" height="15" fill="rgb(241,95,50)" fg:x="8888" fg:w="3573"/><text x="8.5715%" y="959.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,573 samples, 3.35%)</title><rect x="8.3215%" y="933" width="3.3453%" height="15" fill="rgb(238,48,32)" fg:x="8888" fg:w="3573"/><text x="8.5715%" y="943.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,547 samples, 3.32%)</title><rect x="8.3458%" y="917" width="3.3209%" height="15" fill="rgb(235,113,49)" fg:x="8914" fg:w="3547"/><text x="8.5958%" y="927.50">tre..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (80 samples, 0.07%)</title><rect x="11.5918%" y="901" width="0.0749%" height="15" fill="rgb(205,127,43)" fg:x="12381" fg:w="80"/><text x="11.8418%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (80 samples, 0.07%)</title><rect x="11.5918%" y="885" width="0.0749%" height="15" fill="rgb(250,162,2)" fg:x="12381" fg:w="80"/><text x="11.8418%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (80 samples, 0.07%)</title><rect x="11.5918%" y="869" width="0.0749%" height="15" fill="rgb(220,13,41)" fg:x="12381" fg:w="80"/><text x="11.8418%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (52 samples, 0.05%)</title><rect x="11.6180%" y="853" width="0.0487%" height="15" fill="rgb(249,221,25)" fg:x="12409" fg:w="52"/><text x="11.8680%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (61 samples, 0.06%)</title><rect x="11.7707%" y="917" width="0.0571%" height="15" fill="rgb(215,208,19)" fg:x="12572" fg:w="61"/><text x="12.0207%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (47 samples, 0.04%)</title><rect x="11.7838%" y="901" width="0.0440%" height="15" fill="rgb(236,175,2)" fg:x="12586" fg:w="47"/><text x="12.0338%" y="911.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (930 samples, 0.87%)</title><rect x="11.6958%" y="933" width="0.8707%" height="15" fill="rgb(241,52,2)" fg:x="12492" fg:w="930"/><text x="11.9458%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (789 samples, 0.74%)</title><rect x="11.8278%" y="917" width="0.7387%" height="15" fill="rgb(248,140,14)" fg:x="12633" fg:w="789"/><text x="12.0778%" y="927.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,424 samples, 1.33%)</title><rect x="11.6667%" y="965" width="1.3332%" height="15" fill="rgb(253,22,42)" fg:x="12461" fg:w="1424"/><text x="11.9167%" y="975.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,424 samples, 1.33%)</title><rect x="11.6667%" y="949" width="1.3332%" height="15" fill="rgb(234,61,47)" fg:x="12461" fg:w="1424"/><text x="11.9167%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (463 samples, 0.43%)</title><rect x="12.5665%" y="933" width="0.4335%" height="15" fill="rgb(208,226,15)" fg:x="13422" fg:w="463"/><text x="12.8165%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,461 samples, 6.99%)</title><rect x="6.0379%" y="1125" width="6.9854%" height="15" fill="rgb(217,221,4)" fg:x="6449" fg:w="7461"/><text x="6.2879%" y="1135.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (7,353 samples, 6.88%)</title><rect x="6.1391%" y="1109" width="6.8843%" height="15" fill="rgb(212,174,34)" fg:x="6557" fg:w="7353"/><text x="6.3891%" y="1119.50">async_exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (7,353 samples, 6.88%)</title><rect x="6.1391%" y="1093" width="6.8843%" height="15" fill="rgb(253,83,4)" fg:x="6557" fg:w="7353"/><text x="6.3891%" y="1103.50">&lt;async_st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (7,353 samples, 6.88%)</title><rect x="6.1391%" y="1077" width="6.8843%" height="15" fill="rgb(250,195,49)" fg:x="6557" fg:w="7353"/><text x="6.3891%" y="1087.50">async_std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,353 samples, 6.88%)</title><rect x="6.1391%" y="1061" width="6.8843%" height="15" fill="rgb(241,192,25)" fg:x="6557" fg:w="7353"/><text x="6.3891%" y="1071.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,353 samples, 6.88%)</title><rect x="6.1391%" y="1045" width="6.8843%" height="15" fill="rgb(208,124,10)" fg:x="6557" fg:w="7353"/><text x="6.3891%" y="1055.50">std::thre..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (7,353 samples, 6.88%)</title><rect x="6.1391%" y="1029" width="6.8843%" height="15" fill="rgb(222,33,0)" fg:x="6557" fg:w="7353"/><text x="6.3891%" y="1039.50">async_std..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,353 samples, 6.88%)</title><rect x="6.1391%" y="1013" width="6.8843%" height="15" fill="rgb(234,209,28)" fg:x="6557" fg:w="7353"/><text x="6.3891%" y="1023.50">&lt;async_st..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,353 samples, 6.88%)</title><rect x="6.1391%" y="997" width="6.8843%" height="15" fill="rgb(224,11,23)" fg:x="6557" fg:w="7353"/><text x="6.3891%" y="1007.50">&lt;core::fu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,449 samples, 1.36%)</title><rect x="11.6667%" y="981" width="1.3566%" height="15" fill="rgb(232,99,1)" fg:x="12461" fg:w="1449"/><text x="11.9167%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.02%)</title><rect x="13.0000%" y="965" width="0.0234%" height="15" fill="rgb(237,95,45)" fg:x="13885" fg:w="25"/><text x="13.2500%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (25 samples, 0.02%)</title><rect x="13.0000%" y="949" width="0.0234%" height="15" fill="rgb(208,109,11)" fg:x="13885" fg:w="25"/><text x="13.2500%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (25 samples, 0.02%)</title><rect x="13.0000%" y="933" width="0.0234%" height="15" fill="rgb(216,190,48)" fg:x="13885" fg:w="25"/><text x="13.2500%" y="943.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="13.0000%" y="917" width="0.0234%" height="15" fill="rgb(251,171,36)" fg:x="13885" fg:w="25"/><text x="13.2500%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (25 samples, 0.02%)</title><rect x="13.0000%" y="901" width="0.0234%" height="15" fill="rgb(230,62,22)" fg:x="13885" fg:w="25"/><text x="13.2500%" y="911.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="13.0000%" y="885" width="0.0234%" height="15" fill="rgb(225,114,35)" fg:x="13885" fg:w="25"/><text x="13.2500%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 0.02%)</title><rect x="13.0065%" y="869" width="0.0169%" height="15" fill="rgb(215,118,42)" fg:x="13892" fg:w="18"/><text x="13.2565%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.02%)</title><rect x="13.0065%" y="853" width="0.0169%" height="15" fill="rgb(243,119,21)" fg:x="13892" fg:w="18"/><text x="13.2565%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (41 samples, 0.04%)</title><rect x="13.0234%" y="1125" width="0.0384%" height="15" fill="rgb(252,177,53)" fg:x="13910" fg:w="41"/><text x="13.2734%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (15 samples, 0.01%)</title><rect x="13.0627%" y="1125" width="0.0140%" height="15" fill="rgb(237,209,29)" fg:x="13952" fg:w="15"/><text x="13.3127%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (54 samples, 0.05%)</title><rect x="13.0842%" y="1125" width="0.0506%" height="15" fill="rgb(212,65,23)" fg:x="13975" fg:w="54"/><text x="13.3342%" y="1135.50"></text></g><g><title>__clock_gettime_2 (77 samples, 0.07%)</title><rect x="13.1535%" y="1125" width="0.0721%" height="15" fill="rgb(230,222,46)" fg:x="14049" fg:w="77"/><text x="13.4035%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (137 samples, 0.13%)</title><rect x="13.2256%" y="1125" width="0.1283%" height="15" fill="rgb(215,135,32)" fg:x="14126" fg:w="137"/><text x="13.4756%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.01%)</title><rect x="13.3567%" y="1125" width="0.0103%" height="15" fill="rgb(246,101,22)" fg:x="14266" fg:w="11"/><text x="13.6067%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (11 samples, 0.01%)</title><rect x="13.3670%" y="1125" width="0.0103%" height="15" fill="rgb(206,107,13)" fg:x="14277" fg:w="11"/><text x="13.6170%" y="1135.50"></text></g><g><title>abi_stable::erased_types::iterator::next (36 samples, 0.03%)</title><rect x="13.3773%" y="1125" width="0.0337%" height="15" fill="rgb(250,100,44)" fg:x="14288" fg:w="36"/><text x="13.6273%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (25 samples, 0.02%)</title><rect x="13.4260%" y="1109" width="0.0234%" height="15" fill="rgb(231,147,38)" fg:x="14340" fg:w="25"/><text x="13.6760%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (25 samples, 0.02%)</title><rect x="13.4260%" y="1093" width="0.0234%" height="15" fill="rgb(229,8,40)" fg:x="14340" fg:w="25"/><text x="13.6760%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.02%)</title><rect x="13.4260%" y="1077" width="0.0234%" height="15" fill="rgb(221,135,30)" fg:x="14340" fg:w="25"/><text x="13.6760%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.02%)</title><rect x="13.4260%" y="1061" width="0.0234%" height="15" fill="rgb(249,193,18)" fg:x="14340" fg:w="25"/><text x="13.6760%" y="1071.50"></text></g><g><title>__rg_dealloc (25 samples, 0.02%)</title><rect x="13.4260%" y="1045" width="0.0234%" height="15" fill="rgb(209,133,39)" fg:x="14340" fg:w="25"/><text x="13.6760%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (25 samples, 0.02%)</title><rect x="13.4260%" y="1029" width="0.0234%" height="15" fill="rgb(232,100,14)" fg:x="14340" fg:w="25"/><text x="13.6760%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (55 samples, 0.05%)</title><rect x="13.4166%" y="1125" width="0.0515%" height="15" fill="rgb(224,185,1)" fg:x="14330" fg:w="55"/><text x="13.6666%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="13.4494%" y="1109" width="0.0187%" height="15" fill="rgb(223,139,8)" fg:x="14365" fg:w="20"/><text x="13.6994%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (20 samples, 0.02%)</title><rect x="13.4494%" y="1093" width="0.0187%" height="15" fill="rgb(232,213,38)" fg:x="14365" fg:w="20"/><text x="13.6994%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="13.4494%" y="1077" width="0.0187%" height="15" fill="rgb(207,94,22)" fg:x="14365" fg:w="20"/><text x="13.6994%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="13.4494%" y="1061" width="0.0187%" height="15" fill="rgb(219,183,54)" fg:x="14365" fg:w="20"/><text x="13.6994%" y="1071.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="13.4494%" y="1045" width="0.0187%" height="15" fill="rgb(216,185,54)" fg:x="14365" fg:w="20"/><text x="13.6994%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="13.4494%" y="1029" width="0.0187%" height="15" fill="rgb(254,217,39)" fg:x="14365" fg:w="20"/><text x="13.6994%" y="1039.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (12 samples, 0.01%)</title><rect x="13.4709%" y="1125" width="0.0112%" height="15" fill="rgb(240,178,23)" fg:x="14388" fg:w="12"/><text x="13.7209%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (20 samples, 0.02%)</title><rect x="13.4821%" y="1125" width="0.0187%" height="15" fill="rgb(218,11,47)" fg:x="14400" fg:w="20"/><text x="13.7321%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="13.5271%" y="1029" width="0.0150%" height="15" fill="rgb(218,51,51)" fg:x="14448" fg:w="16"/><text x="13.7771%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (16 samples, 0.01%)</title><rect x="13.5271%" y="1013" width="0.0150%" height="15" fill="rgb(238,126,27)" fg:x="14448" fg:w="16"/><text x="13.7771%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (16 samples, 0.01%)</title><rect x="13.5271%" y="997" width="0.0150%" height="15" fill="rgb(249,202,22)" fg:x="14448" fg:w="16"/><text x="13.7771%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 0.01%)</title><rect x="13.5271%" y="981" width="0.0150%" height="15" fill="rgb(254,195,49)" fg:x="14448" fg:w="16"/><text x="13.7771%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.01%)</title><rect x="13.5271%" y="965" width="0.0150%" height="15" fill="rgb(208,123,14)" fg:x="14448" fg:w="16"/><text x="13.7771%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.01%)</title><rect x="13.5271%" y="949" width="0.0150%" height="15" fill="rgb(224,200,8)" fg:x="14448" fg:w="16"/><text x="13.7771%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.01%)</title><rect x="13.5271%" y="933" width="0.0150%" height="15" fill="rgb(217,61,36)" fg:x="14448" fg:w="16"/><text x="13.7771%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (47 samples, 0.04%)</title><rect x="13.5009%" y="1125" width="0.0440%" height="15" fill="rgb(206,35,45)" fg:x="14420" fg:w="47"/><text x="13.7509%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (19 samples, 0.02%)</title><rect x="13.5271%" y="1109" width="0.0178%" height="15" fill="rgb(217,65,33)" fg:x="14448" fg:w="19"/><text x="13.7771%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19 samples, 0.02%)</title><rect x="13.5271%" y="1093" width="0.0178%" height="15" fill="rgb(222,158,48)" fg:x="14448" fg:w="19"/><text x="13.7771%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="13.5271%" y="1077" width="0.0178%" height="15" fill="rgb(254,2,54)" fg:x="14448" fg:w="19"/><text x="13.7771%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="13.5271%" y="1061" width="0.0178%" height="15" fill="rgb(250,143,38)" fg:x="14448" fg:w="19"/><text x="13.7771%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="13.5271%" y="1045" width="0.0178%" height="15" fill="rgb(248,25,0)" fg:x="14448" fg:w="19"/><text x="13.7771%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="13.5889%" y="1061" width="0.0103%" height="15" fill="rgb(206,152,27)" fg:x="14514" fg:w="11"/><text x="13.8389%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (11 samples, 0.01%)</title><rect x="13.5889%" y="1045" width="0.0103%" height="15" fill="rgb(240,77,30)" fg:x="14514" fg:w="11"/><text x="13.8389%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (11 samples, 0.01%)</title><rect x="13.5889%" y="1029" width="0.0103%" height="15" fill="rgb(231,5,3)" fg:x="14514" fg:w="11"/><text x="13.8389%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (11 samples, 0.01%)</title><rect x="13.5889%" y="1013" width="0.0103%" height="15" fill="rgb(207,226,32)" fg:x="14514" fg:w="11"/><text x="13.8389%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (11 samples, 0.01%)</title><rect x="13.5889%" y="997" width="0.0103%" height="15" fill="rgb(222,207,47)" fg:x="14514" fg:w="11"/><text x="13.8389%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (23 samples, 0.02%)</title><rect x="13.5889%" y="1077" width="0.0215%" height="15" fill="rgb(229,115,45)" fg:x="14514" fg:w="23"/><text x="13.8389%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (12 samples, 0.01%)</title><rect x="13.5992%" y="1061" width="0.0112%" height="15" fill="rgb(224,191,6)" fg:x="14525" fg:w="12"/><text x="13.8492%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="13.5992%" y="1045" width="0.0112%" height="15" fill="rgb(230,227,24)" fg:x="14525" fg:w="12"/><text x="13.8492%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="13.5992%" y="1029" width="0.0112%" height="15" fill="rgb(228,80,19)" fg:x="14525" fg:w="12"/><text x="13.8492%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="13.5992%" y="1013" width="0.0112%" height="15" fill="rgb(247,229,0)" fg:x="14525" fg:w="12"/><text x="13.8492%" y="1023.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="13.5992%" y="997" width="0.0112%" height="15" fill="rgb(237,194,15)" fg:x="14525" fg:w="12"/><text x="13.8492%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="13.5992%" y="981" width="0.0112%" height="15" fill="rgb(219,203,20)" fg:x="14525" fg:w="12"/><text x="13.8492%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (73 samples, 0.07%)</title><rect x="13.5449%" y="1125" width="0.0683%" height="15" fill="rgb(234,128,8)" fg:x="14467" fg:w="73"/><text x="13.7949%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (35 samples, 0.03%)</title><rect x="13.5804%" y="1109" width="0.0328%" height="15" fill="rgb(248,202,8)" fg:x="14505" fg:w="35"/><text x="13.8304%" y="1119.50"></text></g><g><title>core::mem::drop (35 samples, 0.03%)</title><rect x="13.5804%" y="1093" width="0.0328%" height="15" fill="rgb(206,104,37)" fg:x="14505" fg:w="35"/><text x="13.8304%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (30 samples, 0.03%)</title><rect x="13.6132%" y="1125" width="0.0281%" height="15" fill="rgb(223,8,27)" fg:x="14540" fg:w="30"/><text x="13.8632%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (30 samples, 0.03%)</title><rect x="13.6132%" y="1109" width="0.0281%" height="15" fill="rgb(216,217,28)" fg:x="14540" fg:w="30"/><text x="13.8632%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (30 samples, 0.03%)</title><rect x="13.6132%" y="1093" width="0.0281%" height="15" fill="rgb(249,199,1)" fg:x="14540" fg:w="30"/><text x="13.8632%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (30 samples, 0.03%)</title><rect x="13.6132%" y="1077" width="0.0281%" height="15" fill="rgb(240,85,17)" fg:x="14540" fg:w="30"/><text x="13.8632%" y="1087.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (33 samples, 0.03%)</title><rect x="13.6413%" y="1125" width="0.0309%" height="15" fill="rgb(206,108,45)" fg:x="14570" fg:w="33"/><text x="13.8913%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="13.6610%" y="1109" width="0.0112%" height="15" fill="rgb(245,210,41)" fg:x="14591" fg:w="12"/><text x="13.9110%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (15 samples, 0.01%)</title><rect x="13.6759%" y="1125" width="0.0140%" height="15" fill="rgb(206,13,37)" fg:x="14607" fg:w="15"/><text x="13.9259%" y="1135.50"></text></g><g><title>async_ffi::DropBomb::with (15 samples, 0.01%)</title><rect x="13.6759%" y="1109" width="0.0140%" height="15" fill="rgb(250,61,18)" fg:x="14607" fg:w="15"/><text x="13.9259%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (15 samples, 0.01%)</title><rect x="13.6759%" y="1093" width="0.0140%" height="15" fill="rgb(235,172,48)" fg:x="14607" fg:w="15"/><text x="13.9259%" y="1103.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="13.6759%" y="1077" width="0.0140%" height="15" fill="rgb(249,201,17)" fg:x="14607" fg:w="15"/><text x="13.9259%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (23 samples, 0.02%)</title><rect x="13.6900%" y="1125" width="0.0215%" height="15" fill="rgb(219,208,6)" fg:x="14622" fg:w="23"/><text x="13.9400%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (62 samples, 0.06%)</title><rect x="13.7986%" y="517" width="0.0580%" height="15" fill="rgb(248,31,23)" fg:x="14738" fg:w="62"/><text x="14.0486%" y="527.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="14.0907%" y="501" width="0.0318%" height="15" fill="rgb(245,15,42)" fg:x="15050" fg:w="34"/><text x="14.3407%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (22 samples, 0.02%)</title><rect x="14.1441%" y="485" width="0.0206%" height="15" fill="rgb(222,217,39)" fg:x="15107" fg:w="22"/><text x="14.3941%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (22 samples, 0.02%)</title><rect x="14.1441%" y="469" width="0.0206%" height="15" fill="rgb(210,219,27)" fg:x="15107" fg:w="22"/><text x="14.3941%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (22 samples, 0.02%)</title><rect x="14.1441%" y="453" width="0.0206%" height="15" fill="rgb(252,166,36)" fg:x="15107" fg:w="22"/><text x="14.3941%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (22 samples, 0.02%)</title><rect x="14.1441%" y="437" width="0.0206%" height="15" fill="rgb(245,132,34)" fg:x="15107" fg:w="22"/><text x="14.3941%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="14.1441%" y="421" width="0.0206%" height="15" fill="rgb(236,54,3)" fg:x="15107" fg:w="22"/><text x="14.3941%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (13 samples, 0.01%)</title><rect x="14.1525%" y="405" width="0.0122%" height="15" fill="rgb(241,173,43)" fg:x="15116" fg:w="13"/><text x="14.4025%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (54 samples, 0.05%)</title><rect x="14.1225%" y="501" width="0.0506%" height="15" fill="rgb(215,190,9)" fg:x="15084" fg:w="54"/><text x="14.3725%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::deref::Deref for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::deref (32 samples, 0.03%)</title><rect x="14.1731%" y="501" width="0.0300%" height="15" fill="rgb(242,101,16)" fg:x="15138" fg:w="32"/><text x="14.4231%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (32 samples, 0.03%)</title><rect x="14.1731%" y="485" width="0.0300%" height="15" fill="rgb(223,190,21)" fg:x="15138" fg:w="32"/><text x="14.4231%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.02%)</title><rect x="14.2087%" y="437" width="0.0243%" height="15" fill="rgb(215,228,25)" fg:x="15176" fg:w="26"/><text x="14.4587%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (34 samples, 0.03%)</title><rect x="14.2087%" y="501" width="0.0318%" height="15" fill="rgb(225,36,22)" fg:x="15176" fg:w="34"/><text x="14.4587%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (34 samples, 0.03%)</title><rect x="14.2087%" y="485" width="0.0318%" height="15" fill="rgb(251,106,46)" fg:x="15176" fg:w="34"/><text x="14.4587%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.03%)</title><rect x="14.2087%" y="469" width="0.0318%" height="15" fill="rgb(208,90,1)" fg:x="15176" fg:w="34"/><text x="14.4587%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (34 samples, 0.03%)</title><rect x="14.2087%" y="453" width="0.0318%" height="15" fill="rgb(243,10,4)" fg:x="15176" fg:w="34"/><text x="14.4587%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (11 samples, 0.01%)</title><rect x="14.2892%" y="341" width="0.0103%" height="15" fill="rgb(212,137,27)" fg:x="15262" fg:w="11"/><text x="14.5392%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (11 samples, 0.01%)</title><rect x="14.2892%" y="325" width="0.0103%" height="15" fill="rgb(231,220,49)" fg:x="15262" fg:w="11"/><text x="14.5392%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="14.3669%" y="197" width="0.0300%" height="15" fill="rgb(237,96,20)" fg:x="15345" fg:w="32"/><text x="14.6169%" y="207.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (30 samples, 0.03%)</title><rect x="14.3688%" y="181" width="0.0281%" height="15" fill="rgb(239,229,30)" fg:x="15347" fg:w="30"/><text x="14.6188%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (99 samples, 0.09%)</title><rect x="14.3182%" y="245" width="0.0927%" height="15" fill="rgb(219,65,33)" fg:x="15293" fg:w="99"/><text x="14.5682%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (99 samples, 0.09%)</title><rect x="14.3182%" y="229" width="0.0927%" height="15" fill="rgb(243,134,7)" fg:x="15293" fg:w="99"/><text x="14.5682%" y="239.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (84 samples, 0.08%)</title><rect x="14.3323%" y="213" width="0.0786%" height="15" fill="rgb(216,177,54)" fg:x="15308" fg:w="84"/><text x="14.5823%" y="223.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="14.3969%" y="197" width="0.0140%" height="15" fill="rgb(211,160,20)" fg:x="15377" fg:w="15"/><text x="14.6469%" y="207.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="14.3969%" y="181" width="0.0140%" height="15" fill="rgb(239,85,39)" fg:x="15377" fg:w="15"/><text x="14.6469%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (136 samples, 0.13%)</title><rect x="14.3079%" y="277" width="0.1273%" height="15" fill="rgb(232,125,22)" fg:x="15282" fg:w="136"/><text x="14.5579%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (136 samples, 0.13%)</title><rect x="14.3079%" y="261" width="0.1273%" height="15" fill="rgb(244,57,34)" fg:x="15282" fg:w="136"/><text x="14.5579%" y="271.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (26 samples, 0.02%)</title><rect x="14.4109%" y="245" width="0.0243%" height="15" fill="rgb(214,203,32)" fg:x="15392" fg:w="26"/><text x="14.6609%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (140 samples, 0.13%)</title><rect x="14.3079%" y="309" width="0.1311%" height="15" fill="rgb(207,58,43)" fg:x="15282" fg:w="140"/><text x="14.5579%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (140 samples, 0.13%)</title><rect x="14.3079%" y="293" width="0.1311%" height="15" fill="rgb(215,193,15)" fg:x="15282" fg:w="140"/><text x="14.5579%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (147 samples, 0.14%)</title><rect x="14.3051%" y="325" width="0.1376%" height="15" fill="rgb(232,15,44)" fg:x="15279" fg:w="147"/><text x="14.5551%" y="335.50"></text></g><g><title>rust_dealloc (159 samples, 0.15%)</title><rect x="14.2995%" y="341" width="0.1489%" height="15" fill="rgb(212,3,48)" fg:x="15273" fg:w="159"/><text x="14.5495%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (27 samples, 0.03%)</title><rect x="14.4530%" y="325" width="0.0253%" height="15" fill="rgb(218,128,7)" fg:x="15437" fg:w="27"/><text x="14.7030%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (240 samples, 0.22%)</title><rect x="14.2583%" y="405" width="0.2247%" height="15" fill="rgb(226,216,39)" fg:x="15229" fg:w="240"/><text x="14.5083%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (239 samples, 0.22%)</title><rect x="14.2592%" y="389" width="0.2238%" height="15" fill="rgb(243,47,51)" fg:x="15230" fg:w="239"/><text x="14.5092%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (220 samples, 0.21%)</title><rect x="14.2770%" y="373" width="0.2060%" height="15" fill="rgb(241,183,40)" fg:x="15249" fg:w="220"/><text x="14.5270%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (220 samples, 0.21%)</title><rect x="14.2770%" y="357" width="0.2060%" height="15" fill="rgb(231,217,32)" fg:x="15249" fg:w="220"/><text x="14.5270%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (37 samples, 0.03%)</title><rect x="14.4484%" y="341" width="0.0346%" height="15" fill="rgb(229,61,38)" fg:x="15432" fg:w="37"/><text x="14.6984%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (271 samples, 0.25%)</title><rect x="14.2461%" y="469" width="0.2537%" height="15" fill="rgb(225,210,5)" fg:x="15216" fg:w="271"/><text x="14.4961%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (265 samples, 0.25%)</title><rect x="14.2517%" y="453" width="0.2481%" height="15" fill="rgb(231,79,45)" fg:x="15222" fg:w="265"/><text x="14.5017%" y="463.50"></text></g><g><title>core::mem::drop (258 samples, 0.24%)</title><rect x="14.2583%" y="437" width="0.2416%" height="15" fill="rgb(224,100,7)" fg:x="15229" fg:w="258"/><text x="14.5083%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (258 samples, 0.24%)</title><rect x="14.2583%" y="421" width="0.2416%" height="15" fill="rgb(241,198,18)" fg:x="15229" fg:w="258"/><text x="14.5083%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="14.4830%" y="405" width="0.0169%" height="15" fill="rgb(252,97,53)" fg:x="15469" fg:w="18"/><text x="14.7330%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="14.4830%" y="389" width="0.0169%" height="15" fill="rgb(220,88,7)" fg:x="15469" fg:w="18"/><text x="14.7330%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="14.4830%" y="373" width="0.0169%" height="15" fill="rgb(213,176,14)" fg:x="15469" fg:w="18"/><text x="14.7330%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="14.4830%" y="357" width="0.0169%" height="15" fill="rgb(246,73,7)" fg:x="15469" fg:w="18"/><text x="14.7330%" y="367.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="14.4830%" y="341" width="0.0169%" height="15" fill="rgb(245,64,36)" fg:x="15469" fg:w="18"/><text x="14.7330%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="14.4830%" y="325" width="0.0169%" height="15" fill="rgb(245,80,10)" fg:x="15469" fg:w="18"/><text x="14.7330%" y="335.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="14.5017%" y="453" width="0.0103%" height="15" fill="rgb(232,107,50)" fg:x="15489" fg:w="11"/><text x="14.7517%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (21 samples, 0.02%)</title><rect x="14.5242%" y="373" width="0.0197%" height="15" fill="rgb(253,3,0)" fg:x="15513" fg:w="21"/><text x="14.7742%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (21 samples, 0.02%)</title><rect x="14.5242%" y="357" width="0.0197%" height="15" fill="rgb(212,99,53)" fg:x="15513" fg:w="21"/><text x="14.7742%" y="367.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (21 samples, 0.02%)</title><rect x="14.5242%" y="341" width="0.0197%" height="15" fill="rgb(249,111,54)" fg:x="15513" fg:w="21"/><text x="14.7742%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (36 samples, 0.03%)</title><rect x="14.5158%" y="405" width="0.0337%" height="15" fill="rgb(249,55,30)" fg:x="15504" fg:w="36"/><text x="14.7658%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (36 samples, 0.03%)</title><rect x="14.5158%" y="389" width="0.0337%" height="15" fill="rgb(237,47,42)" fg:x="15504" fg:w="36"/><text x="14.7658%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (42 samples, 0.04%)</title><rect x="14.5158%" y="437" width="0.0393%" height="15" fill="rgb(211,20,18)" fg:x="15504" fg:w="42"/><text x="14.7658%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (42 samples, 0.04%)</title><rect x="14.5158%" y="421" width="0.0393%" height="15" fill="rgb(231,203,46)" fg:x="15504" fg:w="42"/><text x="14.7658%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (47 samples, 0.04%)</title><rect x="14.5120%" y="453" width="0.0440%" height="15" fill="rgb(237,142,3)" fg:x="15500" fg:w="47"/><text x="14.7620%" y="463.50"></text></g><g><title>rust_dealloc (61 samples, 0.06%)</title><rect x="14.4999%" y="469" width="0.0571%" height="15" fill="rgb(241,107,1)" fg:x="15487" fg:w="61"/><text x="14.7499%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (341 samples, 0.32%)</title><rect x="14.2405%" y="501" width="0.3193%" height="15" fill="rgb(229,83,13)" fg:x="15210" fg:w="341"/><text x="14.4905%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (341 samples, 0.32%)</title><rect x="14.2405%" y="485" width="0.3193%" height="15" fill="rgb(241,91,40)" fg:x="15210" fg:w="341"/><text x="14.4905%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::private::RVec&lt;T&gt;::buffer_mut (14 samples, 0.01%)</title><rect x="14.6019%" y="373" width="0.0131%" height="15" fill="rgb(225,3,45)" fg:x="15596" fg:w="14"/><text x="14.8519%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (43 samples, 0.04%)</title><rect x="14.5925%" y="405" width="0.0403%" height="15" fill="rgb(244,223,14)" fg:x="15586" fg:w="43"/><text x="14.8425%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (43 samples, 0.04%)</title><rect x="14.5925%" y="389" width="0.0403%" height="15" fill="rgb(224,124,37)" fg:x="15586" fg:w="43"/><text x="14.8425%" y="399.50"></text></g><g><title>core::mem::drop (19 samples, 0.02%)</title><rect x="14.6150%" y="373" width="0.0178%" height="15" fill="rgb(251,171,30)" fg:x="15610" fg:w="19"/><text x="14.8650%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="14.6150%" y="357" width="0.0178%" height="15" fill="rgb(236,46,54)" fg:x="15610" fg:w="19"/><text x="14.8650%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="14.6150%" y="341" width="0.0178%" height="15" fill="rgb(245,213,5)" fg:x="15610" fg:w="19"/><text x="14.8650%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="14.6150%" y="325" width="0.0178%" height="15" fill="rgb(230,144,27)" fg:x="15610" fg:w="19"/><text x="14.8650%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="14.6150%" y="309" width="0.0178%" height="15" fill="rgb(220,86,6)" fg:x="15610" fg:w="19"/><text x="14.8650%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="14.6150%" y="293" width="0.0178%" height="15" fill="rgb(240,20,13)" fg:x="15610" fg:w="19"/><text x="14.8650%" y="303.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="14.6150%" y="277" width="0.0178%" height="15" fill="rgb(217,89,34)" fg:x="15610" fg:w="19"/><text x="14.8650%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="14.6150%" y="261" width="0.0178%" height="15" fill="rgb(229,13,5)" fg:x="15610" fg:w="19"/><text x="14.8650%" y="271.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (17 samples, 0.02%)</title><rect x="14.7676%" y="277" width="0.0159%" height="15" fill="rgb(244,67,35)" fg:x="15773" fg:w="17"/><text x="15.0176%" y="287.50"></text></g><g><title> (17 samples, 0.02%)</title><rect x="14.7676%" y="261" width="0.0159%" height="15" fill="rgb(221,40,2)" fg:x="15773" fg:w="17"/><text x="15.0176%" y="271.50"></text></g><g><title>snmalloc::Remote::set_info (29 samples, 0.03%)</title><rect x="14.7835%" y="277" width="0.0272%" height="15" fill="rgb(237,157,21)" fg:x="15790" fg:w="29"/><text x="15.0335%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (152 samples, 0.14%)</title><rect x="14.6852%" y="309" width="0.1423%" height="15" fill="rgb(222,94,11)" fg:x="15685" fg:w="152"/><text x="14.9352%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (131 samples, 0.12%)</title><rect x="14.7049%" y="293" width="0.1226%" height="15" fill="rgb(249,113,6)" fg:x="15706" fg:w="131"/><text x="14.9549%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (18 samples, 0.02%)</title><rect x="14.8107%" y="277" width="0.0169%" height="15" fill="rgb(238,137,36)" fg:x="15819" fg:w="18"/><text x="15.0607%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (183 samples, 0.17%)</title><rect x="14.6684%" y="341" width="0.1713%" height="15" fill="rgb(210,102,26)" fg:x="15667" fg:w="183"/><text x="14.9184%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (183 samples, 0.17%)</title><rect x="14.6684%" y="325" width="0.1713%" height="15" fill="rgb(218,30,30)" fg:x="15667" fg:w="183"/><text x="14.9184%" y="335.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="14.8285%" y="309" width="0.0112%" height="15" fill="rgb(214,67,26)" fg:x="15838" fg:w="12"/><text x="15.0785%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (195 samples, 0.18%)</title><rect x="14.6684%" y="373" width="0.1826%" height="15" fill="rgb(251,9,53)" fg:x="15667" fg:w="195"/><text x="14.9184%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (195 samples, 0.18%)</title><rect x="14.6684%" y="357" width="0.1826%" height="15" fill="rgb(228,204,25)" fg:x="15667" fg:w="195"/><text x="14.9184%" y="367.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="14.8397%" y="341" width="0.0112%" height="15" fill="rgb(207,153,8)" fg:x="15850" fg:w="12"/><text x="15.0897%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="14.8397%" y="325" width="0.0112%" height="15" fill="rgb(242,9,16)" fg:x="15850" fg:w="12"/><text x="15.0897%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="14.8397%" y="309" width="0.0112%" height="15" fill="rgb(217,211,10)" fg:x="15850" fg:w="12"/><text x="15.0897%" y="319.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="14.8397%" y="293" width="0.0112%" height="15" fill="rgb(219,228,52)" fg:x="15850" fg:w="12"/><text x="15.0897%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (229 samples, 0.21%)</title><rect x="14.6468%" y="389" width="0.2144%" height="15" fill="rgb(231,92,29)" fg:x="15644" fg:w="229"/><text x="14.8968%" y="399.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="14.8509%" y="373" width="0.0103%" height="15" fill="rgb(232,8,23)" fg:x="15862" fg:w="11"/><text x="15.1009%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="14.8509%" y="357" width="0.0103%" height="15" fill="rgb(216,211,34)" fg:x="15862" fg:w="11"/><text x="15.1009%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="14.8509%" y="341" width="0.0103%" height="15" fill="rgb(236,151,0)" fg:x="15862" fg:w="11"/><text x="15.1009%" y="351.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="14.8509%" y="325" width="0.0103%" height="15" fill="rgb(209,168,3)" fg:x="15862" fg:w="11"/><text x="15.1009%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (307 samples, 0.29%)</title><rect x="14.5822%" y="453" width="0.2874%" height="15" fill="rgb(208,129,28)" fg:x="15575" fg:w="307"/><text x="14.8322%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (307 samples, 0.29%)</title><rect x="14.5822%" y="437" width="0.2874%" height="15" fill="rgb(229,78,22)" fg:x="15575" fg:w="307"/><text x="14.8322%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (307 samples, 0.29%)</title><rect x="14.5822%" y="421" width="0.2874%" height="15" fill="rgb(228,187,13)" fg:x="15575" fg:w="307"/><text x="14.8322%" y="431.50"></text></g><g><title>rust_dealloc (253 samples, 0.24%)</title><rect x="14.6328%" y="405" width="0.2369%" height="15" fill="rgb(240,119,24)" fg:x="15629" fg:w="253"/><text x="14.8828%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (12 samples, 0.01%)</title><rect x="15.3294%" y="277" width="0.0112%" height="15" fill="rgb(209,194,42)" fg:x="16373" fg:w="12"/><text x="15.5794%" y="287.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (12 samples, 0.01%)</title><rect x="15.3294%" y="261" width="0.0112%" height="15" fill="rgb(247,200,46)" fg:x="16373" fg:w="12"/><text x="15.5794%" y="271.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="15.3462%" y="245" width="0.0169%" height="15" fill="rgb(218,76,16)" fg:x="16391" fg:w="18"/><text x="15.5962%" y="255.50"></text></g><g><title>rust_dealloc (28 samples, 0.03%)</title><rect x="15.3687%" y="181" width="0.0262%" height="15" fill="rgb(225,21,48)" fg:x="16415" fg:w="28"/><text x="15.6187%" y="191.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (23 samples, 0.02%)</title><rect x="15.4633%" y="149" width="0.0215%" height="15" fill="rgb(239,223,50)" fg:x="16516" fg:w="23"/><text x="15.7133%" y="159.50"></text></g><g><title> (23 samples, 0.02%)</title><rect x="15.4633%" y="133" width="0.0215%" height="15" fill="rgb(244,45,21)" fg:x="16516" fg:w="23"/><text x="15.7133%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (102 samples, 0.10%)</title><rect x="15.3987%" y="181" width="0.0955%" height="15" fill="rgb(232,33,43)" fg:x="16447" fg:w="102"/><text x="15.6487%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (87 samples, 0.08%)</title><rect x="15.4127%" y="165" width="0.0815%" height="15" fill="rgb(209,8,3)" fg:x="16462" fg:w="87"/><text x="15.6627%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (144 samples, 0.13%)</title><rect x="15.3668%" y="213" width="0.1348%" height="15" fill="rgb(214,25,53)" fg:x="16413" fg:w="144"/><text x="15.6168%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (144 samples, 0.13%)</title><rect x="15.3668%" y="197" width="0.1348%" height="15" fill="rgb(254,186,54)" fg:x="16413" fg:w="144"/><text x="15.6168%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (147 samples, 0.14%)</title><rect x="15.3668%" y="245" width="0.1376%" height="15" fill="rgb(208,174,49)" fg:x="16413" fg:w="147"/><text x="15.6168%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (147 samples, 0.14%)</title><rect x="15.3668%" y="229" width="0.1376%" height="15" fill="rgb(233,191,51)" fg:x="16413" fg:w="147"/><text x="15.6168%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (181 samples, 0.17%)</title><rect x="15.3462%" y="261" width="0.1695%" height="15" fill="rgb(222,134,10)" fg:x="16391" fg:w="181"/><text x="15.5962%" y="271.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="15.5045%" y="245" width="0.0112%" height="15" fill="rgb(230,226,20)" fg:x="16560" fg:w="12"/><text x="15.7545%" y="255.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="15.5045%" y="229" width="0.0112%" height="15" fill="rgb(251,111,25)" fg:x="16560" fg:w="12"/><text x="15.7545%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="15.5045%" y="213" width="0.0112%" height="15" fill="rgb(224,40,46)" fg:x="16560" fg:w="12"/><text x="15.7545%" y="223.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="15.5045%" y="197" width="0.0112%" height="15" fill="rgb(236,108,47)" fg:x="16560" fg:w="12"/><text x="15.7545%" y="207.50"></text></g><g><title>rust_dealloc (190 samples, 0.18%)</title><rect x="15.3406%" y="277" width="0.1779%" height="15" fill="rgb(234,93,0)" fg:x="16385" fg:w="190"/><text x="15.5906%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (670 samples, 0.63%)</title><rect x="14.8921%" y="357" width="0.6273%" height="15" fill="rgb(224,213,32)" fg:x="15906" fg:w="670"/><text x="15.1421%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (669 samples, 0.63%)</title><rect x="14.8931%" y="341" width="0.6264%" height="15" fill="rgb(251,11,48)" fg:x="15907" fg:w="669"/><text x="15.1431%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (650 samples, 0.61%)</title><rect x="14.9109%" y="325" width="0.6086%" height="15" fill="rgb(236,173,5)" fg:x="15926" fg:w="650"/><text x="15.1609%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (650 samples, 0.61%)</title><rect x="14.9109%" y="309" width="0.6086%" height="15" fill="rgb(230,95,12)" fg:x="15926" fg:w="650"/><text x="15.1609%" y="319.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (650 samples, 0.61%)</title><rect x="14.9109%" y="293" width="0.6086%" height="15" fill="rgb(232,209,1)" fg:x="15926" fg:w="650"/><text x="15.1609%" y="303.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (707 samples, 0.66%)</title><rect x="14.8715%" y="421" width="0.6619%" height="15" fill="rgb(232,6,1)" fg:x="15884" fg:w="707"/><text x="15.1215%" y="431.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (700 samples, 0.66%)</title><rect x="14.8781%" y="405" width="0.6554%" height="15" fill="rgb(210,224,50)" fg:x="15891" fg:w="700"/><text x="15.1281%" y="415.50"></text></g><g><title>core::mem::drop (685 samples, 0.64%)</title><rect x="14.8921%" y="389" width="0.6413%" height="15" fill="rgb(228,127,35)" fg:x="15906" fg:w="685"/><text x="15.1421%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (685 samples, 0.64%)</title><rect x="14.8921%" y="373" width="0.6413%" height="15" fill="rgb(245,102,45)" fg:x="15906" fg:w="685"/><text x="15.1421%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (15 samples, 0.01%)</title><rect x="15.5194%" y="357" width="0.0140%" height="15" fill="rgb(214,1,49)" fg:x="16576" fg:w="15"/><text x="15.7694%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="15.5194%" y="341" width="0.0140%" height="15" fill="rgb(226,163,40)" fg:x="16576" fg:w="15"/><text x="15.7694%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="15.5194%" y="325" width="0.0140%" height="15" fill="rgb(239,212,28)" fg:x="16576" fg:w="15"/><text x="15.7694%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="15.5194%" y="309" width="0.0140%" height="15" fill="rgb(220,20,13)" fg:x="16576" fg:w="15"/><text x="15.7694%" y="319.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="15.5194%" y="293" width="0.0140%" height="15" fill="rgb(210,164,35)" fg:x="16576" fg:w="15"/><text x="15.7694%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="15.5194%" y="277" width="0.0140%" height="15" fill="rgb(248,109,41)" fg:x="16576" fg:w="15"/><text x="15.7694%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (17 samples, 0.02%)</title><rect x="15.5859%" y="293" width="0.0159%" height="15" fill="rgb(238,23,50)" fg:x="16647" fg:w="17"/><text x="15.8359%" y="303.50"></text></g><g><title> (17 samples, 0.02%)</title><rect x="15.5859%" y="277" width="0.0159%" height="15" fill="rgb(211,48,49)" fg:x="16647" fg:w="17"/><text x="15.8359%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (53 samples, 0.05%)</title><rect x="15.5597%" y="325" width="0.0496%" height="15" fill="rgb(223,36,21)" fg:x="16619" fg:w="53"/><text x="15.8097%" y="335.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (42 samples, 0.04%)</title><rect x="15.5700%" y="309" width="0.0393%" height="15" fill="rgb(207,123,46)" fg:x="16630" fg:w="42"/><text x="15.8200%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (75 samples, 0.07%)</title><rect x="15.5513%" y="357" width="0.0702%" height="15" fill="rgb(240,218,32)" fg:x="16610" fg:w="75"/><text x="15.8013%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (75 samples, 0.07%)</title><rect x="15.5513%" y="341" width="0.0702%" height="15" fill="rgb(252,5,43)" fg:x="16610" fg:w="75"/><text x="15.8013%" y="351.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="15.6093%" y="325" width="0.0122%" height="15" fill="rgb(252,84,19)" fg:x="16672" fg:w="13"/><text x="15.8593%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (89 samples, 0.08%)</title><rect x="15.5513%" y="389" width="0.0833%" height="15" fill="rgb(243,152,39)" fg:x="16610" fg:w="89"/><text x="15.8013%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (89 samples, 0.08%)</title><rect x="15.5513%" y="373" width="0.0833%" height="15" fill="rgb(234,160,15)" fg:x="16610" fg:w="89"/><text x="15.8013%" y="383.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="15.6215%" y="357" width="0.0131%" height="15" fill="rgb(237,34,20)" fg:x="16685" fg:w="14"/><text x="15.8715%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="15.6215%" y="341" width="0.0131%" height="15" fill="rgb(229,97,13)" fg:x="16685" fg:w="14"/><text x="15.8715%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="15.6215%" y="325" width="0.0131%" height="15" fill="rgb(234,71,50)" fg:x="16685" fg:w="14"/><text x="15.8715%" y="335.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="15.6215%" y="309" width="0.0131%" height="15" fill="rgb(253,155,4)" fg:x="16685" fg:w="14"/><text x="15.8715%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (101 samples, 0.09%)</title><rect x="15.5410%" y="405" width="0.0946%" height="15" fill="rgb(222,185,37)" fg:x="16599" fg:w="101"/><text x="15.7910%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,141 samples, 1.07%)</title><rect x="14.5682%" y="485" width="1.0683%" height="15" fill="rgb(251,177,13)" fg:x="15560" fg:w="1141"/><text x="14.8182%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,126 samples, 1.05%)</title><rect x="14.5822%" y="469" width="1.0542%" height="15" fill="rgb(250,179,40)" fg:x="15575" fg:w="1126"/><text x="14.8322%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (819 samples, 0.77%)</title><rect x="14.8697%" y="453" width="0.7668%" height="15" fill="rgb(242,44,2)" fg:x="15882" fg:w="819"/><text x="15.1197%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (819 samples, 0.77%)</title><rect x="14.8697%" y="437" width="0.7668%" height="15" fill="rgb(216,177,13)" fg:x="15882" fg:w="819"/><text x="15.1197%" y="447.50"></text></g><g><title>rust_dealloc (110 samples, 0.10%)</title><rect x="15.5335%" y="421" width="0.1030%" height="15" fill="rgb(216,106,43)" fg:x="16591" fg:w="110"/><text x="15.7835%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (11 samples, 0.01%)</title><rect x="15.6365%" y="485" width="0.0103%" height="15" fill="rgb(216,183,2)" fg:x="16701" fg:w="11"/><text x="15.8865%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (11 samples, 0.01%)</title><rect x="15.6365%" y="469" width="0.0103%" height="15" fill="rgb(249,75,3)" fg:x="16701" fg:w="11"/><text x="15.8865%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (11 samples, 0.01%)</title><rect x="15.6365%" y="453" width="0.0103%" height="15" fill="rgb(219,67,39)" fg:x="16701" fg:w="11"/><text x="15.8865%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (441 samples, 0.41%)</title><rect x="15.8818%" y="389" width="0.4129%" height="15" fill="rgb(253,228,2)" fg:x="16963" fg:w="441"/><text x="16.1318%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (441 samples, 0.41%)</title><rect x="15.8818%" y="373" width="0.4129%" height="15" fill="rgb(235,138,27)" fg:x="16963" fg:w="441"/><text x="16.1318%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (441 samples, 0.41%)</title><rect x="15.8818%" y="357" width="0.4129%" height="15" fill="rgb(236,97,51)" fg:x="16963" fg:w="441"/><text x="16.1318%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (441 samples, 0.41%)</title><rect x="15.8818%" y="341" width="0.4129%" height="15" fill="rgb(240,80,30)" fg:x="16963" fg:w="441"/><text x="16.1318%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (441 samples, 0.41%)</title><rect x="15.8818%" y="325" width="0.4129%" height="15" fill="rgb(230,178,19)" fg:x="16963" fg:w="441"/><text x="16.1318%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (429 samples, 0.40%)</title><rect x="15.8930%" y="309" width="0.4017%" height="15" fill="rgb(210,190,27)" fg:x="16975" fg:w="429"/><text x="16.1430%" y="319.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (469 samples, 0.44%)</title><rect x="15.8668%" y="405" width="0.4391%" height="15" fill="rgb(222,107,31)" fg:x="16947" fg:w="469"/><text x="16.1168%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="16.2947%" y="389" width="0.0112%" height="15" fill="rgb(216,127,34)" fg:x="17404" fg:w="12"/><text x="16.5447%" y="399.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="16.2947%" y="373" width="0.0112%" height="15" fill="rgb(234,116,52)" fg:x="17404" fg:w="12"/><text x="16.5447%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="16.2947%" y="357" width="0.0112%" height="15" fill="rgb(222,124,15)" fg:x="17404" fg:w="12"/><text x="16.5447%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="16.2947%" y="341" width="0.0112%" height="15" fill="rgb(231,179,28)" fg:x="17404" fg:w="12"/><text x="16.5447%" y="351.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="16.2947%" y="325" width="0.0112%" height="15" fill="rgb(226,93,45)" fg:x="17404" fg:w="12"/><text x="16.5447%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="16.2947%" y="309" width="0.0112%" height="15" fill="rgb(215,8,51)" fg:x="17404" fg:w="12"/><text x="16.5447%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (40 samples, 0.04%)</title><rect x="16.3321%" y="309" width="0.0375%" height="15" fill="rgb(223,106,5)" fg:x="17444" fg:w="40"/><text x="16.5821%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (32 samples, 0.03%)</title><rect x="16.3396%" y="293" width="0.0300%" height="15" fill="rgb(250,191,5)" fg:x="17452" fg:w="32"/><text x="16.5896%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (57 samples, 0.05%)</title><rect x="16.3181%" y="341" width="0.0534%" height="15" fill="rgb(242,132,44)" fg:x="17429" fg:w="57"/><text x="16.5681%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (57 samples, 0.05%)</title><rect x="16.3181%" y="325" width="0.0534%" height="15" fill="rgb(251,152,29)" fg:x="17429" fg:w="57"/><text x="16.5681%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (62 samples, 0.06%)</title><rect x="16.3181%" y="373" width="0.0580%" height="15" fill="rgb(218,179,5)" fg:x="17429" fg:w="62"/><text x="16.5681%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (62 samples, 0.06%)</title><rect x="16.3181%" y="357" width="0.0580%" height="15" fill="rgb(227,67,19)" fg:x="17429" fg:w="62"/><text x="16.5681%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (71 samples, 0.07%)</title><rect x="16.3134%" y="389" width="0.0665%" height="15" fill="rgb(233,119,31)" fg:x="17424" fg:w="71"/><text x="16.5634%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (756 samples, 0.71%)</title><rect x="15.6758%" y="453" width="0.7078%" height="15" fill="rgb(241,120,22)" fg:x="16743" fg:w="756"/><text x="15.9258%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (756 samples, 0.71%)</title><rect x="15.6758%" y="437" width="0.7078%" height="15" fill="rgb(224,102,30)" fg:x="16743" fg:w="756"/><text x="15.9258%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (756 samples, 0.71%)</title><rect x="15.6758%" y="421" width="0.7078%" height="15" fill="rgb(210,164,37)" fg:x="16743" fg:w="756"/><text x="15.9258%" y="431.50"></text></g><g><title>rust_dealloc (83 samples, 0.08%)</title><rect x="16.3059%" y="405" width="0.0777%" height="15" fill="rgb(226,191,16)" fg:x="17416" fg:w="83"/><text x="16.5559%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (786 samples, 0.74%)</title><rect x="15.6533%" y="469" width="0.7359%" height="15" fill="rgb(214,40,45)" fg:x="16719" fg:w="786"/><text x="15.9033%" y="479.50"></text></g><g><title>abi_stable::std_types::arc::private::RArc&lt;T&gt;::data (350 samples, 0.33%)</title><rect x="16.4548%" y="309" width="0.3277%" height="15" fill="rgb(244,29,26)" fg:x="17575" fg:w="350"/><text x="16.7048%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="16.8077%" y="181" width="0.0131%" height="15" fill="rgb(216,16,5)" fg:x="17952" fg:w="14"/><text x="17.0577%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="16.8077%" y="165" width="0.0131%" height="15" fill="rgb(249,76,35)" fg:x="17952" fg:w="14"/><text x="17.0577%" y="175.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="16.8077%" y="149" width="0.0131%" height="15" fill="rgb(207,11,44)" fg:x="17952" fg:w="14"/><text x="17.0577%" y="159.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="16.8077%" y="133" width="0.0131%" height="15" fill="rgb(228,190,49)" fg:x="17952" fg:w="14"/><text x="17.0577%" y="143.50"></text></g><g><title>core::mem::drop (507 samples, 0.47%)</title><rect x="16.8059%" y="229" width="0.4747%" height="15" fill="rgb(214,173,12)" fg:x="17950" fg:w="507"/><text x="17.0559%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (507 samples, 0.47%)</title><rect x="16.8059%" y="213" width="0.4747%" height="15" fill="rgb(218,26,35)" fg:x="17950" fg:w="507"/><text x="17.0559%" y="223.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (507 samples, 0.47%)</title><rect x="16.8059%" y="197" width="0.4747%" height="15" fill="rgb(220,200,19)" fg:x="17950" fg:w="507"/><text x="17.0559%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (491 samples, 0.46%)</title><rect x="16.8208%" y="181" width="0.4597%" height="15" fill="rgb(239,95,49)" fg:x="17966" fg:w="491"/><text x="17.0708%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_sub (491 samples, 0.46%)</title><rect x="16.8208%" y="165" width="0.4597%" height="15" fill="rgb(235,85,53)" fg:x="17966" fg:w="491"/><text x="17.0708%" y="175.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="17.3236%" y="85" width="0.0103%" height="15" fill="rgb(233,133,31)" fg:x="18503" fg:w="11"/><text x="17.5736%" y="95.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (21 samples, 0.02%)</title><rect x="17.4023%" y="53" width="0.0197%" height="15" fill="rgb(218,25,20)" fg:x="18587" fg:w="21"/><text x="17.6523%" y="63.50"></text></g><g><title> (21 samples, 0.02%)</title><rect x="17.4023%" y="37" width="0.0197%" height="15" fill="rgb(252,210,38)" fg:x="18587" fg:w="21"/><text x="17.6523%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (107 samples, 0.10%)</title><rect x="17.3358%" y="85" width="0.1002%" height="15" fill="rgb(242,134,21)" fg:x="18516" fg:w="107"/><text x="17.5858%" y="95.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (91 samples, 0.09%)</title><rect x="17.3508%" y="69" width="0.0852%" height="15" fill="rgb(213,28,48)" fg:x="18532" fg:w="91"/><text x="17.6008%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (133 samples, 0.12%)</title><rect x="17.3236%" y="117" width="0.1245%" height="15" fill="rgb(250,196,2)" fg:x="18503" fg:w="133"/><text x="17.5736%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (133 samples, 0.12%)</title><rect x="17.3236%" y="101" width="0.1245%" height="15" fill="rgb(227,5,17)" fg:x="18503" fg:w="133"/><text x="17.5736%" y="111.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="17.4360%" y="85" width="0.0122%" height="15" fill="rgb(221,226,24)" fg:x="18623" fg:w="13"/><text x="17.6860%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (145 samples, 0.14%)</title><rect x="17.3236%" y="149" width="0.1358%" height="15" fill="rgb(211,5,48)" fg:x="18503" fg:w="145"/><text x="17.5736%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (145 samples, 0.14%)</title><rect x="17.3236%" y="133" width="0.1358%" height="15" fill="rgb(219,150,6)" fg:x="18503" fg:w="145"/><text x="17.5736%" y="143.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="17.4481%" y="117" width="0.0112%" height="15" fill="rgb(251,46,16)" fg:x="18636" fg:w="12"/><text x="17.6981%" y="127.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="17.4481%" y="101" width="0.0112%" height="15" fill="rgb(220,204,40)" fg:x="18636" fg:w="12"/><text x="17.6981%" y="111.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="17.4481%" y="85" width="0.0112%" height="15" fill="rgb(211,85,2)" fg:x="18636" fg:w="12"/><text x="17.6981%" y="95.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="17.4481%" y="69" width="0.0112%" height="15" fill="rgb(229,17,7)" fg:x="18636" fg:w="12"/><text x="17.6981%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (155 samples, 0.15%)</title><rect x="17.3189%" y="165" width="0.1451%" height="15" fill="rgb(239,72,28)" fg:x="18498" fg:w="155"/><text x="17.5689%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (718 samples, 0.67%)</title><rect x="16.7965%" y="245" width="0.6722%" height="15" fill="rgb(230,47,54)" fg:x="17940" fg:w="718"/><text x="17.0465%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (201 samples, 0.19%)</title><rect x="17.2805%" y="229" width="0.1882%" height="15" fill="rgb(214,50,8)" fg:x="18457" fg:w="201"/><text x="17.5305%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (201 samples, 0.19%)</title><rect x="17.2805%" y="213" width="0.1882%" height="15" fill="rgb(216,198,43)" fg:x="18457" fg:w="201"/><text x="17.5305%" y="223.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (201 samples, 0.19%)</title><rect x="17.2805%" y="197" width="0.1882%" height="15" fill="rgb(234,20,35)" fg:x="18457" fg:w="201"/><text x="17.5305%" y="207.50"></text></g><g><title>rust_dealloc (169 samples, 0.16%)</title><rect x="17.3105%" y="181" width="0.1582%" height="15" fill="rgb(254,45,19)" fg:x="18489" fg:w="169"/><text x="17.5605%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (837 samples, 0.78%)</title><rect x="17.4687%" y="245" width="0.7836%" height="15" fill="rgb(219,14,44)" fg:x="18658" fg:w="837"/><text x="17.7187%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_sub (837 samples, 0.78%)</title><rect x="17.4687%" y="229" width="0.7836%" height="15" fill="rgb(217,220,26)" fg:x="18658" fg:w="837"/><text x="17.7187%" y="239.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="18.2748%" y="213" width="0.0112%" height="15" fill="rgb(213,158,28)" fg:x="19519" fg:w="12"/><text x="18.5248%" y="223.50"></text></g><g><title>sizeclass_to_size (13 samples, 0.01%)</title><rect x="18.2983%" y="149" width="0.0122%" height="15" fill="rgb(252,51,52)" fg:x="19544" fg:w="13"/><text x="18.5483%" y="159.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (13 samples, 0.01%)</title><rect x="18.2983%" y="133" width="0.0122%" height="15" fill="rgb(246,89,16)" fg:x="19544" fg:w="13"/><text x="18.5483%" y="143.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (16 samples, 0.01%)</title><rect x="18.3189%" y="117" width="0.0150%" height="15" fill="rgb(216,158,49)" fg:x="19566" fg:w="16"/><text x="18.5689%" y="127.50"></text></g><g><title> (16 samples, 0.01%)</title><rect x="18.3189%" y="101" width="0.0150%" height="15" fill="rgb(236,107,19)" fg:x="19566" fg:w="16"/><text x="18.5689%" y="111.50"></text></g><g><title>rust_dealloc (97 samples, 0.09%)</title><rect x="18.2524%" y="245" width="0.0908%" height="15" fill="rgb(228,185,30)" fg:x="19495" fg:w="97"/><text x="18.5024%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (82 samples, 0.08%)</title><rect x="18.2664%" y="229" width="0.0768%" height="15" fill="rgb(246,134,8)" fg:x="19510" fg:w="82"/><text x="18.5164%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (61 samples, 0.06%)</title><rect x="18.2861%" y="213" width="0.0571%" height="15" fill="rgb(214,143,50)" fg:x="19531" fg:w="61"/><text x="18.5361%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (61 samples, 0.06%)</title><rect x="18.2861%" y="197" width="0.0571%" height="15" fill="rgb(228,75,8)" fg:x="19531" fg:w="61"/><text x="18.5361%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (61 samples, 0.06%)</title><rect x="18.2861%" y="181" width="0.0571%" height="15" fill="rgb(207,175,4)" fg:x="19531" fg:w="61"/><text x="18.5361%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (61 samples, 0.06%)</title><rect x="18.2861%" y="165" width="0.0571%" height="15" fill="rgb(205,108,24)" fg:x="19531" fg:w="61"/><text x="18.5361%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (35 samples, 0.03%)</title><rect x="18.3104%" y="149" width="0.0328%" height="15" fill="rgb(244,120,49)" fg:x="19557" fg:w="35"/><text x="18.5604%" y="159.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (32 samples, 0.03%)</title><rect x="18.3132%" y="133" width="0.0300%" height="15" fill="rgb(223,47,38)" fg:x="19560" fg:w="32"/><text x="18.5632%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,078 samples, 1.95%)</title><rect x="16.4033%" y="373" width="1.9455%" height="15" fill="rgb(229,179,11)" fg:x="17520" fg:w="2078"/><text x="16.6533%" y="383.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (2,077 samples, 1.94%)</title><rect x="16.4042%" y="357" width="1.9446%" height="15" fill="rgb(231,122,1)" fg:x="17521" fg:w="2077"/><text x="16.6542%" y="367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (2,049 samples, 1.92%)</title><rect x="16.4304%" y="341" width="1.9184%" height="15" fill="rgb(245,119,9)" fg:x="17549" fg:w="2049"/><text x="16.6804%" y="351.50">c..</text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (2,049 samples, 1.92%)</title><rect x="16.4304%" y="325" width="1.9184%" height="15" fill="rgb(241,163,25)" fg:x="17549" fg:w="2049"/><text x="16.6804%" y="335.50">a..</text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (1,673 samples, 1.57%)</title><rect x="16.7825%" y="309" width="1.5664%" height="15" fill="rgb(217,214,3)" fg:x="17925" fg:w="1673"/><text x="17.0325%" y="319.50"></text></g><g><title>core::mem::drop (1,664 samples, 1.56%)</title><rect x="16.7909%" y="293" width="1.5579%" height="15" fill="rgb(240,86,28)" fg:x="17934" fg:w="1664"/><text x="17.0409%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,664 samples, 1.56%)</title><rect x="16.7909%" y="277" width="1.5579%" height="15" fill="rgb(215,47,9)" fg:x="17934" fg:w="1664"/><text x="17.0409%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,664 samples, 1.56%)</title><rect x="16.7909%" y="261" width="1.5579%" height="15" fill="rgb(252,25,45)" fg:x="17934" fg:w="1664"/><text x="17.0409%" y="271.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (2,099 samples, 1.97%)</title><rect x="16.3892%" y="437" width="1.9652%" height="15" fill="rgb(251,164,9)" fg:x="17505" fg:w="2099"/><text x="16.6392%" y="447.50">a..</text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (2,095 samples, 1.96%)</title><rect x="16.3930%" y="421" width="1.9615%" height="15" fill="rgb(233,194,0)" fg:x="17509" fg:w="2095"/><text x="16.6430%" y="431.50">a..</text></g><g><title>core::mem::drop (2,084 samples, 1.95%)</title><rect x="16.4033%" y="405" width="1.9512%" height="15" fill="rgb(249,111,24)" fg:x="17520" fg:w="2084"/><text x="16.6533%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,084 samples, 1.95%)</title><rect x="16.4033%" y="389" width="1.9512%" height="15" fill="rgb(250,223,3)" fg:x="17520" fg:w="2084"/><text x="16.6533%" y="399.50">c..</text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (13 samples, 0.01%)</title><rect x="18.3900%" y="309" width="0.0122%" height="15" fill="rgb(236,178,37)" fg:x="19642" fg:w="13"/><text x="18.6400%" y="319.50"></text></g><g><title> (13 samples, 0.01%)</title><rect x="18.3900%" y="293" width="0.0122%" height="15" fill="rgb(241,158,50)" fg:x="19642" fg:w="13"/><text x="18.6400%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (46 samples, 0.04%)</title><rect x="18.3629%" y="373" width="0.0431%" height="15" fill="rgb(213,121,41)" fg:x="19613" fg:w="46"/><text x="18.6129%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (46 samples, 0.04%)</title><rect x="18.3629%" y="357" width="0.0431%" height="15" fill="rgb(240,92,3)" fg:x="19613" fg:w="46"/><text x="18.6129%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (37 samples, 0.03%)</title><rect x="18.3713%" y="341" width="0.0346%" height="15" fill="rgb(205,123,3)" fg:x="19622" fg:w="37"/><text x="18.6213%" y="351.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (33 samples, 0.03%)</title><rect x="18.3750%" y="325" width="0.0309%" height="15" fill="rgb(205,97,47)" fg:x="19626" fg:w="33"/><text x="18.6250%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (62 samples, 0.06%)</title><rect x="18.3629%" y="405" width="0.0580%" height="15" fill="rgb(247,152,14)" fg:x="19613" fg:w="62"/><text x="18.6129%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (62 samples, 0.06%)</title><rect x="18.3629%" y="389" width="0.0580%" height="15" fill="rgb(248,195,53)" fg:x="19613" fg:w="62"/><text x="18.6129%" y="399.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="18.4059%" y="373" width="0.0150%" height="15" fill="rgb(226,201,16)" fg:x="19659" fg:w="16"/><text x="18.6559%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="18.4059%" y="357" width="0.0150%" height="15" fill="rgb(205,98,0)" fg:x="19659" fg:w="16"/><text x="18.6559%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (16 samples, 0.01%)</title><rect x="18.4059%" y="341" width="0.0150%" height="15" fill="rgb(214,191,48)" fg:x="19659" fg:w="16"/><text x="18.6559%" y="351.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.01%)</title><rect x="18.4059%" y="325" width="0.0150%" height="15" fill="rgb(237,112,39)" fg:x="19659" fg:w="16"/><text x="18.6559%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (71 samples, 0.07%)</title><rect x="18.3629%" y="421" width="0.0665%" height="15" fill="rgb(247,203,27)" fg:x="19613" fg:w="71"/><text x="18.6129%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,189 samples, 2.05%)</title><rect x="16.3892%" y="469" width="2.0495%" height="15" fill="rgb(235,124,28)" fg:x="17505" fg:w="2189"/><text x="16.6392%" y="479.50">c..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (2,189 samples, 2.05%)</title><rect x="16.3892%" y="453" width="2.0495%" height="15" fill="rgb(208,207,46)" fg:x="17505" fg:w="2189"/><text x="16.6392%" y="463.50">a..</text></g><g><title>rust_dealloc (90 samples, 0.08%)</title><rect x="18.3544%" y="437" width="0.0843%" height="15" fill="rgb(234,176,4)" fg:x="19604" fg:w="90"/><text x="18.6044%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (46 samples, 0.04%)</title><rect x="18.4415%" y="453" width="0.0431%" height="15" fill="rgb(230,133,28)" fg:x="19697" fg:w="46"/><text x="18.6915%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (27 samples, 0.03%)</title><rect x="18.4864%" y="437" width="0.0253%" height="15" fill="rgb(211,137,40)" fg:x="19745" fg:w="27"/><text x="18.7364%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (27 samples, 0.03%)</title><rect x="18.4864%" y="421" width="0.0253%" height="15" fill="rgb(254,35,13)" fg:x="19745" fg:w="27"/><text x="18.7364%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (93 samples, 0.09%)</title><rect x="18.4387%" y="469" width="0.0871%" height="15" fill="rgb(225,49,51)" fg:x="19694" fg:w="93"/><text x="18.6887%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (44 samples, 0.04%)</title><rect x="18.4846%" y="453" width="0.0412%" height="15" fill="rgb(251,10,15)" fg:x="19743" fg:w="44"/><text x="18.7346%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::slices::private::RSlice&lt;u8&gt;,abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="18.5117%" y="437" width="0.0140%" height="15" fill="rgb(228,207,15)" fg:x="19772" fg:w="15"/><text x="18.7617%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (62 samples, 0.06%)</title><rect x="18.5398%" y="437" width="0.0580%" height="15" fill="rgb(241,99,19)" fg:x="19802" fg:w="62"/><text x="18.7898%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (62 samples, 0.06%)</title><rect x="18.5398%" y="421" width="0.0580%" height="15" fill="rgb(207,104,49)" fg:x="19802" fg:w="62"/><text x="18.7898%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (62 samples, 0.06%)</title><rect x="18.5398%" y="405" width="0.0580%" height="15" fill="rgb(234,99,18)" fg:x="19802" fg:w="62"/><text x="18.7898%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (62 samples, 0.06%)</title><rect x="18.5398%" y="389" width="0.0580%" height="15" fill="rgb(213,191,49)" fg:x="19802" fg:w="62"/><text x="18.7898%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (54 samples, 0.05%)</title><rect x="18.5473%" y="373" width="0.0506%" height="15" fill="rgb(210,226,19)" fg:x="19810" fg:w="54"/><text x="18.7973%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (48 samples, 0.04%)</title><rect x="18.5529%" y="357" width="0.0449%" height="15" fill="rgb(229,97,18)" fg:x="19816" fg:w="48"/><text x="18.8029%" y="367.50"></text></g><g><title>snmalloc::Remote::set_info (21 samples, 0.02%)</title><rect x="18.5782%" y="341" width="0.0197%" height="15" fill="rgb(211,167,15)" fg:x="19843" fg:w="21"/><text x="18.8282%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (69 samples, 0.06%)</title><rect x="18.5351%" y="453" width="0.0646%" height="15" fill="rgb(210,169,34)" fg:x="19797" fg:w="69"/><text x="18.7851%" y="463.50"></text></g><g><title>rust_dealloc (92 samples, 0.09%)</title><rect x="18.5258%" y="469" width="0.0861%" height="15" fill="rgb(241,121,31)" fg:x="19787" fg:w="92"/><text x="18.7758%" y="479.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="18.5997%" y="453" width="0.0122%" height="15" fill="rgb(232,40,11)" fg:x="19866" fg:w="13"/><text x="18.8497%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (4,330 samples, 4.05%)</title><rect x="14.5598%" y="501" width="4.0540%" height="15" fill="rgb(205,86,26)" fg:x="15551" fg:w="4330"/><text x="14.8098%" y="511.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (3,162 samples, 2.96%)</title><rect x="15.6533%" y="485" width="2.9605%" height="15" fill="rgb(231,126,28)" fg:x="16719" fg:w="3162"/><text x="15.9033%" y="495.50">cor..</text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (12 samples, 0.01%)</title><rect x="18.7430%" y="453" width="0.0112%" height="15" fill="rgb(219,221,18)" fg:x="20019" fg:w="12"/><text x="18.9930%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (12 samples, 0.01%)</title><rect x="18.7430%" y="437" width="0.0112%" height="15" fill="rgb(211,40,0)" fg:x="20019" fg:w="12"/><text x="18.9930%" y="447.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (26 samples, 0.02%)</title><rect x="18.7889%" y="421" width="0.0243%" height="15" fill="rgb(239,85,43)" fg:x="20068" fg:w="26"/><text x="19.0389%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (25 samples, 0.02%)</title><rect x="18.7898%" y="405" width="0.0234%" height="15" fill="rgb(231,55,21)" fg:x="20069" fg:w="25"/><text x="19.0398%" y="415.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (69 samples, 0.06%)</title><rect x="18.7654%" y="437" width="0.0646%" height="15" fill="rgb(225,184,43)" fg:x="20043" fg:w="69"/><text x="19.0154%" y="447.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::sub_bucket_for (18 samples, 0.02%)</title><rect x="18.8132%" y="421" width="0.0169%" height="15" fill="rgb(251,158,41)" fg:x="20094" fg:w="18"/><text x="19.0632%" y="431.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (76 samples, 0.07%)</title><rect x="18.7598%" y="453" width="0.0712%" height="15" fill="rgb(234,159,37)" fg:x="20037" fg:w="76"/><text x="19.0098%" y="463.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (227 samples, 0.21%)</title><rect x="18.6288%" y="501" width="0.2125%" height="15" fill="rgb(216,204,22)" fg:x="19897" fg:w="227"/><text x="18.8788%" y="511.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (221 samples, 0.21%)</title><rect x="18.6344%" y="485" width="0.2069%" height="15" fill="rgb(214,17,3)" fg:x="19903" fg:w="221"/><text x="18.8844%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (221 samples, 0.21%)</title><rect x="18.6344%" y="469" width="0.2069%" height="15" fill="rgb(212,111,17)" fg:x="19903" fg:w="221"/><text x="18.8844%" y="479.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="18.8666%" y="405" width="0.0103%" height="15" fill="rgb(221,157,24)" fg:x="20151" fg:w="11"/><text x="19.1166%" y="415.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="18.8666%" y="389" width="0.0103%" height="15" fill="rgb(252,16,13)" fg:x="20151" fg:w="11"/><text x="19.1166%" y="399.50"></text></g><g><title>snmalloc::Remote::set_info (13 samples, 0.01%)</title><rect x="18.9358%" y="373" width="0.0122%" height="15" fill="rgb(221,62,2)" fg:x="20225" fg:w="13"/><text x="19.1858%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (81 samples, 0.08%)</title><rect x="18.8769%" y="405" width="0.0758%" height="15" fill="rgb(247,87,22)" fg:x="20162" fg:w="81"/><text x="19.1269%" y="415.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (73 samples, 0.07%)</title><rect x="18.8844%" y="389" width="0.0683%" height="15" fill="rgb(215,73,9)" fg:x="20170" fg:w="73"/><text x="19.1344%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (113 samples, 0.11%)</title><rect x="18.8600%" y="437" width="0.1058%" height="15" fill="rgb(207,175,33)" fg:x="20144" fg:w="113"/><text x="19.1100%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (113 samples, 0.11%)</title><rect x="18.8600%" y="421" width="0.1058%" height="15" fill="rgb(243,129,54)" fg:x="20144" fg:w="113"/><text x="19.1100%" y="431.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="18.9527%" y="405" width="0.0131%" height="15" fill="rgb(227,119,45)" fg:x="20243" fg:w="14"/><text x="19.2027%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (118 samples, 0.11%)</title><rect x="18.8600%" y="469" width="0.1105%" height="15" fill="rgb(205,109,36)" fg:x="20144" fg:w="118"/><text x="19.1100%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (118 samples, 0.11%)</title><rect x="18.8600%" y="453" width="0.1105%" height="15" fill="rgb(205,6,39)" fg:x="20144" fg:w="118"/><text x="19.1100%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (138 samples, 0.13%)</title><rect x="18.8488%" y="485" width="0.1292%" height="15" fill="rgb(221,32,16)" fg:x="20132" fg:w="138"/><text x="19.0988%" y="495.50"></text></g><g><title>rust_dealloc (158 samples, 0.15%)</title><rect x="18.8413%" y="501" width="0.1479%" height="15" fill="rgb(228,144,50)" fg:x="20124" fg:w="158"/><text x="19.0913%" y="511.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="18.9780%" y="485" width="0.0112%" height="15" fill="rgb(229,201,53)" fg:x="20270" fg:w="12"/><text x="19.2280%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (84 samples, 0.08%)</title><rect x="19.0632%" y="437" width="0.0786%" height="15" fill="rgb(249,153,27)" fg:x="20361" fg:w="84"/><text x="19.3132%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::ge (84 samples, 0.08%)</title><rect x="19.0632%" y="421" width="0.0786%" height="15" fill="rgb(227,106,25)" fg:x="20361" fg:w="84"/><text x="19.3132%" y="431.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (81 samples, 0.08%)</title><rect x="19.0660%" y="405" width="0.0758%" height="15" fill="rgb(230,65,29)" fg:x="20364" fg:w="81"/><text x="19.3160%" y="415.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (81 samples, 0.08%)</title><rect x="19.0660%" y="389" width="0.0758%" height="15" fill="rgb(221,57,46)" fg:x="20364" fg:w="81"/><text x="19.3160%" y="399.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (81 samples, 0.08%)</title><rect x="19.0660%" y="373" width="0.0758%" height="15" fill="rgb(229,161,17)" fg:x="20364" fg:w="81"/><text x="19.3160%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (45 samples, 0.04%)</title><rect x="19.0997%" y="357" width="0.0421%" height="15" fill="rgb(222,213,11)" fg:x="20400" fg:w="45"/><text x="19.3497%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (158 samples, 0.15%)</title><rect x="19.0201%" y="469" width="0.1479%" height="15" fill="rgb(235,35,13)" fg:x="20315" fg:w="158"/><text x="19.2701%" y="479.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (158 samples, 0.15%)</title><rect x="19.0201%" y="453" width="0.1479%" height="15" fill="rgb(233,158,34)" fg:x="20315" fg:w="158"/><text x="19.2701%" y="463.50"></text></g><g><title>core::time::Duration::new (28 samples, 0.03%)</title><rect x="19.1418%" y="437" width="0.0262%" height="15" fill="rgb(215,151,48)" fg:x="20445" fg:w="28"/><text x="19.3918%" y="447.50"></text></g><g><title>std::time::SystemTime::duration_since (167 samples, 0.16%)</title><rect x="19.0201%" y="485" width="0.1564%" height="15" fill="rgb(229,84,14)" fg:x="20315" fg:w="167"/><text x="19.2701%" y="495.50"></text></g><g><title>tremor_common::time::nanotime (824 samples, 0.77%)</title><rect x="18.9892%" y="501" width="0.7715%" height="15" fill="rgb(229,68,14)" fg:x="20282" fg:w="824"/><text x="19.2392%" y="511.50"></text></g><g><title>std::time::SystemTime::now (624 samples, 0.58%)</title><rect x="19.1765%" y="485" width="0.5842%" height="15" fill="rgb(243,106,26)" fg:x="20482" fg:w="624"/><text x="19.4265%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (624 samples, 0.58%)</title><rect x="19.1765%" y="469" width="0.5842%" height="15" fill="rgb(206,45,38)" fg:x="20482" fg:w="624"/><text x="19.4265%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::now (624 samples, 0.58%)</title><rect x="19.1765%" y="453" width="0.5842%" height="15" fill="rgb(226,6,15)" fg:x="20482" fg:w="624"/><text x="19.4265%" y="463.50"></text></g><g><title>__clock_gettime_2 (505 samples, 0.47%)</title><rect x="19.2879%" y="437" width="0.4728%" height="15" fill="rgb(232,22,54)" fg:x="20601" fg:w="505"/><text x="19.5379%" y="447.50"></text></g><g><title>__vdso_clock_gettime (487 samples, 0.46%)</title><rect x="19.3047%" y="421" width="0.4560%" height="15" fill="rgb(229,222,32)" fg:x="20619" fg:w="487"/><text x="19.5547%" y="431.50"></text></g><g><title>[[vdso]] (295 samples, 0.28%)</title><rect x="19.4845%" y="405" width="0.2762%" height="15" fill="rgb(228,62,29)" fg:x="20811" fg:w="295"/><text x="19.7345%" y="415.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (210 samples, 0.20%)</title><rect x="19.7701%" y="485" width="0.1966%" height="15" fill="rgb(251,103,34)" fg:x="21116" fg:w="210"/><text x="20.0201%" y="495.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (18 samples, 0.02%)</title><rect x="19.9498%" y="469" width="0.0169%" height="15" fill="rgb(233,12,30)" fg:x="21308" fg:w="18"/><text x="20.1998%" y="479.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (16 samples, 0.01%)</title><rect x="19.9517%" y="453" width="0.0150%" height="15" fill="rgb(238,52,0)" fg:x="21310" fg:w="16"/><text x="20.2017%" y="463.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (6,690 samples, 6.26%)</title><rect x="13.7181%" y="757" width="6.2636%" height="15" fill="rgb(223,98,5)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="767.50">tremor_r..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,690 samples, 6.26%)</title><rect x="13.7181%" y="741" width="6.2636%" height="15" fill="rgb(228,75,37)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="751.50">&lt;async_f..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,690 samples, 6.26%)</title><rect x="13.7181%" y="725" width="6.2636%" height="15" fill="rgb(205,115,49)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="735.50">&lt;async_f..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (6,690 samples, 6.26%)</title><rect x="13.7181%" y="709" width="6.2636%" height="15" fill="rgb(250,154,43)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="719.50">&lt;core::t..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,690 samples, 6.26%)</title><rect x="13.7181%" y="693" width="6.2636%" height="15" fill="rgb(226,43,29)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="703.50">&lt;async_f..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (6,690 samples, 6.26%)</title><rect x="13.7181%" y="677" width="6.2636%" height="15" fill="rgb(249,228,39)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="687.50">async_ff..</text></g><g><title>std::panic::catch_unwind (6,690 samples, 6.26%)</title><rect x="13.7181%" y="661" width="6.2636%" height="15" fill="rgb(216,79,43)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="671.50">std::pan..</text></g><g><title>std::panicking::try (6,690 samples, 6.26%)</title><rect x="13.7181%" y="645" width="6.2636%" height="15" fill="rgb(228,95,12)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="655.50">std::pan..</text></g><g><title>std::panicking::try::do_call (6,690 samples, 6.26%)</title><rect x="13.7181%" y="629" width="6.2636%" height="15" fill="rgb(249,221,15)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="639.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,690 samples, 6.26%)</title><rect x="13.7181%" y="613" width="6.2636%" height="15" fill="rgb(233,34,13)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="623.50">&lt;core::p..</text></g><g><title>core::ops::function::FnOnce::call_once (6,690 samples, 6.26%)</title><rect x="13.7181%" y="597" width="6.2636%" height="15" fill="rgb(214,103,39)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="607.50">core::op..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (6,690 samples, 6.26%)</title><rect x="13.7181%" y="581" width="6.2636%" height="15" fill="rgb(251,126,39)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="591.50">async_ff..</text></g><g><title>async_ffi::FfiContext::with_context (6,690 samples, 6.26%)</title><rect x="13.7181%" y="565" width="6.2636%" height="15" fill="rgb(214,216,36)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="575.50">async_ff..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (6,690 samples, 6.26%)</title><rect x="13.7181%" y="549" width="6.2636%" height="15" fill="rgb(220,221,8)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="559.50">async_ff..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,690 samples, 6.26%)</title><rect x="13.7181%" y="533" width="6.2636%" height="15" fill="rgb(240,216,3)" fg:x="14652" fg:w="6690"/><text x="13.9681%" y="543.50">&lt;core::f..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (6,542 samples, 6.13%)</title><rect x="13.8566%" y="517" width="6.1250%" height="15" fill="rgb(232,218,17)" fg:x="14800" fg:w="6542"/><text x="14.1066%" y="527.50">&lt;tremor_..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (236 samples, 0.22%)</title><rect x="19.7607%" y="501" width="0.2210%" height="15" fill="rgb(229,163,45)" fg:x="21106" fg:w="236"/><text x="20.0107%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::_::&lt;impl tremor_runtime::connectors::sink::EventSerializerOpaque_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::serialize (16 samples, 0.01%)</title><rect x="19.9667%" y="485" width="0.0150%" height="15" fill="rgb(231,110,42)" fg:x="21326" fg:w="16"/><text x="20.2167%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (27 samples, 0.03%)</title><rect x="20.1989%" y="725" width="0.0253%" height="15" fill="rgb(208,170,48)" fg:x="21574" fg:w="27"/><text x="20.4489%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (27 samples, 0.03%)</title><rect x="20.1989%" y="709" width="0.0253%" height="15" fill="rgb(239,116,25)" fg:x="21574" fg:w="27"/><text x="20.4489%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (27 samples, 0.03%)</title><rect x="20.1989%" y="693" width="0.0253%" height="15" fill="rgb(219,200,50)" fg:x="21574" fg:w="27"/><text x="20.4489%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (33 samples, 0.03%)</title><rect x="20.2541%" y="645" width="0.0309%" height="15" fill="rgb(245,200,0)" fg:x="21633" fg:w="33"/><text x="20.5041%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (33 samples, 0.03%)</title><rect x="20.2541%" y="629" width="0.0309%" height="15" fill="rgb(245,119,33)" fg:x="21633" fg:w="33"/><text x="20.5041%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (33 samples, 0.03%)</title><rect x="20.2541%" y="613" width="0.0309%" height="15" fill="rgb(231,125,12)" fg:x="21633" fg:w="33"/><text x="20.5041%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (33 samples, 0.03%)</title><rect x="20.2541%" y="597" width="0.0309%" height="15" fill="rgb(216,96,41)" fg:x="21633" fg:w="33"/><text x="20.5041%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="20.2541%" y="581" width="0.0309%" height="15" fill="rgb(248,43,45)" fg:x="21633" fg:w="33"/><text x="20.5041%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (20 samples, 0.02%)</title><rect x="20.2663%" y="565" width="0.0187%" height="15" fill="rgb(217,222,7)" fg:x="21646" fg:w="20"/><text x="20.5163%" y="575.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (73 samples, 0.07%)</title><rect x="20.2298%" y="661" width="0.0683%" height="15" fill="rgb(233,28,6)" fg:x="21607" fg:w="73"/><text x="20.4798%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="20.2850%" y="645" width="0.0131%" height="15" fill="rgb(231,218,15)" fg:x="21666" fg:w="14"/><text x="20.5350%" y="655.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="20.2850%" y="629" width="0.0131%" height="15" fill="rgb(226,171,48)" fg:x="21666" fg:w="14"/><text x="20.5350%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="20.2850%" y="613" width="0.0131%" height="15" fill="rgb(235,201,9)" fg:x="21666" fg:w="14"/><text x="20.5350%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="20.2850%" y="597" width="0.0131%" height="15" fill="rgb(217,80,15)" fg:x="21666" fg:w="14"/><text x="20.5350%" y="607.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="20.2850%" y="581" width="0.0131%" height="15" fill="rgb(219,152,8)" fg:x="21666" fg:w="14"/><text x="20.5350%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="20.2850%" y="565" width="0.0131%" height="15" fill="rgb(243,107,38)" fg:x="21666" fg:w="14"/><text x="20.5350%" y="575.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="20.3084%" y="629" width="0.0103%" height="15" fill="rgb(231,17,5)" fg:x="21691" fg:w="11"/><text x="20.5584%" y="639.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="20.3084%" y="613" width="0.0103%" height="15" fill="rgb(209,25,54)" fg:x="21691" fg:w="11"/><text x="20.5584%" y="623.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="20.3234%" y="565" width="0.0103%" height="15" fill="rgb(219,0,2)" fg:x="21707" fg:w="11"/><text x="20.5734%" y="575.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="20.3234%" y="549" width="0.0103%" height="15" fill="rgb(246,9,5)" fg:x="21707" fg:w="11"/><text x="20.5734%" y="559.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (65 samples, 0.06%)</title><rect x="20.3824%" y="517" width="0.0609%" height="15" fill="rgb(226,159,4)" fg:x="21770" fg:w="65"/><text x="20.6324%" y="527.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (65 samples, 0.06%)</title><rect x="20.3824%" y="501" width="0.0609%" height="15" fill="rgb(219,175,34)" fg:x="21770" fg:w="65"/><text x="20.6324%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (126 samples, 0.12%)</title><rect x="20.3337%" y="565" width="0.1180%" height="15" fill="rgb(236,10,46)" fg:x="21718" fg:w="126"/><text x="20.5837%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (126 samples, 0.12%)</title><rect x="20.3337%" y="549" width="0.1180%" height="15" fill="rgb(240,211,16)" fg:x="21718" fg:w="126"/><text x="20.5837%" y="559.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (126 samples, 0.12%)</title><rect x="20.3337%" y="533" width="0.1180%" height="15" fill="rgb(205,3,43)" fg:x="21718" fg:w="126"/><text x="20.5837%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (163 samples, 0.15%)</title><rect x="20.3187%" y="597" width="0.1526%" height="15" fill="rgb(245,7,22)" fg:x="21702" fg:w="163"/><text x="20.5687%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (163 samples, 0.15%)</title><rect x="20.3187%" y="581" width="0.1526%" height="15" fill="rgb(239,132,32)" fg:x="21702" fg:w="163"/><text x="20.5687%" y="591.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (21 samples, 0.02%)</title><rect x="20.4517%" y="565" width="0.0197%" height="15" fill="rgb(228,202,34)" fg:x="21844" fg:w="21"/><text x="20.7017%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (166 samples, 0.16%)</title><rect x="20.3187%" y="629" width="0.1554%" height="15" fill="rgb(254,200,22)" fg:x="21702" fg:w="166"/><text x="20.5687%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (166 samples, 0.16%)</title><rect x="20.3187%" y="613" width="0.1554%" height="15" fill="rgb(219,10,39)" fg:x="21702" fg:w="166"/><text x="20.5687%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (187 samples, 0.18%)</title><rect x="20.3047%" y="645" width="0.1751%" height="15" fill="rgb(226,210,39)" fg:x="21687" fg:w="187"/><text x="20.5547%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,243 samples, 6.78%)</title><rect x="13.7115%" y="773" width="6.7813%" height="15" fill="rgb(208,219,16)" fg:x="14645" fg:w="7243"/><text x="13.9615%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (546 samples, 0.51%)</title><rect x="19.9816%" y="757" width="0.5112%" height="15" fill="rgb(216,158,51)" fg:x="21342" fg:w="546"/><text x="20.2316%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (314 samples, 0.29%)</title><rect x="20.1989%" y="741" width="0.2940%" height="15" fill="rgb(233,14,44)" fg:x="21574" fg:w="314"/><text x="20.4489%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (287 samples, 0.27%)</title><rect x="20.2241%" y="725" width="0.2687%" height="15" fill="rgb(237,97,39)" fg:x="21601" fg:w="287"/><text x="20.4741%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (287 samples, 0.27%)</title><rect x="20.2241%" y="709" width="0.2687%" height="15" fill="rgb(218,198,43)" fg:x="21601" fg:w="287"/><text x="20.4741%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (287 samples, 0.27%)</title><rect x="20.2241%" y="693" width="0.2687%" height="15" fill="rgb(231,104,20)" fg:x="21601" fg:w="287"/><text x="20.4741%" y="703.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (287 samples, 0.27%)</title><rect x="20.2241%" y="677" width="0.2687%" height="15" fill="rgb(254,36,13)" fg:x="21601" fg:w="287"/><text x="20.4741%" y="687.50"></text></g><g><title>rust_dealloc (208 samples, 0.19%)</title><rect x="20.2981%" y="661" width="0.1947%" height="15" fill="rgb(248,14,50)" fg:x="21680" fg:w="208"/><text x="20.5481%" y="671.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="20.4797%" y="645" width="0.0131%" height="15" fill="rgb(217,107,29)" fg:x="21874" fg:w="14"/><text x="20.7297%" y="655.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (13 samples, 0.01%)</title><rect x="20.5041%" y="645" width="0.0122%" height="15" fill="rgb(251,169,33)" fg:x="21900" fg:w="13"/><text x="20.7541%" y="655.50"></text></g><g><title>rust_alloc (18 samples, 0.02%)</title><rect x="20.5509%" y="469" width="0.0169%" height="15" fill="rgb(217,108,32)" fg:x="21950" fg:w="18"/><text x="20.8009%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="20.5771%" y="453" width="0.0197%" height="15" fill="rgb(219,66,42)" fg:x="21978" fg:w="21"/><text x="20.8271%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (21 samples, 0.02%)</title><rect x="20.5771%" y="437" width="0.0197%" height="15" fill="rgb(206,180,7)" fg:x="21978" fg:w="21"/><text x="20.8271%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (18 samples, 0.02%)</title><rect x="20.5799%" y="421" width="0.0169%" height="15" fill="rgb(208,226,31)" fg:x="21981" fg:w="18"/><text x="20.8299%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (17 samples, 0.02%)</title><rect x="20.5809%" y="405" width="0.0159%" height="15" fill="rgb(218,26,49)" fg:x="21982" fg:w="17"/><text x="20.8309%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="20.5809%" y="389" width="0.0159%" height="15" fill="rgb(233,197,48)" fg:x="21982" fg:w="17"/><text x="20.8309%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="20.5809%" y="373" width="0.0159%" height="15" fill="rgb(252,181,51)" fg:x="21982" fg:w="17"/><text x="20.8309%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (17 samples, 0.02%)</title><rect x="20.6033%" y="453" width="0.0159%" height="15" fill="rgb(253,90,19)" fg:x="22006" fg:w="17"/><text x="20.8533%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (17 samples, 0.02%)</title><rect x="20.6033%" y="437" width="0.0159%" height="15" fill="rgb(215,171,30)" fg:x="22006" fg:w="17"/><text x="20.8533%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (307 samples, 0.29%)</title><rect x="20.5443%" y="501" width="0.2874%" height="15" fill="rgb(214,222,9)" fg:x="21943" fg:w="307"/><text x="20.7943%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (300 samples, 0.28%)</title><rect x="20.5509%" y="485" width="0.2809%" height="15" fill="rgb(223,3,22)" fg:x="21950" fg:w="300"/><text x="20.8009%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (279 samples, 0.26%)</title><rect x="20.5706%" y="469" width="0.2612%" height="15" fill="rgb(225,196,46)" fg:x="21971" fg:w="279"/><text x="20.8206%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (227 samples, 0.21%)</title><rect x="20.6192%" y="453" width="0.2125%" height="15" fill="rgb(209,110,37)" fg:x="22023" fg:w="227"/><text x="20.8692%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (227 samples, 0.21%)</title><rect x="20.6192%" y="437" width="0.2125%" height="15" fill="rgb(249,89,12)" fg:x="22023" fg:w="227"/><text x="20.8692%" y="447.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (359 samples, 0.34%)</title><rect x="20.5041%" y="661" width="0.3361%" height="15" fill="rgb(226,27,33)" fg:x="21900" fg:w="359"/><text x="20.7541%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (346 samples, 0.32%)</title><rect x="20.5163%" y="645" width="0.3239%" height="15" fill="rgb(213,82,22)" fg:x="21913" fg:w="346"/><text x="20.7663%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (346 samples, 0.32%)</title><rect x="20.5163%" y="629" width="0.3239%" height="15" fill="rgb(248,140,0)" fg:x="21913" fg:w="346"/><text x="20.7663%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (329 samples, 0.31%)</title><rect x="20.5322%" y="613" width="0.3080%" height="15" fill="rgb(228,106,3)" fg:x="21930" fg:w="329"/><text x="20.7822%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (329 samples, 0.31%)</title><rect x="20.5322%" y="597" width="0.3080%" height="15" fill="rgb(209,23,37)" fg:x="21930" fg:w="329"/><text x="20.7822%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (329 samples, 0.31%)</title><rect x="20.5322%" y="581" width="0.3080%" height="15" fill="rgb(241,93,50)" fg:x="21930" fg:w="329"/><text x="20.7822%" y="591.50"></text></g><g><title>alloc::alloc::alloc (329 samples, 0.31%)</title><rect x="20.5322%" y="565" width="0.3080%" height="15" fill="rgb(253,46,43)" fg:x="21930" fg:w="329"/><text x="20.7822%" y="575.50"></text></g><g><title>__rg_alloc (329 samples, 0.31%)</title><rect x="20.5322%" y="549" width="0.3080%" height="15" fill="rgb(226,206,43)" fg:x="21930" fg:w="329"/><text x="20.7822%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (329 samples, 0.31%)</title><rect x="20.5322%" y="533" width="0.3080%" height="15" fill="rgb(217,54,7)" fg:x="21930" fg:w="329"/><text x="20.7822%" y="543.50"></text></g><g><title>rust_alloc (321 samples, 0.30%)</title><rect x="20.5397%" y="517" width="0.3005%" height="15" fill="rgb(223,5,52)" fg:x="21938" fg:w="321"/><text x="20.7897%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (19 samples, 0.02%)</title><rect x="20.8449%" y="597" width="0.0178%" height="15" fill="rgb(206,52,46)" fg:x="22264" fg:w="19"/><text x="21.0949%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (17 samples, 0.02%)</title><rect x="20.8468%" y="581" width="0.0159%" height="15" fill="rgb(253,136,11)" fg:x="22266" fg:w="17"/><text x="21.0968%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (35 samples, 0.03%)</title><rect x="20.8449%" y="613" width="0.0328%" height="15" fill="rgb(208,106,33)" fg:x="22264" fg:w="35"/><text x="21.0949%" y="623.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (411 samples, 0.38%)</title><rect x="20.4938%" y="741" width="0.3848%" height="15" fill="rgb(206,54,4)" fg:x="21889" fg:w="411"/><text x="20.7438%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (405 samples, 0.38%)</title><rect x="20.4994%" y="725" width="0.3792%" height="15" fill="rgb(213,3,15)" fg:x="21895" fg:w="405"/><text x="20.7494%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (400 samples, 0.37%)</title><rect x="20.5041%" y="709" width="0.3745%" height="15" fill="rgb(252,211,39)" fg:x="21900" fg:w="400"/><text x="20.7541%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (400 samples, 0.37%)</title><rect x="20.5041%" y="693" width="0.3745%" height="15" fill="rgb(223,6,36)" fg:x="21900" fg:w="400"/><text x="20.7541%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (400 samples, 0.37%)</title><rect x="20.5041%" y="677" width="0.3745%" height="15" fill="rgb(252,169,45)" fg:x="21900" fg:w="400"/><text x="20.7541%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (41 samples, 0.04%)</title><rect x="20.8402%" y="661" width="0.0384%" height="15" fill="rgb(212,48,26)" fg:x="22259" fg:w="41"/><text x="21.0902%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (41 samples, 0.04%)</title><rect x="20.8402%" y="645" width="0.0384%" height="15" fill="rgb(251,102,48)" fg:x="22259" fg:w="41"/><text x="21.0902%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (41 samples, 0.04%)</title><rect x="20.8402%" y="629" width="0.0384%" height="15" fill="rgb(243,208,16)" fg:x="22259" fg:w="41"/><text x="21.0902%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="21.2035%" y="709" width="0.0122%" height="15" fill="rgb(219,96,24)" fg:x="22647" fg:w="13"/><text x="21.4535%" y="719.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (11 samples, 0.01%)</title><rect x="21.2156%" y="629" width="0.0103%" height="15" fill="rgb(219,33,29)" fg:x="22660" fg:w="11"/><text x="21.4656%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="21.2156%" y="613" width="0.0103%" height="15" fill="rgb(223,176,5)" fg:x="22660" fg:w="11"/><text x="21.4656%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (28 samples, 0.03%)</title><rect x="21.2156%" y="693" width="0.0262%" height="15" fill="rgb(228,140,14)" fg:x="22660" fg:w="28"/><text x="21.4656%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new (28 samples, 0.03%)</title><rect x="21.2156%" y="677" width="0.0262%" height="15" fill="rgb(217,179,31)" fg:x="22660" fg:w="28"/><text x="21.4656%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28 samples, 0.03%)</title><rect x="21.2156%" y="661" width="0.0262%" height="15" fill="rgb(230,9,30)" fg:x="22660" fg:w="28"/><text x="21.4656%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28 samples, 0.03%)</title><rect x="21.2156%" y="645" width="0.0262%" height="15" fill="rgb(230,136,20)" fg:x="22660" fg:w="28"/><text x="21.4656%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (17 samples, 0.02%)</title><rect x="21.2259%" y="629" width="0.0159%" height="15" fill="rgb(215,210,22)" fg:x="22671" fg:w="17"/><text x="21.4759%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.02%)</title><rect x="21.2830%" y="453" width="0.0243%" height="15" fill="rgb(218,43,5)" fg:x="22732" fg:w="26"/><text x="21.5330%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (26 samples, 0.02%)</title><rect x="21.2830%" y="437" width="0.0243%" height="15" fill="rgb(216,11,5)" fg:x="22732" fg:w="26"/><text x="21.5330%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (23 samples, 0.02%)</title><rect x="21.2859%" y="421" width="0.0215%" height="15" fill="rgb(209,82,29)" fg:x="22735" fg:w="23"/><text x="21.5359%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (19 samples, 0.02%)</title><rect x="21.2896%" y="405" width="0.0178%" height="15" fill="rgb(244,115,12)" fg:x="22739" fg:w="19"/><text x="21.5396%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (19 samples, 0.02%)</title><rect x="21.2896%" y="389" width="0.0178%" height="15" fill="rgb(222,82,18)" fg:x="22739" fg:w="19"/><text x="21.5396%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (19 samples, 0.02%)</title><rect x="21.2896%" y="373" width="0.0178%" height="15" fill="rgb(249,227,8)" fg:x="22739" fg:w="19"/><text x="21.5396%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (73 samples, 0.07%)</title><rect x="21.2774%" y="501" width="0.0683%" height="15" fill="rgb(253,141,45)" fg:x="22726" fg:w="73"/><text x="21.5274%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (73 samples, 0.07%)</title><rect x="21.2774%" y="485" width="0.0683%" height="15" fill="rgb(234,184,4)" fg:x="22726" fg:w="73"/><text x="21.5274%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (68 samples, 0.06%)</title><rect x="21.2821%" y="469" width="0.0637%" height="15" fill="rgb(218,194,23)" fg:x="22731" fg:w="68"/><text x="21.5321%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (39 samples, 0.04%)</title><rect x="21.3093%" y="453" width="0.0365%" height="15" fill="rgb(235,66,41)" fg:x="22760" fg:w="39"/><text x="21.5593%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (39 samples, 0.04%)</title><rect x="21.3093%" y="437" width="0.0365%" height="15" fill="rgb(245,217,1)" fg:x="22760" fg:w="39"/><text x="21.5593%" y="447.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (152 samples, 0.14%)</title><rect x="21.2156%" y="709" width="0.1423%" height="15" fill="rgb(229,91,1)" fg:x="22660" fg:w="152"/><text x="21.4656%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (124 samples, 0.12%)</title><rect x="21.2419%" y="693" width="0.1161%" height="15" fill="rgb(207,101,30)" fg:x="22688" fg:w="124"/><text x="21.4919%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (124 samples, 0.12%)</title><rect x="21.2419%" y="677" width="0.1161%" height="15" fill="rgb(223,82,49)" fg:x="22688" fg:w="124"/><text x="21.4919%" y="687.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (119 samples, 0.11%)</title><rect x="21.2465%" y="661" width="0.1114%" height="15" fill="rgb(218,167,17)" fg:x="22693" fg:w="119"/><text x="21.4965%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (119 samples, 0.11%)</title><rect x="21.2465%" y="645" width="0.1114%" height="15" fill="rgb(208,103,14)" fg:x="22693" fg:w="119"/><text x="21.4965%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (116 samples, 0.11%)</title><rect x="21.2493%" y="629" width="0.1086%" height="15" fill="rgb(238,20,8)" fg:x="22696" fg:w="116"/><text x="21.4993%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (102 samples, 0.10%)</title><rect x="21.2625%" y="613" width="0.0955%" height="15" fill="rgb(218,80,54)" fg:x="22710" fg:w="102"/><text x="21.5125%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (96 samples, 0.09%)</title><rect x="21.2681%" y="597" width="0.0899%" height="15" fill="rgb(240,144,17)" fg:x="22716" fg:w="96"/><text x="21.5181%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (96 samples, 0.09%)</title><rect x="21.2681%" y="581" width="0.0899%" height="15" fill="rgb(245,27,50)" fg:x="22716" fg:w="96"/><text x="21.5181%" y="591.50"></text></g><g><title>alloc::alloc::alloc (96 samples, 0.09%)</title><rect x="21.2681%" y="565" width="0.0899%" height="15" fill="rgb(251,51,7)" fg:x="22716" fg:w="96"/><text x="21.5181%" y="575.50"></text></g><g><title>__rg_alloc (96 samples, 0.09%)</title><rect x="21.2681%" y="549" width="0.0899%" height="15" fill="rgb(245,217,29)" fg:x="22716" fg:w="96"/><text x="21.5181%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (96 samples, 0.09%)</title><rect x="21.2681%" y="533" width="0.0899%" height="15" fill="rgb(221,176,29)" fg:x="22716" fg:w="96"/><text x="21.5181%" y="543.50"></text></g><g><title>rust_alloc (96 samples, 0.09%)</title><rect x="21.2681%" y="517" width="0.0899%" height="15" fill="rgb(212,180,24)" fg:x="22716" fg:w="96"/><text x="21.5181%" y="527.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="21.3458%" y="501" width="0.0122%" height="15" fill="rgb(254,24,2)" fg:x="22799" fg:w="13"/><text x="21.5958%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (11 samples, 0.01%)</title><rect x="21.3879%" y="661" width="0.0103%" height="15" fill="rgb(230,100,2)" fg:x="22844" fg:w="11"/><text x="21.6379%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="21.3879%" y="645" width="0.0103%" height="15" fill="rgb(219,142,25)" fg:x="22844" fg:w="11"/><text x="21.6379%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (11 samples, 0.01%)</title><rect x="21.3879%" y="629" width="0.0103%" height="15" fill="rgb(240,73,43)" fg:x="22844" fg:w="11"/><text x="21.6379%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.4160%" y="629" width="0.0197%" height="15" fill="rgb(214,114,15)" fg:x="22874" fg:w="21"/><text x="21.6660%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.4160%" y="613" width="0.0197%" height="15" fill="rgb(207,130,4)" fg:x="22874" fg:w="21"/><text x="21.6660%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.4160%" y="597" width="0.0197%" height="15" fill="rgb(221,25,40)" fg:x="22874" fg:w="21"/><text x="21.6660%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.4160%" y="581" width="0.0197%" height="15" fill="rgb(241,184,7)" fg:x="22874" fg:w="21"/><text x="21.6660%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="21.4160%" y="565" width="0.0197%" height="15" fill="rgb(235,159,4)" fg:x="22874" fg:w="21"/><text x="21.6660%" y="575.50"></text></g><g><title>abi_stable::erased_types::iterator::next (39 samples, 0.04%)</title><rect x="21.4057%" y="661" width="0.0365%" height="15" fill="rgb(214,87,48)" fg:x="22863" fg:w="39"/><text x="21.6557%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (28 samples, 0.03%)</title><rect x="21.4160%" y="645" width="0.0262%" height="15" fill="rgb(246,198,24)" fg:x="22874" fg:w="28"/><text x="21.6660%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.08%)</title><rect x="21.3804%" y="693" width="0.0786%" height="15" fill="rgb(209,66,40)" fg:x="22836" fg:w="84"/><text x="21.6304%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (84 samples, 0.08%)</title><rect x="21.3804%" y="677" width="0.0786%" height="15" fill="rgb(233,147,39)" fg:x="22836" fg:w="84"/><text x="21.6304%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (18 samples, 0.02%)</title><rect x="21.4422%" y="661" width="0.0169%" height="15" fill="rgb(231,145,52)" fg:x="22902" fg:w="18"/><text x="21.6922%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (18 samples, 0.02%)</title><rect x="21.4422%" y="645" width="0.0169%" height="15" fill="rgb(206,20,26)" fg:x="22902" fg:w="18"/><text x="21.6922%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (20 samples, 0.02%)</title><rect x="21.4675%" y="661" width="0.0187%" height="15" fill="rgb(238,220,4)" fg:x="22929" fg:w="20"/><text x="21.7175%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (20 samples, 0.02%)</title><rect x="21.4675%" y="645" width="0.0187%" height="15" fill="rgb(252,195,42)" fg:x="22929" fg:w="20"/><text x="21.7175%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="21.4750%" y="629" width="0.0112%" height="15" fill="rgb(209,10,6)" fg:x="22937" fg:w="12"/><text x="21.7250%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="21.4750%" y="613" width="0.0112%" height="15" fill="rgb(229,3,52)" fg:x="22937" fg:w="12"/><text x="21.7250%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="21.4750%" y="597" width="0.0112%" height="15" fill="rgb(253,49,37)" fg:x="22937" fg:w="12"/><text x="21.7250%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="21.4750%" y="581" width="0.0112%" height="15" fill="rgb(240,103,49)" fg:x="22937" fg:w="12"/><text x="21.7250%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (51 samples, 0.05%)</title><rect x="21.4591%" y="693" width="0.0477%" height="15" fill="rgb(250,182,30)" fg:x="22920" fg:w="51"/><text x="21.7091%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (51 samples, 0.05%)</title><rect x="21.4591%" y="677" width="0.0477%" height="15" fill="rgb(248,8,30)" fg:x="22920" fg:w="51"/><text x="21.7091%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (22 samples, 0.02%)</title><rect x="21.4862%" y="661" width="0.0206%" height="15" fill="rgb(237,120,30)" fg:x="22949" fg:w="22"/><text x="21.7362%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (22 samples, 0.02%)</title><rect x="21.4862%" y="645" width="0.0206%" height="15" fill="rgb(221,146,34)" fg:x="22949" fg:w="22"/><text x="21.7362%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (13 samples, 0.01%)</title><rect x="21.4946%" y="629" width="0.0122%" height="15" fill="rgb(242,55,13)" fg:x="22958" fg:w="13"/><text x="21.7446%" y="639.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (16 samples, 0.01%)</title><rect x="21.5068%" y="693" width="0.0150%" height="15" fill="rgb(242,112,31)" fg:x="22971" fg:w="16"/><text x="21.7568%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (16 samples, 0.01%)</title><rect x="21.5068%" y="677" width="0.0150%" height="15" fill="rgb(249,192,27)" fg:x="22971" fg:w="16"/><text x="21.7568%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (16 samples, 0.01%)</title><rect x="21.5068%" y="661" width="0.0150%" height="15" fill="rgb(208,204,44)" fg:x="22971" fg:w="16"/><text x="21.7568%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (15 samples, 0.01%)</title><rect x="21.5471%" y="581" width="0.0140%" height="15" fill="rgb(208,93,54)" fg:x="23014" fg:w="15"/><text x="21.7971%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="21.5499%" y="565" width="0.0112%" height="15" fill="rgb(242,1,31)" fg:x="23017" fg:w="12"/><text x="21.7999%" y="575.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="21.5499%" y="549" width="0.0112%" height="15" fill="rgb(241,83,25)" fg:x="23017" fg:w="12"/><text x="21.7999%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="21.5499%" y="533" width="0.0112%" height="15" fill="rgb(205,169,50)" fg:x="23017" fg:w="12"/><text x="21.7999%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="21.5499%" y="517" width="0.0112%" height="15" fill="rgb(239,186,37)" fg:x="23017" fg:w="12"/><text x="21.7999%" y="527.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="21.5499%" y="501" width="0.0112%" height="15" fill="rgb(205,221,10)" fg:x="23017" fg:w="12"/><text x="21.7999%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="21.5499%" y="485" width="0.0112%" height="15" fill="rgb(218,196,15)" fg:x="23017" fg:w="12"/><text x="21.7999%" y="495.50"></text></g><g><title>rust_dealloc (25 samples, 0.02%)</title><rect x="21.5911%" y="485" width="0.0234%" height="15" fill="rgb(218,196,35)" fg:x="23061" fg:w="25"/><text x="21.8411%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="21.6248%" y="437" width="0.0131%" height="15" fill="rgb(233,63,24)" fg:x="23097" fg:w="14"/><text x="21.8748%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="21.6173%" y="485" width="0.0290%" height="15" fill="rgb(225,8,4)" fg:x="23089" fg:w="31"/><text x="21.8673%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="21.6173%" y="469" width="0.0290%" height="15" fill="rgb(234,105,35)" fg:x="23089" fg:w="31"/><text x="21.8673%" y="479.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="21.6173%" y="453" width="0.0290%" height="15" fill="rgb(236,21,32)" fg:x="23089" fg:w="31"/><text x="21.8673%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (65 samples, 0.06%)</title><rect x="21.5873%" y="517" width="0.0609%" height="15" fill="rgb(228,109,6)" fg:x="23057" fg:w="65"/><text x="21.8373%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (65 samples, 0.06%)</title><rect x="21.5873%" y="501" width="0.0609%" height="15" fill="rgb(229,215,31)" fg:x="23057" fg:w="65"/><text x="21.8373%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (70 samples, 0.07%)</title><rect x="21.5873%" y="549" width="0.0655%" height="15" fill="rgb(221,52,54)" fg:x="23057" fg:w="70"/><text x="21.8373%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (70 samples, 0.07%)</title><rect x="21.5873%" y="533" width="0.0655%" height="15" fill="rgb(252,129,43)" fg:x="23057" fg:w="70"/><text x="21.8373%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (90 samples, 0.08%)</title><rect x="21.5733%" y="565" width="0.0843%" height="15" fill="rgb(248,183,27)" fg:x="23042" fg:w="90"/><text x="21.8233%" y="575.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,250 samples, 1.17%)</title><rect x="20.4928%" y="773" width="1.1703%" height="15" fill="rgb(250,0,22)" fg:x="21888" fg:w="1250"/><text x="20.7428%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,250 samples, 1.17%)</title><rect x="20.4928%" y="757" width="1.1703%" height="15" fill="rgb(213,166,10)" fg:x="21888" fg:w="1250"/><text x="20.7428%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (838 samples, 0.78%)</title><rect x="20.8786%" y="741" width="0.7846%" height="15" fill="rgb(207,163,36)" fg:x="22300" fg:w="838"/><text x="21.1286%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (491 samples, 0.46%)</title><rect x="21.2035%" y="725" width="0.4597%" height="15" fill="rgb(208,122,22)" fg:x="22647" fg:w="491"/><text x="21.4535%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (326 samples, 0.31%)</title><rect x="21.3580%" y="709" width="0.3052%" height="15" fill="rgb(207,104,49)" fg:x="22812" fg:w="326"/><text x="21.6080%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (151 samples, 0.14%)</title><rect x="21.5218%" y="693" width="0.1414%" height="15" fill="rgb(248,211,50)" fg:x="22987" fg:w="151"/><text x="21.7718%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (151 samples, 0.14%)</title><rect x="21.5218%" y="677" width="0.1414%" height="15" fill="rgb(217,13,45)" fg:x="22987" fg:w="151"/><text x="21.7718%" y="687.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (151 samples, 0.14%)</title><rect x="21.5218%" y="661" width="0.1414%" height="15" fill="rgb(211,216,49)" fg:x="22987" fg:w="151"/><text x="21.7718%" y="671.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (151 samples, 0.14%)</title><rect x="21.5218%" y="645" width="0.1414%" height="15" fill="rgb(221,58,53)" fg:x="22987" fg:w="151"/><text x="21.7718%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (140 samples, 0.13%)</title><rect x="21.5321%" y="629" width="0.1311%" height="15" fill="rgb(220,112,41)" fg:x="22998" fg:w="140"/><text x="21.7821%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (140 samples, 0.13%)</title><rect x="21.5321%" y="613" width="0.1311%" height="15" fill="rgb(236,38,28)" fg:x="22998" fg:w="140"/><text x="21.7821%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (140 samples, 0.13%)</title><rect x="21.5321%" y="597" width="0.1311%" height="15" fill="rgb(227,195,22)" fg:x="22998" fg:w="140"/><text x="21.7821%" y="607.50"></text></g><g><title>rust_dealloc (109 samples, 0.10%)</title><rect x="21.5611%" y="581" width="0.1021%" height="15" fill="rgb(214,55,33)" fg:x="23029" fg:w="109"/><text x="21.8111%" y="591.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (15 samples, 0.01%)</title><rect x="21.6847%" y="629" width="0.0140%" height="15" fill="rgb(248,80,13)" fg:x="23161" fg:w="15"/><text x="21.9347%" y="639.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="21.7128%" y="485" width="0.0103%" height="15" fill="rgb(238,52,6)" fg:x="23191" fg:w="11"/><text x="21.9628%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="21.7418%" y="437" width="0.0159%" height="15" fill="rgb(224,198,47)" fg:x="23222" fg:w="17"/><text x="21.9918%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (17 samples, 0.02%)</title><rect x="21.7418%" y="421" width="0.0159%" height="15" fill="rgb(233,171,20)" fg:x="23222" fg:w="17"/><text x="21.9918%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (17 samples, 0.02%)</title><rect x="21.7418%" y="405" width="0.0159%" height="15" fill="rgb(241,30,25)" fg:x="23222" fg:w="17"/><text x="21.9918%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="21.7446%" y="389" width="0.0131%" height="15" fill="rgb(207,171,38)" fg:x="23225" fg:w="14"/><text x="21.9946%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="21.7446%" y="373" width="0.0131%" height="15" fill="rgb(234,70,1)" fg:x="23225" fg:w="14"/><text x="21.9946%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="21.7446%" y="357" width="0.0131%" height="15" fill="rgb(232,178,18)" fg:x="23225" fg:w="14"/><text x="21.9946%" y="367.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (292 samples, 0.27%)</title><rect x="21.6847%" y="645" width="0.2734%" height="15" fill="rgb(241,78,40)" fg:x="23161" fg:w="292"/><text x="21.9347%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (277 samples, 0.26%)</title><rect x="21.6987%" y="629" width="0.2593%" height="15" fill="rgb(222,35,25)" fg:x="23176" fg:w="277"/><text x="21.9487%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (277 samples, 0.26%)</title><rect x="21.6987%" y="613" width="0.2593%" height="15" fill="rgb(207,92,16)" fg:x="23176" fg:w="277"/><text x="21.9487%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (263 samples, 0.25%)</title><rect x="21.7119%" y="597" width="0.2462%" height="15" fill="rgb(216,59,51)" fg:x="23190" fg:w="263"/><text x="21.9619%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (262 samples, 0.25%)</title><rect x="21.7128%" y="581" width="0.2453%" height="15" fill="rgb(213,80,28)" fg:x="23191" fg:w="262"/><text x="21.9628%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (262 samples, 0.25%)</title><rect x="21.7128%" y="565" width="0.2453%" height="15" fill="rgb(220,93,7)" fg:x="23191" fg:w="262"/><text x="21.9628%" y="575.50"></text></g><g><title>alloc::alloc::alloc (262 samples, 0.25%)</title><rect x="21.7128%" y="549" width="0.2453%" height="15" fill="rgb(225,24,44)" fg:x="23191" fg:w="262"/><text x="21.9628%" y="559.50"></text></g><g><title>__rg_alloc (262 samples, 0.25%)</title><rect x="21.7128%" y="533" width="0.2453%" height="15" fill="rgb(243,74,40)" fg:x="23191" fg:w="262"/><text x="21.9628%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (262 samples, 0.25%)</title><rect x="21.7128%" y="517" width="0.2453%" height="15" fill="rgb(228,39,7)" fg:x="23191" fg:w="262"/><text x="21.9628%" y="527.50"></text></g><g><title>rust_alloc (262 samples, 0.25%)</title><rect x="21.7128%" y="501" width="0.2453%" height="15" fill="rgb(227,79,8)" fg:x="23191" fg:w="262"/><text x="21.9628%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (251 samples, 0.24%)</title><rect x="21.7231%" y="485" width="0.2350%" height="15" fill="rgb(236,58,11)" fg:x="23202" fg:w="251"/><text x="21.9731%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (251 samples, 0.24%)</title><rect x="21.7231%" y="469" width="0.2350%" height="15" fill="rgb(249,63,35)" fg:x="23202" fg:w="251"/><text x="21.9731%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (236 samples, 0.22%)</title><rect x="21.7371%" y="453" width="0.2210%" height="15" fill="rgb(252,114,16)" fg:x="23217" fg:w="236"/><text x="21.9871%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (204 samples, 0.19%)</title><rect x="21.7671%" y="437" width="0.1910%" height="15" fill="rgb(254,151,24)" fg:x="23249" fg:w="204"/><text x="22.0171%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (204 samples, 0.19%)</title><rect x="21.7671%" y="421" width="0.1910%" height="15" fill="rgb(253,54,39)" fg:x="23249" fg:w="204"/><text x="22.0171%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (120 samples, 0.11%)</title><rect x="22.0124%" y="581" width="0.1124%" height="15" fill="rgb(243,25,45)" fg:x="23511" fg:w="120"/><text x="22.2624%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (120 samples, 0.11%)</title><rect x="22.0124%" y="565" width="0.1124%" height="15" fill="rgb(234,134,9)" fg:x="23511" fg:w="120"/><text x="22.2624%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (136 samples, 0.13%)</title><rect x="22.0049%" y="597" width="0.1273%" height="15" fill="rgb(227,166,31)" fg:x="23503" fg:w="136"/><text x="22.2549%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (661 samples, 0.62%)</title><rect x="21.6660%" y="725" width="0.6189%" height="15" fill="rgb(245,143,41)" fg:x="23141" fg:w="661"/><text x="21.9160%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (643 samples, 0.60%)</title><rect x="21.6828%" y="709" width="0.6020%" height="15" fill="rgb(238,181,32)" fg:x="23159" fg:w="643"/><text x="21.9328%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (641 samples, 0.60%)</title><rect x="21.6847%" y="693" width="0.6001%" height="15" fill="rgb(224,113,18)" fg:x="23161" fg:w="641"/><text x="21.9347%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (641 samples, 0.60%)</title><rect x="21.6847%" y="677" width="0.6001%" height="15" fill="rgb(240,229,28)" fg:x="23161" fg:w="641"/><text x="21.9347%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (641 samples, 0.60%)</title><rect x="21.6847%" y="661" width="0.6001%" height="15" fill="rgb(250,185,3)" fg:x="23161" fg:w="641"/><text x="21.9347%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (349 samples, 0.33%)</title><rect x="21.9581%" y="645" width="0.3268%" height="15" fill="rgb(212,59,25)" fg:x="23453" fg:w="349"/><text x="22.2081%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (349 samples, 0.33%)</title><rect x="21.9581%" y="629" width="0.3268%" height="15" fill="rgb(221,87,20)" fg:x="23453" fg:w="349"/><text x="22.2081%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (349 samples, 0.33%)</title><rect x="21.9581%" y="613" width="0.3268%" height="15" fill="rgb(213,74,28)" fg:x="23453" fg:w="349"/><text x="22.2081%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (163 samples, 0.15%)</title><rect x="22.1322%" y="597" width="0.1526%" height="15" fill="rgb(224,132,34)" fg:x="23639" fg:w="163"/><text x="22.3822%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (19 samples, 0.02%)</title><rect x="22.5873%" y="677" width="0.0178%" height="15" fill="rgb(222,101,24)" fg:x="24125" fg:w="19"/><text x="22.8373%" y="687.50"></text></g><g><title>std::collections::hash::map::RandomState::new (19 samples, 0.02%)</title><rect x="22.5873%" y="661" width="0.0178%" height="15" fill="rgb(254,142,4)" fg:x="24125" fg:w="19"/><text x="22.8373%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.02%)</title><rect x="22.5873%" y="645" width="0.0178%" height="15" fill="rgb(230,229,49)" fg:x="24125" fg:w="19"/><text x="22.8373%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.02%)</title><rect x="22.5873%" y="629" width="0.0178%" height="15" fill="rgb(238,70,47)" fg:x="24125" fg:w="19"/><text x="22.8373%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (15 samples, 0.01%)</title><rect x="22.5910%" y="613" width="0.0140%" height="15" fill="rgb(231,160,17)" fg:x="24129" fg:w="15"/><text x="22.8410%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="22.6565%" y="437" width="0.0150%" height="15" fill="rgb(218,68,53)" fg:x="24199" fg:w="16"/><text x="22.9065%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (16 samples, 0.01%)</title><rect x="22.6565%" y="421" width="0.0150%" height="15" fill="rgb(236,111,10)" fg:x="24199" fg:w="16"/><text x="22.9065%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (13 samples, 0.01%)</title><rect x="22.6594%" y="405" width="0.0122%" height="15" fill="rgb(224,34,41)" fg:x="24202" fg:w="13"/><text x="22.9094%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (51 samples, 0.05%)</title><rect x="22.6500%" y="485" width="0.0477%" height="15" fill="rgb(241,118,19)" fg:x="24192" fg:w="51"/><text x="22.9000%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (51 samples, 0.05%)</title><rect x="22.6500%" y="469" width="0.0477%" height="15" fill="rgb(238,129,25)" fg:x="24192" fg:w="51"/><text x="22.9000%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="22.6565%" y="453" width="0.0412%" height="15" fill="rgb(238,22,31)" fg:x="24199" fg:w="44"/><text x="22.9065%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (25 samples, 0.02%)</title><rect x="22.6743%" y="437" width="0.0234%" height="15" fill="rgb(222,174,48)" fg:x="24218" fg:w="25"/><text x="22.9243%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (25 samples, 0.02%)</title><rect x="22.6743%" y="421" width="0.0234%" height="15" fill="rgb(206,152,40)" fg:x="24218" fg:w="25"/><text x="22.9243%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (123 samples, 0.12%)</title><rect x="22.5873%" y="693" width="0.1152%" height="15" fill="rgb(218,99,54)" fg:x="24125" fg:w="123"/><text x="22.8373%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (104 samples, 0.10%)</title><rect x="22.6050%" y="677" width="0.0974%" height="15" fill="rgb(220,174,26)" fg:x="24144" fg:w="104"/><text x="22.8550%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (104 samples, 0.10%)</title><rect x="22.6050%" y="661" width="0.0974%" height="15" fill="rgb(245,116,9)" fg:x="24144" fg:w="104"/><text x="22.8550%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (93 samples, 0.09%)</title><rect x="22.6153%" y="645" width="0.0871%" height="15" fill="rgb(209,72,35)" fg:x="24155" fg:w="93"/><text x="22.8653%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (93 samples, 0.09%)</title><rect x="22.6153%" y="629" width="0.0871%" height="15" fill="rgb(226,126,21)" fg:x="24155" fg:w="93"/><text x="22.8653%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (92 samples, 0.09%)</title><rect x="22.6163%" y="613" width="0.0861%" height="15" fill="rgb(227,192,1)" fg:x="24156" fg:w="92"/><text x="22.8663%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (71 samples, 0.07%)</title><rect x="22.6359%" y="597" width="0.0665%" height="15" fill="rgb(237,180,29)" fg:x="24177" fg:w="71"/><text x="22.8859%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64 samples, 0.06%)</title><rect x="22.6425%" y="581" width="0.0599%" height="15" fill="rgb(230,197,35)" fg:x="24184" fg:w="64"/><text x="22.8925%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 0.06%)</title><rect x="22.6425%" y="565" width="0.0599%" height="15" fill="rgb(246,193,31)" fg:x="24184" fg:w="64"/><text x="22.8925%" y="575.50"></text></g><g><title>alloc::alloc::alloc (64 samples, 0.06%)</title><rect x="22.6425%" y="549" width="0.0599%" height="15" fill="rgb(241,36,4)" fg:x="24184" fg:w="64"/><text x="22.8925%" y="559.50"></text></g><g><title>__rg_alloc (64 samples, 0.06%)</title><rect x="22.6425%" y="533" width="0.0599%" height="15" fill="rgb(241,130,17)" fg:x="24184" fg:w="64"/><text x="22.8925%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (64 samples, 0.06%)</title><rect x="22.6425%" y="517" width="0.0599%" height="15" fill="rgb(206,137,32)" fg:x="24184" fg:w="64"/><text x="22.8925%" y="527.50"></text></g><g><title>rust_alloc (64 samples, 0.06%)</title><rect x="22.6425%" y="501" width="0.0599%" height="15" fill="rgb(237,228,51)" fg:x="24184" fg:w="64"/><text x="22.8925%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (18 samples, 0.02%)</title><rect x="22.7333%" y="645" width="0.0169%" height="15" fill="rgb(243,6,42)" fg:x="24281" fg:w="18"/><text x="22.9833%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.02%)</title><rect x="22.7333%" y="629" width="0.0169%" height="15" fill="rgb(251,74,28)" fg:x="24281" fg:w="18"/><text x="22.9833%" y="639.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (18 samples, 0.02%)</title><rect x="22.7333%" y="613" width="0.0169%" height="15" fill="rgb(218,20,49)" fg:x="24281" fg:w="18"/><text x="22.9833%" y="623.50"></text></g><g><title>abi_stable::erased_types::iterator::next (18 samples, 0.02%)</title><rect x="22.7548%" y="645" width="0.0169%" height="15" fill="rgb(238,28,14)" fg:x="24304" fg:w="18"/><text x="23.0048%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (13 samples, 0.01%)</title><rect x="22.7595%" y="629" width="0.0122%" height="15" fill="rgb(229,40,46)" fg:x="24309" fg:w="13"/><text x="23.0095%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.07%)</title><rect x="22.7230%" y="677" width="0.0683%" height="15" fill="rgb(244,195,20)" fg:x="24270" fg:w="73"/><text x="22.9730%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (73 samples, 0.07%)</title><rect x="22.7230%" y="661" width="0.0683%" height="15" fill="rgb(253,56,35)" fg:x="24270" fg:w="73"/><text x="22.9730%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (21 samples, 0.02%)</title><rect x="22.7717%" y="645" width="0.0197%" height="15" fill="rgb(210,149,44)" fg:x="24322" fg:w="21"/><text x="23.0217%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (19 samples, 0.02%)</title><rect x="22.7736%" y="629" width="0.0178%" height="15" fill="rgb(240,135,12)" fg:x="24324" fg:w="19"/><text x="23.0236%" y="639.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (11 samples, 0.01%)</title><rect x="22.8026%" y="645" width="0.0103%" height="15" fill="rgb(251,24,50)" fg:x="24355" fg:w="11"/><text x="23.0526%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="22.8129%" y="613" width="0.0131%" height="15" fill="rgb(243,200,47)" fg:x="24366" fg:w="14"/><text x="23.0629%" y="623.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (14 samples, 0.01%)</title><rect x="22.8129%" y="597" width="0.0131%" height="15" fill="rgb(224,166,26)" fg:x="24366" fg:w="14"/><text x="23.0629%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (44 samples, 0.04%)</title><rect x="22.7914%" y="677" width="0.0412%" height="15" fill="rgb(233,0,47)" fg:x="24343" fg:w="44"/><text x="23.0414%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (44 samples, 0.04%)</title><rect x="22.7914%" y="661" width="0.0412%" height="15" fill="rgb(253,80,5)" fg:x="24343" fg:w="44"/><text x="23.0414%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (21 samples, 0.02%)</title><rect x="22.8129%" y="645" width="0.0197%" height="15" fill="rgb(214,133,25)" fg:x="24366" fg:w="21"/><text x="23.0629%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (21 samples, 0.02%)</title><rect x="22.8129%" y="629" width="0.0197%" height="15" fill="rgb(209,27,14)" fg:x="24366" fg:w="21"/><text x="23.0629%" y="639.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="22.8915%" y="469" width="0.0103%" height="15" fill="rgb(219,102,51)" fg:x="24450" fg:w="11"/><text x="23.1415%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (48 samples, 0.04%)</title><rect x="22.9281%" y="421" width="0.0449%" height="15" fill="rgb(237,18,16)" fg:x="24489" fg:w="48"/><text x="23.1781%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (47 samples, 0.04%)</title><rect x="22.9290%" y="405" width="0.0440%" height="15" fill="rgb(241,85,17)" fg:x="24490" fg:w="47"/><text x="23.1790%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (87 samples, 0.08%)</title><rect x="22.9037%" y="469" width="0.0815%" height="15" fill="rgb(236,90,42)" fg:x="24463" fg:w="87"/><text x="23.1537%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (87 samples, 0.08%)</title><rect x="22.9037%" y="453" width="0.0815%" height="15" fill="rgb(249,57,21)" fg:x="24463" fg:w="87"/><text x="23.1537%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (87 samples, 0.08%)</title><rect x="22.9037%" y="437" width="0.0815%" height="15" fill="rgb(243,12,36)" fg:x="24463" fg:w="87"/><text x="23.1537%" y="447.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="22.9730%" y="421" width="0.0122%" height="15" fill="rgb(253,128,47)" fg:x="24537" fg:w="13"/><text x="23.2230%" y="431.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="22.9730%" y="405" width="0.0122%" height="15" fill="rgb(207,33,20)" fg:x="24537" fg:w="13"/><text x="23.2230%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (132 samples, 0.12%)</title><rect x="22.8887%" y="501" width="0.1236%" height="15" fill="rgb(233,215,35)" fg:x="24447" fg:w="132"/><text x="23.1387%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (132 samples, 0.12%)</title><rect x="22.8887%" y="485" width="0.1236%" height="15" fill="rgb(249,188,52)" fg:x="24447" fg:w="132"/><text x="23.1387%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (29 samples, 0.03%)</title><rect x="22.9852%" y="469" width="0.0272%" height="15" fill="rgb(225,12,32)" fg:x="24550" fg:w="29"/><text x="23.2352%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (137 samples, 0.13%)</title><rect x="22.8887%" y="533" width="0.1283%" height="15" fill="rgb(247,98,14)" fg:x="24447" fg:w="137"/><text x="23.1387%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (137 samples, 0.13%)</title><rect x="22.8887%" y="517" width="0.1283%" height="15" fill="rgb(247,219,48)" fg:x="24447" fg:w="137"/><text x="23.1387%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (148 samples, 0.14%)</title><rect x="22.8841%" y="549" width="0.1386%" height="15" fill="rgb(253,60,48)" fg:x="24442" fg:w="148"/><text x="23.1341%" y="559.50"></text></g><g><title>rust_dealloc (165 samples, 0.15%)</title><rect x="22.8766%" y="565" width="0.1545%" height="15" fill="rgb(245,15,52)" fg:x="24434" fg:w="165"/><text x="23.1266%" y="575.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (1,463 samples, 1.37%)</title><rect x="21.6632%" y="773" width="1.3697%" height="15" fill="rgb(220,133,28)" fg:x="23138" fg:w="1463"/><text x="21.9132%" y="783.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,463 samples, 1.37%)</title><rect x="21.6632%" y="757" width="1.3697%" height="15" fill="rgb(217,180,4)" fg:x="23138" fg:w="1463"/><text x="21.9132%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,463 samples, 1.37%)</title><rect x="21.6632%" y="741" width="1.3697%" height="15" fill="rgb(251,24,1)" fg:x="23138" fg:w="1463"/><text x="21.9132%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (799 samples, 0.75%)</title><rect x="22.2848%" y="725" width="0.7481%" height="15" fill="rgb(212,185,49)" fg:x="23802" fg:w="799"/><text x="22.5348%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (483 samples, 0.45%)</title><rect x="22.5807%" y="709" width="0.4522%" height="15" fill="rgb(215,175,22)" fg:x="24118" fg:w="483"/><text x="22.8307%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (353 samples, 0.33%)</title><rect x="22.7024%" y="693" width="0.3305%" height="15" fill="rgb(250,205,14)" fg:x="24248" fg:w="353"/><text x="22.9524%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (205 samples, 0.19%)</title><rect x="22.8410%" y="677" width="0.1919%" height="15" fill="rgb(225,211,22)" fg:x="24396" fg:w="205"/><text x="23.0910%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (205 samples, 0.19%)</title><rect x="22.8410%" y="661" width="0.1919%" height="15" fill="rgb(251,179,42)" fg:x="24396" fg:w="205"/><text x="23.0910%" y="671.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (205 samples, 0.19%)</title><rect x="22.8410%" y="645" width="0.1919%" height="15" fill="rgb(208,216,51)" fg:x="24396" fg:w="205"/><text x="23.0910%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (205 samples, 0.19%)</title><rect x="22.8410%" y="629" width="0.1919%" height="15" fill="rgb(235,36,11)" fg:x="24396" fg:w="205"/><text x="23.0910%" y="639.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (191 samples, 0.18%)</title><rect x="22.8541%" y="613" width="0.1788%" height="15" fill="rgb(213,189,28)" fg:x="24410" fg:w="191"/><text x="23.1041%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (191 samples, 0.18%)</title><rect x="22.8541%" y="597" width="0.1788%" height="15" fill="rgb(227,203,42)" fg:x="24410" fg:w="191"/><text x="23.1041%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (191 samples, 0.18%)</title><rect x="22.8541%" y="581" width="0.1788%" height="15" fill="rgb(244,72,36)" fg:x="24410" fg:w="191"/><text x="23.1041%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="23.0470%" y="629" width="0.0187%" height="15" fill="rgb(213,53,17)" fg:x="24616" fg:w="20"/><text x="23.2970%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="23.0470%" y="613" width="0.0187%" height="15" fill="rgb(207,167,3)" fg:x="24616" fg:w="20"/><text x="23.2970%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="23.0470%" y="597" width="0.0187%" height="15" fill="rgb(216,98,30)" fg:x="24616" fg:w="20"/><text x="23.2970%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="23.0470%" y="581" width="0.0187%" height="15" fill="rgb(236,123,15)" fg:x="24616" fg:w="20"/><text x="23.2970%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="23.0470%" y="565" width="0.0187%" height="15" fill="rgb(248,81,50)" fg:x="24616" fg:w="20"/><text x="23.2970%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="23.0470%" y="549" width="0.0187%" height="15" fill="rgb(214,120,4)" fg:x="24616" fg:w="20"/><text x="23.2970%" y="559.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;abi_stable::std_types::tuple::Tuple2&lt;K,V&gt;&gt;&gt;::extend (51 samples, 0.05%)</title><rect x="23.0329%" y="757" width="0.0477%" height="15" fill="rgb(208,179,34)" fg:x="24601" fg:w="51"/><text x="23.2829%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (51 samples, 0.05%)</title><rect x="23.0329%" y="741" width="0.0477%" height="15" fill="rgb(227,140,7)" fg:x="24601" fg:w="51"/><text x="23.2829%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.05%)</title><rect x="23.0329%" y="725" width="0.0477%" height="15" fill="rgb(214,22,6)" fg:x="24601" fg:w="51"/><text x="23.2829%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.05%)</title><rect x="23.0329%" y="709" width="0.0477%" height="15" fill="rgb(207,137,27)" fg:x="24601" fg:w="51"/><text x="23.2829%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.05%)</title><rect x="23.0329%" y="693" width="0.0477%" height="15" fill="rgb(210,8,46)" fg:x="24601" fg:w="51"/><text x="23.2829%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (51 samples, 0.05%)</title><rect x="23.0329%" y="677" width="0.0477%" height="15" fill="rgb(240,16,54)" fg:x="24601" fg:w="51"/><text x="23.2829%" y="687.50"></text></g><g><title>abi_stable::erased_types::iterator::next (51 samples, 0.05%)</title><rect x="23.0329%" y="661" width="0.0477%" height="15" fill="rgb(211,209,29)" fg:x="24601" fg:w="51"/><text x="23.2829%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (36 samples, 0.03%)</title><rect x="23.0470%" y="645" width="0.0337%" height="15" fill="rgb(226,228,24)" fg:x="24616" fg:w="36"/><text x="23.2970%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl abi_stable::traits::IntoReprC for core::option::Option&lt;T&gt;&gt;::into_c (16 samples, 0.01%)</title><rect x="23.0657%" y="629" width="0.0150%" height="15" fill="rgb(222,84,9)" fg:x="24636" fg:w="16"/><text x="23.3157%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.01%)</title><rect x="23.0657%" y="613" width="0.0150%" height="15" fill="rgb(234,203,30)" fg:x="24636" fg:w="16"/><text x="23.3157%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as core::convert::From&lt;core::option::Option&lt;T&gt;&gt;&gt;::from (16 samples, 0.01%)</title><rect x="23.0657%" y="597" width="0.0150%" height="15" fill="rgb(238,109,14)" fg:x="24636" fg:w="16"/><text x="23.3157%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (10,022 samples, 9.38%)</title><rect x="13.7115%" y="789" width="9.3832%" height="15" fill="rgb(233,206,34)" fg:x="14645" fg:w="10022"/><text x="13.9615%" y="799.50">tremor_runtim..</text></g><g><title>tremor_pipeline::OpMeta::merge (66 samples, 0.06%)</title><rect x="23.0329%" y="773" width="0.0618%" height="15" fill="rgb(220,167,47)" fg:x="24601" fg:w="66"/><text x="23.2829%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.01%)</title><rect x="23.0807%" y="757" width="0.0140%" height="15" fill="rgb(238,105,10)" fg:x="24652" fg:w="15"/><text x="23.3307%" y="767.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (15 samples, 0.01%)</title><rect x="23.0807%" y="741" width="0.0140%" height="15" fill="rgb(213,227,17)" fg:x="24652" fg:w="15"/><text x="23.3307%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (15 samples, 0.01%)</title><rect x="23.0807%" y="725" width="0.0140%" height="15" fill="rgb(217,132,38)" fg:x="24652" fg:w="15"/><text x="23.3307%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (15 samples, 0.01%)</title><rect x="23.0807%" y="709" width="0.0140%" height="15" fill="rgb(242,146,4)" fg:x="24652" fg:w="15"/><text x="23.3307%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (15 samples, 0.01%)</title><rect x="23.0807%" y="693" width="0.0140%" height="15" fill="rgb(212,61,9)" fg:x="24652" fg:w="15"/><text x="23.3307%" y="703.50"></text></g><g><title>rust_dealloc (24 samples, 0.02%)</title><rect x="23.3007%" y="741" width="0.0225%" height="15" fill="rgb(247,126,22)" fg:x="24887" fg:w="24"/><text x="23.5507%" y="751.50"></text></g><g><title>rust_dealloc (20 samples, 0.02%)</title><rect x="23.3306%" y="677" width="0.0187%" height="15" fill="rgb(220,196,2)" fg:x="24919" fg:w="20"/><text x="23.5806%" y="687.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (14 samples, 0.01%)</title><rect x="23.4261%" y="645" width="0.0131%" height="15" fill="rgb(208,46,4)" fg:x="25021" fg:w="14"/><text x="23.6761%" y="655.50"></text></g><g><title> (14 samples, 0.01%)</title><rect x="23.4261%" y="629" width="0.0131%" height="15" fill="rgb(252,104,46)" fg:x="25021" fg:w="14"/><text x="23.6761%" y="639.50"></text></g><g><title>snmalloc::Remote::set_info (15 samples, 0.01%)</title><rect x="23.4393%" y="645" width="0.0140%" height="15" fill="rgb(237,152,48)" fg:x="25035" fg:w="15"/><text x="23.6893%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (111 samples, 0.10%)</title><rect x="23.3531%" y="677" width="0.1039%" height="15" fill="rgb(221,59,37)" fg:x="24943" fg:w="111"/><text x="23.6031%" y="687.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (95 samples, 0.09%)</title><rect x="23.3681%" y="661" width="0.0889%" height="15" fill="rgb(209,202,51)" fg:x="24959" fg:w="95"/><text x="23.6181%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (183 samples, 0.17%)</title><rect x="23.3306%" y="709" width="0.1713%" height="15" fill="rgb(228,81,30)" fg:x="24919" fg:w="183"/><text x="23.5806%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (183 samples, 0.17%)</title><rect x="23.3306%" y="693" width="0.1713%" height="15" fill="rgb(227,42,39)" fg:x="24919" fg:w="183"/><text x="23.5806%" y="703.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (43 samples, 0.04%)</title><rect x="23.4617%" y="677" width="0.0403%" height="15" fill="rgb(221,26,2)" fg:x="25059" fg:w="43"/><text x="23.7117%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (185 samples, 0.17%)</title><rect x="23.3306%" y="741" width="0.1732%" height="15" fill="rgb(254,61,31)" fg:x="24919" fg:w="185"/><text x="23.5806%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (185 samples, 0.17%)</title><rect x="23.3306%" y="725" width="0.1732%" height="15" fill="rgb(222,173,38)" fg:x="24919" fg:w="185"/><text x="23.5806%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (227 samples, 0.21%)</title><rect x="23.3007%" y="757" width="0.2125%" height="15" fill="rgb(218,50,12)" fg:x="24887" fg:w="227"/><text x="23.5507%" y="767.50"></text></g><g><title>rust_dealloc (258 samples, 0.24%)</title><rect x="23.2904%" y="773" width="0.2416%" height="15" fill="rgb(223,88,40)" fg:x="24876" fg:w="258"/><text x="23.5404%" y="783.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (20 samples, 0.02%)</title><rect x="23.5132%" y="757" width="0.0187%" height="15" fill="rgb(237,54,19)" fg:x="25114" fg:w="20"/><text x="23.7632%" y="767.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (471 samples, 0.44%)</title><rect x="23.0947%" y="789" width="0.4410%" height="15" fill="rgb(251,129,25)" fg:x="24667" fg:w="471"/><text x="23.3447%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="24.8605%" y="773" width="0.0215%" height="15" fill="rgb(238,97,19)" fg:x="26553" fg:w="23"/><text x="25.1105%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (518 samples, 0.48%)</title><rect x="25.2575%" y="741" width="0.4850%" height="15" fill="rgb(240,169,18)" fg:x="26977" fg:w="518"/><text x="25.5075%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (446 samples, 0.42%)</title><rect x="25.7425%" y="741" width="0.4176%" height="15" fill="rgb(230,187,49)" fg:x="27495" fg:w="446"/><text x="25.9925%" y="751.50"></text></g><g><title>core::ptr::write (414 samples, 0.39%)</title><rect x="25.7724%" y="725" width="0.3876%" height="15" fill="rgb(209,44,26)" fg:x="27527" fg:w="414"/><text x="26.0224%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (414 samples, 0.39%)</title><rect x="25.7724%" y="709" width="0.3876%" height="15" fill="rgb(244,0,6)" fg:x="27527" fg:w="414"/><text x="26.0224%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (46 samples, 0.04%)</title><rect x="26.1600%" y="741" width="0.0431%" height="15" fill="rgb(248,18,21)" fg:x="27941" fg:w="46"/><text x="26.4100%" y="751.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.01%)</title><rect x="26.2284%" y="709" width="0.0131%" height="15" fill="rgb(245,180,19)" fg:x="28014" fg:w="14"/><text x="26.4784%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="26.2284%" y="693" width="0.0131%" height="15" fill="rgb(252,118,36)" fg:x="28014" fg:w="14"/><text x="26.4784%" y="703.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (16 samples, 0.01%)</title><rect x="26.2415%" y="709" width="0.0150%" height="15" fill="rgb(210,224,19)" fg:x="28028" fg:w="16"/><text x="26.4915%" y="719.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (16 samples, 0.01%)</title><rect x="26.2415%" y="693" width="0.0150%" height="15" fill="rgb(218,30,24)" fg:x="28028" fg:w="16"/><text x="26.4915%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (776 samples, 0.73%)</title><rect x="26.2593%" y="645" width="0.7265%" height="15" fill="rgb(219,75,50)" fg:x="28047" fg:w="776"/><text x="26.5093%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (683 samples, 0.64%)</title><rect x="26.3463%" y="629" width="0.6395%" height="15" fill="rgb(234,72,50)" fg:x="28140" fg:w="683"/><text x="26.5963%" y="639.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (815 samples, 0.76%)</title><rect x="26.2284%" y="725" width="0.7631%" height="15" fill="rgb(219,100,48)" fg:x="28014" fg:w="815"/><text x="26.4784%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (782 samples, 0.73%)</title><rect x="26.2593%" y="709" width="0.7322%" height="15" fill="rgb(253,5,41)" fg:x="28047" fg:w="782"/><text x="26.5093%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (782 samples, 0.73%)</title><rect x="26.2593%" y="693" width="0.7322%" height="15" fill="rgb(247,181,11)" fg:x="28047" fg:w="782"/><text x="26.5093%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (782 samples, 0.73%)</title><rect x="26.2593%" y="677" width="0.7322%" height="15" fill="rgb(222,223,25)" fg:x="28047" fg:w="782"/><text x="26.5093%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (782 samples, 0.73%)</title><rect x="26.2593%" y="661" width="0.7322%" height="15" fill="rgb(214,198,28)" fg:x="28047" fg:w="782"/><text x="26.5093%" y="671.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (861 samples, 0.81%)</title><rect x="26.2031%" y="741" width="0.8061%" height="15" fill="rgb(230,46,43)" fg:x="27987" fg:w="861"/><text x="26.4531%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (19 samples, 0.02%)</title><rect x="26.9914%" y="725" width="0.0178%" height="15" fill="rgb(233,65,53)" fg:x="28829" fg:w="19"/><text x="27.2414%" y="735.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="27.7872%" y="709" width="0.0215%" height="15" fill="rgb(221,121,27)" fg:x="29679" fg:w="23"/><text x="28.0372%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (79 samples, 0.07%)</title><rect x="27.8125%" y="709" width="0.0740%" height="15" fill="rgb(247,70,47)" fg:x="29706" fg:w="79"/><text x="28.0625%" y="719.50"></text></g><g><title>core::ptr::read (41 samples, 0.04%)</title><rect x="27.8481%" y="693" width="0.0384%" height="15" fill="rgb(228,85,35)" fg:x="29744" fg:w="41"/><text x="28.0981%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (429 samples, 0.40%)</title><rect x="27.8865%" y="709" width="0.4017%" height="15" fill="rgb(209,50,18)" fg:x="29785" fg:w="429"/><text x="28.1365%" y="719.50"></text></g><g><title>core::ptr::write (427 samples, 0.40%)</title><rect x="27.8884%" y="693" width="0.3998%" height="15" fill="rgb(250,19,35)" fg:x="29787" fg:w="427"/><text x="28.1384%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (405 samples, 0.38%)</title><rect x="27.9090%" y="677" width="0.3792%" height="15" fill="rgb(253,107,29)" fg:x="29809" fg:w="405"/><text x="28.1590%" y="687.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,376 samples, 1.29%)</title><rect x="27.0148%" y="725" width="1.2883%" height="15" fill="rgb(252,179,29)" fg:x="28854" fg:w="1376"/><text x="27.2648%" y="735.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (11 samples, 0.01%)</title><rect x="28.2928%" y="709" width="0.0103%" height="15" fill="rgb(238,194,6)" fg:x="30219" fg:w="11"/><text x="28.5428%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,432 samples, 1.34%)</title><rect x="27.0092%" y="741" width="1.3407%" height="15" fill="rgb(238,164,29)" fg:x="28848" fg:w="1432"/><text x="27.2592%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (50 samples, 0.05%)</title><rect x="28.3031%" y="725" width="0.0468%" height="15" fill="rgb(224,25,9)" fg:x="30230" fg:w="50"/><text x="28.5531%" y="735.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,558 samples, 3.33%)</title><rect x="25.0253%" y="757" width="3.3312%" height="15" fill="rgb(244,153,23)" fg:x="26729" fg:w="3558"/><text x="25.2753%" y="767.50">tre..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (32 samples, 0.03%)</title><rect x="28.3565%" y="757" width="0.0300%" height="15" fill="rgb(212,203,14)" fg:x="30287" fg:w="32"/><text x="28.6065%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,786 samples, 3.54%)</title><rect x="24.8839%" y="773" width="3.5447%" height="15" fill="rgb(220,164,20)" fg:x="26578" fg:w="3786"/><text x="25.1339%" y="783.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (45 samples, 0.04%)</title><rect x="28.3865%" y="757" width="0.0421%" height="15" fill="rgb(222,203,48)" fg:x="30319" fg:w="45"/><text x="28.6365%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,391 samples, 1.30%)</title><rect x="28.4286%" y="773" width="1.3023%" height="15" fill="rgb(215,159,22)" fg:x="30364" fg:w="1391"/><text x="28.6786%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="29.7356%" y="757" width="0.0206%" height="15" fill="rgb(216,183,47)" fg:x="31760" fg:w="22"/><text x="29.9856%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (24 samples, 0.02%)</title><rect x="29.7356%" y="773" width="0.0225%" height="15" fill="rgb(229,195,25)" fg:x="31760" fg:w="24"/><text x="29.9856%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="29.7581%" y="773" width="0.0112%" height="15" fill="rgb(224,132,51)" fg:x="31784" fg:w="12"/><text x="30.0081%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="29.7581%" y="757" width="0.0112%" height="15" fill="rgb(240,63,7)" fg:x="31784" fg:w="12"/><text x="30.0081%" y="767.50"></text></g><g><title>async_global_executor::reactor::block_on (17,164 samples, 16.07%)</title><rect x="13.7115%" y="1125" width="16.0700%" height="15" fill="rgb(249,182,41)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="1135.50">async_global_executor::re..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (17,164 samples, 16.07%)</title><rect x="13.7115%" y="1109" width="16.0700%" height="15" fill="rgb(243,47,26)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="1119.50">async_global_executor::re..</text></g><g><title>async_io::driver::block_on (17,164 samples, 16.07%)</title><rect x="13.7115%" y="1093" width="16.0700%" height="15" fill="rgb(233,48,2)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="1103.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,164 samples, 16.07%)</title><rect x="13.7115%" y="1077" width="16.0700%" height="15" fill="rgb(244,165,34)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="1087.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,164 samples, 16.07%)</title><rect x="13.7115%" y="1061" width="16.0700%" height="15" fill="rgb(207,89,7)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="1071.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}} (17,164 samples, 16.07%)</title><rect x="13.7115%" y="1045" width="16.0700%" height="15" fill="rgb(244,117,36)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="1055.50">async_executor::Executor:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,164 samples, 16.07%)</title><rect x="13.7115%" y="1029" width="16.0700%" height="15" fill="rgb(226,144,34)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="1039.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,164 samples, 16.07%)</title><rect x="13.7115%" y="1013" width="16.0700%" height="15" fill="rgb(213,23,19)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="1023.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (17,164 samples, 16.07%)</title><rect x="13.7115%" y="997" width="16.0700%" height="15" fill="rgb(217,75,12)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="1007.50">async_executor::Executor:..</text></g><g><title>async_task::runnable::Runnable::run (17,164 samples, 16.07%)</title><rect x="13.7115%" y="981" width="16.0700%" height="15" fill="rgb(224,159,17)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="991.50">async_task::runnable::Run..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (17,164 samples, 16.07%)</title><rect x="13.7115%" y="965" width="16.0700%" height="15" fill="rgb(217,118,1)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="975.50">async_task::raw::RawTask&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (17,164 samples, 16.07%)</title><rect x="13.7115%" y="949" width="16.0700%" height="15" fill="rgb(232,180,48)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="959.50">&lt;core::pin::Pin&lt;P&gt; as cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,164 samples, 16.07%)</title><rect x="13.7115%" y="933" width="16.0700%" height="15" fill="rgb(230,27,33)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="943.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (17,164 samples, 16.07%)</title><rect x="13.7115%" y="917" width="16.0700%" height="15" fill="rgb(205,31,21)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="927.50">async_executor::Executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (17,164 samples, 16.07%)</title><rect x="13.7115%" y="901" width="16.0700%" height="15" fill="rgb(253,59,4)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="911.50">&lt;async_std::task::builder..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (17,164 samples, 16.07%)</title><rect x="13.7115%" y="885" width="16.0700%" height="15" fill="rgb(224,201,9)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="895.50">async_std::task::task_loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17,164 samples, 16.07%)</title><rect x="13.7115%" y="869" width="16.0700%" height="15" fill="rgb(229,206,30)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="879.50">std::thread::local::Local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17,164 samples, 16.07%)</title><rect x="13.7115%" y="853" width="16.0700%" height="15" fill="rgb(212,67,47)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="863.50">std::thread::local::Local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (17,164 samples, 16.07%)</title><rect x="13.7115%" y="837" width="16.0700%" height="15" fill="rgb(211,96,50)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="847.50">async_std::task::task_loc..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (17,164 samples, 16.07%)</title><rect x="13.7115%" y="821" width="16.0700%" height="15" fill="rgb(252,114,18)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="831.50">&lt;async_std::task::builder..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,164 samples, 16.07%)</title><rect x="13.7115%" y="805" width="16.0700%" height="15" fill="rgb(223,58,37)" fg:x="14645" fg:w="17164"/><text x="13.9615%" y="815.50">&lt;core::future::from_gener..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,671 samples, 6.25%)</title><rect x="23.5357%" y="789" width="6.2458%" height="15" fill="rgb(237,70,4)" fg:x="25138" fg:w="6671"/><text x="23.7857%" y="799.50">tremor_r..</text></g><g><title>tremor_runtime::pipeline::maybe_send (13 samples, 0.01%)</title><rect x="29.7693%" y="773" width="0.0122%" height="15" fill="rgb(244,85,46)" fg:x="31796" fg:w="13"/><text x="30.0193%" y="783.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (48 samples, 0.04%)</title><rect x="29.7815%" y="661" width="0.0449%" height="15" fill="rgb(223,39,52)" fg:x="31809" fg:w="48"/><text x="30.0315%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="30.1232%" y="645" width="0.0131%" height="15" fill="rgb(218,200,14)" fg:x="32174" fg:w="14"/><text x="30.3732%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (14 samples, 0.01%)</title><rect x="30.1232%" y="629" width="0.0131%" height="15" fill="rgb(208,171,16)" fg:x="32174" fg:w="14"/><text x="30.3732%" y="639.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="30.1363%" y="645" width="0.0150%" height="15" fill="rgb(234,200,18)" fg:x="32188" fg:w="16"/><text x="30.3863%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (59 samples, 0.06%)</title><rect x="31.4405%" y="613" width="0.0552%" height="15" fill="rgb(228,45,11)" fg:x="33581" fg:w="59"/><text x="31.6905%" y="623.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (59 samples, 0.06%)</title><rect x="31.4405%" y="597" width="0.0552%" height="15" fill="rgb(237,182,11)" fg:x="33581" fg:w="59"/><text x="31.6905%" y="607.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (153 samples, 0.14%)</title><rect x="31.5894%" y="549" width="0.1432%" height="15" fill="rgb(241,175,49)" fg:x="33740" fg:w="153"/><text x="31.8394%" y="559.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (257 samples, 0.24%)</title><rect x="31.4958%" y="581" width="0.2406%" height="15" fill="rgb(247,38,35)" fg:x="33640" fg:w="257"/><text x="31.7458%" y="591.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (157 samples, 0.15%)</title><rect x="31.5894%" y="565" width="0.1470%" height="15" fill="rgb(228,39,49)" fg:x="33740" fg:w="157"/><text x="31.8394%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (44 samples, 0.04%)</title><rect x="31.7654%" y="533" width="0.0412%" height="15" fill="rgb(226,101,26)" fg:x="33928" fg:w="44"/><text x="32.0154%" y="543.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (44 samples, 0.04%)</title><rect x="31.7654%" y="517" width="0.0412%" height="15" fill="rgb(206,141,19)" fg:x="33928" fg:w="44"/><text x="32.0154%" y="527.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (44 samples, 0.04%)</title><rect x="31.7654%" y="501" width="0.0412%" height="15" fill="rgb(211,200,13)" fg:x="33928" fg:w="44"/><text x="32.0154%" y="511.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.01%)</title><rect x="31.8066%" y="485" width="0.0131%" height="15" fill="rgb(241,121,6)" fg:x="33972" fg:w="14"/><text x="32.0566%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.01%)</title><rect x="31.8066%" y="469" width="0.0131%" height="15" fill="rgb(234,221,29)" fg:x="33972" fg:w="14"/><text x="32.0566%" y="479.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (14 samples, 0.01%)</title><rect x="31.8066%" y="453" width="0.0131%" height="15" fill="rgb(229,136,5)" fg:x="33972" fg:w="14"/><text x="32.0566%" y="463.50"></text></g><g><title>async_ffi::FfiContext::with_context (11 samples, 0.01%)</title><rect x="31.8094%" y="437" width="0.0103%" height="15" fill="rgb(238,36,11)" fg:x="33975" fg:w="11"/><text x="32.0594%" y="447.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,255 samples, 1.18%)</title><rect x="31.7570%" y="549" width="1.1750%" height="15" fill="rgb(251,55,41)" fg:x="33919" fg:w="1255"/><text x="32.0070%" y="559.50"></text></g><g><title>std::panic::catch_unwind (1,202 samples, 1.13%)</title><rect x="31.8066%" y="533" width="1.1254%" height="15" fill="rgb(242,34,40)" fg:x="33972" fg:w="1202"/><text x="32.0566%" y="543.50"></text></g><g><title>std::panicking::try (1,202 samples, 1.13%)</title><rect x="31.8066%" y="517" width="1.1254%" height="15" fill="rgb(215,42,17)" fg:x="33972" fg:w="1202"/><text x="32.0566%" y="527.50"></text></g><g><title>std::panicking::try::do_call (1,202 samples, 1.13%)</title><rect x="31.8066%" y="501" width="1.1254%" height="15" fill="rgb(207,44,46)" fg:x="33972" fg:w="1202"/><text x="32.0566%" y="511.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1,188 samples, 1.11%)</title><rect x="31.8197%" y="485" width="1.1123%" height="15" fill="rgb(211,206,28)" fg:x="33986" fg:w="1188"/><text x="32.0697%" y="495.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,267 samples, 1.19%)</title><rect x="31.7467%" y="565" width="1.1862%" height="15" fill="rgb(237,167,16)" fg:x="33908" fg:w="1267"/><text x="31.9967%" y="575.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,285 samples, 1.20%)</title><rect x="31.7364%" y="581" width="1.2031%" height="15" fill="rgb(233,66,6)" fg:x="33897" fg:w="1285"/><text x="31.9864%" y="591.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,725 samples, 1.62%)</title><rect x="31.4958%" y="613" width="1.6150%" height="15" fill="rgb(246,123,29)" fg:x="33640" fg:w="1725"/><text x="31.7458%" y="623.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,725 samples, 1.62%)</title><rect x="31.4958%" y="597" width="1.6150%" height="15" fill="rgb(209,62,40)" fg:x="33640" fg:w="1725"/><text x="31.7458%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (183 samples, 0.17%)</title><rect x="32.9395%" y="581" width="0.1713%" height="15" fill="rgb(218,4,25)" fg:x="35182" fg:w="183"/><text x="33.1895%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (660 samples, 0.62%)</title><rect x="33.1108%" y="613" width="0.6179%" height="15" fill="rgb(253,91,49)" fg:x="35365" fg:w="660"/><text x="33.3608%" y="623.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (58 samples, 0.05%)</title><rect x="33.7287%" y="613" width="0.0543%" height="15" fill="rgb(228,155,29)" fg:x="36025" fg:w="58"/><text x="33.9787%" y="623.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="33.7971%" y="485" width="0.0112%" height="15" fill="rgb(243,57,37)" fg:x="36098" fg:w="12"/><text x="34.0471%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="33.7971%" y="469" width="0.0112%" height="15" fill="rgb(244,167,17)" fg:x="36098" fg:w="12"/><text x="34.0471%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="33.7971%" y="453" width="0.0112%" height="15" fill="rgb(207,181,38)" fg:x="36098" fg:w="12"/><text x="34.0471%" y="463.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="33.7971%" y="437" width="0.0112%" height="15" fill="rgb(211,8,23)" fg:x="36098" fg:w="12"/><text x="34.0471%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="33.7971%" y="421" width="0.0112%" height="15" fill="rgb(235,11,44)" fg:x="36098" fg:w="12"/><text x="34.0471%" y="431.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (28 samples, 0.03%)</title><rect x="33.7830%" y="565" width="0.0262%" height="15" fill="rgb(248,18,52)" fg:x="36083" fg:w="28"/><text x="34.0330%" y="575.50"></text></g><g><title>async_ffi::DropBomb::with (28 samples, 0.03%)</title><rect x="33.7830%" y="549" width="0.0262%" height="15" fill="rgb(208,4,7)" fg:x="36083" fg:w="28"/><text x="34.0330%" y="559.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (13 samples, 0.01%)</title><rect x="33.7971%" y="533" width="0.0122%" height="15" fill="rgb(240,17,39)" fg:x="36098" fg:w="13"/><text x="34.0471%" y="543.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="33.7971%" y="517" width="0.0122%" height="15" fill="rgb(207,170,3)" fg:x="36098" fg:w="13"/><text x="34.0471%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}}&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="33.7971%" y="501" width="0.0122%" height="15" fill="rgb(236,100,52)" fg:x="36098" fg:w="13"/><text x="34.0471%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (29 samples, 0.03%)</title><rect x="33.8598%" y="421" width="0.0272%" height="15" fill="rgb(246,78,51)" fg:x="36165" fg:w="29"/><text x="34.1098%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (22 samples, 0.02%)</title><rect x="33.8664%" y="405" width="0.0206%" height="15" fill="rgb(211,17,15)" fg:x="36172" fg:w="22"/><text x="34.1164%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (71 samples, 0.07%)</title><rect x="33.8308%" y="469" width="0.0665%" height="15" fill="rgb(209,59,46)" fg:x="36134" fg:w="71"/><text x="34.0808%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (71 samples, 0.07%)</title><rect x="33.8308%" y="453" width="0.0665%" height="15" fill="rgb(210,92,25)" fg:x="36134" fg:w="71"/><text x="34.0808%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (66 samples, 0.06%)</title><rect x="33.8355%" y="437" width="0.0618%" height="15" fill="rgb(238,174,52)" fg:x="36139" fg:w="66"/><text x="34.0855%" y="447.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="33.8870%" y="421" width="0.0103%" height="15" fill="rgb(230,73,7)" fg:x="36194" fg:w="11"/><text x="34.1370%" y="431.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="33.8870%" y="405" width="0.0103%" height="15" fill="rgb(243,124,40)" fg:x="36194" fg:w="11"/><text x="34.1370%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (107 samples, 0.10%)</title><rect x="33.8186%" y="501" width="0.1002%" height="15" fill="rgb(244,170,11)" fg:x="36121" fg:w="107"/><text x="34.0686%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (107 samples, 0.10%)</title><rect x="33.8186%" y="485" width="0.1002%" height="15" fill="rgb(207,114,54)" fg:x="36121" fg:w="107"/><text x="34.0686%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (23 samples, 0.02%)</title><rect x="33.8973%" y="469" width="0.0215%" height="15" fill="rgb(205,42,20)" fg:x="36205" fg:w="23"/><text x="34.1473%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (109 samples, 0.10%)</title><rect x="33.8186%" y="533" width="0.1021%" height="15" fill="rgb(230,30,28)" fg:x="36121" fg:w="109"/><text x="34.0686%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (109 samples, 0.10%)</title><rect x="33.8186%" y="517" width="0.1021%" height="15" fill="rgb(205,73,54)" fg:x="36121" fg:w="109"/><text x="34.0686%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (120 samples, 0.11%)</title><rect x="33.8168%" y="549" width="0.1124%" height="15" fill="rgb(254,227,23)" fg:x="36119" fg:w="120"/><text x="34.0668%" y="559.50"></text></g><g><title>rust_dealloc (133 samples, 0.12%)</title><rect x="33.8093%" y="565" width="0.1245%" height="15" fill="rgb(228,202,34)" fg:x="36111" fg:w="133"/><text x="34.0593%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (14 samples, 0.01%)</title><rect x="33.9347%" y="549" width="0.0131%" height="15" fill="rgb(222,225,37)" fg:x="36245" fg:w="14"/><text x="34.1847%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (183 samples, 0.17%)</title><rect x="33.7830%" y="613" width="0.1713%" height="15" fill="rgb(221,14,54)" fg:x="36083" fg:w="183"/><text x="34.0330%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (183 samples, 0.17%)</title><rect x="33.7830%" y="597" width="0.1713%" height="15" fill="rgb(254,102,2)" fg:x="36083" fg:w="183"/><text x="34.0330%" y="607.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (183 samples, 0.17%)</title><rect x="33.7830%" y="581" width="0.1713%" height="15" fill="rgb(232,104,17)" fg:x="36083" fg:w="183"/><text x="34.0330%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (22 samples, 0.02%)</title><rect x="33.9338%" y="565" width="0.0206%" height="15" fill="rgb(250,220,14)" fg:x="36244" fg:w="22"/><text x="34.1838%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (190 samples, 0.18%)</title><rect x="34.4534%" y="597" width="0.1779%" height="15" fill="rgb(241,158,9)" fg:x="36799" fg:w="190"/><text x="34.7034%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (213 samples, 0.20%)</title><rect x="34.6613%" y="501" width="0.1994%" height="15" fill="rgb(246,9,43)" fg:x="37021" fg:w="213"/><text x="34.9113%" y="511.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="34.8644%" y="389" width="0.0103%" height="15" fill="rgb(206,73,33)" fg:x="37238" fg:w="11"/><text x="35.1144%" y="399.50"></text></g><g><title>rust_alloc (42 samples, 0.04%)</title><rect x="34.8757%" y="357" width="0.0393%" height="15" fill="rgb(222,79,8)" fg:x="37250" fg:w="42"/><text x="35.1257%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (13 samples, 0.01%)</title><rect x="34.9272%" y="341" width="0.0122%" height="15" fill="rgb(234,8,54)" fg:x="37305" fg:w="13"/><text x="35.1772%" y="351.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (13 samples, 0.01%)</title><rect x="34.9272%" y="325" width="0.0122%" height="15" fill="rgb(209,134,38)" fg:x="37305" fg:w="13"/><text x="35.1772%" y="335.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (13 samples, 0.01%)</title><rect x="34.9272%" y="309" width="0.0122%" height="15" fill="rgb(230,127,29)" fg:x="37305" fg:w="13"/><text x="35.1772%" y="319.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="34.9272%" y="293" width="0.0122%" height="15" fill="rgb(242,44,41)" fg:x="37305" fg:w="13"/><text x="35.1772%" y="303.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="34.9272%" y="277" width="0.0122%" height="15" fill="rgb(222,56,43)" fg:x="37305" fg:w="13"/><text x="35.1772%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (18 samples, 0.02%)</title><rect x="34.9449%" y="277" width="0.0169%" height="15" fill="rgb(238,39,47)" fg:x="37324" fg:w="18"/><text x="35.1949%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (18 samples, 0.02%)</title><rect x="34.9449%" y="261" width="0.0169%" height="15" fill="rgb(226,79,43)" fg:x="37324" fg:w="18"/><text x="35.1949%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (18 samples, 0.02%)</title><rect x="34.9449%" y="245" width="0.0169%" height="15" fill="rgb(242,105,53)" fg:x="37324" fg:w="18"/><text x="35.1949%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (19 samples, 0.02%)</title><rect x="34.9449%" y="293" width="0.0178%" height="15" fill="rgb(251,132,46)" fg:x="37324" fg:w="19"/><text x="35.1949%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (27 samples, 0.03%)</title><rect x="34.9412%" y="309" width="0.0253%" height="15" fill="rgb(231,77,14)" fg:x="37320" fg:w="27"/><text x="35.1912%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (196 samples, 0.18%)</title><rect x="34.9393%" y="341" width="0.1835%" height="15" fill="rgb(240,135,9)" fg:x="37318" fg:w="196"/><text x="35.1893%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (196 samples, 0.18%)</title><rect x="34.9393%" y="325" width="0.1835%" height="15" fill="rgb(248,109,14)" fg:x="37318" fg:w="196"/><text x="35.1893%" y="335.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (167 samples, 0.16%)</title><rect x="34.9665%" y="309" width="0.1564%" height="15" fill="rgb(227,146,52)" fg:x="37347" fg:w="167"/><text x="35.2165%" y="319.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (148 samples, 0.14%)</title><rect x="34.9843%" y="293" width="0.1386%" height="15" fill="rgb(232,54,3)" fg:x="37366" fg:w="148"/><text x="35.2343%" y="303.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (148 samples, 0.14%)</title><rect x="34.9843%" y="277" width="0.1386%" height="15" fill="rgb(229,201,43)" fg:x="37366" fg:w="148"/><text x="35.2343%" y="287.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (148 samples, 0.14%)</title><rect x="34.9843%" y="261" width="0.1386%" height="15" fill="rgb(252,161,33)" fg:x="37366" fg:w="148"/><text x="35.2343%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (18 samples, 0.02%)</title><rect x="35.1285%" y="309" width="0.0169%" height="15" fill="rgb(226,146,40)" fg:x="37520" fg:w="18"/><text x="35.3785%" y="319.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (17 samples, 0.02%)</title><rect x="35.1294%" y="293" width="0.0159%" height="15" fill="rgb(219,47,25)" fg:x="37521" fg:w="17"/><text x="35.3794%" y="303.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="35.1313%" y="277" width="0.0140%" height="15" fill="rgb(250,135,13)" fg:x="37523" fg:w="15"/><text x="35.3813%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::take (24 samples, 0.02%)</title><rect x="35.1453%" y="309" width="0.0225%" height="15" fill="rgb(219,229,18)" fg:x="37538" fg:w="24"/><text x="35.3953%" y="319.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (24 samples, 0.02%)</title><rect x="35.1453%" y="293" width="0.0225%" height="15" fill="rgb(217,152,27)" fg:x="37538" fg:w="24"/><text x="35.3953%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (55 samples, 0.05%)</title><rect x="35.1228%" y="341" width="0.0515%" height="15" fill="rgb(225,71,47)" fg:x="37514" fg:w="55"/><text x="35.3728%" y="351.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (49 samples, 0.05%)</title><rect x="35.1285%" y="325" width="0.0459%" height="15" fill="rgb(220,139,14)" fg:x="37520" fg:w="49"/><text x="35.3785%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="35.1743%" y="341" width="0.0159%" height="15" fill="rgb(247,54,32)" fg:x="37569" fg:w="17"/><text x="35.4243%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="35.1762%" y="325" width="0.0140%" height="15" fill="rgb(252,131,39)" fg:x="37571" fg:w="15"/><text x="35.4262%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="35.1762%" y="309" width="0.0140%" height="15" fill="rgb(210,108,39)" fg:x="37571" fg:w="15"/><text x="35.4262%" y="319.50"></text></g><g><title>snmalloc::FreeListIter::empty (60 samples, 0.06%)</title><rect x="35.1902%" y="341" width="0.0562%" height="15" fill="rgb(205,23,29)" fg:x="37586" fg:w="60"/><text x="35.4402%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (60 samples, 0.06%)</title><rect x="35.1902%" y="325" width="0.0562%" height="15" fill="rgb(246,139,46)" fg:x="37586" fg:w="60"/><text x="35.4402%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (783 samples, 0.73%)</title><rect x="34.8757%" y="389" width="0.7331%" height="15" fill="rgb(250,81,26)" fg:x="37250" fg:w="783"/><text x="35.1257%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (783 samples, 0.73%)</title><rect x="34.8757%" y="373" width="0.7331%" height="15" fill="rgb(214,104,7)" fg:x="37250" fg:w="783"/><text x="35.1257%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (740 samples, 0.69%)</title><rect x="34.9159%" y="357" width="0.6928%" height="15" fill="rgb(233,189,8)" fg:x="37293" fg:w="740"/><text x="35.1659%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (387 samples, 0.36%)</title><rect x="35.2464%" y="341" width="0.3623%" height="15" fill="rgb(228,141,17)" fg:x="37646" fg:w="387"/><text x="35.4964%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (387 samples, 0.36%)</title><rect x="35.2464%" y="325" width="0.3623%" height="15" fill="rgb(247,157,1)" fg:x="37646" fg:w="387"/><text x="35.4964%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,032 samples, 0.97%)</title><rect x="34.6463%" y="517" width="0.9662%" height="15" fill="rgb(249,225,5)" fg:x="37005" fg:w="1032"/><text x="34.8963%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (803 samples, 0.75%)</title><rect x="34.8607%" y="501" width="0.7518%" height="15" fill="rgb(242,55,13)" fg:x="37234" fg:w="803"/><text x="35.1107%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (803 samples, 0.75%)</title><rect x="34.8607%" y="485" width="0.7518%" height="15" fill="rgb(230,49,50)" fg:x="37234" fg:w="803"/><text x="35.1107%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (803 samples, 0.75%)</title><rect x="34.8607%" y="469" width="0.7518%" height="15" fill="rgb(241,111,38)" fg:x="37234" fg:w="803"/><text x="35.1107%" y="479.50"></text></g><g><title>alloc::alloc::alloc (803 samples, 0.75%)</title><rect x="34.8607%" y="453" width="0.7518%" height="15" fill="rgb(252,155,4)" fg:x="37234" fg:w="803"/><text x="35.1107%" y="463.50"></text></g><g><title>__rg_alloc (803 samples, 0.75%)</title><rect x="34.8607%" y="437" width="0.7518%" height="15" fill="rgb(212,69,32)" fg:x="37234" fg:w="803"/><text x="35.1107%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (803 samples, 0.75%)</title><rect x="34.8607%" y="421" width="0.7518%" height="15" fill="rgb(243,107,47)" fg:x="37234" fg:w="803"/><text x="35.1107%" y="431.50"></text></g><g><title>rust_alloc (799 samples, 0.75%)</title><rect x="34.8644%" y="405" width="0.7481%" height="15" fill="rgb(247,130,12)" fg:x="37238" fg:w="799"/><text x="35.1144%" y="415.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (1,056 samples, 0.99%)</title><rect x="34.6379%" y="597" width="0.9887%" height="15" fill="rgb(233,74,16)" fg:x="36996" fg:w="1056"/><text x="34.8879%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (1,047 samples, 0.98%)</title><rect x="34.6463%" y="581" width="0.9803%" height="15" fill="rgb(208,58,18)" fg:x="37005" fg:w="1047"/><text x="34.8963%" y="591.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (1,047 samples, 0.98%)</title><rect x="34.6463%" y="565" width="0.9803%" height="15" fill="rgb(242,225,1)" fg:x="37005" fg:w="1047"/><text x="34.8963%" y="575.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (1,047 samples, 0.98%)</title><rect x="34.6463%" y="549" width="0.9803%" height="15" fill="rgb(249,39,40)" fg:x="37005" fg:w="1047"/><text x="34.8963%" y="559.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (1,047 samples, 0.98%)</title><rect x="34.6463%" y="533" width="0.9803%" height="15" fill="rgb(207,72,44)" fg:x="37005" fg:w="1047"/><text x="34.8963%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (15 samples, 0.01%)</title><rect x="35.6125%" y="517" width="0.0140%" height="15" fill="rgb(215,193,12)" fg:x="38037" fg:w="15"/><text x="35.8625%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::_::&lt;impl tremor_runtime::connectors::sink::RawSink_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::on_event (23 samples, 0.02%)</title><rect x="35.6265%" y="597" width="0.0215%" height="15" fill="rgb(248,41,39)" fg:x="38052" fg:w="23"/><text x="35.8765%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (5,498 samples, 5.15%)</title><rect x="30.5015%" y="629" width="5.1476%" height="15" fill="rgb(253,85,4)" fg:x="32578" fg:w="5498"/><text x="30.7515%" y="639.50">tremor..</text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (1,810 samples, 1.69%)</title><rect x="33.9544%" y="613" width="1.6946%" height="15" fill="rgb(243,70,31)" fg:x="36266" fg:w="1810"/><text x="34.2044%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,866 samples, 5.49%)</title><rect x="30.1579%" y="645" width="5.4921%" height="15" fill="rgb(253,195,26)" fg:x="32211" fg:w="5866"/><text x="30.4079%" y="655.50">&lt;core::..</text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="35.6500%" y="645" width="0.0197%" height="15" fill="rgb(243,42,11)" fg:x="38077" fg:w="21"/><text x="35.9000%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (17 samples, 0.02%)</title><rect x="35.7408%" y="597" width="0.0159%" height="15" fill="rgb(239,66,17)" fg:x="38174" fg:w="17"/><text x="35.9908%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (17 samples, 0.02%)</title><rect x="35.7408%" y="581" width="0.0159%" height="15" fill="rgb(217,132,21)" fg:x="38174" fg:w="17"/><text x="35.9908%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (11 samples, 0.01%)</title><rect x="35.7651%" y="485" width="0.0103%" height="15" fill="rgb(252,202,21)" fg:x="38200" fg:w="11"/><text x="36.0151%" y="495.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (101 samples, 0.09%)</title><rect x="35.6855%" y="629" width="0.0946%" height="15" fill="rgb(233,98,36)" fg:x="38115" fg:w="101"/><text x="35.9355%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (67 samples, 0.06%)</title><rect x="35.7174%" y="613" width="0.0627%" height="15" fill="rgb(216,153,54)" fg:x="38149" fg:w="67"/><text x="35.9674%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (25 samples, 0.02%)</title><rect x="35.7567%" y="597" width="0.0234%" height="15" fill="rgb(250,99,7)" fg:x="38191" fg:w="25"/><text x="36.0067%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (25 samples, 0.02%)</title><rect x="35.7567%" y="581" width="0.0234%" height="15" fill="rgb(207,56,50)" fg:x="38191" fg:w="25"/><text x="36.0067%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.02%)</title><rect x="35.7567%" y="565" width="0.0234%" height="15" fill="rgb(244,61,34)" fg:x="38191" fg:w="25"/><text x="36.0067%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.02%)</title><rect x="35.7567%" y="549" width="0.0234%" height="15" fill="rgb(241,50,38)" fg:x="38191" fg:w="25"/><text x="36.0067%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.02%)</title><rect x="35.7567%" y="533" width="0.0234%" height="15" fill="rgb(212,166,30)" fg:x="38191" fg:w="25"/><text x="36.0067%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.02%)</title><rect x="35.7567%" y="517" width="0.0234%" height="15" fill="rgb(249,127,32)" fg:x="38191" fg:w="25"/><text x="36.0067%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.01%)</title><rect x="35.7651%" y="501" width="0.0150%" height="15" fill="rgb(209,103,0)" fg:x="38200" fg:w="16"/><text x="36.0151%" y="511.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="35.7801%" y="629" width="0.0253%" height="15" fill="rgb(238,209,51)" fg:x="38216" fg:w="27"/><text x="36.0301%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (163 samples, 0.15%)</title><rect x="35.6696%" y="645" width="0.1526%" height="15" fill="rgb(237,56,23)" fg:x="38098" fg:w="163"/><text x="35.9196%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (18 samples, 0.02%)</title><rect x="35.8054%" y="629" width="0.0169%" height="15" fill="rgb(215,153,46)" fg:x="38243" fg:w="18"/><text x="36.0554%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,730 samples, 1.62%)</title><rect x="35.8222%" y="645" width="1.6197%" height="15" fill="rgb(224,49,31)" fg:x="38261" fg:w="1730"/><text x="36.0722%" y="655.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (46 samples, 0.04%)</title><rect x="37.5646%" y="357" width="0.0431%" height="15" fill="rgb(250,18,42)" fg:x="40122" fg:w="46"/><text x="37.8146%" y="367.50"></text></g><g><title> (46 samples, 0.04%)</title><rect x="37.5646%" y="341" width="0.0431%" height="15" fill="rgb(215,176,39)" fg:x="40122" fg:w="46"/><text x="37.8146%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (149 samples, 0.14%)</title><rect x="37.4775%" y="389" width="0.1395%" height="15" fill="rgb(223,77,29)" fg:x="40029" fg:w="149"/><text x="37.7275%" y="399.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (146 samples, 0.14%)</title><rect x="37.4803%" y="373" width="0.1367%" height="15" fill="rgb(234,94,52)" fg:x="40032" fg:w="146"/><text x="37.7303%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (203 samples, 0.19%)</title><rect x="37.4728%" y="421" width="0.1901%" height="15" fill="rgb(220,154,50)" fg:x="40024" fg:w="203"/><text x="37.7228%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (203 samples, 0.19%)</title><rect x="37.4728%" y="405" width="0.1901%" height="15" fill="rgb(212,11,10)" fg:x="40024" fg:w="203"/><text x="37.7228%" y="415.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (48 samples, 0.04%)</title><rect x="37.6180%" y="389" width="0.0449%" height="15" fill="rgb(205,166,19)" fg:x="40179" fg:w="48"/><text x="37.8680%" y="399.50"></text></g><g><title>rust_dealloc (232 samples, 0.22%)</title><rect x="37.4485%" y="485" width="0.2172%" height="15" fill="rgb(244,198,16)" fg:x="39998" fg:w="232"/><text x="37.6985%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (222 samples, 0.21%)</title><rect x="37.4579%" y="469" width="0.2078%" height="15" fill="rgb(219,69,12)" fg:x="40008" fg:w="222"/><text x="37.7079%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (206 samples, 0.19%)</title><rect x="37.4728%" y="453" width="0.1929%" height="15" fill="rgb(245,30,7)" fg:x="40024" fg:w="206"/><text x="37.7228%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (206 samples, 0.19%)</title><rect x="37.4728%" y="437" width="0.1929%" height="15" fill="rgb(218,221,48)" fg:x="40024" fg:w="206"/><text x="37.7228%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (240 samples, 0.22%)</title><rect x="37.4420%" y="645" width="0.2247%" height="15" fill="rgb(216,66,15)" fg:x="39991" fg:w="240"/><text x="37.6920%" y="655.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (240 samples, 0.22%)</title><rect x="37.4420%" y="629" width="0.2247%" height="15" fill="rgb(226,122,50)" fg:x="39991" fg:w="240"/><text x="37.6920%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (233 samples, 0.22%)</title><rect x="37.4485%" y="613" width="0.2181%" height="15" fill="rgb(239,156,16)" fg:x="39998" fg:w="233"/><text x="37.6985%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (233 samples, 0.22%)</title><rect x="37.4485%" y="597" width="0.2181%" height="15" fill="rgb(224,27,38)" fg:x="39998" fg:w="233"/><text x="37.6985%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (233 samples, 0.22%)</title><rect x="37.4485%" y="581" width="0.2181%" height="15" fill="rgb(224,39,27)" fg:x="39998" fg:w="233"/><text x="37.6985%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (233 samples, 0.22%)</title><rect x="37.4485%" y="565" width="0.2181%" height="15" fill="rgb(215,92,29)" fg:x="39998" fg:w="233"/><text x="37.6985%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (233 samples, 0.22%)</title><rect x="37.4485%" y="549" width="0.2181%" height="15" fill="rgb(207,159,16)" fg:x="39998" fg:w="233"/><text x="37.6985%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (233 samples, 0.22%)</title><rect x="37.4485%" y="533" width="0.2181%" height="15" fill="rgb(238,163,47)" fg:x="39998" fg:w="233"/><text x="37.6985%" y="543.50"></text></g><g><title>__rg_dealloc (233 samples, 0.22%)</title><rect x="37.4485%" y="517" width="0.2181%" height="15" fill="rgb(219,91,49)" fg:x="39998" fg:w="233"/><text x="37.6985%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (233 samples, 0.22%)</title><rect x="37.4485%" y="501" width="0.2181%" height="15" fill="rgb(227,167,31)" fg:x="39998" fg:w="233"/><text x="37.6985%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (33 samples, 0.03%)</title><rect x="37.6667%" y="629" width="0.0309%" height="15" fill="rgb(234,80,54)" fg:x="40231" fg:w="33"/><text x="37.9167%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (42 samples, 0.04%)</title><rect x="37.6667%" y="645" width="0.0393%" height="15" fill="rgb(212,114,2)" fg:x="40231" fg:w="42"/><text x="37.9167%" y="655.50"></text></g><g><title>core::time::Duration::as_nanos (28 samples, 0.03%)</title><rect x="37.7640%" y="629" width="0.0262%" height="15" fill="rgb(234,50,24)" fg:x="40335" fg:w="28"/><text x="38.0140%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (140 samples, 0.13%)</title><rect x="37.8914%" y="581" width="0.1311%" height="15" fill="rgb(221,68,8)" fg:x="40471" fg:w="140"/><text x="38.1414%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (140 samples, 0.13%)</title><rect x="37.8914%" y="565" width="0.1311%" height="15" fill="rgb(254,180,31)" fg:x="40471" fg:w="140"/><text x="38.1414%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (138 samples, 0.13%)</title><rect x="37.8932%" y="549" width="0.1292%" height="15" fill="rgb(247,130,50)" fg:x="40473" fg:w="138"/><text x="38.1432%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (138 samples, 0.13%)</title><rect x="37.8932%" y="533" width="0.1292%" height="15" fill="rgb(211,109,4)" fg:x="40473" fg:w="138"/><text x="38.1432%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (138 samples, 0.13%)</title><rect x="37.8932%" y="517" width="0.1292%" height="15" fill="rgb(238,50,21)" fg:x="40473" fg:w="138"/><text x="38.1432%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (83 samples, 0.08%)</title><rect x="37.9447%" y="501" width="0.0777%" height="15" fill="rgb(225,57,45)" fg:x="40528" fg:w="83"/><text x="38.1947%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (293 samples, 0.27%)</title><rect x="37.7902%" y="613" width="0.2743%" height="15" fill="rgb(209,196,50)" fg:x="40363" fg:w="293"/><text x="38.0402%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (293 samples, 0.27%)</title><rect x="37.7902%" y="597" width="0.2743%" height="15" fill="rgb(242,140,13)" fg:x="40363" fg:w="293"/><text x="38.0402%" y="607.50"></text></g><g><title>core::time::Duration::new (45 samples, 0.04%)</title><rect x="38.0224%" y="581" width="0.0421%" height="15" fill="rgb(217,111,7)" fg:x="40611" fg:w="45"/><text x="38.2724%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (316 samples, 0.30%)</title><rect x="37.7902%" y="629" width="0.2959%" height="15" fill="rgb(253,193,51)" fg:x="40363" fg:w="316"/><text x="38.0402%" y="639.50"></text></g><g><title>tremor_common::time::nanotime (23 samples, 0.02%)</title><rect x="38.0646%" y="613" width="0.0215%" height="15" fill="rgb(252,70,29)" fg:x="40656" fg:w="23"/><text x="38.3146%" y="623.50"></text></g><g><title>tremor_common::time::nanotime (1,694 samples, 1.59%)</title><rect x="37.7060%" y="645" width="1.5860%" height="15" fill="rgb(232,127,12)" fg:x="40273" fg:w="1694"/><text x="37.9560%" y="655.50"></text></g><g><title>std::time::SystemTime::now (1,288 samples, 1.21%)</title><rect x="38.0861%" y="629" width="1.2059%" height="15" fill="rgb(211,180,21)" fg:x="40679" fg:w="1288"/><text x="38.3361%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,288 samples, 1.21%)</title><rect x="38.0861%" y="613" width="1.2059%" height="15" fill="rgb(229,72,13)" fg:x="40679" fg:w="1288"/><text x="38.3361%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (1,288 samples, 1.21%)</title><rect x="38.0861%" y="597" width="1.2059%" height="15" fill="rgb(240,211,49)" fg:x="40679" fg:w="1288"/><text x="38.3361%" y="607.50"></text></g><g><title>__clock_gettime_2 (1,059 samples, 0.99%)</title><rect x="38.3005%" y="581" width="0.9915%" height="15" fill="rgb(219,149,40)" fg:x="40908" fg:w="1059"/><text x="38.5505%" y="591.50"></text></g><g><title>__vdso_clock_gettime (988 samples, 0.93%)</title><rect x="38.3670%" y="565" width="0.9250%" height="15" fill="rgb(210,127,46)" fg:x="40979" fg:w="988"/><text x="38.6170%" y="575.50"></text></g><g><title>[[vdso]] (657 samples, 0.62%)</title><rect x="38.6769%" y="549" width="0.6151%" height="15" fill="rgb(220,106,7)" fg:x="41310" fg:w="657"/><text x="38.9269%" y="559.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (11 samples, 0.01%)</title><rect x="39.3014%" y="549" width="0.0103%" height="15" fill="rgb(249,31,22)" fg:x="41977" fg:w="11"/><text x="39.5514%" y="559.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (15 samples, 0.01%)</title><rect x="39.3126%" y="533" width="0.0140%" height="15" fill="rgb(253,1,49)" fg:x="41989" fg:w="15"/><text x="39.5626%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="39.3126%" y="517" width="0.0140%" height="15" fill="rgb(227,144,33)" fg:x="41989" fg:w="15"/><text x="39.5626%" y="527.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (15 samples, 0.01%)</title><rect x="39.3126%" y="501" width="0.0140%" height="15" fill="rgb(249,163,44)" fg:x="41989" fg:w="15"/><text x="39.5626%" y="511.50"></text></g><g><title>abi_stable::erased_types::iterator::next (13 samples, 0.01%)</title><rect x="39.3266%" y="533" width="0.0122%" height="15" fill="rgb(234,15,39)" fg:x="42004" fg:w="13"/><text x="39.5766%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.05%)</title><rect x="39.3014%" y="597" width="0.0459%" height="15" fill="rgb(207,66,16)" fg:x="41977" fg:w="49"/><text x="39.5514%" y="607.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.05%)</title><rect x="39.3014%" y="581" width="0.0459%" height="15" fill="rgb(233,112,24)" fg:x="41977" fg:w="49"/><text x="39.5514%" y="591.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.05%)</title><rect x="39.3014%" y="565" width="0.0459%" height="15" fill="rgb(230,90,22)" fg:x="41977" fg:w="49"/><text x="39.5514%" y="575.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (38 samples, 0.04%)</title><rect x="39.3117%" y="549" width="0.0356%" height="15" fill="rgb(229,61,13)" fg:x="41988" fg:w="38"/><text x="39.5617%" y="559.50"></text></g><g><title>&lt;abi_stable::std_types::tuple::Tuple2&lt;A,B&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (11 samples, 0.01%)</title><rect x="39.3519%" y="533" width="0.0103%" height="15" fill="rgb(225,57,24)" fg:x="42031" fg:w="11"/><text x="39.6019%" y="543.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_ref (11 samples, 0.01%)</title><rect x="39.3622%" y="533" width="0.0103%" height="15" fill="rgb(208,169,48)" fg:x="42042" fg:w="11"/><text x="39.6122%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (47 samples, 0.04%)</title><rect x="39.3472%" y="597" width="0.0440%" height="15" fill="rgb(244,218,51)" fg:x="42026" fg:w="47"/><text x="39.5972%" y="607.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (47 samples, 0.04%)</title><rect x="39.3472%" y="581" width="0.0440%" height="15" fill="rgb(214,148,10)" fg:x="42026" fg:w="47"/><text x="39.5972%" y="591.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (47 samples, 0.04%)</title><rect x="39.3472%" y="565" width="0.0440%" height="15" fill="rgb(225,174,27)" fg:x="42026" fg:w="47"/><text x="39.5972%" y="575.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (47 samples, 0.04%)</title><rect x="39.3472%" y="549" width="0.0440%" height="15" fill="rgb(230,96,26)" fg:x="42026" fg:w="47"/><text x="39.5972%" y="559.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (13 samples, 0.01%)</title><rect x="39.3791%" y="533" width="0.0122%" height="15" fill="rgb(232,10,30)" fg:x="42060" fg:w="13"/><text x="39.6291%" y="543.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (13 samples, 0.01%)</title><rect x="39.3791%" y="517" width="0.0122%" height="15" fill="rgb(222,8,50)" fg:x="42060" fg:w="13"/><text x="39.6291%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;abi_stable::std_types::tuple::Tuple2&lt;K,V&gt;&gt;&gt;::extend (131 samples, 0.12%)</title><rect x="39.2920%" y="629" width="0.1226%" height="15" fill="rgb(213,81,27)" fg:x="41967" fg:w="131"/><text x="39.5420%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (131 samples, 0.12%)</title><rect x="39.2920%" y="613" width="0.1226%" height="15" fill="rgb(245,50,10)" fg:x="41967" fg:w="131"/><text x="39.5420%" y="623.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (25 samples, 0.02%)</title><rect x="39.3912%" y="597" width="0.0234%" height="15" fill="rgb(216,100,18)" fg:x="42073" fg:w="25"/><text x="39.6412%" y="607.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (17 samples, 0.02%)</title><rect x="39.3987%" y="581" width="0.0159%" height="15" fill="rgb(236,147,54)" fg:x="42081" fg:w="17"/><text x="39.6487%" y="591.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (17 samples, 0.02%)</title><rect x="39.3987%" y="565" width="0.0159%" height="15" fill="rgb(205,143,26)" fg:x="42081" fg:w="17"/><text x="39.6487%" y="575.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (17 samples, 0.02%)</title><rect x="39.3987%" y="549" width="0.0159%" height="15" fill="rgb(236,26,9)" fg:x="42081" fg:w="17"/><text x="39.6487%" y="559.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (17 samples, 0.02%)</title><rect x="39.3987%" y="533" width="0.0159%" height="15" fill="rgb(221,165,53)" fg:x="42081" fg:w="17"/><text x="39.6487%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (17 samples, 0.02%)</title><rect x="39.3987%" y="517" width="0.0159%" height="15" fill="rgb(214,110,17)" fg:x="42081" fg:w="17"/><text x="39.6487%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (17 samples, 0.02%)</title><rect x="39.3987%" y="501" width="0.0159%" height="15" fill="rgb(237,197,12)" fg:x="42081" fg:w="17"/><text x="39.6487%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="39.3987%" y="485" width="0.0159%" height="15" fill="rgb(205,84,17)" fg:x="42081" fg:w="17"/><text x="39.6487%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (24 samples, 0.02%)</title><rect x="39.8725%" y="501" width="0.0225%" height="15" fill="rgb(237,18,45)" fg:x="42587" fg:w="24"/><text x="40.1225%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (44 samples, 0.04%)</title><rect x="39.8968%" y="469" width="0.0412%" height="15" fill="rgb(221,87,14)" fg:x="42613" fg:w="44"/><text x="40.1468%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (44 samples, 0.04%)</title><rect x="39.8968%" y="453" width="0.0412%" height="15" fill="rgb(238,186,15)" fg:x="42613" fg:w="44"/><text x="40.1468%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (68 samples, 0.06%)</title><rect x="39.8968%" y="485" width="0.0637%" height="15" fill="rgb(208,115,11)" fg:x="42613" fg:w="68"/><text x="40.1468%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (24 samples, 0.02%)</title><rect x="39.9380%" y="469" width="0.0225%" height="15" fill="rgb(254,175,0)" fg:x="42657" fg:w="24"/><text x="40.1880%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (15 samples, 0.01%)</title><rect x="39.9464%" y="453" width="0.0140%" height="15" fill="rgb(227,24,42)" fg:x="42666" fg:w="15"/><text x="40.1964%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (15 samples, 0.01%)</title><rect x="39.9464%" y="437" width="0.0140%" height="15" fill="rgb(223,211,37)" fg:x="42666" fg:w="15"/><text x="40.1964%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (588 samples, 0.55%)</title><rect x="39.4334%" y="549" width="0.5505%" height="15" fill="rgb(235,49,27)" fg:x="42118" fg:w="588"/><text x="39.6834%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (538 samples, 0.50%)</title><rect x="39.4802%" y="533" width="0.5037%" height="15" fill="rgb(254,97,51)" fg:x="42168" fg:w="538"/><text x="39.7302%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (132 samples, 0.12%)</title><rect x="39.8603%" y="517" width="0.1236%" height="15" fill="rgb(249,51,40)" fg:x="42574" fg:w="132"/><text x="40.1103%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (95 samples, 0.09%)</title><rect x="39.8950%" y="501" width="0.0889%" height="15" fill="rgb(210,128,45)" fg:x="42611" fg:w="95"/><text x="40.1450%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (25 samples, 0.02%)</title><rect x="39.9605%" y="485" width="0.0234%" height="15" fill="rgb(224,137,50)" fg:x="42681" fg:w="25"/><text x="40.2105%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="40.0082%" y="389" width="0.0403%" height="15" fill="rgb(242,15,9)" fg:x="42732" fg:w="43"/><text x="40.2582%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="40.0082%" y="373" width="0.0403%" height="15" fill="rgb(233,187,41)" fg:x="42732" fg:w="43"/><text x="40.2582%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (35 samples, 0.03%)</title><rect x="40.0157%" y="357" width="0.0328%" height="15" fill="rgb(227,2,29)" fg:x="42740" fg:w="35"/><text x="40.2657%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (34 samples, 0.03%)</title><rect x="40.0167%" y="341" width="0.0318%" height="15" fill="rgb(222,70,3)" fg:x="42741" fg:w="34"/><text x="40.2667%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (34 samples, 0.03%)</title><rect x="40.0167%" y="325" width="0.0318%" height="15" fill="rgb(213,11,42)" fg:x="42741" fg:w="34"/><text x="40.2667%" y="335.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (77 samples, 0.07%)</title><rect x="39.9839%" y="549" width="0.0721%" height="15" fill="rgb(225,150,9)" fg:x="42706" fg:w="77"/><text x="40.2339%" y="559.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (77 samples, 0.07%)</title><rect x="39.9839%" y="533" width="0.0721%" height="15" fill="rgb(230,162,45)" fg:x="42706" fg:w="77"/><text x="40.2339%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (77 samples, 0.07%)</title><rect x="39.9839%" y="517" width="0.0721%" height="15" fill="rgb(222,14,52)" fg:x="42706" fg:w="77"/><text x="40.2339%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (67 samples, 0.06%)</title><rect x="39.9933%" y="501" width="0.0627%" height="15" fill="rgb(254,198,14)" fg:x="42716" fg:w="67"/><text x="40.2433%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62 samples, 0.06%)</title><rect x="39.9979%" y="485" width="0.0580%" height="15" fill="rgb(220,217,30)" fg:x="42721" fg:w="62"/><text x="40.2479%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (62 samples, 0.06%)</title><rect x="39.9979%" y="469" width="0.0580%" height="15" fill="rgb(215,146,41)" fg:x="42721" fg:w="62"/><text x="40.2479%" y="479.50"></text></g><g><title>alloc::alloc::alloc (62 samples, 0.06%)</title><rect x="39.9979%" y="453" width="0.0580%" height="15" fill="rgb(217,27,36)" fg:x="42721" fg:w="62"/><text x="40.2479%" y="463.50"></text></g><g><title>__rg_alloc (62 samples, 0.06%)</title><rect x="39.9979%" y="437" width="0.0580%" height="15" fill="rgb(219,218,39)" fg:x="42721" fg:w="62"/><text x="40.2479%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (62 samples, 0.06%)</title><rect x="39.9979%" y="421" width="0.0580%" height="15" fill="rgb(219,4,42)" fg:x="42721" fg:w="62"/><text x="40.2479%" y="431.50"></text></g><g><title>rust_alloc (55 samples, 0.05%)</title><rect x="40.0045%" y="405" width="0.0515%" height="15" fill="rgb(249,119,36)" fg:x="42728" fg:w="55"/><text x="40.2545%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (17 samples, 0.02%)</title><rect x="40.0794%" y="485" width="0.0159%" height="15" fill="rgb(209,23,33)" fg:x="42808" fg:w="17"/><text x="40.3294%" y="495.50"></text></g><g><title>rust_dealloc (20 samples, 0.02%)</title><rect x="40.1122%" y="389" width="0.0187%" height="15" fill="rgb(211,10,0)" fg:x="42843" fg:w="20"/><text x="40.3622%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.02%)</title><rect x="40.1524%" y="341" width="0.0159%" height="15" fill="rgb(208,99,37)" fg:x="42886" fg:w="17"/><text x="40.4024%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="40.1543%" y="325" width="0.0140%" height="15" fill="rgb(213,132,31)" fg:x="42888" fg:w="15"/><text x="40.4043%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (48 samples, 0.04%)</title><rect x="40.1384%" y="389" width="0.0449%" height="15" fill="rgb(243,129,40)" fg:x="42871" fg:w="48"/><text x="40.3884%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (48 samples, 0.04%)</title><rect x="40.1384%" y="373" width="0.0449%" height="15" fill="rgb(210,66,33)" fg:x="42871" fg:w="48"/><text x="40.3884%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (48 samples, 0.04%)</title><rect x="40.1384%" y="357" width="0.0449%" height="15" fill="rgb(209,189,4)" fg:x="42871" fg:w="48"/><text x="40.3884%" y="367.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (16 samples, 0.01%)</title><rect x="40.1683%" y="341" width="0.0150%" height="15" fill="rgb(214,107,37)" fg:x="42903" fg:w="16"/><text x="40.4183%" y="351.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (16 samples, 0.01%)</title><rect x="40.1683%" y="325" width="0.0150%" height="15" fill="rgb(245,88,54)" fg:x="42903" fg:w="16"/><text x="40.4183%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (87 samples, 0.08%)</title><rect x="40.1112%" y="453" width="0.0815%" height="15" fill="rgb(205,146,20)" fg:x="42842" fg:w="87"/><text x="40.3612%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (87 samples, 0.08%)</title><rect x="40.1112%" y="437" width="0.0815%" height="15" fill="rgb(220,161,25)" fg:x="42842" fg:w="87"/><text x="40.3612%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (87 samples, 0.08%)</title><rect x="40.1112%" y="421" width="0.0815%" height="15" fill="rgb(215,152,15)" fg:x="42842" fg:w="87"/><text x="40.3612%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (87 samples, 0.08%)</title><rect x="40.1112%" y="405" width="0.0815%" height="15" fill="rgb(233,192,44)" fg:x="42842" fg:w="87"/><text x="40.3612%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (97 samples, 0.09%)</title><rect x="40.1037%" y="469" width="0.0908%" height="15" fill="rgb(240,170,46)" fg:x="42834" fg:w="97"/><text x="40.3537%" y="479.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (145 samples, 0.14%)</title><rect x="40.0644%" y="501" width="0.1358%" height="15" fill="rgb(207,104,33)" fg:x="42792" fg:w="145"/><text x="40.3144%" y="511.50"></text></g><g><title>rust_dealloc (112 samples, 0.10%)</title><rect x="40.0953%" y="485" width="0.1049%" height="15" fill="rgb(219,21,39)" fg:x="42825" fg:w="112"/><text x="40.3453%" y="495.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (891 samples, 0.83%)</title><rect x="39.4147%" y="629" width="0.8342%" height="15" fill="rgb(214,133,29)" fg:x="42098" fg:w="891"/><text x="39.6647%" y="639.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (891 samples, 0.83%)</title><rect x="39.4147%" y="613" width="0.8342%" height="15" fill="rgb(226,93,6)" fg:x="42098" fg:w="891"/><text x="39.6647%" y="623.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (874 samples, 0.82%)</title><rect x="39.4306%" y="597" width="0.8183%" height="15" fill="rgb(252,222,34)" fg:x="42115" fg:w="874"/><text x="39.6806%" y="607.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (871 samples, 0.82%)</title><rect x="39.4334%" y="581" width="0.8155%" height="15" fill="rgb(252,92,48)" fg:x="42118" fg:w="871"/><text x="39.6834%" y="591.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (871 samples, 0.82%)</title><rect x="39.4334%" y="565" width="0.8155%" height="15" fill="rgb(245,223,24)" fg:x="42118" fg:w="871"/><text x="39.6834%" y="575.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (197 samples, 0.18%)</title><rect x="40.0644%" y="549" width="0.1844%" height="15" fill="rgb(205,176,3)" fg:x="42792" fg:w="197"/><text x="40.3144%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (197 samples, 0.18%)</title><rect x="40.0644%" y="533" width="0.1844%" height="15" fill="rgb(235,151,15)" fg:x="42792" fg:w="197"/><text x="40.3144%" y="543.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (197 samples, 0.18%)</title><rect x="40.0644%" y="517" width="0.1844%" height="15" fill="rgb(237,209,11)" fg:x="42792" fg:w="197"/><text x="40.3144%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (52 samples, 0.05%)</title><rect x="40.2002%" y="501" width="0.0487%" height="15" fill="rgb(243,227,24)" fg:x="42937" fg:w="52"/><text x="40.4502%" y="511.50"></text></g><g><title>core::ptr::read (52 samples, 0.05%)</title><rect x="40.2002%" y="485" width="0.0487%" height="15" fill="rgb(239,193,16)" fg:x="42937" fg:w="52"/><text x="40.4502%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="40.2854%" y="501" width="0.0169%" height="15" fill="rgb(231,27,9)" fg:x="43028" fg:w="18"/><text x="40.5354%" y="511.50"></text></g><g><title>alloc::alloc::box_free (18 samples, 0.02%)</title><rect x="40.2854%" y="485" width="0.0169%" height="15" fill="rgb(219,169,10)" fg:x="43028" fg:w="18"/><text x="40.5354%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="40.2854%" y="469" width="0.0169%" height="15" fill="rgb(244,229,43)" fg:x="43028" fg:w="18"/><text x="40.5354%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="40.2854%" y="453" width="0.0169%" height="15" fill="rgb(254,38,20)" fg:x="43028" fg:w="18"/><text x="40.5354%" y="463.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="40.2854%" y="437" width="0.0169%" height="15" fill="rgb(250,47,30)" fg:x="43028" fg:w="18"/><text x="40.5354%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="40.2854%" y="421" width="0.0169%" height="15" fill="rgb(224,124,36)" fg:x="43028" fg:w="18"/><text x="40.5354%" y="431.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (62 samples, 0.06%)</title><rect x="40.2685%" y="517" width="0.0580%" height="15" fill="rgb(246,68,51)" fg:x="43010" fg:w="62"/><text x="40.5185%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="40.3022%" y="501" width="0.0243%" height="15" fill="rgb(253,43,49)" fg:x="43046" fg:w="26"/><text x="40.5522%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (26 samples, 0.02%)</title><rect x="40.3022%" y="485" width="0.0243%" height="15" fill="rgb(219,54,36)" fg:x="43046" fg:w="26"/><text x="40.5522%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (26 samples, 0.02%)</title><rect x="40.3022%" y="469" width="0.0243%" height="15" fill="rgb(227,133,34)" fg:x="43046" fg:w="26"/><text x="40.5522%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (26 samples, 0.02%)</title><rect x="40.3022%" y="453" width="0.0243%" height="15" fill="rgb(247,227,15)" fg:x="43046" fg:w="26"/><text x="40.5522%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="40.3069%" y="437" width="0.0197%" height="15" fill="rgb(229,96,14)" fg:x="43051" fg:w="21"/><text x="40.5569%" y="447.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (43 samples, 0.04%)</title><rect x="40.3996%" y="373" width="0.0403%" height="15" fill="rgb(220,79,17)" fg:x="43150" fg:w="43"/><text x="40.6496%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (40 samples, 0.04%)</title><rect x="40.4024%" y="357" width="0.0375%" height="15" fill="rgb(205,131,53)" fg:x="43153" fg:w="40"/><text x="40.6524%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (89 samples, 0.08%)</title><rect x="40.3640%" y="421" width="0.0833%" height="15" fill="rgb(209,50,29)" fg:x="43112" fg:w="89"/><text x="40.6140%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (89 samples, 0.08%)</title><rect x="40.3640%" y="405" width="0.0833%" height="15" fill="rgb(245,86,46)" fg:x="43112" fg:w="89"/><text x="40.6140%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (89 samples, 0.08%)</title><rect x="40.3640%" y="389" width="0.0833%" height="15" fill="rgb(235,66,46)" fg:x="43112" fg:w="89"/><text x="40.6140%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (111 samples, 0.10%)</title><rect x="40.3490%" y="485" width="0.1039%" height="15" fill="rgb(232,148,31)" fg:x="43096" fg:w="111"/><text x="40.5990%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (111 samples, 0.10%)</title><rect x="40.3490%" y="469" width="0.1039%" height="15" fill="rgb(217,149,8)" fg:x="43096" fg:w="111"/><text x="40.5990%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (111 samples, 0.10%)</title><rect x="40.3490%" y="453" width="0.1039%" height="15" fill="rgb(209,183,11)" fg:x="43096" fg:w="111"/><text x="40.5990%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (111 samples, 0.10%)</title><rect x="40.3490%" y="437" width="0.1039%" height="15" fill="rgb(208,55,20)" fg:x="43096" fg:w="111"/><text x="40.5990%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (129 samples, 0.12%)</title><rect x="40.3350%" y="501" width="0.1208%" height="15" fill="rgb(218,39,14)" fg:x="43081" fg:w="129"/><text x="40.5850%" y="511.50"></text></g><g><title>rust_dealloc (144 samples, 0.13%)</title><rect x="40.3266%" y="517" width="0.1348%" height="15" fill="rgb(216,169,33)" fg:x="43072" fg:w="144"/><text x="40.5766%" y="527.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (230 samples, 0.22%)</title><rect x="40.2489%" y="597" width="0.2153%" height="15" fill="rgb(233,80,24)" fg:x="42989" fg:w="230"/><text x="40.4989%" y="607.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (227 samples, 0.21%)</title><rect x="40.2517%" y="581" width="0.2125%" height="15" fill="rgb(213,179,31)" fg:x="42992" fg:w="227"/><text x="40.5017%" y="591.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (218 samples, 0.20%)</title><rect x="40.2601%" y="565" width="0.2041%" height="15" fill="rgb(209,19,5)" fg:x="43001" fg:w="218"/><text x="40.5101%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (218 samples, 0.20%)</title><rect x="40.2601%" y="549" width="0.2041%" height="15" fill="rgb(219,18,35)" fg:x="43001" fg:w="218"/><text x="40.5101%" y="559.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (218 samples, 0.20%)</title><rect x="40.2601%" y="533" width="0.2041%" height="15" fill="rgb(209,169,16)" fg:x="43001" fg:w="218"/><text x="40.5101%" y="543.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (1,253 samples, 1.17%)</title><rect x="39.2920%" y="645" width="1.1731%" height="15" fill="rgb(245,90,51)" fg:x="41967" fg:w="1253"/><text x="39.5420%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (231 samples, 0.22%)</title><rect x="40.2489%" y="629" width="0.2163%" height="15" fill="rgb(220,99,45)" fg:x="42989" fg:w="231"/><text x="40.4989%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (231 samples, 0.22%)</title><rect x="40.2489%" y="613" width="0.2163%" height="15" fill="rgb(249,89,25)" fg:x="42989" fg:w="231"/><text x="40.4989%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies (31 samples, 0.03%)</title><rect x="40.4689%" y="645" width="0.0290%" height="15" fill="rgb(239,193,0)" fg:x="43224" fg:w="31"/><text x="40.7189%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (11,409 samples, 10.68%)</title><rect x="29.8264%" y="661" width="10.6818%" height="15" fill="rgb(231,126,1)" fg:x="31857" fg:w="11409"/><text x="30.0764%" y="671.50">tremor_runtime::..</text></g><g><title>async_global_executor::threading::thread_main_loop (11,470 samples, 10.74%)</title><rect x="29.7815%" y="1125" width="10.7389%" height="15" fill="rgb(243,166,3)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="1135.50">async_global_exe..</text></g><g><title>std::panic::catch_unwind (11,470 samples, 10.74%)</title><rect x="29.7815%" y="1109" width="10.7389%" height="15" fill="rgb(223,22,34)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="1119.50">std::panic::catc..</text></g><g><title>std::panicking::try (11,470 samples, 10.74%)</title><rect x="29.7815%" y="1093" width="10.7389%" height="15" fill="rgb(251,52,51)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="1103.50">std::panicking::..</text></g><g><title>std::panicking::try::do_call (11,470 samples, 10.74%)</title><rect x="29.7815%" y="1077" width="10.7389%" height="15" fill="rgb(221,165,28)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="1087.50">std::panicking::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (11,470 samples, 10.74%)</title><rect x="29.7815%" y="1061" width="10.7389%" height="15" fill="rgb(218,121,47)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="1071.50">async_global_exe..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,470 samples, 10.74%)</title><rect x="29.7815%" y="1045" width="10.7389%" height="15" fill="rgb(209,120,9)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="1055.50">std::thread::loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,470 samples, 10.74%)</title><rect x="29.7815%" y="1029" width="10.7389%" height="15" fill="rgb(236,68,12)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="1039.50">std::thread::loc..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (11,470 samples, 10.74%)</title><rect x="29.7815%" y="1013" width="10.7389%" height="15" fill="rgb(225,194,26)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="1023.50">async_global_exe..</text></g><g><title>async_global_executor::reactor::block_on (11,470 samples, 10.74%)</title><rect x="29.7815%" y="997" width="10.7389%" height="15" fill="rgb(231,84,39)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="1007.50">async_global_exe..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (11,470 samples, 10.74%)</title><rect x="29.7815%" y="981" width="10.7389%" height="15" fill="rgb(210,11,45)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="991.50">async_global_exe..</text></g><g><title>async_io::driver::block_on (11,470 samples, 10.74%)</title><rect x="29.7815%" y="965" width="10.7389%" height="15" fill="rgb(224,54,52)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="975.50">async_io::driver..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,470 samples, 10.74%)</title><rect x="29.7815%" y="949" width="10.7389%" height="15" fill="rgb(238,102,14)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="959.50">&lt;futures_lite::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,470 samples, 10.74%)</title><rect x="29.7815%" y="933" width="10.7389%" height="15" fill="rgb(243,160,52)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="943.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::run::{{closure}} (11,470 samples, 10.74%)</title><rect x="29.7815%" y="917" width="10.7389%" height="15" fill="rgb(216,114,19)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="927.50">async_executor::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,470 samples, 10.74%)</title><rect x="29.7815%" y="901" width="10.7389%" height="15" fill="rgb(244,166,37)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="911.50">&lt;futures_lite::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,470 samples, 10.74%)</title><rect x="29.7815%" y="885" width="10.7389%" height="15" fill="rgb(246,29,44)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="895.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11,470 samples, 10.74%)</title><rect x="29.7815%" y="869" width="10.7389%" height="15" fill="rgb(215,56,53)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="879.50">async_executor::..</text></g><g><title>async_task::runnable::Runnable::run (11,470 samples, 10.74%)</title><rect x="29.7815%" y="853" width="10.7389%" height="15" fill="rgb(217,60,2)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="863.50">async_task::runn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (11,470 samples, 10.74%)</title><rect x="29.7815%" y="837" width="10.7389%" height="15" fill="rgb(207,26,24)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="847.50">async_task::raw:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,470 samples, 10.74%)</title><rect x="29.7815%" y="821" width="10.7389%" height="15" fill="rgb(252,210,15)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="831.50">&lt;core::pin::Pin&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,470 samples, 10.74%)</title><rect x="29.7815%" y="805" width="10.7389%" height="15" fill="rgb(253,209,26)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="815.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (11,470 samples, 10.74%)</title><rect x="29.7815%" y="789" width="10.7389%" height="15" fill="rgb(238,170,14)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="799.50">async_executor::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (11,470 samples, 10.74%)</title><rect x="29.7815%" y="773" width="10.7389%" height="15" fill="rgb(216,178,15)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="783.50">&lt;async_std::task..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (11,470 samples, 10.74%)</title><rect x="29.7815%" y="757" width="10.7389%" height="15" fill="rgb(250,197,2)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="767.50">async_std::task:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,470 samples, 10.74%)</title><rect x="29.7815%" y="741" width="10.7389%" height="15" fill="rgb(212,70,42)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="751.50">std::thread::loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,470 samples, 10.74%)</title><rect x="29.7815%" y="725" width="10.7389%" height="15" fill="rgb(227,213,9)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="735.50">std::thread::loc..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (11,470 samples, 10.74%)</title><rect x="29.7815%" y="709" width="10.7389%" height="15" fill="rgb(245,99,25)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="719.50">async_std::task:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11,470 samples, 10.74%)</title><rect x="29.7815%" y="693" width="10.7389%" height="15" fill="rgb(250,82,29)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="703.50">&lt;async_std::task..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,470 samples, 10.74%)</title><rect x="29.7815%" y="677" width="10.7389%" height="15" fill="rgb(241,226,54)" fg:x="31809" fg:w="11470"/><text x="30.0315%" y="687.50">&lt;core::future::f..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (12 samples, 0.01%)</title><rect x="40.5091%" y="661" width="0.0112%" height="15" fill="rgb(221,99,41)" fg:x="43267" fg:w="12"/><text x="40.7591%" y="671.50"></text></g><g><title>__rust_probestack (12 samples, 0.01%)</title><rect x="40.5091%" y="645" width="0.0112%" height="15" fill="rgb(213,90,21)" fg:x="43267" fg:w="12"/><text x="40.7591%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (616 samples, 0.58%)</title><rect x="40.5962%" y="741" width="0.5767%" height="15" fill="rgb(205,208,24)" fg:x="43360" fg:w="616"/><text x="40.8462%" y="751.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (641 samples, 0.60%)</title><rect x="40.5840%" y="757" width="0.6001%" height="15" fill="rgb(246,31,12)" fg:x="43347" fg:w="641"/><text x="40.8340%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="41.1729%" y="741" width="0.0112%" height="15" fill="rgb(213,154,6)" fg:x="43976" fg:w="12"/><text x="41.4229%" y="751.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,093 samples, 1.02%)</title><rect x="40.5475%" y="773" width="1.0233%" height="15" fill="rgb(222,163,29)" fg:x="43308" fg:w="1093"/><text x="40.7975%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (413 samples, 0.39%)</title><rect x="41.1842%" y="757" width="0.3867%" height="15" fill="rgb(227,201,8)" fg:x="43988" fg:w="413"/><text x="41.4342%" y="767.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,122 samples, 1.05%)</title><rect x="40.5213%" y="805" width="1.0505%" height="15" fill="rgb(233,9,32)" fg:x="43280" fg:w="1122"/><text x="40.7713%" y="815.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,122 samples, 1.05%)</title><rect x="40.5213%" y="789" width="1.0505%" height="15" fill="rgb(217,54,24)" fg:x="43280" fg:w="1122"/><text x="40.7713%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.01%)</title><rect x="41.5737%" y="469" width="0.0150%" height="15" fill="rgb(235,192,0)" fg:x="44404" fg:w="16"/><text x="41.8237%" y="479.50"></text></g><g><title>&lt;abi_stable::std_types::result::RResult&lt;T,E&gt; as core::convert::From&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::from (16 samples, 0.01%)</title><rect x="41.5737%" y="453" width="0.0150%" height="15" fill="rgb(235,45,9)" fg:x="44404" fg:w="16"/><text x="41.8237%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (82 samples, 0.08%)</title><rect x="41.5933%" y="469" width="0.0768%" height="15" fill="rgb(246,42,40)" fg:x="44425" fg:w="82"/><text x="41.8433%" y="479.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (76 samples, 0.07%)</title><rect x="41.5989%" y="453" width="0.0712%" height="15" fill="rgb(248,111,24)" fg:x="44431" fg:w="76"/><text x="41.8489%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (68 samples, 0.06%)</title><rect x="41.6064%" y="437" width="0.0637%" height="15" fill="rgb(249,65,22)" fg:x="44439" fg:w="68"/><text x="41.8564%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (68 samples, 0.06%)</title><rect x="41.6064%" y="421" width="0.0637%" height="15" fill="rgb(238,111,51)" fg:x="44439" fg:w="68"/><text x="41.8564%" y="431.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (66 samples, 0.06%)</title><rect x="41.6083%" y="405" width="0.0618%" height="15" fill="rgb(250,118,22)" fg:x="44441" fg:w="66"/><text x="41.8583%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20 samples, 0.02%)</title><rect x="41.6514%" y="389" width="0.0187%" height="15" fill="rgb(234,84,26)" fg:x="44487" fg:w="20"/><text x="41.9014%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.02%)</title><rect x="41.6514%" y="373" width="0.0187%" height="15" fill="rgb(243,172,12)" fg:x="44487" fg:w="20"/><text x="41.9014%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (202 samples, 0.19%)</title><rect x="41.6973%" y="453" width="0.1891%" height="15" fill="rgb(236,150,49)" fg:x="44536" fg:w="202"/><text x="41.9473%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (555 samples, 0.52%)</title><rect x="41.8892%" y="453" width="0.5196%" height="15" fill="rgb(225,197,26)" fg:x="44741" fg:w="555"/><text x="42.1392%" y="463.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (57 samples, 0.05%)</title><rect x="42.4247%" y="453" width="0.0534%" height="15" fill="rgb(214,17,42)" fg:x="45313" fg:w="57"/><text x="42.6747%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::cow::RCow&lt;B,&lt;B as abi_stable::traits::IntoOwned&gt;::ROwned&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="42.4603%" y="437" width="0.0178%" height="15" fill="rgb(224,165,40)" fg:x="45351" fg:w="19"/><text x="42.7103%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,103 samples, 1.97%)</title><rect x="40.5213%" y="821" width="1.9690%" height="15" fill="rgb(246,100,4)" fg:x="43280" fg:w="2103"/><text x="40.7713%" y="831.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (981 samples, 0.92%)</title><rect x="41.5718%" y="805" width="0.9185%" height="15" fill="rgb(222,103,0)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="815.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (981 samples, 0.92%)</title><rect x="41.5718%" y="789" width="0.9185%" height="15" fill="rgb(227,189,26)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="799.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (981 samples, 0.92%)</title><rect x="41.5718%" y="773" width="0.9185%" height="15" fill="rgb(214,202,17)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="783.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (981 samples, 0.92%)</title><rect x="41.5718%" y="757" width="0.9185%" height="15" fill="rgb(229,111,3)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="767.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (981 samples, 0.92%)</title><rect x="41.5718%" y="741" width="0.9185%" height="15" fill="rgb(229,172,15)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="751.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (981 samples, 0.92%)</title><rect x="41.5718%" y="725" width="0.9185%" height="15" fill="rgb(230,224,35)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (981 samples, 0.92%)</title><rect x="41.5718%" y="709" width="0.9185%" height="15" fill="rgb(251,141,6)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="719.50"></text></g><g><title>std::panic::catch_unwind (981 samples, 0.92%)</title><rect x="41.5718%" y="693" width="0.9185%" height="15" fill="rgb(225,208,6)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="703.50"></text></g><g><title>std::panicking::try (981 samples, 0.92%)</title><rect x="41.5718%" y="677" width="0.9185%" height="15" fill="rgb(246,181,16)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="687.50"></text></g><g><title>std::panicking::try::do_call (981 samples, 0.92%)</title><rect x="41.5718%" y="661" width="0.9185%" height="15" fill="rgb(227,129,36)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="671.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (981 samples, 0.92%)</title><rect x="41.5718%" y="645" width="0.9185%" height="15" fill="rgb(248,117,24)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (981 samples, 0.92%)</title><rect x="41.5718%" y="629" width="0.9185%" height="15" fill="rgb(214,185,35)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="639.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (981 samples, 0.92%)</title><rect x="41.5718%" y="613" width="0.9185%" height="15" fill="rgb(236,150,34)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="623.50"></text></g><g><title>async_ffi::FfiContext::with_context (981 samples, 0.92%)</title><rect x="41.5718%" y="597" width="0.9185%" height="15" fill="rgb(243,228,27)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (981 samples, 0.92%)</title><rect x="41.5718%" y="581" width="0.9185%" height="15" fill="rgb(245,77,44)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (981 samples, 0.92%)</title><rect x="41.5718%" y="565" width="0.9185%" height="15" fill="rgb(235,214,42)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="575.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (981 samples, 0.92%)</title><rect x="41.5718%" y="549" width="0.9185%" height="15" fill="rgb(221,74,3)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="559.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (981 samples, 0.92%)</title><rect x="41.5718%" y="533" width="0.9185%" height="15" fill="rgb(206,121,29)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (981 samples, 0.92%)</title><rect x="41.5718%" y="517" width="0.9185%" height="15" fill="rgb(249,131,53)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (981 samples, 0.92%)</title><rect x="41.5718%" y="501" width="0.9185%" height="15" fill="rgb(236,170,29)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="511.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (981 samples, 0.92%)</title><rect x="41.5718%" y="485" width="0.9185%" height="15" fill="rgb(247,96,15)" fg:x="44402" fg:w="981"/><text x="41.8218%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (876 samples, 0.82%)</title><rect x="41.6701%" y="469" width="0.8202%" height="15" fill="rgb(211,210,7)" fg:x="44507" fg:w="876"/><text x="41.9201%" y="479.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (19 samples, 0.02%)</title><rect x="42.4903%" y="821" width="0.0178%" height="15" fill="rgb(240,88,50)" fg:x="45383" fg:w="19"/><text x="42.7403%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (211 samples, 0.20%)</title><rect x="43.8244%" y="773" width="0.1976%" height="15" fill="rgb(209,229,26)" fg:x="46808" fg:w="211"/><text x="44.0744%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (209 samples, 0.20%)</title><rect x="43.8263%" y="757" width="0.1957%" height="15" fill="rgb(210,68,23)" fg:x="46810" fg:w="209"/><text x="44.0763%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (200 samples, 0.19%)</title><rect x="43.8347%" y="741" width="0.1873%" height="15" fill="rgb(229,180,13)" fg:x="46819" fg:w="200"/><text x="44.0847%" y="751.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (237 samples, 0.22%)</title><rect x="44.0239%" y="709" width="0.2219%" height="15" fill="rgb(236,53,44)" fg:x="47021" fg:w="237"/><text x="44.2739%" y="719.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (244 samples, 0.23%)</title><rect x="44.0220%" y="741" width="0.2284%" height="15" fill="rgb(244,214,29)" fg:x="47019" fg:w="244"/><text x="44.2720%" y="751.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (242 samples, 0.23%)</title><rect x="44.0239%" y="725" width="0.2266%" height="15" fill="rgb(220,75,29)" fg:x="47021" fg:w="242"/><text x="44.2739%" y="735.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (48 samples, 0.04%)</title><rect x="44.2504%" y="741" width="0.0449%" height="15" fill="rgb(214,183,37)" fg:x="47263" fg:w="48"/><text x="44.5004%" y="751.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (30 samples, 0.03%)</title><rect x="44.2673%" y="725" width="0.0281%" height="15" fill="rgb(239,117,29)" fg:x="47281" fg:w="30"/><text x="44.5173%" y="735.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (500 samples, 0.47%)</title><rect x="44.0220%" y="773" width="0.4681%" height="15" fill="rgb(237,171,35)" fg:x="47019" fg:w="500"/><text x="44.2720%" y="783.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (500 samples, 0.47%)</title><rect x="44.0220%" y="757" width="0.4681%" height="15" fill="rgb(229,178,53)" fg:x="47019" fg:w="500"/><text x="44.2720%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (208 samples, 0.19%)</title><rect x="44.2954%" y="741" width="0.1947%" height="15" fill="rgb(210,102,19)" fg:x="47311" fg:w="208"/><text x="44.5454%" y="751.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (37 samples, 0.03%)</title><rect x="44.4901%" y="773" width="0.0346%" height="15" fill="rgb(235,127,22)" fg:x="47519" fg:w="37"/><text x="44.7401%" y="783.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (25 samples, 0.02%)</title><rect x="44.5444%" y="725" width="0.0234%" height="15" fill="rgb(244,31,31)" fg:x="47577" fg:w="25"/><text x="44.7944%" y="735.50"></text></g><g><title>async_ffi::DropBomb::with (20 samples, 0.02%)</title><rect x="44.5491%" y="709" width="0.0187%" height="15" fill="rgb(231,43,21)" fg:x="47582" fg:w="20"/><text x="44.7991%" y="719.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (19 samples, 0.02%)</title><rect x="44.5500%" y="693" width="0.0178%" height="15" fill="rgb(217,131,35)" fg:x="47583" fg:w="19"/><text x="44.8000%" y="703.50"></text></g><g><title>core::mem::drop (19 samples, 0.02%)</title><rect x="44.5500%" y="677" width="0.0178%" height="15" fill="rgb(221,149,4)" fg:x="47583" fg:w="19"/><text x="44.8000%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}}&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="44.5500%" y="661" width="0.0178%" height="15" fill="rgb(232,170,28)" fg:x="47583" fg:w="19"/><text x="44.8000%" y="671.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="44.5772%" y="629" width="0.0103%" height="15" fill="rgb(238,56,10)" fg:x="47612" fg:w="11"/><text x="44.8272%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="44.6034%" y="581" width="0.0103%" height="15" fill="rgb(235,196,14)" fg:x="47640" fg:w="11"/><text x="44.8534%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="44.5884%" y="629" width="0.0375%" height="15" fill="rgb(216,45,48)" fg:x="47624" fg:w="40"/><text x="44.8384%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="44.5884%" y="613" width="0.0375%" height="15" fill="rgb(238,213,17)" fg:x="47624" fg:w="40"/><text x="44.8384%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (38 samples, 0.04%)</title><rect x="44.5903%" y="597" width="0.0356%" height="15" fill="rgb(212,13,2)" fg:x="47626" fg:w="38"/><text x="44.8403%" y="607.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="44.6137%" y="581" width="0.0122%" height="15" fill="rgb(240,114,20)" fg:x="47651" fg:w="13"/><text x="44.8637%" y="591.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="44.6137%" y="565" width="0.0122%" height="15" fill="rgb(228,41,40)" fg:x="47651" fg:w="13"/><text x="44.8637%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (53 samples, 0.05%)</title><rect x="44.5772%" y="661" width="0.0496%" height="15" fill="rgb(244,132,35)" fg:x="47612" fg:w="53"/><text x="44.8272%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (53 samples, 0.05%)</title><rect x="44.5772%" y="645" width="0.0496%" height="15" fill="rgb(253,189,4)" fg:x="47612" fg:w="53"/><text x="44.8272%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (59 samples, 0.06%)</title><rect x="44.5772%" y="693" width="0.0552%" height="15" fill="rgb(224,37,19)" fg:x="47612" fg:w="59"/><text x="44.8272%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (59 samples, 0.06%)</title><rect x="44.5772%" y="677" width="0.0552%" height="15" fill="rgb(235,223,18)" fg:x="47612" fg:w="59"/><text x="44.8272%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (70 samples, 0.07%)</title><rect x="44.5744%" y="709" width="0.0655%" height="15" fill="rgb(235,163,25)" fg:x="47609" fg:w="70"/><text x="44.8244%" y="719.50"></text></g><g><title>rust_dealloc (83 samples, 0.08%)</title><rect x="44.5678%" y="725" width="0.0777%" height="15" fill="rgb(217,145,28)" fg:x="47602" fg:w="83"/><text x="44.8178%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (138 samples, 0.13%)</title><rect x="44.5248%" y="773" width="0.1292%" height="15" fill="rgb(223,223,32)" fg:x="47556" fg:w="138"/><text x="44.7748%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (138 samples, 0.13%)</title><rect x="44.5248%" y="757" width="0.1292%" height="15" fill="rgb(227,189,39)" fg:x="47556" fg:w="138"/><text x="44.7748%" y="767.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (138 samples, 0.13%)</title><rect x="44.5248%" y="741" width="0.1292%" height="15" fill="rgb(248,10,22)" fg:x="47556" fg:w="138"/><text x="44.7748%" y="751.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="44.7429%" y="453" width="0.0103%" height="15" fill="rgb(248,46,39)" fg:x="47789" fg:w="11"/><text x="44.9929%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (74 samples, 0.07%)</title><rect x="44.7326%" y="501" width="0.0693%" height="15" fill="rgb(248,113,48)" fg:x="47778" fg:w="74"/><text x="44.9826%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (74 samples, 0.07%)</title><rect x="44.7326%" y="485" width="0.0693%" height="15" fill="rgb(245,16,25)" fg:x="47778" fg:w="74"/><text x="44.9826%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (65 samples, 0.06%)</title><rect x="44.7410%" y="469" width="0.0609%" height="15" fill="rgb(249,152,16)" fg:x="47787" fg:w="65"/><text x="44.9910%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (52 samples, 0.05%)</title><rect x="44.7532%" y="453" width="0.0487%" height="15" fill="rgb(250,16,1)" fg:x="47800" fg:w="52"/><text x="45.0032%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (52 samples, 0.05%)</title><rect x="44.7532%" y="437" width="0.0487%" height="15" fill="rgb(249,138,3)" fg:x="47800" fg:w="52"/><text x="45.0032%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (52 samples, 0.05%)</title><rect x="44.7532%" y="421" width="0.0487%" height="15" fill="rgb(227,71,41)" fg:x="47800" fg:w="52"/><text x="45.0032%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="44.8047%" y="501" width="0.0197%" height="15" fill="rgb(209,184,23)" fg:x="47855" fg:w="21"/><text x="45.0547%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="44.8075%" y="485" width="0.0169%" height="15" fill="rgb(223,215,31)" fg:x="47858" fg:w="18"/><text x="45.0575%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="44.8075%" y="469" width="0.0169%" height="15" fill="rgb(210,146,28)" fg:x="47858" fg:w="18"/><text x="45.0575%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="44.8103%" y="453" width="0.0140%" height="15" fill="rgb(209,183,41)" fg:x="47861" fg:w="15"/><text x="45.0603%" y="463.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (15 samples, 0.01%)</title><rect x="44.8103%" y="437" width="0.0140%" height="15" fill="rgb(209,224,45)" fg:x="47861" fg:w="15"/><text x="45.0603%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::empty (18 samples, 0.02%)</title><rect x="44.8244%" y="501" width="0.0169%" height="15" fill="rgb(224,209,51)" fg:x="47876" fg:w="18"/><text x="45.0744%" y="511.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (18 samples, 0.02%)</title><rect x="44.8244%" y="485" width="0.0169%" height="15" fill="rgb(223,17,39)" fg:x="47876" fg:w="18"/><text x="45.0744%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (196 samples, 0.18%)</title><rect x="44.7176%" y="549" width="0.1835%" height="15" fill="rgb(234,204,37)" fg:x="47762" fg:w="196"/><text x="44.9676%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (193 samples, 0.18%)</title><rect x="44.7204%" y="533" width="0.1807%" height="15" fill="rgb(236,120,5)" fg:x="47765" fg:w="193"/><text x="44.9704%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (188 samples, 0.18%)</title><rect x="44.7251%" y="517" width="0.1760%" height="15" fill="rgb(248,97,27)" fg:x="47770" fg:w="188"/><text x="44.9751%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (64 samples, 0.06%)</title><rect x="44.8412%" y="501" width="0.0599%" height="15" fill="rgb(240,66,17)" fg:x="47894" fg:w="64"/><text x="45.0912%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (64 samples, 0.06%)</title><rect x="44.8412%" y="485" width="0.0599%" height="15" fill="rgb(210,79,3)" fg:x="47894" fg:w="64"/><text x="45.0912%" y="495.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (250 samples, 0.23%)</title><rect x="44.6727%" y="757" width="0.2341%" height="15" fill="rgb(214,176,27)" fg:x="47714" fg:w="250"/><text x="44.9227%" y="767.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (238 samples, 0.22%)</title><rect x="44.6839%" y="741" width="0.2228%" height="15" fill="rgb(235,185,3)" fg:x="47726" fg:w="238"/><text x="44.9339%" y="751.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (238 samples, 0.22%)</title><rect x="44.6839%" y="725" width="0.2228%" height="15" fill="rgb(227,24,12)" fg:x="47726" fg:w="238"/><text x="44.9339%" y="735.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (238 samples, 0.22%)</title><rect x="44.6839%" y="709" width="0.2228%" height="15" fill="rgb(252,169,48)" fg:x="47726" fg:w="238"/><text x="44.9339%" y="719.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (238 samples, 0.22%)</title><rect x="44.6839%" y="693" width="0.2228%" height="15" fill="rgb(212,65,1)" fg:x="47726" fg:w="238"/><text x="44.9339%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (238 samples, 0.22%)</title><rect x="44.6839%" y="677" width="0.2228%" height="15" fill="rgb(242,39,24)" fg:x="47726" fg:w="238"/><text x="44.9339%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (218 samples, 0.20%)</title><rect x="44.7026%" y="661" width="0.2041%" height="15" fill="rgb(249,32,23)" fg:x="47746" fg:w="218"/><text x="44.9526%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (218 samples, 0.20%)</title><rect x="44.7026%" y="645" width="0.2041%" height="15" fill="rgb(251,195,23)" fg:x="47746" fg:w="218"/><text x="44.9526%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (218 samples, 0.20%)</title><rect x="44.7026%" y="629" width="0.2041%" height="15" fill="rgb(236,174,8)" fg:x="47746" fg:w="218"/><text x="44.9526%" y="639.50"></text></g><g><title>alloc::alloc::alloc (217 samples, 0.20%)</title><rect x="44.7036%" y="613" width="0.2032%" height="15" fill="rgb(220,197,8)" fg:x="47747" fg:w="217"/><text x="44.9536%" y="623.50"></text></g><g><title>__rg_alloc (217 samples, 0.20%)</title><rect x="44.7036%" y="597" width="0.2032%" height="15" fill="rgb(240,108,37)" fg:x="47747" fg:w="217"/><text x="44.9536%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (217 samples, 0.20%)</title><rect x="44.7036%" y="581" width="0.2032%" height="15" fill="rgb(232,176,24)" fg:x="47747" fg:w="217"/><text x="44.9536%" y="591.50"></text></g><g><title>rust_alloc (212 samples, 0.20%)</title><rect x="44.7083%" y="565" width="0.1985%" height="15" fill="rgb(243,35,29)" fg:x="47752" fg:w="212"/><text x="44.9583%" y="575.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::sabi_vtable (12 samples, 0.01%)</title><rect x="44.9067%" y="757" width="0.0112%" height="15" fill="rgb(210,37,18)" fg:x="47964" fg:w="12"/><text x="45.1567%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::_::&lt;impl tremor_runtime::connectors::source::RawSource_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::pull_data (31 samples, 0.03%)</title><rect x="44.9180%" y="757" width="0.0290%" height="15" fill="rgb(224,184,40)" fg:x="47976" fg:w="31"/><text x="45.1680%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (1,913 samples, 1.79%)</title><rect x="43.1569%" y="789" width="1.7911%" height="15" fill="rgb(236,39,29)" fg:x="46095" fg:w="1913"/><text x="43.4069%" y="799.50">t..</text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::pull_data (314 samples, 0.29%)</title><rect x="44.6540%" y="773" width="0.2940%" height="15" fill="rgb(232,48,39)" fg:x="47694" fg:w="314"/><text x="44.9040%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::control_plane::{{closure}} (299 samples, 0.28%)</title><rect x="44.9479%" y="789" width="0.2799%" height="15" fill="rgb(236,34,42)" fg:x="48008" fg:w="299"/><text x="45.1979%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::needs_control_plane_msg (251 samples, 0.24%)</title><rect x="44.9929%" y="773" width="0.2350%" height="15" fill="rgb(243,106,37)" fg:x="48056" fg:w="251"/><text x="45.2429%" y="783.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (223 samples, 0.21%)</title><rect x="45.0191%" y="757" width="0.2088%" height="15" fill="rgb(218,96,6)" fg:x="48084" fg:w="223"/><text x="45.2691%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (216 samples, 0.20%)</title><rect x="45.0257%" y="741" width="0.2022%" height="15" fill="rgb(235,130,12)" fg:x="48091" fg:w="216"/><text x="45.2757%" y="751.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (147 samples, 0.14%)</title><rect x="45.0903%" y="725" width="0.1376%" height="15" fill="rgb(231,95,0)" fg:x="48160" fg:w="147"/><text x="45.3403%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (132 samples, 0.12%)</title><rect x="45.1043%" y="709" width="0.1236%" height="15" fill="rgb(228,12,23)" fg:x="48175" fg:w="132"/><text x="45.3543%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (132 samples, 0.12%)</title><rect x="45.1043%" y="693" width="0.1236%" height="15" fill="rgb(216,12,1)" fg:x="48175" fg:w="132"/><text x="45.3543%" y="703.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (12 samples, 0.01%)</title><rect x="46.0986%" y="757" width="0.0112%" height="15" fill="rgb(219,59,3)" fg:x="49237" fg:w="12"/><text x="46.3486%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::utypeid::UTypeId as core::cmp::PartialEq&gt;::eq (204 samples, 0.19%)</title><rect x="46.1679%" y="709" width="0.1910%" height="15" fill="rgb(215,208,46)" fg:x="49311" fg:w="204"/><text x="46.4179%" y="719.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (195 samples, 0.18%)</title><rect x="46.1763%" y="693" width="0.1826%" height="15" fill="rgb(254,224,29)" fg:x="49320" fg:w="195"/><text x="46.4263%" y="703.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (195 samples, 0.18%)</title><rect x="46.1763%" y="677" width="0.1826%" height="15" fill="rgb(232,14,29)" fg:x="49320" fg:w="195"/><text x="46.4263%" y="687.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (46 samples, 0.04%)</title><rect x="46.3589%" y="709" width="0.0431%" height="15" fill="rgb(208,45,52)" fg:x="49515" fg:w="46"/><text x="46.6089%" y="719.50"></text></g><g><title>abi_stable::std_types::utypeid::new_utypeid (32 samples, 0.03%)</title><rect x="46.3720%" y="693" width="0.0300%" height="15" fill="rgb(234,191,28)" fg:x="49529" fg:w="32"/><text x="46.6220%" y="703.50"></text></g><g><title>abi_stable::std_types::utypeid::UTypeId::new (23 samples, 0.02%)</title><rect x="46.3804%" y="677" width="0.0215%" height="15" fill="rgb(244,67,43)" fg:x="49538" fg:w="23"/><text x="46.6304%" y="687.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (261 samples, 0.24%)</title><rect x="46.1679%" y="725" width="0.2444%" height="15" fill="rgb(236,189,24)" fg:x="49311" fg:w="261"/><text x="46.4179%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (11 samples, 0.01%)</title><rect x="46.4020%" y="709" width="0.0103%" height="15" fill="rgb(239,214,33)" fg:x="49561" fg:w="11"/><text x="46.6520%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (11 samples, 0.01%)</title><rect x="46.4123%" y="725" width="0.0103%" height="15" fill="rgb(226,176,41)" fg:x="49572" fg:w="11"/><text x="46.6623%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (11 samples, 0.01%)</title><rect x="46.4123%" y="709" width="0.0103%" height="15" fill="rgb(248,47,8)" fg:x="49572" fg:w="11"/><text x="46.6623%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (365 samples, 0.34%)</title><rect x="46.0864%" y="773" width="0.3417%" height="15" fill="rgb(218,81,44)" fg:x="49224" fg:w="365"/><text x="46.3364%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::convert::From&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (340 samples, 0.32%)</title><rect x="46.1098%" y="757" width="0.3183%" height="15" fill="rgb(213,98,6)" fg:x="49249" fg:w="340"/><text x="46.3598%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (318 samples, 0.30%)</title><rect x="46.1304%" y="741" width="0.2977%" height="15" fill="rgb(222,85,22)" fg:x="49271" fg:w="318"/><text x="46.3804%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="46.4282%" y="773" width="0.0131%" height="15" fill="rgb(239,46,39)" fg:x="49589" fg:w="14"/><text x="46.6782%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (733 samples, 0.69%)</title><rect x="46.4450%" y="773" width="0.6863%" height="15" fill="rgb(237,12,29)" fg:x="49607" fg:w="733"/><text x="46.6950%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (11 samples, 0.01%)</title><rect x="47.2764%" y="485" width="0.0103%" height="15" fill="rgb(214,77,8)" fg:x="50495" fg:w="11"/><text x="47.5264%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="47.2764%" y="517" width="0.0403%" height="15" fill="rgb(217,168,37)" fg:x="50495" fg:w="43"/><text x="47.5264%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (43 samples, 0.04%)</title><rect x="47.2764%" y="501" width="0.0403%" height="15" fill="rgb(221,217,23)" fg:x="50495" fg:w="43"/><text x="47.5264%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (32 samples, 0.03%)</title><rect x="47.2867%" y="485" width="0.0300%" height="15" fill="rgb(243,229,36)" fg:x="50506" fg:w="32"/><text x="47.5367%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (24 samples, 0.02%)</title><rect x="47.2942%" y="469" width="0.0225%" height="15" fill="rgb(251,163,40)" fg:x="50514" fg:w="24"/><text x="47.5442%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (24 samples, 0.02%)</title><rect x="47.2942%" y="453" width="0.0225%" height="15" fill="rgb(237,222,12)" fg:x="50514" fg:w="24"/><text x="47.5442%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (24 samples, 0.02%)</title><rect x="47.2942%" y="437" width="0.0225%" height="15" fill="rgb(248,132,6)" fg:x="50514" fg:w="24"/><text x="47.5442%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (137 samples, 0.13%)</title><rect x="47.2689%" y="565" width="0.1283%" height="15" fill="rgb(227,167,50)" fg:x="50487" fg:w="137"/><text x="47.5189%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (137 samples, 0.13%)</title><rect x="47.2689%" y="549" width="0.1283%" height="15" fill="rgb(242,84,37)" fg:x="50487" fg:w="137"/><text x="47.5189%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (131 samples, 0.12%)</title><rect x="47.2745%" y="533" width="0.1226%" height="15" fill="rgb(212,4,50)" fg:x="50493" fg:w="131"/><text x="47.5245%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (78 samples, 0.07%)</title><rect x="47.3242%" y="517" width="0.0730%" height="15" fill="rgb(230,228,32)" fg:x="50546" fg:w="78"/><text x="47.5742%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (78 samples, 0.07%)</title><rect x="47.3242%" y="501" width="0.0730%" height="15" fill="rgb(248,217,23)" fg:x="50546" fg:w="78"/><text x="47.5742%" y="511.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (260 samples, 0.24%)</title><rect x="47.1585%" y="709" width="0.2434%" height="15" fill="rgb(238,197,32)" fg:x="50369" fg:w="260"/><text x="47.4085%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (260 samples, 0.24%)</title><rect x="47.1585%" y="693" width="0.2434%" height="15" fill="rgb(236,106,1)" fg:x="50369" fg:w="260"/><text x="47.4085%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (151 samples, 0.14%)</title><rect x="47.2605%" y="677" width="0.1414%" height="15" fill="rgb(219,228,13)" fg:x="50478" fg:w="151"/><text x="47.5105%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (151 samples, 0.14%)</title><rect x="47.2605%" y="661" width="0.1414%" height="15" fill="rgb(238,30,35)" fg:x="50478" fg:w="151"/><text x="47.5105%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (151 samples, 0.14%)</title><rect x="47.2605%" y="645" width="0.1414%" height="15" fill="rgb(236,70,23)" fg:x="50478" fg:w="151"/><text x="47.5105%" y="655.50"></text></g><g><title>alloc::alloc::alloc (151 samples, 0.14%)</title><rect x="47.2605%" y="629" width="0.1414%" height="15" fill="rgb(249,104,48)" fg:x="50478" fg:w="151"/><text x="47.5105%" y="639.50"></text></g><g><title>__rg_alloc (151 samples, 0.14%)</title><rect x="47.2605%" y="613" width="0.1414%" height="15" fill="rgb(254,117,50)" fg:x="50478" fg:w="151"/><text x="47.5105%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (151 samples, 0.14%)</title><rect x="47.2605%" y="597" width="0.1414%" height="15" fill="rgb(223,152,4)" fg:x="50478" fg:w="151"/><text x="47.5105%" y="607.50"></text></g><g><title>rust_alloc (151 samples, 0.14%)</title><rect x="47.2605%" y="581" width="0.1414%" height="15" fill="rgb(245,6,2)" fg:x="50478" fg:w="151"/><text x="47.5105%" y="591.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (31 samples, 0.03%)</title><rect x="47.4028%" y="613" width="0.0290%" height="15" fill="rgb(249,150,24)" fg:x="50630" fg:w="31"/><text x="47.6528%" y="623.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (23 samples, 0.02%)</title><rect x="47.4103%" y="597" width="0.0215%" height="15" fill="rgb(228,185,42)" fg:x="50638" fg:w="23"/><text x="47.6603%" y="607.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (22 samples, 0.02%)</title><rect x="47.4112%" y="581" width="0.0206%" height="15" fill="rgb(226,39,33)" fg:x="50639" fg:w="22"/><text x="47.6612%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (22 samples, 0.02%)</title><rect x="47.4112%" y="565" width="0.0206%" height="15" fill="rgb(221,166,19)" fg:x="50639" fg:w="22"/><text x="47.6612%" y="575.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (17 samples, 0.02%)</title><rect x="47.4318%" y="613" width="0.0159%" height="15" fill="rgb(209,109,2)" fg:x="50661" fg:w="17"/><text x="47.6818%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (56 samples, 0.05%)</title><rect x="47.4019%" y="677" width="0.0524%" height="15" fill="rgb(252,216,26)" fg:x="50629" fg:w="56"/><text x="47.6519%" y="687.50"></text></g><g><title>std::collections::hash::map::RandomState::new (56 samples, 0.05%)</title><rect x="47.4019%" y="661" width="0.0524%" height="15" fill="rgb(227,173,36)" fg:x="50629" fg:w="56"/><text x="47.6519%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (56 samples, 0.05%)</title><rect x="47.4019%" y="645" width="0.0524%" height="15" fill="rgb(209,90,7)" fg:x="50629" fg:w="56"/><text x="47.6519%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (56 samples, 0.05%)</title><rect x="47.4019%" y="629" width="0.0524%" height="15" fill="rgb(250,194,11)" fg:x="50629" fg:w="56"/><text x="47.6519%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (15 samples, 0.01%)</title><rect x="47.5077%" y="373" width="0.0140%" height="15" fill="rgb(220,72,50)" fg:x="50742" fg:w="15"/><text x="47.7577%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (15 samples, 0.01%)</title><rect x="47.5077%" y="357" width="0.0140%" height="15" fill="rgb(222,106,48)" fg:x="50742" fg:w="15"/><text x="47.7577%" y="367.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (14 samples, 0.01%)</title><rect x="47.5086%" y="341" width="0.0131%" height="15" fill="rgb(216,220,45)" fg:x="50743" fg:w="14"/><text x="47.7586%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (22 samples, 0.02%)</title><rect x="47.5077%" y="389" width="0.0206%" height="15" fill="rgb(234,112,18)" fg:x="50742" fg:w="22"/><text x="47.7577%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (33 samples, 0.03%)</title><rect x="47.5021%" y="405" width="0.0309%" height="15" fill="rgb(206,179,9)" fg:x="50736" fg:w="33"/><text x="47.7521%" y="415.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="47.5433%" y="389" width="0.0112%" height="15" fill="rgb(215,115,40)" fg:x="50780" fg:w="12"/><text x="47.7933%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (202 samples, 0.19%)</title><rect x="47.5021%" y="437" width="0.1891%" height="15" fill="rgb(222,69,34)" fg:x="50736" fg:w="202"/><text x="47.7521%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (202 samples, 0.19%)</title><rect x="47.5021%" y="421" width="0.1891%" height="15" fill="rgb(209,161,10)" fg:x="50736" fg:w="202"/><text x="47.7521%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (169 samples, 0.16%)</title><rect x="47.5330%" y="405" width="0.1582%" height="15" fill="rgb(217,6,38)" fg:x="50769" fg:w="169"/><text x="47.7830%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (146 samples, 0.14%)</title><rect x="47.5545%" y="389" width="0.1367%" height="15" fill="rgb(229,229,48)" fg:x="50792" fg:w="146"/><text x="47.8045%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (146 samples, 0.14%)</title><rect x="47.5545%" y="373" width="0.1367%" height="15" fill="rgb(225,21,28)" fg:x="50792" fg:w="146"/><text x="47.8045%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (146 samples, 0.14%)</title><rect x="47.5545%" y="357" width="0.1367%" height="15" fill="rgb(206,33,13)" fg:x="50792" fg:w="146"/><text x="47.8045%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="47.6912%" y="437" width="0.0150%" height="15" fill="rgb(242,178,17)" fg:x="50938" fg:w="16"/><text x="47.9412%" y="447.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (13 samples, 0.01%)</title><rect x="47.6940%" y="421" width="0.0122%" height="15" fill="rgb(220,162,5)" fg:x="50941" fg:w="13"/><text x="47.9440%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::empty (18 samples, 0.02%)</title><rect x="47.7062%" y="437" width="0.0169%" height="15" fill="rgb(210,33,43)" fg:x="50954" fg:w="18"/><text x="47.9562%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (18 samples, 0.02%)</title><rect x="47.7062%" y="421" width="0.0169%" height="15" fill="rgb(216,116,54)" fg:x="50954" fg:w="18"/><text x="47.9562%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (468 samples, 0.44%)</title><rect x="47.4861%" y="485" width="0.4382%" height="15" fill="rgb(249,92,24)" fg:x="50719" fg:w="468"/><text x="47.7361%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (468 samples, 0.44%)</title><rect x="47.4861%" y="469" width="0.4382%" height="15" fill="rgb(231,189,14)" fg:x="50719" fg:w="468"/><text x="47.7361%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (459 samples, 0.43%)</title><rect x="47.4946%" y="453" width="0.4297%" height="15" fill="rgb(230,8,41)" fg:x="50728" fg:w="459"/><text x="47.7446%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (215 samples, 0.20%)</title><rect x="47.7230%" y="437" width="0.2013%" height="15" fill="rgb(249,7,27)" fg:x="50972" fg:w="215"/><text x="47.9730%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (215 samples, 0.20%)</title><rect x="47.7230%" y="421" width="0.2013%" height="15" fill="rgb(232,86,5)" fg:x="50972" fg:w="215"/><text x="47.9730%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (502 samples, 0.47%)</title><rect x="47.4618%" y="613" width="0.4700%" height="15" fill="rgb(224,175,18)" fg:x="50693" fg:w="502"/><text x="47.7118%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (486 samples, 0.46%)</title><rect x="47.4768%" y="597" width="0.4550%" height="15" fill="rgb(220,129,12)" fg:x="50709" fg:w="486"/><text x="47.7268%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (485 samples, 0.45%)</title><rect x="47.4777%" y="581" width="0.4541%" height="15" fill="rgb(210,19,36)" fg:x="50710" fg:w="485"/><text x="47.7277%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (485 samples, 0.45%)</title><rect x="47.4777%" y="565" width="0.4541%" height="15" fill="rgb(219,96,14)" fg:x="50710" fg:w="485"/><text x="47.7277%" y="575.50"></text></g><g><title>alloc::alloc::alloc (485 samples, 0.45%)</title><rect x="47.4777%" y="549" width="0.4541%" height="15" fill="rgb(249,106,1)" fg:x="50710" fg:w="485"/><text x="47.7277%" y="559.50"></text></g><g><title>__rg_alloc (485 samples, 0.45%)</title><rect x="47.4777%" y="533" width="0.4541%" height="15" fill="rgb(249,155,20)" fg:x="50710" fg:w="485"/><text x="47.7277%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (485 samples, 0.45%)</title><rect x="47.4777%" y="517" width="0.4541%" height="15" fill="rgb(244,168,9)" fg:x="50710" fg:w="485"/><text x="47.7277%" y="527.50"></text></g><g><title>rust_alloc (485 samples, 0.45%)</title><rect x="47.4777%" y="501" width="0.4541%" height="15" fill="rgb(216,23,50)" fg:x="50710" fg:w="485"/><text x="47.7277%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (575 samples, 0.54%)</title><rect x="47.4019%" y="693" width="0.5383%" height="15" fill="rgb(224,219,20)" fg:x="50629" fg:w="575"/><text x="47.6519%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (519 samples, 0.49%)</title><rect x="47.4543%" y="677" width="0.4859%" height="15" fill="rgb(222,156,15)" fg:x="50685" fg:w="519"/><text x="47.7043%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (519 samples, 0.49%)</title><rect x="47.4543%" y="661" width="0.4859%" height="15" fill="rgb(231,97,17)" fg:x="50685" fg:w="519"/><text x="47.7043%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (511 samples, 0.48%)</title><rect x="47.4618%" y="645" width="0.4784%" height="15" fill="rgb(218,70,48)" fg:x="50693" fg:w="511"/><text x="47.7118%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (511 samples, 0.48%)</title><rect x="47.4618%" y="629" width="0.4784%" height="15" fill="rgb(212,196,52)" fg:x="50693" fg:w="511"/><text x="47.7118%" y="639.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (602 samples, 0.56%)</title><rect x="47.4019%" y="709" width="0.5636%" height="15" fill="rgb(243,203,18)" fg:x="50629" fg:w="602"/><text x="47.6519%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (27 samples, 0.03%)</title><rect x="47.9402%" y="693" width="0.0253%" height="15" fill="rgb(252,125,41)" fg:x="51204" fg:w="27"/><text x="48.1902%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (24 samples, 0.02%)</title><rect x="47.9430%" y="677" width="0.0225%" height="15" fill="rgb(223,180,33)" fg:x="51207" fg:w="24"/><text x="48.1930%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (24 samples, 0.02%)</title><rect x="47.9430%" y="661" width="0.0225%" height="15" fill="rgb(254,159,46)" fg:x="51207" fg:w="24"/><text x="48.1930%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (19 samples, 0.02%)</title><rect x="47.9477%" y="645" width="0.0178%" height="15" fill="rgb(254,38,10)" fg:x="51212" fg:w="19"/><text x="48.1977%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (19 samples, 0.02%)</title><rect x="47.9477%" y="629" width="0.0178%" height="15" fill="rgb(208,217,32)" fg:x="51212" fg:w="19"/><text x="48.1977%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (19 samples, 0.02%)</title><rect x="47.9477%" y="613" width="0.0178%" height="15" fill="rgb(221,120,13)" fg:x="51212" fg:w="19"/><text x="48.1977%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (19 samples, 0.02%)</title><rect x="47.9477%" y="597" width="0.0178%" height="15" fill="rgb(246,54,52)" fg:x="51212" fg:w="19"/><text x="48.1977%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (19 samples, 0.02%)</title><rect x="47.9477%" y="581" width="0.0178%" height="15" fill="rgb(242,34,25)" fg:x="51212" fg:w="19"/><text x="48.1977%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (895 samples, 0.84%)</title><rect x="47.1388%" y="773" width="0.8380%" height="15" fill="rgb(247,209,9)" fg:x="50348" fg:w="895"/><text x="47.3888%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (890 samples, 0.83%)</title><rect x="47.1435%" y="757" width="0.8333%" height="15" fill="rgb(228,71,26)" fg:x="50353" fg:w="890"/><text x="47.3935%" y="767.50"></text></g><g><title>value_trait::Builder::object (877 samples, 0.82%)</title><rect x="47.1556%" y="741" width="0.8211%" height="15" fill="rgb(222,145,49)" fg:x="50366" fg:w="877"/><text x="47.4056%" y="751.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (874 samples, 0.82%)</title><rect x="47.1585%" y="725" width="0.8183%" height="15" fill="rgb(218,121,17)" fg:x="50369" fg:w="874"/><text x="47.4085%" y="735.50"></text></g><g><title>tremor_value::value::Value::Object (12 samples, 0.01%)</title><rect x="47.9655%" y="709" width="0.0112%" height="15" fill="rgb(244,50,7)" fg:x="51231" fg:w="12"/><text x="48.2155%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="47.9767%" y="773" width="0.0122%" height="15" fill="rgb(246,229,37)" fg:x="51243" fg:w="13"/><text x="48.2267%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt; (13 samples, 0.01%)</title><rect x="47.9767%" y="757" width="0.0122%" height="15" fill="rgb(225,18,5)" fg:x="51243" fg:w="13"/><text x="48.2267%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="47.9889%" y="773" width="0.0169%" height="15" fill="rgb(213,204,8)" fg:x="51256" fg:w="18"/><text x="48.2389%" y="783.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (39 samples, 0.04%)</title><rect x="48.0760%" y="661" width="0.0365%" height="15" fill="rgb(238,103,6)" fg:x="51349" fg:w="39"/><text x="48.3260%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="48.0994%" y="645" width="0.0131%" height="15" fill="rgb(222,25,35)" fg:x="51374" fg:w="14"/><text x="48.3494%" y="655.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="48.0994%" y="629" width="0.0131%" height="15" fill="rgb(213,203,35)" fg:x="51374" fg:w="14"/><text x="48.3494%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="48.0994%" y="613" width="0.0131%" height="15" fill="rgb(221,79,53)" fg:x="51374" fg:w="14"/><text x="48.3494%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="48.0994%" y="597" width="0.0131%" height="15" fill="rgb(243,200,35)" fg:x="51374" fg:w="14"/><text x="48.3494%" y="607.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="48.0994%" y="581" width="0.0131%" height="15" fill="rgb(248,60,25)" fg:x="51374" fg:w="14"/><text x="48.3494%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="48.0994%" y="565" width="0.0131%" height="15" fill="rgb(227,53,46)" fg:x="51374" fg:w="14"/><text x="48.3494%" y="575.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="48.1443%" y="517" width="0.0197%" height="15" fill="rgb(216,120,32)" fg:x="51422" fg:w="21"/><text x="48.3943%" y="527.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="48.1443%" y="501" width="0.0197%" height="15" fill="rgb(220,134,1)" fg:x="51422" fg:w="21"/><text x="48.3943%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (37 samples, 0.03%)</title><rect x="48.1350%" y="565" width="0.0346%" height="15" fill="rgb(237,168,5)" fg:x="51412" fg:w="37"/><text x="48.3850%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (37 samples, 0.03%)</title><rect x="48.1350%" y="549" width="0.0346%" height="15" fill="rgb(231,100,33)" fg:x="51412" fg:w="37"/><text x="48.3850%" y="559.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (35 samples, 0.03%)</title><rect x="48.1368%" y="533" width="0.0328%" height="15" fill="rgb(236,177,47)" fg:x="51414" fg:w="35"/><text x="48.3868%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (62 samples, 0.06%)</title><rect x="48.1284%" y="597" width="0.0580%" height="15" fill="rgb(235,7,49)" fg:x="51405" fg:w="62"/><text x="48.3784%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (62 samples, 0.06%)</title><rect x="48.1284%" y="581" width="0.0580%" height="15" fill="rgb(232,119,22)" fg:x="51405" fg:w="62"/><text x="48.3784%" y="591.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="48.1696%" y="565" width="0.0169%" height="15" fill="rgb(254,73,53)" fg:x="51449" fg:w="18"/><text x="48.4196%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (64 samples, 0.06%)</title><rect x="48.1284%" y="629" width="0.0599%" height="15" fill="rgb(251,35,20)" fg:x="51405" fg:w="64"/><text x="48.3784%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (64 samples, 0.06%)</title><rect x="48.1284%" y="613" width="0.0599%" height="15" fill="rgb(241,119,20)" fg:x="51405" fg:w="64"/><text x="48.3784%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (80 samples, 0.07%)</title><rect x="48.1181%" y="645" width="0.0749%" height="15" fill="rgb(207,102,14)" fg:x="51394" fg:w="80"/><text x="48.3681%" y="655.50"></text></g><g><title>rust_dealloc (93 samples, 0.09%)</title><rect x="48.1125%" y="661" width="0.0871%" height="15" fill="rgb(248,201,50)" fg:x="51388" fg:w="93"/><text x="48.3625%" y="671.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (12 samples, 0.01%)</title><rect x="48.1996%" y="645" width="0.0112%" height="15" fill="rgb(222,185,44)" fg:x="51481" fg:w="12"/><text x="48.4496%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (160 samples, 0.15%)</title><rect x="48.0629%" y="709" width="0.1498%" height="15" fill="rgb(218,107,18)" fg:x="51335" fg:w="160"/><text x="48.3129%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (160 samples, 0.15%)</title><rect x="48.0629%" y="693" width="0.1498%" height="15" fill="rgb(237,177,39)" fg:x="51335" fg:w="160"/><text x="48.3129%" y="703.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (160 samples, 0.15%)</title><rect x="48.0629%" y="677" width="0.1498%" height="15" fill="rgb(246,69,6)" fg:x="51335" fg:w="160"/><text x="48.3129%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (14 samples, 0.01%)</title><rect x="48.1996%" y="661" width="0.0131%" height="15" fill="rgb(234,208,37)" fg:x="51481" fg:w="14"/><text x="48.4496%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (185 samples, 0.17%)</title><rect x="48.0451%" y="725" width="0.1732%" height="15" fill="rgb(225,4,6)" fg:x="51316" fg:w="185"/><text x="48.2951%" y="735.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="48.2660%" y="581" width="0.0300%" height="15" fill="rgb(233,45,0)" fg:x="51552" fg:w="32"/><text x="48.5160%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (31 samples, 0.03%)</title><rect x="48.2670%" y="565" width="0.0290%" height="15" fill="rgb(226,136,5)" fg:x="51553" fg:w="31"/><text x="48.5170%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (53 samples, 0.05%)</title><rect x="48.2539%" y="629" width="0.0496%" height="15" fill="rgb(211,91,47)" fg:x="51539" fg:w="53"/><text x="48.5039%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (53 samples, 0.05%)</title><rect x="48.2539%" y="613" width="0.0496%" height="15" fill="rgb(242,88,51)" fg:x="51539" fg:w="53"/><text x="48.5039%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (47 samples, 0.04%)</title><rect x="48.2595%" y="597" width="0.0440%" height="15" fill="rgb(230,91,28)" fg:x="51545" fg:w="47"/><text x="48.5095%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (71 samples, 0.07%)</title><rect x="48.2380%" y="661" width="0.0665%" height="15" fill="rgb(254,186,29)" fg:x="51522" fg:w="71"/><text x="48.4880%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (71 samples, 0.07%)</title><rect x="48.2380%" y="645" width="0.0665%" height="15" fill="rgb(238,6,4)" fg:x="51522" fg:w="71"/><text x="48.4880%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (74 samples, 0.07%)</title><rect x="48.2380%" y="693" width="0.0693%" height="15" fill="rgb(221,151,16)" fg:x="51522" fg:w="74"/><text x="48.4880%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (74 samples, 0.07%)</title><rect x="48.2380%" y="677" width="0.0693%" height="15" fill="rgb(251,143,52)" fg:x="51522" fg:w="74"/><text x="48.4880%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (90 samples, 0.08%)</title><rect x="48.2258%" y="709" width="0.0843%" height="15" fill="rgb(206,90,15)" fg:x="51509" fg:w="90"/><text x="48.4758%" y="719.50"></text></g><g><title>rust_dealloc (102 samples, 0.10%)</title><rect x="48.2183%" y="725" width="0.0955%" height="15" fill="rgb(218,35,8)" fg:x="51501" fg:w="102"/><text x="48.4683%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (338 samples, 0.32%)</title><rect x="48.0058%" y="773" width="0.3165%" height="15" fill="rgb(239,215,6)" fg:x="51274" fg:w="338"/><text x="48.2558%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (334 samples, 0.31%)</title><rect x="48.0095%" y="757" width="0.3127%" height="15" fill="rgb(245,116,39)" fg:x="51278" fg:w="334"/><text x="48.2595%" y="767.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (334 samples, 0.31%)</title><rect x="48.0095%" y="741" width="0.3127%" height="15" fill="rgb(242,65,28)" fg:x="51278" fg:w="334"/><text x="48.2595%" y="751.50"></text></g><g><title>core::time::Duration::as_nanos (12 samples, 0.01%)</title><rect x="48.3447%" y="757" width="0.0112%" height="15" fill="rgb(252,132,53)" fg:x="51636" fg:w="12"/><text x="48.5947%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (69 samples, 0.06%)</title><rect x="48.4027%" y="709" width="0.0646%" height="15" fill="rgb(224,159,50)" fg:x="51698" fg:w="69"/><text x="48.6527%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (69 samples, 0.06%)</title><rect x="48.4027%" y="693" width="0.0646%" height="15" fill="rgb(224,93,4)" fg:x="51698" fg:w="69"/><text x="48.6527%" y="703.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (69 samples, 0.06%)</title><rect x="48.4027%" y="677" width="0.0646%" height="15" fill="rgb(208,81,34)" fg:x="51698" fg:w="69"/><text x="48.6527%" y="687.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (69 samples, 0.06%)</title><rect x="48.4027%" y="661" width="0.0646%" height="15" fill="rgb(233,92,54)" fg:x="51698" fg:w="69"/><text x="48.6527%" y="671.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (69 samples, 0.06%)</title><rect x="48.4027%" y="645" width="0.0646%" height="15" fill="rgb(237,21,14)" fg:x="51698" fg:w="69"/><text x="48.6527%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (37 samples, 0.03%)</title><rect x="48.4327%" y="629" width="0.0346%" height="15" fill="rgb(249,128,51)" fg:x="51730" fg:w="37"/><text x="48.6827%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (136 samples, 0.13%)</title><rect x="48.3559%" y="741" width="0.1273%" height="15" fill="rgb(223,129,24)" fg:x="51648" fg:w="136"/><text x="48.6059%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (136 samples, 0.13%)</title><rect x="48.3559%" y="725" width="0.1273%" height="15" fill="rgb(231,168,25)" fg:x="51648" fg:w="136"/><text x="48.6059%" y="735.50"></text></g><g><title>core::time::Duration::new (17 samples, 0.02%)</title><rect x="48.4673%" y="709" width="0.0159%" height="15" fill="rgb(224,39,20)" fg:x="51767" fg:w="17"/><text x="48.7173%" y="719.50"></text></g><g><title>std::time::SystemTime::duration_since (143 samples, 0.13%)</title><rect x="48.3559%" y="757" width="0.1339%" height="15" fill="rgb(225,152,53)" fg:x="51648" fg:w="143"/><text x="48.6059%" y="767.50"></text></g><g><title>__clock_gettime_2 (496 samples, 0.46%)</title><rect x="48.5862%" y="709" width="0.4644%" height="15" fill="rgb(252,17,24)" fg:x="51894" fg:w="496"/><text x="48.8362%" y="719.50"></text></g><g><title>__vdso_clock_gettime (453 samples, 0.42%)</title><rect x="48.6265%" y="693" width="0.4241%" height="15" fill="rgb(250,114,30)" fg:x="51937" fg:w="453"/><text x="48.8765%" y="703.50"></text></g><g><title>[[vdso]] (287 samples, 0.27%)</title><rect x="48.7819%" y="677" width="0.2687%" height="15" fill="rgb(229,5,4)" fg:x="52103" fg:w="287"/><text x="49.0319%" y="687.50"></text></g><g><title>tremor_common::time::nanotime (779 samples, 0.73%)</title><rect x="48.3222%" y="773" width="0.7293%" height="15" fill="rgb(225,176,49)" fg:x="51612" fg:w="779"/><text x="48.5722%" y="783.50"></text></g><g><title>std::time::SystemTime::now (600 samples, 0.56%)</title><rect x="48.4898%" y="757" width="0.5618%" height="15" fill="rgb(224,221,49)" fg:x="51791" fg:w="600"/><text x="48.7398%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (600 samples, 0.56%)</title><rect x="48.4898%" y="741" width="0.5618%" height="15" fill="rgb(253,169,27)" fg:x="51791" fg:w="600"/><text x="48.7398%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (600 samples, 0.56%)</title><rect x="48.4898%" y="725" width="0.5618%" height="15" fill="rgb(211,206,16)" fg:x="51791" fg:w="600"/><text x="48.7398%" y="735.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (4,110 samples, 3.85%)</title><rect x="45.2279%" y="789" width="3.8480%" height="15" fill="rgb(244,87,35)" fg:x="48307" fg:w="4110"/><text x="45.4779%" y="799.50">trem..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (26 samples, 0.02%)</title><rect x="49.0516%" y="773" width="0.0243%" height="15" fill="rgb(246,28,10)" fg:x="52391" fg:w="26"/><text x="49.3016%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,595 samples, 6.17%)</title><rect x="42.9369%" y="805" width="6.1746%" height="15" fill="rgb(229,12,44)" fg:x="45860" fg:w="6595"/><text x="43.1869%" y="815.50">&lt;core::f..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (38 samples, 0.04%)</title><rect x="49.0759%" y="789" width="0.0356%" height="15" fill="rgb(210,145,37)" fg:x="52417" fg:w="38"/><text x="49.3259%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.01%)</title><rect x="49.1115%" y="805" width="0.0131%" height="15" fill="rgb(227,112,52)" fg:x="52455" fg:w="14"/><text x="49.3615%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (792 samples, 0.74%)</title><rect x="49.1246%" y="805" width="0.7415%" height="15" fill="rgb(238,155,34)" fg:x="52469" fg:w="792"/><text x="49.3746%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (54 samples, 0.05%)</title><rect x="49.8689%" y="789" width="0.0506%" height="15" fill="rgb(239,226,36)" fg:x="53264" fg:w="54"/><text x="50.1189%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (58 samples, 0.05%)</title><rect x="49.8689%" y="805" width="0.0543%" height="15" fill="rgb(230,16,23)" fg:x="53264" fg:w="58"/><text x="50.1189%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,950 samples, 7.44%)</title><rect x="42.5081%" y="821" width="7.4433%" height="15" fill="rgb(236,171,36)" fg:x="45402" fg:w="7950"/><text x="42.7581%" y="831.50">tremor_run..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::should_pull_data (30 samples, 0.03%)</title><rect x="49.9232%" y="805" width="0.0281%" height="15" fill="rgb(221,22,14)" fg:x="53322" fg:w="30"/><text x="50.1732%" y="815.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,130 samples, 9.48%)</title><rect x="40.5204%" y="1109" width="9.4843%" height="15" fill="rgb(242,43,11)" fg:x="43279" fg:w="10130"/><text x="40.7704%" y="1119.50">&lt;futures_lite:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,129 samples, 9.48%)</title><rect x="40.5213%" y="1093" width="9.4834%" height="15" fill="rgb(232,69,23)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="1103.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::run::{{closure}} (10,129 samples, 9.48%)</title><rect x="40.5213%" y="1077" width="9.4834%" height="15" fill="rgb(216,180,54)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="1087.50">async_executor..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,129 samples, 9.48%)</title><rect x="40.5213%" y="1061" width="9.4834%" height="15" fill="rgb(216,5,24)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="1071.50">&lt;futures_lite:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,129 samples, 9.48%)</title><rect x="40.5213%" y="1045" width="9.4834%" height="15" fill="rgb(225,89,9)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="1055.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (10,129 samples, 9.48%)</title><rect x="40.5213%" y="1029" width="9.4834%" height="15" fill="rgb(243,75,33)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="1039.50">async_executor..</text></g><g><title>async_task::runnable::Runnable::run (10,129 samples, 9.48%)</title><rect x="40.5213%" y="1013" width="9.4834%" height="15" fill="rgb(247,141,45)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="1023.50">async_task::ru..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (10,129 samples, 9.48%)</title><rect x="40.5213%" y="997" width="9.4834%" height="15" fill="rgb(232,177,36)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="1007.50">async_task::ra..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10,129 samples, 9.48%)</title><rect x="40.5213%" y="981" width="9.4834%" height="15" fill="rgb(219,125,36)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="991.50">&lt;core::pin::Pi..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,129 samples, 9.48%)</title><rect x="40.5213%" y="965" width="9.4834%" height="15" fill="rgb(227,94,9)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="975.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (10,129 samples, 9.48%)</title><rect x="40.5213%" y="949" width="9.4834%" height="15" fill="rgb(240,34,52)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="959.50">async_executor..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (10,129 samples, 9.48%)</title><rect x="40.5213%" y="933" width="9.4834%" height="15" fill="rgb(216,45,12)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="943.50">&lt;async_std::ta..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (10,129 samples, 9.48%)</title><rect x="40.5213%" y="917" width="9.4834%" height="15" fill="rgb(246,21,19)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="927.50">async_std::tas..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,129 samples, 9.48%)</title><rect x="40.5213%" y="901" width="9.4834%" height="15" fill="rgb(213,98,42)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="911.50">std::thread::l..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,129 samples, 9.48%)</title><rect x="40.5213%" y="885" width="9.4834%" height="15" fill="rgb(250,136,47)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="895.50">std::thread::l..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (10,129 samples, 9.48%)</title><rect x="40.5213%" y="869" width="9.4834%" height="15" fill="rgb(251,124,27)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="879.50">async_std::tas..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (10,129 samples, 9.48%)</title><rect x="40.5213%" y="853" width="9.4834%" height="15" fill="rgb(229,180,14)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="863.50">&lt;async_std::ta..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,129 samples, 9.48%)</title><rect x="40.5213%" y="837" width="9.4834%" height="15" fill="rgb(245,216,25)" fg:x="43280" fg:w="10129"/><text x="40.7713%" y="847.50">&lt;core::future:..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (57 samples, 0.05%)</title><rect x="49.9513%" y="821" width="0.0534%" height="15" fill="rgb(251,43,5)" fg:x="53352" fg:w="57"/><text x="50.2013%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (57 samples, 0.05%)</title><rect x="49.9513%" y="805" width="0.0534%" height="15" fill="rgb(250,128,24)" fg:x="53352" fg:w="57"/><text x="50.2013%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (57 samples, 0.05%)</title><rect x="49.9513%" y="789" width="0.0534%" height="15" fill="rgb(217,117,27)" fg:x="53352" fg:w="57"/><text x="50.2013%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (57 samples, 0.05%)</title><rect x="49.9513%" y="773" width="0.0534%" height="15" fill="rgb(245,147,4)" fg:x="53352" fg:w="57"/><text x="50.2013%" y="783.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (48 samples, 0.04%)</title><rect x="49.9597%" y="757" width="0.0449%" height="15" fill="rgb(242,201,35)" fg:x="53361" fg:w="48"/><text x="50.2097%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (39 samples, 0.04%)</title><rect x="49.9682%" y="741" width="0.0365%" height="15" fill="rgb(218,181,1)" fg:x="53370" fg:w="39"/><text x="50.2182%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (39 samples, 0.04%)</title><rect x="49.9682%" y="725" width="0.0365%" height="15" fill="rgb(222,6,29)" fg:x="53370" fg:w="39"/><text x="50.2182%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (39 samples, 0.04%)</title><rect x="49.9682%" y="709" width="0.0365%" height="15" fill="rgb(208,186,3)" fg:x="53370" fg:w="39"/><text x="50.2182%" y="719.50"></text></g><g><title>async_io::driver::block_on (10,134 samples, 9.49%)</title><rect x="40.5204%" y="1125" width="9.4881%" height="15" fill="rgb(216,36,26)" fg:x="43279" fg:w="10134"/><text x="40.7704%" y="1135.50">async_io::driv..</text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="50.1526%" y="405" width="0.0122%" height="15" fill="rgb(248,201,23)" fg:x="53567" fg:w="13"/><text x="50.4026%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="50.1648%" y="389" width="0.0140%" height="15" fill="rgb(251,170,31)" fg:x="53580" fg:w="15"/><text x="50.4148%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (14 samples, 0.01%)</title><rect x="50.1788%" y="389" width="0.0131%" height="15" fill="rgb(207,110,25)" fg:x="53595" fg:w="14"/><text x="50.4288%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.02%)</title><rect x="50.2425%" y="85" width="0.0159%" height="15" fill="rgb(250,54,15)" fg:x="53663" fg:w="17"/><text x="50.4925%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (36 samples, 0.03%)</title><rect x="50.2275%" y="133" width="0.0337%" height="15" fill="rgb(227,68,33)" fg:x="53647" fg:w="36"/><text x="50.4775%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (36 samples, 0.03%)</title><rect x="50.2275%" y="117" width="0.0337%" height="15" fill="rgb(238,34,41)" fg:x="53647" fg:w="36"/><text x="50.4775%" y="127.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (36 samples, 0.03%)</title><rect x="50.2275%" y="101" width="0.0337%" height="15" fill="rgb(220,11,15)" fg:x="53647" fg:w="36"/><text x="50.4775%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (44 samples, 0.04%)</title><rect x="50.2210%" y="165" width="0.0412%" height="15" fill="rgb(246,111,35)" fg:x="53640" fg:w="44"/><text x="50.4710%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (44 samples, 0.04%)</title><rect x="50.2210%" y="149" width="0.0412%" height="15" fill="rgb(209,88,53)" fg:x="53640" fg:w="44"/><text x="50.4710%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (51 samples, 0.05%)</title><rect x="50.2210%" y="197" width="0.0477%" height="15" fill="rgb(231,185,47)" fg:x="53640" fg:w="51"/><text x="50.4710%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (51 samples, 0.05%)</title><rect x="50.2210%" y="181" width="0.0477%" height="15" fill="rgb(233,154,1)" fg:x="53640" fg:w="51"/><text x="50.4710%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (60 samples, 0.06%)</title><rect x="50.2163%" y="213" width="0.0562%" height="15" fill="rgb(225,15,46)" fg:x="53635" fg:w="60"/><text x="50.4663%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (82 samples, 0.08%)</title><rect x="50.1985%" y="293" width="0.0768%" height="15" fill="rgb(211,135,41)" fg:x="53616" fg:w="82"/><text x="50.4485%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (76 samples, 0.07%)</title><rect x="50.2041%" y="277" width="0.0712%" height="15" fill="rgb(208,54,0)" fg:x="53622" fg:w="76"/><text x="50.4541%" y="287.50"></text></g><g><title>__rg_dealloc (76 samples, 0.07%)</title><rect x="50.2041%" y="261" width="0.0712%" height="15" fill="rgb(244,136,14)" fg:x="53622" fg:w="76"/><text x="50.4541%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (76 samples, 0.07%)</title><rect x="50.2041%" y="245" width="0.0712%" height="15" fill="rgb(241,56,14)" fg:x="53622" fg:w="76"/><text x="50.4541%" y="255.50"></text></g><g><title>rust_dealloc (70 samples, 0.07%)</title><rect x="50.2097%" y="229" width="0.0655%" height="15" fill="rgb(205,80,24)" fg:x="53628" fg:w="70"/><text x="50.4597%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (86 samples, 0.08%)</title><rect x="50.1985%" y="357" width="0.0805%" height="15" fill="rgb(220,57,4)" fg:x="53616" fg:w="86"/><text x="50.4485%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.08%)</title><rect x="50.1985%" y="341" width="0.0805%" height="15" fill="rgb(226,193,50)" fg:x="53616" fg:w="86"/><text x="50.4485%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (86 samples, 0.08%)</title><rect x="50.1985%" y="325" width="0.0805%" height="15" fill="rgb(231,168,22)" fg:x="53616" fg:w="86"/><text x="50.4485%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.08%)</title><rect x="50.1985%" y="309" width="0.0805%" height="15" fill="rgb(254,215,14)" fg:x="53616" fg:w="86"/><text x="50.4485%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (96 samples, 0.09%)</title><rect x="50.1919%" y="389" width="0.0899%" height="15" fill="rgb(211,115,16)" fg:x="53609" fg:w="96"/><text x="50.4419%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 0.09%)</title><rect x="50.1919%" y="373" width="0.0899%" height="15" fill="rgb(236,210,16)" fg:x="53609" fg:w="96"/><text x="50.4419%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (147 samples, 0.14%)</title><rect x="50.1470%" y="437" width="0.1376%" height="15" fill="rgb(221,94,12)" fg:x="53561" fg:w="147"/><text x="50.3970%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (141 samples, 0.13%)</title><rect x="50.1526%" y="421" width="0.1320%" height="15" fill="rgb(235,218,49)" fg:x="53567" fg:w="141"/><text x="50.4026%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (128 samples, 0.12%)</title><rect x="50.1648%" y="405" width="0.1198%" height="15" fill="rgb(217,114,14)" fg:x="53580" fg:w="128"/><text x="50.4148%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (171 samples, 0.16%)</title><rect x="50.1311%" y="453" width="0.1601%" height="15" fill="rgb(216,145,22)" fg:x="53544" fg:w="171"/><text x="50.3811%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (77 samples, 0.07%)</title><rect x="50.2912%" y="453" width="0.0721%" height="15" fill="rgb(217,112,39)" fg:x="53715" fg:w="77"/><text x="50.5412%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (47 samples, 0.04%)</title><rect x="50.3193%" y="437" width="0.0440%" height="15" fill="rgb(225,85,32)" fg:x="53745" fg:w="47"/><text x="50.5693%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (47 samples, 0.04%)</title><rect x="50.3193%" y="421" width="0.0440%" height="15" fill="rgb(245,209,47)" fg:x="53745" fg:w="47"/><text x="50.5693%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::empty (31 samples, 0.03%)</title><rect x="50.4363%" y="245" width="0.0290%" height="15" fill="rgb(218,220,15)" fg:x="53870" fg:w="31"/><text x="50.6863%" y="255.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (31 samples, 0.03%)</title><rect x="50.4363%" y="229" width="0.0290%" height="15" fill="rgb(222,202,31)" fg:x="53870" fg:w="31"/><text x="50.6863%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (377 samples, 0.35%)</title><rect x="50.3914%" y="293" width="0.3530%" height="15" fill="rgb(243,203,4)" fg:x="53822" fg:w="377"/><text x="50.6414%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (377 samples, 0.35%)</title><rect x="50.3914%" y="277" width="0.3530%" height="15" fill="rgb(237,92,17)" fg:x="53822" fg:w="377"/><text x="50.6414%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (359 samples, 0.34%)</title><rect x="50.4082%" y="261" width="0.3361%" height="15" fill="rgb(231,119,7)" fg:x="53840" fg:w="359"/><text x="50.6582%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::take (298 samples, 0.28%)</title><rect x="50.4653%" y="245" width="0.2790%" height="15" fill="rgb(237,82,41)" fg:x="53901" fg:w="298"/><text x="50.7153%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (298 samples, 0.28%)</title><rect x="50.4653%" y="229" width="0.2790%" height="15" fill="rgb(226,81,48)" fg:x="53901" fg:w="298"/><text x="50.7153%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (400 samples, 0.37%)</title><rect x="50.3726%" y="389" width="0.3745%" height="15" fill="rgb(234,70,51)" fg:x="53802" fg:w="400"/><text x="50.6226%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (400 samples, 0.37%)</title><rect x="50.3726%" y="373" width="0.3745%" height="15" fill="rgb(251,86,4)" fg:x="53802" fg:w="400"/><text x="50.6226%" y="383.50"></text></g><g><title>alloc::alloc::alloc (390 samples, 0.37%)</title><rect x="50.3820%" y="357" width="0.3651%" height="15" fill="rgb(244,144,28)" fg:x="53812" fg:w="390"/><text x="50.6320%" y="367.50"></text></g><g><title>__rg_alloc (390 samples, 0.37%)</title><rect x="50.3820%" y="341" width="0.3651%" height="15" fill="rgb(232,161,39)" fg:x="53812" fg:w="390"/><text x="50.6320%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (390 samples, 0.37%)</title><rect x="50.3820%" y="325" width="0.3651%" height="15" fill="rgb(247,34,51)" fg:x="53812" fg:w="390"/><text x="50.6320%" y="335.50"></text></g><g><title>rust_alloc (386 samples, 0.36%)</title><rect x="50.3857%" y="309" width="0.3614%" height="15" fill="rgb(225,132,2)" fg:x="53816" fg:w="386"/><text x="50.6357%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (420 samples, 0.39%)</title><rect x="50.3726%" y="405" width="0.3932%" height="15" fill="rgb(209,159,44)" fg:x="53802" fg:w="420"/><text x="50.6226%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (20 samples, 0.02%)</title><rect x="50.7471%" y="389" width="0.0187%" height="15" fill="rgb(251,214,1)" fg:x="54202" fg:w="20"/><text x="50.9971%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (16 samples, 0.01%)</title><rect x="50.7509%" y="373" width="0.0150%" height="15" fill="rgb(247,84,47)" fg:x="54206" fg:w="16"/><text x="51.0009%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (16 samples, 0.01%)</title><rect x="50.7509%" y="357" width="0.0150%" height="15" fill="rgb(240,111,43)" fg:x="54206" fg:w="16"/><text x="51.0009%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (436 samples, 0.41%)</title><rect x="50.3633%" y="453" width="0.4082%" height="15" fill="rgb(215,214,35)" fg:x="53792" fg:w="436"/><text x="50.6133%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (436 samples, 0.41%)</title><rect x="50.3633%" y="437" width="0.4082%" height="15" fill="rgb(248,207,23)" fg:x="53792" fg:w="436"/><text x="50.6133%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (426 samples, 0.40%)</title><rect x="50.3726%" y="421" width="0.3988%" height="15" fill="rgb(214,186,4)" fg:x="53802" fg:w="426"/><text x="50.6226%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (823 samples, 0.77%)</title><rect x="50.0084%" y="597" width="0.7705%" height="15" fill="rgb(220,133,22)" fg:x="53413" fg:w="823"/><text x="50.2584%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (823 samples, 0.77%)</title><rect x="50.0084%" y="581" width="0.7705%" height="15" fill="rgb(239,134,19)" fg:x="53413" fg:w="823"/><text x="50.2584%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (823 samples, 0.77%)</title><rect x="50.0084%" y="565" width="0.7705%" height="15" fill="rgb(250,140,9)" fg:x="53413" fg:w="823"/><text x="50.2584%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (823 samples, 0.77%)</title><rect x="50.0084%" y="549" width="0.7705%" height="15" fill="rgb(225,59,14)" fg:x="53413" fg:w="823"/><text x="50.2584%" y="559.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (823 samples, 0.77%)</title><rect x="50.0084%" y="533" width="0.7705%" height="15" fill="rgb(214,152,51)" fg:x="53413" fg:w="823"/><text x="50.2584%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (823 samples, 0.77%)</title><rect x="50.0084%" y="517" width="0.7705%" height="15" fill="rgb(251,227,43)" fg:x="53413" fg:w="823"/><text x="50.2584%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (823 samples, 0.77%)</title><rect x="50.0084%" y="501" width="0.7705%" height="15" fill="rgb(241,96,17)" fg:x="53413" fg:w="823"/><text x="50.2584%" y="511.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (823 samples, 0.77%)</title><rect x="50.0084%" y="485" width="0.7705%" height="15" fill="rgb(234,198,43)" fg:x="53413" fg:w="823"/><text x="50.2584%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (692 samples, 0.65%)</title><rect x="50.1311%" y="469" width="0.6479%" height="15" fill="rgb(220,108,29)" fg:x="53544" fg:w="692"/><text x="50.3811%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (848 samples, 0.79%)</title><rect x="50.8164%" y="565" width="0.7939%" height="15" fill="rgb(226,163,33)" fg:x="54276" fg:w="848"/><text x="51.0664%" y="575.50"></text></g><g><title>aligned_size (20 samples, 0.02%)</title><rect x="51.6104%" y="549" width="0.0187%" height="15" fill="rgb(205,194,45)" fg:x="55124" fg:w="20"/><text x="51.8604%" y="559.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="51.6291%" y="517" width="0.0140%" height="15" fill="rgb(206,143,44)" fg:x="55144" fg:w="15"/><text x="51.8791%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (117 samples, 0.11%)</title><rect x="51.6553%" y="501" width="0.1095%" height="15" fill="rgb(236,136,36)" fg:x="55172" fg:w="117"/><text x="51.9053%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (117 samples, 0.11%)</title><rect x="51.6553%" y="485" width="0.1095%" height="15" fill="rgb(249,172,42)" fg:x="55172" fg:w="117"/><text x="51.9053%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (107 samples, 0.10%)</title><rect x="51.6647%" y="469" width="0.1002%" height="15" fill="rgb(216,139,23)" fg:x="55182" fg:w="107"/><text x="51.9147%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (91 samples, 0.09%)</title><rect x="51.6796%" y="453" width="0.0852%" height="15" fill="rgb(207,166,20)" fg:x="55198" fg:w="91"/><text x="51.9296%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (91 samples, 0.09%)</title><rect x="51.6796%" y="437" width="0.0852%" height="15" fill="rgb(210,209,22)" fg:x="55198" fg:w="91"/><text x="51.9296%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (91 samples, 0.09%)</title><rect x="51.6796%" y="421" width="0.0852%" height="15" fill="rgb(232,118,20)" fg:x="55198" fg:w="91"/><text x="51.9296%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (12 samples, 0.01%)</title><rect x="51.7742%" y="469" width="0.0112%" height="15" fill="rgb(238,113,42)" fg:x="55299" fg:w="12"/><text x="52.0242%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (12 samples, 0.01%)</title><rect x="51.7742%" y="453" width="0.0112%" height="15" fill="rgb(231,42,5)" fg:x="55299" fg:w="12"/><text x="52.0242%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="51.7751%" y="437" width="0.0103%" height="15" fill="rgb(243,166,24)" fg:x="55300" fg:w="11"/><text x="52.0251%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="51.7648%" y="501" width="0.0375%" height="15" fill="rgb(237,226,12)" fg:x="55289" fg:w="40"/><text x="52.0148%" y="511.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (32 samples, 0.03%)</title><rect x="51.7723%" y="485" width="0.0300%" height="15" fill="rgb(229,133,24)" fg:x="55297" fg:w="32"/><text x="52.0223%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (15 samples, 0.01%)</title><rect x="51.8135%" y="453" width="0.0140%" height="15" fill="rgb(238,33,43)" fg:x="55341" fg:w="15"/><text x="52.0635%" y="463.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (13 samples, 0.01%)</title><rect x="51.8154%" y="437" width="0.0122%" height="15" fill="rgb(227,59,38)" fg:x="55343" fg:w="13"/><text x="52.0654%" y="447.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (12 samples, 0.01%)</title><rect x="51.8163%" y="421" width="0.0112%" height="15" fill="rgb(230,97,0)" fg:x="55344" fg:w="12"/><text x="52.0663%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (52 samples, 0.05%)</title><rect x="51.8023%" y="501" width="0.0487%" height="15" fill="rgb(250,173,50)" fg:x="55329" fg:w="52"/><text x="52.0523%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.05%)</title><rect x="51.8051%" y="485" width="0.0459%" height="15" fill="rgb(240,15,50)" fg:x="55332" fg:w="49"/><text x="52.0551%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="51.8098%" y="469" width="0.0412%" height="15" fill="rgb(221,93,22)" fg:x="55337" fg:w="44"/><text x="52.0598%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="51.8276%" y="453" width="0.0234%" height="15" fill="rgb(245,180,53)" fg:x="55356" fg:w="25"/><text x="52.0776%" y="463.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (22 samples, 0.02%)</title><rect x="51.8304%" y="437" width="0.0206%" height="15" fill="rgb(231,88,51)" fg:x="55359" fg:w="22"/><text x="52.0804%" y="447.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (12 samples, 0.01%)</title><rect x="51.8397%" y="421" width="0.0112%" height="15" fill="rgb(240,58,21)" fg:x="55369" fg:w="12"/><text x="52.0897%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="51.8397%" y="405" width="0.0112%" height="15" fill="rgb(237,21,10)" fg:x="55369" fg:w="12"/><text x="52.0897%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (16 samples, 0.01%)</title><rect x="51.8510%" y="501" width="0.0150%" height="15" fill="rgb(218,43,11)" fg:x="55381" fg:w="16"/><text x="52.1010%" y="511.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (16 samples, 0.01%)</title><rect x="51.8510%" y="485" width="0.0150%" height="15" fill="rgb(218,221,29)" fg:x="55381" fg:w="16"/><text x="52.1010%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,154 samples, 2.02%)</title><rect x="50.0084%" y="949" width="2.0167%" height="15" fill="rgb(214,118,42)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="959.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,154 samples, 2.02%)</title><rect x="50.0084%" y="933" width="2.0167%" height="15" fill="rgb(251,200,26)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="943.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (2,154 samples, 2.02%)</title><rect x="50.0084%" y="917" width="2.0167%" height="15" fill="rgb(237,101,39)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="927.50">t..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,154 samples, 2.02%)</title><rect x="50.0084%" y="901" width="2.0167%" height="15" fill="rgb(251,117,11)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="911.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,154 samples, 2.02%)</title><rect x="50.0084%" y="885" width="2.0167%" height="15" fill="rgb(216,223,23)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="895.50">&lt;..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (2,154 samples, 2.02%)</title><rect x="50.0084%" y="869" width="2.0167%" height="15" fill="rgb(251,54,12)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="879.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,154 samples, 2.02%)</title><rect x="50.0084%" y="853" width="2.0167%" height="15" fill="rgb(254,176,54)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="863.50">&lt;..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (2,154 samples, 2.02%)</title><rect x="50.0084%" y="837" width="2.0167%" height="15" fill="rgb(210,32,8)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="847.50">a..</text></g><g><title>std::panic::catch_unwind (2,154 samples, 2.02%)</title><rect x="50.0084%" y="821" width="2.0167%" height="15" fill="rgb(235,52,38)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="831.50">s..</text></g><g><title>std::panicking::try (2,154 samples, 2.02%)</title><rect x="50.0084%" y="805" width="2.0167%" height="15" fill="rgb(231,4,44)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="815.50">s..</text></g><g><title>std::panicking::try::do_call (2,154 samples, 2.02%)</title><rect x="50.0084%" y="789" width="2.0167%" height="15" fill="rgb(249,2,32)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="799.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,154 samples, 2.02%)</title><rect x="50.0084%" y="773" width="2.0167%" height="15" fill="rgb(224,65,26)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="783.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once (2,154 samples, 2.02%)</title><rect x="50.0084%" y="757" width="2.0167%" height="15" fill="rgb(250,73,40)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="767.50">c..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (2,154 samples, 2.02%)</title><rect x="50.0084%" y="741" width="2.0167%" height="15" fill="rgb(253,177,16)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="751.50">a..</text></g><g><title>async_ffi::FfiContext::with_context (2,154 samples, 2.02%)</title><rect x="50.0084%" y="725" width="2.0167%" height="15" fill="rgb(217,32,34)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="735.50">a..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (2,154 samples, 2.02%)</title><rect x="50.0084%" y="709" width="2.0167%" height="15" fill="rgb(212,7,10)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="719.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,154 samples, 2.02%)</title><rect x="50.0084%" y="693" width="2.0167%" height="15" fill="rgb(245,89,8)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="703.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (2,154 samples, 2.02%)</title><rect x="50.0084%" y="677" width="2.0167%" height="15" fill="rgb(237,16,53)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="687.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (2,154 samples, 2.02%)</title><rect x="50.0084%" y="661" width="2.0167%" height="15" fill="rgb(250,204,30)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="671.50">t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (2,154 samples, 2.02%)</title><rect x="50.0084%" y="645" width="2.0167%" height="15" fill="rgb(208,77,27)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="655.50">t..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (2,154 samples, 2.02%)</title><rect x="50.0084%" y="629" width="2.0167%" height="15" fill="rgb(250,204,28)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="639.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (2,154 samples, 2.02%)</title><rect x="50.0084%" y="613" width="2.0167%" height="15" fill="rgb(244,63,21)" fg:x="53413" fg:w="2154"/><text x="50.2584%" y="623.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,331 samples, 1.25%)</title><rect x="50.7790%" y="597" width="1.2462%" height="15" fill="rgb(236,85,44)" fg:x="54236" fg:w="1331"/><text x="51.0290%" y="607.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (1,331 samples, 1.25%)</title><rect x="50.7790%" y="581" width="1.2462%" height="15" fill="rgb(215,98,4)" fg:x="54236" fg:w="1331"/><text x="51.0290%" y="591.50"></text></g><g><title>rust_alloc (443 samples, 0.41%)</title><rect x="51.6104%" y="565" width="0.4148%" height="15" fill="rgb(235,38,11)" fg:x="55124" fg:w="443"/><text x="51.8604%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (423 samples, 0.40%)</title><rect x="51.6291%" y="549" width="0.3960%" height="15" fill="rgb(254,186,25)" fg:x="55144" fg:w="423"/><text x="51.8791%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (423 samples, 0.40%)</title><rect x="51.6291%" y="533" width="0.3960%" height="15" fill="rgb(225,55,31)" fg:x="55144" fg:w="423"/><text x="51.8791%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (408 samples, 0.38%)</title><rect x="51.6431%" y="517" width="0.3820%" height="15" fill="rgb(211,15,21)" fg:x="55159" fg:w="408"/><text x="51.8931%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (170 samples, 0.16%)</title><rect x="51.8660%" y="501" width="0.1592%" height="15" fill="rgb(215,187,41)" fg:x="55397" fg:w="170"/><text x="52.1160%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (170 samples, 0.16%)</title><rect x="51.8660%" y="485" width="0.1592%" height="15" fill="rgb(248,69,32)" fg:x="55397" fg:w="170"/><text x="52.1160%" y="495.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (247 samples, 0.23%)</title><rect x="52.0420%" y="789" width="0.2313%" height="15" fill="rgb(252,102,52)" fg:x="55585" fg:w="247"/><text x="52.2920%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (224 samples, 0.21%)</title><rect x="52.0635%" y="773" width="0.2097%" height="15" fill="rgb(253,140,32)" fg:x="55608" fg:w="224"/><text x="52.3135%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (250 samples, 0.23%)</title><rect x="52.0420%" y="821" width="0.2341%" height="15" fill="rgb(216,56,42)" fg:x="55585" fg:w="250"/><text x="52.2920%" y="831.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (250 samples, 0.23%)</title><rect x="52.0420%" y="805" width="0.2341%" height="15" fill="rgb(216,184,14)" fg:x="55585" fg:w="250"/><text x="52.2920%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="54.3002%" y="501" width="0.0131%" height="15" fill="rgb(237,187,27)" fg:x="57997" fg:w="14"/><text x="54.5502%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (54 samples, 0.05%)</title><rect x="54.3677%" y="341" width="0.0506%" height="15" fill="rgb(219,65,3)" fg:x="58069" fg:w="54"/><text x="54.6177%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (54 samples, 0.05%)</title><rect x="54.3677%" y="325" width="0.0506%" height="15" fill="rgb(245,83,25)" fg:x="58069" fg:w="54"/><text x="54.6177%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (612 samples, 0.57%)</title><rect x="54.3442%" y="389" width="0.5730%" height="15" fill="rgb(214,205,45)" fg:x="58044" fg:w="612"/><text x="54.5942%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (609 samples, 0.57%)</title><rect x="54.3471%" y="373" width="0.5702%" height="15" fill="rgb(241,20,18)" fg:x="58047" fg:w="609"/><text x="54.5971%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (600 samples, 0.56%)</title><rect x="54.3555%" y="357" width="0.5618%" height="15" fill="rgb(232,163,23)" fg:x="58056" fg:w="600"/><text x="54.6055%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (533 samples, 0.50%)</title><rect x="54.4182%" y="341" width="0.4990%" height="15" fill="rgb(214,5,46)" fg:x="58123" fg:w="533"/><text x="54.6682%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (533 samples, 0.50%)</title><rect x="54.4182%" y="325" width="0.4990%" height="15" fill="rgb(229,78,17)" fg:x="58123" fg:w="533"/><text x="54.6682%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (670 samples, 0.63%)</title><rect x="54.3002%" y="533" width="0.6273%" height="15" fill="rgb(248,89,10)" fg:x="57997" fg:w="670"/><text x="54.5502%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (670 samples, 0.63%)</title><rect x="54.3002%" y="517" width="0.6273%" height="15" fill="rgb(248,54,15)" fg:x="57997" fg:w="670"/><text x="54.5502%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (656 samples, 0.61%)</title><rect x="54.3133%" y="501" width="0.6142%" height="15" fill="rgb(223,116,6)" fg:x="58011" fg:w="656"/><text x="54.5633%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (656 samples, 0.61%)</title><rect x="54.3133%" y="485" width="0.6142%" height="15" fill="rgb(205,125,38)" fg:x="58011" fg:w="656"/><text x="54.5633%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (656 samples, 0.61%)</title><rect x="54.3133%" y="469" width="0.6142%" height="15" fill="rgb(251,78,38)" fg:x="58011" fg:w="656"/><text x="54.5633%" y="479.50"></text></g><g><title>alloc::alloc::alloc (650 samples, 0.61%)</title><rect x="54.3190%" y="453" width="0.6086%" height="15" fill="rgb(253,78,28)" fg:x="58017" fg:w="650"/><text x="54.5690%" y="463.50"></text></g><g><title>__rg_alloc (650 samples, 0.61%)</title><rect x="54.3190%" y="437" width="0.6086%" height="15" fill="rgb(209,120,3)" fg:x="58017" fg:w="650"/><text x="54.5690%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (650 samples, 0.61%)</title><rect x="54.3190%" y="421" width="0.6086%" height="15" fill="rgb(238,229,9)" fg:x="58017" fg:w="650"/><text x="54.5690%" y="431.50"></text></g><g><title>rust_alloc (634 samples, 0.59%)</title><rect x="54.3339%" y="405" width="0.5936%" height="15" fill="rgb(253,159,18)" fg:x="58033" fg:w="634"/><text x="54.5839%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="54.9172%" y="389" width="0.0103%" height="15" fill="rgb(244,42,34)" fg:x="58656" fg:w="11"/><text x="55.1672%" y="399.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,350 samples, 1.26%)</title><rect x="53.7104%" y="661" width="1.2640%" height="15" fill="rgb(224,8,7)" fg:x="57367" fg:w="1350"/><text x="53.9604%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (795 samples, 0.74%)</title><rect x="54.2300%" y="645" width="0.7443%" height="15" fill="rgb(210,201,45)" fg:x="57922" fg:w="795"/><text x="54.4800%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (766 samples, 0.72%)</title><rect x="54.2572%" y="629" width="0.7172%" height="15" fill="rgb(252,185,21)" fg:x="57951" fg:w="766"/><text x="54.5072%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (720 samples, 0.67%)</title><rect x="54.3002%" y="613" width="0.6741%" height="15" fill="rgb(223,131,1)" fg:x="57997" fg:w="720"/><text x="54.5502%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (720 samples, 0.67%)</title><rect x="54.3002%" y="597" width="0.6741%" height="15" fill="rgb(245,141,16)" fg:x="57997" fg:w="720"/><text x="54.5502%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (720 samples, 0.67%)</title><rect x="54.3002%" y="581" width="0.6741%" height="15" fill="rgb(229,55,45)" fg:x="57997" fg:w="720"/><text x="54.5502%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (720 samples, 0.67%)</title><rect x="54.3002%" y="565" width="0.6741%" height="15" fill="rgb(208,92,15)" fg:x="57997" fg:w="720"/><text x="54.5502%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (720 samples, 0.67%)</title><rect x="54.3002%" y="549" width="0.6741%" height="15" fill="rgb(234,185,47)" fg:x="57997" fg:w="720"/><text x="54.5502%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (50 samples, 0.05%)</title><rect x="54.9275%" y="533" width="0.0468%" height="15" fill="rgb(253,104,50)" fg:x="58667" fg:w="50"/><text x="55.1775%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (50 samples, 0.05%)</title><rect x="54.9275%" y="517" width="0.0468%" height="15" fill="rgb(205,70,7)" fg:x="58667" fg:w="50"/><text x="55.1775%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (50 samples, 0.05%)</title><rect x="54.9275%" y="501" width="0.0468%" height="15" fill="rgb(240,178,43)" fg:x="58667" fg:w="50"/><text x="55.1775%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (40 samples, 0.04%)</title><rect x="55.0811%" y="629" width="0.0375%" height="15" fill="rgb(214,112,2)" fg:x="58831" fg:w="40"/><text x="55.3311%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (19 samples, 0.02%)</title><rect x="55.1007%" y="613" width="0.0178%" height="15" fill="rgb(206,46,17)" fg:x="58852" fg:w="19"/><text x="55.3507%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="55.1204%" y="517" width="0.0103%" height="15" fill="rgb(225,220,16)" fg:x="58873" fg:w="11"/><text x="55.3704%" y="527.50"></text></g><g><title>aligned_size (16 samples, 0.01%)</title><rect x="55.1447%" y="437" width="0.0150%" height="15" fill="rgb(238,65,40)" fg:x="58899" fg:w="16"/><text x="55.3947%" y="447.50"></text></g><g><title>rust_alloc (35 samples, 0.03%)</title><rect x="55.1597%" y="405" width="0.0328%" height="15" fill="rgb(230,151,21)" fg:x="58915" fg:w="35"/><text x="55.4097%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (11 samples, 0.01%)</title><rect x="55.2028%" y="389" width="0.0103%" height="15" fill="rgb(218,58,49)" fg:x="58961" fg:w="11"/><text x="55.4528%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (11 samples, 0.01%)</title><rect x="55.2028%" y="373" width="0.0103%" height="15" fill="rgb(219,179,14)" fg:x="58961" fg:w="11"/><text x="55.4528%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (11 samples, 0.01%)</title><rect x="55.2028%" y="357" width="0.0103%" height="15" fill="rgb(223,72,1)" fg:x="58961" fg:w="11"/><text x="55.4528%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="55.2028%" y="341" width="0.0103%" height="15" fill="rgb(238,126,10)" fg:x="58961" fg:w="11"/><text x="55.4528%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="55.2028%" y="325" width="0.0103%" height="15" fill="rgb(224,206,38)" fg:x="58961" fg:w="11"/><text x="55.4528%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::take (12 samples, 0.01%)</title><rect x="55.2271%" y="357" width="0.0112%" height="15" fill="rgb(212,201,54)" fg:x="58987" fg:w="12"/><text x="55.4771%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (12 samples, 0.01%)</title><rect x="55.2271%" y="341" width="0.0112%" height="15" fill="rgb(218,154,48)" fg:x="58987" fg:w="12"/><text x="55.4771%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="55.2131%" y="389" width="0.0281%" height="15" fill="rgb(232,93,24)" fg:x="58972" fg:w="30"/><text x="55.4631%" y="399.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (25 samples, 0.02%)</title><rect x="55.2178%" y="373" width="0.0234%" height="15" fill="rgb(245,30,21)" fg:x="58977" fg:w="25"/><text x="55.4678%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (45 samples, 0.04%)</title><rect x="55.2412%" y="389" width="0.0421%" height="15" fill="rgb(242,148,29)" fg:x="59002" fg:w="45"/><text x="55.4912%" y="399.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (45 samples, 0.04%)</title><rect x="55.2412%" y="373" width="0.0421%" height="15" fill="rgb(244,153,54)" fg:x="59002" fg:w="45"/><text x="55.4912%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (323 samples, 0.30%)</title><rect x="55.1597%" y="437" width="0.3024%" height="15" fill="rgb(252,87,22)" fg:x="58915" fg:w="323"/><text x="55.4097%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (323 samples, 0.30%)</title><rect x="55.1597%" y="421" width="0.3024%" height="15" fill="rgb(210,51,29)" fg:x="58915" fg:w="323"/><text x="55.4097%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (284 samples, 0.27%)</title><rect x="55.1962%" y="405" width="0.2659%" height="15" fill="rgb(242,136,47)" fg:x="58954" fg:w="284"/><text x="55.4462%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (191 samples, 0.18%)</title><rect x="55.2833%" y="389" width="0.1788%" height="15" fill="rgb(238,68,4)" fg:x="59047" fg:w="191"/><text x="55.5333%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (191 samples, 0.18%)</title><rect x="55.2833%" y="373" width="0.1788%" height="15" fill="rgb(242,161,30)" fg:x="59047" fg:w="191"/><text x="55.5333%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (368 samples, 0.34%)</title><rect x="55.1185%" y="581" width="0.3445%" height="15" fill="rgb(218,58,44)" fg:x="58871" fg:w="368"/><text x="55.3685%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (368 samples, 0.34%)</title><rect x="55.1185%" y="565" width="0.3445%" height="15" fill="rgb(252,125,32)" fg:x="58871" fg:w="368"/><text x="55.3685%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (366 samples, 0.34%)</title><rect x="55.1204%" y="549" width="0.3427%" height="15" fill="rgb(219,178,0)" fg:x="58873" fg:w="366"/><text x="55.3704%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (366 samples, 0.34%)</title><rect x="55.1204%" y="533" width="0.3427%" height="15" fill="rgb(213,152,7)" fg:x="58873" fg:w="366"/><text x="55.3704%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (355 samples, 0.33%)</title><rect x="55.1307%" y="517" width="0.3324%" height="15" fill="rgb(249,109,34)" fg:x="58884" fg:w="355"/><text x="55.3807%" y="527.50"></text></g><g><title>alloc::alloc::alloc (355 samples, 0.33%)</title><rect x="55.1307%" y="501" width="0.3324%" height="15" fill="rgb(232,96,21)" fg:x="58884" fg:w="355"/><text x="55.3807%" y="511.50"></text></g><g><title>__rg_alloc (355 samples, 0.33%)</title><rect x="55.1307%" y="485" width="0.3324%" height="15" fill="rgb(228,27,39)" fg:x="58884" fg:w="355"/><text x="55.3807%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (351 samples, 0.33%)</title><rect x="55.1344%" y="469" width="0.3286%" height="15" fill="rgb(211,182,52)" fg:x="58888" fg:w="351"/><text x="55.3844%" y="479.50"></text></g><g><title>rust_alloc (340 samples, 0.32%)</title><rect x="55.1447%" y="453" width="0.3183%" height="15" fill="rgb(234,178,38)" fg:x="58899" fg:w="340"/><text x="55.3947%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (766 samples, 0.72%)</title><rect x="55.1185%" y="597" width="0.7172%" height="15" fill="rgb(221,111,3)" fg:x="58871" fg:w="766"/><text x="55.3685%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (398 samples, 0.37%)</title><rect x="55.4631%" y="581" width="0.3726%" height="15" fill="rgb(228,175,21)" fg:x="59239" fg:w="398"/><text x="55.7131%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (398 samples, 0.37%)</title><rect x="55.4631%" y="565" width="0.3726%" height="15" fill="rgb(228,174,43)" fg:x="59239" fg:w="398"/><text x="55.7131%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (392 samples, 0.37%)</title><rect x="55.4687%" y="549" width="0.3670%" height="15" fill="rgb(211,191,0)" fg:x="59245" fg:w="392"/><text x="55.7187%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (810 samples, 0.76%)</title><rect x="55.0811%" y="645" width="0.7584%" height="15" fill="rgb(253,117,3)" fg:x="58831" fg:w="810"/><text x="55.3311%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (770 samples, 0.72%)</title><rect x="55.1185%" y="629" width="0.7209%" height="15" fill="rgb(241,127,19)" fg:x="58871" fg:w="770"/><text x="55.3685%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (770 samples, 0.72%)</title><rect x="55.1185%" y="613" width="0.7209%" height="15" fill="rgb(218,103,12)" fg:x="58871" fg:w="770"/><text x="55.3685%" y="623.50"></text></g><g><title>async_ffi::FfiContext::with_context (3,813 samples, 3.57%)</title><rect x="52.2770%" y="725" width="3.5700%" height="15" fill="rgb(236,214,43)" fg:x="55836" fg:w="3813"/><text x="52.5270%" y="735.50">asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (3,807 samples, 3.56%)</title><rect x="52.2826%" y="709" width="3.5643%" height="15" fill="rgb(244,144,19)" fg:x="55842" fg:w="3807"/><text x="52.5326%" y="719.50">asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,807 samples, 3.56%)</title><rect x="52.2826%" y="693" width="3.5643%" height="15" fill="rgb(246,188,10)" fg:x="55842" fg:w="3807"/><text x="52.5326%" y="703.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (3,224 samples, 3.02%)</title><rect x="52.8284%" y="677" width="3.0185%" height="15" fill="rgb(212,193,33)" fg:x="56425" fg:w="3224"/><text x="53.0784%" y="687.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (932 samples, 0.87%)</title><rect x="54.9743%" y="661" width="0.8726%" height="15" fill="rgb(241,51,29)" fg:x="58717" fg:w="932"/><text x="55.2243%" y="671.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,829 samples, 3.58%)</title><rect x="52.2760%" y="773" width="3.5849%" height="15" fill="rgb(211,58,19)" fg:x="55835" fg:w="3829"/><text x="52.5260%" y="783.50">&lt;cor..</text></g><g><title>core::ops::function::FnOnce::call_once (3,829 samples, 3.58%)</title><rect x="52.2760%" y="757" width="3.5849%" height="15" fill="rgb(229,111,26)" fg:x="55835" fg:w="3829"/><text x="52.5260%" y="767.50">core..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (3,829 samples, 3.58%)</title><rect x="52.2760%" y="741" width="3.5849%" height="15" fill="rgb(213,115,40)" fg:x="55835" fg:w="3829"/><text x="52.5260%" y="751.50">asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (15 samples, 0.01%)</title><rect x="55.8469%" y="725" width="0.0140%" height="15" fill="rgb(209,56,44)" fg:x="59649" fg:w="15"/><text x="56.0969%" y="735.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (4,403 samples, 4.12%)</title><rect x="52.0251%" y="917" width="4.1224%" height="15" fill="rgb(230,108,32)" fg:x="55567" fg:w="4403"/><text x="52.2751%" y="927.50">trem..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,403 samples, 4.12%)</title><rect x="52.0251%" y="901" width="4.1224%" height="15" fill="rgb(216,165,31)" fg:x="55567" fg:w="4403"/><text x="52.2751%" y="911.50">&lt;asy..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,403 samples, 4.12%)</title><rect x="52.0251%" y="885" width="4.1224%" height="15" fill="rgb(218,122,21)" fg:x="55567" fg:w="4403"/><text x="52.2751%" y="895.50">&lt;asy..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (4,403 samples, 4.12%)</title><rect x="52.0251%" y="869" width="4.1224%" height="15" fill="rgb(223,224,47)" fg:x="55567" fg:w="4403"/><text x="52.2751%" y="879.50">&lt;cor..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,403 samples, 4.12%)</title><rect x="52.0251%" y="853" width="4.1224%" height="15" fill="rgb(238,102,44)" fg:x="55567" fg:w="4403"/><text x="52.2751%" y="863.50">&lt;asy..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (4,403 samples, 4.12%)</title><rect x="52.0251%" y="837" width="4.1224%" height="15" fill="rgb(236,46,40)" fg:x="55567" fg:w="4403"/><text x="52.2751%" y="847.50">asyn..</text></g><g><title>std::panic::catch_unwind (4,135 samples, 3.87%)</title><rect x="52.2760%" y="821" width="3.8714%" height="15" fill="rgb(247,202,50)" fg:x="55835" fg:w="4135"/><text x="52.5260%" y="831.50">std:..</text></g><g><title>std::panicking::try (4,135 samples, 3.87%)</title><rect x="52.2760%" y="805" width="3.8714%" height="15" fill="rgb(209,99,20)" fg:x="55835" fg:w="4135"/><text x="52.5260%" y="815.50">std:..</text></g><g><title>std::panicking::try::do_call (4,135 samples, 3.87%)</title><rect x="52.2760%" y="789" width="3.8714%" height="15" fill="rgb(252,27,34)" fg:x="55835" fg:w="4135"/><text x="52.5260%" y="799.50">std:..</text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (306 samples, 0.29%)</title><rect x="55.8610%" y="773" width="0.2865%" height="15" fill="rgb(215,206,23)" fg:x="59664" fg:w="306"/><text x="56.1110%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (113 samples, 0.11%)</title><rect x="56.0417%" y="757" width="0.1058%" height="15" fill="rgb(212,135,36)" fg:x="59857" fg:w="113"/><text x="56.2917%" y="767.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (27 samples, 0.03%)</title><rect x="56.2083%" y="821" width="0.0253%" height="15" fill="rgb(240,189,1)" fg:x="60035" fg:w="27"/><text x="56.4583%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (4,517 samples, 4.23%)</title><rect x="52.0251%" y="949" width="4.2291%" height="15" fill="rgb(242,56,20)" fg:x="55567" fg:w="4517"/><text x="52.2751%" y="959.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,517 samples, 4.23%)</title><rect x="52.0251%" y="933" width="4.2291%" height="15" fill="rgb(247,132,33)" fg:x="55567" fg:w="4517"/><text x="52.2751%" y="943.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (114 samples, 0.11%)</title><rect x="56.1475%" y="917" width="0.1067%" height="15" fill="rgb(208,149,11)" fg:x="59970" fg:w="114"/><text x="56.3975%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (114 samples, 0.11%)</title><rect x="56.1475%" y="901" width="0.1067%" height="15" fill="rgb(211,33,11)" fg:x="59970" fg:w="114"/><text x="56.3975%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (92 samples, 0.09%)</title><rect x="56.1681%" y="885" width="0.0861%" height="15" fill="rgb(221,29,38)" fg:x="59992" fg:w="92"/><text x="56.4181%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (81 samples, 0.08%)</title><rect x="56.1784%" y="869" width="0.0758%" height="15" fill="rgb(206,182,49)" fg:x="60003" fg:w="81"/><text x="56.4284%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (81 samples, 0.08%)</title><rect x="56.1784%" y="853" width="0.0758%" height="15" fill="rgb(216,140,1)" fg:x="60003" fg:w="81"/><text x="56.4284%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (81 samples, 0.08%)</title><rect x="56.1784%" y="837" width="0.0758%" height="15" fill="rgb(232,57,40)" fg:x="60003" fg:w="81"/><text x="56.4284%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (22 samples, 0.02%)</title><rect x="56.2336%" y="821" width="0.0206%" height="15" fill="rgb(224,186,18)" fg:x="60062" fg:w="22"/><text x="56.4836%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="56.2954%" y="917" width="0.0131%" height="15" fill="rgb(215,121,11)" fg:x="60128" fg:w="14"/><text x="56.5454%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (221 samples, 0.21%)</title><rect x="56.3085%" y="917" width="0.2069%" height="15" fill="rgb(245,147,10)" fg:x="60142" fg:w="221"/><text x="56.5585%" y="927.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (27 samples, 0.03%)</title><rect x="56.6484%" y="901" width="0.0253%" height="15" fill="rgb(238,153,13)" fg:x="60505" fg:w="27"/><text x="56.8984%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="56.6746%" y="885" width="0.0262%" height="15" fill="rgb(233,108,0)" fg:x="60533" fg:w="28"/><text x="56.9246%" y="895.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (14 samples, 0.01%)</title><rect x="56.6877%" y="869" width="0.0131%" height="15" fill="rgb(212,157,17)" fg:x="60547" fg:w="14"/><text x="56.9377%" y="879.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (268 samples, 0.25%)</title><rect x="56.6746%" y="901" width="0.2509%" height="15" fill="rgb(225,213,38)" fg:x="60533" fg:w="268"/><text x="56.9246%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (240 samples, 0.22%)</title><rect x="56.7008%" y="885" width="0.2247%" height="15" fill="rgb(248,16,11)" fg:x="60561" fg:w="240"/><text x="56.9508%" y="895.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (229 samples, 0.21%)</title><rect x="56.7111%" y="869" width="0.2144%" height="15" fill="rgb(241,33,4)" fg:x="60572" fg:w="229"/><text x="56.9611%" y="879.50"></text></g><g><title>core::ptr::read (229 samples, 0.21%)</title><rect x="56.7111%" y="853" width="0.2144%" height="15" fill="rgb(222,26,43)" fg:x="60572" fg:w="229"/><text x="56.9611%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (227 samples, 0.21%)</title><rect x="56.7130%" y="837" width="0.2125%" height="15" fill="rgb(243,29,36)" fg:x="60574" fg:w="227"/><text x="56.9630%" y="847.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="56.9264%" y="901" width="0.0103%" height="15" fill="rgb(241,9,27)" fg:x="60802" fg:w="11"/><text x="57.1764%" y="911.50"></text></g><g><title>rust_alloc (21 samples, 0.02%)</title><rect x="56.9602%" y="597" width="0.0197%" height="15" fill="rgb(205,117,26)" fg:x="60838" fg:w="21"/><text x="57.2102%" y="607.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="57.0116%" y="469" width="0.0103%" height="15" fill="rgb(209,80,39)" fg:x="60893" fg:w="11"/><text x="57.2616%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="57.0116%" y="453" width="0.0103%" height="15" fill="rgb(239,155,6)" fg:x="60893" fg:w="11"/><text x="57.2616%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (25 samples, 0.02%)</title><rect x="57.0042%" y="517" width="0.0234%" height="15" fill="rgb(212,104,12)" fg:x="60885" fg:w="25"/><text x="57.2542%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (25 samples, 0.02%)</title><rect x="57.0042%" y="501" width="0.0234%" height="15" fill="rgb(234,204,3)" fg:x="60885" fg:w="25"/><text x="57.2542%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (23 samples, 0.02%)</title><rect x="57.0060%" y="485" width="0.0215%" height="15" fill="rgb(251,218,7)" fg:x="60887" fg:w="23"/><text x="57.2560%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (35 samples, 0.03%)</title><rect x="57.0032%" y="533" width="0.0328%" height="15" fill="rgb(221,81,32)" fg:x="60884" fg:w="35"/><text x="57.2532%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (48 samples, 0.04%)</title><rect x="56.9976%" y="549" width="0.0449%" height="15" fill="rgb(214,152,26)" fg:x="60878" fg:w="48"/><text x="57.2476%" y="559.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (31 samples, 0.03%)</title><rect x="57.0585%" y="533" width="0.0290%" height="15" fill="rgb(223,22,3)" fg:x="60943" fg:w="31"/><text x="57.3085%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (287 samples, 0.27%)</title><rect x="56.9976%" y="581" width="0.2687%" height="15" fill="rgb(207,174,7)" fg:x="60878" fg:w="287"/><text x="57.2476%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (287 samples, 0.27%)</title><rect x="56.9976%" y="565" width="0.2687%" height="15" fill="rgb(224,19,52)" fg:x="60878" fg:w="287"/><text x="57.2476%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (239 samples, 0.22%)</title><rect x="57.0425%" y="549" width="0.2238%" height="15" fill="rgb(228,24,14)" fg:x="60926" fg:w="239"/><text x="57.2925%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (191 samples, 0.18%)</title><rect x="57.0875%" y="533" width="0.1788%" height="15" fill="rgb(230,153,43)" fg:x="60974" fg:w="191"/><text x="57.3375%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (191 samples, 0.18%)</title><rect x="57.0875%" y="517" width="0.1788%" height="15" fill="rgb(231,106,12)" fg:x="60974" fg:w="191"/><text x="57.3375%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (191 samples, 0.18%)</title><rect x="57.0875%" y="501" width="0.1788%" height="15" fill="rgb(215,92,2)" fg:x="60974" fg:w="191"/><text x="57.3375%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (66 samples, 0.06%)</title><rect x="57.2672%" y="581" width="0.0618%" height="15" fill="rgb(249,143,25)" fg:x="61166" fg:w="66"/><text x="57.5172%" y="591.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (66 samples, 0.06%)</title><rect x="57.2672%" y="565" width="0.0618%" height="15" fill="rgb(252,7,35)" fg:x="61166" fg:w="66"/><text x="57.5172%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (879 samples, 0.82%)</title><rect x="56.9602%" y="629" width="0.8230%" height="15" fill="rgb(216,69,40)" fg:x="60838" fg:w="879"/><text x="57.2102%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (879 samples, 0.82%)</title><rect x="56.9602%" y="613" width="0.8230%" height="15" fill="rgb(240,36,33)" fg:x="60838" fg:w="879"/><text x="57.2102%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (848 samples, 0.79%)</title><rect x="56.9892%" y="597" width="0.7939%" height="15" fill="rgb(231,128,14)" fg:x="60869" fg:w="848"/><text x="57.2392%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (485 samples, 0.45%)</title><rect x="57.3290%" y="581" width="0.4541%" height="15" fill="rgb(245,143,14)" fg:x="61232" fg:w="485"/><text x="57.5790%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (485 samples, 0.45%)</title><rect x="57.3290%" y="565" width="0.4541%" height="15" fill="rgb(222,130,28)" fg:x="61232" fg:w="485"/><text x="57.5790%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (926 samples, 0.87%)</title><rect x="56.9367%" y="773" width="0.8670%" height="15" fill="rgb(212,10,48)" fg:x="60813" fg:w="926"/><text x="57.1867%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (926 samples, 0.87%)</title><rect x="56.9367%" y="757" width="0.8670%" height="15" fill="rgb(254,118,45)" fg:x="60813" fg:w="926"/><text x="57.1867%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (917 samples, 0.86%)</title><rect x="56.9452%" y="741" width="0.8585%" height="15" fill="rgb(228,6,45)" fg:x="60822" fg:w="917"/><text x="57.1952%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (917 samples, 0.86%)</title><rect x="56.9452%" y="725" width="0.8585%" height="15" fill="rgb(241,18,35)" fg:x="60822" fg:w="917"/><text x="57.1952%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (917 samples, 0.86%)</title><rect x="56.9452%" y="709" width="0.8585%" height="15" fill="rgb(227,214,53)" fg:x="60822" fg:w="917"/><text x="57.1952%" y="719.50"></text></g><g><title>alloc::alloc::alloc (912 samples, 0.85%)</title><rect x="56.9499%" y="693" width="0.8539%" height="15" fill="rgb(224,107,51)" fg:x="60827" fg:w="912"/><text x="57.1999%" y="703.50"></text></g><g><title>__rg_alloc (912 samples, 0.85%)</title><rect x="56.9499%" y="677" width="0.8539%" height="15" fill="rgb(248,60,28)" fg:x="60827" fg:w="912"/><text x="57.1999%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (912 samples, 0.85%)</title><rect x="56.9499%" y="661" width="0.8539%" height="15" fill="rgb(249,101,23)" fg:x="60827" fg:w="912"/><text x="57.1999%" y="671.50"></text></g><g><title>rust_alloc (911 samples, 0.85%)</title><rect x="56.9508%" y="645" width="0.8529%" height="15" fill="rgb(228,51,19)" fg:x="60828" fg:w="911"/><text x="57.2008%" y="655.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (22 samples, 0.02%)</title><rect x="57.7831%" y="629" width="0.0206%" height="15" fill="rgb(213,20,6)" fg:x="61717" fg:w="22"/><text x="58.0331%" y="639.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (968 samples, 0.91%)</title><rect x="56.9367%" y="901" width="0.9063%" height="15" fill="rgb(212,124,10)" fg:x="60813" fg:w="968"/><text x="57.1867%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (968 samples, 0.91%)</title><rect x="56.9367%" y="885" width="0.9063%" height="15" fill="rgb(248,3,40)" fg:x="60813" fg:w="968"/><text x="57.1867%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (968 samples, 0.91%)</title><rect x="56.9367%" y="869" width="0.9063%" height="15" fill="rgb(223,178,23)" fg:x="60813" fg:w="968"/><text x="57.1867%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (968 samples, 0.91%)</title><rect x="56.9367%" y="853" width="0.9063%" height="15" fill="rgb(240,132,45)" fg:x="60813" fg:w="968"/><text x="57.1867%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (968 samples, 0.91%)</title><rect x="56.9367%" y="837" width="0.9063%" height="15" fill="rgb(245,164,36)" fg:x="60813" fg:w="968"/><text x="57.1867%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (968 samples, 0.91%)</title><rect x="56.9367%" y="821" width="0.9063%" height="15" fill="rgb(231,188,53)" fg:x="60813" fg:w="968"/><text x="57.1867%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (968 samples, 0.91%)</title><rect x="56.9367%" y="805" width="0.9063%" height="15" fill="rgb(237,198,39)" fg:x="60813" fg:w="968"/><text x="57.1867%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (968 samples, 0.91%)</title><rect x="56.9367%" y="789" width="0.9063%" height="15" fill="rgb(223,120,35)" fg:x="60813" fg:w="968"/><text x="57.1867%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (42 samples, 0.04%)</title><rect x="57.8037%" y="773" width="0.0393%" height="15" fill="rgb(253,107,49)" fg:x="61739" fg:w="42"/><text x="58.0537%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (42 samples, 0.04%)</title><rect x="57.8037%" y="757" width="0.0393%" height="15" fill="rgb(216,44,31)" fg:x="61739" fg:w="42"/><text x="58.0537%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (34 samples, 0.03%)</title><rect x="57.8112%" y="741" width="0.0318%" height="15" fill="rgb(253,87,21)" fg:x="61747" fg:w="34"/><text x="58.0612%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,100 samples, 1.03%)</title><rect x="57.8430%" y="901" width="1.0299%" height="15" fill="rgb(226,18,2)" fg:x="61781" fg:w="1100"/><text x="58.0930%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (16 samples, 0.01%)</title><rect x="58.8729%" y="901" width="0.0150%" height="15" fill="rgb(216,8,46)" fg:x="62881" fg:w="16"/><text x="59.1229%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (17 samples, 0.02%)</title><rect x="58.9094%" y="901" width="0.0159%" height="15" fill="rgb(226,140,39)" fg:x="62920" fg:w="17"/><text x="59.1594%" y="911.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (14 samples, 0.01%)</title><rect x="58.9357%" y="885" width="0.0131%" height="15" fill="rgb(221,194,54)" fg:x="62948" fg:w="14"/><text x="59.1857%" y="895.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (25 samples, 0.02%)</title><rect x="58.9488%" y="853" width="0.0234%" height="15" fill="rgb(213,92,11)" fg:x="62962" fg:w="25"/><text x="59.1988%" y="863.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (395 samples, 0.37%)</title><rect x="58.9488%" y="869" width="0.3698%" height="15" fill="rgb(229,162,46)" fg:x="62962" fg:w="395"/><text x="59.1988%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (370 samples, 0.35%)</title><rect x="58.9722%" y="853" width="0.3464%" height="15" fill="rgb(214,111,36)" fg:x="62987" fg:w="370"/><text x="59.2222%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (370 samples, 0.35%)</title><rect x="58.9722%" y="837" width="0.3464%" height="15" fill="rgb(207,6,21)" fg:x="62987" fg:w="370"/><text x="59.2222%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (370 samples, 0.35%)</title><rect x="58.9722%" y="821" width="0.3464%" height="15" fill="rgb(213,127,38)" fg:x="62987" fg:w="370"/><text x="59.2222%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (370 samples, 0.35%)</title><rect x="58.9722%" y="805" width="0.3464%" height="15" fill="rgb(238,118,32)" fg:x="62987" fg:w="370"/><text x="59.2222%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (370 samples, 0.35%)</title><rect x="58.9722%" y="789" width="0.3464%" height="15" fill="rgb(240,139,39)" fg:x="62987" fg:w="370"/><text x="59.2222%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (273 samples, 0.26%)</title><rect x="59.0630%" y="773" width="0.2556%" height="15" fill="rgb(235,10,37)" fg:x="63084" fg:w="273"/><text x="59.3130%" y="783.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (421 samples, 0.39%)</title><rect x="58.9254%" y="901" width="0.3942%" height="15" fill="rgb(249,171,38)" fg:x="62937" fg:w="421"/><text x="59.1754%" y="911.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (396 samples, 0.37%)</title><rect x="58.9488%" y="885" width="0.3708%" height="15" fill="rgb(242,144,32)" fg:x="62962" fg:w="396"/><text x="59.1988%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,958 samples, 9.32%)</title><rect x="50.0084%" y="1125" width="9.3233%" height="15" fill="rgb(217,117,21)" fg:x="53413" fg:w="9958"/><text x="50.2584%" y="1135.50">async_task::r..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9,958 samples, 9.32%)</title><rect x="50.0084%" y="1109" width="9.3233%" height="15" fill="rgb(249,87,1)" fg:x="53413" fg:w="9958"/><text x="50.2584%" y="1119.50">&lt;core::pin::P..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,958 samples, 9.32%)</title><rect x="50.0084%" y="1093" width="9.3233%" height="15" fill="rgb(248,196,48)" fg:x="53413" fg:w="9958"/><text x="50.2584%" y="1103.50">&lt;core::future..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (9,958 samples, 9.32%)</title><rect x="50.0084%" y="1077" width="9.3233%" height="15" fill="rgb(251,206,33)" fg:x="53413" fg:w="9958"/><text x="50.2584%" y="1087.50">async_executo..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (9,958 samples, 9.32%)</title><rect x="50.0084%" y="1061" width="9.3233%" height="15" fill="rgb(232,141,28)" fg:x="53413" fg:w="9958"/><text x="50.2584%" y="1071.50">&lt;async_std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (9,958 samples, 9.32%)</title><rect x="50.0084%" y="1045" width="9.3233%" height="15" fill="rgb(209,167,14)" fg:x="53413" fg:w="9958"/><text x="50.2584%" y="1055.50">async_std::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,958 samples, 9.32%)</title><rect x="50.0084%" y="1029" width="9.3233%" height="15" fill="rgb(225,11,50)" fg:x="53413" fg:w="9958"/><text x="50.2584%" y="1039.50">std::thread::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,958 samples, 9.32%)</title><rect x="50.0084%" y="1013" width="9.3233%" height="15" fill="rgb(209,50,20)" fg:x="53413" fg:w="9958"/><text x="50.2584%" y="1023.50">std::thread::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (9,958 samples, 9.32%)</title><rect x="50.0084%" y="997" width="9.3233%" height="15" fill="rgb(212,17,46)" fg:x="53413" fg:w="9958"/><text x="50.2584%" y="1007.50">async_std::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,958 samples, 9.32%)</title><rect x="50.0084%" y="981" width="9.3233%" height="15" fill="rgb(216,101,39)" fg:x="53413" fg:w="9958"/><text x="50.2584%" y="991.50">&lt;async_std::t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,958 samples, 9.32%)</title><rect x="50.0084%" y="965" width="9.3233%" height="15" fill="rgb(212,228,48)" fg:x="53413" fg:w="9958"/><text x="50.2584%" y="975.50">&lt;core::future..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,287 samples, 3.08%)</title><rect x="56.2542%" y="949" width="3.0775%" height="15" fill="rgb(250,6,50)" fg:x="60084" fg:w="3287"/><text x="56.5042%" y="959.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,287 samples, 3.08%)</title><rect x="56.2542%" y="933" width="3.0775%" height="15" fill="rgb(250,160,48)" fg:x="60084" fg:w="3287"/><text x="56.5042%" y="943.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,008 samples, 2.82%)</title><rect x="56.5154%" y="917" width="2.8163%" height="15" fill="rgb(244,216,33)" fg:x="60363" fg:w="3008"/><text x="56.7654%" y="927.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (13 samples, 0.01%)</title><rect x="59.3195%" y="901" width="0.0122%" height="15" fill="rgb(207,157,5)" fg:x="63358" fg:w="13"/><text x="59.5695%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="59.3195%" y="885" width="0.0122%" height="15" fill="rgb(228,199,8)" fg:x="63358" fg:w="13"/><text x="59.5695%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="59.3195%" y="869" width="0.0122%" height="15" fill="rgb(227,80,20)" fg:x="63358" fg:w="13"/><text x="59.5695%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.01%)</title><rect x="59.3214%" y="853" width="0.0103%" height="15" fill="rgb(222,9,33)" fg:x="63360" fg:w="11"/><text x="59.5714%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (14 samples, 0.01%)</title><rect x="59.3420%" y="1125" width="0.0131%" height="15" fill="rgb(239,44,28)" fg:x="63382" fg:w="14"/><text x="59.5920%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="59.3635%" y="1125" width="0.0169%" height="15" fill="rgb(249,187,43)" fg:x="63405" fg:w="18"/><text x="59.6135%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="59.3804%" y="1125" width="0.0150%" height="15" fill="rgb(216,141,28)" fg:x="63423" fg:w="16"/><text x="59.6304%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="59.3963%" y="1125" width="0.0169%" height="15" fill="rgb(230,154,53)" fg:x="63440" fg:w="18"/><text x="59.6463%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="59.4132%" y="1125" width="0.0187%" height="15" fill="rgb(227,82,4)" fg:x="63458" fg:w="20"/><text x="59.6632%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (13 samples, 0.01%)</title><rect x="59.4319%" y="1125" width="0.0122%" height="15" fill="rgb(220,107,16)" fg:x="63478" fg:w="13"/><text x="59.6819%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (21 samples, 0.02%)</title><rect x="59.4440%" y="1125" width="0.0197%" height="15" fill="rgb(207,187,2)" fg:x="63491" fg:w="21"/><text x="59.6940%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (21 samples, 0.02%)</title><rect x="59.4440%" y="1109" width="0.0197%" height="15" fill="rgb(210,162,52)" fg:x="63491" fg:w="21"/><text x="59.6940%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (21 samples, 0.02%)</title><rect x="59.4440%" y="1093" width="0.0197%" height="15" fill="rgb(217,216,49)" fg:x="63491" fg:w="21"/><text x="59.6940%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="59.4440%" y="1077" width="0.0197%" height="15" fill="rgb(218,146,49)" fg:x="63491" fg:w="21"/><text x="59.6940%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (21 samples, 0.02%)</title><rect x="59.4440%" y="1061" width="0.0197%" height="15" fill="rgb(216,55,40)" fg:x="63491" fg:w="21"/><text x="59.6940%" y="1071.50"></text></g><g><title>event_listener::Event::notify (58 samples, 0.05%)</title><rect x="59.4712%" y="1125" width="0.0543%" height="15" fill="rgb(208,196,21)" fg:x="63520" fg:w="58"/><text x="59.7212%" y="1135.50"></text></g><g><title>event_listener::full_fence (39 samples, 0.04%)</title><rect x="59.4890%" y="1109" width="0.0365%" height="15" fill="rgb(242,117,42)" fg:x="63539" fg:w="39"/><text x="59.7390%" y="1119.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (14 samples, 0.01%)</title><rect x="59.5302%" y="1125" width="0.0131%" height="15" fill="rgb(210,11,23)" fg:x="63583" fg:w="14"/><text x="59.7802%" y="1135.50"></text></g><g><title>polling::epoll::Poller::wait (23 samples, 0.02%)</title><rect x="59.5508%" y="1125" width="0.0215%" height="15" fill="rgb(217,110,2)" fg:x="63605" fg:w="23"/><text x="59.8008%" y="1135.50"></text></g><g><title>rust_alloc (69 samples, 0.06%)</title><rect x="59.5723%" y="1125" width="0.0646%" height="15" fill="rgb(229,77,54)" fg:x="63628" fg:w="69"/><text x="59.8223%" y="1135.50"></text></g><g><title>rust_dealloc (24 samples, 0.02%)</title><rect x="59.6369%" y="1125" width="0.0225%" height="15" fill="rgb(218,53,16)" fg:x="63697" fg:w="24"/><text x="59.8869%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (22 samples, 0.02%)</title><rect x="59.6388%" y="1109" width="0.0206%" height="15" fill="rgb(215,38,13)" fg:x="63699" fg:w="22"/><text x="59.8888%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (22 samples, 0.02%)</title><rect x="59.6388%" y="1093" width="0.0206%" height="15" fill="rgb(235,42,18)" fg:x="63699" fg:w="22"/><text x="59.8888%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (22 samples, 0.02%)</title><rect x="59.6388%" y="1077" width="0.0206%" height="15" fill="rgb(219,66,54)" fg:x="63699" fg:w="22"/><text x="59.8888%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (22 samples, 0.02%)</title><rect x="59.6388%" y="1061" width="0.0206%" height="15" fill="rgb(222,205,4)" fg:x="63699" fg:w="22"/><text x="59.8888%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (22 samples, 0.02%)</title><rect x="59.6388%" y="1045" width="0.0206%" height="15" fill="rgb(227,213,46)" fg:x="63699" fg:w="22"/><text x="59.8888%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (22 samples, 0.02%)</title><rect x="59.6388%" y="1029" width="0.0206%" height="15" fill="rgb(250,145,42)" fg:x="63699" fg:w="22"/><text x="59.8888%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (22 samples, 0.02%)</title><rect x="59.6388%" y="1013" width="0.0206%" height="15" fill="rgb(219,15,2)" fg:x="63699" fg:w="22"/><text x="59.8888%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (22 samples, 0.02%)</title><rect x="59.6388%" y="997" width="0.0206%" height="15" fill="rgb(231,181,52)" fg:x="63699" fg:w="22"/><text x="59.8888%" y="1007.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (19 samples, 0.02%)</title><rect x="59.6697%" y="1125" width="0.0178%" height="15" fill="rgb(235,1,42)" fg:x="63732" fg:w="19"/><text x="59.9197%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (40 samples, 0.04%)</title><rect x="59.6987%" y="1125" width="0.0375%" height="15" fill="rgb(249,88,27)" fg:x="63763" fg:w="40"/><text x="59.9487%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (56 samples, 0.05%)</title><rect x="59.7970%" y="933" width="0.0524%" height="15" fill="rgb(235,145,16)" fg:x="63868" fg:w="56"/><text x="60.0470%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (55 samples, 0.05%)</title><rect x="59.7980%" y="917" width="0.0515%" height="15" fill="rgb(237,114,19)" fg:x="63869" fg:w="55"/><text x="60.0480%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (55 samples, 0.05%)</title><rect x="59.7980%" y="901" width="0.0515%" height="15" fill="rgb(238,51,50)" fg:x="63869" fg:w="55"/><text x="60.0480%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (44 samples, 0.04%)</title><rect x="59.8083%" y="885" width="0.0412%" height="15" fill="rgb(205,194,25)" fg:x="63880" fg:w="44"/><text x="60.0583%" y="895.50"></text></g><g><title>___pthread_mutex_lock (44 samples, 0.04%)</title><rect x="59.8083%" y="869" width="0.0412%" height="15" fill="rgb(215,203,17)" fg:x="63880" fg:w="44"/><text x="60.0583%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (97 samples, 0.09%)</title><rect x="59.7699%" y="949" width="0.0908%" height="15" fill="rgb(233,112,49)" fg:x="63839" fg:w="97"/><text x="60.0199%" y="959.50"></text></g><g><title>event_listener::List::remove (12 samples, 0.01%)</title><rect x="59.8494%" y="933" width="0.0112%" height="15" fill="rgb(241,130,26)" fg:x="63924" fg:w="12"/><text x="60.0994%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (921 samples, 0.86%)</title><rect x="59.8607%" y="949" width="0.8623%" height="15" fill="rgb(252,223,19)" fg:x="63936" fg:w="921"/><text x="60.1107%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (719 samples, 0.67%)</title><rect x="60.7557%" y="933" width="0.6732%" height="15" fill="rgb(211,95,25)" fg:x="64892" fg:w="719"/><text x="61.0057%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (395 samples, 0.37%)</title><rect x="61.5843%" y="901" width="0.3698%" height="15" fill="rgb(251,182,27)" fg:x="65777" fg:w="395"/><text x="61.8343%" y="911.50"></text></g><g><title>concurrent_queue::full_fence (18 samples, 0.02%)</title><rect x="61.9542%" y="901" width="0.0169%" height="15" fill="rgb(238,24,4)" fg:x="66172" fg:w="18"/><text x="62.2042%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (15 samples, 0.01%)</title><rect x="61.9570%" y="885" width="0.0140%" height="15" fill="rgb(224,220,25)" fg:x="66175" fg:w="15"/><text x="62.2070%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.01%)</title><rect x="61.9570%" y="869" width="0.0140%" height="15" fill="rgb(239,133,26)" fg:x="66175" fg:w="15"/><text x="62.2070%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="61.9570%" y="853" width="0.0140%" height="15" fill="rgb(211,94,48)" fg:x="66175" fg:w="15"/><text x="62.2070%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (457 samples, 0.43%)</title><rect x="61.9719%" y="901" width="0.4279%" height="15" fill="rgb(239,87,6)" fg:x="66191" fg:w="457"/><text x="62.2219%" y="911.50"></text></g><g><title>core::ptr::read (457 samples, 0.43%)</title><rect x="61.9719%" y="885" width="0.4279%" height="15" fill="rgb(227,62,0)" fg:x="66191" fg:w="457"/><text x="62.2219%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (457 samples, 0.43%)</title><rect x="61.9719%" y="869" width="0.4279%" height="15" fill="rgb(211,226,4)" fg:x="66191" fg:w="457"/><text x="62.2219%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (516 samples, 0.48%)</title><rect x="62.3998%" y="901" width="0.4831%" height="15" fill="rgb(253,38,52)" fg:x="66648" fg:w="516"/><text x="62.6498%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (516 samples, 0.48%)</title><rect x="62.3998%" y="885" width="0.4831%" height="15" fill="rgb(229,126,40)" fg:x="66648" fg:w="516"/><text x="62.6498%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (259 samples, 0.24%)</title><rect x="62.8829%" y="901" width="0.2425%" height="15" fill="rgb(229,165,44)" fg:x="67164" fg:w="259"/><text x="63.1329%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (258 samples, 0.24%)</title><rect x="62.8839%" y="885" width="0.2416%" height="15" fill="rgb(247,95,47)" fg:x="67165" fg:w="258"/><text x="63.1339%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,813 samples, 1.70%)</title><rect x="61.4289%" y="933" width="1.6974%" height="15" fill="rgb(216,140,30)" fg:x="65611" fg:w="1813"/><text x="61.6789%" y="943.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,783 samples, 1.67%)</title><rect x="61.4570%" y="917" width="1.6694%" height="15" fill="rgb(246,214,8)" fg:x="65641" fg:w="1783"/><text x="61.7070%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (35 samples, 0.03%)</title><rect x="63.1357%" y="917" width="0.0328%" height="15" fill="rgb(227,224,15)" fg:x="67434" fg:w="35"/><text x="63.3857%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (34 samples, 0.03%)</title><rect x="63.1367%" y="901" width="0.0318%" height="15" fill="rgb(233,175,4)" fg:x="67435" fg:w="34"/><text x="63.3867%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="63.1367%" y="885" width="0.0318%" height="15" fill="rgb(221,66,45)" fg:x="67435" fg:w="34"/><text x="63.3867%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (34 samples, 0.03%)</title><rect x="63.1367%" y="869" width="0.0318%" height="15" fill="rgb(221,178,18)" fg:x="67435" fg:w="34"/><text x="63.3867%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (34 samples, 0.03%)</title><rect x="63.1367%" y="853" width="0.0318%" height="15" fill="rgb(213,81,29)" fg:x="67435" fg:w="34"/><text x="63.3867%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (34 samples, 0.03%)</title><rect x="63.1367%" y="837" width="0.0318%" height="15" fill="rgb(220,89,49)" fg:x="67435" fg:w="34"/><text x="63.3867%" y="847.50"></text></g><g><title>__GI___lll_lock_wake (12 samples, 0.01%)</title><rect x="63.1573%" y="821" width="0.0112%" height="15" fill="rgb(227,60,33)" fg:x="67457" fg:w="12"/><text x="63.4073%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="63.1685%" y="917" width="0.0103%" height="15" fill="rgb(205,113,12)" fg:x="67469" fg:w="11"/><text x="63.4185%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="63.1685%" y="901" width="0.0103%" height="15" fill="rgb(211,32,1)" fg:x="67469" fg:w="11"/><text x="63.4185%" y="911.50"></text></g><g><title>event_listener::Inner::lock (81 samples, 0.08%)</title><rect x="63.1816%" y="917" width="0.0758%" height="15" fill="rgb(246,2,12)" fg:x="67483" fg:w="81"/><text x="63.4316%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (81 samples, 0.08%)</title><rect x="63.1816%" y="901" width="0.0758%" height="15" fill="rgb(243,37,27)" fg:x="67483" fg:w="81"/><text x="63.4316%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (81 samples, 0.08%)</title><rect x="63.1816%" y="885" width="0.0758%" height="15" fill="rgb(248,211,31)" fg:x="67483" fg:w="81"/><text x="63.4316%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (75 samples, 0.07%)</title><rect x="63.1872%" y="869" width="0.0702%" height="15" fill="rgb(242,146,47)" fg:x="67489" fg:w="75"/><text x="63.4372%" y="879.50"></text></g><g><title>___pthread_mutex_lock (75 samples, 0.07%)</title><rect x="63.1872%" y="853" width="0.0702%" height="15" fill="rgb(206,70,20)" fg:x="67489" fg:w="75"/><text x="63.4372%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (16 samples, 0.01%)</title><rect x="63.2790%" y="821" width="0.0150%" height="15" fill="rgb(215,10,51)" fg:x="67587" fg:w="16"/><text x="63.5290%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="63.2790%" y="805" width="0.0150%" height="15" fill="rgb(243,178,53)" fg:x="67587" fg:w="16"/><text x="63.5290%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.01%)</title><rect x="63.2790%" y="789" width="0.0150%" height="15" fill="rgb(233,221,20)" fg:x="67587" fg:w="16"/><text x="63.5290%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (16 samples, 0.01%)</title><rect x="63.2790%" y="773" width="0.0150%" height="15" fill="rgb(218,95,35)" fg:x="67587" fg:w="16"/><text x="63.5290%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (16 samples, 0.01%)</title><rect x="63.2790%" y="757" width="0.0150%" height="15" fill="rgb(229,13,5)" fg:x="67587" fg:w="16"/><text x="63.5290%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (16 samples, 0.01%)</title><rect x="63.3239%" y="741" width="0.0150%" height="15" fill="rgb(252,164,30)" fg:x="67635" fg:w="16"/><text x="63.5739%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (16 samples, 0.01%)</title><rect x="63.3239%" y="725" width="0.0150%" height="15" fill="rgb(232,68,36)" fg:x="67635" fg:w="16"/><text x="63.5739%" y="735.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (24 samples, 0.02%)</title><rect x="63.3389%" y="741" width="0.0225%" height="15" fill="rgb(219,59,54)" fg:x="67651" fg:w="24"/><text x="63.5889%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (24 samples, 0.02%)</title><rect x="63.3389%" y="725" width="0.0225%" height="15" fill="rgb(250,92,33)" fg:x="67651" fg:w="24"/><text x="63.5889%" y="735.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (24 samples, 0.02%)</title><rect x="63.3389%" y="709" width="0.0225%" height="15" fill="rgb(229,162,54)" fg:x="67651" fg:w="24"/><text x="63.5889%" y="719.50"></text></g><g><title>__GI___pthread_cond_signal (24 samples, 0.02%)</title><rect x="63.3389%" y="693" width="0.0225%" height="15" fill="rgb(244,114,52)" fg:x="67651" fg:w="24"/><text x="63.5889%" y="703.50"></text></g><g><title>parking::Unparker::unpark (72 samples, 0.07%)</title><rect x="63.3071%" y="773" width="0.0674%" height="15" fill="rgb(212,211,43)" fg:x="67617" fg:w="72"/><text x="63.5571%" y="783.50"></text></g><g><title>parking::Inner::unpark (59 samples, 0.06%)</title><rect x="63.3192%" y="757" width="0.0552%" height="15" fill="rgb(226,147,8)" fg:x="67630" fg:w="59"/><text x="63.5692%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="63.3614%" y="741" width="0.0131%" height="15" fill="rgb(226,23,13)" fg:x="67675" fg:w="14"/><text x="63.6114%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="63.3623%" y="725" width="0.0122%" height="15" fill="rgb(240,63,4)" fg:x="67676" fg:w="13"/><text x="63.6123%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="63.3632%" y="709" width="0.0112%" height="15" fill="rgb(221,1,32)" fg:x="67677" fg:w="12"/><text x="63.6132%" y="719.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="63.3632%" y="693" width="0.0112%" height="15" fill="rgb(242,117,10)" fg:x="67677" fg:w="12"/><text x="63.6132%" y="703.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (80 samples, 0.07%)</title><rect x="63.3024%" y="789" width="0.0749%" height="15" fill="rgb(249,172,44)" fg:x="67612" fg:w="80"/><text x="63.5524%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (92 samples, 0.09%)</title><rect x="63.3024%" y="821" width="0.0861%" height="15" fill="rgb(244,46,45)" fg:x="67612" fg:w="92"/><text x="63.5524%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (92 samples, 0.09%)</title><rect x="63.3024%" y="805" width="0.0861%" height="15" fill="rgb(206,43,17)" fg:x="67612" fg:w="92"/><text x="63.5524%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="63.3773%" y="789" width="0.0112%" height="15" fill="rgb(239,218,39)" fg:x="67692" fg:w="12"/><text x="63.6273%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="63.3773%" y="773" width="0.0112%" height="15" fill="rgb(208,169,54)" fg:x="67692" fg:w="12"/><text x="63.6273%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.01%)</title><rect x="63.3773%" y="757" width="0.0112%" height="15" fill="rgb(247,25,42)" fg:x="67692" fg:w="12"/><text x="63.6273%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.01%)</title><rect x="63.3773%" y="741" width="0.0112%" height="15" fill="rgb(226,23,31)" fg:x="67692" fg:w="12"/><text x="63.6273%" y="751.50"></text></g><g><title>async_executor::State::notify (149 samples, 0.14%)</title><rect x="63.2724%" y="837" width="0.1395%" height="15" fill="rgb(247,16,28)" fg:x="67580" fg:w="149"/><text x="63.5224%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.02%)</title><rect x="63.3885%" y="821" width="0.0234%" height="15" fill="rgb(231,147,38)" fg:x="67704" fg:w="25"/><text x="63.6385%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.02%)</title><rect x="63.3894%" y="805" width="0.0225%" height="15" fill="rgb(253,81,48)" fg:x="67705" fg:w="24"/><text x="63.6394%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (23 samples, 0.02%)</title><rect x="63.3904%" y="789" width="0.0215%" height="15" fill="rgb(249,222,43)" fg:x="67706" fg:w="23"/><text x="63.6404%" y="799.50"></text></g><g><title>___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="63.3904%" y="773" width="0.0215%" height="15" fill="rgb(221,3,27)" fg:x="67706" fg:w="23"/><text x="63.6404%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (43 samples, 0.04%)</title><rect x="63.4269%" y="805" width="0.0403%" height="15" fill="rgb(228,180,5)" fg:x="67745" fg:w="43"/><text x="63.6769%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (43 samples, 0.04%)</title><rect x="63.4269%" y="789" width="0.0403%" height="15" fill="rgb(227,131,42)" fg:x="67745" fg:w="43"/><text x="63.6769%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (11 samples, 0.01%)</title><rect x="63.4681%" y="805" width="0.0103%" height="15" fill="rgb(212,3,39)" fg:x="67789" fg:w="11"/><text x="63.7181%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_or (11 samples, 0.01%)</title><rect x="63.4681%" y="789" width="0.0103%" height="15" fill="rgb(226,45,5)" fg:x="67789" fg:w="11"/><text x="63.7181%" y="799.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (224 samples, 0.21%)</title><rect x="63.2724%" y="853" width="0.2097%" height="15" fill="rgb(215,167,45)" fg:x="67580" fg:w="224"/><text x="63.5224%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (75 samples, 0.07%)</title><rect x="63.4119%" y="837" width="0.0702%" height="15" fill="rgb(250,218,53)" fg:x="67729" fg:w="75"/><text x="63.6619%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (64 samples, 0.06%)</title><rect x="63.4222%" y="821" width="0.0599%" height="15" fill="rgb(207,140,0)" fg:x="67740" fg:w="64"/><text x="63.6722%" y="831.50"></text></g><g><title>event_listener::List::notify (263 samples, 0.25%)</title><rect x="63.2574%" y="917" width="0.2462%" height="15" fill="rgb(238,133,51)" fg:x="67564" fg:w="263"/><text x="63.5074%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (257 samples, 0.24%)</title><rect x="63.2631%" y="901" width="0.2406%" height="15" fill="rgb(218,203,53)" fg:x="67570" fg:w="257"/><text x="63.5131%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (257 samples, 0.24%)</title><rect x="63.2631%" y="885" width="0.2406%" height="15" fill="rgb(226,184,25)" fg:x="67570" fg:w="257"/><text x="63.5131%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (248 samples, 0.23%)</title><rect x="63.2715%" y="869" width="0.2322%" height="15" fill="rgb(231,121,21)" fg:x="67579" fg:w="248"/><text x="63.5215%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (23 samples, 0.02%)</title><rect x="63.4821%" y="853" width="0.0215%" height="15" fill="rgb(251,14,34)" fg:x="67804" fg:w="23"/><text x="63.7321%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (23 samples, 0.02%)</title><rect x="63.4821%" y="837" width="0.0215%" height="15" fill="rgb(249,193,11)" fg:x="67804" fg:w="23"/><text x="63.7321%" y="847.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3,383 samples, 3.17%)</title><rect x="60.7230%" y="949" width="3.1674%" height="15" fill="rgb(220,172,37)" fg:x="64857" fg:w="3383"/><text x="60.9730%" y="959.50">asy..</text></g><g><title>event_listener::Event::notify (816 samples, 0.76%)</title><rect x="63.1264%" y="933" width="0.7640%" height="15" fill="rgb(231,229,43)" fg:x="67424" fg:w="816"/><text x="63.3764%" y="943.50"></text></g><g><title>event_listener::full_fence (413 samples, 0.39%)</title><rect x="63.5037%" y="917" width="0.3867%" height="15" fill="rgb(250,161,5)" fg:x="67827" fg:w="413"/><text x="63.7537%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (404 samples, 0.38%)</title><rect x="63.5121%" y="901" width="0.3782%" height="15" fill="rgb(218,225,18)" fg:x="67836" fg:w="404"/><text x="63.7621%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (404 samples, 0.38%)</title><rect x="63.5121%" y="885" width="0.3782%" height="15" fill="rgb(245,45,42)" fg:x="67836" fg:w="404"/><text x="63.7621%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (20 samples, 0.02%)</title><rect x="63.8913%" y="949" width="0.0187%" height="15" fill="rgb(211,115,1)" fg:x="68241" fg:w="20"/><text x="64.1413%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (16 samples, 0.01%)</title><rect x="63.8950%" y="933" width="0.0150%" height="15" fill="rgb(248,133,52)" fg:x="68245" fg:w="16"/><text x="64.1450%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="63.9109%" y="933" width="0.0234%" height="15" fill="rgb(238,100,21)" fg:x="68262" fg:w="25"/><text x="64.1609%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="63.9109%" y="917" width="0.0234%" height="15" fill="rgb(247,144,11)" fg:x="68262" fg:w="25"/><text x="64.1609%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="63.9109%" y="901" width="0.0234%" height="15" fill="rgb(206,164,16)" fg:x="68262" fg:w="25"/><text x="64.1609%" y="911.50"></text></g><g><title>event_listener::Inner::lock (16 samples, 0.01%)</title><rect x="63.9400%" y="933" width="0.0150%" height="15" fill="rgb(222,34,3)" fg:x="68293" fg:w="16"/><text x="64.1900%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="63.9400%" y="917" width="0.0150%" height="15" fill="rgb(248,82,4)" fg:x="68293" fg:w="16"/><text x="64.1900%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="63.9409%" y="901" width="0.0140%" height="15" fill="rgb(228,81,46)" fg:x="68294" fg:w="15"/><text x="64.1909%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="63.9409%" y="885" width="0.0140%" height="15" fill="rgb(227,67,47)" fg:x="68294" fg:w="15"/><text x="64.1909%" y="895.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="63.9418%" y="869" width="0.0131%" height="15" fill="rgb(215,93,53)" fg:x="68295" fg:w="14"/><text x="64.1918%" y="879.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (4,511 samples, 4.22%)</title><rect x="59.7380%" y="1045" width="4.2235%" height="15" fill="rgb(248,194,39)" fg:x="63805" fg:w="4511"/><text x="59.9880%" y="1055.50">tremo..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,511 samples, 4.22%)</title><rect x="59.7380%" y="1029" width="4.2235%" height="15" fill="rgb(215,5,19)" fg:x="63805" fg:w="4511"/><text x="59.9880%" y="1039.50">&lt;asyn..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (4,511 samples, 4.22%)</title><rect x="59.7380%" y="1013" width="4.2235%" height="15" fill="rgb(226,215,51)" fg:x="63805" fg:w="4511"/><text x="59.9880%" y="1023.50">&lt;trem..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,511 samples, 4.22%)</title><rect x="59.7380%" y="997" width="4.2235%" height="15" fill="rgb(225,56,26)" fg:x="63805" fg:w="4511"/><text x="59.9880%" y="1007.50">&lt;asyn..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,511 samples, 4.22%)</title><rect x="59.7380%" y="981" width="4.2235%" height="15" fill="rgb(222,75,29)" fg:x="63805" fg:w="4511"/><text x="59.9880%" y="991.50">&lt;asyn..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,511 samples, 4.22%)</title><rect x="59.7380%" y="965" width="4.2235%" height="15" fill="rgb(236,139,6)" fg:x="63805" fg:w="4511"/><text x="59.9880%" y="975.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (55 samples, 0.05%)</title><rect x="63.9100%" y="949" width="0.0515%" height="15" fill="rgb(223,137,36)" fg:x="68261" fg:w="55"/><text x="64.1600%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (99 samples, 0.09%)</title><rect x="63.9765%" y="949" width="0.0927%" height="15" fill="rgb(226,99,2)" fg:x="68332" fg:w="99"/><text x="64.2265%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (311 samples, 0.29%)</title><rect x="64.3781%" y="869" width="0.2912%" height="15" fill="rgb(206,133,23)" fg:x="68761" fg:w="311"/><text x="64.6281%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (311 samples, 0.29%)</title><rect x="64.3781%" y="853" width="0.2912%" height="15" fill="rgb(243,173,15)" fg:x="68761" fg:w="311"/><text x="64.6281%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (395 samples, 0.37%)</title><rect x="64.6693%" y="869" width="0.3698%" height="15" fill="rgb(228,69,28)" fg:x="69072" fg:w="395"/><text x="64.9193%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (392 samples, 0.37%)</title><rect x="64.6721%" y="853" width="0.3670%" height="15" fill="rgb(212,51,22)" fg:x="69075" fg:w="392"/><text x="64.9221%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (907 samples, 0.85%)</title><rect x="64.1974%" y="901" width="0.8492%" height="15" fill="rgb(227,113,0)" fg:x="68568" fg:w="907"/><text x="64.4474%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (835 samples, 0.78%)</title><rect x="64.2648%" y="885" width="0.7818%" height="15" fill="rgb(252,84,27)" fg:x="68640" fg:w="835"/><text x="64.5148%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (75 samples, 0.07%)</title><rect x="65.0672%" y="885" width="0.0702%" height="15" fill="rgb(223,145,39)" fg:x="69497" fg:w="75"/><text x="65.3172%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (73 samples, 0.07%)</title><rect x="65.0691%" y="869" width="0.0683%" height="15" fill="rgb(239,219,30)" fg:x="69499" fg:w="73"/><text x="65.3191%" y="879.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.07%)</title><rect x="65.0691%" y="853" width="0.0683%" height="15" fill="rgb(224,196,39)" fg:x="69499" fg:w="73"/><text x="65.3191%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (73 samples, 0.07%)</title><rect x="65.0691%" y="837" width="0.0683%" height="15" fill="rgb(205,35,43)" fg:x="69499" fg:w="73"/><text x="65.3191%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (71 samples, 0.07%)</title><rect x="65.0710%" y="821" width="0.0665%" height="15" fill="rgb(228,201,21)" fg:x="69501" fg:w="71"/><text x="65.3210%" y="831.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (71 samples, 0.07%)</title><rect x="65.0710%" y="805" width="0.0665%" height="15" fill="rgb(237,118,16)" fg:x="69501" fg:w="71"/><text x="65.3210%" y="815.50"></text></g><g><title>__GI___lll_lock_wake (18 samples, 0.02%)</title><rect x="65.1206%" y="789" width="0.0169%" height="15" fill="rgb(241,17,19)" fg:x="69554" fg:w="18"/><text x="65.3706%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="65.1374%" y="885" width="0.0197%" height="15" fill="rgb(214,10,25)" fg:x="69572" fg:w="21"/><text x="65.3874%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="65.1374%" y="869" width="0.0197%" height="15" fill="rgb(238,37,29)" fg:x="69572" fg:w="21"/><text x="65.3874%" y="879.50"></text></g><g><title>event_listener::Inner::lock (122 samples, 0.11%)</title><rect x="65.1618%" y="885" width="0.1142%" height="15" fill="rgb(253,83,25)" fg:x="69598" fg:w="122"/><text x="65.4118%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (120 samples, 0.11%)</title><rect x="65.1637%" y="869" width="0.1124%" height="15" fill="rgb(234,192,12)" fg:x="69600" fg:w="120"/><text x="65.4137%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (117 samples, 0.11%)</title><rect x="65.1665%" y="853" width="0.1095%" height="15" fill="rgb(241,216,45)" fg:x="69603" fg:w="117"/><text x="65.4165%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (110 samples, 0.10%)</title><rect x="65.1730%" y="837" width="0.1030%" height="15" fill="rgb(242,22,33)" fg:x="69610" fg:w="110"/><text x="65.4230%" y="847.50"></text></g><g><title>___pthread_mutex_lock (110 samples, 0.10%)</title><rect x="65.1730%" y="821" width="0.1030%" height="15" fill="rgb(231,105,49)" fg:x="69610" fg:w="110"/><text x="65.4230%" y="831.50"></text></g><g><title>__GI___lll_lock_wait (14 samples, 0.01%)</title><rect x="65.2629%" y="805" width="0.0131%" height="15" fill="rgb(218,204,15)" fg:x="69706" fg:w="14"/><text x="65.5129%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (12 samples, 0.01%)</title><rect x="65.2798%" y="837" width="0.0112%" height="15" fill="rgb(235,138,41)" fg:x="69724" fg:w="12"/><text x="65.5298%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.01%)</title><rect x="65.2798%" y="821" width="0.0112%" height="15" fill="rgb(246,0,9)" fg:x="69724" fg:w="12"/><text x="65.5298%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.01%)</title><rect x="65.2798%" y="805" width="0.0112%" height="15" fill="rgb(210,74,4)" fg:x="69724" fg:w="12"/><text x="65.5298%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (45 samples, 0.04%)</title><rect x="65.3041%" y="789" width="0.0421%" height="15" fill="rgb(250,60,41)" fg:x="69750" fg:w="45"/><text x="65.5541%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="65.3041%" y="773" width="0.0421%" height="15" fill="rgb(220,115,12)" fg:x="69750" fg:w="45"/><text x="65.5541%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (45 samples, 0.04%)</title><rect x="65.3041%" y="757" width="0.0421%" height="15" fill="rgb(237,100,13)" fg:x="69750" fg:w="45"/><text x="65.5541%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (45 samples, 0.04%)</title><rect x="65.3041%" y="741" width="0.0421%" height="15" fill="rgb(213,55,26)" fg:x="69750" fg:w="45"/><text x="65.5541%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (45 samples, 0.04%)</title><rect x="65.3041%" y="725" width="0.0421%" height="15" fill="rgb(216,17,4)" fg:x="69750" fg:w="45"/><text x="65.5541%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (20 samples, 0.02%)</title><rect x="65.3462%" y="789" width="0.0187%" height="15" fill="rgb(220,153,47)" fg:x="69795" fg:w="20"/><text x="65.5962%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.02%)</title><rect x="65.3462%" y="773" width="0.0187%" height="15" fill="rgb(215,131,9)" fg:x="69795" fg:w="20"/><text x="65.5962%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (31 samples, 0.03%)</title><rect x="65.4005%" y="709" width="0.0290%" height="15" fill="rgb(233,46,42)" fg:x="69853" fg:w="31"/><text x="65.6505%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (31 samples, 0.03%)</title><rect x="65.4005%" y="693" width="0.0290%" height="15" fill="rgb(226,86,7)" fg:x="69853" fg:w="31"/><text x="65.6505%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (41 samples, 0.04%)</title><rect x="65.4296%" y="709" width="0.0384%" height="15" fill="rgb(239,226,21)" fg:x="69884" fg:w="41"/><text x="65.6796%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (41 samples, 0.04%)</title><rect x="65.4296%" y="693" width="0.0384%" height="15" fill="rgb(244,137,22)" fg:x="69884" fg:w="41"/><text x="65.6796%" y="703.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (41 samples, 0.04%)</title><rect x="65.4296%" y="677" width="0.0384%" height="15" fill="rgb(211,139,35)" fg:x="69884" fg:w="41"/><text x="65.6796%" y="687.50"></text></g><g><title>__GI___pthread_cond_signal (41 samples, 0.04%)</title><rect x="65.4296%" y="661" width="0.0384%" height="15" fill="rgb(214,62,50)" fg:x="69884" fg:w="41"/><text x="65.6796%" y="671.50"></text></g><g><title>parking::Unparker::unpark (126 samples, 0.12%)</title><rect x="65.3809%" y="741" width="0.1180%" height="15" fill="rgb(212,113,44)" fg:x="69832" fg:w="126"/><text x="65.6309%" y="751.50"></text></g><g><title>parking::Inner::unpark (115 samples, 0.11%)</title><rect x="65.3912%" y="725" width="0.1077%" height="15" fill="rgb(226,150,43)" fg:x="69843" fg:w="115"/><text x="65.6412%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (33 samples, 0.03%)</title><rect x="65.4679%" y="709" width="0.0309%" height="15" fill="rgb(250,71,37)" fg:x="69925" fg:w="33"/><text x="65.7179%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (33 samples, 0.03%)</title><rect x="65.4679%" y="693" width="0.0309%" height="15" fill="rgb(219,76,19)" fg:x="69925" fg:w="33"/><text x="65.7179%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (33 samples, 0.03%)</title><rect x="65.4679%" y="677" width="0.0309%" height="15" fill="rgb(250,39,11)" fg:x="69925" fg:w="33"/><text x="65.7179%" y="687.50"></text></g><g><title>___pthread_mutex_lock (33 samples, 0.03%)</title><rect x="65.4679%" y="661" width="0.0309%" height="15" fill="rgb(230,64,31)" fg:x="69925" fg:w="33"/><text x="65.7179%" y="671.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (144 samples, 0.13%)</title><rect x="65.3650%" y="757" width="0.1348%" height="15" fill="rgb(208,222,23)" fg:x="69815" fg:w="144"/><text x="65.6150%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (173 samples, 0.16%)</title><rect x="65.3650%" y="789" width="0.1620%" height="15" fill="rgb(227,125,18)" fg:x="69815" fg:w="173"/><text x="65.6150%" y="799.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (173 samples, 0.16%)</title><rect x="65.3650%" y="773" width="0.1620%" height="15" fill="rgb(234,210,9)" fg:x="69815" fg:w="173"/><text x="65.6150%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (29 samples, 0.03%)</title><rect x="65.4998%" y="757" width="0.0272%" height="15" fill="rgb(217,127,24)" fg:x="69959" fg:w="29"/><text x="65.7498%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="65.4998%" y="741" width="0.0272%" height="15" fill="rgb(239,141,48)" fg:x="69959" fg:w="29"/><text x="65.7498%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.03%)</title><rect x="65.5016%" y="725" width="0.0253%" height="15" fill="rgb(227,109,8)" fg:x="69961" fg:w="27"/><text x="65.7516%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.03%)</title><rect x="65.5016%" y="709" width="0.0253%" height="15" fill="rgb(235,184,23)" fg:x="69961" fg:w="27"/><text x="65.7516%" y="719.50"></text></g><g><title>async_executor::State::notify (307 samples, 0.29%)</title><rect x="65.2938%" y="805" width="0.2874%" height="15" fill="rgb(227,226,48)" fg:x="69739" fg:w="307"/><text x="65.5438%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (58 samples, 0.05%)</title><rect x="65.5269%" y="789" width="0.0543%" height="15" fill="rgb(206,150,11)" fg:x="69988" fg:w="58"/><text x="65.7769%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (57 samples, 0.05%)</title><rect x="65.5279%" y="773" width="0.0534%" height="15" fill="rgb(254,2,33)" fg:x="69989" fg:w="57"/><text x="65.7779%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (54 samples, 0.05%)</title><rect x="65.5307%" y="757" width="0.0506%" height="15" fill="rgb(243,160,20)" fg:x="69992" fg:w="54"/><text x="65.7807%" y="767.50"></text></g><g><title>___pthread_mutex_lock (54 samples, 0.05%)</title><rect x="65.5307%" y="741" width="0.0506%" height="15" fill="rgb(218,208,30)" fg:x="69992" fg:w="54"/><text x="65.7807%" y="751.50"></text></g><g><title>__GI___lll_lock_wait (19 samples, 0.02%)</title><rect x="65.5634%" y="725" width="0.0178%" height="15" fill="rgb(224,120,49)" fg:x="70027" fg:w="19"/><text x="65.8134%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (31 samples, 0.03%)</title><rect x="65.6009%" y="773" width="0.0290%" height="15" fill="rgb(246,12,2)" fg:x="70067" fg:w="31"/><text x="65.8509%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (31 samples, 0.03%)</title><rect x="65.6009%" y="757" width="0.0290%" height="15" fill="rgb(236,117,3)" fg:x="70067" fg:w="31"/><text x="65.8509%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (41 samples, 0.04%)</title><rect x="65.6299%" y="773" width="0.0384%" height="15" fill="rgb(216,128,52)" fg:x="70098" fg:w="41"/><text x="65.8799%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_or (41 samples, 0.04%)</title><rect x="65.6299%" y="757" width="0.0384%" height="15" fill="rgb(246,145,19)" fg:x="70098" fg:w="41"/><text x="65.8799%" y="767.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (403 samples, 0.38%)</title><rect x="65.2938%" y="821" width="0.3773%" height="15" fill="rgb(222,11,46)" fg:x="69739" fg:w="403"/><text x="65.5438%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (96 samples, 0.09%)</title><rect x="65.5812%" y="805" width="0.0899%" height="15" fill="rgb(245,82,36)" fg:x="70046" fg:w="96"/><text x="65.8312%" y="815.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (94 samples, 0.09%)</title><rect x="65.5831%" y="789" width="0.0880%" height="15" fill="rgb(250,73,51)" fg:x="70048" fg:w="94"/><text x="65.8331%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (38 samples, 0.04%)</title><rect x="65.6711%" y="821" width="0.0356%" height="15" fill="rgb(221,189,23)" fg:x="70142" fg:w="38"/><text x="65.9211%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (38 samples, 0.04%)</title><rect x="65.6711%" y="805" width="0.0356%" height="15" fill="rgb(210,33,7)" fg:x="70142" fg:w="38"/><text x="65.9211%" y="815.50"></text></g><g><title>event_listener::List::notify (467 samples, 0.44%)</title><rect x="65.2760%" y="885" width="0.4372%" height="15" fill="rgb(210,107,22)" fg:x="69720" fg:w="467"/><text x="65.5260%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (463 samples, 0.43%)</title><rect x="65.2798%" y="869" width="0.4335%" height="15" fill="rgb(222,116,37)" fg:x="69724" fg:w="463"/><text x="65.5298%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (463 samples, 0.43%)</title><rect x="65.2798%" y="853" width="0.4335%" height="15" fill="rgb(254,17,48)" fg:x="69724" fg:w="463"/><text x="65.5298%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (451 samples, 0.42%)</title><rect x="65.2910%" y="837" width="0.4223%" height="15" fill="rgb(224,36,32)" fg:x="69736" fg:w="451"/><text x="65.5410%" y="847.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,294 samples, 2.15%)</title><rect x="64.1825%" y="917" width="2.1478%" height="15" fill="rgb(232,90,46)" fg:x="68552" fg:w="2294"/><text x="64.4325%" y="927.50">a..</text></g><g><title>event_listener::Event::notify (1,371 samples, 1.28%)</title><rect x="65.0466%" y="901" width="1.2836%" height="15" fill="rgb(241,66,40)" fg:x="69475" fg:w="1371"/><text x="65.2966%" y="911.50"></text></g><g><title>event_listener::full_fence (659 samples, 0.62%)</title><rect x="65.7132%" y="885" width="0.6170%" height="15" fill="rgb(249,184,29)" fg:x="70187" fg:w="659"/><text x="65.9632%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (651 samples, 0.61%)</title><rect x="65.7207%" y="869" width="0.6095%" height="15" fill="rgb(231,181,1)" fg:x="70195" fg:w="651"/><text x="65.9707%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (651 samples, 0.61%)</title><rect x="65.7207%" y="853" width="0.6095%" height="15" fill="rgb(224,94,2)" fg:x="70195" fg:w="651"/><text x="65.9707%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (29 samples, 0.03%)</title><rect x="66.3302%" y="917" width="0.0272%" height="15" fill="rgb(229,170,15)" fg:x="70846" fg:w="29"/><text x="66.5802%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="66.3668%" y="901" width="0.0112%" height="15" fill="rgb(240,127,35)" fg:x="70885" fg:w="12"/><text x="66.6168%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.01%)</title><rect x="66.3668%" y="885" width="0.0112%" height="15" fill="rgb(248,196,34)" fg:x="70885" fg:w="12"/><text x="66.6168%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.01%)</title><rect x="66.3668%" y="869" width="0.0112%" height="15" fill="rgb(236,137,7)" fg:x="70885" fg:w="12"/><text x="66.6168%" y="879.50"></text></g><g><title>event_listener::Event::listen (17 samples, 0.02%)</title><rect x="66.3668%" y="917" width="0.0159%" height="15" fill="rgb(235,127,16)" fg:x="70885" fg:w="17"/><text x="66.6168%" y="927.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,608 samples, 2.44%)</title><rect x="64.1347%" y="933" width="2.4418%" height="15" fill="rgb(250,192,54)" fg:x="68501" fg:w="2608"/><text x="64.3847%" y="943.50">&lt;a..</text></g><g><title>event_listener::Event::notify (207 samples, 0.19%)</title><rect x="66.3827%" y="917" width="0.1938%" height="15" fill="rgb(218,98,20)" fg:x="70902" fg:w="207"/><text x="66.6327%" y="927.50"></text></g><g><title>event_listener::full_fence (190 samples, 0.18%)</title><rect x="66.3986%" y="901" width="0.1779%" height="15" fill="rgb(230,176,47)" fg:x="70919" fg:w="190"/><text x="66.6486%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (185 samples, 0.17%)</title><rect x="66.4033%" y="885" width="0.1732%" height="15" fill="rgb(244,2,33)" fg:x="70924" fg:w="185"/><text x="66.6533%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (185 samples, 0.17%)</title><rect x="66.4033%" y="869" width="0.1732%" height="15" fill="rgb(231,100,17)" fg:x="70924" fg:w="185"/><text x="66.6533%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,816 samples, 2.64%)</title><rect x="63.9615%" y="997" width="2.6365%" height="15" fill="rgb(245,23,12)" fg:x="68316" fg:w="2816"/><text x="64.2115%" y="1007.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (2,816 samples, 2.64%)</title><rect x="63.9615%" y="981" width="2.6365%" height="15" fill="rgb(249,55,22)" fg:x="68316" fg:w="2816"/><text x="64.2115%" y="991.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,816 samples, 2.64%)</title><rect x="63.9615%" y="965" width="2.6365%" height="15" fill="rgb(207,134,9)" fg:x="68316" fg:w="2816"/><text x="64.2115%" y="975.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,701 samples, 2.53%)</title><rect x="64.0692%" y="949" width="2.5288%" height="15" fill="rgb(218,134,0)" fg:x="68431" fg:w="2701"/><text x="64.3192%" y="959.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="66.5765%" y="933" width="0.0215%" height="15" fill="rgb(213,212,33)" fg:x="71109" fg:w="23"/><text x="66.8265%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (14 samples, 0.01%)</title><rect x="66.5849%" y="917" width="0.0131%" height="15" fill="rgb(252,106,18)" fg:x="71118" fg:w="14"/><text x="66.8349%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (14 samples, 0.01%)</title><rect x="66.5849%" y="901" width="0.0131%" height="15" fill="rgb(208,126,42)" fg:x="71118" fg:w="14"/><text x="66.8349%" y="911.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="67.3292%" y="981" width="0.0206%" height="15" fill="rgb(246,175,29)" fg:x="71913" fg:w="22"/><text x="67.5792%" y="991.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="67.3498%" y="981" width="0.0169%" height="15" fill="rgb(215,13,50)" fg:x="71935" fg:w="18"/><text x="67.5998%" y="991.50"></text></g><g><title>aligned_size (18 samples, 0.02%)</title><rect x="67.9556%" y="709" width="0.0169%" height="15" fill="rgb(216,172,15)" fg:x="72582" fg:w="18"/><text x="68.2056%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (33 samples, 0.03%)</title><rect x="67.9921%" y="661" width="0.0309%" height="15" fill="rgb(212,103,13)" fg:x="72621" fg:w="33"/><text x="68.2421%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (33 samples, 0.03%)</title><rect x="67.9921%" y="645" width="0.0309%" height="15" fill="rgb(231,171,36)" fg:x="72621" fg:w="33"/><text x="68.2421%" y="655.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (29 samples, 0.03%)</title><rect x="67.9958%" y="629" width="0.0272%" height="15" fill="rgb(250,123,20)" fg:x="72625" fg:w="29"/><text x="68.2458%" y="639.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (21 samples, 0.02%)</title><rect x="68.0033%" y="613" width="0.0197%" height="15" fill="rgb(212,53,50)" fg:x="72633" fg:w="21"/><text x="68.2533%" y="623.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (21 samples, 0.02%)</title><rect x="68.0033%" y="597" width="0.0197%" height="15" fill="rgb(243,54,12)" fg:x="72633" fg:w="21"/><text x="68.2533%" y="607.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (21 samples, 0.02%)</title><rect x="68.0033%" y="581" width="0.0197%" height="15" fill="rgb(234,101,34)" fg:x="72633" fg:w="21"/><text x="68.2533%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (218 samples, 0.20%)</title><rect x="67.9734%" y="709" width="0.2041%" height="15" fill="rgb(254,67,22)" fg:x="72601" fg:w="218"/><text x="68.2234%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (216 samples, 0.20%)</title><rect x="67.9752%" y="693" width="0.2022%" height="15" fill="rgb(250,35,47)" fg:x="72603" fg:w="216"/><text x="68.2252%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (203 samples, 0.19%)</title><rect x="67.9874%" y="677" width="0.1901%" height="15" fill="rgb(226,126,38)" fg:x="72616" fg:w="203"/><text x="68.2374%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::take (153 samples, 0.14%)</title><rect x="68.0342%" y="661" width="0.1432%" height="15" fill="rgb(216,138,53)" fg:x="72666" fg:w="153"/><text x="68.2842%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (153 samples, 0.14%)</title><rect x="68.0342%" y="645" width="0.1432%" height="15" fill="rgb(246,199,43)" fg:x="72666" fg:w="153"/><text x="68.2842%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (269 samples, 0.25%)</title><rect x="67.9266%" y="853" width="0.2519%" height="15" fill="rgb(232,125,11)" fg:x="72551" fg:w="269"/><text x="68.1766%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (269 samples, 0.25%)</title><rect x="67.9266%" y="837" width="0.2519%" height="15" fill="rgb(218,219,45)" fg:x="72551" fg:w="269"/><text x="68.1766%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (269 samples, 0.25%)</title><rect x="67.9266%" y="821" width="0.2519%" height="15" fill="rgb(216,102,54)" fg:x="72551" fg:w="269"/><text x="68.1766%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (269 samples, 0.25%)</title><rect x="67.9266%" y="805" width="0.2519%" height="15" fill="rgb(250,228,7)" fg:x="72551" fg:w="269"/><text x="68.1766%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (269 samples, 0.25%)</title><rect x="67.9266%" y="789" width="0.2519%" height="15" fill="rgb(226,125,25)" fg:x="72551" fg:w="269"/><text x="68.1766%" y="799.50"></text></g><g><title>alloc::alloc::alloc (254 samples, 0.24%)</title><rect x="67.9406%" y="773" width="0.2378%" height="15" fill="rgb(224,165,27)" fg:x="72566" fg:w="254"/><text x="68.1906%" y="783.50"></text></g><g><title>__rg_alloc (254 samples, 0.24%)</title><rect x="67.9406%" y="757" width="0.2378%" height="15" fill="rgb(233,86,3)" fg:x="72566" fg:w="254"/><text x="68.1906%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (254 samples, 0.24%)</title><rect x="67.9406%" y="741" width="0.2378%" height="15" fill="rgb(228,116,20)" fg:x="72566" fg:w="254"/><text x="68.1906%" y="751.50"></text></g><g><title>rust_alloc (238 samples, 0.22%)</title><rect x="67.9556%" y="725" width="0.2228%" height="15" fill="rgb(209,192,17)" fg:x="72582" fg:w="238"/><text x="68.2056%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (355 samples, 0.33%)</title><rect x="67.9238%" y="949" width="0.3324%" height="15" fill="rgb(224,88,34)" fg:x="72548" fg:w="355"/><text x="68.1738%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (352 samples, 0.33%)</title><rect x="67.9266%" y="933" width="0.3296%" height="15" fill="rgb(233,38,6)" fg:x="72551" fg:w="352"/><text x="68.1766%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (352 samples, 0.33%)</title><rect x="67.9266%" y="917" width="0.3296%" height="15" fill="rgb(212,59,30)" fg:x="72551" fg:w="352"/><text x="68.1766%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (352 samples, 0.33%)</title><rect x="67.9266%" y="901" width="0.3296%" height="15" fill="rgb(213,80,3)" fg:x="72551" fg:w="352"/><text x="68.1766%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (352 samples, 0.33%)</title><rect x="67.9266%" y="885" width="0.3296%" height="15" fill="rgb(251,178,7)" fg:x="72551" fg:w="352"/><text x="68.1766%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (352 samples, 0.33%)</title><rect x="67.9266%" y="869" width="0.3296%" height="15" fill="rgb(213,154,26)" fg:x="72551" fg:w="352"/><text x="68.1766%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (83 samples, 0.08%)</title><rect x="68.1784%" y="853" width="0.0777%" height="15" fill="rgb(238,165,49)" fg:x="72820" fg:w="83"/><text x="68.4284%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (83 samples, 0.08%)</title><rect x="68.1784%" y="837" width="0.0777%" height="15" fill="rgb(248,91,46)" fg:x="72820" fg:w="83"/><text x="68.4284%" y="847.50"></text></g><g><title>__memcpy_avx_unaligned_erms (65 samples, 0.06%)</title><rect x="68.1953%" y="821" width="0.0609%" height="15" fill="rgb(244,21,52)" fg:x="72838" fg:w="65"/><text x="68.4453%" y="831.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (388 samples, 0.36%)</title><rect x="67.8985%" y="965" width="0.3633%" height="15" fill="rgb(247,122,20)" fg:x="72521" fg:w="388"/><text x="68.1485%" y="975.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.02%)</title><rect x="68.2739%" y="949" width="0.0187%" height="15" fill="rgb(218,27,9)" fg:x="72922" fg:w="20"/><text x="68.5239%" y="959.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (12 samples, 0.01%)</title><rect x="68.2814%" y="933" width="0.0112%" height="15" fill="rgb(246,7,6)" fg:x="72930" fg:w="12"/><text x="68.5314%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (51 samples, 0.05%)</title><rect x="68.3357%" y="565" width="0.0477%" height="15" fill="rgb(227,135,54)" fg:x="72988" fg:w="51"/><text x="68.5857%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (51 samples, 0.05%)</title><rect x="68.3357%" y="549" width="0.0477%" height="15" fill="rgb(247,14,11)" fg:x="72988" fg:w="51"/><text x="68.5857%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (42 samples, 0.04%)</title><rect x="68.3441%" y="533" width="0.0393%" height="15" fill="rgb(206,149,34)" fg:x="72997" fg:w="42"/><text x="68.5941%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (30 samples, 0.03%)</title><rect x="68.3554%" y="517" width="0.0281%" height="15" fill="rgb(227,228,4)" fg:x="73009" fg:w="30"/><text x="68.6054%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="68.3554%" y="501" width="0.0281%" height="15" fill="rgb(238,218,28)" fg:x="73009" fg:w="30"/><text x="68.6054%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="68.3554%" y="485" width="0.0281%" height="15" fill="rgb(252,86,40)" fg:x="73009" fg:w="30"/><text x="68.6054%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="68.3863%" y="565" width="0.0159%" height="15" fill="rgb(251,225,11)" fg:x="73042" fg:w="17"/><text x="68.6363%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="68.3863%" y="549" width="0.0159%" height="15" fill="rgb(206,46,49)" fg:x="73042" fg:w="17"/><text x="68.6363%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="68.3863%" y="533" width="0.0159%" height="15" fill="rgb(245,128,24)" fg:x="73042" fg:w="17"/><text x="68.6363%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="68.3863%" y="517" width="0.0159%" height="15" fill="rgb(219,177,34)" fg:x="73042" fg:w="17"/><text x="68.6363%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (16 samples, 0.01%)</title><rect x="68.3872%" y="501" width="0.0150%" height="15" fill="rgb(218,60,48)" fg:x="73043" fg:w="16"/><text x="68.6372%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (179 samples, 0.17%)</title><rect x="68.3273%" y="613" width="0.1676%" height="15" fill="rgb(221,11,5)" fg:x="72979" fg:w="179"/><text x="68.5773%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (179 samples, 0.17%)</title><rect x="68.3273%" y="597" width="0.1676%" height="15" fill="rgb(220,148,13)" fg:x="72979" fg:w="179"/><text x="68.5773%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (172 samples, 0.16%)</title><rect x="68.3338%" y="581" width="0.1610%" height="15" fill="rgb(210,16,3)" fg:x="72986" fg:w="172"/><text x="68.5838%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (99 samples, 0.09%)</title><rect x="68.4022%" y="565" width="0.0927%" height="15" fill="rgb(236,80,2)" fg:x="73059" fg:w="99"/><text x="68.6522%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (99 samples, 0.09%)</title><rect x="68.4022%" y="549" width="0.0927%" height="15" fill="rgb(239,129,19)" fg:x="73059" fg:w="99"/><text x="68.6522%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (223 samples, 0.21%)</title><rect x="68.2954%" y="757" width="0.2088%" height="15" fill="rgb(220,106,35)" fg:x="72945" fg:w="223"/><text x="68.5454%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (223 samples, 0.21%)</title><rect x="68.2954%" y="741" width="0.2088%" height="15" fill="rgb(252,139,45)" fg:x="72945" fg:w="223"/><text x="68.5454%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (215 samples, 0.20%)</title><rect x="68.3029%" y="725" width="0.2013%" height="15" fill="rgb(229,8,36)" fg:x="72953" fg:w="215"/><text x="68.5529%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (215 samples, 0.20%)</title><rect x="68.3029%" y="709" width="0.2013%" height="15" fill="rgb(230,126,33)" fg:x="72953" fg:w="215"/><text x="68.5529%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (215 samples, 0.20%)</title><rect x="68.3029%" y="693" width="0.2013%" height="15" fill="rgb(239,140,21)" fg:x="72953" fg:w="215"/><text x="68.5529%" y="703.50"></text></g><g><title>alloc::alloc::alloc (212 samples, 0.20%)</title><rect x="68.3057%" y="677" width="0.1985%" height="15" fill="rgb(254,104,9)" fg:x="72956" fg:w="212"/><text x="68.5557%" y="687.50"></text></g><g><title>__rg_alloc (212 samples, 0.20%)</title><rect x="68.3057%" y="661" width="0.1985%" height="15" fill="rgb(239,52,14)" fg:x="72956" fg:w="212"/><text x="68.5557%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (212 samples, 0.20%)</title><rect x="68.3057%" y="645" width="0.1985%" height="15" fill="rgb(208,227,44)" fg:x="72956" fg:w="212"/><text x="68.5557%" y="655.50"></text></g><g><title>rust_alloc (196 samples, 0.18%)</title><rect x="68.3207%" y="629" width="0.1835%" height="15" fill="rgb(246,18,19)" fg:x="72972" fg:w="196"/><text x="68.5707%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (271 samples, 0.25%)</title><rect x="68.2926%" y="869" width="0.2537%" height="15" fill="rgb(235,228,25)" fg:x="72942" fg:w="271"/><text x="68.5426%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (271 samples, 0.25%)</title><rect x="68.2926%" y="853" width="0.2537%" height="15" fill="rgb(240,156,20)" fg:x="72942" fg:w="271"/><text x="68.5426%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (268 samples, 0.25%)</title><rect x="68.2954%" y="837" width="0.2509%" height="15" fill="rgb(224,8,20)" fg:x="72945" fg:w="268"/><text x="68.5454%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (268 samples, 0.25%)</title><rect x="68.2954%" y="821" width="0.2509%" height="15" fill="rgb(214,12,52)" fg:x="72945" fg:w="268"/><text x="68.5454%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (268 samples, 0.25%)</title><rect x="68.2954%" y="805" width="0.2509%" height="15" fill="rgb(211,220,47)" fg:x="72945" fg:w="268"/><text x="68.5454%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (268 samples, 0.25%)</title><rect x="68.2954%" y="789" width="0.2509%" height="15" fill="rgb(250,173,5)" fg:x="72945" fg:w="268"/><text x="68.5454%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (268 samples, 0.25%)</title><rect x="68.2954%" y="773" width="0.2509%" height="15" fill="rgb(250,125,52)" fg:x="72945" fg:w="268"/><text x="68.5454%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (45 samples, 0.04%)</title><rect x="68.5042%" y="757" width="0.0421%" height="15" fill="rgb(209,133,18)" fg:x="73168" fg:w="45"/><text x="68.7542%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (43 samples, 0.04%)</title><rect x="68.5061%" y="741" width="0.0403%" height="15" fill="rgb(216,173,22)" fg:x="73170" fg:w="43"/><text x="68.7561%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (32 samples, 0.03%)</title><rect x="68.5164%" y="725" width="0.0300%" height="15" fill="rgb(205,3,22)" fg:x="73181" fg:w="32"/><text x="68.7664%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="68.5866%" y="677" width="0.0272%" height="15" fill="rgb(248,22,20)" fg:x="73256" fg:w="29"/><text x="68.8366%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (29 samples, 0.03%)</title><rect x="68.5866%" y="661" width="0.0272%" height="15" fill="rgb(233,6,29)" fg:x="73256" fg:w="29"/><text x="68.8366%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (24 samples, 0.02%)</title><rect x="68.5913%" y="645" width="0.0225%" height="15" fill="rgb(240,22,54)" fg:x="73261" fg:w="24"/><text x="68.8413%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (22 samples, 0.02%)</title><rect x="68.5932%" y="629" width="0.0206%" height="15" fill="rgb(231,133,32)" fg:x="73263" fg:w="22"/><text x="68.8432%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (22 samples, 0.02%)</title><rect x="68.5932%" y="613" width="0.0206%" height="15" fill="rgb(248,193,4)" fg:x="73263" fg:w="22"/><text x="68.8432%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (22 samples, 0.02%)</title><rect x="68.5932%" y="597" width="0.0206%" height="15" fill="rgb(211,178,46)" fg:x="73263" fg:w="22"/><text x="68.8432%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (153 samples, 0.14%)</title><rect x="68.5773%" y="725" width="0.1432%" height="15" fill="rgb(224,5,42)" fg:x="73246" fg:w="153"/><text x="68.8273%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (146 samples, 0.14%)</title><rect x="68.5838%" y="709" width="0.1367%" height="15" fill="rgb(239,176,25)" fg:x="73253" fg:w="146"/><text x="68.8338%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (144 samples, 0.13%)</title><rect x="68.5857%" y="693" width="0.1348%" height="15" fill="rgb(245,187,50)" fg:x="73255" fg:w="144"/><text x="68.8357%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (99 samples, 0.09%)</title><rect x="68.6278%" y="677" width="0.0927%" height="15" fill="rgb(248,24,15)" fg:x="73300" fg:w="99"/><text x="68.8778%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (99 samples, 0.09%)</title><rect x="68.6278%" y="661" width="0.0927%" height="15" fill="rgb(205,166,13)" fg:x="73300" fg:w="99"/><text x="68.8778%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (177 samples, 0.17%)</title><rect x="68.5604%" y="821" width="0.1657%" height="15" fill="rgb(208,114,23)" fg:x="73228" fg:w="177"/><text x="68.8104%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (177 samples, 0.17%)</title><rect x="68.5604%" y="805" width="0.1657%" height="15" fill="rgb(239,127,18)" fg:x="73228" fg:w="177"/><text x="68.8104%" y="815.50"></text></g><g><title>alloc::alloc::alloc (167 samples, 0.16%)</title><rect x="68.5698%" y="789" width="0.1564%" height="15" fill="rgb(219,154,28)" fg:x="73238" fg:w="167"/><text x="68.8198%" y="799.50"></text></g><g><title>__rg_alloc (167 samples, 0.16%)</title><rect x="68.5698%" y="773" width="0.1564%" height="15" fill="rgb(225,157,23)" fg:x="73238" fg:w="167"/><text x="68.8198%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (167 samples, 0.16%)</title><rect x="68.5698%" y="757" width="0.1564%" height="15" fill="rgb(219,8,6)" fg:x="73238" fg:w="167"/><text x="68.8198%" y="767.50"></text></g><g><title>rust_alloc (159 samples, 0.15%)</title><rect x="68.5773%" y="741" width="0.1489%" height="15" fill="rgb(212,47,6)" fg:x="73246" fg:w="159"/><text x="68.8273%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (188 samples, 0.18%)</title><rect x="68.5557%" y="869" width="0.1760%" height="15" fill="rgb(224,190,4)" fg:x="73223" fg:w="188"/><text x="68.8057%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (183 samples, 0.17%)</title><rect x="68.5604%" y="853" width="0.1713%" height="15" fill="rgb(239,183,29)" fg:x="73228" fg:w="183"/><text x="68.8104%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (183 samples, 0.17%)</title><rect x="68.5604%" y="837" width="0.1713%" height="15" fill="rgb(213,57,7)" fg:x="73228" fg:w="183"/><text x="68.8104%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (483 samples, 0.45%)</title><rect x="68.2926%" y="885" width="0.4522%" height="15" fill="rgb(216,148,1)" fg:x="72942" fg:w="483"/><text x="68.5426%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 0.01%)</title><rect x="68.7317%" y="869" width="0.0131%" height="15" fill="rgb(236,182,29)" fg:x="73411" fg:w="14"/><text x="68.9817%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (536 samples, 0.50%)</title><rect x="68.2617%" y="965" width="0.5018%" height="15" fill="rgb(244,120,48)" fg:x="72909" fg:w="536"/><text x="68.5117%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (503 samples, 0.47%)</title><rect x="68.2926%" y="949" width="0.4709%" height="15" fill="rgb(206,71,34)" fg:x="72942" fg:w="503"/><text x="68.5426%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (503 samples, 0.47%)</title><rect x="68.2926%" y="933" width="0.4709%" height="15" fill="rgb(242,32,6)" fg:x="72942" fg:w="503"/><text x="68.5426%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (503 samples, 0.47%)</title><rect x="68.2926%" y="917" width="0.4709%" height="15" fill="rgb(241,35,3)" fg:x="72942" fg:w="503"/><text x="68.5426%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (503 samples, 0.47%)</title><rect x="68.2926%" y="901" width="0.4709%" height="15" fill="rgb(222,62,19)" fg:x="72942" fg:w="503"/><text x="68.5426%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (20 samples, 0.02%)</title><rect x="68.7449%" y="885" width="0.0187%" height="15" fill="rgb(223,110,41)" fg:x="73425" fg:w="20"/><text x="68.9949%" y="895.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,503 samples, 1.41%)</title><rect x="67.3667%" y="981" width="1.4072%" height="15" fill="rgb(208,224,4)" fg:x="71953" fg:w="1503"/><text x="67.6167%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (11 samples, 0.01%)</title><rect x="68.7636%" y="965" width="0.0103%" height="15" fill="rgb(241,137,19)" fg:x="73445" fg:w="11"/><text x="69.0136%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (184 samples, 0.17%)</title><rect x="68.7739%" y="981" width="0.1723%" height="15" fill="rgb(244,24,17)" fg:x="73456" fg:w="184"/><text x="69.0239%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (372 samples, 0.35%)</title><rect x="68.9490%" y="981" width="0.3483%" height="15" fill="rgb(245,178,49)" fg:x="73643" fg:w="372"/><text x="69.1990%" y="991.50"></text></g><g><title>core::ptr::write (344 samples, 0.32%)</title><rect x="68.9752%" y="965" width="0.3221%" height="15" fill="rgb(219,160,38)" fg:x="73671" fg:w="344"/><text x="69.2252%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (335 samples, 0.31%)</title><rect x="68.9836%" y="949" width="0.3136%" height="15" fill="rgb(228,137,14)" fg:x="73680" fg:w="335"/><text x="69.2336%" y="959.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="69.3300%" y="821" width="0.0103%" height="15" fill="rgb(237,134,11)" fg:x="74050" fg:w="11"/><text x="69.5800%" y="831.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (27 samples, 0.03%)</title><rect x="69.3693%" y="661" width="0.0253%" height="15" fill="rgb(211,126,44)" fg:x="74092" fg:w="27"/><text x="69.6193%" y="671.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (26 samples, 0.02%)</title><rect x="69.3703%" y="645" width="0.0243%" height="15" fill="rgb(226,171,33)" fg:x="74093" fg:w="26"/><text x="69.6203%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (50 samples, 0.05%)</title><rect x="69.3618%" y="709" width="0.0468%" height="15" fill="rgb(253,99,13)" fg:x="74084" fg:w="50"/><text x="69.6118%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (50 samples, 0.05%)</title><rect x="69.3618%" y="693" width="0.0468%" height="15" fill="rgb(244,48,7)" fg:x="74084" fg:w="50"/><text x="69.6118%" y="703.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (44 samples, 0.04%)</title><rect x="69.3675%" y="677" width="0.0412%" height="15" fill="rgb(244,217,54)" fg:x="74090" fg:w="44"/><text x="69.6175%" y="687.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="69.3946%" y="661" width="0.0140%" height="15" fill="rgb(224,15,18)" fg:x="74119" fg:w="15"/><text x="69.6446%" y="671.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="69.3946%" y="645" width="0.0140%" height="15" fill="rgb(244,99,12)" fg:x="74119" fg:w="15"/><text x="69.6446%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (62 samples, 0.06%)</title><rect x="69.3618%" y="725" width="0.0580%" height="15" fill="rgb(233,226,8)" fg:x="74084" fg:w="62"/><text x="69.6118%" y="735.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="69.4087%" y="709" width="0.0112%" height="15" fill="rgb(229,211,3)" fg:x="74134" fg:w="12"/><text x="69.6587%" y="719.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="69.4087%" y="693" width="0.0112%" height="15" fill="rgb(216,140,21)" fg:x="74134" fg:w="12"/><text x="69.6587%" y="703.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="69.4087%" y="677" width="0.0112%" height="15" fill="rgb(234,122,30)" fg:x="74134" fg:w="12"/><text x="69.6587%" y="687.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="69.4087%" y="661" width="0.0112%" height="15" fill="rgb(236,25,46)" fg:x="74134" fg:w="12"/><text x="69.6587%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (89 samples, 0.08%)</title><rect x="69.3525%" y="741" width="0.0833%" height="15" fill="rgb(217,52,54)" fg:x="74074" fg:w="89"/><text x="69.6025%" y="751.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="69.4218%" y="725" width="0.0140%" height="15" fill="rgb(222,29,26)" fg:x="74148" fg:w="15"/><text x="69.6718%" y="735.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="69.4218%" y="709" width="0.0140%" height="15" fill="rgb(216,177,29)" fg:x="74148" fg:w="15"/><text x="69.6718%" y="719.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="69.4218%" y="693" width="0.0140%" height="15" fill="rgb(247,136,51)" fg:x="74148" fg:w="15"/><text x="69.6718%" y="703.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="69.4218%" y="677" width="0.0140%" height="15" fill="rgb(231,47,47)" fg:x="74148" fg:w="15"/><text x="69.6718%" y="687.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (51 samples, 0.05%)</title><rect x="69.4826%" y="725" width="0.0477%" height="15" fill="rgb(211,192,36)" fg:x="74213" fg:w="51"/><text x="69.7326%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (561 samples, 0.53%)</title><rect x="69.3525%" y="773" width="0.5252%" height="15" fill="rgb(229,156,32)" fg:x="74074" fg:w="561"/><text x="69.6025%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (561 samples, 0.53%)</title><rect x="69.3525%" y="757" width="0.5252%" height="15" fill="rgb(248,213,20)" fg:x="74074" fg:w="561"/><text x="69.6025%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (472 samples, 0.44%)</title><rect x="69.4358%" y="741" width="0.4419%" height="15" fill="rgb(217,64,7)" fg:x="74163" fg:w="472"/><text x="69.6858%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (371 samples, 0.35%)</title><rect x="69.5304%" y="725" width="0.3474%" height="15" fill="rgb(232,142,8)" fg:x="74264" fg:w="371"/><text x="69.7804%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (371 samples, 0.35%)</title><rect x="69.5304%" y="709" width="0.3474%" height="15" fill="rgb(224,92,44)" fg:x="74264" fg:w="371"/><text x="69.7804%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (371 samples, 0.35%)</title><rect x="69.5304%" y="693" width="0.3474%" height="15" fill="rgb(214,169,17)" fg:x="74264" fg:w="371"/><text x="69.7804%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (28 samples, 0.03%)</title><rect x="69.8890%" y="741" width="0.0262%" height="15" fill="rgb(210,59,37)" fg:x="74647" fg:w="28"/><text x="70.1390%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (28 samples, 0.03%)</title><rect x="69.8890%" y="725" width="0.0262%" height="15" fill="rgb(214,116,48)" fg:x="74647" fg:w="28"/><text x="70.1390%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (45 samples, 0.04%)</title><rect x="69.8777%" y="773" width="0.0421%" height="15" fill="rgb(244,191,6)" fg:x="74635" fg:w="45"/><text x="70.1277%" y="783.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (41 samples, 0.04%)</title><rect x="69.8815%" y="757" width="0.0384%" height="15" fill="rgb(241,50,52)" fg:x="74639" fg:w="41"/><text x="70.1315%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (749 samples, 0.70%)</title><rect x="69.3412%" y="821" width="0.7013%" height="15" fill="rgb(236,75,39)" fg:x="74062" fg:w="749"/><text x="69.5912%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (749 samples, 0.70%)</title><rect x="69.3412%" y="805" width="0.7013%" height="15" fill="rgb(236,99,0)" fg:x="74062" fg:w="749"/><text x="69.5912%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (742 samples, 0.69%)</title><rect x="69.3478%" y="789" width="0.6947%" height="15" fill="rgb(207,202,15)" fg:x="74069" fg:w="742"/><text x="69.5978%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::take (119 samples, 0.11%)</title><rect x="69.9311%" y="773" width="0.1114%" height="15" fill="rgb(233,207,14)" fg:x="74692" fg:w="119"/><text x="70.1811%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (119 samples, 0.11%)</title><rect x="69.9311%" y="757" width="0.1114%" height="15" fill="rgb(226,27,51)" fg:x="74692" fg:w="119"/><text x="70.1811%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (785 samples, 0.73%)</title><rect x="69.3085%" y="917" width="0.7350%" height="15" fill="rgb(206,104,42)" fg:x="74027" fg:w="785"/><text x="69.5585%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (785 samples, 0.73%)</title><rect x="69.3085%" y="901" width="0.7350%" height="15" fill="rgb(212,225,4)" fg:x="74027" fg:w="785"/><text x="69.5585%" y="911.50"></text></g><g><title>alloc::alloc::alloc (774 samples, 0.72%)</title><rect x="69.3188%" y="885" width="0.7247%" height="15" fill="rgb(233,96,42)" fg:x="74038" fg:w="774"/><text x="69.5688%" y="895.50"></text></g><g><title>__rg_alloc (774 samples, 0.72%)</title><rect x="69.3188%" y="869" width="0.7247%" height="15" fill="rgb(229,21,32)" fg:x="74038" fg:w="774"/><text x="69.5688%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (774 samples, 0.72%)</title><rect x="69.3188%" y="853" width="0.7247%" height="15" fill="rgb(226,216,24)" fg:x="74038" fg:w="774"/><text x="69.5688%" y="863.50"></text></g><g><title>rust_alloc (762 samples, 0.71%)</title><rect x="69.3300%" y="837" width="0.7134%" height="15" fill="rgb(221,163,17)" fg:x="74050" fg:w="762"/><text x="69.5800%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (796 samples, 0.75%)</title><rect x="69.3085%" y="933" width="0.7453%" height="15" fill="rgb(216,216,42)" fg:x="74027" fg:w="796"/><text x="69.5585%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (809 samples, 0.76%)</title><rect x="69.2972%" y="981" width="0.7574%" height="15" fill="rgb(240,118,7)" fg:x="74015" fg:w="809"/><text x="69.5472%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (809 samples, 0.76%)</title><rect x="69.2972%" y="965" width="0.7574%" height="15" fill="rgb(221,67,37)" fg:x="74015" fg:w="809"/><text x="69.5472%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (797 samples, 0.75%)</title><rect x="69.3085%" y="949" width="0.7462%" height="15" fill="rgb(241,32,44)" fg:x="74027" fg:w="797"/><text x="69.5585%" y="959.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (16 samples, 0.01%)</title><rect x="70.0968%" y="677" width="0.0150%" height="15" fill="rgb(235,204,43)" fg:x="74869" fg:w="16"/><text x="70.3468%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="70.0996%" y="661" width="0.0122%" height="15" fill="rgb(213,116,10)" fg:x="74872" fg:w="13"/><text x="70.3496%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (38 samples, 0.04%)</title><rect x="70.0865%" y="725" width="0.0356%" height="15" fill="rgb(239,15,48)" fg:x="74858" fg:w="38"/><text x="70.3365%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (38 samples, 0.04%)</title><rect x="70.0865%" y="709" width="0.0356%" height="15" fill="rgb(207,123,36)" fg:x="74858" fg:w="38"/><text x="70.3365%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (37 samples, 0.03%)</title><rect x="70.0874%" y="693" width="0.0346%" height="15" fill="rgb(209,103,30)" fg:x="74859" fg:w="37"/><text x="70.3374%" y="703.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="70.1118%" y="677" width="0.0103%" height="15" fill="rgb(238,100,19)" fg:x="74885" fg:w="11"/><text x="70.3618%" y="687.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="70.1118%" y="661" width="0.0103%" height="15" fill="rgb(244,30,14)" fg:x="74885" fg:w="11"/><text x="70.3618%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (53 samples, 0.05%)</title><rect x="70.0734%" y="757" width="0.0496%" height="15" fill="rgb(249,174,6)" fg:x="74844" fg:w="53"/><text x="70.3234%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (53 samples, 0.05%)</title><rect x="70.0734%" y="741" width="0.0496%" height="15" fill="rgb(235,213,41)" fg:x="74844" fg:w="53"/><text x="70.3234%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (55 samples, 0.05%)</title><rect x="70.0734%" y="789" width="0.0515%" height="15" fill="rgb(213,118,6)" fg:x="74844" fg:w="55"/><text x="70.3234%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (55 samples, 0.05%)</title><rect x="70.0734%" y="773" width="0.0515%" height="15" fill="rgb(235,44,51)" fg:x="74844" fg:w="55"/><text x="70.3234%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (64 samples, 0.06%)</title><rect x="70.0697%" y="805" width="0.0599%" height="15" fill="rgb(217,9,53)" fg:x="74840" fg:w="64"/><text x="70.3197%" y="815.50"></text></g><g><title>rust_dealloc (87 samples, 0.08%)</title><rect x="70.0603%" y="821" width="0.0815%" height="15" fill="rgb(237,172,34)" fg:x="74830" fg:w="87"/><text x="70.3103%" y="831.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="70.1296%" y="805" width="0.0122%" height="15" fill="rgb(206,206,11)" fg:x="74904" fg:w="13"/><text x="70.3796%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95 samples, 0.09%)</title><rect x="70.0547%" y="885" width="0.0889%" height="15" fill="rgb(214,149,29)" fg:x="74824" fg:w="95"/><text x="70.3047%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (95 samples, 0.09%)</title><rect x="70.0547%" y="869" width="0.0889%" height="15" fill="rgb(208,123,3)" fg:x="74824" fg:w="95"/><text x="70.3047%" y="879.50"></text></g><g><title>__rg_dealloc (95 samples, 0.09%)</title><rect x="70.0547%" y="853" width="0.0889%" height="15" fill="rgb(229,126,4)" fg:x="74824" fg:w="95"/><text x="70.3047%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (95 samples, 0.09%)</title><rect x="70.0547%" y="837" width="0.0889%" height="15" fill="rgb(222,92,36)" fg:x="74824" fg:w="95"/><text x="70.3047%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (104 samples, 0.10%)</title><rect x="70.0547%" y="949" width="0.0974%" height="15" fill="rgb(216,39,41)" fg:x="74824" fg:w="104"/><text x="70.3047%" y="959.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (104 samples, 0.10%)</title><rect x="70.0547%" y="933" width="0.0974%" height="15" fill="rgb(253,127,28)" fg:x="74824" fg:w="104"/><text x="70.3047%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (104 samples, 0.10%)</title><rect x="70.0547%" y="917" width="0.0974%" height="15" fill="rgb(249,152,51)" fg:x="74824" fg:w="104"/><text x="70.3047%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (104 samples, 0.10%)</title><rect x="70.0547%" y="901" width="0.0974%" height="15" fill="rgb(209,123,42)" fg:x="74824" fg:w="104"/><text x="70.3047%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (108 samples, 0.10%)</title><rect x="70.0547%" y="981" width="0.1011%" height="15" fill="rgb(241,118,22)" fg:x="74824" fg:w="108"/><text x="70.3047%" y="991.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 0.10%)</title><rect x="70.0547%" y="965" width="0.1011%" height="15" fill="rgb(208,25,7)" fg:x="74824" fg:w="108"/><text x="70.3047%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="70.1717%" y="821" width="0.0206%" height="15" fill="rgb(243,144,39)" fg:x="74949" fg:w="22"/><text x="70.4217%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="70.1717%" y="805" width="0.0206%" height="15" fill="rgb(250,50,5)" fg:x="74949" fg:w="22"/><text x="70.4217%" y="815.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="70.1717%" y="789" width="0.0206%" height="15" fill="rgb(207,67,11)" fg:x="74949" fg:w="22"/><text x="70.4217%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="70.1717%" y="773" width="0.0206%" height="15" fill="rgb(245,204,40)" fg:x="74949" fg:w="22"/><text x="70.4217%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (39 samples, 0.04%)</title><rect x="70.1623%" y="917" width="0.0365%" height="15" fill="rgb(238,228,24)" fg:x="74939" fg:w="39"/><text x="70.4123%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (39 samples, 0.04%)</title><rect x="70.1623%" y="901" width="0.0365%" height="15" fill="rgb(217,116,22)" fg:x="74939" fg:w="39"/><text x="70.4123%" y="911.50"></text></g><g><title>core::mem::drop (29 samples, 0.03%)</title><rect x="70.1717%" y="885" width="0.0272%" height="15" fill="rgb(234,98,12)" fg:x="74949" fg:w="29"/><text x="70.4217%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (29 samples, 0.03%)</title><rect x="70.1717%" y="869" width="0.0272%" height="15" fill="rgb(242,170,50)" fg:x="74949" fg:w="29"/><text x="70.4217%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (29 samples, 0.03%)</title><rect x="70.1717%" y="853" width="0.0272%" height="15" fill="rgb(235,7,5)" fg:x="74949" fg:w="29"/><text x="70.4217%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="70.1717%" y="837" width="0.0272%" height="15" fill="rgb(241,114,28)" fg:x="74949" fg:w="29"/><text x="70.4217%" y="847.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="70.2363%" y="821" width="0.0103%" height="15" fill="rgb(246,112,42)" fg:x="75018" fg:w="11"/><text x="70.4863%" y="831.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (31 samples, 0.03%)</title><rect x="70.2794%" y="773" width="0.0290%" height="15" fill="rgb(248,228,14)" fg:x="75064" fg:w="31"/><text x="70.5294%" y="783.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (31 samples, 0.03%)</title><rect x="70.2794%" y="757" width="0.0290%" height="15" fill="rgb(208,133,18)" fg:x="75064" fg:w="31"/><text x="70.5294%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (78 samples, 0.07%)</title><rect x="70.2541%" y="821" width="0.0730%" height="15" fill="rgb(207,35,49)" fg:x="75037" fg:w="78"/><text x="70.5041%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (78 samples, 0.07%)</title><rect x="70.2541%" y="805" width="0.0730%" height="15" fill="rgb(205,68,36)" fg:x="75037" fg:w="78"/><text x="70.5041%" y="815.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (77 samples, 0.07%)</title><rect x="70.2550%" y="789" width="0.0721%" height="15" fill="rgb(245,62,40)" fg:x="75038" fg:w="77"/><text x="70.5050%" y="799.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (20 samples, 0.02%)</title><rect x="70.3084%" y="773" width="0.0187%" height="15" fill="rgb(228,27,24)" fg:x="75095" fg:w="20"/><text x="70.5584%" y="783.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (20 samples, 0.02%)</title><rect x="70.3084%" y="757" width="0.0187%" height="15" fill="rgb(253,19,12)" fg:x="75095" fg:w="20"/><text x="70.5584%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (125 samples, 0.12%)</title><rect x="70.2316%" y="853" width="0.1170%" height="15" fill="rgb(232,28,20)" fg:x="75013" fg:w="125"/><text x="70.4816%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (125 samples, 0.12%)</title><rect x="70.2316%" y="837" width="0.1170%" height="15" fill="rgb(218,35,51)" fg:x="75013" fg:w="125"/><text x="70.4816%" y="847.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (23 samples, 0.02%)</title><rect x="70.3271%" y="821" width="0.0215%" height="15" fill="rgb(212,90,40)" fg:x="75115" fg:w="23"/><text x="70.5771%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (138 samples, 0.13%)</title><rect x="70.2316%" y="885" width="0.1292%" height="15" fill="rgb(220,172,12)" fg:x="75013" fg:w="138"/><text x="70.4816%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (138 samples, 0.13%)</title><rect x="70.2316%" y="869" width="0.1292%" height="15" fill="rgb(226,159,20)" fg:x="75013" fg:w="138"/><text x="70.4816%" y="879.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="70.3487%" y="853" width="0.0122%" height="15" fill="rgb(234,205,16)" fg:x="75138" fg:w="13"/><text x="70.5987%" y="863.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="70.3487%" y="837" width="0.0122%" height="15" fill="rgb(207,9,39)" fg:x="75138" fg:w="13"/><text x="70.5987%" y="847.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="70.3487%" y="821" width="0.0122%" height="15" fill="rgb(249,143,15)" fg:x="75138" fg:w="13"/><text x="70.5987%" y="831.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="70.3487%" y="805" width="0.0122%" height="15" fill="rgb(253,133,29)" fg:x="75138" fg:w="13"/><text x="70.5987%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (159 samples, 0.15%)</title><rect x="70.2129%" y="901" width="0.1489%" height="15" fill="rgb(221,187,0)" fg:x="74993" fg:w="159"/><text x="70.4629%" y="911.50"></text></g><g><title>rust_dealloc (181 samples, 0.17%)</title><rect x="70.1989%" y="917" width="0.1695%" height="15" fill="rgb(205,204,26)" fg:x="74978" fg:w="181"/><text x="70.4489%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (234 samples, 0.22%)</title><rect x="70.1558%" y="965" width="0.2191%" height="15" fill="rgb(224,68,54)" fg:x="74932" fg:w="234"/><text x="70.4058%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (234 samples, 0.22%)</title><rect x="70.1558%" y="949" width="0.2191%" height="15" fill="rgb(209,67,4)" fg:x="74932" fg:w="234"/><text x="70.4058%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (234 samples, 0.22%)</title><rect x="70.1558%" y="933" width="0.2191%" height="15" fill="rgb(228,229,18)" fg:x="74932" fg:w="234"/><text x="70.4058%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (11 samples, 0.01%)</title><rect x="70.4208%" y="789" width="0.0103%" height="15" fill="rgb(231,89,13)" fg:x="75215" fg:w="11"/><text x="70.6708%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (11 samples, 0.01%)</title><rect x="70.4208%" y="773" width="0.0103%" height="15" fill="rgb(210,182,18)" fg:x="75215" fg:w="11"/><text x="70.6708%" y="783.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="70.4844%" y="645" width="0.0197%" height="15" fill="rgb(240,105,2)" fg:x="75283" fg:w="21"/><text x="70.7344%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="70.4854%" y="629" width="0.0187%" height="15" fill="rgb(207,170,50)" fg:x="75284" fg:w="20"/><text x="70.7354%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (53 samples, 0.05%)</title><rect x="70.4648%" y="693" width="0.0496%" height="15" fill="rgb(232,133,24)" fg:x="75262" fg:w="53"/><text x="70.7148%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (53 samples, 0.05%)</title><rect x="70.4648%" y="677" width="0.0496%" height="15" fill="rgb(235,166,27)" fg:x="75262" fg:w="53"/><text x="70.7148%" y="687.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (53 samples, 0.05%)</title><rect x="70.4648%" y="661" width="0.0496%" height="15" fill="rgb(209,19,13)" fg:x="75262" fg:w="53"/><text x="70.7148%" y="671.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="70.5041%" y="645" width="0.0103%" height="15" fill="rgb(226,79,39)" fg:x="75304" fg:w="11"/><text x="70.7541%" y="655.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="70.5041%" y="629" width="0.0103%" height="15" fill="rgb(222,163,10)" fg:x="75304" fg:w="11"/><text x="70.7541%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (80 samples, 0.07%)</title><rect x="70.4460%" y="725" width="0.0749%" height="15" fill="rgb(214,44,19)" fg:x="75242" fg:w="80"/><text x="70.6960%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (80 samples, 0.07%)</title><rect x="70.4460%" y="709" width="0.0749%" height="15" fill="rgb(210,217,13)" fg:x="75242" fg:w="80"/><text x="70.6960%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (83 samples, 0.08%)</title><rect x="70.4460%" y="757" width="0.0777%" height="15" fill="rgb(237,61,54)" fg:x="75242" fg:w="83"/><text x="70.6960%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (83 samples, 0.08%)</title><rect x="70.4460%" y="741" width="0.0777%" height="15" fill="rgb(226,184,24)" fg:x="75242" fg:w="83"/><text x="70.6960%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (100 samples, 0.09%)</title><rect x="70.4357%" y="773" width="0.0936%" height="15" fill="rgb(223,226,4)" fg:x="75231" fg:w="100"/><text x="70.6857%" y="783.50"></text></g><g><title>rust_dealloc (114 samples, 0.11%)</title><rect x="70.4311%" y="789" width="0.1067%" height="15" fill="rgb(210,26,41)" fg:x="75226" fg:w="114"/><text x="70.6811%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (144 samples, 0.13%)</title><rect x="70.4086%" y="805" width="0.1348%" height="15" fill="rgb(220,221,6)" fg:x="75202" fg:w="144"/><text x="70.6586%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.15%)</title><rect x="70.3936%" y="869" width="0.1517%" height="15" fill="rgb(225,89,49)" fg:x="75186" fg:w="162"/><text x="70.6436%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (157 samples, 0.15%)</title><rect x="70.3983%" y="853" width="0.1470%" height="15" fill="rgb(218,70,45)" fg:x="75191" fg:w="157"/><text x="70.6483%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (146 samples, 0.14%)</title><rect x="70.4086%" y="837" width="0.1367%" height="15" fill="rgb(238,166,21)" fg:x="75202" fg:w="146"/><text x="70.6586%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (146 samples, 0.14%)</title><rect x="70.4086%" y="821" width="0.1367%" height="15" fill="rgb(224,141,44)" fg:x="75202" fg:w="146"/><text x="70.6586%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (192 samples, 0.18%)</title><rect x="70.3768%" y="933" width="0.1798%" height="15" fill="rgb(230,12,49)" fg:x="75168" fg:w="192"/><text x="70.6268%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (186 samples, 0.17%)</title><rect x="70.3824%" y="917" width="0.1741%" height="15" fill="rgb(212,174,12)" fg:x="75174" fg:w="186"/><text x="70.6324%" y="927.50"></text></g><g><title>core::mem::drop (174 samples, 0.16%)</title><rect x="70.3936%" y="901" width="0.1629%" height="15" fill="rgb(246,67,9)" fg:x="75186" fg:w="174"/><text x="70.6436%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (174 samples, 0.16%)</title><rect x="70.3936%" y="885" width="0.1629%" height="15" fill="rgb(239,35,23)" fg:x="75186" fg:w="174"/><text x="70.6436%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (12 samples, 0.01%)</title><rect x="70.5453%" y="869" width="0.0112%" height="15" fill="rgb(211,167,0)" fg:x="75348" fg:w="12"/><text x="70.7953%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="70.5453%" y="853" width="0.0112%" height="15" fill="rgb(225,119,45)" fg:x="75348" fg:w="12"/><text x="70.7953%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="70.5453%" y="837" width="0.0112%" height="15" fill="rgb(210,162,6)" fg:x="75348" fg:w="12"/><text x="70.7953%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="70.5453%" y="821" width="0.0112%" height="15" fill="rgb(208,118,35)" fg:x="75348" fg:w="12"/><text x="70.7953%" y="831.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="70.5453%" y="805" width="0.0112%" height="15" fill="rgb(239,4,53)" fg:x="75348" fg:w="12"/><text x="70.7953%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="70.5453%" y="789" width="0.0112%" height="15" fill="rgb(213,130,21)" fg:x="75348" fg:w="12"/><text x="70.7953%" y="799.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="70.5565%" y="917" width="0.0131%" height="15" fill="rgb(235,148,0)" fg:x="75360" fg:w="14"/><text x="70.8065%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (11 samples, 0.01%)</title><rect x="70.5865%" y="837" width="0.0103%" height="15" fill="rgb(244,224,18)" fg:x="75392" fg:w="11"/><text x="70.8365%" y="847.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="70.6108%" y="789" width="0.0122%" height="15" fill="rgb(211,214,4)" fg:x="75418" fg:w="13"/><text x="70.8608%" y="799.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="70.6108%" y="773" width="0.0122%" height="15" fill="rgb(206,119,25)" fg:x="75418" fg:w="13"/><text x="70.8608%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (35 samples, 0.03%)</title><rect x="70.5968%" y="837" width="0.0328%" height="15" fill="rgb(243,93,47)" fg:x="75403" fg:w="35"/><text x="70.8468%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (35 samples, 0.03%)</title><rect x="70.5968%" y="821" width="0.0328%" height="15" fill="rgb(224,194,6)" fg:x="75403" fg:w="35"/><text x="70.8468%" y="831.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (35 samples, 0.03%)</title><rect x="70.5968%" y="805" width="0.0328%" height="15" fill="rgb(243,229,6)" fg:x="75403" fg:w="35"/><text x="70.8468%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (57 samples, 0.05%)</title><rect x="70.5827%" y="869" width="0.0534%" height="15" fill="rgb(207,23,50)" fg:x="75388" fg:w="57"/><text x="70.8327%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (57 samples, 0.05%)</title><rect x="70.5827%" y="853" width="0.0534%" height="15" fill="rgb(253,192,32)" fg:x="75388" fg:w="57"/><text x="70.8327%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (80 samples, 0.07%)</title><rect x="70.5696%" y="917" width="0.0749%" height="15" fill="rgb(213,21,6)" fg:x="75374" fg:w="80"/><text x="70.8196%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (66 samples, 0.06%)</title><rect x="70.5827%" y="901" width="0.0618%" height="15" fill="rgb(243,151,13)" fg:x="75388" fg:w="66"/><text x="70.8327%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (66 samples, 0.06%)</title><rect x="70.5827%" y="885" width="0.0618%" height="15" fill="rgb(233,165,41)" fg:x="75388" fg:w="66"/><text x="70.8327%" y="895.50"></text></g><g><title>rust_dealloc (95 samples, 0.09%)</title><rect x="70.5565%" y="933" width="0.0889%" height="15" fill="rgb(246,176,45)" fg:x="75360" fg:w="95"/><text x="70.8065%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (290 samples, 0.27%)</title><rect x="70.3749%" y="949" width="0.2715%" height="15" fill="rgb(217,170,52)" fg:x="75166" fg:w="290"/><text x="70.6249%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (530 samples, 0.50%)</title><rect x="70.1558%" y="981" width="0.4962%" height="15" fill="rgb(214,203,54)" fg:x="74932" fg:w="530"/><text x="70.4058%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (296 samples, 0.28%)</title><rect x="70.3749%" y="965" width="0.2771%" height="15" fill="rgb(248,215,49)" fg:x="75166" fg:w="296"/><text x="70.6249%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (25 samples, 0.02%)</title><rect x="70.6520%" y="981" width="0.0234%" height="15" fill="rgb(208,46,10)" fg:x="75462" fg:w="25"/><text x="70.9020%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (11 samples, 0.01%)</title><rect x="70.6754%" y="981" width="0.0103%" height="15" fill="rgb(254,5,31)" fg:x="75487" fg:w="11"/><text x="70.9254%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,196 samples, 6.74%)</title><rect x="63.9615%" y="1045" width="6.7373%" height="15" fill="rgb(222,104,33)" fg:x="68316" fg:w="7196"/><text x="64.2115%" y="1055.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,196 samples, 6.74%)</title><rect x="63.9615%" y="1029" width="6.7373%" height="15" fill="rgb(248,49,16)" fg:x="68316" fg:w="7196"/><text x="64.2115%" y="1039.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (7,196 samples, 6.74%)</title><rect x="63.9615%" y="1013" width="6.7373%" height="15" fill="rgb(232,198,41)" fg:x="68316" fg:w="7196"/><text x="64.2115%" y="1023.50">tremor_ru..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,380 samples, 4.10%)</title><rect x="66.5980%" y="997" width="4.1008%" height="15" fill="rgb(214,125,3)" fg:x="71132" fg:w="4380"/><text x="66.8480%" y="1007.50">trem..</text></g><g><title>tremor_script::srs::EventPayload::try_new (14 samples, 0.01%)</title><rect x="70.6857%" y="981" width="0.0131%" height="15" fill="rgb(229,220,28)" fg:x="75498" fg:w="14"/><text x="70.9357%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (17 samples, 0.02%)</title><rect x="70.7915%" y="933" width="0.0159%" height="15" fill="rgb(222,64,37)" fg:x="75611" fg:w="17"/><text x="71.0415%" y="943.50"></text></g><g><title>core::mem::replace (17 samples, 0.02%)</title><rect x="70.7915%" y="917" width="0.0159%" height="15" fill="rgb(249,184,13)" fg:x="75611" fg:w="17"/><text x="71.0415%" y="927.50"></text></g><g><title>core::ptr::read (17 samples, 0.02%)</title><rect x="70.7915%" y="901" width="0.0159%" height="15" fill="rgb(252,176,6)" fg:x="75611" fg:w="17"/><text x="71.0415%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (201 samples, 0.19%)</title><rect x="70.8664%" y="917" width="0.1882%" height="15" fill="rgb(228,153,7)" fg:x="75691" fg:w="201"/><text x="71.1164%" y="927.50"></text></g><g><title>core::mem::replace (201 samples, 0.19%)</title><rect x="70.8664%" y="901" width="0.1882%" height="15" fill="rgb(242,193,5)" fg:x="75691" fg:w="201"/><text x="71.1164%" y="911.50"></text></g><g><title>core::ptr::read (201 samples, 0.19%)</title><rect x="70.8664%" y="885" width="0.1882%" height="15" fill="rgb(232,140,9)" fg:x="75691" fg:w="201"/><text x="71.1164%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (315 samples, 0.29%)</title><rect x="70.8074%" y="933" width="0.2949%" height="15" fill="rgb(213,222,16)" fg:x="75628" fg:w="315"/><text x="71.0574%" y="943.50"></text></g><g><title>core::mem::drop (51 samples, 0.05%)</title><rect x="71.0546%" y="917" width="0.0477%" height="15" fill="rgb(222,75,50)" fg:x="75892" fg:w="51"/><text x="71.3046%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (51 samples, 0.05%)</title><rect x="71.0546%" y="901" width="0.0477%" height="15" fill="rgb(205,180,2)" fg:x="75892" fg:w="51"/><text x="71.3046%" y="911.50"></text></g><g><title>std::sync::poison::Flag::done (15 samples, 0.01%)</title><rect x="71.1239%" y="885" width="0.0140%" height="15" fill="rgb(216,34,7)" fg:x="75966" fg:w="15"/><text x="71.3739%" y="895.50"></text></g><g><title>std::thread::panicking (15 samples, 0.01%)</title><rect x="71.1239%" y="869" width="0.0140%" height="15" fill="rgb(253,16,32)" fg:x="75966" fg:w="15"/><text x="71.3739%" y="879.50"></text></g><g><title>std::panicking::panicking (15 samples, 0.01%)</title><rect x="71.1239%" y="853" width="0.0140%" height="15" fill="rgb(208,97,28)" fg:x="75966" fg:w="15"/><text x="71.3739%" y="863.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (15 samples, 0.01%)</title><rect x="71.1239%" y="837" width="0.0140%" height="15" fill="rgb(225,92,11)" fg:x="75966" fg:w="15"/><text x="71.3739%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (228 samples, 0.21%)</title><rect x="71.1445%" y="853" width="0.2135%" height="15" fill="rgb(243,38,12)" fg:x="75988" fg:w="228"/><text x="71.3945%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (288 samples, 0.27%)</title><rect x="71.1024%" y="933" width="0.2696%" height="15" fill="rgb(208,139,16)" fg:x="75943" fg:w="288"/><text x="71.3524%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (279 samples, 0.26%)</title><rect x="71.1108%" y="917" width="0.2612%" height="15" fill="rgb(227,24,9)" fg:x="75952" fg:w="279"/><text x="71.3608%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (279 samples, 0.26%)</title><rect x="71.1108%" y="901" width="0.2612%" height="15" fill="rgb(206,62,11)" fg:x="75952" fg:w="279"/><text x="71.3608%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (250 samples, 0.23%)</title><rect x="71.1379%" y="885" width="0.2341%" height="15" fill="rgb(228,134,27)" fg:x="75981" fg:w="250"/><text x="71.3879%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (243 samples, 0.23%)</title><rect x="71.1445%" y="869" width="0.2275%" height="15" fill="rgb(205,55,33)" fg:x="75988" fg:w="243"/><text x="71.3945%" y="879.50"></text></g><g><title>___pthread_mutex_unlock (15 samples, 0.01%)</title><rect x="71.3580%" y="853" width="0.0140%" height="15" fill="rgb(243,75,43)" fg:x="76216" fg:w="15"/><text x="71.6080%" y="863.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (23 samples, 0.02%)</title><rect x="71.3823%" y="885" width="0.0215%" height="15" fill="rgb(223,27,42)" fg:x="76242" fg:w="23"/><text x="71.6323%" y="895.50"></text></g><g><title>core::task::wake::Waker::will_wake (46 samples, 0.04%)</title><rect x="71.3720%" y="933" width="0.0431%" height="15" fill="rgb(232,189,33)" fg:x="76231" fg:w="46"/><text x="71.6220%" y="943.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (46 samples, 0.04%)</title><rect x="71.3720%" y="917" width="0.0431%" height="15" fill="rgb(210,9,39)" fg:x="76231" fg:w="46"/><text x="71.6220%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (35 samples, 0.03%)</title><rect x="71.3823%" y="901" width="0.0328%" height="15" fill="rgb(242,85,26)" fg:x="76242" fg:w="35"/><text x="71.6323%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="71.4038%" y="885" width="0.0112%" height="15" fill="rgb(248,44,4)" fg:x="76265" fg:w="12"/><text x="71.6538%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,574 samples, 1.47%)</title><rect x="70.6988%" y="1029" width="1.4737%" height="15" fill="rgb(250,96,46)" fg:x="75512" fg:w="1574"/><text x="70.9488%" y="1039.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,574 samples, 1.47%)</title><rect x="70.6988%" y="1013" width="1.4737%" height="15" fill="rgb(229,116,26)" fg:x="75512" fg:w="1574"/><text x="70.9488%" y="1023.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,574 samples, 1.47%)</title><rect x="70.6988%" y="997" width="1.4737%" height="15" fill="rgb(246,94,34)" fg:x="75512" fg:w="1574"/><text x="70.9488%" y="1007.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,574 samples, 1.47%)</title><rect x="70.6988%" y="981" width="1.4737%" height="15" fill="rgb(251,73,21)" fg:x="75512" fg:w="1574"/><text x="70.9488%" y="991.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,574 samples, 1.47%)</title><rect x="70.6988%" y="965" width="1.4737%" height="15" fill="rgb(254,121,25)" fg:x="75512" fg:w="1574"/><text x="70.9488%" y="975.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,574 samples, 1.47%)</title><rect x="70.6988%" y="949" width="1.4737%" height="15" fill="rgb(215,161,49)" fg:x="75512" fg:w="1574"/><text x="70.9488%" y="959.50"></text></g><g><title>event_listener::Inner::lock (809 samples, 0.76%)</title><rect x="71.4151%" y="933" width="0.7574%" height="15" fill="rgb(221,43,13)" fg:x="76277" fg:w="809"/><text x="71.6651%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (797 samples, 0.75%)</title><rect x="71.4263%" y="917" width="0.7462%" height="15" fill="rgb(249,5,37)" fg:x="76289" fg:w="797"/><text x="71.6763%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (787 samples, 0.74%)</title><rect x="71.4357%" y="901" width="0.7368%" height="15" fill="rgb(226,25,44)" fg:x="76299" fg:w="787"/><text x="71.6857%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (752 samples, 0.70%)</title><rect x="71.4684%" y="885" width="0.7041%" height="15" fill="rgb(238,189,16)" fg:x="76334" fg:w="752"/><text x="71.7184%" y="895.50"></text></g><g><title>___pthread_mutex_lock (752 samples, 0.70%)</title><rect x="71.4684%" y="869" width="0.7041%" height="15" fill="rgb(251,186,8)" fg:x="76334" fg:w="752"/><text x="71.7184%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="72.1809%" y="981" width="0.0178%" height="15" fill="rgb(254,34,31)" fg:x="77095" fg:w="19"/><text x="72.4309%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (295 samples, 0.28%)</title><rect x="72.1987%" y="981" width="0.2762%" height="15" fill="rgb(225,215,27)" fg:x="77114" fg:w="295"/><text x="72.4487%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (800 samples, 0.75%)</title><rect x="72.5966%" y="965" width="0.7490%" height="15" fill="rgb(221,192,48)" fg:x="77539" fg:w="800"/><text x="72.8466%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (17 samples, 0.02%)</title><rect x="73.3456%" y="949" width="0.0159%" height="15" fill="rgb(219,137,20)" fg:x="78339" fg:w="17"/><text x="73.5956%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14,564 samples, 13.64%)</title><rect x="59.7362%" y="1125" width="13.6357%" height="15" fill="rgb(219,84,11)" fg:x="63803" fg:w="14564"/><text x="59.9862%" y="1135.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14,562 samples, 13.63%)</title><rect x="59.7380%" y="1109" width="13.6338%" height="15" fill="rgb(224,10,23)" fg:x="63805" fg:w="14562"/><text x="59.9880%" y="1119.50">std::thread::local::L..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (14,562 samples, 13.63%)</title><rect x="59.7380%" y="1093" width="13.6338%" height="15" fill="rgb(248,22,39)" fg:x="63805" fg:w="14562"/><text x="59.9880%" y="1103.50">async_std::task::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (14,562 samples, 13.63%)</title><rect x="59.7380%" y="1077" width="13.6338%" height="15" fill="rgb(212,154,20)" fg:x="63805" fg:w="14562"/><text x="59.9880%" y="1087.50">&lt;async_std::task::bui..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,562 samples, 13.63%)</title><rect x="59.7380%" y="1061" width="13.6338%" height="15" fill="rgb(236,199,50)" fg:x="63805" fg:w="14562"/><text x="59.9880%" y="1071.50">&lt;core::future::from_g..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,855 samples, 2.67%)</title><rect x="70.6988%" y="1045" width="2.6730%" height="15" fill="rgb(211,9,17)" fg:x="75512" fg:w="2855"/><text x="70.9488%" y="1055.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,281 samples, 1.20%)</title><rect x="72.1725%" y="1029" width="1.1993%" height="15" fill="rgb(243,216,36)" fg:x="77086" fg:w="1281"/><text x="72.4225%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,281 samples, 1.20%)</title><rect x="72.1725%" y="1013" width="1.1993%" height="15" fill="rgb(250,2,10)" fg:x="77086" fg:w="1281"/><text x="72.4225%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,281 samples, 1.20%)</title><rect x="72.1725%" y="997" width="1.1993%" height="15" fill="rgb(226,50,48)" fg:x="77086" fg:w="1281"/><text x="72.4225%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (958 samples, 0.90%)</title><rect x="72.4749%" y="981" width="0.8969%" height="15" fill="rgb(243,81,16)" fg:x="77409" fg:w="958"/><text x="72.7249%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (28 samples, 0.03%)</title><rect x="73.3456%" y="965" width="0.0262%" height="15" fill="rgb(250,14,2)" fg:x="78339" fg:w="28"/><text x="73.5956%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (11 samples, 0.01%)</title><rect x="73.3615%" y="949" width="0.0103%" height="15" fill="rgb(233,135,29)" fg:x="78356" fg:w="11"/><text x="73.6115%" y="959.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (13 samples, 0.01%)</title><rect x="73.3765%" y="1125" width="0.0122%" height="15" fill="rgb(224,64,43)" fg:x="78372" fg:w="13"/><text x="73.6265%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (33 samples, 0.03%)</title><rect x="73.3887%" y="1125" width="0.0309%" height="15" fill="rgb(238,84,13)" fg:x="78385" fg:w="33"/><text x="73.6387%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (11 samples, 0.01%)</title><rect x="73.4196%" y="1125" width="0.0103%" height="15" fill="rgb(253,48,26)" fg:x="78418" fg:w="11"/><text x="73.6696%" y="1135.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::default::Default&gt;::default (22 samples, 0.02%)</title><rect x="73.9898%" y="1029" width="0.0206%" height="15" fill="rgb(205,223,31)" fg:x="79027" fg:w="22"/><text x="74.2398%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::default::Default for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::default (18 samples, 0.02%)</title><rect x="73.9935%" y="1013" width="0.0169%" height="15" fill="rgb(221,41,32)" fg:x="79031" fg:w="18"/><text x="74.2435%" y="1023.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (20 samples, 0.02%)</title><rect x="74.0235%" y="933" width="0.0187%" height="15" fill="rgb(213,158,31)" fg:x="79063" fg:w="20"/><text x="74.2735%" y="943.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (11 samples, 0.01%)</title><rect x="74.0319%" y="917" width="0.0103%" height="15" fill="rgb(245,126,43)" fg:x="79072" fg:w="11"/><text x="74.2819%" y="927.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (11 samples, 0.01%)</title><rect x="74.0319%" y="901" width="0.0103%" height="15" fill="rgb(227,7,22)" fg:x="79072" fg:w="11"/><text x="74.2819%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.01%)</title><rect x="74.0319%" y="885" width="0.0103%" height="15" fill="rgb(252,90,44)" fg:x="79072" fg:w="11"/><text x="74.2819%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (54 samples, 0.05%)</title><rect x="74.0188%" y="997" width="0.0506%" height="15" fill="rgb(253,91,0)" fg:x="79058" fg:w="54"/><text x="74.2688%" y="1007.50"></text></g><g><title>std::collections::hash::map::RandomState::new (54 samples, 0.05%)</title><rect x="74.0188%" y="981" width="0.0506%" height="15" fill="rgb(252,175,49)" fg:x="79058" fg:w="54"/><text x="74.2688%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (54 samples, 0.05%)</title><rect x="74.0188%" y="965" width="0.0506%" height="15" fill="rgb(246,150,1)" fg:x="79058" fg:w="54"/><text x="74.2688%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 0.05%)</title><rect x="74.0188%" y="949" width="0.0506%" height="15" fill="rgb(241,192,25)" fg:x="79058" fg:w="54"/><text x="74.2688%" y="959.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (29 samples, 0.03%)</title><rect x="74.0422%" y="933" width="0.0272%" height="15" fill="rgb(239,187,11)" fg:x="79083" fg:w="29"/><text x="74.2922%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="74.1180%" y="725" width="0.0112%" height="15" fill="rgb(218,202,51)" fg:x="79164" fg:w="12"/><text x="74.3680%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.06%)</title><rect x="74.1180%" y="757" width="0.0580%" height="15" fill="rgb(225,176,8)" fg:x="79164" fg:w="62"/><text x="74.3680%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (62 samples, 0.06%)</title><rect x="74.1180%" y="741" width="0.0580%" height="15" fill="rgb(219,122,41)" fg:x="79164" fg:w="62"/><text x="74.3680%" y="751.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (50 samples, 0.05%)</title><rect x="74.1293%" y="725" width="0.0468%" height="15" fill="rgb(248,140,20)" fg:x="79176" fg:w="50"/><text x="74.3793%" y="735.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (41 samples, 0.04%)</title><rect x="74.1377%" y="709" width="0.0384%" height="15" fill="rgb(245,41,37)" fg:x="79185" fg:w="41"/><text x="74.3877%" y="719.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (41 samples, 0.04%)</title><rect x="74.1377%" y="693" width="0.0384%" height="15" fill="rgb(235,82,39)" fg:x="79185" fg:w="41"/><text x="74.3877%" y="703.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (41 samples, 0.04%)</title><rect x="74.1377%" y="677" width="0.0384%" height="15" fill="rgb(230,108,42)" fg:x="79185" fg:w="41"/><text x="74.3877%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="74.1798%" y="757" width="0.0290%" height="15" fill="rgb(215,150,50)" fg:x="79230" fg:w="31"/><text x="74.4298%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="74.1798%" y="741" width="0.0290%" height="15" fill="rgb(233,212,5)" fg:x="79230" fg:w="31"/><text x="74.4298%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="74.1798%" y="725" width="0.0290%" height="15" fill="rgb(245,80,22)" fg:x="79230" fg:w="31"/><text x="74.4298%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="74.1817%" y="709" width="0.0272%" height="15" fill="rgb(238,129,16)" fg:x="79232" fg:w="29"/><text x="74.4317%" y="719.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (29 samples, 0.03%)</title><rect x="74.1817%" y="693" width="0.0272%" height="15" fill="rgb(240,19,0)" fg:x="79232" fg:w="29"/><text x="74.4317%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (17 samples, 0.02%)</title><rect x="74.1929%" y="677" width="0.0159%" height="15" fill="rgb(232,42,35)" fg:x="79244" fg:w="17"/><text x="74.4429%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="74.1929%" y="661" width="0.0159%" height="15" fill="rgb(223,130,24)" fg:x="79244" fg:w="17"/><text x="74.4429%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (170 samples, 0.16%)</title><rect x="74.1096%" y="805" width="0.1592%" height="15" fill="rgb(237,16,22)" fg:x="79155" fg:w="170"/><text x="74.3596%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (170 samples, 0.16%)</title><rect x="74.1096%" y="789" width="0.1592%" height="15" fill="rgb(248,192,20)" fg:x="79155" fg:w="170"/><text x="74.3596%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (166 samples, 0.16%)</title><rect x="74.1134%" y="773" width="0.1554%" height="15" fill="rgb(233,167,2)" fg:x="79159" fg:w="166"/><text x="74.3634%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::take (63 samples, 0.06%)</title><rect x="74.2098%" y="757" width="0.0590%" height="15" fill="rgb(252,71,44)" fg:x="79262" fg:w="63"/><text x="74.4598%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (63 samples, 0.06%)</title><rect x="74.2098%" y="741" width="0.0590%" height="15" fill="rgb(238,37,47)" fg:x="79262" fg:w="63"/><text x="74.4598%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (216 samples, 0.20%)</title><rect x="74.0694%" y="933" width="0.2022%" height="15" fill="rgb(214,202,54)" fg:x="79112" fg:w="216"/><text x="74.3194%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (197 samples, 0.18%)</title><rect x="74.0871%" y="917" width="0.1844%" height="15" fill="rgb(254,165,40)" fg:x="79131" fg:w="197"/><text x="74.3371%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (195 samples, 0.18%)</title><rect x="74.0890%" y="901" width="0.1826%" height="15" fill="rgb(246,173,38)" fg:x="79133" fg:w="195"/><text x="74.3390%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (195 samples, 0.18%)</title><rect x="74.0890%" y="885" width="0.1826%" height="15" fill="rgb(215,3,27)" fg:x="79133" fg:w="195"/><text x="74.3390%" y="895.50"></text></g><g><title>alloc::alloc::alloc (195 samples, 0.18%)</title><rect x="74.0890%" y="869" width="0.1826%" height="15" fill="rgb(239,169,51)" fg:x="79133" fg:w="195"/><text x="74.3390%" y="879.50"></text></g><g><title>__rg_alloc (195 samples, 0.18%)</title><rect x="74.0890%" y="853" width="0.1826%" height="15" fill="rgb(212,5,25)" fg:x="79133" fg:w="195"/><text x="74.3390%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (195 samples, 0.18%)</title><rect x="74.0890%" y="837" width="0.1826%" height="15" fill="rgb(243,45,17)" fg:x="79133" fg:w="195"/><text x="74.3390%" y="847.50"></text></g><g><title>rust_alloc (187 samples, 0.18%)</title><rect x="74.0965%" y="821" width="0.1751%" height="15" fill="rgb(242,97,9)" fg:x="79141" fg:w="187"/><text x="74.3465%" y="831.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (286 samples, 0.27%)</title><rect x="74.0104%" y="1029" width="0.2678%" height="15" fill="rgb(228,71,31)" fg:x="79049" fg:w="286"/><text x="74.2604%" y="1039.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (277 samples, 0.26%)</title><rect x="74.0188%" y="1013" width="0.2593%" height="15" fill="rgb(252,184,16)" fg:x="79058" fg:w="277"/><text x="74.2688%" y="1023.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (223 samples, 0.21%)</title><rect x="74.0694%" y="997" width="0.2088%" height="15" fill="rgb(236,169,46)" fg:x="79112" fg:w="223"/><text x="74.3194%" y="1007.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (223 samples, 0.21%)</title><rect x="74.0694%" y="981" width="0.2088%" height="15" fill="rgb(207,17,47)" fg:x="79112" fg:w="223"/><text x="74.3194%" y="991.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (223 samples, 0.21%)</title><rect x="74.0694%" y="965" width="0.2088%" height="15" fill="rgb(206,201,28)" fg:x="79112" fg:w="223"/><text x="74.3194%" y="975.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (223 samples, 0.21%)</title><rect x="74.0694%" y="949" width="0.2088%" height="15" fill="rgb(224,184,23)" fg:x="79112" fg:w="223"/><text x="74.3194%" y="959.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="74.7491%" y="821" width="0.0103%" height="15" fill="rgb(208,139,48)" fg:x="79838" fg:w="11"/><text x="74.9991%" y="831.50"></text></g><g><title>size_to_sizeclass (18 samples, 0.02%)</title><rect x="74.7687%" y="789" width="0.0169%" height="15" fill="rgb(208,130,10)" fg:x="79859" fg:w="18"/><text x="75.0187%" y="799.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="74.8071%" y="725" width="0.0103%" height="15" fill="rgb(211,213,45)" fg:x="79900" fg:w="11"/><text x="75.0571%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (80 samples, 0.07%)</title><rect x="74.7959%" y="773" width="0.0749%" height="15" fill="rgb(235,100,30)" fg:x="79888" fg:w="80"/><text x="75.0459%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (80 samples, 0.07%)</title><rect x="74.7959%" y="757" width="0.0749%" height="15" fill="rgb(206,144,31)" fg:x="79888" fg:w="80"/><text x="75.0459%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (70 samples, 0.07%)</title><rect x="74.8053%" y="741" width="0.0655%" height="15" fill="rgb(224,200,26)" fg:x="79898" fg:w="70"/><text x="75.0553%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (57 samples, 0.05%)</title><rect x="74.8174%" y="725" width="0.0534%" height="15" fill="rgb(247,104,53)" fg:x="79911" fg:w="57"/><text x="75.0674%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (57 samples, 0.05%)</title><rect x="74.8174%" y="709" width="0.0534%" height="15" fill="rgb(220,14,17)" fg:x="79911" fg:w="57"/><text x="75.0674%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (57 samples, 0.05%)</title><rect x="74.8174%" y="693" width="0.0534%" height="15" fill="rgb(230,140,40)" fg:x="79911" fg:w="57"/><text x="75.0674%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (291 samples, 0.27%)</title><rect x="74.7603%" y="821" width="0.2725%" height="15" fill="rgb(229,2,41)" fg:x="79850" fg:w="291"/><text x="75.0103%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (284 samples, 0.27%)</title><rect x="74.7669%" y="805" width="0.2659%" height="15" fill="rgb(232,89,16)" fg:x="79857" fg:w="284"/><text x="75.0169%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (264 samples, 0.25%)</title><rect x="74.7856%" y="789" width="0.2472%" height="15" fill="rgb(247,59,52)" fg:x="79877" fg:w="264"/><text x="75.0356%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::take (159 samples, 0.15%)</title><rect x="74.8839%" y="773" width="0.1489%" height="15" fill="rgb(226,110,21)" fg:x="79982" fg:w="159"/><text x="75.1339%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (159 samples, 0.15%)</title><rect x="74.8839%" y="757" width="0.1489%" height="15" fill="rgb(224,176,43)" fg:x="79982" fg:w="159"/><text x="75.1339%" y="767.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (326 samples, 0.31%)</title><rect x="74.7304%" y="965" width="0.3052%" height="15" fill="rgb(221,73,6)" fg:x="79818" fg:w="326"/><text x="74.9804%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (326 samples, 0.31%)</title><rect x="74.7304%" y="949" width="0.3052%" height="15" fill="rgb(232,78,19)" fg:x="79818" fg:w="326"/><text x="74.9804%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (307 samples, 0.29%)</title><rect x="74.7481%" y="933" width="0.2874%" height="15" fill="rgb(233,112,48)" fg:x="79837" fg:w="307"/><text x="74.9981%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (307 samples, 0.29%)</title><rect x="74.7481%" y="917" width="0.2874%" height="15" fill="rgb(243,131,47)" fg:x="79837" fg:w="307"/><text x="74.9981%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (307 samples, 0.29%)</title><rect x="74.7481%" y="901" width="0.2874%" height="15" fill="rgb(226,51,1)" fg:x="79837" fg:w="307"/><text x="74.9981%" y="911.50"></text></g><g><title>alloc::alloc::alloc (307 samples, 0.29%)</title><rect x="74.7481%" y="885" width="0.2874%" height="15" fill="rgb(247,58,7)" fg:x="79837" fg:w="307"/><text x="74.9981%" y="895.50"></text></g><g><title>__rg_alloc (307 samples, 0.29%)</title><rect x="74.7481%" y="869" width="0.2874%" height="15" fill="rgb(209,7,32)" fg:x="79837" fg:w="307"/><text x="74.9981%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (307 samples, 0.29%)</title><rect x="74.7481%" y="853" width="0.2874%" height="15" fill="rgb(209,39,41)" fg:x="79837" fg:w="307"/><text x="74.9981%" y="863.50"></text></g><g><title>rust_alloc (306 samples, 0.29%)</title><rect x="74.7491%" y="837" width="0.2865%" height="15" fill="rgb(226,182,46)" fg:x="79838" fg:w="306"/><text x="74.9991%" y="847.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (17 samples, 0.02%)</title><rect x="75.0356%" y="869" width="0.0159%" height="15" fill="rgb(230,219,10)" fg:x="80144" fg:w="17"/><text x="75.2856%" y="879.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (17 samples, 0.02%)</title><rect x="75.0515%" y="853" width="0.0159%" height="15" fill="rgb(227,175,30)" fg:x="80161" fg:w="17"/><text x="75.3015%" y="863.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (35 samples, 0.03%)</title><rect x="75.0515%" y="869" width="0.0328%" height="15" fill="rgb(217,2,50)" fg:x="80161" fg:w="35"/><text x="75.3015%" y="879.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (18 samples, 0.02%)</title><rect x="75.0674%" y="853" width="0.0169%" height="15" fill="rgb(229,160,0)" fg:x="80178" fg:w="18"/><text x="75.3174%" y="863.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="75.0702%" y="837" width="0.0140%" height="15" fill="rgb(207,78,37)" fg:x="80181" fg:w="15"/><text x="75.3202%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (15 samples, 0.01%)</title><rect x="75.0702%" y="821" width="0.0140%" height="15" fill="rgb(225,57,0)" fg:x="80181" fg:w="15"/><text x="75.3202%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (24 samples, 0.02%)</title><rect x="75.1404%" y="853" width="0.0225%" height="15" fill="rgb(232,154,2)" fg:x="80256" fg:w="24"/><text x="75.3904%" y="863.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (24 samples, 0.02%)</title><rect x="75.1404%" y="837" width="0.0225%" height="15" fill="rgb(241,212,25)" fg:x="80256" fg:w="24"/><text x="75.3904%" y="847.50"></text></g><g><title>core::mem::replace (24 samples, 0.02%)</title><rect x="75.1404%" y="821" width="0.0225%" height="15" fill="rgb(226,69,20)" fg:x="80256" fg:w="24"/><text x="75.3904%" y="831.50"></text></g><g><title>core::ptr::write (24 samples, 0.02%)</title><rect x="75.1404%" y="805" width="0.0225%" height="15" fill="rgb(247,184,54)" fg:x="80256" fg:w="24"/><text x="75.3904%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (149 samples, 0.14%)</title><rect x="75.0356%" y="933" width="0.1395%" height="15" fill="rgb(210,145,0)" fg:x="80144" fg:w="149"/><text x="75.2856%" y="943.50"></text></g><g><title>std::collections::hash::map::RandomState::new (149 samples, 0.14%)</title><rect x="75.0356%" y="917" width="0.1395%" height="15" fill="rgb(253,82,12)" fg:x="80144" fg:w="149"/><text x="75.2856%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (149 samples, 0.14%)</title><rect x="75.0356%" y="901" width="0.1395%" height="15" fill="rgb(245,42,11)" fg:x="80144" fg:w="149"/><text x="75.2856%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (149 samples, 0.14%)</title><rect x="75.0356%" y="885" width="0.1395%" height="15" fill="rgb(219,147,32)" fg:x="80144" fg:w="149"/><text x="75.2856%" y="895.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (97 samples, 0.09%)</title><rect x="75.0843%" y="869" width="0.0908%" height="15" fill="rgb(246,12,7)" fg:x="80196" fg:w="97"/><text x="75.3343%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (13 samples, 0.01%)</title><rect x="75.1629%" y="853" width="0.0122%" height="15" fill="rgb(243,50,9)" fg:x="80280" fg:w="13"/><text x="75.4129%" y="863.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="75.1751%" y="869" width="0.0122%" height="15" fill="rgb(219,149,6)" fg:x="80293" fg:w="13"/><text x="75.4251%" y="879.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="75.2256%" y="741" width="0.0103%" height="15" fill="rgb(241,51,42)" fg:x="80347" fg:w="11"/><text x="75.4756%" y="751.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="75.2500%" y="709" width="0.0140%" height="15" fill="rgb(226,128,27)" fg:x="80373" fg:w="15"/><text x="75.5000%" y="719.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="75.2500%" y="693" width="0.0140%" height="15" fill="rgb(244,144,4)" fg:x="80373" fg:w="15"/><text x="75.5000%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (24 samples, 0.02%)</title><rect x="75.2743%" y="629" width="0.0225%" height="15" fill="rgb(221,4,13)" fg:x="80399" fg:w="24"/><text x="75.5243%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (24 samples, 0.02%)</title><rect x="75.2743%" y="613" width="0.0225%" height="15" fill="rgb(208,170,28)" fg:x="80399" fg:w="24"/><text x="75.5243%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (20 samples, 0.02%)</title><rect x="75.2781%" y="597" width="0.0187%" height="15" fill="rgb(226,131,13)" fg:x="80403" fg:w="20"/><text x="75.5281%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (32 samples, 0.03%)</title><rect x="75.2743%" y="645" width="0.0300%" height="15" fill="rgb(215,72,41)" fg:x="80399" fg:w="32"/><text x="75.5243%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (50 samples, 0.05%)</title><rect x="75.2668%" y="661" width="0.0468%" height="15" fill="rgb(243,108,20)" fg:x="80391" fg:w="50"/><text x="75.5168%" y="671.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (34 samples, 0.03%)</title><rect x="75.3361%" y="645" width="0.0318%" height="15" fill="rgb(230,189,17)" fg:x="80465" fg:w="34"/><text x="75.5861%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (331 samples, 0.31%)</title><rect x="75.2668%" y="693" width="0.3099%" height="15" fill="rgb(220,50,17)" fg:x="80391" fg:w="331"/><text x="75.5168%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (331 samples, 0.31%)</title><rect x="75.2668%" y="677" width="0.3099%" height="15" fill="rgb(248,152,48)" fg:x="80391" fg:w="331"/><text x="75.5168%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (281 samples, 0.26%)</title><rect x="75.3136%" y="661" width="0.2631%" height="15" fill="rgb(244,91,11)" fg:x="80441" fg:w="281"/><text x="75.5636%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (223 samples, 0.21%)</title><rect x="75.3679%" y="645" width="0.2088%" height="15" fill="rgb(220,157,5)" fg:x="80499" fg:w="223"/><text x="75.6179%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (223 samples, 0.21%)</title><rect x="75.3679%" y="629" width="0.2088%" height="15" fill="rgb(253,137,8)" fg:x="80499" fg:w="223"/><text x="75.6179%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (223 samples, 0.21%)</title><rect x="75.3679%" y="613" width="0.2088%" height="15" fill="rgb(217,137,51)" fg:x="80499" fg:w="223"/><text x="75.6179%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (12 samples, 0.01%)</title><rect x="75.5786%" y="661" width="0.0112%" height="15" fill="rgb(218,209,53)" fg:x="80724" fg:w="12"/><text x="75.8286%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (11 samples, 0.01%)</title><rect x="75.5795%" y="645" width="0.0103%" height="15" fill="rgb(249,137,25)" fg:x="80725" fg:w="11"/><text x="75.8295%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="75.5795%" y="629" width="0.0103%" height="15" fill="rgb(239,155,26)" fg:x="80725" fg:w="11"/><text x="75.8295%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="75.5767%" y="693" width="0.0234%" height="15" fill="rgb(227,85,46)" fg:x="80722" fg:w="25"/><text x="75.8267%" y="703.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (23 samples, 0.02%)</title><rect x="75.5786%" y="677" width="0.0215%" height="15" fill="rgb(251,107,43)" fg:x="80724" fg:w="23"/><text x="75.8286%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="75.6001%" y="693" width="0.0225%" height="15" fill="rgb(234,170,33)" fg:x="80747" fg:w="24"/><text x="75.8501%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="75.6001%" y="677" width="0.0225%" height="15" fill="rgb(206,29,35)" fg:x="80747" fg:w="24"/><text x="75.8501%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="75.6001%" y="661" width="0.0225%" height="15" fill="rgb(227,138,25)" fg:x="80747" fg:w="24"/><text x="75.8501%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="75.6001%" y="645" width="0.0225%" height="15" fill="rgb(249,131,35)" fg:x="80747" fg:w="24"/><text x="75.8501%" y="655.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (24 samples, 0.02%)</title><rect x="75.6001%" y="629" width="0.0225%" height="15" fill="rgb(239,6,40)" fg:x="80747" fg:w="24"/><text x="75.8501%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (14 samples, 0.01%)</title><rect x="75.6095%" y="613" width="0.0131%" height="15" fill="rgb(246,136,47)" fg:x="80757" fg:w="14"/><text x="75.8595%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="75.6095%" y="597" width="0.0131%" height="15" fill="rgb(253,58,26)" fg:x="80757" fg:w="14"/><text x="75.8595%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (667 samples, 0.62%)</title><rect x="75.2434%" y="741" width="0.6245%" height="15" fill="rgb(237,141,10)" fg:x="80366" fg:w="667"/><text x="75.4934%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (665 samples, 0.62%)</title><rect x="75.2453%" y="725" width="0.6226%" height="15" fill="rgb(234,156,12)" fg:x="80368" fg:w="665"/><text x="75.4953%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (645 samples, 0.60%)</title><rect x="75.2640%" y="709" width="0.6039%" height="15" fill="rgb(243,224,36)" fg:x="80388" fg:w="645"/><text x="75.5140%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (258 samples, 0.24%)</title><rect x="75.6264%" y="693" width="0.2416%" height="15" fill="rgb(205,229,51)" fg:x="80775" fg:w="258"/><text x="75.8764%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (258 samples, 0.24%)</title><rect x="75.6264%" y="677" width="0.2416%" height="15" fill="rgb(223,189,4)" fg:x="80775" fg:w="258"/><text x="75.8764%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (899 samples, 0.84%)</title><rect x="75.0356%" y="965" width="0.8417%" height="15" fill="rgb(249,167,54)" fg:x="80144" fg:w="899"/><text x="75.2856%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (899 samples, 0.84%)</title><rect x="75.0356%" y="949" width="0.8417%" height="15" fill="rgb(218,34,28)" fg:x="80144" fg:w="899"/><text x="75.2856%" y="959.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (750 samples, 0.70%)</title><rect x="75.1751%" y="933" width="0.7022%" height="15" fill="rgb(232,109,42)" fg:x="80293" fg:w="750"/><text x="75.4251%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (750 samples, 0.70%)</title><rect x="75.1751%" y="917" width="0.7022%" height="15" fill="rgb(248,214,46)" fg:x="80293" fg:w="750"/><text x="75.4251%" y="927.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (750 samples, 0.70%)</title><rect x="75.1751%" y="901" width="0.7022%" height="15" fill="rgb(244,216,40)" fg:x="80293" fg:w="750"/><text x="75.4251%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (750 samples, 0.70%)</title><rect x="75.1751%" y="885" width="0.7022%" height="15" fill="rgb(231,226,31)" fg:x="80293" fg:w="750"/><text x="75.4251%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (737 samples, 0.69%)</title><rect x="75.1873%" y="869" width="0.6900%" height="15" fill="rgb(238,38,43)" fg:x="80306" fg:w="737"/><text x="75.4373%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (706 samples, 0.66%)</title><rect x="75.2163%" y="853" width="0.6610%" height="15" fill="rgb(208,88,43)" fg:x="80337" fg:w="706"/><text x="75.4663%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (706 samples, 0.66%)</title><rect x="75.2163%" y="837" width="0.6610%" height="15" fill="rgb(205,136,37)" fg:x="80337" fg:w="706"/><text x="75.4663%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (706 samples, 0.66%)</title><rect x="75.2163%" y="821" width="0.6610%" height="15" fill="rgb(237,34,14)" fg:x="80337" fg:w="706"/><text x="75.4663%" y="831.50"></text></g><g><title>alloc::alloc::alloc (703 samples, 0.66%)</title><rect x="75.2191%" y="805" width="0.6582%" height="15" fill="rgb(236,193,44)" fg:x="80340" fg:w="703"/><text x="75.4691%" y="815.50"></text></g><g><title>__rg_alloc (703 samples, 0.66%)</title><rect x="75.2191%" y="789" width="0.6582%" height="15" fill="rgb(231,48,10)" fg:x="80340" fg:w="703"/><text x="75.4691%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (703 samples, 0.66%)</title><rect x="75.2191%" y="773" width="0.6582%" height="15" fill="rgb(213,141,34)" fg:x="80340" fg:w="703"/><text x="75.4691%" y="783.50"></text></g><g><title>rust_alloc (696 samples, 0.65%)</title><rect x="75.2256%" y="757" width="0.6516%" height="15" fill="rgb(249,130,34)" fg:x="80347" fg:w="696"/><text x="75.4756%" y="767.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (1,369 samples, 1.28%)</title><rect x="74.6030%" y="1013" width="1.2817%" height="15" fill="rgb(219,42,41)" fg:x="79682" fg:w="1369"/><text x="74.8530%" y="1023.50"></text></g><g><title>value_trait::Builder::object (1,233 samples, 1.15%)</title><rect x="74.7304%" y="997" width="1.1544%" height="15" fill="rgb(224,100,54)" fg:x="79818" fg:w="1233"/><text x="74.9804%" y="1007.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (1,233 samples, 1.15%)</title><rect x="74.7304%" y="981" width="1.1544%" height="15" fill="rgb(229,200,27)" fg:x="79818" fg:w="1233"/><text x="74.9804%" y="991.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (2,131 samples, 2.00%)</title><rect x="73.8999%" y="1045" width="1.9952%" height="15" fill="rgb(217,118,10)" fg:x="78931" fg:w="2131"/><text x="74.1499%" y="1055.50">&lt;..</text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (1,727 samples, 1.62%)</title><rect x="74.2781%" y="1029" width="1.6169%" height="15" fill="rgb(206,22,3)" fg:x="79335" fg:w="1727"/><text x="74.5281%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::default::Default for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::default (11 samples, 0.01%)</title><rect x="75.8848%" y="1013" width="0.0103%" height="15" fill="rgb(232,163,46)" fg:x="81051" fg:w="11"/><text x="76.1348%" y="1023.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="75.8848%" y="997" width="0.0103%" height="15" fill="rgb(206,95,13)" fg:x="81051" fg:w="11"/><text x="76.1348%" y="1007.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (11 samples, 0.01%)</title><rect x="75.8848%" y="981" width="0.0103%" height="15" fill="rgb(253,154,18)" fg:x="81051" fg:w="11"/><text x="76.1348%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (39 samples, 0.04%)</title><rect x="75.9007%" y="1045" width="0.0365%" height="15" fill="rgb(219,32,23)" fg:x="81068" fg:w="39"/><text x="76.1507%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (39 samples, 0.04%)</title><rect x="75.9007%" y="1029" width="0.0365%" height="15" fill="rgb(230,191,45)" fg:x="81068" fg:w="39"/><text x="76.1507%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (39 samples, 0.04%)</title><rect x="75.9007%" y="1013" width="0.0365%" height="15" fill="rgb(229,64,36)" fg:x="81068" fg:w="39"/><text x="76.1507%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (51 samples, 0.05%)</title><rect x="75.9372%" y="1029" width="0.0477%" height="15" fill="rgb(205,129,25)" fg:x="81107" fg:w="51"/><text x="76.1872%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (51 samples, 0.05%)</title><rect x="75.9372%" y="1013" width="0.0477%" height="15" fill="rgb(254,112,7)" fg:x="81107" fg:w="51"/><text x="76.1872%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (40 samples, 0.04%)</title><rect x="75.9475%" y="997" width="0.0375%" height="15" fill="rgb(226,53,48)" fg:x="81118" fg:w="40"/><text x="76.1975%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (36 samples, 0.03%)</title><rect x="75.9512%" y="981" width="0.0337%" height="15" fill="rgb(214,153,38)" fg:x="81122" fg:w="36"/><text x="76.2012%" y="991.50"></text></g><g><title>core::mem::drop (21 samples, 0.02%)</title><rect x="75.9653%" y="965" width="0.0197%" height="15" fill="rgb(243,101,7)" fg:x="81137" fg:w="21"/><text x="76.2153%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="75.9653%" y="949" width="0.0197%" height="15" fill="rgb(240,140,22)" fg:x="81137" fg:w="21"/><text x="76.2153%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="75.9746%" y="933" width="0.0103%" height="15" fill="rgb(235,114,2)" fg:x="81147" fg:w="11"/><text x="76.2246%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="75.9746%" y="917" width="0.0103%" height="15" fill="rgb(242,59,12)" fg:x="81147" fg:w="11"/><text x="76.2246%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="75.9746%" y="901" width="0.0103%" height="15" fill="rgb(252,134,9)" fg:x="81147" fg:w="11"/><text x="76.2246%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (47 samples, 0.04%)</title><rect x="76.1104%" y="901" width="0.0440%" height="15" fill="rgb(236,4,44)" fg:x="81292" fg:w="47"/><text x="76.3604%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="76.1422%" y="885" width="0.0122%" height="15" fill="rgb(254,172,41)" fg:x="81326" fg:w="13"/><text x="76.3922%" y="895.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="76.1422%" y="869" width="0.0122%" height="15" fill="rgb(244,63,20)" fg:x="81326" fg:w="13"/><text x="76.3922%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="76.1422%" y="853" width="0.0122%" height="15" fill="rgb(250,73,31)" fg:x="81326" fg:w="13"/><text x="76.3922%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="76.1422%" y="837" width="0.0122%" height="15" fill="rgb(241,38,36)" fg:x="81326" fg:w="13"/><text x="76.3922%" y="847.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="76.1422%" y="821" width="0.0122%" height="15" fill="rgb(245,211,2)" fg:x="81326" fg:w="13"/><text x="76.3922%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="76.1422%" y="805" width="0.0122%" height="15" fill="rgb(206,120,28)" fg:x="81326" fg:w="13"/><text x="76.3922%" y="815.50"></text></g><g><title>rust_dealloc (25 samples, 0.02%)</title><rect x="76.1928%" y="805" width="0.0234%" height="15" fill="rgb(211,59,34)" fg:x="81380" fg:w="25"/><text x="76.4428%" y="815.50"></text></g><g><title>sizeclass_to_size (17 samples, 0.02%)</title><rect x="76.2162%" y="805" width="0.0159%" height="15" fill="rgb(233,168,5)" fg:x="81405" fg:w="17"/><text x="76.4662%" y="815.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (17 samples, 0.02%)</title><rect x="76.2162%" y="789" width="0.0159%" height="15" fill="rgb(234,33,13)" fg:x="81405" fg:w="17"/><text x="76.4662%" y="799.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (28 samples, 0.03%)</title><rect x="76.2593%" y="757" width="0.0262%" height="15" fill="rgb(231,150,26)" fg:x="81451" fg:w="28"/><text x="76.5093%" y="767.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="76.2658%" y="741" width="0.0197%" height="15" fill="rgb(217,191,4)" fg:x="81458" fg:w="21"/><text x="76.5158%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (74 samples, 0.07%)</title><rect x="76.2331%" y="805" width="0.0693%" height="15" fill="rgb(246,198,38)" fg:x="81423" fg:w="74"/><text x="76.4831%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (74 samples, 0.07%)</title><rect x="76.2331%" y="789" width="0.0693%" height="15" fill="rgb(245,64,37)" fg:x="81423" fg:w="74"/><text x="76.4831%" y="799.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (74 samples, 0.07%)</title><rect x="76.2331%" y="773" width="0.0693%" height="15" fill="rgb(250,30,36)" fg:x="81423" fg:w="74"/><text x="76.4831%" y="783.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (18 samples, 0.02%)</title><rect x="76.2855%" y="757" width="0.0169%" height="15" fill="rgb(217,86,53)" fg:x="81479" fg:w="18"/><text x="76.5355%" y="767.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (18 samples, 0.02%)</title><rect x="76.2855%" y="741" width="0.0169%" height="15" fill="rgb(228,157,16)" fg:x="81479" fg:w="18"/><text x="76.5355%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (147 samples, 0.14%)</title><rect x="76.1862%" y="837" width="0.1376%" height="15" fill="rgb(217,59,31)" fg:x="81373" fg:w="147"/><text x="76.4362%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (147 samples, 0.14%)</title><rect x="76.1862%" y="821" width="0.1376%" height="15" fill="rgb(237,138,41)" fg:x="81373" fg:w="147"/><text x="76.4362%" y="831.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (23 samples, 0.02%)</title><rect x="76.3023%" y="805" width="0.0215%" height="15" fill="rgb(227,91,49)" fg:x="81497" fg:w="23"/><text x="76.5523%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (155 samples, 0.15%)</title><rect x="76.1862%" y="869" width="0.1451%" height="15" fill="rgb(247,21,44)" fg:x="81373" fg:w="155"/><text x="76.4362%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (155 samples, 0.15%)</title><rect x="76.1862%" y="853" width="0.1451%" height="15" fill="rgb(219,210,51)" fg:x="81373" fg:w="155"/><text x="76.4362%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (183 samples, 0.17%)</title><rect x="76.1703%" y="885" width="0.1713%" height="15" fill="rgb(209,140,6)" fg:x="81356" fg:w="183"/><text x="76.4203%" y="895.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="76.3314%" y="869" width="0.0103%" height="15" fill="rgb(221,188,24)" fg:x="81528" fg:w="11"/><text x="76.5814%" y="879.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="76.3314%" y="853" width="0.0103%" height="15" fill="rgb(232,154,20)" fg:x="81528" fg:w="11"/><text x="76.5814%" y="863.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="76.3314%" y="837" width="0.0103%" height="15" fill="rgb(244,137,50)" fg:x="81528" fg:w="11"/><text x="76.5814%" y="847.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="76.3314%" y="821" width="0.0103%" height="15" fill="rgb(225,185,43)" fg:x="81528" fg:w="11"/><text x="76.5814%" y="831.50"></text></g><g><title>rust_dealloc (213 samples, 0.20%)</title><rect x="76.1544%" y="901" width="0.1994%" height="15" fill="rgb(213,205,38)" fg:x="81339" fg:w="213"/><text x="76.4044%" y="911.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="76.3417%" y="885" width="0.0122%" height="15" fill="rgb(236,73,12)" fg:x="81539" fg:w="13"/><text x="76.5917%" y="895.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (11 samples, 0.01%)</title><rect x="76.3557%" y="885" width="0.0103%" height="15" fill="rgb(235,219,13)" fg:x="81554" fg:w="11"/><text x="76.6057%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (292 samples, 0.27%)</title><rect x="76.0954%" y="949" width="0.2734%" height="15" fill="rgb(218,59,36)" fg:x="81276" fg:w="292"/><text x="76.3454%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (292 samples, 0.27%)</title><rect x="76.0954%" y="933" width="0.2734%" height="15" fill="rgb(205,110,39)" fg:x="81276" fg:w="292"/><text x="76.3454%" y="943.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (292 samples, 0.27%)</title><rect x="76.0954%" y="917" width="0.2734%" height="15" fill="rgb(218,206,42)" fg:x="81276" fg:w="292"/><text x="76.3454%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (16 samples, 0.01%)</title><rect x="76.3538%" y="901" width="0.0150%" height="15" fill="rgb(248,125,24)" fg:x="81552" fg:w="16"/><text x="76.6038%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (338 samples, 0.32%)</title><rect x="76.0627%" y="965" width="0.3165%" height="15" fill="rgb(242,28,27)" fg:x="81241" fg:w="338"/><text x="76.3127%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="76.3688%" y="949" width="0.0103%" height="15" fill="rgb(216,228,15)" fg:x="81568" fg:w="11"/><text x="76.6188%" y="959.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="76.3688%" y="933" width="0.0103%" height="15" fill="rgb(235,116,46)" fg:x="81568" fg:w="11"/><text x="76.6188%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="76.3688%" y="917" width="0.0103%" height="15" fill="rgb(224,18,32)" fg:x="81568" fg:w="11"/><text x="76.6188%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="76.3688%" y="901" width="0.0103%" height="15" fill="rgb(252,5,12)" fg:x="81568" fg:w="11"/><text x="76.6188%" y="911.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="76.3688%" y="885" width="0.0103%" height="15" fill="rgb(251,36,5)" fg:x="81568" fg:w="11"/><text x="76.6188%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="76.3688%" y="869" width="0.0103%" height="15" fill="rgb(217,53,14)" fg:x="81568" fg:w="11"/><text x="76.6188%" y="879.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="76.4203%" y="869" width="0.0103%" height="15" fill="rgb(215,86,45)" fg:x="81623" fg:w="11"/><text x="76.6703%" y="879.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="76.4203%" y="853" width="0.0103%" height="15" fill="rgb(242,169,11)" fg:x="81623" fg:w="11"/><text x="76.6703%" y="863.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="76.4718%" y="821" width="0.0140%" height="15" fill="rgb(211,213,45)" fg:x="81678" fg:w="15"/><text x="76.7218%" y="831.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="76.4727%" y="805" width="0.0131%" height="15" fill="rgb(205,88,11)" fg:x="81679" fg:w="14"/><text x="76.7227%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (76 samples, 0.07%)</title><rect x="76.4343%" y="869" width="0.0712%" height="15" fill="rgb(252,69,26)" fg:x="81638" fg:w="76"/><text x="76.6843%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (76 samples, 0.07%)</title><rect x="76.4343%" y="853" width="0.0712%" height="15" fill="rgb(246,123,37)" fg:x="81638" fg:w="76"/><text x="76.6843%" y="863.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (74 samples, 0.07%)</title><rect x="76.4362%" y="837" width="0.0693%" height="15" fill="rgb(212,205,5)" fg:x="81640" fg:w="74"/><text x="76.6862%" y="847.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (21 samples, 0.02%)</title><rect x="76.4858%" y="821" width="0.0197%" height="15" fill="rgb(253,148,0)" fg:x="81693" fg:w="21"/><text x="76.7358%" y="831.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (21 samples, 0.02%)</title><rect x="76.4858%" y="805" width="0.0197%" height="15" fill="rgb(239,22,4)" fg:x="81693" fg:w="21"/><text x="76.7358%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (108 samples, 0.10%)</title><rect x="76.4128%" y="901" width="0.1011%" height="15" fill="rgb(226,26,53)" fg:x="81615" fg:w="108"/><text x="76.6628%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (108 samples, 0.10%)</title><rect x="76.4128%" y="885" width="0.1011%" height="15" fill="rgb(225,229,45)" fg:x="81615" fg:w="108"/><text x="76.6628%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (120 samples, 0.11%)</title><rect x="76.4128%" y="933" width="0.1124%" height="15" fill="rgb(220,60,37)" fg:x="81615" fg:w="120"/><text x="76.6628%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (120 samples, 0.11%)</title><rect x="76.4128%" y="917" width="0.1124%" height="15" fill="rgb(217,180,35)" fg:x="81615" fg:w="120"/><text x="76.6628%" y="927.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="76.5139%" y="901" width="0.0112%" height="15" fill="rgb(229,7,53)" fg:x="81723" fg:w="12"/><text x="76.7639%" y="911.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="76.5139%" y="885" width="0.0112%" height="15" fill="rgb(254,137,3)" fg:x="81723" fg:w="12"/><text x="76.7639%" y="895.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="76.5139%" y="869" width="0.0112%" height="15" fill="rgb(215,140,41)" fg:x="81723" fg:w="12"/><text x="76.7639%" y="879.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="76.5139%" y="853" width="0.0112%" height="15" fill="rgb(250,80,15)" fg:x="81723" fg:w="12"/><text x="76.7639%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (146 samples, 0.14%)</title><rect x="76.3978%" y="949" width="0.1367%" height="15" fill="rgb(252,191,6)" fg:x="81599" fg:w="146"/><text x="76.6478%" y="959.50"></text></g><g><title>rust_dealloc (173 samples, 0.16%)</title><rect x="76.3791%" y="965" width="0.1620%" height="15" fill="rgb(246,217,18)" fg:x="81579" fg:w="173"/><text x="76.6291%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (599 samples, 0.56%)</title><rect x="75.9849%" y="1013" width="0.5608%" height="15" fill="rgb(223,93,7)" fg:x="81158" fg:w="599"/><text x="76.2349%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (589 samples, 0.55%)</title><rect x="75.9943%" y="997" width="0.5515%" height="15" fill="rgb(225,55,52)" fg:x="81168" fg:w="589"/><text x="76.2443%" y="1007.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (589 samples, 0.55%)</title><rect x="75.9943%" y="981" width="0.5515%" height="15" fill="rgb(240,31,24)" fg:x="81168" fg:w="589"/><text x="76.2443%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (694 samples, 0.65%)</title><rect x="75.9372%" y="1045" width="0.6498%" height="15" fill="rgb(205,56,52)" fg:x="81107" fg:w="694"/><text x="76.1872%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (643 samples, 0.60%)</title><rect x="75.9849%" y="1029" width="0.6020%" height="15" fill="rgb(246,146,12)" fg:x="81158" fg:w="643"/><text x="76.2349%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (44 samples, 0.04%)</title><rect x="76.5458%" y="1013" width="0.0412%" height="15" fill="rgb(239,84,36)" fg:x="81757" fg:w="44"/><text x="76.7958%" y="1023.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (3,393 samples, 3.18%)</title><rect x="73.4346%" y="1061" width="3.1767%" height="15" fill="rgb(207,41,40)" fg:x="78434" fg:w="3393"/><text x="73.6846%" y="1071.50">tre..</text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (26 samples, 0.02%)</title><rect x="76.5870%" y="1045" width="0.0243%" height="15" fill="rgb(241,179,25)" fg:x="81801" fg:w="26"/><text x="76.8370%" y="1055.50"></text></g><g><title>tremor_pipeline::EventId::new (14 samples, 0.01%)</title><rect x="76.5982%" y="1029" width="0.0131%" height="15" fill="rgb(210,0,34)" fg:x="81813" fg:w="14"/><text x="76.8482%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (61 samples, 0.06%)</title><rect x="77.0111%" y="885" width="0.0571%" height="15" fill="rgb(225,217,29)" fg:x="82254" fg:w="61"/><text x="77.2611%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (61 samples, 0.06%)</title><rect x="77.0111%" y="869" width="0.0571%" height="15" fill="rgb(216,191,38)" fg:x="82254" fg:w="61"/><text x="77.2611%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (53 samples, 0.05%)</title><rect x="77.0186%" y="853" width="0.0496%" height="15" fill="rgb(232,140,52)" fg:x="82262" fg:w="53"/><text x="77.2686%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (44 samples, 0.04%)</title><rect x="77.0270%" y="837" width="0.0412%" height="15" fill="rgb(223,158,51)" fg:x="82271" fg:w="44"/><text x="77.2770%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (44 samples, 0.04%)</title><rect x="77.0270%" y="821" width="0.0412%" height="15" fill="rgb(235,29,51)" fg:x="82271" fg:w="44"/><text x="77.2770%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (44 samples, 0.04%)</title><rect x="77.0270%" y="805" width="0.0412%" height="15" fill="rgb(215,181,18)" fg:x="82271" fg:w="44"/><text x="77.2770%" y="815.50"></text></g><g><title>snmalloc::FreeListIter::empty (12 samples, 0.01%)</title><rect x="77.0757%" y="885" width="0.0112%" height="15" fill="rgb(227,125,34)" fg:x="82323" fg:w="12"/><text x="77.3257%" y="895.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (12 samples, 0.01%)</title><rect x="77.0757%" y="869" width="0.0112%" height="15" fill="rgb(230,197,49)" fg:x="82323" fg:w="12"/><text x="77.3257%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (242 samples, 0.23%)</title><rect x="77.0008%" y="933" width="0.2266%" height="15" fill="rgb(239,141,16)" fg:x="82243" fg:w="242"/><text x="77.2508%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (237 samples, 0.22%)</title><rect x="77.0055%" y="917" width="0.2219%" height="15" fill="rgb(225,105,43)" fg:x="82248" fg:w="237"/><text x="77.2555%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (234 samples, 0.22%)</title><rect x="77.0083%" y="901" width="0.2191%" height="15" fill="rgb(214,131,14)" fg:x="82251" fg:w="234"/><text x="77.2583%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (150 samples, 0.14%)</title><rect x="77.0869%" y="885" width="0.1404%" height="15" fill="rgb(229,177,11)" fg:x="82335" fg:w="150"/><text x="77.3369%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (150 samples, 0.14%)</title><rect x="77.0869%" y="869" width="0.1404%" height="15" fill="rgb(231,180,14)" fg:x="82335" fg:w="150"/><text x="77.3369%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (258 samples, 0.24%)</title><rect x="76.9952%" y="1045" width="0.2416%" height="15" fill="rgb(232,88,2)" fg:x="82237" fg:w="258"/><text x="77.2452%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (258 samples, 0.24%)</title><rect x="76.9952%" y="1029" width="0.2416%" height="15" fill="rgb(205,220,8)" fg:x="82237" fg:w="258"/><text x="77.2452%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (258 samples, 0.24%)</title><rect x="76.9952%" y="1013" width="0.2416%" height="15" fill="rgb(225,23,53)" fg:x="82237" fg:w="258"/><text x="77.2452%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (258 samples, 0.24%)</title><rect x="76.9952%" y="997" width="0.2416%" height="15" fill="rgb(213,62,29)" fg:x="82237" fg:w="258"/><text x="77.2452%" y="1007.50"></text></g><g><title>__rg_alloc (258 samples, 0.24%)</title><rect x="76.9952%" y="981" width="0.2416%" height="15" fill="rgb(227,75,7)" fg:x="82237" fg:w="258"/><text x="77.2452%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (258 samples, 0.24%)</title><rect x="76.9952%" y="965" width="0.2416%" height="15" fill="rgb(207,105,14)" fg:x="82237" fg:w="258"/><text x="77.2452%" y="975.50"></text></g><g><title>rust_alloc (254 samples, 0.24%)</title><rect x="76.9989%" y="949" width="0.2378%" height="15" fill="rgb(245,62,29)" fg:x="82241" fg:w="254"/><text x="77.2489%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="77.2452%" y="1045" width="0.0122%" height="15" fill="rgb(236,202,4)" fg:x="82504" fg:w="13"/><text x="77.4952%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="77.2452%" y="1029" width="0.0122%" height="15" fill="rgb(250,67,1)" fg:x="82504" fg:w="13"/><text x="77.4952%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="77.2452%" y="1013" width="0.0122%" height="15" fill="rgb(253,115,44)" fg:x="82504" fg:w="13"/><text x="77.4952%" y="1023.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (697 samples, 0.65%)</title><rect x="76.6113%" y="1061" width="0.6526%" height="15" fill="rgb(251,139,18)" fg:x="81827" fg:w="697"/><text x="76.8613%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (350 samples, 0.33%)</title><rect x="77.5513%" y="1045" width="0.3277%" height="15" fill="rgb(218,22,32)" fg:x="82831" fg:w="350"/><text x="77.8013%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="77.9090%" y="821" width="0.0112%" height="15" fill="rgb(243,53,5)" fg:x="83213" fg:w="12"/><text x="78.1590%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (71 samples, 0.07%)</title><rect x="77.9090%" y="853" width="0.0665%" height="15" fill="rgb(227,56,16)" fg:x="83213" fg:w="71"/><text x="78.1590%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (71 samples, 0.07%)</title><rect x="77.9090%" y="837" width="0.0665%" height="15" fill="rgb(245,53,0)" fg:x="83213" fg:w="71"/><text x="78.1590%" y="847.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (59 samples, 0.06%)</title><rect x="77.9202%" y="821" width="0.0552%" height="15" fill="rgb(216,170,35)" fg:x="83225" fg:w="59"/><text x="78.1702%" y="831.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (50 samples, 0.05%)</title><rect x="77.9286%" y="805" width="0.0468%" height="15" fill="rgb(211,200,8)" fg:x="83234" fg:w="50"/><text x="78.1786%" y="815.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (50 samples, 0.05%)</title><rect x="77.9286%" y="789" width="0.0468%" height="15" fill="rgb(228,204,44)" fg:x="83234" fg:w="50"/><text x="78.1786%" y="799.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (50 samples, 0.05%)</title><rect x="77.9286%" y="773" width="0.0468%" height="15" fill="rgb(214,121,17)" fg:x="83234" fg:w="50"/><text x="78.1786%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (120 samples, 0.11%)</title><rect x="77.9033%" y="901" width="0.1124%" height="15" fill="rgb(233,64,38)" fg:x="83207" fg:w="120"/><text x="78.1533%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (118 samples, 0.11%)</title><rect x="77.9052%" y="885" width="0.1105%" height="15" fill="rgb(253,54,19)" fg:x="83209" fg:w="118"/><text x="78.1552%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (114 samples, 0.11%)</title><rect x="77.9090%" y="869" width="0.1067%" height="15" fill="rgb(253,94,18)" fg:x="83213" fg:w="114"/><text x="78.1590%" y="879.50"></text></g><g><title>snmalloc::FreeListIter::take (26 samples, 0.02%)</title><rect x="77.9913%" y="853" width="0.0243%" height="15" fill="rgb(227,57,52)" fg:x="83301" fg:w="26"/><text x="78.2413%" y="863.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (26 samples, 0.02%)</title><rect x="77.9913%" y="837" width="0.0243%" height="15" fill="rgb(230,228,50)" fg:x="83301" fg:w="26"/><text x="78.2413%" y="847.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (152 samples, 0.14%)</title><rect x="77.8790%" y="1045" width="0.1423%" height="15" fill="rgb(217,205,27)" fg:x="83181" fg:w="152"/><text x="78.1290%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (152 samples, 0.14%)</title><rect x="77.8790%" y="1029" width="0.1423%" height="15" fill="rgb(252,71,50)" fg:x="83181" fg:w="152"/><text x="78.1290%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (134 samples, 0.13%)</title><rect x="77.8959%" y="1013" width="0.1255%" height="15" fill="rgb(209,86,4)" fg:x="83199" fg:w="134"/><text x="78.1459%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (134 samples, 0.13%)</title><rect x="77.8959%" y="997" width="0.1255%" height="15" fill="rgb(229,94,0)" fg:x="83199" fg:w="134"/><text x="78.1459%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (134 samples, 0.13%)</title><rect x="77.8959%" y="981" width="0.1255%" height="15" fill="rgb(252,223,21)" fg:x="83199" fg:w="134"/><text x="78.1459%" y="991.50"></text></g><g><title>alloc::alloc::alloc (133 samples, 0.12%)</title><rect x="77.8968%" y="965" width="0.1245%" height="15" fill="rgb(230,210,4)" fg:x="83200" fg:w="133"/><text x="78.1468%" y="975.50"></text></g><g><title>__rg_alloc (133 samples, 0.12%)</title><rect x="77.8968%" y="949" width="0.1245%" height="15" fill="rgb(240,149,38)" fg:x="83200" fg:w="133"/><text x="78.1468%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (133 samples, 0.12%)</title><rect x="77.8968%" y="933" width="0.1245%" height="15" fill="rgb(254,105,20)" fg:x="83200" fg:w="133"/><text x="78.1468%" y="943.50"></text></g><g><title>rust_alloc (128 samples, 0.12%)</title><rect x="77.9015%" y="917" width="0.1198%" height="15" fill="rgb(253,87,46)" fg:x="83205" fg:w="128"/><text x="78.1515%" y="927.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="78.0279%" y="933" width="0.0112%" height="15" fill="rgb(253,116,33)" fg:x="83340" fg:w="12"/><text x="78.2779%" y="943.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="78.0391%" y="901" width="0.0112%" height="15" fill="rgb(229,198,5)" fg:x="83352" fg:w="12"/><text x="78.2891%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="78.0616%" y="885" width="0.0187%" height="15" fill="rgb(242,38,37)" fg:x="83376" fg:w="20"/><text x="78.3116%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (20 samples, 0.02%)</title><rect x="78.0616%" y="869" width="0.0187%" height="15" fill="rgb(242,69,53)" fg:x="83376" fg:w="20"/><text x="78.3116%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (20 samples, 0.02%)</title><rect x="78.0616%" y="853" width="0.0187%" height="15" fill="rgb(249,80,16)" fg:x="83376" fg:w="20"/><text x="78.3116%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (17 samples, 0.02%)</title><rect x="78.0644%" y="837" width="0.0159%" height="15" fill="rgb(206,128,11)" fg:x="83379" fg:w="17"/><text x="78.3144%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="78.0644%" y="821" width="0.0159%" height="15" fill="rgb(212,35,20)" fg:x="83379" fg:w="17"/><text x="78.3144%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="78.0644%" y="805" width="0.0159%" height="15" fill="rgb(236,79,13)" fg:x="83379" fg:w="17"/><text x="78.3144%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (105 samples, 0.10%)</title><rect x="78.0213%" y="1045" width="0.0983%" height="15" fill="rgb(233,123,3)" fg:x="83333" fg:w="105"/><text x="78.2713%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (105 samples, 0.10%)</title><rect x="78.0213%" y="1029" width="0.0983%" height="15" fill="rgb(214,93,52)" fg:x="83333" fg:w="105"/><text x="78.2713%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (105 samples, 0.10%)</title><rect x="78.0213%" y="1013" width="0.0983%" height="15" fill="rgb(251,37,40)" fg:x="83333" fg:w="105"/><text x="78.2713%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (104 samples, 0.10%)</title><rect x="78.0222%" y="997" width="0.0974%" height="15" fill="rgb(227,80,54)" fg:x="83334" fg:w="104"/><text x="78.2722%" y="1007.50"></text></g><g><title>__rg_alloc (104 samples, 0.10%)</title><rect x="78.0222%" y="981" width="0.0974%" height="15" fill="rgb(254,48,11)" fg:x="83334" fg:w="104"/><text x="78.2722%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (104 samples, 0.10%)</title><rect x="78.0222%" y="965" width="0.0974%" height="15" fill="rgb(235,193,26)" fg:x="83334" fg:w="104"/><text x="78.2722%" y="975.50"></text></g><g><title>rust_alloc (98 samples, 0.09%)</title><rect x="78.0279%" y="949" width="0.0918%" height="15" fill="rgb(229,99,21)" fg:x="83340" fg:w="98"/><text x="78.2779%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="78.0391%" y="933" width="0.0805%" height="15" fill="rgb(211,140,41)" fg:x="83352" fg:w="86"/><text x="78.2891%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="78.0391%" y="917" width="0.0805%" height="15" fill="rgb(240,227,30)" fg:x="83352" fg:w="86"/><text x="78.2891%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (74 samples, 0.07%)</title><rect x="78.0503%" y="901" width="0.0693%" height="15" fill="rgb(215,224,45)" fg:x="83364" fg:w="74"/><text x="78.3003%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (39 samples, 0.04%)</title><rect x="78.0831%" y="885" width="0.0365%" height="15" fill="rgb(206,123,31)" fg:x="83399" fg:w="39"/><text x="78.3331%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (39 samples, 0.04%)</title><rect x="78.0831%" y="869" width="0.0365%" height="15" fill="rgb(210,138,16)" fg:x="83399" fg:w="39"/><text x="78.3331%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (53 samples, 0.05%)</title><rect x="78.4894%" y="693" width="0.0496%" height="15" fill="rgb(228,57,28)" fg:x="83833" fg:w="53"/><text x="78.7394%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (53 samples, 0.05%)</title><rect x="78.4894%" y="677" width="0.0496%" height="15" fill="rgb(242,170,10)" fg:x="83833" fg:w="53"/><text x="78.7394%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (46 samples, 0.04%)</title><rect x="78.4960%" y="661" width="0.0431%" height="15" fill="rgb(228,214,39)" fg:x="83840" fg:w="46"/><text x="78.7460%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (38 samples, 0.04%)</title><rect x="78.5035%" y="645" width="0.0356%" height="15" fill="rgb(218,179,33)" fg:x="83848" fg:w="38"/><text x="78.7535%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (38 samples, 0.04%)</title><rect x="78.5035%" y="629" width="0.0356%" height="15" fill="rgb(235,193,39)" fg:x="83848" fg:w="38"/><text x="78.7535%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (38 samples, 0.04%)</title><rect x="78.5035%" y="613" width="0.0356%" height="15" fill="rgb(219,221,36)" fg:x="83848" fg:w="38"/><text x="78.7535%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="78.5456%" y="693" width="0.0112%" height="15" fill="rgb(248,218,19)" fg:x="83893" fg:w="12"/><text x="78.7956%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="78.5456%" y="677" width="0.0112%" height="15" fill="rgb(205,50,9)" fg:x="83893" fg:w="12"/><text x="78.7956%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="78.5456%" y="661" width="0.0112%" height="15" fill="rgb(238,81,28)" fg:x="83893" fg:w="12"/><text x="78.7956%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="78.5456%" y="645" width="0.0112%" height="15" fill="rgb(235,110,19)" fg:x="83893" fg:w="12"/><text x="78.7956%" y="655.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (12 samples, 0.01%)</title><rect x="78.5456%" y="629" width="0.0112%" height="15" fill="rgb(214,7,14)" fg:x="83893" fg:w="12"/><text x="78.7956%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (181 samples, 0.17%)</title><rect x="78.4754%" y="741" width="0.1695%" height="15" fill="rgb(211,77,3)" fg:x="83818" fg:w="181"/><text x="78.7254%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (180 samples, 0.17%)</title><rect x="78.4763%" y="725" width="0.1685%" height="15" fill="rgb(229,5,9)" fg:x="83819" fg:w="180"/><text x="78.7263%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (174 samples, 0.16%)</title><rect x="78.4819%" y="709" width="0.1629%" height="15" fill="rgb(225,90,11)" fg:x="83825" fg:w="174"/><text x="78.7319%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (94 samples, 0.09%)</title><rect x="78.5568%" y="693" width="0.0880%" height="15" fill="rgb(242,56,8)" fg:x="83905" fg:w="94"/><text x="78.8068%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (94 samples, 0.09%)</title><rect x="78.5568%" y="677" width="0.0880%" height="15" fill="rgb(249,212,39)" fg:x="83905" fg:w="94"/><text x="78.8068%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (204 samples, 0.19%)</title><rect x="78.4548%" y="901" width="0.1910%" height="15" fill="rgb(236,90,9)" fg:x="83796" fg:w="204"/><text x="78.7048%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (195 samples, 0.18%)</title><rect x="78.4632%" y="885" width="0.1826%" height="15" fill="rgb(206,88,35)" fg:x="83805" fg:w="195"/><text x="78.7132%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (195 samples, 0.18%)</title><rect x="78.4632%" y="869" width="0.1826%" height="15" fill="rgb(205,126,30)" fg:x="83805" fg:w="195"/><text x="78.7132%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (189 samples, 0.18%)</title><rect x="78.4688%" y="853" width="0.1770%" height="15" fill="rgb(230,176,12)" fg:x="83811" fg:w="189"/><text x="78.7188%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (189 samples, 0.18%)</title><rect x="78.4688%" y="837" width="0.1770%" height="15" fill="rgb(243,19,9)" fg:x="83811" fg:w="189"/><text x="78.7188%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (189 samples, 0.18%)</title><rect x="78.4688%" y="821" width="0.1770%" height="15" fill="rgb(245,171,17)" fg:x="83811" fg:w="189"/><text x="78.7188%" y="831.50"></text></g><g><title>alloc::alloc::alloc (189 samples, 0.18%)</title><rect x="78.4688%" y="805" width="0.1770%" height="15" fill="rgb(227,52,21)" fg:x="83811" fg:w="189"/><text x="78.7188%" y="815.50"></text></g><g><title>__rg_alloc (189 samples, 0.18%)</title><rect x="78.4688%" y="789" width="0.1770%" height="15" fill="rgb(238,69,14)" fg:x="83811" fg:w="189"/><text x="78.7188%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (189 samples, 0.18%)</title><rect x="78.4688%" y="773" width="0.1770%" height="15" fill="rgb(241,156,39)" fg:x="83811" fg:w="189"/><text x="78.7188%" y="783.50"></text></g><g><title>rust_alloc (186 samples, 0.17%)</title><rect x="78.4717%" y="757" width="0.1741%" height="15" fill="rgb(212,227,28)" fg:x="83814" fg:w="186"/><text x="78.7217%" y="767.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (248 samples, 0.23%)</title><rect x="78.4398%" y="981" width="0.2322%" height="15" fill="rgb(209,118,27)" fg:x="83780" fg:w="248"/><text x="78.6898%" y="991.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (243 samples, 0.23%)</title><rect x="78.4445%" y="965" width="0.2275%" height="15" fill="rgb(226,102,5)" fg:x="83785" fg:w="243"/><text x="78.6945%" y="975.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (232 samples, 0.22%)</title><rect x="78.4548%" y="949" width="0.2172%" height="15" fill="rgb(223,34,3)" fg:x="83796" fg:w="232"/><text x="78.7048%" y="959.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (232 samples, 0.22%)</title><rect x="78.4548%" y="933" width="0.2172%" height="15" fill="rgb(221,81,38)" fg:x="83796" fg:w="232"/><text x="78.7048%" y="943.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (232 samples, 0.22%)</title><rect x="78.4548%" y="917" width="0.2172%" height="15" fill="rgb(236,219,28)" fg:x="83796" fg:w="232"/><text x="78.7048%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (28 samples, 0.03%)</title><rect x="78.6458%" y="901" width="0.0262%" height="15" fill="rgb(213,200,14)" fg:x="84000" fg:w="28"/><text x="78.8958%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (28 samples, 0.03%)</title><rect x="78.6458%" y="885" width="0.0262%" height="15" fill="rgb(240,33,19)" fg:x="84000" fg:w="28"/><text x="78.8958%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (28 samples, 0.03%)</title><rect x="78.6458%" y="869" width="0.0262%" height="15" fill="rgb(233,113,27)" fg:x="84000" fg:w="28"/><text x="78.8958%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (27 samples, 0.03%)</title><rect x="78.6467%" y="853" width="0.0253%" height="15" fill="rgb(220,221,18)" fg:x="84001" fg:w="27"/><text x="78.8967%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (24 samples, 0.02%)</title><rect x="79.0166%" y="933" width="0.0225%" height="15" fill="rgb(238,92,8)" fg:x="84396" fg:w="24"/><text x="79.2666%" y="943.50"></text></g><g><title>std::collections::hash::map::RandomState::new (24 samples, 0.02%)</title><rect x="79.0166%" y="917" width="0.0225%" height="15" fill="rgb(222,164,16)" fg:x="84396" fg:w="24"/><text x="79.2666%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24 samples, 0.02%)</title><rect x="79.0166%" y="901" width="0.0225%" height="15" fill="rgb(241,119,3)" fg:x="84396" fg:w="24"/><text x="79.2666%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 0.02%)</title><rect x="79.0166%" y="885" width="0.0225%" height="15" fill="rgb(241,44,8)" fg:x="84396" fg:w="24"/><text x="79.2666%" y="895.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (18 samples, 0.02%)</title><rect x="79.0222%" y="869" width="0.0169%" height="15" fill="rgb(230,36,40)" fg:x="84402" fg:w="18"/><text x="79.2722%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="79.0802%" y="629" width="0.0112%" height="15" fill="rgb(243,16,36)" fg:x="84464" fg:w="12"/><text x="79.3302%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="79.0802%" y="613" width="0.0112%" height="15" fill="rgb(231,4,26)" fg:x="84464" fg:w="12"/><text x="79.3302%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (20 samples, 0.02%)</title><rect x="79.0802%" y="645" width="0.0187%" height="15" fill="rgb(240,9,31)" fg:x="84464" fg:w="20"/><text x="79.3302%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (27 samples, 0.03%)</title><rect x="79.0755%" y="661" width="0.0253%" height="15" fill="rgb(207,173,15)" fg:x="84459" fg:w="27"/><text x="79.3255%" y="671.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (16 samples, 0.01%)</title><rect x="79.1186%" y="645" width="0.0150%" height="15" fill="rgb(224,192,53)" fg:x="84505" fg:w="16"/><text x="79.3686%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (193 samples, 0.18%)</title><rect x="79.0755%" y="693" width="0.1807%" height="15" fill="rgb(223,67,28)" fg:x="84459" fg:w="193"/><text x="79.3255%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (193 samples, 0.18%)</title><rect x="79.0755%" y="677" width="0.1807%" height="15" fill="rgb(211,20,47)" fg:x="84459" fg:w="193"/><text x="79.3255%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (166 samples, 0.16%)</title><rect x="79.1008%" y="661" width="0.1554%" height="15" fill="rgb(240,228,2)" fg:x="84486" fg:w="166"/><text x="79.3508%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (131 samples, 0.12%)</title><rect x="79.1336%" y="645" width="0.1226%" height="15" fill="rgb(248,151,12)" fg:x="84521" fg:w="131"/><text x="79.3836%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (131 samples, 0.12%)</title><rect x="79.1336%" y="629" width="0.1226%" height="15" fill="rgb(244,8,39)" fg:x="84521" fg:w="131"/><text x="79.3836%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (131 samples, 0.12%)</title><rect x="79.1336%" y="613" width="0.1226%" height="15" fill="rgb(222,26,8)" fg:x="84521" fg:w="131"/><text x="79.3836%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (261 samples, 0.24%)</title><rect x="79.0662%" y="741" width="0.2444%" height="15" fill="rgb(213,106,44)" fg:x="84449" fg:w="261"/><text x="79.3162%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (260 samples, 0.24%)</title><rect x="79.0671%" y="725" width="0.2434%" height="15" fill="rgb(214,129,20)" fg:x="84450" fg:w="260"/><text x="79.3171%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (251 samples, 0.24%)</title><rect x="79.0755%" y="709" width="0.2350%" height="15" fill="rgb(212,32,13)" fg:x="84459" fg:w="251"/><text x="79.3255%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (41 samples, 0.04%)</title><rect x="79.2722%" y="693" width="0.0384%" height="15" fill="rgb(208,168,33)" fg:x="84669" fg:w="41"/><text x="79.5222%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (41 samples, 0.04%)</title><rect x="79.2722%" y="677" width="0.0384%" height="15" fill="rgb(231,207,8)" fg:x="84669" fg:w="41"/><text x="79.5222%" y="687.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (323 samples, 0.30%)</title><rect x="79.0166%" y="949" width="0.3024%" height="15" fill="rgb(235,219,23)" fg:x="84396" fg:w="323"/><text x="79.2666%" y="959.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (299 samples, 0.28%)</title><rect x="79.0390%" y="933" width="0.2799%" height="15" fill="rgb(226,216,26)" fg:x="84420" fg:w="299"/><text x="79.2890%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (299 samples, 0.28%)</title><rect x="79.0390%" y="917" width="0.2799%" height="15" fill="rgb(239,137,16)" fg:x="84420" fg:w="299"/><text x="79.2890%" y="927.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (293 samples, 0.27%)</title><rect x="79.0446%" y="901" width="0.2743%" height="15" fill="rgb(207,12,36)" fg:x="84426" fg:w="293"/><text x="79.2946%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (293 samples, 0.27%)</title><rect x="79.0446%" y="885" width="0.2743%" height="15" fill="rgb(210,214,24)" fg:x="84426" fg:w="293"/><text x="79.2946%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (293 samples, 0.27%)</title><rect x="79.0446%" y="869" width="0.2743%" height="15" fill="rgb(206,56,30)" fg:x="84426" fg:w="293"/><text x="79.2946%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (281 samples, 0.26%)</title><rect x="79.0559%" y="853" width="0.2631%" height="15" fill="rgb(228,143,26)" fg:x="84438" fg:w="281"/><text x="79.3059%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (276 samples, 0.26%)</title><rect x="79.0606%" y="837" width="0.2584%" height="15" fill="rgb(216,218,46)" fg:x="84443" fg:w="276"/><text x="79.3106%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (276 samples, 0.26%)</title><rect x="79.0606%" y="821" width="0.2584%" height="15" fill="rgb(206,6,19)" fg:x="84443" fg:w="276"/><text x="79.3106%" y="831.50"></text></g><g><title>alloc::alloc::alloc (276 samples, 0.26%)</title><rect x="79.0606%" y="805" width="0.2584%" height="15" fill="rgb(239,177,51)" fg:x="84443" fg:w="276"/><text x="79.3106%" y="815.50"></text></g><g><title>__rg_alloc (276 samples, 0.26%)</title><rect x="79.0606%" y="789" width="0.2584%" height="15" fill="rgb(216,55,25)" fg:x="84443" fg:w="276"/><text x="79.3106%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (276 samples, 0.26%)</title><rect x="79.0606%" y="773" width="0.2584%" height="15" fill="rgb(231,163,29)" fg:x="84443" fg:w="276"/><text x="79.3106%" y="783.50"></text></g><g><title>rust_alloc (275 samples, 0.26%)</title><rect x="79.0615%" y="757" width="0.2575%" height="15" fill="rgb(232,149,50)" fg:x="84444" fg:w="275"/><text x="79.3115%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (11 samples, 0.01%)</title><rect x="79.3414%" y="901" width="0.0103%" height="15" fill="rgb(223,142,48)" fg:x="84743" fg:w="11"/><text x="79.5914%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="79.3414%" y="885" width="0.0103%" height="15" fill="rgb(245,83,23)" fg:x="84743" fg:w="11"/><text x="79.5914%" y="895.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (11 samples, 0.01%)</title><rect x="79.3414%" y="869" width="0.0103%" height="15" fill="rgb(224,63,2)" fg:x="84743" fg:w="11"/><text x="79.5914%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="79.3648%" y="805" width="0.0169%" height="15" fill="rgb(218,65,53)" fg:x="84768" fg:w="18"/><text x="79.6148%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="79.3648%" y="869" width="0.0187%" height="15" fill="rgb(221,84,29)" fg:x="84768" fg:w="20"/><text x="79.6148%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="79.3648%" y="853" width="0.0187%" height="15" fill="rgb(234,0,32)" fg:x="84768" fg:w="20"/><text x="79.6148%" y="863.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="79.3648%" y="837" width="0.0187%" height="15" fill="rgb(206,20,16)" fg:x="84768" fg:w="20"/><text x="79.6148%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="79.3648%" y="821" width="0.0187%" height="15" fill="rgb(244,172,18)" fg:x="84768" fg:w="20"/><text x="79.6148%" y="831.50"></text></g><g><title>abi_stable::erased_types::iterator::next (34 samples, 0.03%)</title><rect x="79.3574%" y="901" width="0.0318%" height="15" fill="rgb(254,133,1)" fg:x="84760" fg:w="34"/><text x="79.6074%" y="911.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (26 samples, 0.02%)</title><rect x="79.3648%" y="885" width="0.0243%" height="15" fill="rgb(222,206,41)" fg:x="84768" fg:w="26"/><text x="79.6148%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 0.07%)</title><rect x="79.3339%" y="933" width="0.0665%" height="15" fill="rgb(212,3,42)" fg:x="84735" fg:w="71"/><text x="79.5839%" y="943.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (71 samples, 0.07%)</title><rect x="79.3339%" y="917" width="0.0665%" height="15" fill="rgb(241,11,4)" fg:x="84735" fg:w="71"/><text x="79.5839%" y="927.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (12 samples, 0.01%)</title><rect x="79.3892%" y="901" width="0.0112%" height="15" fill="rgb(205,19,26)" fg:x="84794" fg:w="12"/><text x="79.6392%" y="911.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (12 samples, 0.01%)</title><rect x="79.3892%" y="885" width="0.0112%" height="15" fill="rgb(210,179,32)" fg:x="84794" fg:w="12"/><text x="79.6392%" y="895.50"></text></g><g><title>&lt;abi_stable::std_types::tuple::Tuple2&lt;A,B&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (14 samples, 0.01%)</title><rect x="79.4004%" y="901" width="0.0131%" height="15" fill="rgb(227,116,49)" fg:x="84806" fg:w="14"/><text x="79.6504%" y="911.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_ref (11 samples, 0.01%)</title><rect x="79.4135%" y="901" width="0.0103%" height="15" fill="rgb(211,146,6)" fg:x="84820" fg:w="11"/><text x="79.6635%" y="911.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (27 samples, 0.03%)</title><rect x="79.4238%" y="901" width="0.0253%" height="15" fill="rgb(219,44,39)" fg:x="84831" fg:w="27"/><text x="79.6738%" y="911.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (18 samples, 0.02%)</title><rect x="79.4323%" y="885" width="0.0169%" height="15" fill="rgb(234,128,11)" fg:x="84840" fg:w="18"/><text x="79.6823%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (65 samples, 0.06%)</title><rect x="79.4004%" y="933" width="0.0609%" height="15" fill="rgb(220,183,53)" fg:x="84806" fg:w="65"/><text x="79.6504%" y="943.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (65 samples, 0.06%)</title><rect x="79.4004%" y="917" width="0.0609%" height="15" fill="rgb(213,219,32)" fg:x="84806" fg:w="65"/><text x="79.6504%" y="927.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (13 samples, 0.01%)</title><rect x="79.4491%" y="901" width="0.0122%" height="15" fill="rgb(232,156,16)" fg:x="84858" fg:w="13"/><text x="79.6991%" y="911.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (13 samples, 0.01%)</title><rect x="79.4491%" y="885" width="0.0122%" height="15" fill="rgb(246,135,34)" fg:x="84858" fg:w="13"/><text x="79.6991%" y="895.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (16 samples, 0.01%)</title><rect x="79.5062%" y="821" width="0.0150%" height="15" fill="rgb(241,99,0)" fg:x="84919" fg:w="16"/><text x="79.7562%" y="831.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (31 samples, 0.03%)</title><rect x="79.5736%" y="677" width="0.0290%" height="15" fill="rgb(222,103,45)" fg:x="84991" fg:w="31"/><text x="79.8236%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (29 samples, 0.03%)</title><rect x="79.5755%" y="661" width="0.0272%" height="15" fill="rgb(212,57,4)" fg:x="84993" fg:w="29"/><text x="79.8255%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (66 samples, 0.06%)</title><rect x="79.5493%" y="725" width="0.0618%" height="15" fill="rgb(215,68,47)" fg:x="84965" fg:w="66"/><text x="79.7993%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (66 samples, 0.06%)</title><rect x="79.5493%" y="709" width="0.0618%" height="15" fill="rgb(230,84,2)" fg:x="84965" fg:w="66"/><text x="79.7993%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (64 samples, 0.06%)</title><rect x="79.5512%" y="693" width="0.0599%" height="15" fill="rgb(220,102,14)" fg:x="84967" fg:w="64"/><text x="79.8012%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (91 samples, 0.09%)</title><rect x="79.5380%" y="757" width="0.0852%" height="15" fill="rgb(240,10,32)" fg:x="84953" fg:w="91"/><text x="79.7880%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (91 samples, 0.09%)</title><rect x="79.5380%" y="741" width="0.0852%" height="15" fill="rgb(215,47,27)" fg:x="84953" fg:w="91"/><text x="79.7880%" y="751.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="79.6111%" y="725" width="0.0122%" height="15" fill="rgb(233,188,43)" fg:x="85031" fg:w="13"/><text x="79.8611%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (94 samples, 0.09%)</title><rect x="79.5380%" y="789" width="0.0880%" height="15" fill="rgb(253,190,1)" fg:x="84953" fg:w="94"/><text x="79.7880%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (94 samples, 0.09%)</title><rect x="79.5380%" y="773" width="0.0880%" height="15" fill="rgb(206,114,52)" fg:x="84953" fg:w="94"/><text x="79.7880%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (108 samples, 0.10%)</title><rect x="79.5259%" y="805" width="0.1011%" height="15" fill="rgb(233,120,37)" fg:x="84940" fg:w="108"/><text x="79.7759%" y="815.50"></text></g><g><title>rust_dealloc (114 samples, 0.11%)</title><rect x="79.5212%" y="821" width="0.1067%" height="15" fill="rgb(214,52,39)" fg:x="84935" fg:w="114"/><text x="79.7712%" y="831.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (171 samples, 0.16%)</title><rect x="79.4706%" y="901" width="0.1601%" height="15" fill="rgb(223,80,29)" fg:x="84881" fg:w="171"/><text x="79.7206%" y="911.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (162 samples, 0.15%)</title><rect x="79.4791%" y="885" width="0.1517%" height="15" fill="rgb(230,101,40)" fg:x="84890" fg:w="162"/><text x="79.7291%" y="895.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (153 samples, 0.14%)</title><rect x="79.4875%" y="869" width="0.1432%" height="15" fill="rgb(219,211,8)" fg:x="84899" fg:w="153"/><text x="79.7375%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (153 samples, 0.14%)</title><rect x="79.4875%" y="853" width="0.1432%" height="15" fill="rgb(252,126,28)" fg:x="84899" fg:w="153"/><text x="79.7375%" y="863.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (153 samples, 0.14%)</title><rect x="79.4875%" y="837" width="0.1432%" height="15" fill="rgb(215,56,38)" fg:x="84899" fg:w="153"/><text x="79.7375%" y="847.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,281 samples, 1.20%)</title><rect x="78.4389%" y="997" width="1.1993%" height="15" fill="rgb(249,55,44)" fg:x="83779" fg:w="1281"/><text x="78.6889%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,032 samples, 0.97%)</title><rect x="78.6720%" y="981" width="0.9662%" height="15" fill="rgb(220,221,32)" fg:x="84028" fg:w="1032"/><text x="78.9220%" y="991.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (665 samples, 0.62%)</title><rect x="79.0156%" y="965" width="0.6226%" height="15" fill="rgb(212,216,41)" fg:x="84395" fg:w="665"/><text x="79.2656%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (341 samples, 0.32%)</title><rect x="79.3190%" y="949" width="0.3193%" height="15" fill="rgb(228,213,43)" fg:x="84719" fg:w="341"/><text x="79.5690%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (179 samples, 0.17%)</title><rect x="79.4706%" y="933" width="0.1676%" height="15" fill="rgb(211,31,26)" fg:x="84881" fg:w="179"/><text x="79.7206%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (179 samples, 0.17%)</title><rect x="79.4706%" y="917" width="0.1676%" height="15" fill="rgb(229,202,19)" fg:x="84881" fg:w="179"/><text x="79.7206%" y="927.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="79.6944%" y="741" width="0.0112%" height="15" fill="rgb(229,105,46)" fg:x="85120" fg:w="12"/><text x="79.9444%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (59 samples, 0.06%)</title><rect x="79.6860%" y="789" width="0.0552%" height="15" fill="rgb(235,108,1)" fg:x="85111" fg:w="59"/><text x="79.9360%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (59 samples, 0.06%)</title><rect x="79.6860%" y="773" width="0.0552%" height="15" fill="rgb(245,111,35)" fg:x="85111" fg:w="59"/><text x="79.9360%" y="783.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (53 samples, 0.05%)</title><rect x="79.6916%" y="757" width="0.0496%" height="15" fill="rgb(219,185,31)" fg:x="85117" fg:w="53"/><text x="79.9416%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (38 samples, 0.04%)</title><rect x="79.7056%" y="741" width="0.0356%" height="15" fill="rgb(214,4,43)" fg:x="85132" fg:w="38"/><text x="79.9556%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (38 samples, 0.04%)</title><rect x="79.7056%" y="725" width="0.0356%" height="15" fill="rgb(235,227,40)" fg:x="85132" fg:w="38"/><text x="79.9556%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (38 samples, 0.04%)</title><rect x="79.7056%" y="709" width="0.0356%" height="15" fill="rgb(230,88,30)" fg:x="85132" fg:w="38"/><text x="79.9556%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (198 samples, 0.19%)</title><rect x="79.6710%" y="837" width="0.1854%" height="15" fill="rgb(216,217,1)" fg:x="85095" fg:w="198"/><text x="79.9210%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (191 samples, 0.18%)</title><rect x="79.6776%" y="821" width="0.1788%" height="15" fill="rgb(248,139,50)" fg:x="85102" fg:w="191"/><text x="79.9276%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (183 samples, 0.17%)</title><rect x="79.6850%" y="805" width="0.1713%" height="15" fill="rgb(233,1,21)" fg:x="85110" fg:w="183"/><text x="79.9350%" y="815.50"></text></g><g><title>snmalloc::FreeListIter::take (111 samples, 0.10%)</title><rect x="79.7525%" y="789" width="0.1039%" height="15" fill="rgb(215,183,12)" fg:x="85182" fg:w="111"/><text x="80.0025%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (111 samples, 0.10%)</title><rect x="79.7525%" y="773" width="0.1039%" height="15" fill="rgb(229,104,42)" fg:x="85182" fg:w="111"/><text x="80.0025%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (234 samples, 0.22%)</title><rect x="79.6392%" y="965" width="0.2191%" height="15" fill="rgb(243,34,48)" fg:x="85061" fg:w="234"/><text x="79.8892%" y="975.50"></text></g><g><title>alloc::alloc::exchange_malloc (210 samples, 0.20%)</title><rect x="79.6616%" y="949" width="0.1966%" height="15" fill="rgb(239,11,44)" fg:x="85085" fg:w="210"/><text x="79.9116%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (210 samples, 0.20%)</title><rect x="79.6616%" y="933" width="0.1966%" height="15" fill="rgb(231,98,35)" fg:x="85085" fg:w="210"/><text x="79.9116%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (210 samples, 0.20%)</title><rect x="79.6616%" y="917" width="0.1966%" height="15" fill="rgb(233,28,25)" fg:x="85085" fg:w="210"/><text x="79.9116%" y="927.50"></text></g><g><title>alloc::alloc::alloc (210 samples, 0.20%)</title><rect x="79.6616%" y="901" width="0.1966%" height="15" fill="rgb(234,123,11)" fg:x="85085" fg:w="210"/><text x="79.9116%" y="911.50"></text></g><g><title>__rg_alloc (210 samples, 0.20%)</title><rect x="79.6616%" y="885" width="0.1966%" height="15" fill="rgb(220,69,3)" fg:x="85085" fg:w="210"/><text x="79.9116%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (210 samples, 0.20%)</title><rect x="79.6616%" y="869" width="0.1966%" height="15" fill="rgb(214,64,36)" fg:x="85085" fg:w="210"/><text x="79.9116%" y="879.50"></text></g><g><title>rust_alloc (201 samples, 0.19%)</title><rect x="79.6701%" y="853" width="0.1882%" height="15" fill="rgb(211,138,32)" fg:x="85094" fg:w="201"/><text x="79.9201%" y="863.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (1,543 samples, 1.44%)</title><rect x="78.4230%" y="1029" width="1.4446%" height="15" fill="rgb(213,118,47)" fg:x="83762" fg:w="1543"/><text x="78.6730%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::clone::Clone for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::clone (1,536 samples, 1.44%)</title><rect x="78.4295%" y="1013" width="1.4381%" height="15" fill="rgb(243,124,49)" fg:x="83769" fg:w="1536"/><text x="78.6795%" y="1023.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (244 samples, 0.23%)</title><rect x="79.6392%" y="997" width="0.2284%" height="15" fill="rgb(221,30,28)" fg:x="85061" fg:w="244"/><text x="79.8892%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (244 samples, 0.23%)</title><rect x="79.6392%" y="981" width="0.2284%" height="15" fill="rgb(246,37,13)" fg:x="85061" fg:w="244"/><text x="79.8892%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (6,882 samples, 6.44%)</title><rect x="73.4299%" y="1125" width="6.4433%" height="15" fill="rgb(249,66,14)" fg:x="78429" fg:w="6882"/><text x="73.6799%" y="1135.50">tremor_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,882 samples, 6.44%)</title><rect x="73.4299%" y="1109" width="6.4433%" height="15" fill="rgb(213,166,5)" fg:x="78429" fg:w="6882"/><text x="73.6799%" y="1119.50">&lt;core::f..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (6,882 samples, 6.44%)</title><rect x="73.4299%" y="1093" width="6.4433%" height="15" fill="rgb(221,66,24)" fg:x="78429" fg:w="6882"/><text x="73.6799%" y="1103.50">tremor_r..</text></g><g><title>tremor_runtime::connectors::source::build_events (6,881 samples, 6.44%)</title><rect x="73.4308%" y="1077" width="6.4424%" height="15" fill="rgb(210,132,17)" fg:x="78430" fg:w="6881"/><text x="73.6808%" y="1087.50">tremor_r..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,787 samples, 2.61%)</title><rect x="77.2639%" y="1061" width="2.6094%" height="15" fill="rgb(243,202,5)" fg:x="82524" fg:w="2787"/><text x="77.5139%" y="1071.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,863 samples, 1.74%)</title><rect x="78.1290%" y="1045" width="1.7443%" height="15" fill="rgb(233,70,48)" fg:x="83448" fg:w="1863"/><text x="78.3790%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (11 samples, 0.01%)</title><rect x="79.8732%" y="1125" width="0.0103%" height="15" fill="rgb(238,41,26)" fg:x="85311" fg:w="11"/><text x="80.1232%" y="1135.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="80.1288%" y="981" width="0.0131%" height="15" fill="rgb(241,19,31)" fg:x="85584" fg:w="14"/><text x="80.3788%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (14 samples, 0.01%)</title><rect x="80.1288%" y="965" width="0.0131%" height="15" fill="rgb(214,76,10)" fg:x="85584" fg:w="14"/><text x="80.3788%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.01%)</title><rect x="80.1288%" y="949" width="0.0131%" height="15" fill="rgb(254,202,22)" fg:x="85584" fg:w="14"/><text x="80.3788%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.01%)</title><rect x="80.1288%" y="933" width="0.0131%" height="15" fill="rgb(214,72,24)" fg:x="85584" fg:w="14"/><text x="80.3788%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="80.1419%" y="981" width="0.0112%" height="15" fill="rgb(221,92,46)" fg:x="85598" fg:w="12"/><text x="80.3919%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (24 samples, 0.02%)</title><rect x="80.1532%" y="981" width="0.0225%" height="15" fill="rgb(246,13,50)" fg:x="85610" fg:w="24"/><text x="80.4032%" y="991.50"></text></g><g><title>core::mem::replace (24 samples, 0.02%)</title><rect x="80.1532%" y="965" width="0.0225%" height="15" fill="rgb(240,165,38)" fg:x="85610" fg:w="24"/><text x="80.4032%" y="975.50"></text></g><g><title>core::ptr::read (23 samples, 0.02%)</title><rect x="80.1541%" y="949" width="0.0215%" height="15" fill="rgb(241,24,51)" fg:x="85611" fg:w="23"/><text x="80.4041%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (169 samples, 0.16%)</title><rect x="80.2393%" y="965" width="0.1582%" height="15" fill="rgb(227,51,44)" fg:x="85702" fg:w="169"/><text x="80.4893%" y="975.50"></text></g><g><title>core::mem::replace (169 samples, 0.16%)</title><rect x="80.2393%" y="949" width="0.1582%" height="15" fill="rgb(231,121,3)" fg:x="85702" fg:w="169"/><text x="80.4893%" y="959.50"></text></g><g><title>core::ptr::read (169 samples, 0.16%)</title><rect x="80.2393%" y="933" width="0.1582%" height="15" fill="rgb(245,3,41)" fg:x="85702" fg:w="169"/><text x="80.4893%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (297 samples, 0.28%)</title><rect x="80.1756%" y="981" width="0.2781%" height="15" fill="rgb(214,13,26)" fg:x="85634" fg:w="297"/><text x="80.4256%" y="991.50"></text></g><g><title>core::mem::drop (60 samples, 0.06%)</title><rect x="80.3975%" y="965" width="0.0562%" height="15" fill="rgb(252,75,11)" fg:x="85871" fg:w="60"/><text x="80.6475%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (60 samples, 0.06%)</title><rect x="80.3975%" y="949" width="0.0562%" height="15" fill="rgb(218,226,17)" fg:x="85871" fg:w="60"/><text x="80.6475%" y="959.50"></text></g><g><title>core::mem::drop (33 samples, 0.03%)</title><rect x="80.4537%" y="981" width="0.0309%" height="15" fill="rgb(248,89,38)" fg:x="85931" fg:w="33"/><text x="80.7037%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (33 samples, 0.03%)</title><rect x="80.4537%" y="965" width="0.0309%" height="15" fill="rgb(237,73,46)" fg:x="85931" fg:w="33"/><text x="80.7037%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (30 samples, 0.03%)</title><rect x="80.4565%" y="949" width="0.0281%" height="15" fill="rgb(242,78,33)" fg:x="85934" fg:w="30"/><text x="80.7065%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="80.4565%" y="933" width="0.0281%" height="15" fill="rgb(235,60,3)" fg:x="85934" fg:w="30"/><text x="80.7065%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.03%)</title><rect x="80.4565%" y="917" width="0.0281%" height="15" fill="rgb(216,172,19)" fg:x="85934" fg:w="30"/><text x="80.7065%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (29 samples, 0.03%)</title><rect x="80.4575%" y="901" width="0.0272%" height="15" fill="rgb(227,6,42)" fg:x="85935" fg:w="29"/><text x="80.7075%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (29 samples, 0.03%)</title><rect x="80.4575%" y="885" width="0.0272%" height="15" fill="rgb(223,207,42)" fg:x="85935" fg:w="29"/><text x="80.7075%" y="895.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="80.4846%" y="965" width="0.0112%" height="15" fill="rgb(246,138,30)" fg:x="85964" fg:w="12"/><text x="80.7346%" y="975.50"></text></g><g><title>std::sync::poison::Flag::done (12 samples, 0.01%)</title><rect x="80.5024%" y="933" width="0.0112%" height="15" fill="rgb(251,199,47)" fg:x="85983" fg:w="12"/><text x="80.7524%" y="943.50"></text></g><g><title>std::thread::panicking (11 samples, 0.01%)</title><rect x="80.5033%" y="917" width="0.0103%" height="15" fill="rgb(228,218,44)" fg:x="85984" fg:w="11"/><text x="80.7533%" y="927.50"></text></g><g><title>std::panicking::panicking (11 samples, 0.01%)</title><rect x="80.5033%" y="901" width="0.0103%" height="15" fill="rgb(220,68,6)" fg:x="85984" fg:w="11"/><text x="80.7533%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (11 samples, 0.01%)</title><rect x="80.5033%" y="885" width="0.0103%" height="15" fill="rgb(240,60,26)" fg:x="85984" fg:w="11"/><text x="80.7533%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="80.5136%" y="917" width="0.0112%" height="15" fill="rgb(211,200,19)" fg:x="85995" fg:w="12"/><text x="80.7636%" y="927.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (286 samples, 0.27%)</title><rect x="80.5249%" y="901" width="0.2678%" height="15" fill="rgb(242,145,30)" fg:x="86007" fg:w="286"/><text x="80.7749%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (337 samples, 0.32%)</title><rect x="80.4846%" y="981" width="0.3155%" height="15" fill="rgb(225,64,13)" fg:x="85964" fg:w="337"/><text x="80.7346%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (325 samples, 0.30%)</title><rect x="80.4958%" y="965" width="0.3043%" height="15" fill="rgb(218,103,35)" fg:x="85976" fg:w="325"/><text x="80.7458%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (325 samples, 0.30%)</title><rect x="80.4958%" y="949" width="0.3043%" height="15" fill="rgb(216,93,46)" fg:x="85976" fg:w="325"/><text x="80.7458%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (306 samples, 0.29%)</title><rect x="80.5136%" y="933" width="0.2865%" height="15" fill="rgb(225,159,27)" fg:x="85995" fg:w="306"/><text x="80.7636%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (294 samples, 0.28%)</title><rect x="80.5249%" y="917" width="0.2753%" height="15" fill="rgb(225,204,11)" fg:x="86007" fg:w="294"/><text x="80.7749%" y="927.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (20 samples, 0.02%)</title><rect x="80.8104%" y="933" width="0.0187%" height="15" fill="rgb(205,56,4)" fg:x="86312" fg:w="20"/><text x="81.0604%" y="943.50"></text></g><g><title>core::task::wake::Waker::will_wake (42 samples, 0.04%)</title><rect x="80.8001%" y="981" width="0.0393%" height="15" fill="rgb(206,6,35)" fg:x="86301" fg:w="42"/><text x="81.0501%" y="991.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (42 samples, 0.04%)</title><rect x="80.8001%" y="965" width="0.0393%" height="15" fill="rgb(247,73,52)" fg:x="86301" fg:w="42"/><text x="81.0501%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (31 samples, 0.03%)</title><rect x="80.8104%" y="949" width="0.0290%" height="15" fill="rgb(246,97,4)" fg:x="86312" fg:w="31"/><text x="81.0604%" y="959.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="80.8292%" y="933" width="0.0103%" height="15" fill="rgb(212,37,15)" fg:x="86332" fg:w="11"/><text x="81.0792%" y="943.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (16 samples, 0.01%)</title><rect x="80.8507%" y="949" width="0.0150%" height="15" fill="rgb(208,130,40)" fg:x="86355" fg:w="16"/><text x="81.1007%" y="959.50"></text></g><g><title>std::sync::poison::Flag::borrow (16 samples, 0.01%)</title><rect x="80.8507%" y="933" width="0.0150%" height="15" fill="rgb(236,55,29)" fg:x="86355" fg:w="16"/><text x="81.1007%" y="943.50"></text></g><g><title>std::thread::panicking (11 samples, 0.01%)</title><rect x="80.8554%" y="917" width="0.0103%" height="15" fill="rgb(209,156,45)" fg:x="86360" fg:w="11"/><text x="81.1054%" y="927.50"></text></g><g><title>std::panicking::panicking (11 samples, 0.01%)</title><rect x="80.8554%" y="901" width="0.0103%" height="15" fill="rgb(249,107,4)" fg:x="86360" fg:w="11"/><text x="81.1054%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (11 samples, 0.01%)</title><rect x="80.8554%" y="885" width="0.0103%" height="15" fill="rgb(227,7,13)" fg:x="86360" fg:w="11"/><text x="81.1054%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="80.8554%" y="869" width="0.0103%" height="15" fill="rgb(250,129,14)" fg:x="86360" fg:w="11"/><text x="81.1054%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="80.8554%" y="853" width="0.0103%" height="15" fill="rgb(229,92,13)" fg:x="86360" fg:w="11"/><text x="81.1054%" y="863.50"></text></g><g><title>event_listener::Inner::lock (621 samples, 0.58%)</title><rect x="80.8395%" y="981" width="0.5814%" height="15" fill="rgb(245,98,39)" fg:x="86343" fg:w="621"/><text x="81.0895%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (609 samples, 0.57%)</title><rect x="80.8507%" y="965" width="0.5702%" height="15" fill="rgb(234,135,48)" fg:x="86355" fg:w="609"/><text x="81.1007%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (593 samples, 0.56%)</title><rect x="80.8657%" y="949" width="0.5552%" height="15" fill="rgb(230,98,28)" fg:x="86371" fg:w="593"/><text x="81.1157%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (577 samples, 0.54%)</title><rect x="80.8806%" y="933" width="0.5402%" height="15" fill="rgb(223,121,0)" fg:x="86387" fg:w="577"/><text x="81.1306%" y="943.50"></text></g><g><title>___pthread_mutex_lock (577 samples, 0.54%)</title><rect x="80.8806%" y="917" width="0.5402%" height="15" fill="rgb(234,173,33)" fg:x="86387" fg:w="577"/><text x="81.1306%" y="927.50"></text></g><g><title>__GI___lll_lock_wait (61 samples, 0.06%)</title><rect x="81.3638%" y="901" width="0.0571%" height="15" fill="rgb(245,47,8)" fg:x="86903" fg:w="61"/><text x="81.6138%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,493 samples, 1.40%)</title><rect x="80.0595%" y="997" width="1.3978%" height="15" fill="rgb(205,17,20)" fg:x="85510" fg:w="1493"/><text x="80.3095%" y="1007.50"></text></g><g><title>event_listener::List::remove (39 samples, 0.04%)</title><rect x="81.4209%" y="981" width="0.0365%" height="15" fill="rgb(232,151,16)" fg:x="86964" fg:w="39"/><text x="81.6709%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (31 samples, 0.03%)</title><rect x="81.4284%" y="965" width="0.0290%" height="15" fill="rgb(208,30,32)" fg:x="86972" fg:w="31"/><text x="81.6784%" y="975.50"></text></g><g><title>core::mem::replace (31 samples, 0.03%)</title><rect x="81.4284%" y="949" width="0.0290%" height="15" fill="rgb(254,26,3)" fg:x="86972" fg:w="31"/><text x="81.6784%" y="959.50"></text></g><g><title>core::ptr::read (31 samples, 0.03%)</title><rect x="81.4284%" y="933" width="0.0290%" height="15" fill="rgb(240,177,30)" fg:x="86972" fg:w="31"/><text x="81.6784%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (43 samples, 0.04%)</title><rect x="81.6259%" y="949" width="0.0403%" height="15" fill="rgb(248,76,44)" fg:x="87183" fg:w="43"/><text x="81.8759%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (37 samples, 0.03%)</title><rect x="81.6315%" y="933" width="0.0346%" height="15" fill="rgb(241,186,54)" fg:x="87189" fg:w="37"/><text x="81.8815%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (37 samples, 0.03%)</title><rect x="81.6315%" y="917" width="0.0346%" height="15" fill="rgb(249,171,29)" fg:x="87189" fg:w="37"/><text x="81.8815%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.03%)</title><rect x="81.6315%" y="901" width="0.0346%" height="15" fill="rgb(237,151,44)" fg:x="87189" fg:w="37"/><text x="81.8815%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (175 samples, 0.16%)</title><rect x="81.6699%" y="949" width="0.1638%" height="15" fill="rgb(228,174,30)" fg:x="87230" fg:w="175"/><text x="81.9199%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (175 samples, 0.16%)</title><rect x="81.6699%" y="933" width="0.1638%" height="15" fill="rgb(252,14,37)" fg:x="87230" fg:w="175"/><text x="81.9199%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (395 samples, 0.37%)</title><rect x="81.8338%" y="949" width="0.3698%" height="15" fill="rgb(207,111,40)" fg:x="87405" fg:w="395"/><text x="82.0838%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (392 samples, 0.37%)</title><rect x="81.8366%" y="933" width="0.3670%" height="15" fill="rgb(248,171,54)" fg:x="87408" fg:w="392"/><text x="82.0866%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (787 samples, 0.74%)</title><rect x="81.4752%" y="981" width="0.7368%" height="15" fill="rgb(211,127,2)" fg:x="87022" fg:w="787"/><text x="81.7252%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (738 samples, 0.69%)</title><rect x="81.5210%" y="965" width="0.6910%" height="15" fill="rgb(236,87,47)" fg:x="87071" fg:w="738"/><text x="81.7710%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (97 samples, 0.09%)</title><rect x="82.2317%" y="965" width="0.0908%" height="15" fill="rgb(223,190,45)" fg:x="87830" fg:w="97"/><text x="82.4817%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (97 samples, 0.09%)</title><rect x="82.2317%" y="949" width="0.0908%" height="15" fill="rgb(215,5,16)" fg:x="87830" fg:w="97"/><text x="82.4817%" y="959.50"></text></g><g><title>event_listener::Event::try_inner (167 samples, 0.16%)</title><rect x="82.3225%" y="965" width="0.1564%" height="15" fill="rgb(252,82,33)" fg:x="87927" fg:w="167"/><text x="82.5725%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (167 samples, 0.16%)</title><rect x="82.3225%" y="949" width="0.1564%" height="15" fill="rgb(247,213,44)" fg:x="87927" fg:w="167"/><text x="82.5725%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (167 samples, 0.16%)</title><rect x="82.3225%" y="933" width="0.1564%" height="15" fill="rgb(205,196,44)" fg:x="87927" fg:w="167"/><text x="82.5725%" y="943.50"></text></g><g><title>event_listener::Inner::lock (30 samples, 0.03%)</title><rect x="82.4788%" y="965" width="0.0281%" height="15" fill="rgb(237,96,54)" fg:x="88094" fg:w="30"/><text x="82.7288%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.03%)</title><rect x="82.4798%" y="949" width="0.0272%" height="15" fill="rgb(230,113,34)" fg:x="88095" fg:w="29"/><text x="82.7298%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.03%)</title><rect x="82.4798%" y="933" width="0.0272%" height="15" fill="rgb(221,224,12)" fg:x="88095" fg:w="29"/><text x="82.7298%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.03%)</title><rect x="82.4816%" y="917" width="0.0253%" height="15" fill="rgb(219,112,44)" fg:x="88097" fg:w="27"/><text x="82.7316%" y="927.50"></text></g><g><title>___pthread_mutex_lock (27 samples, 0.03%)</title><rect x="82.4816%" y="901" width="0.0253%" height="15" fill="rgb(210,31,13)" fg:x="88097" fg:w="27"/><text x="82.7316%" y="911.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (11 samples, 0.01%)</title><rect x="82.5360%" y="789" width="0.0103%" height="15" fill="rgb(230,25,16)" fg:x="88155" fg:w="11"/><text x="82.7860%" y="799.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (11 samples, 0.01%)</title><rect x="82.5360%" y="773" width="0.0103%" height="15" fill="rgb(246,108,53)" fg:x="88155" fg:w="11"/><text x="82.7860%" y="783.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (11 samples, 0.01%)</title><rect x="82.5360%" y="757" width="0.0103%" height="15" fill="rgb(241,172,50)" fg:x="88155" fg:w="11"/><text x="82.7860%" y="767.50"></text></g><g><title>__GI___pthread_cond_signal (11 samples, 0.01%)</title><rect x="82.5360%" y="741" width="0.0103%" height="15" fill="rgb(235,141,10)" fg:x="88155" fg:w="11"/><text x="82.7860%" y="751.50"></text></g><g><title>parking::Unparker::unpark (31 samples, 0.03%)</title><rect x="82.5228%" y="821" width="0.0290%" height="15" fill="rgb(220,174,43)" fg:x="88141" fg:w="31"/><text x="82.7728%" y="831.50"></text></g><g><title>parking::Inner::unpark (28 samples, 0.03%)</title><rect x="82.5257%" y="805" width="0.0262%" height="15" fill="rgb(215,181,40)" fg:x="88144" fg:w="28"/><text x="82.7757%" y="815.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (34 samples, 0.03%)</title><rect x="82.5210%" y="837" width="0.0318%" height="15" fill="rgb(230,97,2)" fg:x="88139" fg:w="34"/><text x="82.7710%" y="847.50"></text></g><g><title>core::task::wake::Waker::wake (40 samples, 0.04%)</title><rect x="82.5210%" y="869" width="0.0375%" height="15" fill="rgb(211,25,27)" fg:x="88139" fg:w="40"/><text x="82.7710%" y="879.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (40 samples, 0.04%)</title><rect x="82.5210%" y="853" width="0.0375%" height="15" fill="rgb(230,87,26)" fg:x="88139" fg:w="40"/><text x="82.7710%" y="863.50"></text></g><g><title>async_executor::State::notify (54 samples, 0.05%)</title><rect x="82.5116%" y="885" width="0.0506%" height="15" fill="rgb(227,160,17)" fg:x="88129" fg:w="54"/><text x="82.7616%" y="895.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (68 samples, 0.06%)</title><rect x="82.5116%" y="901" width="0.0637%" height="15" fill="rgb(244,85,34)" fg:x="88129" fg:w="68"/><text x="82.7616%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (14 samples, 0.01%)</title><rect x="82.5622%" y="885" width="0.0131%" height="15" fill="rgb(207,70,0)" fg:x="88183" fg:w="14"/><text x="82.8122%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (13 samples, 0.01%)</title><rect x="82.5631%" y="869" width="0.0122%" height="15" fill="rgb(223,129,7)" fg:x="88184" fg:w="13"/><text x="82.8131%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (16 samples, 0.01%)</title><rect x="82.5753%" y="901" width="0.0150%" height="15" fill="rgb(246,105,7)" fg:x="88197" fg:w="16"/><text x="82.8253%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.01%)</title><rect x="82.5753%" y="885" width="0.0150%" height="15" fill="rgb(215,154,42)" fg:x="88197" fg:w="16"/><text x="82.8253%" y="895.50"></text></g><g><title>event_listener::List::notify (90 samples, 0.08%)</title><rect x="82.5069%" y="965" width="0.0843%" height="15" fill="rgb(220,215,30)" fg:x="88124" fg:w="90"/><text x="82.7569%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (89 samples, 0.08%)</title><rect x="82.5079%" y="949" width="0.0833%" height="15" fill="rgb(228,81,51)" fg:x="88125" fg:w="89"/><text x="82.7579%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (89 samples, 0.08%)</title><rect x="82.5079%" y="933" width="0.0833%" height="15" fill="rgb(247,71,54)" fg:x="88125" fg:w="89"/><text x="82.7579%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (85 samples, 0.08%)</title><rect x="82.5116%" y="917" width="0.0796%" height="15" fill="rgb(234,176,34)" fg:x="88129" fg:w="85"/><text x="82.7616%" y="927.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,895 samples, 1.77%)</title><rect x="81.4574%" y="997" width="1.7742%" height="15" fill="rgb(241,103,54)" fg:x="87003" fg:w="1895"/><text x="81.7074%" y="1007.50">a..</text></g><g><title>event_listener::Event::notify (1,089 samples, 1.02%)</title><rect x="82.2120%" y="981" width="1.0196%" height="15" fill="rgb(228,22,34)" fg:x="87809" fg:w="1089"/><text x="82.4620%" y="991.50"></text></g><g><title>event_listener::full_fence (684 samples, 0.64%)</title><rect x="82.5912%" y="965" width="0.6404%" height="15" fill="rgb(241,179,48)" fg:x="88214" fg:w="684"/><text x="82.8412%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (684 samples, 0.64%)</title><rect x="82.5912%" y="949" width="0.6404%" height="15" fill="rgb(235,167,37)" fg:x="88214" fg:w="684"/><text x="82.8412%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (684 samples, 0.64%)</title><rect x="82.5912%" y="933" width="0.6404%" height="15" fill="rgb(213,109,30)" fg:x="88214" fg:w="684"/><text x="82.8412%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (22 samples, 0.02%)</title><rect x="83.2316%" y="997" width="0.0206%" height="15" fill="rgb(222,172,16)" fg:x="88898" fg:w="22"/><text x="83.4816%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (38 samples, 0.04%)</title><rect x="83.2606%" y="949" width="0.0356%" height="15" fill="rgb(233,192,5)" fg:x="88929" fg:w="38"/><text x="83.5106%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (38 samples, 0.04%)</title><rect x="83.2606%" y="933" width="0.0356%" height="15" fill="rgb(247,189,41)" fg:x="88929" fg:w="38"/><text x="83.5106%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="83.2606%" y="917" width="0.0356%" height="15" fill="rgb(218,134,47)" fg:x="88929" fg:w="38"/><text x="83.5106%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (37 samples, 0.03%)</title><rect x="83.2616%" y="901" width="0.0346%" height="15" fill="rgb(216,29,3)" fg:x="88930" fg:w="37"/><text x="83.5116%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (37 samples, 0.03%)</title><rect x="83.2616%" y="885" width="0.0346%" height="15" fill="rgb(246,140,12)" fg:x="88930" fg:w="37"/><text x="83.5116%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (37 samples, 0.03%)</title><rect x="83.2616%" y="869" width="0.0346%" height="15" fill="rgb(230,136,11)" fg:x="88930" fg:w="37"/><text x="83.5116%" y="879.50"></text></g><g><title>event_listener::Inner::lock (59 samples, 0.06%)</title><rect x="83.2962%" y="949" width="0.0552%" height="15" fill="rgb(247,22,47)" fg:x="88967" fg:w="59"/><text x="83.5462%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (59 samples, 0.06%)</title><rect x="83.2962%" y="933" width="0.0552%" height="15" fill="rgb(218,84,22)" fg:x="88967" fg:w="59"/><text x="83.5462%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (54 samples, 0.05%)</title><rect x="83.3009%" y="917" width="0.0506%" height="15" fill="rgb(216,87,39)" fg:x="88972" fg:w="54"/><text x="83.5509%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (48 samples, 0.04%)</title><rect x="83.3065%" y="901" width="0.0449%" height="15" fill="rgb(221,178,8)" fg:x="88978" fg:w="48"/><text x="83.5565%" y="911.50"></text></g><g><title>___pthread_mutex_lock (48 samples, 0.04%)</title><rect x="83.3065%" y="885" width="0.0449%" height="15" fill="rgb(230,42,11)" fg:x="88978" fg:w="48"/><text x="83.5565%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (21 samples, 0.02%)</title><rect x="83.3318%" y="869" width="0.0197%" height="15" fill="rgb(237,229,4)" fg:x="89005" fg:w="21"/><text x="83.5818%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (102 samples, 0.10%)</title><rect x="83.2597%" y="965" width="0.0955%" height="15" fill="rgb(222,31,33)" fg:x="88928" fg:w="102"/><text x="83.5097%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (142 samples, 0.13%)</title><rect x="83.2522%" y="997" width="0.1329%" height="15" fill="rgb(210,17,39)" fg:x="88920" fg:w="142"/><text x="83.5022%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (134 samples, 0.13%)</title><rect x="83.2597%" y="981" width="0.1255%" height="15" fill="rgb(244,93,20)" fg:x="88928" fg:w="134"/><text x="83.5097%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (32 samples, 0.03%)</title><rect x="83.3552%" y="965" width="0.0300%" height="15" fill="rgb(210,40,47)" fg:x="89030" fg:w="32"/><text x="83.6052%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="83.3552%" y="949" width="0.0300%" height="15" fill="rgb(239,211,47)" fg:x="89030" fg:w="32"/><text x="83.6052%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (30 samples, 0.03%)</title><rect x="83.3571%" y="933" width="0.0281%" height="15" fill="rgb(251,223,49)" fg:x="89032" fg:w="30"/><text x="83.6071%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (30 samples, 0.03%)</title><rect x="83.3571%" y="917" width="0.0281%" height="15" fill="rgb(221,149,5)" fg:x="89032" fg:w="30"/><text x="83.6071%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="83.3908%" y="981" width="0.0272%" height="15" fill="rgb(219,224,51)" fg:x="89068" fg:w="29"/><text x="83.6408%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (29 samples, 0.03%)</title><rect x="83.3908%" y="965" width="0.0272%" height="15" fill="rgb(223,7,8)" fg:x="89068" fg:w="29"/><text x="83.6408%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (29 samples, 0.03%)</title><rect x="83.3908%" y="949" width="0.0272%" height="15" fill="rgb(241,217,22)" fg:x="89068" fg:w="29"/><text x="83.6408%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (36 samples, 0.03%)</title><rect x="83.4179%" y="981" width="0.0337%" height="15" fill="rgb(248,209,0)" fg:x="89097" fg:w="36"/><text x="83.6679%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (36 samples, 0.03%)</title><rect x="83.4179%" y="965" width="0.0337%" height="15" fill="rgb(217,205,4)" fg:x="89097" fg:w="36"/><text x="83.6679%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="83.4179%" y="949" width="0.0337%" height="15" fill="rgb(228,124,39)" fg:x="89097" fg:w="36"/><text x="83.6679%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (36 samples, 0.03%)</title><rect x="83.4179%" y="933" width="0.0337%" height="15" fill="rgb(250,116,42)" fg:x="89097" fg:w="36"/><text x="83.6679%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (35 samples, 0.03%)</title><rect x="83.4188%" y="917" width="0.0328%" height="15" fill="rgb(223,202,9)" fg:x="89098" fg:w="35"/><text x="83.6688%" y="927.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (35 samples, 0.03%)</title><rect x="83.4188%" y="901" width="0.0328%" height="15" fill="rgb(242,222,40)" fg:x="89098" fg:w="35"/><text x="83.6688%" y="911.50"></text></g><g><title>event_listener::Inner::lock (30 samples, 0.03%)</title><rect x="83.4572%" y="981" width="0.0281%" height="15" fill="rgb(229,99,46)" fg:x="89139" fg:w="30"/><text x="83.7072%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="83.4572%" y="965" width="0.0281%" height="15" fill="rgb(225,56,46)" fg:x="89139" fg:w="30"/><text x="83.7072%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.03%)</title><rect x="83.4582%" y="949" width="0.0272%" height="15" fill="rgb(227,94,5)" fg:x="89140" fg:w="29"/><text x="83.7082%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (29 samples, 0.03%)</title><rect x="83.4582%" y="933" width="0.0272%" height="15" fill="rgb(205,112,38)" fg:x="89140" fg:w="29"/><text x="83.7082%" y="943.50"></text></g><g><title>___pthread_mutex_lock (27 samples, 0.03%)</title><rect x="83.4600%" y="917" width="0.0253%" height="15" fill="rgb(231,133,46)" fg:x="89142" fg:w="27"/><text x="83.7100%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,770 samples, 3.53%)</title><rect x="79.9875%" y="1013" width="3.5297%" height="15" fill="rgb(217,16,9)" fg:x="85433" fg:w="3770"/><text x="80.2375%" y="1023.50">&lt;as..</text></g><g><title>event_listener::Event::listen (141 samples, 0.13%)</title><rect x="83.3851%" y="997" width="0.1320%" height="15" fill="rgb(249,173,9)" fg:x="89062" fg:w="141"/><text x="83.6351%" y="1007.50"></text></g><g><title>event_listener::full_fence (28 samples, 0.03%)</title><rect x="83.4909%" y="981" width="0.0262%" height="15" fill="rgb(205,163,53)" fg:x="89175" fg:w="28"/><text x="83.7409%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (28 samples, 0.03%)</title><rect x="83.4909%" y="965" width="0.0262%" height="15" fill="rgb(217,54,41)" fg:x="89175" fg:w="28"/><text x="83.7409%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.03%)</title><rect x="83.4909%" y="949" width="0.0262%" height="15" fill="rgb(228,216,12)" fg:x="89175" fg:w="28"/><text x="83.7409%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (790 samples, 0.74%)</title><rect x="83.5256%" y="1013" width="0.7396%" height="15" fill="rgb(244,228,15)" fg:x="89212" fg:w="790"/><text x="83.7756%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (197 samples, 0.18%)</title><rect x="84.2765%" y="997" width="0.1844%" height="15" fill="rgb(221,176,53)" fg:x="90014" fg:w="197"/><text x="84.5265%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (782 samples, 0.73%)</title><rect x="84.4665%" y="965" width="0.7322%" height="15" fill="rgb(205,94,34)" fg:x="90217" fg:w="782"/><text x="84.7165%" y="975.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="85.2221%" y="853" width="0.0131%" height="15" fill="rgb(213,110,48)" fg:x="91024" fg:w="14"/><text x="85.4721%" y="863.50"></text></g><g><title>rust_dealloc (16 samples, 0.01%)</title><rect x="85.2455%" y="789" width="0.0150%" height="15" fill="rgb(236,142,28)" fg:x="91049" fg:w="16"/><text x="85.4955%" y="799.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (23 samples, 0.02%)</title><rect x="85.3148%" y="757" width="0.0215%" height="15" fill="rgb(225,135,29)" fg:x="91123" fg:w="23"/><text x="85.5648%" y="767.50"></text></g><g><title> (23 samples, 0.02%)</title><rect x="85.3148%" y="741" width="0.0215%" height="15" fill="rgb(252,45,31)" fg:x="91123" fg:w="23"/><text x="85.5648%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (89 samples, 0.08%)</title><rect x="85.2651%" y="789" width="0.0833%" height="15" fill="rgb(211,187,50)" fg:x="91070" fg:w="89"/><text x="85.5151%" y="799.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (74 samples, 0.07%)</title><rect x="85.2792%" y="773" width="0.0693%" height="15" fill="rgb(229,109,7)" fg:x="91085" fg:w="74"/><text x="85.5292%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (148 samples, 0.14%)</title><rect x="85.2408%" y="821" width="0.1386%" height="15" fill="rgb(251,131,51)" fg:x="91044" fg:w="148"/><text x="85.4908%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (148 samples, 0.14%)</title><rect x="85.2408%" y="805" width="0.1386%" height="15" fill="rgb(251,180,35)" fg:x="91044" fg:w="148"/><text x="85.4908%" y="815.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (27 samples, 0.03%)</title><rect x="85.3541%" y="789" width="0.0253%" height="15" fill="rgb(211,46,32)" fg:x="91165" fg:w="27"/><text x="85.6041%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (152 samples, 0.14%)</title><rect x="85.2408%" y="853" width="0.1423%" height="15" fill="rgb(248,123,17)" fg:x="91044" fg:w="152"/><text x="85.4908%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (152 samples, 0.14%)</title><rect x="85.2408%" y="837" width="0.1423%" height="15" fill="rgb(227,141,18)" fg:x="91044" fg:w="152"/><text x="85.4908%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (176 samples, 0.16%)</title><rect x="85.2211%" y="869" width="0.1648%" height="15" fill="rgb(216,102,9)" fg:x="91023" fg:w="176"/><text x="85.4711%" y="879.50"></text></g><g><title>rust_dealloc (200 samples, 0.19%)</title><rect x="85.2062%" y="885" width="0.1873%" height="15" fill="rgb(253,47,13)" fg:x="91007" fg:w="200"/><text x="85.4562%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,823 samples, 5.45%)</title><rect x="79.9434%" y="1029" width="5.4518%" height="15" fill="rgb(226,93,23)" fg:x="85386" fg:w="5823"/><text x="80.1934%" y="1039.50">&lt;async_..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,207 samples, 1.13%)</title><rect x="84.2652%" y="1013" width="1.1301%" height="15" fill="rgb(247,104,17)" fg:x="90002" fg:w="1207"/><text x="84.5152%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (998 samples, 0.93%)</title><rect x="84.4609%" y="997" width="0.9344%" height="15" fill="rgb(233,203,26)" fg:x="90211" fg:w="998"/><text x="84.7109%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (998 samples, 0.93%)</title><rect x="84.4609%" y="981" width="0.9344%" height="15" fill="rgb(244,98,49)" fg:x="90211" fg:w="998"/><text x="84.7109%" y="991.50"></text></g><g><title>alloc::alloc::box_free (210 samples, 0.20%)</title><rect x="85.1987%" y="965" width="0.1966%" height="15" fill="rgb(235,134,22)" fg:x="90999" fg:w="210"/><text x="85.4487%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (210 samples, 0.20%)</title><rect x="85.1987%" y="949" width="0.1966%" height="15" fill="rgb(221,70,32)" fg:x="90999" fg:w="210"/><text x="85.4487%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (210 samples, 0.20%)</title><rect x="85.1987%" y="933" width="0.1966%" height="15" fill="rgb(238,15,50)" fg:x="90999" fg:w="210"/><text x="85.4487%" y="943.50"></text></g><g><title>__rg_dealloc (210 samples, 0.20%)</title><rect x="85.1987%" y="917" width="0.1966%" height="15" fill="rgb(215,221,48)" fg:x="90999" fg:w="210"/><text x="85.4487%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (210 samples, 0.20%)</title><rect x="85.1987%" y="901" width="0.1966%" height="15" fill="rgb(236,73,3)" fg:x="90999" fg:w="210"/><text x="85.4487%" y="911.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,247 samples, 5.85%)</title><rect x="79.9247%" y="1045" width="5.8488%" height="15" fill="rgb(250,107,11)" fg:x="85366" fg:w="6247"/><text x="80.1747%" y="1055.50">&lt;async_..</text></g><g><title>__memcpy_avx_unaligned_erms (404 samples, 0.38%)</title><rect x="85.3953%" y="1029" width="0.3782%" height="15" fill="rgb(242,39,14)" fg:x="91209" fg:w="404"/><text x="85.6453%" y="1039.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,700 samples, 6.27%)</title><rect x="79.8882%" y="1109" width="6.2729%" height="15" fill="rgb(248,164,37)" fg:x="85327" fg:w="6700"/><text x="80.1382%" y="1119.50">&lt;async_s..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,700 samples, 6.27%)</title><rect x="79.8882%" y="1093" width="6.2729%" height="15" fill="rgb(217,60,12)" fg:x="85327" fg:w="6700"/><text x="80.1382%" y="1103.50">&lt;tremor_..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,700 samples, 6.27%)</title><rect x="79.8882%" y="1077" width="6.2729%" height="15" fill="rgb(240,125,29)" fg:x="85327" fg:w="6700"/><text x="80.1382%" y="1087.50">&lt;async_s..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,700 samples, 6.27%)</title><rect x="79.8882%" y="1061" width="6.2729%" height="15" fill="rgb(208,207,28)" fg:x="85327" fg:w="6700"/><text x="80.1382%" y="1071.50">&lt;tremor_..</text></g><g><title>__memcpy_avx_unaligned_erms (414 samples, 0.39%)</title><rect x="85.7735%" y="1045" width="0.3876%" height="15" fill="rgb(209,159,27)" fg:x="91613" fg:w="414"/><text x="86.0235%" y="1055.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="86.2304%" y="1029" width="0.0225%" height="15" fill="rgb(251,176,53)" fg:x="92101" fg:w="24"/><text x="86.4804%" y="1039.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="86.2529%" y="1013" width="0.0140%" height="15" fill="rgb(211,85,7)" fg:x="92125" fg:w="15"/><text x="86.5029%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (15 samples, 0.01%)</title><rect x="86.2529%" y="997" width="0.0140%" height="15" fill="rgb(216,64,54)" fg:x="92125" fg:w="15"/><text x="86.5029%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.01%)</title><rect x="86.2529%" y="981" width="0.0140%" height="15" fill="rgb(217,54,24)" fg:x="92125" fg:w="15"/><text x="86.5029%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.01%)</title><rect x="86.2529%" y="965" width="0.0140%" height="15" fill="rgb(208,206,53)" fg:x="92125" fg:w="15"/><text x="86.5029%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (12 samples, 0.01%)</title><rect x="86.2669%" y="1013" width="0.0112%" height="15" fill="rgb(251,74,39)" fg:x="92140" fg:w="12"/><text x="86.5169%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (12 samples, 0.01%)</title><rect x="86.2669%" y="997" width="0.0112%" height="15" fill="rgb(226,47,5)" fg:x="92140" fg:w="12"/><text x="86.5169%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="86.2669%" y="981" width="0.0112%" height="15" fill="rgb(234,111,33)" fg:x="92140" fg:w="12"/><text x="86.5169%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="86.2669%" y="965" width="0.0112%" height="15" fill="rgb(251,14,10)" fg:x="92140" fg:w="12"/><text x="86.5169%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="86.2679%" y="949" width="0.0103%" height="15" fill="rgb(232,43,0)" fg:x="92141" fg:w="11"/><text x="86.5179%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="86.2679%" y="933" width="0.0103%" height="15" fill="rgb(222,68,43)" fg:x="92141" fg:w="11"/><text x="86.5179%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (44 samples, 0.04%)</title><rect x="86.2529%" y="1029" width="0.0412%" height="15" fill="rgb(217,24,23)" fg:x="92125" fg:w="44"/><text x="86.5029%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (17 samples, 0.02%)</title><rect x="86.2782%" y="1013" width="0.0159%" height="15" fill="rgb(229,209,14)" fg:x="92152" fg:w="17"/><text x="86.5282%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="86.2791%" y="997" width="0.0150%" height="15" fill="rgb(250,149,48)" fg:x="92153" fg:w="16"/><text x="86.5291%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.01%)</title><rect x="86.2791%" y="981" width="0.0150%" height="15" fill="rgb(210,120,37)" fg:x="92153" fg:w="16"/><text x="86.5291%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="86.2810%" y="965" width="0.0131%" height="15" fill="rgb(210,21,8)" fg:x="92155" fg:w="14"/><text x="86.5310%" y="975.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="86.2810%" y="949" width="0.0131%" height="15" fill="rgb(243,145,7)" fg:x="92155" fg:w="14"/><text x="86.5310%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (24 samples, 0.02%)</title><rect x="86.2941%" y="1029" width="0.0225%" height="15" fill="rgb(238,178,32)" fg:x="92169" fg:w="24"/><text x="86.5441%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (34 samples, 0.03%)</title><rect x="86.3390%" y="1013" width="0.0318%" height="15" fill="rgb(222,4,10)" fg:x="92217" fg:w="34"/><text x="86.5890%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (408 samples, 0.38%)</title><rect x="86.5066%" y="997" width="0.3820%" height="15" fill="rgb(239,7,37)" fg:x="92396" fg:w="408"/><text x="86.7566%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17 samples, 0.02%)</title><rect x="86.9804%" y="981" width="0.0159%" height="15" fill="rgb(215,31,37)" fg:x="92902" fg:w="17"/><text x="87.2304%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (17 samples, 0.02%)</title><rect x="86.9963%" y="981" width="0.0159%" height="15" fill="rgb(224,83,33)" fg:x="92919" fg:w="17"/><text x="87.2463%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (14 samples, 0.01%)</title><rect x="86.9991%" y="965" width="0.0131%" height="15" fill="rgb(239,55,3)" fg:x="92922" fg:w="14"/><text x="87.2491%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (14 samples, 0.01%)</title><rect x="86.9991%" y="949" width="0.0131%" height="15" fill="rgb(247,92,11)" fg:x="92922" fg:w="14"/><text x="87.2491%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="86.9991%" y="933" width="0.0131%" height="15" fill="rgb(239,200,7)" fg:x="92922" fg:w="14"/><text x="87.2491%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (203 samples, 0.19%)</title><rect x="87.0178%" y="981" width="0.1901%" height="15" fill="rgb(227,115,8)" fg:x="92942" fg:w="203"/><text x="87.2678%" y="991.50"></text></g><g><title>core::ptr::write (203 samples, 0.19%)</title><rect x="87.0178%" y="965" width="0.1901%" height="15" fill="rgb(215,189,27)" fg:x="92942" fg:w="203"/><text x="87.2678%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (191 samples, 0.18%)</title><rect x="87.0291%" y="949" width="0.1788%" height="15" fill="rgb(251,216,39)" fg:x="92954" fg:w="191"/><text x="87.2791%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (297 samples, 0.28%)</title><rect x="87.2079%" y="981" width="0.2781%" height="15" fill="rgb(207,29,47)" fg:x="93145" fg:w="297"/><text x="87.4579%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (297 samples, 0.28%)</title><rect x="87.2079%" y="965" width="0.2781%" height="15" fill="rgb(210,71,34)" fg:x="93145" fg:w="297"/><text x="87.4579%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (232 samples, 0.22%)</title><rect x="87.4860%" y="981" width="0.2172%" height="15" fill="rgb(253,217,51)" fg:x="93442" fg:w="232"/><text x="87.7360%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (227 samples, 0.21%)</title><rect x="87.4906%" y="965" width="0.2125%" height="15" fill="rgb(222,117,46)" fg:x="93447" fg:w="227"/><text x="87.7406%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,435 samples, 1.34%)</title><rect x="86.3709%" y="1013" width="1.3435%" height="15" fill="rgb(226,132,6)" fg:x="92251" fg:w="1435"/><text x="86.6209%" y="1023.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (882 samples, 0.83%)</title><rect x="86.8886%" y="997" width="0.8258%" height="15" fill="rgb(254,145,51)" fg:x="92804" fg:w="882"/><text x="87.1386%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (12 samples, 0.01%)</title><rect x="87.7032%" y="981" width="0.0112%" height="15" fill="rgb(231,199,27)" fg:x="93674" fg:w="12"/><text x="87.9532%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_store (12 samples, 0.01%)</title><rect x="87.7032%" y="965" width="0.0112%" height="15" fill="rgb(245,158,14)" fg:x="93674" fg:w="12"/><text x="87.9532%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="87.7472%" y="997" width="0.0103%" height="15" fill="rgb(240,113,14)" fg:x="93721" fg:w="11"/><text x="87.9972%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="87.7472%" y="981" width="0.0103%" height="15" fill="rgb(210,20,13)" fg:x="93721" fg:w="11"/><text x="87.9972%" y="991.50"></text></g><g><title>event_listener::Inner::lock (47 samples, 0.04%)</title><rect x="87.7575%" y="997" width="0.0440%" height="15" fill="rgb(241,144,13)" fg:x="93732" fg:w="47"/><text x="88.0075%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (47 samples, 0.04%)</title><rect x="87.7575%" y="981" width="0.0440%" height="15" fill="rgb(235,43,34)" fg:x="93732" fg:w="47"/><text x="88.0075%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (46 samples, 0.04%)</title><rect x="87.7584%" y="965" width="0.0431%" height="15" fill="rgb(208,36,20)" fg:x="93733" fg:w="46"/><text x="88.0084%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (45 samples, 0.04%)</title><rect x="87.7593%" y="949" width="0.0421%" height="15" fill="rgb(239,204,10)" fg:x="93734" fg:w="45"/><text x="88.0093%" y="959.50"></text></g><g><title>___pthread_mutex_lock (45 samples, 0.04%)</title><rect x="87.7593%" y="933" width="0.0421%" height="15" fill="rgb(217,84,43)" fg:x="93734" fg:w="45"/><text x="88.0093%" y="943.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="87.8136%" y="837" width="0.0122%" height="15" fill="rgb(241,170,50)" fg:x="93792" fg:w="13"/><text x="88.0636%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (14 samples, 0.01%)</title><rect x="87.8136%" y="901" width="0.0131%" height="15" fill="rgb(226,205,29)" fg:x="93792" fg:w="14"/><text x="88.0636%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="87.8136%" y="885" width="0.0131%" height="15" fill="rgb(233,113,1)" fg:x="93792" fg:w="14"/><text x="88.0636%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="87.8136%" y="869" width="0.0131%" height="15" fill="rgb(253,98,13)" fg:x="93792" fg:w="14"/><text x="88.0636%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="87.8136%" y="853" width="0.0131%" height="15" fill="rgb(211,115,12)" fg:x="93792" fg:w="14"/><text x="88.0636%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (21 samples, 0.02%)</title><rect x="87.8511%" y="821" width="0.0197%" height="15" fill="rgb(208,12,16)" fg:x="93832" fg:w="21"/><text x="88.1011%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_swap (21 samples, 0.02%)</title><rect x="87.8511%" y="805" width="0.0197%" height="15" fill="rgb(237,193,54)" fg:x="93832" fg:w="21"/><text x="88.1011%" y="815.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (32 samples, 0.03%)</title><rect x="87.8708%" y="821" width="0.0300%" height="15" fill="rgb(243,22,42)" fg:x="93853" fg:w="32"/><text x="88.1208%" y="831.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (32 samples, 0.03%)</title><rect x="87.8708%" y="805" width="0.0300%" height="15" fill="rgb(233,151,36)" fg:x="93853" fg:w="32"/><text x="88.1208%" y="815.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (32 samples, 0.03%)</title><rect x="87.8708%" y="789" width="0.0300%" height="15" fill="rgb(237,57,45)" fg:x="93853" fg:w="32"/><text x="88.1208%" y="799.50"></text></g><g><title>__GI___pthread_cond_signal (32 samples, 0.03%)</title><rect x="87.8708%" y="773" width="0.0300%" height="15" fill="rgb(221,88,17)" fg:x="93853" fg:w="32"/><text x="88.1208%" y="783.50"></text></g><g><title>parking::Unparker::unpark (82 samples, 0.08%)</title><rect x="87.8408%" y="853" width="0.0768%" height="15" fill="rgb(230,79,15)" fg:x="93821" fg:w="82"/><text x="88.0908%" y="863.50"></text></g><g><title>parking::Inner::unpark (74 samples, 0.07%)</title><rect x="87.8483%" y="837" width="0.0693%" height="15" fill="rgb(213,57,13)" fg:x="93829" fg:w="74"/><text x="88.0983%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="87.9007%" y="821" width="0.0169%" height="15" fill="rgb(222,116,39)" fg:x="93885" fg:w="18"/><text x="88.1507%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.02%)</title><rect x="87.9007%" y="805" width="0.0169%" height="15" fill="rgb(245,107,2)" fg:x="93885" fg:w="18"/><text x="88.1507%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (18 samples, 0.02%)</title><rect x="87.9007%" y="789" width="0.0169%" height="15" fill="rgb(238,1,10)" fg:x="93885" fg:w="18"/><text x="88.1507%" y="799.50"></text></g><g><title>___pthread_mutex_lock (18 samples, 0.02%)</title><rect x="87.9007%" y="773" width="0.0169%" height="15" fill="rgb(249,4,48)" fg:x="93885" fg:w="18"/><text x="88.1507%" y="783.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (94 samples, 0.09%)</title><rect x="87.8333%" y="869" width="0.0880%" height="15" fill="rgb(223,151,18)" fg:x="93813" fg:w="94"/><text x="88.0833%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (107 samples, 0.10%)</title><rect x="87.8333%" y="901" width="0.1002%" height="15" fill="rgb(227,65,43)" fg:x="93813" fg:w="107"/><text x="88.0833%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (107 samples, 0.10%)</title><rect x="87.8333%" y="885" width="0.1002%" height="15" fill="rgb(218,40,45)" fg:x="93813" fg:w="107"/><text x="88.0833%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="87.9213%" y="869" width="0.0122%" height="15" fill="rgb(252,121,31)" fg:x="93907" fg:w="13"/><text x="88.1713%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="87.9213%" y="853" width="0.0122%" height="15" fill="rgb(219,158,43)" fg:x="93907" fg:w="13"/><text x="88.1713%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="87.9213%" y="837" width="0.0122%" height="15" fill="rgb(231,162,42)" fg:x="93907" fg:w="13"/><text x="88.1713%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="87.9213%" y="821" width="0.0122%" height="15" fill="rgb(217,179,25)" fg:x="93907" fg:w="13"/><text x="88.1713%" y="831.50"></text></g><g><title>async_executor::State::notify (146 samples, 0.14%)</title><rect x="87.8090%" y="917" width="0.1367%" height="15" fill="rgb(206,212,31)" fg:x="93787" fg:w="146"/><text x="88.0590%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="87.9335%" y="901" width="0.0122%" height="15" fill="rgb(235,144,12)" fg:x="93920" fg:w="13"/><text x="88.1835%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="87.9335%" y="885" width="0.0122%" height="15" fill="rgb(213,51,10)" fg:x="93920" fg:w="13"/><text x="88.1835%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="87.9344%" y="869" width="0.0112%" height="15" fill="rgb(231,145,14)" fg:x="93921" fg:w="12"/><text x="88.1844%" y="879.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="87.9344%" y="853" width="0.0112%" height="15" fill="rgb(235,15,28)" fg:x="93921" fg:w="12"/><text x="88.1844%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.01%)</title><rect x="87.9531%" y="885" width="0.0103%" height="15" fill="rgb(237,206,10)" fg:x="93941" fg:w="11"/><text x="88.2031%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.01%)</title><rect x="87.9531%" y="869" width="0.0103%" height="15" fill="rgb(236,227,27)" fg:x="93941" fg:w="11"/><text x="88.2031%" y="879.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (28 samples, 0.03%)</title><rect x="87.9457%" y="917" width="0.0262%" height="15" fill="rgb(246,83,35)" fg:x="93933" fg:w="28"/><text x="88.1957%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (26 samples, 0.02%)</title><rect x="87.9475%" y="901" width="0.0243%" height="15" fill="rgb(220,136,24)" fg:x="93935" fg:w="26"/><text x="88.1975%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (175 samples, 0.16%)</title><rect x="87.8090%" y="933" width="0.1638%" height="15" fill="rgb(217,3,25)" fg:x="93787" fg:w="175"/><text x="88.0590%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (22 samples, 0.02%)</title><rect x="87.9728%" y="933" width="0.0206%" height="15" fill="rgb(239,24,14)" fg:x="93962" fg:w="22"/><text x="88.2228%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (22 samples, 0.02%)</title><rect x="87.9728%" y="917" width="0.0206%" height="15" fill="rgb(244,16,53)" fg:x="93962" fg:w="22"/><text x="88.2228%" y="927.50"></text></g><g><title>event_listener::List::notify (211 samples, 0.20%)</title><rect x="87.8015%" y="997" width="0.1976%" height="15" fill="rgb(208,175,44)" fg:x="93779" fg:w="211"/><text x="88.0515%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (209 samples, 0.20%)</title><rect x="87.8033%" y="981" width="0.1957%" height="15" fill="rgb(252,18,48)" fg:x="93781" fg:w="209"/><text x="88.0533%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (209 samples, 0.20%)</title><rect x="87.8033%" y="965" width="0.1957%" height="15" fill="rgb(234,199,32)" fg:x="93781" fg:w="209"/><text x="88.0533%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (205 samples, 0.19%)</title><rect x="87.8071%" y="949" width="0.1919%" height="15" fill="rgb(225,77,54)" fg:x="93785" fg:w="205"/><text x="88.0571%" y="959.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,862 samples, 2.68%)</title><rect x="86.3166%" y="1029" width="2.6796%" height="15" fill="rgb(225,42,25)" fg:x="92193" fg:w="2862"/><text x="86.5666%" y="1039.50">as..</text></g><g><title>event_listener::Event::notify (1,369 samples, 1.28%)</title><rect x="87.7144%" y="1013" width="1.2817%" height="15" fill="rgb(242,227,46)" fg:x="93686" fg:w="1369"/><text x="87.9644%" y="1023.50"></text></g><g><title>event_listener::full_fence (1,065 samples, 1.00%)</title><rect x="87.9990%" y="997" width="0.9971%" height="15" fill="rgb(246,197,35)" fg:x="93990" fg:w="1065"/><text x="88.2490%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,045 samples, 0.98%)</title><rect x="88.0178%" y="981" width="0.9784%" height="15" fill="rgb(215,159,26)" fg:x="94010" fg:w="1045"/><text x="88.2678%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,045 samples, 0.98%)</title><rect x="88.0178%" y="965" width="0.9784%" height="15" fill="rgb(212,194,50)" fg:x="94010" fg:w="1045"/><text x="88.2678%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (453 samples, 0.42%)</title><rect x="89.0046%" y="1029" width="0.4241%" height="15" fill="rgb(246,132,1)" fg:x="95064" fg:w="453"/><text x="89.2546%" y="1039.50"></text></g><g><title>core::mem::replace (453 samples, 0.42%)</title><rect x="89.0046%" y="1013" width="0.4241%" height="15" fill="rgb(217,71,7)" fg:x="95064" fg:w="453"/><text x="89.2546%" y="1023.50"></text></g><g><title>core::ptr::read (450 samples, 0.42%)</title><rect x="89.0074%" y="997" width="0.4213%" height="15" fill="rgb(252,59,32)" fg:x="95067" fg:w="450"/><text x="89.2574%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (426 samples, 0.40%)</title><rect x="89.0298%" y="981" width="0.3988%" height="15" fill="rgb(253,204,25)" fg:x="95091" fg:w="426"/><text x="89.2798%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (534 samples, 0.50%)</title><rect x="89.4287%" y="1029" width="0.5000%" height="15" fill="rgb(232,21,16)" fg:x="95517" fg:w="534"/><text x="89.6787%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (516 samples, 0.48%)</title><rect x="89.4455%" y="1013" width="0.4831%" height="15" fill="rgb(248,90,29)" fg:x="95535" fg:w="516"/><text x="89.6955%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="89.9315%" y="1013" width="0.0234%" height="15" fill="rgb(249,223,7)" fg:x="96054" fg:w="25"/><text x="90.1815%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.02%)</title><rect x="89.9324%" y="997" width="0.0225%" height="15" fill="rgb(231,119,42)" fg:x="96055" fg:w="24"/><text x="90.1824%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.02%)</title><rect x="89.9324%" y="981" width="0.0225%" height="15" fill="rgb(215,41,35)" fg:x="96055" fg:w="24"/><text x="90.1824%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (21 samples, 0.02%)</title><rect x="89.9549%" y="1013" width="0.0197%" height="15" fill="rgb(220,44,45)" fg:x="96079" fg:w="21"/><text x="90.2049%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (21 samples, 0.02%)</title><rect x="89.9549%" y="997" width="0.0197%" height="15" fill="rgb(253,197,36)" fg:x="96079" fg:w="21"/><text x="90.2049%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="89.9549%" y="981" width="0.0197%" height="15" fill="rgb(245,225,54)" fg:x="96079" fg:w="21"/><text x="90.2049%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (21 samples, 0.02%)</title><rect x="89.9549%" y="965" width="0.0197%" height="15" fill="rgb(239,94,37)" fg:x="96079" fg:w="21"/><text x="90.2049%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (21 samples, 0.02%)</title><rect x="89.9549%" y="949" width="0.0197%" height="15" fill="rgb(242,217,10)" fg:x="96079" fg:w="21"/><text x="90.2049%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (21 samples, 0.02%)</title><rect x="89.9549%" y="933" width="0.0197%" height="15" fill="rgb(250,193,7)" fg:x="96079" fg:w="21"/><text x="90.2049%" y="943.50"></text></g><g><title>event_listener::Inner::lock (20 samples, 0.02%)</title><rect x="89.9755%" y="1013" width="0.0187%" height="15" fill="rgb(230,104,19)" fg:x="96101" fg:w="20"/><text x="90.2255%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="89.9755%" y="997" width="0.0187%" height="15" fill="rgb(230,181,4)" fg:x="96101" fg:w="20"/><text x="90.2255%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="89.9755%" y="981" width="0.0187%" height="15" fill="rgb(216,219,49)" fg:x="96101" fg:w="20"/><text x="90.2255%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="89.9755%" y="965" width="0.0187%" height="15" fill="rgb(254,144,0)" fg:x="96101" fg:w="20"/><text x="90.2255%" y="975.50"></text></g><g><title>___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="89.9755%" y="949" width="0.0187%" height="15" fill="rgb(205,209,38)" fg:x="96101" fg:w="20"/><text x="90.2255%" y="959.50"></text></g><g><title>event_listener::Event::listen (78 samples, 0.07%)</title><rect x="89.9305%" y="1029" width="0.0730%" height="15" fill="rgb(240,21,42)" fg:x="96053" fg:w="78"/><text x="90.1805%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (36 samples, 0.03%)</title><rect x="90.0120%" y="933" width="0.0337%" height="15" fill="rgb(241,132,3)" fg:x="96140" fg:w="36"/><text x="90.2620%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (38 samples, 0.04%)</title><rect x="90.0110%" y="1013" width="0.0356%" height="15" fill="rgb(225,14,2)" fg:x="96139" fg:w="38"/><text x="90.2610%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (38 samples, 0.04%)</title><rect x="90.0110%" y="997" width="0.0356%" height="15" fill="rgb(210,141,35)" fg:x="96139" fg:w="38"/><text x="90.2610%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="90.0110%" y="981" width="0.0356%" height="15" fill="rgb(251,14,44)" fg:x="96139" fg:w="38"/><text x="90.2610%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (38 samples, 0.04%)</title><rect x="90.0110%" y="965" width="0.0356%" height="15" fill="rgb(247,48,18)" fg:x="96139" fg:w="38"/><text x="90.2610%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (37 samples, 0.03%)</title><rect x="90.0120%" y="949" width="0.0346%" height="15" fill="rgb(225,0,40)" fg:x="96140" fg:w="37"/><text x="90.2620%" y="959.50"></text></g><g><title>event_listener::Inner::lock (59 samples, 0.06%)</title><rect x="90.0504%" y="1013" width="0.0552%" height="15" fill="rgb(221,31,33)" fg:x="96181" fg:w="59"/><text x="90.3004%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (59 samples, 0.06%)</title><rect x="90.0504%" y="997" width="0.0552%" height="15" fill="rgb(237,42,40)" fg:x="96181" fg:w="59"/><text x="90.3004%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (54 samples, 0.05%)</title><rect x="90.0551%" y="981" width="0.0506%" height="15" fill="rgb(233,51,29)" fg:x="96186" fg:w="54"/><text x="90.3051%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (53 samples, 0.05%)</title><rect x="90.0560%" y="965" width="0.0496%" height="15" fill="rgb(226,58,20)" fg:x="96187" fg:w="53"/><text x="90.3060%" y="975.50"></text></g><g><title>___pthread_mutex_lock (53 samples, 0.05%)</title><rect x="90.0560%" y="949" width="0.0496%" height="15" fill="rgb(208,98,7)" fg:x="96187" fg:w="53"/><text x="90.3060%" y="959.50"></text></g><g><title>__GI___lll_lock_wait (31 samples, 0.03%)</title><rect x="90.0766%" y="933" width="0.0290%" height="15" fill="rgb(228,143,44)" fg:x="96209" fg:w="31"/><text x="90.3266%" y="943.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4,473 samples, 4.19%)</title><rect x="86.1611%" y="1045" width="4.1879%" height="15" fill="rgb(246,55,38)" fg:x="92027" fg:w="4473"/><text x="86.4111%" y="1055.50">&lt;asyn..</text></g><g><title>event_listener::Event::notify (369 samples, 0.35%)</title><rect x="90.0036%" y="1029" width="0.3455%" height="15" fill="rgb(247,87,16)" fg:x="96131" fg:w="369"/><text x="90.2536%" y="1039.50"></text></g><g><title>event_listener::full_fence (258 samples, 0.24%)</title><rect x="90.1075%" y="1013" width="0.2416%" height="15" fill="rgb(234,129,42)" fg:x="96242" fg:w="258"/><text x="90.3575%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (252 samples, 0.24%)</title><rect x="90.1131%" y="997" width="0.2359%" height="15" fill="rgb(220,82,16)" fg:x="96248" fg:w="252"/><text x="90.3631%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (252 samples, 0.24%)</title><rect x="90.1131%" y="981" width="0.2359%" height="15" fill="rgb(211,88,4)" fg:x="96248" fg:w="252"/><text x="90.3631%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.01%)</title><rect x="90.3509%" y="981" width="0.0150%" height="15" fill="rgb(248,151,21)" fg:x="96502" fg:w="16"/><text x="90.6009%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (14 samples, 0.01%)</title><rect x="90.3528%" y="965" width="0.0131%" height="15" fill="rgb(238,163,6)" fg:x="96504" fg:w="14"/><text x="90.6028%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="90.3528%" y="949" width="0.0131%" height="15" fill="rgb(209,183,11)" fg:x="96504" fg:w="14"/><text x="90.6028%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="90.3537%" y="933" width="0.0122%" height="15" fill="rgb(219,37,20)" fg:x="96505" fg:w="13"/><text x="90.6037%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="90.3547%" y="917" width="0.0112%" height="15" fill="rgb(210,158,4)" fg:x="96506" fg:w="12"/><text x="90.6047%" y="927.50"></text></g><g><title>event_listener::Inner::lock (42 samples, 0.04%)</title><rect x="90.3668%" y="981" width="0.0393%" height="15" fill="rgb(221,167,53)" fg:x="96519" fg:w="42"/><text x="90.6168%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (42 samples, 0.04%)</title><rect x="90.3668%" y="965" width="0.0393%" height="15" fill="rgb(237,151,45)" fg:x="96519" fg:w="42"/><text x="90.6168%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (41 samples, 0.04%)</title><rect x="90.3678%" y="949" width="0.0384%" height="15" fill="rgb(231,39,3)" fg:x="96520" fg:w="41"/><text x="90.6178%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (38 samples, 0.04%)</title><rect x="90.3706%" y="933" width="0.0356%" height="15" fill="rgb(212,167,28)" fg:x="96523" fg:w="38"/><text x="90.6206%" y="943.50"></text></g><g><title>___pthread_mutex_lock (38 samples, 0.04%)</title><rect x="90.3706%" y="917" width="0.0356%" height="15" fill="rgb(232,178,8)" fg:x="96523" fg:w="38"/><text x="90.6206%" y="927.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (11,243 samples, 10.53%)</title><rect x="79.8882%" y="1125" width="10.5264%" height="15" fill="rgb(225,151,20)" fg:x="85327" fg:w="11243"/><text x="80.1382%" y="1135.50">tremor_runtime:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,543 samples, 4.25%)</title><rect x="86.1611%" y="1109" width="4.2534%" height="15" fill="rgb(238,3,37)" fg:x="92027" fg:w="4543"/><text x="86.4111%" y="1119.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (4,543 samples, 4.25%)</title><rect x="86.1611%" y="1093" width="4.2534%" height="15" fill="rgb(251,147,42)" fg:x="92027" fg:w="4543"/><text x="86.4111%" y="1103.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,543 samples, 4.25%)</title><rect x="86.1611%" y="1077" width="4.2534%" height="15" fill="rgb(208,173,10)" fg:x="92027" fg:w="4543"/><text x="86.4111%" y="1087.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (4,543 samples, 4.25%)</title><rect x="86.1611%" y="1061" width="4.2534%" height="15" fill="rgb(246,225,4)" fg:x="92027" fg:w="4543"/><text x="86.4111%" y="1071.50">tremo..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (70 samples, 0.07%)</title><rect x="90.3490%" y="1045" width="0.0655%" height="15" fill="rgb(248,102,6)" fg:x="96500" fg:w="70"/><text x="90.5990%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (70 samples, 0.07%)</title><rect x="90.3490%" y="1029" width="0.0655%" height="15" fill="rgb(232,6,21)" fg:x="96500" fg:w="70"/><text x="90.5990%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (70 samples, 0.07%)</title><rect x="90.3490%" y="1013" width="0.0655%" height="15" fill="rgb(221,179,22)" fg:x="96500" fg:w="70"/><text x="90.5990%" y="1023.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (70 samples, 0.07%)</title><rect x="90.3490%" y="997" width="0.0655%" height="15" fill="rgb(252,50,20)" fg:x="96500" fg:w="70"/><text x="90.5990%" y="1007.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (21 samples, 0.02%)</title><rect x="90.4146%" y="1125" width="0.0197%" height="15" fill="rgb(222,56,38)" fg:x="96570" fg:w="21"/><text x="90.6646%" y="1135.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (74 samples, 0.07%)</title><rect x="90.4342%" y="1125" width="0.0693%" height="15" fill="rgb(206,193,29)" fg:x="96591" fg:w="74"/><text x="90.6842%" y="1135.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (84 samples, 0.08%)</title><rect x="90.5045%" y="1125" width="0.0786%" height="15" fill="rgb(239,192,45)" fg:x="96666" fg:w="84"/><text x="90.7545%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (24 samples, 0.02%)</title><rect x="90.5606%" y="1109" width="0.0225%" height="15" fill="rgb(254,18,36)" fg:x="96726" fg:w="24"/><text x="90.8106%" y="1119.50"></text></g><g><title>[unknown] (90,532 samples, 84.76%)</title><rect x="5.8694%" y="1141" width="84.7614%" height="15" fill="rgb(221,127,11)" fg:x="6269" fg:w="90532"/><text x="6.1194%" y="1151.50">[unknown]</text></g><g><title>value_trait::Builder::object (51 samples, 0.05%)</title><rect x="90.5831%" y="1125" width="0.0477%" height="15" fill="rgb(234,146,35)" fg:x="96750" fg:w="51"/><text x="90.8331%" y="1135.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (22 samples, 0.02%)</title><rect x="90.6103%" y="1109" width="0.0206%" height="15" fill="rgb(254,201,37)" fg:x="96779" fg:w="22"/><text x="90.8603%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (17 samples, 0.02%)</title><rect x="90.6149%" y="1093" width="0.0159%" height="15" fill="rgb(211,202,23)" fg:x="96784" fg:w="17"/><text x="90.8649%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="90.8762%" y="533" width="0.0159%" height="15" fill="rgb(237,91,2)" fg:x="97063" fg:w="17"/><text x="91.1262%" y="543.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="90.9436%" y="453" width="0.0112%" height="15" fill="rgb(226,228,36)" fg:x="97135" fg:w="12"/><text x="91.1936%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (23 samples, 0.02%)</title><rect x="90.9735%" y="437" width="0.0215%" height="15" fill="rgb(213,63,50)" fg:x="97167" fg:w="23"/><text x="91.2235%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (22 samples, 0.02%)</title><rect x="90.9745%" y="421" width="0.0206%" height="15" fill="rgb(235,194,19)" fg:x="97168" fg:w="22"/><text x="91.2245%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 0.01%)</title><rect x="90.9801%" y="405" width="0.0150%" height="15" fill="rgb(207,204,18)" fg:x="97174" fg:w="16"/><text x="91.2301%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="90.9951%" y="437" width="0.0150%" height="15" fill="rgb(248,8,7)" fg:x="97190" fg:w="16"/><text x="91.2451%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="91.0100%" y="437" width="0.0243%" height="15" fill="rgb(223,145,47)" fg:x="97206" fg:w="26"/><text x="91.2600%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (166 samples, 0.16%)</title><rect x="90.9173%" y="485" width="0.1554%" height="15" fill="rgb(228,84,11)" fg:x="97107" fg:w="166"/><text x="91.1673%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (146 samples, 0.14%)</title><rect x="90.9361%" y="469" width="0.1367%" height="15" fill="rgb(218,76,45)" fg:x="97127" fg:w="146"/><text x="91.1861%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (126 samples, 0.12%)</title><rect x="90.9548%" y="453" width="0.1180%" height="15" fill="rgb(223,80,15)" fg:x="97147" fg:w="126"/><text x="91.2048%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (41 samples, 0.04%)</title><rect x="91.0344%" y="437" width="0.0384%" height="15" fill="rgb(219,218,33)" fg:x="97232" fg:w="41"/><text x="91.2844%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (41 samples, 0.04%)</title><rect x="91.0344%" y="421" width="0.0384%" height="15" fill="rgb(208,51,11)" fg:x="97232" fg:w="41"/><text x="91.2844%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (36 samples, 0.03%)</title><rect x="91.0391%" y="405" width="0.0337%" height="15" fill="rgb(229,165,39)" fg:x="97237" fg:w="36"/><text x="91.2891%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (36 samples, 0.03%)</title><rect x="91.0391%" y="389" width="0.0337%" height="15" fill="rgb(241,100,24)" fg:x="97237" fg:w="36"/><text x="91.2891%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (210 samples, 0.20%)</title><rect x="90.8921%" y="533" width="0.1966%" height="15" fill="rgb(228,14,23)" fg:x="97080" fg:w="210"/><text x="91.1421%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (210 samples, 0.20%)</title><rect x="90.8921%" y="517" width="0.1966%" height="15" fill="rgb(247,116,52)" fg:x="97080" fg:w="210"/><text x="91.1421%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (210 samples, 0.20%)</title><rect x="90.8921%" y="501" width="0.1966%" height="15" fill="rgb(216,149,33)" fg:x="97080" fg:w="210"/><text x="91.1421%" y="511.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (17 samples, 0.02%)</title><rect x="91.0728%" y="485" width="0.0159%" height="15" fill="rgb(238,142,29)" fg:x="97273" fg:w="17"/><text x="91.3228%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (428 samples, 0.40%)</title><rect x="91.2413%" y="501" width="0.4007%" height="15" fill="rgb(224,83,40)" fg:x="97453" fg:w="428"/><text x="91.4913%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (277 samples, 0.26%)</title><rect x="91.3827%" y="485" width="0.2593%" height="15" fill="rgb(234,165,11)" fg:x="97604" fg:w="277"/><text x="91.6327%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (277 samples, 0.26%)</title><rect x="91.3827%" y="469" width="0.2593%" height="15" fill="rgb(215,96,23)" fg:x="97604" fg:w="277"/><text x="91.6327%" y="479.50"></text></g><g><title>async_executor::steal (601 samples, 0.56%)</title><rect x="91.0887%" y="533" width="0.5627%" height="15" fill="rgb(233,179,26)" fg:x="97290" fg:w="601"/><text x="91.3387%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (584 samples, 0.55%)</title><rect x="91.1046%" y="517" width="0.5468%" height="15" fill="rgb(225,129,33)" fg:x="97307" fg:w="584"/><text x="91.3546%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (690 samples, 0.65%)</title><rect x="92.0586%" y="501" width="0.6460%" height="15" fill="rgb(237,49,13)" fg:x="98326" fg:w="690"/><text x="92.3086%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (686 samples, 0.64%)</title><rect x="92.0624%" y="485" width="0.6423%" height="15" fill="rgb(211,3,31)" fg:x="98330" fg:w="686"/><text x="92.3124%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (686 samples, 0.64%)</title><rect x="92.0624%" y="469" width="0.6423%" height="15" fill="rgb(216,152,19)" fg:x="98330" fg:w="686"/><text x="92.3124%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (686 samples, 0.64%)</title><rect x="92.0624%" y="453" width="0.6423%" height="15" fill="rgb(251,121,35)" fg:x="98330" fg:w="686"/><text x="92.3124%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,016 samples, 0.95%)</title><rect x="91.8059%" y="517" width="0.9512%" height="15" fill="rgb(210,217,47)" fg:x="98056" fg:w="1016"/><text x="92.0559%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (56 samples, 0.05%)</title><rect x="92.7047%" y="501" width="0.0524%" height="15" fill="rgb(244,116,22)" fg:x="99016" fg:w="56"/><text x="92.9547%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (54 samples, 0.05%)</title><rect x="92.7065%" y="485" width="0.0506%" height="15" fill="rgb(228,17,21)" fg:x="99018" fg:w="54"/><text x="92.9565%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (273 samples, 0.26%)</title><rect x="92.8048%" y="501" width="0.2556%" height="15" fill="rgb(240,149,34)" fg:x="99123" fg:w="273"/><text x="93.0548%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (271 samples, 0.25%)</title><rect x="92.8067%" y="485" width="0.2537%" height="15" fill="rgb(208,125,47)" fg:x="99125" fg:w="271"/><text x="93.0567%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (271 samples, 0.25%)</title><rect x="92.8067%" y="469" width="0.2537%" height="15" fill="rgb(249,186,39)" fg:x="99125" fg:w="271"/><text x="93.0567%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (271 samples, 0.25%)</title><rect x="92.8067%" y="453" width="0.2537%" height="15" fill="rgb(240,220,33)" fg:x="99125" fg:w="271"/><text x="93.0567%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="93.0642%" y="485" width="0.0122%" height="15" fill="rgb(243,110,23)" fg:x="99400" fg:w="13"/><text x="93.3142%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="93.0642%" y="469" width="0.0122%" height="15" fill="rgb(219,163,46)" fg:x="99400" fg:w="13"/><text x="93.3142%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (16 samples, 0.01%)</title><rect x="93.0633%" y="501" width="0.0150%" height="15" fill="rgb(216,126,30)" fg:x="99399" fg:w="16"/><text x="93.3133%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (18 samples, 0.02%)</title><rect x="93.0829%" y="501" width="0.0169%" height="15" fill="rgb(208,139,11)" fg:x="99420" fg:w="18"/><text x="93.3329%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="93.0829%" y="485" width="0.0169%" height="15" fill="rgb(213,118,36)" fg:x="99420" fg:w="18"/><text x="93.3329%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (71 samples, 0.07%)</title><rect x="93.0998%" y="501" width="0.0665%" height="15" fill="rgb(226,43,17)" fg:x="99438" fg:w="71"/><text x="93.3498%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (71 samples, 0.07%)</title><rect x="93.0998%" y="485" width="0.0665%" height="15" fill="rgb(254,217,4)" fg:x="99438" fg:w="71"/><text x="93.3498%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (80 samples, 0.07%)</title><rect x="93.1662%" y="501" width="0.0749%" height="15" fill="rgb(210,134,47)" fg:x="99509" fg:w="80"/><text x="93.4162%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_or (80 samples, 0.07%)</title><rect x="93.1662%" y="485" width="0.0749%" height="15" fill="rgb(237,24,49)" fg:x="99509" fg:w="80"/><text x="93.4162%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,886 samples, 1.77%)</title><rect x="91.6514%" y="533" width="1.7658%" height="15" fill="rgb(251,39,46)" fg:x="97891" fg:w="1886"/><text x="91.9014%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (705 samples, 0.66%)</title><rect x="92.7571%" y="517" width="0.6601%" height="15" fill="rgb(251,220,3)" fg:x="99072" fg:w="705"/><text x="93.0071%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (188 samples, 0.18%)</title><rect x="93.2411%" y="501" width="0.1760%" height="15" fill="rgb(228,105,12)" fg:x="99589" fg:w="188"/><text x="93.4911%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (188 samples, 0.18%)</title><rect x="93.2411%" y="485" width="0.1760%" height="15" fill="rgb(215,196,1)" fg:x="99589" fg:w="188"/><text x="93.4911%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (99 samples, 0.09%)</title><rect x="93.4331%" y="469" width="0.0927%" height="15" fill="rgb(214,33,39)" fg:x="99794" fg:w="99"/><text x="93.6831%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (99 samples, 0.09%)</title><rect x="93.4331%" y="453" width="0.0927%" height="15" fill="rgb(220,19,52)" fg:x="99794" fg:w="99"/><text x="93.6831%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (245 samples, 0.23%)</title><rect x="93.4172%" y="533" width="0.2294%" height="15" fill="rgb(221,78,38)" fg:x="99777" fg:w="245"/><text x="93.6672%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (245 samples, 0.23%)</title><rect x="93.4172%" y="517" width="0.2294%" height="15" fill="rgb(253,30,16)" fg:x="99777" fg:w="245"/><text x="93.6672%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (244 samples, 0.23%)</title><rect x="93.4181%" y="501" width="0.2284%" height="15" fill="rgb(242,65,0)" fg:x="99778" fg:w="244"/><text x="93.6681%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (232 samples, 0.22%)</title><rect x="93.4293%" y="485" width="0.2172%" height="15" fill="rgb(235,201,12)" fg:x="99790" fg:w="232"/><text x="93.6793%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (129 samples, 0.12%)</title><rect x="93.5258%" y="469" width="0.1208%" height="15" fill="rgb(233,161,9)" fg:x="99893" fg:w="129"/><text x="93.7758%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (129 samples, 0.12%)</title><rect x="93.5258%" y="453" width="0.1208%" height="15" fill="rgb(241,207,41)" fg:x="99893" fg:w="129"/><text x="93.7758%" y="463.50"></text></g><g><title>fastrand::Rng::usize (14 samples, 0.01%)</title><rect x="93.6568%" y="469" width="0.0131%" height="15" fill="rgb(212,69,46)" fg:x="100033" fg:w="14"/><text x="93.9068%" y="479.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (12 samples, 0.01%)</title><rect x="93.6587%" y="453" width="0.0112%" height="15" fill="rgb(239,69,45)" fg:x="100035" fg:w="12"/><text x="93.9087%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 0.02%)</title><rect x="93.6503%" y="501" width="0.0234%" height="15" fill="rgb(242,117,48)" fg:x="100026" fg:w="25"/><text x="93.9003%" y="511.50"></text></g><g><title>fastrand::usize::{{closure}} (18 samples, 0.02%)</title><rect x="93.6568%" y="485" width="0.0169%" height="15" fill="rgb(228,41,36)" fg:x="100033" fg:w="18"/><text x="93.9068%" y="495.50"></text></g><g><title>fastrand::usize (32 samples, 0.03%)</title><rect x="93.6465%" y="533" width="0.0300%" height="15" fill="rgb(212,3,32)" fg:x="100022" fg:w="32"/><text x="93.8965%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28 samples, 0.03%)</title><rect x="93.6503%" y="517" width="0.0262%" height="15" fill="rgb(233,41,49)" fg:x="100026" fg:w="28"/><text x="93.9003%" y="527.50"></text></g><g><title>___pthread_rwlock_rdlock (163 samples, 0.15%)</title><rect x="93.6924%" y="485" width="0.1526%" height="15" fill="rgb(252,170,49)" fg:x="100071" fg:w="163"/><text x="93.9424%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (3,354 samples, 3.14%)</title><rect x="90.7872%" y="549" width="3.1402%" height="15" fill="rgb(229,53,26)" fg:x="96968" fg:w="3354"/><text x="91.0372%" y="559.50">asy..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (268 samples, 0.25%)</title><rect x="93.6765%" y="533" width="0.2509%" height="15" fill="rgb(217,157,12)" fg:x="100054" fg:w="268"/><text x="93.9265%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (260 samples, 0.24%)</title><rect x="93.6840%" y="517" width="0.2434%" height="15" fill="rgb(227,17,9)" fg:x="100062" fg:w="260"/><text x="93.9340%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (259 samples, 0.24%)</title><rect x="93.6849%" y="501" width="0.2425%" height="15" fill="rgb(218,84,12)" fg:x="100063" fg:w="259"/><text x="93.9349%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (88 samples, 0.08%)</title><rect x="93.8450%" y="485" width="0.0824%" height="15" fill="rgb(212,79,24)" fg:x="100234" fg:w="88"/><text x="94.0950%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (88 samples, 0.08%)</title><rect x="93.8450%" y="469" width="0.0824%" height="15" fill="rgb(217,222,37)" fg:x="100234" fg:w="88"/><text x="94.0950%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (27 samples, 0.03%)</title><rect x="93.9330%" y="533" width="0.0253%" height="15" fill="rgb(246,208,8)" fg:x="100328" fg:w="27"/><text x="94.1830%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="93.9330%" y="517" width="0.0253%" height="15" fill="rgb(244,133,10)" fg:x="100328" fg:w="27"/><text x="94.1830%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (26 samples, 0.02%)</title><rect x="93.9340%" y="501" width="0.0243%" height="15" fill="rgb(209,219,41)" fg:x="100329" fg:w="26"/><text x="94.1840%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (26 samples, 0.02%)</title><rect x="93.9340%" y="485" width="0.0243%" height="15" fill="rgb(253,175,45)" fg:x="100329" fg:w="26"/><text x="94.1840%" y="495.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (26 samples, 0.02%)</title><rect x="93.9340%" y="469" width="0.0243%" height="15" fill="rgb(235,100,37)" fg:x="100329" fg:w="26"/><text x="94.1840%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (42 samples, 0.04%)</title><rect x="93.9583%" y="533" width="0.0393%" height="15" fill="rgb(225,87,19)" fg:x="100355" fg:w="42"/><text x="94.2083%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.04%)</title><rect x="93.9583%" y="517" width="0.0393%" height="15" fill="rgb(217,152,17)" fg:x="100355" fg:w="42"/><text x="94.2083%" y="527.50"></text></g><g><title>async_io::reactor::Reactor::notify (13 samples, 0.01%)</title><rect x="93.9986%" y="485" width="0.0122%" height="15" fill="rgb(235,72,13)" fg:x="100398" fg:w="13"/><text x="94.2486%" y="495.50"></text></g><g><title>polling::Poller::notify (13 samples, 0.01%)</title><rect x="93.9986%" y="469" width="0.0122%" height="15" fill="rgb(233,140,18)" fg:x="100398" fg:w="13"/><text x="94.2486%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="94.0379%" y="373" width="0.0112%" height="15" fill="rgb(207,212,28)" fg:x="100440" fg:w="12"/><text x="94.2879%" y="383.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="94.0351%" y="453" width="0.0159%" height="15" fill="rgb(220,130,25)" fg:x="100437" fg:w="17"/><text x="94.2851%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (17 samples, 0.02%)</title><rect x="94.0351%" y="437" width="0.0159%" height="15" fill="rgb(205,55,34)" fg:x="100437" fg:w="17"/><text x="94.2851%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="94.0351%" y="421" width="0.0159%" height="15" fill="rgb(237,54,35)" fg:x="100437" fg:w="17"/><text x="94.2851%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="94.0370%" y="405" width="0.0140%" height="15" fill="rgb(208,67,23)" fg:x="100439" fg:w="15"/><text x="94.2870%" y="415.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="94.0379%" y="389" width="0.0131%" height="15" fill="rgb(206,207,50)" fg:x="100440" fg:w="14"/><text x="94.2879%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (77 samples, 0.07%)</title><rect x="94.0510%" y="453" width="0.0721%" height="15" fill="rgb(213,211,42)" fg:x="100454" fg:w="77"/><text x="94.3010%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (77 samples, 0.07%)</title><rect x="94.0510%" y="437" width="0.0721%" height="15" fill="rgb(252,197,50)" fg:x="100454" fg:w="77"/><text x="94.3010%" y="447.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (107 samples, 0.10%)</title><rect x="94.1231%" y="453" width="0.1002%" height="15" fill="rgb(251,211,41)" fg:x="100531" fg:w="107"/><text x="94.3731%" y="463.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (107 samples, 0.10%)</title><rect x="94.1231%" y="437" width="0.1002%" height="15" fill="rgb(229,211,5)" fg:x="100531" fg:w="107"/><text x="94.3731%" y="447.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (107 samples, 0.10%)</title><rect x="94.1231%" y="421" width="0.1002%" height="15" fill="rgb(239,36,31)" fg:x="100531" fg:w="107"/><text x="94.3731%" y="431.50"></text></g><g><title>__GI___pthread_cond_signal (107 samples, 0.10%)</title><rect x="94.1231%" y="405" width="0.1002%" height="15" fill="rgb(248,67,31)" fg:x="100531" fg:w="107"/><text x="94.3731%" y="415.50"></text></g><g><title>parking::Unparker::unpark (311 samples, 0.29%)</title><rect x="94.0154%" y="485" width="0.2912%" height="15" fill="rgb(249,55,44)" fg:x="100416" fg:w="311"/><text x="94.2654%" y="495.50"></text></g><g><title>parking::Inner::unpark (292 samples, 0.27%)</title><rect x="94.0332%" y="469" width="0.2734%" height="15" fill="rgb(216,82,12)" fg:x="100435" fg:w="292"/><text x="94.2832%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (89 samples, 0.08%)</title><rect x="94.2233%" y="453" width="0.0833%" height="15" fill="rgb(242,174,1)" fg:x="100638" fg:w="89"/><text x="94.4733%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (89 samples, 0.08%)</title><rect x="94.2233%" y="437" width="0.0833%" height="15" fill="rgb(208,120,29)" fg:x="100638" fg:w="89"/><text x="94.4733%" y="447.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (89 samples, 0.08%)</title><rect x="94.2233%" y="421" width="0.0833%" height="15" fill="rgb(221,105,43)" fg:x="100638" fg:w="89"/><text x="94.4733%" y="431.50"></text></g><g><title>___pthread_mutex_lock (89 samples, 0.08%)</title><rect x="94.2233%" y="405" width="0.0833%" height="15" fill="rgb(234,124,22)" fg:x="100638" fg:w="89"/><text x="94.4733%" y="415.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (337 samples, 0.32%)</title><rect x="93.9986%" y="501" width="0.3155%" height="15" fill="rgb(212,23,30)" fg:x="100398" fg:w="337"/><text x="94.2486%" y="511.50"></text></g><g><title>core::task::wake::Waker::wake (376 samples, 0.35%)</title><rect x="93.9976%" y="533" width="0.3520%" height="15" fill="rgb(219,122,53)" fg:x="100397" fg:w="376"/><text x="94.2476%" y="543.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (376 samples, 0.35%)</title><rect x="93.9976%" y="517" width="0.3520%" height="15" fill="rgb(248,84,24)" fg:x="100397" fg:w="376"/><text x="94.2476%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (38 samples, 0.04%)</title><rect x="94.3141%" y="501" width="0.0356%" height="15" fill="rgb(245,115,18)" fg:x="100735" fg:w="38"/><text x="94.5641%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="94.3141%" y="485" width="0.0356%" height="15" fill="rgb(227,176,51)" fg:x="100735" fg:w="38"/><text x="94.5641%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (37 samples, 0.03%)</title><rect x="94.3150%" y="469" width="0.0346%" height="15" fill="rgb(229,63,42)" fg:x="100736" fg:w="37"/><text x="94.5650%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (37 samples, 0.03%)</title><rect x="94.3150%" y="453" width="0.0346%" height="15" fill="rgb(247,202,24)" fg:x="100736" fg:w="37"/><text x="94.5650%" y="463.50"></text></g><g><title>async_executor::State::notify (482 samples, 0.45%)</title><rect x="93.9274%" y="549" width="0.4513%" height="15" fill="rgb(244,173,20)" fg:x="100322" fg:w="482"/><text x="94.1774%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.03%)</title><rect x="94.3497%" y="533" width="0.0290%" height="15" fill="rgb(242,81,47)" fg:x="100773" fg:w="31"/><text x="94.5997%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.03%)</title><rect x="94.3506%" y="517" width="0.0281%" height="15" fill="rgb(231,185,54)" fg:x="100774" fg:w="30"/><text x="94.6006%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (30 samples, 0.03%)</title><rect x="94.3506%" y="501" width="0.0281%" height="15" fill="rgb(243,55,32)" fg:x="100774" fg:w="30"/><text x="94.6006%" y="511.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="94.3506%" y="485" width="0.0281%" height="15" fill="rgb(208,167,19)" fg:x="100774" fg:w="30"/><text x="94.6006%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (79 samples, 0.07%)</title><rect x="94.3890%" y="517" width="0.0740%" height="15" fill="rgb(231,72,35)" fg:x="100815" fg:w="79"/><text x="94.6390%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (79 samples, 0.07%)</title><rect x="94.3890%" y="501" width="0.0740%" height="15" fill="rgb(250,173,51)" fg:x="100815" fg:w="79"/><text x="94.6390%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (79 samples, 0.07%)</title><rect x="94.3890%" y="485" width="0.0740%" height="15" fill="rgb(209,5,22)" fg:x="100815" fg:w="79"/><text x="94.6390%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (79 samples, 0.07%)</title><rect x="94.3890%" y="469" width="0.0740%" height="15" fill="rgb(250,174,19)" fg:x="100815" fg:w="79"/><text x="94.6390%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (78 samples, 0.07%)</title><rect x="94.3899%" y="453" width="0.0730%" height="15" fill="rgb(217,3,49)" fg:x="100816" fg:w="78"/><text x="94.6399%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (78 samples, 0.07%)</title><rect x="94.3899%" y="437" width="0.0730%" height="15" fill="rgb(218,225,5)" fg:x="100816" fg:w="78"/><text x="94.6399%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (24 samples, 0.02%)</title><rect x="94.4630%" y="517" width="0.0225%" height="15" fill="rgb(236,89,11)" fg:x="100894" fg:w="24"/><text x="94.7130%" y="527.50"></text></g><g><title>async_executor::Sleepers::insert (128 samples, 0.12%)</title><rect x="94.3862%" y="533" width="0.1198%" height="15" fill="rgb(206,33,28)" fg:x="100812" fg:w="128"/><text x="94.6362%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.02%)</title><rect x="94.4854%" y="517" width="0.0206%" height="15" fill="rgb(241,56,42)" fg:x="100918" fg:w="22"/><text x="94.7354%" y="527.50"></text></g><g><title>core::ptr::write (21 samples, 0.02%)</title><rect x="94.4864%" y="501" width="0.0197%" height="15" fill="rgb(222,44,11)" fg:x="100919" fg:w="21"/><text x="94.7364%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (50 samples, 0.05%)</title><rect x="94.5416%" y="517" width="0.0468%" height="15" fill="rgb(234,111,20)" fg:x="100978" fg:w="50"/><text x="94.7916%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (50 samples, 0.05%)</title><rect x="94.5416%" y="501" width="0.0468%" height="15" fill="rgb(237,77,6)" fg:x="100978" fg:w="50"/><text x="94.7916%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (49 samples, 0.05%)</title><rect x="94.5425%" y="485" width="0.0459%" height="15" fill="rgb(235,111,23)" fg:x="100979" fg:w="49"/><text x="94.7925%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (49 samples, 0.05%)</title><rect x="94.5425%" y="469" width="0.0459%" height="15" fill="rgb(251,135,29)" fg:x="100979" fg:w="49"/><text x="94.7925%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (49 samples, 0.05%)</title><rect x="94.5425%" y="453" width="0.0459%" height="15" fill="rgb(217,57,1)" fg:x="100979" fg:w="49"/><text x="94.7925%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (49 samples, 0.05%)</title><rect x="94.5425%" y="437" width="0.0459%" height="15" fill="rgb(249,119,31)" fg:x="100979" fg:w="49"/><text x="94.7925%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 0.02%)</title><rect x="94.5884%" y="517" width="0.0197%" height="15" fill="rgb(233,164,33)" fg:x="101028" fg:w="21"/><text x="94.8384%" y="527.50"></text></g><g><title>core::ptr::write (18 samples, 0.02%)</title><rect x="94.5912%" y="501" width="0.0169%" height="15" fill="rgb(250,217,43)" fg:x="101031" fg:w="18"/><text x="94.8412%" y="511.50"></text></g><g><title>async_executor::Sleepers::update (116 samples, 0.11%)</title><rect x="94.5079%" y="533" width="0.1086%" height="15" fill="rgb(232,154,50)" fg:x="100942" fg:w="116"/><text x="94.7579%" y="543.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (152 samples, 0.14%)</title><rect x="94.6203%" y="469" width="0.1423%" height="15" fill="rgb(227,190,8)" fg:x="101062" fg:w="152"/><text x="94.8703%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (162 samples, 0.15%)</title><rect x="94.6165%" y="533" width="0.1517%" height="15" fill="rgb(209,217,32)" fg:x="101058" fg:w="162"/><text x="94.8665%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.15%)</title><rect x="94.6165%" y="517" width="0.1517%" height="15" fill="rgb(243,203,50)" fg:x="101058" fg:w="162"/><text x="94.8665%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (159 samples, 0.15%)</title><rect x="94.6193%" y="501" width="0.1489%" height="15" fill="rgb(232,152,27)" fg:x="101061" fg:w="159"/><text x="94.8693%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (158 samples, 0.15%)</title><rect x="94.6203%" y="485" width="0.1479%" height="15" fill="rgb(240,34,29)" fg:x="101062" fg:w="158"/><text x="94.8703%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (103 samples, 0.10%)</title><rect x="94.7682%" y="533" width="0.0964%" height="15" fill="rgb(215,185,52)" fg:x="101220" fg:w="103"/><text x="95.0182%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (103 samples, 0.10%)</title><rect x="94.7682%" y="517" width="0.0964%" height="15" fill="rgb(240,89,49)" fg:x="101220" fg:w="103"/><text x="95.0182%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (86 samples, 0.08%)</title><rect x="94.8646%" y="533" width="0.0805%" height="15" fill="rgb(225,12,52)" fg:x="101323" fg:w="86"/><text x="95.1146%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (86 samples, 0.08%)</title><rect x="94.8646%" y="517" width="0.0805%" height="15" fill="rgb(239,128,45)" fg:x="101323" fg:w="86"/><text x="95.1146%" y="527.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="94.9451%" y="517" width="0.0122%" height="15" fill="rgb(211,78,47)" fg:x="101409" fg:w="13"/><text x="95.1951%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (12 samples, 0.01%)</title><rect x="94.9461%" y="501" width="0.0112%" height="15" fill="rgb(232,31,21)" fg:x="101410" fg:w="12"/><text x="95.1961%" y="511.50"></text></g><g><title>async_executor::Ticker::sleep (1,156 samples, 1.08%)</title><rect x="94.3787%" y="549" width="1.0823%" height="15" fill="rgb(222,168,14)" fg:x="100804" fg:w="1156"/><text x="94.6287%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (551 samples, 0.52%)</title><rect x="94.9451%" y="533" width="0.5159%" height="15" fill="rgb(209,128,24)" fg:x="101409" fg:w="551"/><text x="95.1951%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (538 samples, 0.50%)</title><rect x="94.9573%" y="517" width="0.5037%" height="15" fill="rgb(249,35,13)" fg:x="101422" fg:w="538"/><text x="95.2073%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (483 samples, 0.45%)</title><rect x="95.0088%" y="501" width="0.4522%" height="15" fill="rgb(218,7,2)" fg:x="101477" fg:w="483"/><text x="95.2588%" y="511.50"></text></g><g><title>___pthread_mutex_lock (483 samples, 0.45%)</title><rect x="95.0088%" y="485" width="0.4522%" height="15" fill="rgb(238,107,27)" fg:x="101477" fg:w="483"/><text x="95.2588%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (37 samples, 0.03%)</title><rect x="95.4264%" y="469" width="0.0346%" height="15" fill="rgb(217,88,38)" fg:x="101923" fg:w="37"/><text x="95.6764%" y="479.50"></text></g><g><title>async_executor::Sleepers::remove (44 samples, 0.04%)</title><rect x="95.4676%" y="533" width="0.0412%" height="15" fill="rgb(230,207,0)" fg:x="101967" fg:w="44"/><text x="95.7176%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (31 samples, 0.03%)</title><rect x="95.4797%" y="517" width="0.0290%" height="15" fill="rgb(249,64,54)" fg:x="101980" fg:w="31"/><text x="95.7297%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (31 samples, 0.03%)</title><rect x="95.4797%" y="501" width="0.0290%" height="15" fill="rgb(231,7,11)" fg:x="101980" fg:w="31"/><text x="95.7297%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="95.4797%" y="485" width="0.0290%" height="15" fill="rgb(205,149,21)" fg:x="101980" fg:w="31"/><text x="95.7297%" y="495.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (31 samples, 0.03%)</title><rect x="95.4797%" y="469" width="0.0290%" height="15" fill="rgb(215,126,34)" fg:x="101980" fg:w="31"/><text x="95.7297%" y="479.50"></text></g><g><title>core::mem::drop (30 samples, 0.03%)</title><rect x="95.4807%" y="453" width="0.0281%" height="15" fill="rgb(241,132,45)" fg:x="101981" fg:w="30"/><text x="95.7307%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (30 samples, 0.03%)</title><rect x="95.4807%" y="437" width="0.0281%" height="15" fill="rgb(252,69,32)" fg:x="101981" fg:w="30"/><text x="95.7307%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="95.4807%" y="421" width="0.0281%" height="15" fill="rgb(232,204,19)" fg:x="101981" fg:w="30"/><text x="95.7307%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (29 samples, 0.03%)</title><rect x="95.4816%" y="405" width="0.0272%" height="15" fill="rgb(249,15,47)" fg:x="101982" fg:w="29"/><text x="95.7316%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (29 samples, 0.03%)</title><rect x="95.4816%" y="389" width="0.0272%" height="15" fill="rgb(209,227,23)" fg:x="101982" fg:w="29"/><text x="95.7316%" y="399.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (40 samples, 0.04%)</title><rect x="95.5088%" y="469" width="0.0375%" height="15" fill="rgb(248,92,24)" fg:x="102011" fg:w="40"/><text x="95.7588%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (41 samples, 0.04%)</title><rect x="95.5088%" y="533" width="0.0384%" height="15" fill="rgb(247,59,2)" fg:x="102011" fg:w="41"/><text x="95.7588%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="95.5088%" y="517" width="0.0384%" height="15" fill="rgb(221,30,5)" fg:x="102011" fg:w="41"/><text x="95.7588%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (41 samples, 0.04%)</title><rect x="95.5088%" y="501" width="0.0384%" height="15" fill="rgb(208,108,53)" fg:x="102011" fg:w="41"/><text x="95.7588%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (41 samples, 0.04%)</title><rect x="95.5088%" y="485" width="0.0384%" height="15" fill="rgb(211,183,26)" fg:x="102011" fg:w="41"/><text x="95.7588%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (48 samples, 0.04%)</title><rect x="95.5472%" y="533" width="0.0449%" height="15" fill="rgb(232,132,4)" fg:x="102052" fg:w="48"/><text x="95.7972%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (48 samples, 0.04%)</title><rect x="95.5472%" y="517" width="0.0449%" height="15" fill="rgb(253,128,37)" fg:x="102052" fg:w="48"/><text x="95.7972%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (54 samples, 0.05%)</title><rect x="95.5921%" y="533" width="0.0506%" height="15" fill="rgb(221,58,24)" fg:x="102100" fg:w="54"/><text x="95.8421%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (54 samples, 0.05%)</title><rect x="95.5921%" y="517" width="0.0506%" height="15" fill="rgb(230,54,45)" fg:x="102100" fg:w="54"/><text x="95.8421%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,353 samples, 5.01%)</title><rect x="90.7161%" y="613" width="5.0118%" height="15" fill="rgb(254,21,18)" fg:x="96892" fg:w="5353"/><text x="90.9661%" y="623.50">&lt;core:..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (5,353 samples, 5.01%)</title><rect x="90.7161%" y="597" width="5.0118%" height="15" fill="rgb(221,108,0)" fg:x="96892" fg:w="5353"/><text x="90.9661%" y="607.50">async_..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5,347 samples, 5.01%)</title><rect x="90.7217%" y="581" width="5.0062%" height="15" fill="rgb(206,95,1)" fg:x="96898" fg:w="5347"/><text x="90.9717%" y="591.50">&lt;futur..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (5,343 samples, 5.00%)</title><rect x="90.7254%" y="565" width="5.0024%" height="15" fill="rgb(237,52,5)" fg:x="96902" fg:w="5343"/><text x="90.9754%" y="575.50">async_..</text></g><g><title>async_executor::Ticker::wake (285 samples, 0.27%)</title><rect x="95.4610%" y="549" width="0.2668%" height="15" fill="rgb(218,150,34)" fg:x="101960" fg:w="285"/><text x="95.7110%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (91 samples, 0.09%)</title><rect x="95.6426%" y="533" width="0.0852%" height="15" fill="rgb(235,194,28)" fg:x="102154" fg:w="91"/><text x="95.8926%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (87 samples, 0.08%)</title><rect x="95.6464%" y="517" width="0.0815%" height="15" fill="rgb(245,92,18)" fg:x="102158" fg:w="87"/><text x="95.8964%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (85 samples, 0.08%)</title><rect x="95.6483%" y="501" width="0.0796%" height="15" fill="rgb(253,203,53)" fg:x="102160" fg:w="85"/><text x="95.8983%" y="511.50"></text></g><g><title>___pthread_mutex_lock (85 samples, 0.08%)</title><rect x="95.6483%" y="485" width="0.0796%" height="15" fill="rgb(249,185,47)" fg:x="102160" fg:w="85"/><text x="95.8983%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (19 samples, 0.02%)</title><rect x="95.7101%" y="469" width="0.0178%" height="15" fill="rgb(252,194,52)" fg:x="102226" fg:w="19"/><text x="95.9601%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,415 samples, 5.07%)</title><rect x="90.7011%" y="645" width="5.0698%" height="15" fill="rgb(210,53,36)" fg:x="96876" fg:w="5415"/><text x="90.9511%" y="655.50">&lt;core:..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (5,413 samples, 5.07%)</title><rect x="90.7029%" y="629" width="5.0680%" height="15" fill="rgb(237,37,25)" fg:x="96878" fg:w="5413"/><text x="90.9529%" y="639.50">async_..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (45 samples, 0.04%)</title><rect x="95.7288%" y="613" width="0.0421%" height="15" fill="rgb(242,116,27)" fg:x="102246" fg:w="45"/><text x="95.9788%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (45 samples, 0.04%)</title><rect x="95.7288%" y="597" width="0.0421%" height="15" fill="rgb(213,185,26)" fg:x="102246" fg:w="45"/><text x="95.9788%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (65 samples, 0.06%)</title><rect x="95.8926%" y="517" width="0.0609%" height="15" fill="rgb(225,204,8)" fg:x="102421" fg:w="65"/><text x="96.1426%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (61 samples, 0.06%)</title><rect x="95.8964%" y="501" width="0.0571%" height="15" fill="rgb(254,111,37)" fg:x="102425" fg:w="61"/><text x="96.1464%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (38 samples, 0.04%)</title><rect x="95.9563%" y="501" width="0.0356%" height="15" fill="rgb(242,35,9)" fg:x="102489" fg:w="38"/><text x="96.2063%" y="511.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (11 samples, 0.01%)</title><rect x="95.9919%" y="501" width="0.0103%" height="15" fill="rgb(232,138,49)" fg:x="102527" fg:w="11"/><text x="96.2419%" y="511.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (12 samples, 0.01%)</title><rect x="96.0078%" y="485" width="0.0112%" height="15" fill="rgb(247,56,4)" fg:x="102544" fg:w="12"/><text x="96.2578%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="96.0078%" y="469" width="0.0112%" height="15" fill="rgb(226,179,17)" fg:x="102544" fg:w="12"/><text x="96.2578%" y="479.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (198 samples, 0.19%)</title><rect x="95.8355%" y="613" width="0.1854%" height="15" fill="rgb(216,163,45)" fg:x="102360" fg:w="198"/><text x="96.0855%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (198 samples, 0.19%)</title><rect x="95.8355%" y="597" width="0.1854%" height="15" fill="rgb(211,157,3)" fg:x="102360" fg:w="198"/><text x="96.0855%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (195 samples, 0.18%)</title><rect x="95.8383%" y="581" width="0.1826%" height="15" fill="rgb(234,44,20)" fg:x="102363" fg:w="195"/><text x="96.0883%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (142 samples, 0.13%)</title><rect x="95.8879%" y="565" width="0.1329%" height="15" fill="rgb(254,138,23)" fg:x="102416" fg:w="142"/><text x="96.1379%" y="575.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (142 samples, 0.13%)</title><rect x="95.8879%" y="549" width="0.1329%" height="15" fill="rgb(206,119,39)" fg:x="102416" fg:w="142"/><text x="96.1379%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (140 samples, 0.13%)</title><rect x="95.8898%" y="533" width="0.1311%" height="15" fill="rgb(231,105,52)" fg:x="102418" fg:w="140"/><text x="96.1398%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (72 samples, 0.07%)</title><rect x="95.9535%" y="517" width="0.0674%" height="15" fill="rgb(250,20,5)" fg:x="102486" fg:w="72"/><text x="96.2035%" y="527.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (20 samples, 0.02%)</title><rect x="96.0022%" y="501" width="0.0187%" height="15" fill="rgb(215,198,30)" fg:x="102538" fg:w="20"/><text x="96.2522%" y="511.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (32 samples, 0.03%)</title><rect x="96.0209%" y="613" width="0.0300%" height="15" fill="rgb(246,142,8)" fg:x="102558" fg:w="32"/><text x="96.2709%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (28 samples, 0.03%)</title><rect x="96.0246%" y="597" width="0.0262%" height="15" fill="rgb(243,26,38)" fg:x="102562" fg:w="28"/><text x="96.2746%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (28 samples, 0.03%)</title><rect x="96.0246%" y="581" width="0.0262%" height="15" fill="rgb(205,133,28)" fg:x="102562" fg:w="28"/><text x="96.2746%" y="591.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (18 samples, 0.02%)</title><rect x="96.0771%" y="485" width="0.0169%" height="15" fill="rgb(212,34,0)" fg:x="102618" fg:w="18"/><text x="96.3271%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (18 samples, 0.02%)</title><rect x="96.0771%" y="469" width="0.0169%" height="15" fill="rgb(251,226,22)" fg:x="102618" fg:w="18"/><text x="96.3271%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (18 samples, 0.02%)</title><rect x="96.0771%" y="453" width="0.0169%" height="15" fill="rgb(252,119,9)" fg:x="102618" fg:w="18"/><text x="96.3271%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (18 samples, 0.02%)</title><rect x="96.0771%" y="437" width="0.0169%" height="15" fill="rgb(213,150,50)" fg:x="102618" fg:w="18"/><text x="96.3271%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (46 samples, 0.04%)</title><rect x="96.0583%" y="533" width="0.0431%" height="15" fill="rgb(212,24,39)" fg:x="102598" fg:w="46"/><text x="96.3083%" y="543.50"></text></g><g><title>parking::Unparker::unpark (44 samples, 0.04%)</title><rect x="96.0602%" y="517" width="0.0412%" height="15" fill="rgb(213,46,39)" fg:x="102600" fg:w="44"/><text x="96.3102%" y="527.50"></text></g><g><title>parking::Inner::unpark (37 samples, 0.03%)</title><rect x="96.0668%" y="501" width="0.0346%" height="15" fill="rgb(239,106,12)" fg:x="102607" fg:w="37"/><text x="96.3168%" y="511.50"></text></g><g><title>core::task::wake::Waker::wake (47 samples, 0.04%)</title><rect x="96.0583%" y="565" width="0.0440%" height="15" fill="rgb(249,229,21)" fg:x="102598" fg:w="47"/><text x="96.3083%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (47 samples, 0.04%)</title><rect x="96.0583%" y="549" width="0.0440%" height="15" fill="rgb(212,158,3)" fg:x="102598" fg:w="47"/><text x="96.3083%" y="559.50"></text></g><g><title>async_executor::State::notify (56 samples, 0.05%)</title><rect x="96.0518%" y="581" width="0.0524%" height="15" fill="rgb(253,26,48)" fg:x="102591" fg:w="56"/><text x="96.3018%" y="591.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (77 samples, 0.07%)</title><rect x="96.0509%" y="597" width="0.0721%" height="15" fill="rgb(238,178,20)" fg:x="102590" fg:w="77"/><text x="96.3009%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (20 samples, 0.02%)</title><rect x="96.1042%" y="581" width="0.0187%" height="15" fill="rgb(208,86,15)" fg:x="102647" fg:w="20"/><text x="96.3542%" y="591.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (17 samples, 0.02%)</title><rect x="96.1070%" y="565" width="0.0159%" height="15" fill="rgb(239,42,53)" fg:x="102650" fg:w="17"/><text x="96.3570%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (84 samples, 0.08%)</title><rect x="96.0509%" y="613" width="0.0786%" height="15" fill="rgb(245,226,8)" fg:x="102590" fg:w="84"/><text x="96.3009%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (174 samples, 0.16%)</title><rect x="96.1295%" y="613" width="0.1629%" height="15" fill="rgb(216,176,32)" fg:x="102674" fg:w="174"/><text x="96.3795%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (174 samples, 0.16%)</title><rect x="96.1295%" y="597" width="0.1629%" height="15" fill="rgb(231,186,21)" fg:x="102674" fg:w="174"/><text x="96.3795%" y="607.50"></text></g><g><title>async_task::runnable::Runnable::run (557 samples, 0.52%)</title><rect x="95.7728%" y="645" width="0.5215%" height="15" fill="rgb(205,95,49)" fg:x="102293" fg:w="557"/><text x="96.0228%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (536 samples, 0.50%)</title><rect x="95.7925%" y="629" width="0.5018%" height="15" fill="rgb(217,145,8)" fg:x="102314" fg:w="536"/><text x="96.0425%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (6,013 samples, 5.63%)</title><rect x="90.6758%" y="709" width="5.6297%" height="15" fill="rgb(239,144,48)" fg:x="96849" fg:w="6013"/><text x="90.9258%" y="719.50">async_e..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,001 samples, 5.62%)</title><rect x="90.6870%" y="693" width="5.6185%" height="15" fill="rgb(214,189,23)" fg:x="96861" fg:w="6001"/><text x="90.9370%" y="703.50">&lt;future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,001 samples, 5.62%)</title><rect x="90.6870%" y="677" width="5.6185%" height="15" fill="rgb(229,157,17)" fg:x="96861" fg:w="6001"/><text x="90.9370%" y="687.50">&lt;core::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (5,996 samples, 5.61%)</title><rect x="90.6917%" y="661" width="5.6138%" height="15" fill="rgb(230,5,48)" fg:x="96866" fg:w="5996"/><text x="90.9417%" y="671.50">async_e..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12 samples, 0.01%)</title><rect x="96.2943%" y="645" width="0.0112%" height="15" fill="rgb(224,156,48)" fg:x="102850" fg:w="12"/><text x="96.5443%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12 samples, 0.01%)</title><rect x="96.2943%" y="629" width="0.0112%" height="15" fill="rgb(223,14,29)" fg:x="102850" fg:w="12"/><text x="96.5443%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="96.3645%" y="501" width="0.0131%" height="15" fill="rgb(229,96,36)" fg:x="102925" fg:w="14"/><text x="96.6145%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (14 samples, 0.01%)</title><rect x="96.3645%" y="485" width="0.0131%" height="15" fill="rgb(231,102,53)" fg:x="102925" fg:w="14"/><text x="96.6145%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.01%)</title><rect x="96.3645%" y="469" width="0.0131%" height="15" fill="rgb(210,77,38)" fg:x="102925" fg:w="14"/><text x="96.6145%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.01%)</title><rect x="96.3645%" y="453" width="0.0131%" height="15" fill="rgb(235,131,6)" fg:x="102925" fg:w="14"/><text x="96.6145%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.01%)</title><rect x="96.3645%" y="437" width="0.0131%" height="15" fill="rgb(252,55,38)" fg:x="102925" fg:w="14"/><text x="96.6145%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.01%)</title><rect x="96.3654%" y="421" width="0.0122%" height="15" fill="rgb(246,38,14)" fg:x="102926" fg:w="13"/><text x="96.6154%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.01%)</title><rect x="96.3654%" y="405" width="0.0122%" height="15" fill="rgb(242,27,5)" fg:x="102926" fg:w="13"/><text x="96.6154%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (13 samples, 0.01%)</title><rect x="96.3654%" y="389" width="0.0122%" height="15" fill="rgb(228,65,35)" fg:x="102926" fg:w="13"/><text x="96.6154%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (11 samples, 0.01%)</title><rect x="96.3673%" y="373" width="0.0103%" height="15" fill="rgb(245,93,11)" fg:x="102928" fg:w="11"/><text x="96.6173%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.01%)</title><rect x="96.3673%" y="357" width="0.0103%" height="15" fill="rgb(213,1,31)" fg:x="102928" fg:w="11"/><text x="96.6173%" y="367.50"></text></g><g><title>concurrent_queue::full_fence (31 samples, 0.03%)</title><rect x="96.4020%" y="469" width="0.0290%" height="15" fill="rgb(237,205,14)" fg:x="102965" fg:w="31"/><text x="96.6520%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (31 samples, 0.03%)</title><rect x="96.4020%" y="453" width="0.0290%" height="15" fill="rgb(232,118,45)" fg:x="102965" fg:w="31"/><text x="96.6520%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (31 samples, 0.03%)</title><rect x="96.4020%" y="437" width="0.0290%" height="15" fill="rgb(218,5,6)" fg:x="102965" fg:w="31"/><text x="96.6520%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (31 samples, 0.03%)</title><rect x="96.4020%" y="421" width="0.0290%" height="15" fill="rgb(251,87,51)" fg:x="102965" fg:w="31"/><text x="96.6520%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (87 samples, 0.08%)</title><rect x="96.3860%" y="485" width="0.0815%" height="15" fill="rgb(207,225,20)" fg:x="102948" fg:w="87"/><text x="96.6360%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (39 samples, 0.04%)</title><rect x="96.4310%" y="469" width="0.0365%" height="15" fill="rgb(222,78,54)" fg:x="102996" fg:w="39"/><text x="96.6810%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (37 samples, 0.03%)</title><rect x="96.4329%" y="453" width="0.0346%" height="15" fill="rgb(232,85,16)" fg:x="102998" fg:w="37"/><text x="96.6829%" y="463.50"></text></g><g><title>concurrent_queue::full_fence (37 samples, 0.03%)</title><rect x="96.4825%" y="469" width="0.0346%" height="15" fill="rgb(244,25,33)" fg:x="103051" fg:w="37"/><text x="96.7325%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (37 samples, 0.03%)</title><rect x="96.4825%" y="453" width="0.0346%" height="15" fill="rgb(233,24,36)" fg:x="103051" fg:w="37"/><text x="96.7325%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (37 samples, 0.03%)</title><rect x="96.4825%" y="437" width="0.0346%" height="15" fill="rgb(253,49,54)" fg:x="103051" fg:w="37"/><text x="96.7325%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.03%)</title><rect x="96.4825%" y="421" width="0.0346%" height="15" fill="rgb(245,12,22)" fg:x="103051" fg:w="37"/><text x="96.7325%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (154 samples, 0.14%)</title><rect x="96.3776%" y="501" width="0.1442%" height="15" fill="rgb(253,141,28)" fg:x="102939" fg:w="154"/><text x="96.6276%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (58 samples, 0.05%)</title><rect x="96.4675%" y="485" width="0.0543%" height="15" fill="rgb(225,207,27)" fg:x="103035" fg:w="58"/><text x="96.7175%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (34 samples, 0.03%)</title><rect x="96.5265%" y="437" width="0.0318%" height="15" fill="rgb(220,84,2)" fg:x="103098" fg:w="34"/><text x="96.7765%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (34 samples, 0.03%)</title><rect x="96.5265%" y="421" width="0.0318%" height="15" fill="rgb(224,37,37)" fg:x="103098" fg:w="34"/><text x="96.7765%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (86 samples, 0.08%)</title><rect x="96.5218%" y="501" width="0.0805%" height="15" fill="rgb(220,143,18)" fg:x="103093" fg:w="86"/><text x="96.7718%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.08%)</title><rect x="96.5218%" y="485" width="0.0805%" height="15" fill="rgb(210,88,33)" fg:x="103093" fg:w="86"/><text x="96.7718%" y="495.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (85 samples, 0.08%)</title><rect x="96.5227%" y="469" width="0.0796%" height="15" fill="rgb(219,87,51)" fg:x="103094" fg:w="85"/><text x="96.7727%" y="479.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (84 samples, 0.08%)</title><rect x="96.5237%" y="453" width="0.0786%" height="15" fill="rgb(211,7,35)" fg:x="103095" fg:w="84"/><text x="96.7737%" y="463.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (47 samples, 0.04%)</title><rect x="96.5583%" y="437" width="0.0440%" height="15" fill="rgb(232,77,2)" fg:x="103132" fg:w="47"/><text x="96.8083%" y="447.50"></text></g><g><title>___pthread_rwlock_unlock (47 samples, 0.04%)</title><rect x="96.5583%" y="421" width="0.0440%" height="15" fill="rgb(249,94,25)" fg:x="103132" fg:w="47"/><text x="96.8083%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.01%)</title><rect x="96.6023%" y="469" width="0.0150%" height="15" fill="rgb(215,112,2)" fg:x="103179" fg:w="16"/><text x="96.8523%" y="479.50"></text></g><g><title>fastrand::usize::{{closure}} (13 samples, 0.01%)</title><rect x="96.6051%" y="453" width="0.0122%" height="15" fill="rgb(226,115,48)" fg:x="103182" fg:w="13"/><text x="96.8551%" y="463.50"></text></g><g><title>fastrand::usize (18 samples, 0.02%)</title><rect x="96.6023%" y="501" width="0.0169%" height="15" fill="rgb(249,196,10)" fg:x="103179" fg:w="18"/><text x="96.8523%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18 samples, 0.02%)</title><rect x="96.6023%" y="485" width="0.0169%" height="15" fill="rgb(237,109,14)" fg:x="103179" fg:w="18"/><text x="96.8523%" y="495.50"></text></g><g><title>___pthread_rwlock_rdlock (41 samples, 0.04%)</title><rect x="96.6229%" y="453" width="0.0384%" height="15" fill="rgb(217,103,53)" fg:x="103201" fg:w="41"/><text x="96.8729%" y="463.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (363 samples, 0.34%)</title><rect x="96.3561%" y="517" width="0.3399%" height="15" fill="rgb(244,137,9)" fg:x="102916" fg:w="363"/><text x="96.6061%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (82 samples, 0.08%)</title><rect x="96.6192%" y="501" width="0.0768%" height="15" fill="rgb(227,201,3)" fg:x="103197" fg:w="82"/><text x="96.8692%" y="511.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (81 samples, 0.08%)</title><rect x="96.6201%" y="485" width="0.0758%" height="15" fill="rgb(243,94,6)" fg:x="103198" fg:w="81"/><text x="96.8701%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (80 samples, 0.07%)</title><rect x="96.6210%" y="469" width="0.0749%" height="15" fill="rgb(235,118,5)" fg:x="103199" fg:w="80"/><text x="96.8710%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (37 samples, 0.03%)</title><rect x="96.6613%" y="453" width="0.0346%" height="15" fill="rgb(247,10,30)" fg:x="103242" fg:w="37"/><text x="96.9113%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (37 samples, 0.03%)</title><rect x="96.6613%" y="437" width="0.0346%" height="15" fill="rgb(205,26,28)" fg:x="103242" fg:w="37"/><text x="96.9113%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (18 samples, 0.02%)</title><rect x="96.6978%" y="501" width="0.0169%" height="15" fill="rgb(206,99,35)" fg:x="103281" fg:w="18"/><text x="96.9478%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (56 samples, 0.05%)</title><rect x="96.7147%" y="501" width="0.0524%" height="15" fill="rgb(238,130,40)" fg:x="103299" fg:w="56"/><text x="96.9647%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="96.7147%" y="485" width="0.0524%" height="15" fill="rgb(224,126,31)" fg:x="103299" fg:w="56"/><text x="96.9647%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (55 samples, 0.05%)</title><rect x="96.7156%" y="469" width="0.0515%" height="15" fill="rgb(254,105,17)" fg:x="103300" fg:w="55"/><text x="96.9656%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (53 samples, 0.05%)</title><rect x="96.7175%" y="453" width="0.0496%" height="15" fill="rgb(216,87,36)" fg:x="103302" fg:w="53"/><text x="96.9675%" y="463.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (53 samples, 0.05%)</title><rect x="96.7175%" y="437" width="0.0496%" height="15" fill="rgb(240,21,12)" fg:x="103302" fg:w="53"/><text x="96.9675%" y="447.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (511 samples, 0.48%)</title><rect x="96.3411%" y="629" width="0.4784%" height="15" fill="rgb(245,192,34)" fg:x="102900" fg:w="511"/><text x="96.5911%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (508 samples, 0.48%)</title><rect x="96.3439%" y="613" width="0.4756%" height="15" fill="rgb(226,100,49)" fg:x="102903" fg:w="508"/><text x="96.5939%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (507 samples, 0.47%)</title><rect x="96.3448%" y="597" width="0.4747%" height="15" fill="rgb(245,188,27)" fg:x="102904" fg:w="507"/><text x="96.5948%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (504 samples, 0.47%)</title><rect x="96.3477%" y="581" width="0.4719%" height="15" fill="rgb(212,170,8)" fg:x="102907" fg:w="504"/><text x="96.5977%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (502 samples, 0.47%)</title><rect x="96.3495%" y="565" width="0.4700%" height="15" fill="rgb(217,113,29)" fg:x="102909" fg:w="502"/><text x="96.5995%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (501 samples, 0.47%)</title><rect x="96.3505%" y="549" width="0.4691%" height="15" fill="rgb(237,30,3)" fg:x="102910" fg:w="501"/><text x="96.6005%" y="559.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (497 samples, 0.47%)</title><rect x="96.3542%" y="533" width="0.4653%" height="15" fill="rgb(227,19,28)" fg:x="102914" fg:w="497"/><text x="96.6042%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (132 samples, 0.12%)</title><rect x="96.6959%" y="517" width="0.1236%" height="15" fill="rgb(239,172,45)" fg:x="103279" fg:w="132"/><text x="96.9459%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (56 samples, 0.05%)</title><rect x="96.7671%" y="501" width="0.0524%" height="15" fill="rgb(254,55,39)" fg:x="103355" fg:w="56"/><text x="97.0171%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (54 samples, 0.05%)</title><rect x="96.7690%" y="485" width="0.0506%" height="15" fill="rgb(249,208,12)" fg:x="103357" fg:w="54"/><text x="97.0190%" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (50 samples, 0.05%)</title><rect x="96.7727%" y="469" width="0.0468%" height="15" fill="rgb(240,52,13)" fg:x="103361" fg:w="50"/><text x="97.0227%" y="479.50"></text></g><g><title>___pthread_mutex_lock (50 samples, 0.05%)</title><rect x="96.7727%" y="453" width="0.0468%" height="15" fill="rgb(252,149,13)" fg:x="103361" fg:w="50"/><text x="97.0227%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (30 samples, 0.03%)</title><rect x="96.8926%" y="565" width="0.0281%" height="15" fill="rgb(232,81,48)" fg:x="103489" fg:w="30"/><text x="97.1426%" y="575.50"></text></g><g><title>core::mem::replace (30 samples, 0.03%)</title><rect x="96.8926%" y="549" width="0.0281%" height="15" fill="rgb(222,144,2)" fg:x="103489" fg:w="30"/><text x="97.1426%" y="559.50"></text></g><g><title>core::ptr::read (30 samples, 0.03%)</title><rect x="96.8926%" y="533" width="0.0281%" height="15" fill="rgb(216,81,32)" fg:x="103489" fg:w="30"/><text x="97.1426%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (44 samples, 0.04%)</title><rect x="96.8841%" y="581" width="0.0412%" height="15" fill="rgb(244,78,51)" fg:x="103480" fg:w="44"/><text x="97.1341%" y="591.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (49 samples, 0.05%)</title><rect x="96.9319%" y="501" width="0.0459%" height="15" fill="rgb(217,66,21)" fg:x="103531" fg:w="49"/><text x="97.1819%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (58 samples, 0.05%)</title><rect x="96.9253%" y="581" width="0.0543%" height="15" fill="rgb(247,101,42)" fg:x="103524" fg:w="58"/><text x="97.1753%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (56 samples, 0.05%)</title><rect x="96.9272%" y="565" width="0.0524%" height="15" fill="rgb(227,81,39)" fg:x="103526" fg:w="56"/><text x="97.1772%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="96.9272%" y="549" width="0.0524%" height="15" fill="rgb(220,223,44)" fg:x="103526" fg:w="56"/><text x="97.1772%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (53 samples, 0.05%)</title><rect x="96.9300%" y="533" width="0.0496%" height="15" fill="rgb(205,218,2)" fg:x="103529" fg:w="53"/><text x="97.1800%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (51 samples, 0.05%)</title><rect x="96.9319%" y="517" width="0.0477%" height="15" fill="rgb(212,207,28)" fg:x="103531" fg:w="51"/><text x="97.1819%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (233 samples, 0.22%)</title><rect x="96.8663%" y="597" width="0.2181%" height="15" fill="rgb(224,12,41)" fg:x="103461" fg:w="233"/><text x="97.1163%" y="607.50"></text></g><g><title>event_listener::Inner::lock (103 samples, 0.10%)</title><rect x="96.9881%" y="581" width="0.0964%" height="15" fill="rgb(216,118,12)" fg:x="103591" fg:w="103"/><text x="97.2381%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (101 samples, 0.09%)</title><rect x="96.9899%" y="565" width="0.0946%" height="15" fill="rgb(252,97,46)" fg:x="103593" fg:w="101"/><text x="97.2399%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (99 samples, 0.09%)</title><rect x="96.9918%" y="549" width="0.0927%" height="15" fill="rgb(244,206,19)" fg:x="103595" fg:w="99"/><text x="97.2418%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (91 samples, 0.09%)</title><rect x="96.9993%" y="533" width="0.0852%" height="15" fill="rgb(231,84,31)" fg:x="103603" fg:w="91"/><text x="97.2493%" y="543.50"></text></g><g><title>___pthread_mutex_lock (91 samples, 0.09%)</title><rect x="96.9993%" y="517" width="0.0852%" height="15" fill="rgb(244,133,0)" fg:x="103603" fg:w="91"/><text x="97.2493%" y="527.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (122 samples, 0.11%)</title><rect x="97.0845%" y="597" width="0.1142%" height="15" fill="rgb(223,15,50)" fg:x="103694" fg:w="122"/><text x="97.3345%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (120 samples, 0.11%)</title><rect x="97.0864%" y="581" width="0.1124%" height="15" fill="rgb(250,118,49)" fg:x="103696" fg:w="120"/><text x="97.3364%" y="591.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (72 samples, 0.07%)</title><rect x="97.1313%" y="565" width="0.0674%" height="15" fill="rgb(248,25,38)" fg:x="103744" fg:w="72"/><text x="97.3813%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (71 samples, 0.07%)</title><rect x="97.1322%" y="549" width="0.0665%" height="15" fill="rgb(215,70,14)" fg:x="103745" fg:w="71"/><text x="97.3822%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (71 samples, 0.07%)</title><rect x="97.1322%" y="533" width="0.0665%" height="15" fill="rgb(215,28,15)" fg:x="103745" fg:w="71"/><text x="97.3822%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (71 samples, 0.07%)</title><rect x="97.1322%" y="517" width="0.0665%" height="15" fill="rgb(243,6,28)" fg:x="103745" fg:w="71"/><text x="97.3822%" y="527.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (920 samples, 0.86%)</title><rect x="96.3392%" y="661" width="0.8614%" height="15" fill="rgb(222,130,1)" fg:x="102898" fg:w="920"/><text x="96.5892%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (919 samples, 0.86%)</title><rect x="96.3402%" y="645" width="0.8604%" height="15" fill="rgb(236,166,44)" fg:x="102899" fg:w="919"/><text x="96.5902%" y="655.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (407 samples, 0.38%)</title><rect x="96.8195%" y="629" width="0.3811%" height="15" fill="rgb(221,108,14)" fg:x="103411" fg:w="407"/><text x="97.0695%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (394 samples, 0.37%)</title><rect x="96.8317%" y="613" width="0.3689%" height="15" fill="rgb(252,3,45)" fg:x="103424" fg:w="394"/><text x="97.0817%" y="623.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,986 samples, 6.54%)</title><rect x="90.6617%" y="741" width="6.5407%" height="15" fill="rgb(237,68,30)" fg:x="96834" fg:w="6986"/><text x="90.9117%" y="751.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,981 samples, 6.54%)</title><rect x="90.6664%" y="725" width="6.5360%" height="15" fill="rgb(211,79,22)" fg:x="96839" fg:w="6981"/><text x="90.9164%" y="735.50">&lt;core::fu..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (958 samples, 0.90%)</title><rect x="96.3055%" y="709" width="0.8969%" height="15" fill="rgb(252,185,21)" fg:x="102862" fg:w="958"/><text x="96.5555%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (926 samples, 0.87%)</title><rect x="96.3355%" y="693" width="0.8670%" height="15" fill="rgb(225,189,26)" fg:x="102894" fg:w="926"/><text x="96.5855%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (924 samples, 0.87%)</title><rect x="96.3374%" y="677" width="0.8651%" height="15" fill="rgb(241,30,40)" fg:x="102896" fg:w="924"/><text x="96.5874%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::get (18 samples, 0.02%)</title><rect x="97.2081%" y="741" width="0.0169%" height="15" fill="rgb(235,215,44)" fg:x="103826" fg:w="18"/><text x="97.4581%" y="751.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="97.2081%" y="725" width="0.0169%" height="15" fill="rgb(205,8,29)" fg:x="103826" fg:w="18"/><text x="97.4581%" y="735.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (18 samples, 0.02%)</title><rect x="97.2081%" y="709" width="0.0169%" height="15" fill="rgb(241,137,42)" fg:x="103826" fg:w="18"/><text x="97.4581%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (18 samples, 0.02%)</title><rect x="97.2081%" y="693" width="0.0169%" height="15" fill="rgb(237,155,2)" fg:x="103826" fg:w="18"/><text x="97.4581%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (18 samples, 0.02%)</title><rect x="97.2081%" y="677" width="0.0169%" height="15" fill="rgb(245,29,42)" fg:x="103826" fg:w="18"/><text x="97.4581%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (141 samples, 0.13%)</title><rect x="97.2249%" y="741" width="0.1320%" height="15" fill="rgb(234,101,35)" fg:x="103844" fg:w="141"/><text x="97.4749%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (141 samples, 0.13%)</title><rect x="97.2249%" y="725" width="0.1320%" height="15" fill="rgb(228,64,37)" fg:x="103844" fg:w="141"/><text x="97.4749%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (139 samples, 0.13%)</title><rect x="97.2268%" y="709" width="0.1301%" height="15" fill="rgb(217,214,36)" fg:x="103846" fg:w="139"/><text x="97.4768%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (138 samples, 0.13%)</title><rect x="97.2277%" y="693" width="0.1292%" height="15" fill="rgb(243,70,3)" fg:x="103847" fg:w="138"/><text x="97.4777%" y="703.50"></text></g><g><title>__GI___pthread_mutex_trylock (138 samples, 0.13%)</title><rect x="97.2277%" y="677" width="0.1292%" height="15" fill="rgb(253,158,52)" fg:x="103847" fg:w="138"/><text x="97.4777%" y="687.50"></text></g><g><title>rust_dealloc (26 samples, 0.02%)</title><rect x="97.3860%" y="565" width="0.0243%" height="15" fill="rgb(234,111,54)" fg:x="104016" fg:w="26"/><text x="97.6360%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (25 samples, 0.02%)</title><rect x="97.3869%" y="549" width="0.0234%" height="15" fill="rgb(217,70,32)" fg:x="104017" fg:w="25"/><text x="97.6369%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (23 samples, 0.02%)</title><rect x="97.3888%" y="533" width="0.0215%" height="15" fill="rgb(234,18,33)" fg:x="104019" fg:w="23"/><text x="97.6388%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (23 samples, 0.02%)</title><rect x="97.3888%" y="517" width="0.0215%" height="15" fill="rgb(234,12,49)" fg:x="104019" fg:w="23"/><text x="97.6388%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (23 samples, 0.02%)</title><rect x="97.3888%" y="501" width="0.0215%" height="15" fill="rgb(236,10,21)" fg:x="104019" fg:w="23"/><text x="97.6388%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (23 samples, 0.02%)</title><rect x="97.3888%" y="485" width="0.0215%" height="15" fill="rgb(248,182,45)" fg:x="104019" fg:w="23"/><text x="97.6388%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="97.3981%" y="469" width="0.0122%" height="15" fill="rgb(217,95,36)" fg:x="104029" fg:w="13"/><text x="97.6481%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (35 samples, 0.03%)</title><rect x="97.3803%" y="661" width="0.0328%" height="15" fill="rgb(212,110,31)" fg:x="104010" fg:w="35"/><text x="97.6303%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (34 samples, 0.03%)</title><rect x="97.3813%" y="645" width="0.0318%" height="15" fill="rgb(206,32,53)" fg:x="104011" fg:w="34"/><text x="97.6313%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.03%)</title><rect x="97.3841%" y="629" width="0.0290%" height="15" fill="rgb(246,141,37)" fg:x="104014" fg:w="31"/><text x="97.6341%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (31 samples, 0.03%)</title><rect x="97.3841%" y="613" width="0.0290%" height="15" fill="rgb(219,16,7)" fg:x="104014" fg:w="31"/><text x="97.6341%" y="623.50"></text></g><g><title>__rg_dealloc (31 samples, 0.03%)</title><rect x="97.3841%" y="597" width="0.0290%" height="15" fill="rgb(230,205,45)" fg:x="104014" fg:w="31"/><text x="97.6341%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (29 samples, 0.03%)</title><rect x="97.3860%" y="581" width="0.0272%" height="15" fill="rgb(231,43,49)" fg:x="104016" fg:w="29"/><text x="97.6360%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="97.3775%" y="709" width="0.0375%" height="15" fill="rgb(212,106,34)" fg:x="104007" fg:w="40"/><text x="97.6275%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (37 samples, 0.03%)</title><rect x="97.3803%" y="693" width="0.0346%" height="15" fill="rgb(206,83,17)" fg:x="104010" fg:w="37"/><text x="97.6303%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (37 samples, 0.03%)</title><rect x="97.3803%" y="677" width="0.0346%" height="15" fill="rgb(244,154,49)" fg:x="104010" fg:w="37"/><text x="97.6303%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="97.4150%" y="709" width="0.0122%" height="15" fill="rgb(244,149,49)" fg:x="104047" fg:w="13"/><text x="97.6650%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="97.4150%" y="693" width="0.0122%" height="15" fill="rgb(227,134,18)" fg:x="104047" fg:w="13"/><text x="97.6650%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (12 samples, 0.01%)</title><rect x="97.4159%" y="677" width="0.0112%" height="15" fill="rgb(237,116,36)" fg:x="104048" fg:w="12"/><text x="97.6659%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (11 samples, 0.01%)</title><rect x="97.4506%" y="677" width="0.0103%" height="15" fill="rgb(205,129,40)" fg:x="104085" fg:w="11"/><text x="97.7006%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (16 samples, 0.01%)</title><rect x="97.4712%" y="357" width="0.0150%" height="15" fill="rgb(236,178,4)" fg:x="104107" fg:w="16"/><text x="97.7212%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (16 samples, 0.01%)</title><rect x="97.4712%" y="341" width="0.0150%" height="15" fill="rgb(251,76,53)" fg:x="104107" fg:w="16"/><text x="97.7212%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="97.4758%" y="325" width="0.0103%" height="15" fill="rgb(242,92,40)" fg:x="104112" fg:w="11"/><text x="97.7258%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (19 samples, 0.02%)</title><rect x="97.4712%" y="373" width="0.0178%" height="15" fill="rgb(209,45,30)" fg:x="104107" fg:w="19"/><text x="97.7212%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (36 samples, 0.03%)</title><rect x="97.4646%" y="389" width="0.0337%" height="15" fill="rgb(218,157,36)" fg:x="104100" fg:w="36"/><text x="97.7146%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (18 samples, 0.02%)</title><rect x="97.5105%" y="373" width="0.0169%" height="15" fill="rgb(222,186,16)" fg:x="104149" fg:w="18"/><text x="97.7605%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (228 samples, 0.21%)</title><rect x="97.4646%" y="421" width="0.2135%" height="15" fill="rgb(254,72,35)" fg:x="104100" fg:w="228"/><text x="97.7146%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (228 samples, 0.21%)</title><rect x="97.4646%" y="405" width="0.2135%" height="15" fill="rgb(224,25,35)" fg:x="104100" fg:w="228"/><text x="97.7146%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (192 samples, 0.18%)</title><rect x="97.4983%" y="389" width="0.1798%" height="15" fill="rgb(206,135,52)" fg:x="104136" fg:w="192"/><text x="97.7483%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (161 samples, 0.15%)</title><rect x="97.5273%" y="373" width="0.1507%" height="15" fill="rgb(229,174,47)" fg:x="104167" fg:w="161"/><text x="97.7773%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (161 samples, 0.15%)</title><rect x="97.5273%" y="357" width="0.1507%" height="15" fill="rgb(242,184,21)" fg:x="104167" fg:w="161"/><text x="97.7773%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (161 samples, 0.15%)</title><rect x="97.5273%" y="341" width="0.1507%" height="15" fill="rgb(213,22,45)" fg:x="104167" fg:w="161"/><text x="97.7773%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="97.6781%" y="421" width="0.0140%" height="15" fill="rgb(237,81,54)" fg:x="104328" fg:w="15"/><text x="97.9281%" y="431.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (11 samples, 0.01%)</title><rect x="97.6818%" y="405" width="0.0103%" height="15" fill="rgb(248,177,18)" fg:x="104332" fg:w="11"/><text x="97.9318%" y="415.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (298 samples, 0.28%)</title><rect x="97.4609%" y="677" width="0.2790%" height="15" fill="rgb(254,31,16)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (298 samples, 0.28%)</title><rect x="97.4609%" y="661" width="0.2790%" height="15" fill="rgb(235,20,31)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (298 samples, 0.28%)</title><rect x="97.4609%" y="645" width="0.2790%" height="15" fill="rgb(240,56,43)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="655.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (298 samples, 0.28%)</title><rect x="97.4609%" y="629" width="0.2790%" height="15" fill="rgb(237,197,51)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (298 samples, 0.28%)</title><rect x="97.4609%" y="613" width="0.2790%" height="15" fill="rgb(241,162,44)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (298 samples, 0.28%)</title><rect x="97.4609%" y="597" width="0.2790%" height="15" fill="rgb(224,23,20)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (298 samples, 0.28%)</title><rect x="97.4609%" y="581" width="0.2790%" height="15" fill="rgb(250,109,34)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (298 samples, 0.28%)</title><rect x="97.4609%" y="565" width="0.2790%" height="15" fill="rgb(214,175,50)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (298 samples, 0.28%)</title><rect x="97.4609%" y="549" width="0.2790%" height="15" fill="rgb(213,182,5)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="559.50"></text></g><g><title>alloc::alloc::alloc (298 samples, 0.28%)</title><rect x="97.4609%" y="533" width="0.2790%" height="15" fill="rgb(209,199,19)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="543.50"></text></g><g><title>__rg_alloc (298 samples, 0.28%)</title><rect x="97.4609%" y="517" width="0.2790%" height="15" fill="rgb(236,224,42)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (298 samples, 0.28%)</title><rect x="97.4609%" y="501" width="0.2790%" height="15" fill="rgb(246,226,29)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="511.50"></text></g><g><title>rust_alloc (298 samples, 0.28%)</title><rect x="97.4609%" y="485" width="0.2790%" height="15" fill="rgb(227,223,11)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (298 samples, 0.28%)</title><rect x="97.4609%" y="469" width="0.2790%" height="15" fill="rgb(219,7,51)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (298 samples, 0.28%)</title><rect x="97.4609%" y="453" width="0.2790%" height="15" fill="rgb(245,167,10)" fg:x="104096" fg:w="298"/><text x="97.7109%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (297 samples, 0.28%)</title><rect x="97.4618%" y="437" width="0.2781%" height="15" fill="rgb(237,224,16)" fg:x="104097" fg:w="297"/><text x="97.7118%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (42 samples, 0.04%)</title><rect x="97.7005%" y="421" width="0.0393%" height="15" fill="rgb(226,132,13)" fg:x="104352" fg:w="42"/><text x="97.9505%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (42 samples, 0.04%)</title><rect x="97.7005%" y="405" width="0.0393%" height="15" fill="rgb(214,140,3)" fg:x="104352" fg:w="42"/><text x="97.9505%" y="415.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (324 samples, 0.30%)</title><rect x="97.4403%" y="693" width="0.3033%" height="15" fill="rgb(221,177,4)" fg:x="104074" fg:w="324"/><text x="97.6903%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (336 samples, 0.31%)</title><rect x="97.4300%" y="709" width="0.3146%" height="15" fill="rgb(238,139,3)" fg:x="104063" fg:w="336"/><text x="97.6800%" y="719.50"></text></g><g><title>concurrent_queue::full_fence (16 samples, 0.01%)</title><rect x="97.7558%" y="661" width="0.0150%" height="15" fill="rgb(216,17,39)" fg:x="104411" fg:w="16"/><text x="98.0058%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (16 samples, 0.01%)</title><rect x="97.7558%" y="645" width="0.0150%" height="15" fill="rgb(238,120,9)" fg:x="104411" fg:w="16"/><text x="98.0058%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.01%)</title><rect x="97.7558%" y="629" width="0.0150%" height="15" fill="rgb(244,92,53)" fg:x="104411" fg:w="16"/><text x="98.0058%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="97.7558%" y="613" width="0.0150%" height="15" fill="rgb(224,148,33)" fg:x="104411" fg:w="16"/><text x="98.0058%" y="623.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (33 samples, 0.03%)</title><rect x="97.7446%" y="709" width="0.0309%" height="15" fill="rgb(243,6,36)" fg:x="104399" fg:w="33"/><text x="97.9946%" y="719.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (25 samples, 0.02%)</title><rect x="97.7520%" y="693" width="0.0234%" height="15" fill="rgb(230,102,11)" fg:x="104407" fg:w="25"/><text x="98.0020%" y="703.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (23 samples, 0.02%)</title><rect x="97.7539%" y="677" width="0.0215%" height="15" fill="rgb(234,148,36)" fg:x="104409" fg:w="23"/><text x="98.0039%" y="687.50"></text></g><g><title>core::mem::drop (62 samples, 0.06%)</title><rect x="97.7754%" y="709" width="0.0580%" height="15" fill="rgb(251,153,25)" fg:x="104432" fg:w="62"/><text x="98.0254%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (62 samples, 0.06%)</title><rect x="97.7754%" y="693" width="0.0580%" height="15" fill="rgb(215,129,8)" fg:x="104432" fg:w="62"/><text x="98.0254%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.06%)</title><rect x="97.7754%" y="677" width="0.0580%" height="15" fill="rgb(224,128,35)" fg:x="104432" fg:w="62"/><text x="98.0254%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (60 samples, 0.06%)</title><rect x="97.7773%" y="661" width="0.0562%" height="15" fill="rgb(237,56,52)" fg:x="104434" fg:w="60"/><text x="98.0273%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (59 samples, 0.06%)</title><rect x="97.7783%" y="645" width="0.0552%" height="15" fill="rgb(234,213,19)" fg:x="104435" fg:w="59"/><text x="98.0283%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (59 samples, 0.06%)</title><rect x="97.7783%" y="629" width="0.0552%" height="15" fill="rgb(252,82,23)" fg:x="104435" fg:w="59"/><text x="98.0283%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="97.8457%" y="709" width="0.0206%" height="15" fill="rgb(254,201,21)" fg:x="104507" fg:w="22"/><text x="98.0957%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="97.8457%" y="693" width="0.0206%" height="15" fill="rgb(250,186,11)" fg:x="104507" fg:w="22"/><text x="98.0957%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (22 samples, 0.02%)</title><rect x="97.8457%" y="677" width="0.0206%" height="15" fill="rgb(211,174,5)" fg:x="104507" fg:w="22"/><text x="98.0957%" y="687.50"></text></g><g><title>___pthread_mutex_lock (22 samples, 0.02%)</title><rect x="97.8457%" y="661" width="0.0206%" height="15" fill="rgb(214,121,10)" fg:x="104507" fg:w="22"/><text x="98.0957%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (571 samples, 0.53%)</title><rect x="97.3719%" y="725" width="0.5346%" height="15" fill="rgb(241,66,2)" fg:x="104001" fg:w="571"/><text x="97.6219%" y="735.50"></text></g><g><title>std::time::Instant::now (43 samples, 0.04%)</title><rect x="97.8663%" y="709" width="0.0403%" height="15" fill="rgb(220,167,19)" fg:x="104529" fg:w="43"/><text x="98.1163%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (43 samples, 0.04%)</title><rect x="97.8663%" y="693" width="0.0403%" height="15" fill="rgb(231,54,50)" fg:x="104529" fg:w="43"/><text x="98.1163%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (43 samples, 0.04%)</title><rect x="97.8663%" y="677" width="0.0403%" height="15" fill="rgb(239,217,53)" fg:x="104529" fg:w="43"/><text x="98.1163%" y="687.50"></text></g><g><title>__clock_gettime_2 (41 samples, 0.04%)</title><rect x="97.8681%" y="661" width="0.0384%" height="15" fill="rgb(248,8,0)" fg:x="104531" fg:w="41"/><text x="98.1181%" y="671.50"></text></g><g><title>__vdso_clock_gettime (34 samples, 0.03%)</title><rect x="97.8747%" y="645" width="0.0318%" height="15" fill="rgb(229,118,37)" fg:x="104538" fg:w="34"/><text x="98.1247%" y="655.50"></text></g><g><title>[[vdso]] (18 samples, 0.02%)</title><rect x="97.8897%" y="629" width="0.0169%" height="15" fill="rgb(253,223,43)" fg:x="104554" fg:w="18"/><text x="98.1397%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (19 samples, 0.02%)</title><rect x="97.9084%" y="725" width="0.0178%" height="15" fill="rgb(211,77,36)" fg:x="104574" fg:w="19"/><text x="98.1584%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (19 samples, 0.02%)</title><rect x="97.9084%" y="709" width="0.0178%" height="15" fill="rgb(219,3,53)" fg:x="104574" fg:w="19"/><text x="98.1584%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (25 samples, 0.02%)</title><rect x="97.9327%" y="709" width="0.0234%" height="15" fill="rgb(244,45,42)" fg:x="104600" fg:w="25"/><text x="98.1827%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="97.9327%" y="693" width="0.0234%" height="15" fill="rgb(225,95,27)" fg:x="104600" fg:w="25"/><text x="98.1827%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (21 samples, 0.02%)</title><rect x="97.9365%" y="677" width="0.0197%" height="15" fill="rgb(207,74,8)" fg:x="104604" fg:w="21"/><text x="98.1865%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (20 samples, 0.02%)</title><rect x="97.9374%" y="661" width="0.0187%" height="15" fill="rgb(243,63,36)" fg:x="104605" fg:w="20"/><text x="98.1874%" y="671.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="97.9374%" y="645" width="0.0187%" height="15" fill="rgb(211,180,12)" fg:x="104605" fg:w="20"/><text x="98.1874%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (36 samples, 0.03%)</title><rect x="97.9561%" y="709" width="0.0337%" height="15" fill="rgb(254,166,49)" fg:x="104625" fg:w="36"/><text x="98.2061%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (36 samples, 0.03%)</title><rect x="97.9561%" y="693" width="0.0337%" height="15" fill="rgb(205,19,0)" fg:x="104625" fg:w="36"/><text x="98.2061%" y="703.50"></text></g><g><title>__libc_read (24 samples, 0.02%)</title><rect x="98.0048%" y="693" width="0.0225%" height="15" fill="rgb(224,172,32)" fg:x="104677" fg:w="24"/><text x="98.2548%" y="703.50"></text></g><g><title>epoll_wait (81 samples, 0.08%)</title><rect x="98.0273%" y="693" width="0.0758%" height="15" fill="rgb(254,136,30)" fg:x="104701" fg:w="81"/><text x="98.2773%" y="703.50"></text></g><g><title>__GI_epoll_ctl (19 samples, 0.02%)</title><rect x="98.1134%" y="661" width="0.0178%" height="15" fill="rgb(246,19,35)" fg:x="104793" fg:w="19"/><text x="98.3634%" y="671.50"></text></g><g><title>polling::epoll::Poller::ctl (26 samples, 0.02%)</title><rect x="98.1097%" y="677" width="0.0243%" height="15" fill="rgb(219,24,36)" fg:x="104789" fg:w="26"/><text x="98.3597%" y="687.50"></text></g><g><title>polling::epoll::Poller::modify (34 samples, 0.03%)</title><rect x="98.1041%" y="693" width="0.0318%" height="15" fill="rgb(251,55,1)" fg:x="104783" fg:w="34"/><text x="98.3541%" y="703.50"></text></g><g><title>polling::epoll::Poller::wait (174 samples, 0.16%)</title><rect x="97.9908%" y="709" width="0.1629%" height="15" fill="rgb(218,117,39)" fg:x="104662" fg:w="174"/><text x="98.2408%" y="719.50"></text></g><g><title>syscall (15 samples, 0.01%)</title><rect x="98.1397%" y="693" width="0.0140%" height="15" fill="rgb(248,169,11)" fg:x="104821" fg:w="15"/><text x="98.3897%" y="703.50"></text></g><g><title>async_io::reactor::ReactorLock::react (869 samples, 0.81%)</title><rect x="97.3569%" y="741" width="0.8136%" height="15" fill="rgb(244,40,44)" fg:x="103985" fg:w="869"/><text x="97.6069%" y="751.50"></text></g><g><title>polling::Poller::wait (261 samples, 0.24%)</title><rect x="97.9262%" y="725" width="0.2444%" height="15" fill="rgb(234,62,37)" fg:x="104593" fg:w="261"/><text x="98.1762%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (18 samples, 0.02%)</title><rect x="98.1537%" y="709" width="0.0169%" height="15" fill="rgb(207,117,42)" fg:x="104836" fg:w="18"/><text x="98.4037%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (18 samples, 0.02%)</title><rect x="98.1537%" y="693" width="0.0169%" height="15" fill="rgb(213,43,2)" fg:x="104836" fg:w="18"/><text x="98.4037%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (17 samples, 0.02%)</title><rect x="98.1546%" y="677" width="0.0159%" height="15" fill="rgb(244,202,51)" fg:x="104837" fg:w="17"/><text x="98.4046%" y="687.50"></text></g><g><title>__GI___pthread_mutex_trylock (17 samples, 0.02%)</title><rect x="98.1546%" y="661" width="0.0159%" height="15" fill="rgb(253,174,46)" fg:x="104837" fg:w="17"/><text x="98.4046%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (15 samples, 0.01%)</title><rect x="98.1705%" y="693" width="0.0140%" height="15" fill="rgb(251,23,1)" fg:x="104854" fg:w="15"/><text x="98.4205%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (15 samples, 0.01%)</title><rect x="98.1705%" y="677" width="0.0140%" height="15" fill="rgb(253,26,1)" fg:x="104854" fg:w="15"/><text x="98.4205%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="98.1705%" y="741" width="0.0150%" height="15" fill="rgb(216,89,31)" fg:x="104854" fg:w="16"/><text x="98.4205%" y="751.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="98.1705%" y="725" width="0.0150%" height="15" fill="rgb(209,109,5)" fg:x="104854" fg:w="16"/><text x="98.4205%" y="735.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (16 samples, 0.01%)</title><rect x="98.1705%" y="709" width="0.0150%" height="15" fill="rgb(229,63,13)" fg:x="104854" fg:w="16"/><text x="98.4205%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (67 samples, 0.06%)</title><rect x="98.2220%" y="709" width="0.0627%" height="15" fill="rgb(238,137,54)" fg:x="104909" fg:w="67"/><text x="98.4720%" y="719.50"></text></g><g><title>__GI___lll_lock_wake (41 samples, 0.04%)</title><rect x="98.2464%" y="693" width="0.0384%" height="15" fill="rgb(228,1,9)" fg:x="104935" fg:w="41"/><text x="98.4964%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (89 samples, 0.08%)</title><rect x="98.2904%" y="709" width="0.0833%" height="15" fill="rgb(249,120,48)" fg:x="104982" fg:w="89"/><text x="98.5404%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (89 samples, 0.08%)</title><rect x="98.2904%" y="693" width="0.0833%" height="15" fill="rgb(209,72,36)" fg:x="104982" fg:w="89"/><text x="98.5404%" y="703.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="98.5067%" y="645" width="0.0169%" height="15" fill="rgb(247,98,49)" fg:x="105213" fg:w="18"/><text x="98.7567%" y="655.50"></text></g><g><title>__condvar_confirm_wakeup (29 samples, 0.03%)</title><rect x="98.5235%" y="645" width="0.0272%" height="15" fill="rgb(233,75,36)" fg:x="105231" fg:w="29"/><text x="98.7735%" y="655.50"></text></g><g><title>__condvar_dec_grefs (164 samples, 0.15%)</title><rect x="98.5507%" y="645" width="0.1535%" height="15" fill="rgb(225,14,24)" fg:x="105260" fg:w="164"/><text x="98.8007%" y="655.50"></text></g><g><title>__GI___pthread_disable_asynccancel (31 samples, 0.03%)</title><rect x="98.9158%" y="629" width="0.0290%" height="15" fill="rgb(237,193,20)" fg:x="105650" fg:w="31"/><text x="99.1658%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (273 samples, 0.26%)</title><rect x="98.7042%" y="645" width="0.2556%" height="15" fill="rgb(239,122,19)" fg:x="105424" fg:w="273"/><text x="98.9542%" y="655.50"></text></g><g><title>__GI___pthread_enable_asynccancel (16 samples, 0.01%)</title><rect x="98.9448%" y="629" width="0.0150%" height="15" fill="rgb(231,220,10)" fg:x="105681" fg:w="16"/><text x="99.1948%" y="639.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (649 samples, 0.61%)</title><rect x="98.3803%" y="677" width="0.6076%" height="15" fill="rgb(220,66,15)" fg:x="105078" fg:w="649"/><text x="98.6303%" y="687.50"></text></g><g><title>__GI___pthread_cond_wait (649 samples, 0.61%)</title><rect x="98.3803%" y="661" width="0.6076%" height="15" fill="rgb(215,171,52)" fg:x="105078" fg:w="649"/><text x="98.6303%" y="671.50"></text></g><g><title>__pthread_mutex_cond_lock (26 samples, 0.02%)</title><rect x="98.9636%" y="645" width="0.0243%" height="15" fill="rgb(241,169,50)" fg:x="105701" fg:w="26"/><text x="99.2136%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::wait (690 samples, 0.65%)</title><rect x="98.3737%" y="709" width="0.6460%" height="15" fill="rgb(236,189,0)" fg:x="105071" fg:w="690"/><text x="98.6237%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (683 samples, 0.64%)</title><rect x="98.3803%" y="693" width="0.6395%" height="15" fill="rgb(217,147,20)" fg:x="105078" fg:w="683"/><text x="98.6303%" y="703.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (34 samples, 0.03%)</title><rect x="98.9879%" y="677" width="0.0318%" height="15" fill="rgb(206,188,39)" fg:x="105727" fg:w="34"/><text x="99.2379%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (34 samples, 0.03%)</title><rect x="98.9879%" y="661" width="0.0318%" height="15" fill="rgb(227,118,25)" fg:x="105727" fg:w="34"/><text x="99.2379%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (34 samples, 0.03%)</title><rect x="98.9879%" y="645" width="0.0318%" height="15" fill="rgb(248,171,40)" fg:x="105727" fg:w="34"/><text x="99.2379%" y="655.50"></text></g><g><title>parking::Parker::park (902 samples, 0.84%)</title><rect x="98.2089%" y="741" width="0.8445%" height="15" fill="rgb(251,90,54)" fg:x="104895" fg:w="902"/><text x="98.4589%" y="751.50"></text></g><g><title>parking::Inner::park (901 samples, 0.84%)</title><rect x="98.2099%" y="725" width="0.8436%" height="15" fill="rgb(234,11,46)" fg:x="104896" fg:w="901"/><text x="98.4599%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (36 samples, 0.03%)</title><rect x="99.0197%" y="709" width="0.0337%" height="15" fill="rgb(229,134,13)" fg:x="105761" fg:w="36"/><text x="99.2697%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (36 samples, 0.03%)</title><rect x="99.0197%" y="693" width="0.0337%" height="15" fill="rgb(223,129,3)" fg:x="105761" fg:w="36"/><text x="99.2697%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (36 samples, 0.03%)</title><rect x="99.0197%" y="677" width="0.0337%" height="15" fill="rgb(221,124,13)" fg:x="105761" fg:w="36"/><text x="99.2697%" y="687.50"></text></g><g><title>___pthread_mutex_lock (36 samples, 0.03%)</title><rect x="99.0197%" y="661" width="0.0337%" height="15" fill="rgb(234,3,18)" fg:x="105761" fg:w="36"/><text x="99.2697%" y="671.50"></text></g><g><title>parking::Parker::park_timeout (142 samples, 0.13%)</title><rect x="99.0534%" y="741" width="0.1329%" height="15" fill="rgb(249,199,20)" fg:x="105797" fg:w="142"/><text x="99.3034%" y="751.50"></text></g><g><title>parking::Inner::park (137 samples, 0.13%)</title><rect x="99.0581%" y="725" width="0.1283%" height="15" fill="rgb(224,134,6)" fg:x="105802" fg:w="137"/><text x="99.3081%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (129 samples, 0.12%)</title><rect x="99.0656%" y="709" width="0.1208%" height="15" fill="rgb(254,83,26)" fg:x="105810" fg:w="129"/><text x="99.3156%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (129 samples, 0.12%)</title><rect x="99.0656%" y="693" width="0.1208%" height="15" fill="rgb(217,88,9)" fg:x="105810" fg:w="129"/><text x="99.3156%" y="703.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (9,149 samples, 8.57%)</title><rect x="90.6458%" y="773" width="8.5658%" height="15" fill="rgb(225,73,2)" fg:x="96817" fg:w="9149"/><text x="90.8958%" y="783.50">async_global..</text></g><g><title>async_io::driver::block_on (9,149 samples, 8.57%)</title><rect x="90.6458%" y="757" width="8.5658%" height="15" fill="rgb(226,44,39)" fg:x="96817" fg:w="9149"/><text x="90.8958%" y="767.50">async_io::dr..</text></g><g><title>std::time::Instant::now (21 samples, 0.02%)</title><rect x="99.1920%" y="741" width="0.0197%" height="15" fill="rgb(228,53,17)" fg:x="105945" fg:w="21"/><text x="99.4420%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (21 samples, 0.02%)</title><rect x="99.1920%" y="725" width="0.0197%" height="15" fill="rgb(212,27,27)" fg:x="105945" fg:w="21"/><text x="99.4420%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (21 samples, 0.02%)</title><rect x="99.1920%" y="709" width="0.0197%" height="15" fill="rgb(241,50,6)" fg:x="105945" fg:w="21"/><text x="99.4420%" y="719.50"></text></g><g><title>__clock_gettime_2 (18 samples, 0.02%)</title><rect x="99.1948%" y="693" width="0.0169%" height="15" fill="rgb(225,28,51)" fg:x="105948" fg:w="18"/><text x="99.4448%" y="703.50"></text></g><g><title>__vdso_clock_gettime (16 samples, 0.01%)</title><rect x="99.1967%" y="677" width="0.0150%" height="15" fill="rgb(215,33,16)" fg:x="105950" fg:w="16"/><text x="99.4467%" y="687.50"></text></g><g><title>std::panic::catch_unwind (9,159 samples, 8.58%)</title><rect x="90.6402%" y="1029" width="8.5752%" height="15" fill="rgb(243,40,39)" fg:x="96811" fg:w="9159"/><text x="90.8902%" y="1039.50">std::panic::..</text></g><g><title>std::panicking::try (9,159 samples, 8.58%)</title><rect x="90.6402%" y="1013" width="8.5752%" height="15" fill="rgb(225,11,42)" fg:x="96811" fg:w="9159"/><text x="90.8902%" y="1023.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (9,159 samples, 8.58%)</title><rect x="90.6402%" y="997" width="8.5752%" height="15" fill="rgb(241,220,38)" fg:x="96811" fg:w="9159"/><text x="90.8902%" y="1007.50">std::panicki..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9,159 samples, 8.58%)</title><rect x="90.6402%" y="981" width="8.5752%" height="15" fill="rgb(244,52,35)" fg:x="96811" fg:w="9159"/><text x="90.8902%" y="991.50">&lt;core::panic..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (9,159 samples, 8.58%)</title><rect x="90.6402%" y="965" width="8.5752%" height="15" fill="rgb(246,42,46)" fg:x="96811" fg:w="9159"/><text x="90.8902%" y="975.50">std::thread:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9,159 samples, 8.58%)</title><rect x="90.6402%" y="949" width="8.5752%" height="15" fill="rgb(205,184,13)" fg:x="96811" fg:w="9159"/><text x="90.8902%" y="959.50">std::sys_com..</text></g><g><title>core::ops::function::FnOnce::call_once (9,159 samples, 8.58%)</title><rect x="90.6402%" y="933" width="8.5752%" height="15" fill="rgb(209,48,36)" fg:x="96811" fg:w="9159"/><text x="90.8902%" y="943.50">core::ops::f..</text></g><g><title>async_global_executor::threading::thread_main_loop (9,159 samples, 8.58%)</title><rect x="90.6402%" y="917" width="8.5752%" height="15" fill="rgb(244,34,51)" fg:x="96811" fg:w="9159"/><text x="90.8902%" y="927.50">async_global..</text></g><g><title>std::panic::catch_unwind (9,153 samples, 8.57%)</title><rect x="90.6458%" y="901" width="8.5696%" height="15" fill="rgb(221,107,33)" fg:x="96817" fg:w="9153"/><text x="90.8958%" y="911.50">std::panic::..</text></g><g><title>std::panicking::try (9,153 samples, 8.57%)</title><rect x="90.6458%" y="885" width="8.5696%" height="15" fill="rgb(224,203,12)" fg:x="96817" fg:w="9153"/><text x="90.8958%" y="895.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (9,153 samples, 8.57%)</title><rect x="90.6458%" y="869" width="8.5696%" height="15" fill="rgb(230,215,18)" fg:x="96817" fg:w="9153"/><text x="90.8958%" y="879.50">std::panicki..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (9,153 samples, 8.57%)</title><rect x="90.6458%" y="853" width="8.5696%" height="15" fill="rgb(206,185,35)" fg:x="96817" fg:w="9153"/><text x="90.8958%" y="863.50">async_global..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,153 samples, 8.57%)</title><rect x="90.6458%" y="837" width="8.5696%" height="15" fill="rgb(228,140,34)" fg:x="96817" fg:w="9153"/><text x="90.8958%" y="847.50">std::thread:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,153 samples, 8.57%)</title><rect x="90.6458%" y="821" width="8.5696%" height="15" fill="rgb(208,93,13)" fg:x="96817" fg:w="9153"/><text x="90.8958%" y="831.50">std::thread:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (9,153 samples, 8.57%)</title><rect x="90.6458%" y="805" width="8.5696%" height="15" fill="rgb(221,193,39)" fg:x="96817" fg:w="9153"/><text x="90.8958%" y="815.50">async_global..</text></g><g><title>async_global_executor::reactor::block_on (9,153 samples, 8.57%)</title><rect x="90.6458%" y="789" width="8.5696%" height="15" fill="rgb(241,132,34)" fg:x="96817" fg:w="9153"/><text x="90.8958%" y="799.50">async_global..</text></g><g><title>__GI___clone (9,170 samples, 8.59%)</title><rect x="90.6309%" y="1141" width="8.5855%" height="15" fill="rgb(221,141,10)" fg:x="96801" fg:w="9170"/><text x="90.8809%" y="1151.50">__GI___clone</text></g><g><title>start_thread (9,160 samples, 8.58%)</title><rect x="90.6402%" y="1125" width="8.5761%" height="15" fill="rgb(226,90,31)" fg:x="96811" fg:w="9160"/><text x="90.8902%" y="1135.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9,160 samples, 8.58%)</title><rect x="90.6402%" y="1109" width="8.5761%" height="15" fill="rgb(243,75,5)" fg:x="96811" fg:w="9160"/><text x="90.8902%" y="1119.50">std::sys::un..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9,160 samples, 8.58%)</title><rect x="90.6402%" y="1093" width="8.5761%" height="15" fill="rgb(227,156,21)" fg:x="96811" fg:w="9160"/><text x="90.8902%" y="1103.50">&lt;alloc::boxe..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9,160 samples, 8.58%)</title><rect x="90.6402%" y="1077" width="8.5761%" height="15" fill="rgb(250,195,8)" fg:x="96811" fg:w="9160"/><text x="90.8902%" y="1087.50">&lt;alloc::boxe..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (9,160 samples, 8.58%)</title><rect x="90.6402%" y="1061" width="8.5761%" height="15" fill="rgb(220,134,5)" fg:x="96811" fg:w="9160"/><text x="90.8902%" y="1071.50">core::ops::f..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (9,160 samples, 8.58%)</title><rect x="90.6402%" y="1045" width="8.5761%" height="15" fill="rgb(246,106,34)" fg:x="96811" fg:w="9160"/><text x="90.8902%" y="1055.50">std::thread:..</text></g><g><title>abi_stable::std_types::boxed::destroy_box (59 samples, 0.06%)</title><rect x="99.2351%" y="1141" width="0.0552%" height="15" fill="rgb(205,1,4)" fg:x="105991" fg:w="59"/><text x="99.4851%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.01%)</title><rect x="99.2781%" y="1125" width="0.0122%" height="15" fill="rgb(224,151,29)" fg:x="106037" fg:w="13"/><text x="99.5281%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="99.2781%" y="1109" width="0.0122%" height="15" fill="rgb(251,196,0)" fg:x="106037" fg:w="13"/><text x="99.5281%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.01%)</title><rect x="99.2781%" y="1093" width="0.0122%" height="15" fill="rgb(212,127,0)" fg:x="106037" fg:w="13"/><text x="99.5281%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (13 samples, 0.01%)</title><rect x="99.2781%" y="1077" width="0.0122%" height="15" fill="rgb(236,71,53)" fg:x="106037" fg:w="13"/><text x="99.5281%" y="1087.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="99.3072%" y="1125" width="0.0206%" height="15" fill="rgb(227,99,0)" fg:x="106068" fg:w="22"/><text x="99.5572%" y="1135.50"></text></g><g><title>anon.23a3371eb37fc94817be509838165768.73.llvm.8911090552514922138 (24 samples, 0.02%)</title><rect x="99.3072%" y="1141" width="0.0225%" height="15" fill="rgb(239,89,21)" fg:x="106068" fg:w="24"/><text x="99.5572%" y="1151.50"></text></g><g><title>rust_alloc (18 samples, 0.02%)</title><rect x="99.3306%" y="1125" width="0.0169%" height="15" fill="rgb(243,122,19)" fg:x="106093" fg:w="18"/><text x="99.5806%" y="1135.50"></text></g><g><title>anon.23a3371eb37fc94817be509838165768.74.llvm.8911090552514922138 (20 samples, 0.02%)</title><rect x="99.3296%" y="1141" width="0.0187%" height="15" fill="rgb(229,192,45)" fg:x="106092" fg:w="20"/><text x="99.5796%" y="1151.50"></text></g><g><title>anon.35f0de85e04b0f8bb947972ea9348f1d.14.llvm.7420022101544806582 (28 samples, 0.03%)</title><rect x="99.3549%" y="1141" width="0.0262%" height="15" fill="rgb(235,165,35)" fg:x="106119" fg:w="28"/><text x="99.6049%" y="1151.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (19 samples, 0.02%)</title><rect x="99.4073%" y="1125" width="0.0178%" height="15" fill="rgb(253,202,0)" fg:x="106175" fg:w="19"/><text x="99.6573%" y="1135.50"></text></g><g><title>anon.8c5413703f4f186253e43f95062f97a6.113.llvm.12695769662175795486 (31 samples, 0.03%)</title><rect x="99.4036%" y="1141" width="0.0290%" height="15" fill="rgb(235,51,20)" fg:x="106171" fg:w="31"/><text x="99.6536%" y="1151.50"></text></g><g><title>anon.adf543dd20ecce45fc53651bd1207dc5.78.llvm.3254357054457597259 (16 samples, 0.01%)</title><rect x="99.4326%" y="1141" width="0.0150%" height="15" fill="rgb(218,95,46)" fg:x="106202" fg:w="16"/><text x="99.6826%" y="1151.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="99.4364%" y="1125" width="0.0112%" height="15" fill="rgb(212,81,10)" fg:x="106206" fg:w="12"/><text x="99.6864%" y="1135.50"></text></g><g><title>async_executor::steal (22 samples, 0.02%)</title><rect x="99.4542%" y="1141" width="0.0206%" height="15" fill="rgb(240,59,0)" fg:x="106225" fg:w="22"/><text x="99.7042%" y="1151.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (29 samples, 0.03%)</title><rect x="99.4813%" y="1141" width="0.0272%" height="15" fill="rgb(212,191,42)" fg:x="106254" fg:w="29"/><text x="99.7313%" y="1151.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (19 samples, 0.02%)</title><rect x="99.5122%" y="1141" width="0.0178%" height="15" fill="rgb(233,140,3)" fg:x="106287" fg:w="19"/><text x="99.7622%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (12 samples, 0.01%)</title><rect x="99.5581%" y="1093" width="0.0112%" height="15" fill="rgb(215,69,23)" fg:x="106336" fg:w="12"/><text x="99.8081%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="99.5581%" y="1077" width="0.0112%" height="15" fill="rgb(240,202,20)" fg:x="106336" fg:w="12"/><text x="99.8081%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (12 samples, 0.01%)</title><rect x="99.5581%" y="1061" width="0.0112%" height="15" fill="rgb(209,146,50)" fg:x="106336" fg:w="12"/><text x="99.8081%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (22 samples, 0.02%)</title><rect x="99.5581%" y="1125" width="0.0206%" height="15" fill="rgb(253,102,54)" fg:x="106336" fg:w="22"/><text x="99.8081%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (22 samples, 0.02%)</title><rect x="99.5581%" y="1109" width="0.0206%" height="15" fill="rgb(250,173,47)" fg:x="106336" fg:w="22"/><text x="99.8081%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (34 samples, 0.03%)</title><rect x="99.5787%" y="1125" width="0.0318%" height="15" fill="rgb(232,142,7)" fg:x="106358" fg:w="34"/><text x="99.8287%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (34 samples, 0.03%)</title><rect x="99.5787%" y="1109" width="0.0318%" height="15" fill="rgb(230,157,47)" fg:x="106358" fg:w="34"/><text x="99.8287%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (34 samples, 0.03%)</title><rect x="99.5787%" y="1093" width="0.0318%" height="15" fill="rgb(214,177,35)" fg:x="106358" fg:w="34"/><text x="99.8287%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (103 samples, 0.10%)</title><rect x="99.5487%" y="1141" width="0.0964%" height="15" fill="rgb(234,119,46)" fg:x="106326" fg:w="103"/><text x="99.7987%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (37 samples, 0.03%)</title><rect x="99.6105%" y="1125" width="0.0346%" height="15" fill="rgb(241,180,50)" fg:x="106392" fg:w="37"/><text x="99.8605%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (33 samples, 0.03%)</title><rect x="99.6143%" y="1109" width="0.0309%" height="15" fill="rgb(221,54,25)" fg:x="106396" fg:w="33"/><text x="99.8643%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (33 samples, 0.03%)</title><rect x="99.6143%" y="1093" width="0.0309%" height="15" fill="rgb(209,157,44)" fg:x="106396" fg:w="33"/><text x="99.8643%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (17 samples, 0.02%)</title><rect x="99.6611%" y="1141" width="0.0159%" height="15" fill="rgb(246,115,41)" fg:x="106446" fg:w="17"/><text x="99.9111%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="99.6611%" y="1125" width="0.0159%" height="15" fill="rgb(229,86,1)" fg:x="106446" fg:w="17"/><text x="99.9111%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (20 samples, 0.02%)</title><rect x="99.6779%" y="1141" width="0.0187%" height="15" fill="rgb(240,108,53)" fg:x="106464" fg:w="20"/><text x="99.9279%" y="1151.50"></text></g><g><title>async-std/runti (106,422 samples, 99.64%)</title><rect x="0.0590%" y="1157" width="99.6386%" height="15" fill="rgb(227,134,2)" fg:x="63" fg:w="106422"/><text x="0.3090%" y="1167.50">async-std/runti</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="99.7023%" y="805" width="0.0103%" height="15" fill="rgb(213,129,25)" fg:x="106490" fg:w="11"/><text x="99.9523%" y="815.50"></text></g><g><title>blocking::unblock::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="99.7023%" y="789" width="0.0103%" height="15" fill="rgb(226,35,21)" fg:x="106490" fg:w="11"/><text x="99.9523%" y="799.50"></text></g><g><title>async_std::fs::file::File::sync_data::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="99.7023%" y="773" width="0.0103%" height="15" fill="rgb(208,129,26)" fg:x="106490" fg:w="11"/><text x="99.9523%" y="783.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="99.7023%" y="901" width="0.0112%" height="15" fill="rgb(224,83,6)" fg:x="106490" fg:w="12"/><text x="99.9523%" y="911.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="99.7023%" y="885" width="0.0112%" height="15" fill="rgb(227,52,39)" fg:x="106490" fg:w="12"/><text x="99.9523%" y="895.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="99.7023%" y="869" width="0.0112%" height="15" fill="rgb(241,30,17)" fg:x="106490" fg:w="12"/><text x="99.9523%" y="879.50"></text></g><g><title>blocking::Executor::main_loop::{{closure}} (12 samples, 0.01%)</title><rect x="99.7023%" y="853" width="0.0112%" height="15" fill="rgb(246,186,42)" fg:x="106490" fg:w="12"/><text x="99.9523%" y="863.50"></text></g><g><title>async_task::runnable::Runnable::run (12 samples, 0.01%)</title><rect x="99.7023%" y="837" width="0.0112%" height="15" fill="rgb(221,169,15)" fg:x="106490" fg:w="12"/><text x="99.9523%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (12 samples, 0.01%)</title><rect x="99.7023%" y="821" width="0.0112%" height="15" fill="rgb(235,108,21)" fg:x="106490" fg:w="12"/><text x="99.9523%" y="831.50"></text></g><g><title>blocking-1 (22 samples, 0.02%)</title><rect x="99.6976%" y="1157" width="0.0206%" height="15" fill="rgb(219,148,30)" fg:x="106485" fg:w="22"/><text x="99.9476%" y="1167.50"></text></g><g><title>__GI___clone (22 samples, 0.02%)</title><rect x="99.6976%" y="1141" width="0.0206%" height="15" fill="rgb(220,109,5)" fg:x="106485" fg:w="22"/><text x="99.9476%" y="1151.50"></text></g><g><title>start_thread (17 samples, 0.02%)</title><rect x="99.7023%" y="1125" width="0.0159%" height="15" fill="rgb(213,203,48)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (17 samples, 0.02%)</title><rect x="99.7023%" y="1109" width="0.0159%" height="15" fill="rgb(244,71,33)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.7023%" y="1093" width="0.0159%" height="15" fill="rgb(209,23,2)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.7023%" y="1077" width="0.0159%" height="15" fill="rgb(219,97,7)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (17 samples, 0.02%)</title><rect x="99.7023%" y="1061" width="0.0159%" height="15" fill="rgb(216,161,23)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (17 samples, 0.02%)</title><rect x="99.7023%" y="1045" width="0.0159%" height="15" fill="rgb(207,45,42)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="99.7023%" y="1029" width="0.0159%" height="15" fill="rgb(241,61,4)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="1039.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="99.7023%" y="1013" width="0.0159%" height="15" fill="rgb(236,170,1)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="99.7023%" y="997" width="0.0159%" height="15" fill="rgb(239,72,5)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.7023%" y="981" width="0.0159%" height="15" fill="rgb(214,13,50)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="99.7023%" y="965" width="0.0159%" height="15" fill="rgb(224,88,9)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 0.02%)</title><rect x="99.7023%" y="949" width="0.0159%" height="15" fill="rgb(238,192,34)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (17 samples, 0.02%)</title><rect x="99.7023%" y="933" width="0.0159%" height="15" fill="rgb(217,203,50)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (17 samples, 0.02%)</title><rect x="99.7023%" y="917" width="0.0159%" height="15" fill="rgb(241,123,32)" fg:x="106490" fg:w="17"/><text x="99.9523%" y="927.50"></text></g><g><title>blocking-3 (18 samples, 0.02%)</title><rect x="99.7238%" y="1157" width="0.0169%" height="15" fill="rgb(248,151,39)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="1167.50"></text></g><g><title>__GI___clone (18 samples, 0.02%)</title><rect x="99.7238%" y="1141" width="0.0169%" height="15" fill="rgb(208,89,6)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="1151.50"></text></g><g><title>start_thread (18 samples, 0.02%)</title><rect x="99.7238%" y="1125" width="0.0169%" height="15" fill="rgb(254,43,26)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (18 samples, 0.02%)</title><rect x="99.7238%" y="1109" width="0.0169%" height="15" fill="rgb(216,158,13)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.7238%" y="1093" width="0.0169%" height="15" fill="rgb(212,47,37)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.7238%" y="1077" width="0.0169%" height="15" fill="rgb(254,16,10)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (18 samples, 0.02%)</title><rect x="99.7238%" y="1061" width="0.0169%" height="15" fill="rgb(223,228,16)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (18 samples, 0.02%)</title><rect x="99.7238%" y="1045" width="0.0169%" height="15" fill="rgb(249,108,50)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="99.7238%" y="1029" width="0.0169%" height="15" fill="rgb(208,220,5)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="1039.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="99.7238%" y="1013" width="0.0169%" height="15" fill="rgb(217,89,48)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="99.7238%" y="997" width="0.0169%" height="15" fill="rgb(212,113,41)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.7238%" y="981" width="0.0169%" height="15" fill="rgb(231,127,5)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="99.7238%" y="965" width="0.0169%" height="15" fill="rgb(217,141,17)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.02%)</title><rect x="99.7238%" y="949" width="0.0169%" height="15" fill="rgb(245,125,54)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (18 samples, 0.02%)</title><rect x="99.7238%" y="933" width="0.0169%" height="15" fill="rgb(248,125,3)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (18 samples, 0.02%)</title><rect x="99.7238%" y="917" width="0.0169%" height="15" fill="rgb(236,119,51)" fg:x="106513" fg:w="18"/><text x="99.9738%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (15 samples, 0.01%)</title><rect x="99.7266%" y="901" width="0.0140%" height="15" fill="rgb(239,99,8)" fg:x="106516" fg:w="15"/><text x="99.9766%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (15 samples, 0.01%)</title><rect x="99.7266%" y="885" width="0.0140%" height="15" fill="rgb(224,228,4)" fg:x="106516" fg:w="15"/><text x="99.9766%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (15 samples, 0.01%)</title><rect x="99.7266%" y="869" width="0.0140%" height="15" fill="rgb(220,131,45)" fg:x="106516" fg:w="15"/><text x="99.9766%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (13 samples, 0.01%)</title><rect x="99.7285%" y="853" width="0.0122%" height="15" fill="rgb(215,62,5)" fg:x="106518" fg:w="13"/><text x="99.9785%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common (12 samples, 0.01%)</title><rect x="99.7294%" y="837" width="0.0112%" height="15" fill="rgb(253,12,24)" fg:x="106519" fg:w="12"/><text x="99.9794%" y="847.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (50 samples, 0.05%)</title><rect x="99.7528%" y="917" width="0.0468%" height="15" fill="rgb(248,120,50)" fg:x="106544" fg:w="50"/><text x="100.0028%" y="927.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.05%)</title><rect x="99.7528%" y="901" width="0.0468%" height="15" fill="rgb(245,194,10)" fg:x="106544" fg:w="50"/><text x="100.0028%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.05%)</title><rect x="99.7528%" y="885" width="0.0468%" height="15" fill="rgb(241,149,38)" fg:x="106544" fg:w="50"/><text x="100.0028%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (49 samples, 0.05%)</title><rect x="99.7538%" y="869" width="0.0459%" height="15" fill="rgb(219,215,7)" fg:x="106545" fg:w="49"/><text x="100.0038%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (49 samples, 0.05%)</title><rect x="99.7538%" y="853" width="0.0459%" height="15" fill="rgb(208,120,31)" fg:x="106545" fg:w="49"/><text x="100.0038%" y="863.50"></text></g><g><title>___pthread_mutex_lock (49 samples, 0.05%)</title><rect x="99.7538%" y="837" width="0.0459%" height="15" fill="rgb(244,30,8)" fg:x="106545" fg:w="49"/><text x="100.0038%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (48 samples, 0.04%)</title><rect x="99.7547%" y="821" width="0.0449%" height="15" fill="rgb(238,35,44)" fg:x="106546" fg:w="48"/><text x="100.0047%" y="831.50"></text></g><g><title>std::panic::catch_unwind (52 samples, 0.05%)</title><rect x="99.7519%" y="1029" width="0.0487%" height="15" fill="rgb(243,218,37)" fg:x="106543" fg:w="52"/><text x="100.0019%" y="1039.50"></text></g><g><title>std::panicking::try (52 samples, 0.05%)</title><rect x="99.7519%" y="1013" width="0.0487%" height="15" fill="rgb(218,169,10)" fg:x="106543" fg:w="52"/><text x="100.0019%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (52 samples, 0.05%)</title><rect x="99.7519%" y="997" width="0.0487%" height="15" fill="rgb(221,144,10)" fg:x="106543" fg:w="52"/><text x="100.0019%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (52 samples, 0.05%)</title><rect x="99.7519%" y="981" width="0.0487%" height="15" fill="rgb(226,41,38)" fg:x="106543" fg:w="52"/><text x="100.0019%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (52 samples, 0.05%)</title><rect x="99.7519%" y="965" width="0.0487%" height="15" fill="rgb(228,3,1)" fg:x="106543" fg:w="52"/><text x="100.0019%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (52 samples, 0.05%)</title><rect x="99.7519%" y="949" width="0.0487%" height="15" fill="rgb(209,129,12)" fg:x="106543" fg:w="52"/><text x="100.0019%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (52 samples, 0.05%)</title><rect x="99.7519%" y="933" width="0.0487%" height="15" fill="rgb(213,136,33)" fg:x="106543" fg:w="52"/><text x="100.0019%" y="943.50"></text></g><g><title>tokio-runtime-w (55 samples, 0.05%)</title><rect x="99.7500%" y="1157" width="0.0515%" height="15" fill="rgb(209,181,29)" fg:x="106541" fg:w="55"/><text x="100.0000%" y="1167.50"></text></g><g><title>__GI___clone (53 samples, 0.05%)</title><rect x="99.7519%" y="1141" width="0.0496%" height="15" fill="rgb(234,173,18)" fg:x="106543" fg:w="53"/><text x="100.0019%" y="1151.50"></text></g><g><title>start_thread (53 samples, 0.05%)</title><rect x="99.7519%" y="1125" width="0.0496%" height="15" fill="rgb(227,73,47)" fg:x="106543" fg:w="53"/><text x="100.0019%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (53 samples, 0.05%)</title><rect x="99.7519%" y="1109" width="0.0496%" height="15" fill="rgb(234,9,34)" fg:x="106543" fg:w="53"/><text x="100.0019%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (53 samples, 0.05%)</title><rect x="99.7519%" y="1093" width="0.0496%" height="15" fill="rgb(235,172,15)" fg:x="106543" fg:w="53"/><text x="100.0019%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (53 samples, 0.05%)</title><rect x="99.7519%" y="1077" width="0.0496%" height="15" fill="rgb(245,61,2)" fg:x="106543" fg:w="53"/><text x="100.0019%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (53 samples, 0.05%)</title><rect x="99.7519%" y="1061" width="0.0496%" height="15" fill="rgb(238,39,47)" fg:x="106543" fg:w="53"/><text x="100.0019%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (53 samples, 0.05%)</title><rect x="99.7519%" y="1045" width="0.0496%" height="15" fill="rgb(234,37,24)" fg:x="106543" fg:w="53"/><text x="100.0019%" y="1055.50"></text></g><g><title>__GI___clone (194 samples, 0.18%)</title><rect x="99.8109%" y="1141" width="0.1816%" height="15" fill="rgb(248,223,24)" fg:x="106606" fg:w="194"/><text x="100.0609%" y="1151.50"></text></g><g><title>start_thread (14 samples, 0.01%)</title><rect x="99.9794%" y="1125" width="0.0131%" height="15" fill="rgb(223,12,15)" fg:x="106786" fg:w="14"/><text x="100.2294%" y="1135.50"></text></g><g><title>all (106,808 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(249,6,3)" fg:x="0" fg:w="106808"/><text x="0.2500%" y="1183.50"></text></g><g><title>tremor-pdk-sing (212 samples, 0.20%)</title><rect x="99.8015%" y="1157" width="0.1985%" height="15" fill="rgb(237,105,33)" fg:x="106596" fg:w="212"/><text x="100.0515%" y="1167.50"></text></g></svg></svg>