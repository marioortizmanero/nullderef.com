<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="106294"><g><title>___pthread_cond_timedwait (39 samples, 0.04%)</title><rect x="0.0273%" y="821" width="0.0367%" height="15" fill="rgb(227,0,7)" fg:x="29" fg:w="39"/><text x="0.2773%" y="831.50"></text></g><g><title>__futex_abstimed_wait_common (33 samples, 0.03%)</title><rect x="0.0329%" y="805" width="0.0310%" height="15" fill="rgb(217,0,24)" fg:x="35" fg:w="33"/><text x="0.2829%" y="815.50"></text></g><g><title>async-io (67 samples, 0.06%)</title><rect x="0.0028%" y="1157" width="0.0630%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="67"/><text x="0.2528%" y="1167.50"></text></g><g><title>__GI___clone (65 samples, 0.06%)</title><rect x="0.0047%" y="1141" width="0.0612%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="65"/><text x="0.2547%" y="1151.50"></text></g><g><title>start_thread (65 samples, 0.06%)</title><rect x="0.0047%" y="1125" width="0.0612%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="65"/><text x="0.2547%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (65 samples, 0.06%)</title><rect x="0.0047%" y="1109" width="0.0612%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="65"/><text x="0.2547%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (65 samples, 0.06%)</title><rect x="0.0047%" y="1093" width="0.0612%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="65"/><text x="0.2547%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (65 samples, 0.06%)</title><rect x="0.0047%" y="1077" width="0.0612%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="65"/><text x="0.2547%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (65 samples, 0.06%)</title><rect x="0.0047%" y="1061" width="0.0612%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="65"/><text x="0.2547%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (65 samples, 0.06%)</title><rect x="0.0047%" y="1045" width="0.0612%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="65"/><text x="0.2547%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (65 samples, 0.06%)</title><rect x="0.0047%" y="1029" width="0.0612%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="65"/><text x="0.2547%" y="1039.50"></text></g><g><title>std::panicking::try (65 samples, 0.06%)</title><rect x="0.0047%" y="1013" width="0.0612%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="65"/><text x="0.2547%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (65 samples, 0.06%)</title><rect x="0.0047%" y="997" width="0.0612%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="65"/><text x="0.2547%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (65 samples, 0.06%)</title><rect x="0.0047%" y="981" width="0.0612%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="65"/><text x="0.2547%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (65 samples, 0.06%)</title><rect x="0.0047%" y="965" width="0.0612%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="65"/><text x="0.2547%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (65 samples, 0.06%)</title><rect x="0.0047%" y="949" width="0.0612%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="65"/><text x="0.2547%" y="959.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (65 samples, 0.06%)</title><rect x="0.0047%" y="933" width="0.0612%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="65"/><text x="0.2547%" y="943.50"></text></g><g><title>async_io::driver::main_loop (65 samples, 0.06%)</title><rect x="0.0047%" y="917" width="0.0612%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="65"/><text x="0.2547%" y="927.50"></text></g><g><title>parking::Parker::park_timeout (46 samples, 0.04%)</title><rect x="0.0226%" y="901" width="0.0433%" height="15" fill="rgb(221,200,47)" fg:x="24" fg:w="46"/><text x="0.2726%" y="911.50"></text></g><g><title>parking::Inner::park (46 samples, 0.04%)</title><rect x="0.0226%" y="885" width="0.0433%" height="15" fill="rgb(226,26,5)" fg:x="24" fg:w="46"/><text x="0.2726%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (45 samples, 0.04%)</title><rect x="0.0235%" y="869" width="0.0423%" height="15" fill="rgb(249,33,26)" fg:x="25" fg:w="45"/><text x="0.2735%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (43 samples, 0.04%)</title><rect x="0.0254%" y="853" width="0.0405%" height="15" fill="rgb(235,183,28)" fg:x="27" fg:w="43"/><text x="0.2754%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (43 samples, 0.04%)</title><rect x="0.0254%" y="837" width="0.0405%" height="15" fill="rgb(221,5,38)" fg:x="27" fg:w="43"/><text x="0.2754%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="0.4657%" y="1141" width="0.0169%" height="15" fill="rgb(247,18,42)" fg:x="495" fg:w="18"/><text x="0.7157%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 0.08%)</title><rect x="0.4826%" y="1141" width="0.0818%" height="15" fill="rgb(241,131,45)" fg:x="513" fg:w="87"/><text x="0.7326%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (86 samples, 0.08%)</title><rect x="0.4836%" y="1125" width="0.0809%" height="15" fill="rgb(249,31,29)" fg:x="514" fg:w="86"/><text x="0.7336%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (76 samples, 0.07%)</title><rect x="0.6520%" y="1109" width="0.0715%" height="15" fill="rgb(225,111,53)" fg:x="693" fg:w="76"/><text x="0.9020%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (15 samples, 0.01%)</title><rect x="0.7235%" y="1077" width="0.0141%" height="15" fill="rgb(238,160,17)" fg:x="769" fg:w="15"/><text x="0.9735%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (15 samples, 0.01%)</title><rect x="0.7235%" y="1061" width="0.0141%" height="15" fill="rgb(214,148,48)" fg:x="769" fg:w="15"/><text x="0.9735%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (15 samples, 0.01%)</title><rect x="0.7235%" y="1045" width="0.0141%" height="15" fill="rgb(232,36,49)" fg:x="769" fg:w="15"/><text x="0.9735%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (15 samples, 0.01%)</title><rect x="0.7235%" y="1029" width="0.0141%" height="15" fill="rgb(209,103,24)" fg:x="769" fg:w="15"/><text x="0.9735%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="0.7235%" y="1013" width="0.0141%" height="15" fill="rgb(229,88,8)" fg:x="769" fg:w="15"/><text x="0.9735%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="0.7235%" y="997" width="0.0141%" height="15" fill="rgb(213,181,19)" fg:x="769" fg:w="15"/><text x="0.9735%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="0.7235%" y="981" width="0.0141%" height="15" fill="rgb(254,191,54)" fg:x="769" fg:w="15"/><text x="0.9735%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="0.7235%" y="965" width="0.0141%" height="15" fill="rgb(241,83,37)" fg:x="769" fg:w="15"/><text x="0.9735%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="0.7235%" y="949" width="0.0141%" height="15" fill="rgb(233,36,39)" fg:x="769" fg:w="15"/><text x="0.9735%" y="959.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="0.7235%" y="933" width="0.0141%" height="15" fill="rgb(226,3,54)" fg:x="769" fg:w="15"/><text x="0.9735%" y="943.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="0.7235%" y="917" width="0.0141%" height="15" fill="rgb(245,192,40)" fg:x="769" fg:w="15"/><text x="0.9735%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="0.7235%" y="901" width="0.0141%" height="15" fill="rgb(238,167,29)" fg:x="769" fg:w="15"/><text x="0.9735%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (19 samples, 0.02%)</title><rect x="0.7432%" y="1061" width="0.0179%" height="15" fill="rgb(232,182,51)" fg:x="790" fg:w="19"/><text x="0.9932%" y="1071.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (19 samples, 0.02%)</title><rect x="0.7432%" y="1045" width="0.0179%" height="15" fill="rgb(231,60,39)" fg:x="790" fg:w="19"/><text x="0.9932%" y="1055.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (223 samples, 0.21%)</title><rect x="0.5645%" y="1125" width="0.2098%" height="15" fill="rgb(208,69,12)" fg:x="600" fg:w="223"/><text x="0.8145%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (54 samples, 0.05%)</title><rect x="0.7235%" y="1109" width="0.0508%" height="15" fill="rgb(235,93,37)" fg:x="769" fg:w="54"/><text x="0.9735%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (54 samples, 0.05%)</title><rect x="0.7235%" y="1093" width="0.0508%" height="15" fill="rgb(213,116,39)" fg:x="769" fg:w="54"/><text x="0.9735%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (39 samples, 0.04%)</title><rect x="0.7376%" y="1077" width="0.0367%" height="15" fill="rgb(222,207,29)" fg:x="784" fg:w="39"/><text x="0.9876%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="0.7611%" y="1061" width="0.0132%" height="15" fill="rgb(206,96,30)" fg:x="809" fg:w="14"/><text x="1.0111%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="0.7611%" y="1045" width="0.0132%" height="15" fill="rgb(218,138,4)" fg:x="809" fg:w="14"/><text x="1.0111%" y="1055.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="0.7611%" y="1029" width="0.0132%" height="15" fill="rgb(250,191,14)" fg:x="809" fg:w="14"/><text x="1.0111%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (22 samples, 0.02%)</title><rect x="0.7771%" y="1109" width="0.0207%" height="15" fill="rgb(239,60,40)" fg:x="826" fg:w="22"/><text x="1.0271%" y="1119.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (22 samples, 0.02%)</title><rect x="0.7771%" y="1093" width="0.0207%" height="15" fill="rgb(206,27,48)" fg:x="826" fg:w="22"/><text x="1.0271%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (22 samples, 0.02%)</title><rect x="0.7771%" y="1077" width="0.0207%" height="15" fill="rgb(225,35,8)" fg:x="826" fg:w="22"/><text x="1.0271%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (22 samples, 0.02%)</title><rect x="0.7771%" y="1061" width="0.0207%" height="15" fill="rgb(250,213,24)" fg:x="826" fg:w="22"/><text x="1.0271%" y="1071.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (26 samples, 0.02%)</title><rect x="0.7743%" y="1125" width="0.0245%" height="15" fill="rgb(247,123,22)" fg:x="823" fg:w="26"/><text x="1.0243%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="0.8016%" y="1125" width="0.0329%" height="15" fill="rgb(231,138,38)" fg:x="852" fg:w="35"/><text x="1.0516%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (24 samples, 0.02%)</title><rect x="0.8119%" y="1109" width="0.0226%" height="15" fill="rgb(231,145,46)" fg:x="863" fg:w="24"/><text x="1.0619%" y="1119.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="0.8119%" y="1093" width="0.0226%" height="15" fill="rgb(251,118,11)" fg:x="863" fg:w="24"/><text x="1.0619%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (24 samples, 0.02%)</title><rect x="0.8119%" y="1077" width="0.0226%" height="15" fill="rgb(217,147,25)" fg:x="863" fg:w="24"/><text x="1.0619%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="0.8119%" y="1061" width="0.0226%" height="15" fill="rgb(247,81,37)" fg:x="863" fg:w="24"/><text x="1.0619%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.02%)</title><rect x="0.8119%" y="1045" width="0.0226%" height="15" fill="rgb(209,12,38)" fg:x="863" fg:w="24"/><text x="1.0619%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.02%)</title><rect x="0.8119%" y="1029" width="0.0226%" height="15" fill="rgb(227,1,9)" fg:x="863" fg:w="24"/><text x="1.0619%" y="1039.50"></text></g><g><title>__rg_dealloc (24 samples, 0.02%)</title><rect x="0.8119%" y="1013" width="0.0226%" height="15" fill="rgb(248,47,43)" fg:x="863" fg:w="24"/><text x="1.0619%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (24 samples, 0.02%)</title><rect x="0.8119%" y="997" width="0.0226%" height="15" fill="rgb(221,10,30)" fg:x="863" fg:w="24"/><text x="1.0619%" y="1007.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (141 samples, 0.13%)</title><rect x="0.8345%" y="1125" width="0.1327%" height="15" fill="rgb(210,229,1)" fg:x="887" fg:w="141"/><text x="1.0845%" y="1135.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (27 samples, 0.03%)</title><rect x="0.9417%" y="1109" width="0.0254%" height="15" fill="rgb(222,148,37)" fg:x="1001" fg:w="27"/><text x="1.1917%" y="1119.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (37 samples, 0.03%)</title><rect x="1.0603%" y="1109" width="0.0348%" height="15" fill="rgb(234,67,33)" fg:x="1127" fg:w="37"/><text x="1.3103%" y="1119.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (28 samples, 0.03%)</title><rect x="1.0687%" y="1093" width="0.0263%" height="15" fill="rgb(247,98,35)" fg:x="1136" fg:w="28"/><text x="1.3187%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (69 samples, 0.06%)</title><rect x="1.0951%" y="1109" width="0.0649%" height="15" fill="rgb(247,138,52)" fg:x="1164" fg:w="69"/><text x="1.3451%" y="1119.50"></text></g><g><title>core::mem::replace (69 samples, 0.06%)</title><rect x="1.0951%" y="1093" width="0.0649%" height="15" fill="rgb(213,79,30)" fg:x="1164" fg:w="69"/><text x="1.3451%" y="1103.50"></text></g><g><title>core::ptr::read (69 samples, 0.06%)</title><rect x="1.0951%" y="1077" width="0.0649%" height="15" fill="rgb(246,177,23)" fg:x="1164" fg:w="69"/><text x="1.3451%" y="1087.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (202 samples, 0.19%)</title><rect x="0.9737%" y="1125" width="0.1900%" height="15" fill="rgb(230,62,27)" fg:x="1035" fg:w="202"/><text x="1.2237%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (32 samples, 0.03%)</title><rect x="1.6059%" y="1093" width="0.0301%" height="15" fill="rgb(216,154,8)" fg:x="1707" fg:w="32"/><text x="1.8559%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (32 samples, 0.03%)</title><rect x="1.6059%" y="1077" width="0.0301%" height="15" fill="rgb(244,35,45)" fg:x="1707" fg:w="32"/><text x="1.8559%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (111 samples, 0.10%)</title><rect x="1.5438%" y="1109" width="0.1044%" height="15" fill="rgb(251,115,12)" fg:x="1641" fg:w="111"/><text x="1.7938%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (13 samples, 0.01%)</title><rect x="1.6360%" y="1093" width="0.0122%" height="15" fill="rgb(240,54,50)" fg:x="1739" fg:w="13"/><text x="1.8860%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="1.6548%" y="965" width="0.0103%" height="15" fill="rgb(233,84,52)" fg:x="1759" fg:w="11"/><text x="1.9048%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="1.6548%" y="949" width="0.0103%" height="15" fill="rgb(207,117,47)" fg:x="1759" fg:w="11"/><text x="1.9048%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="1.6548%" y="933" width="0.0103%" height="15" fill="rgb(249,43,39)" fg:x="1759" fg:w="11"/><text x="1.9048%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="1.6548%" y="917" width="0.0103%" height="15" fill="rgb(209,38,44)" fg:x="1759" fg:w="11"/><text x="1.9048%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="1.6548%" y="901" width="0.0103%" height="15" fill="rgb(236,212,23)" fg:x="1759" fg:w="11"/><text x="1.9048%" y="911.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="1.6548%" y="885" width="0.0103%" height="15" fill="rgb(242,79,21)" fg:x="1759" fg:w="11"/><text x="1.9048%" y="895.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="1.6548%" y="869" width="0.0103%" height="15" fill="rgb(211,96,35)" fg:x="1759" fg:w="11"/><text x="1.9048%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="1.6548%" y="853" width="0.0103%" height="15" fill="rgb(253,215,40)" fg:x="1759" fg:w="11"/><text x="1.9048%" y="863.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="1.6483%" y="1093" width="0.0273%" height="15" fill="rgb(211,81,21)" fg:x="1752" fg:w="29"/><text x="1.8983%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="1.6548%" y="1077" width="0.0207%" height="15" fill="rgb(208,190,38)" fg:x="1759" fg:w="22"/><text x="1.9048%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (22 samples, 0.02%)</title><rect x="1.6548%" y="1061" width="0.0207%" height="15" fill="rgb(235,213,38)" fg:x="1759" fg:w="22"/><text x="1.9048%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (22 samples, 0.02%)</title><rect x="1.6548%" y="1045" width="0.0207%" height="15" fill="rgb(237,122,38)" fg:x="1759" fg:w="22"/><text x="1.9048%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (22 samples, 0.02%)</title><rect x="1.6548%" y="1029" width="0.0207%" height="15" fill="rgb(244,218,35)" fg:x="1759" fg:w="22"/><text x="1.9048%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.02%)</title><rect x="1.6548%" y="1013" width="0.0207%" height="15" fill="rgb(240,68,47)" fg:x="1759" fg:w="22"/><text x="1.9048%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.02%)</title><rect x="1.6548%" y="997" width="0.0207%" height="15" fill="rgb(210,16,53)" fg:x="1759" fg:w="22"/><text x="1.9048%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.02%)</title><rect x="1.6548%" y="981" width="0.0207%" height="15" fill="rgb(235,124,12)" fg:x="1759" fg:w="22"/><text x="1.9048%" y="991.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (11 samples, 0.01%)</title><rect x="1.6652%" y="965" width="0.0103%" height="15" fill="rgb(224,169,11)" fg:x="1770" fg:w="11"/><text x="1.9152%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="1.6652%" y="949" width="0.0103%" height="15" fill="rgb(250,166,2)" fg:x="1770" fg:w="11"/><text x="1.9152%" y="959.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (46 samples, 0.04%)</title><rect x="1.6483%" y="1109" width="0.0433%" height="15" fill="rgb(242,216,29)" fg:x="1752" fg:w="46"/><text x="1.8983%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (17 samples, 0.02%)</title><rect x="1.6755%" y="1093" width="0.0160%" height="15" fill="rgb(230,116,27)" fg:x="1781" fg:w="17"/><text x="1.9255%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="1.6755%" y="1077" width="0.0160%" height="15" fill="rgb(228,99,48)" fg:x="1781" fg:w="17"/><text x="1.9255%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="1.6755%" y="1061" width="0.0160%" height="15" fill="rgb(253,11,6)" fg:x="1781" fg:w="17"/><text x="1.9255%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="1.6755%" y="1045" width="0.0160%" height="15" fill="rgb(247,143,39)" fg:x="1781" fg:w="17"/><text x="1.9255%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="1.6755%" y="1029" width="0.0160%" height="15" fill="rgb(236,97,10)" fg:x="1781" fg:w="17"/><text x="1.9255%" y="1039.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (21 samples, 0.02%)</title><rect x="1.6915%" y="1109" width="0.0198%" height="15" fill="rgb(233,208,19)" fg:x="1798" fg:w="21"/><text x="1.9415%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="1.6915%" y="1093" width="0.0198%" height="15" fill="rgb(216,164,2)" fg:x="1798" fg:w="21"/><text x="1.9415%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="1.6915%" y="1077" width="0.0198%" height="15" fill="rgb(220,129,5)" fg:x="1798" fg:w="21"/><text x="1.9415%" y="1087.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (21 samples, 0.02%)</title><rect x="1.6915%" y="1061" width="0.0198%" height="15" fill="rgb(242,17,10)" fg:x="1798" fg:w="21"/><text x="1.9415%" y="1071.50"></text></g><g><title>async_task::runnable::Runnable::run (19 samples, 0.02%)</title><rect x="1.6934%" y="1045" width="0.0179%" height="15" fill="rgb(242,107,0)" fg:x="1800" fg:w="19"/><text x="1.9434%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (31 samples, 0.03%)</title><rect x="1.7245%" y="1077" width="0.0292%" height="15" fill="rgb(251,28,31)" fg:x="1833" fg:w="31"/><text x="1.9745%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (31 samples, 0.03%)</title><rect x="1.7245%" y="1061" width="0.0292%" height="15" fill="rgb(233,223,10)" fg:x="1833" fg:w="31"/><text x="1.9745%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (31 samples, 0.03%)</title><rect x="1.7245%" y="1045" width="0.0292%" height="15" fill="rgb(215,21,27)" fg:x="1833" fg:w="31"/><text x="1.9745%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (32 samples, 0.03%)</title><rect x="1.7245%" y="1109" width="0.0301%" height="15" fill="rgb(232,23,21)" fg:x="1833" fg:w="32"/><text x="1.9745%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (32 samples, 0.03%)</title><rect x="1.7245%" y="1093" width="0.0301%" height="15" fill="rgb(244,5,23)" fg:x="1833" fg:w="32"/><text x="1.9745%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="1.8007%" y="1093" width="0.0160%" height="15" fill="rgb(226,81,46)" fg:x="1914" fg:w="17"/><text x="2.0507%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (79 samples, 0.07%)</title><rect x="1.7546%" y="1109" width="0.0743%" height="15" fill="rgb(247,70,30)" fg:x="1865" fg:w="79"/><text x="2.0046%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (13 samples, 0.01%)</title><rect x="1.8167%" y="1093" width="0.0122%" height="15" fill="rgb(212,68,19)" fg:x="1931" fg:w="13"/><text x="2.0667%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (13 samples, 0.01%)</title><rect x="1.8289%" y="1109" width="0.0122%" height="15" fill="rgb(240,187,13)" fg:x="1944" fg:w="13"/><text x="2.0789%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (41 samples, 0.04%)</title><rect x="1.8411%" y="1109" width="0.0386%" height="15" fill="rgb(223,113,26)" fg:x="1957" fg:w="41"/><text x="2.0911%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="1.9267%" y="1093" width="0.0103%" height="15" fill="rgb(206,192,2)" fg:x="2048" fg:w="11"/><text x="2.1767%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="1.9267%" y="1077" width="0.0103%" height="15" fill="rgb(241,108,4)" fg:x="2048" fg:w="11"/><text x="2.1767%" y="1087.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (11 samples, 0.01%)</title><rect x="1.9267%" y="1061" width="0.0103%" height="15" fill="rgb(247,173,49)" fg:x="2048" fg:w="11"/><text x="2.1767%" y="1071.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="1.9267%" y="1045" width="0.0103%" height="15" fill="rgb(224,114,35)" fg:x="2048" fg:w="11"/><text x="2.1767%" y="1055.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (13 samples, 0.01%)</title><rect x="1.9371%" y="1093" width="0.0122%" height="15" fill="rgb(245,159,27)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (13 samples, 0.01%)</title><rect x="1.9371%" y="1077" width="0.0122%" height="15" fill="rgb(245,172,44)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="1087.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (13 samples, 0.01%)</title><rect x="1.9371%" y="1061" width="0.0122%" height="15" fill="rgb(236,23,11)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (13 samples, 0.01%)</title><rect x="1.9371%" y="1045" width="0.0122%" height="15" fill="rgb(205,117,38)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 0.01%)</title><rect x="1.9371%" y="1029" width="0.0122%" height="15" fill="rgb(237,72,25)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="1.9371%" y="1013" width="0.0122%" height="15" fill="rgb(244,70,9)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="1.9371%" y="997" width="0.0122%" height="15" fill="rgb(217,125,39)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="1.9371%" y="981" width="0.0122%" height="15" fill="rgb(235,36,10)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="1.9371%" y="965" width="0.0122%" height="15" fill="rgb(251,123,47)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="1.9371%" y="949" width="0.0122%" height="15" fill="rgb(221,13,13)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="1.9371%" y="933" width="0.0122%" height="15" fill="rgb(238,131,9)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="1.9371%" y="917" width="0.0122%" height="15" fill="rgb(211,50,8)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="1.9371%" y="901" width="0.0122%" height="15" fill="rgb(245,182,24)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="911.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="1.9371%" y="885" width="0.0122%" height="15" fill="rgb(242,14,37)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="895.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="1.9371%" y="869" width="0.0122%" height="15" fill="rgb(246,228,12)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="1.9371%" y="853" width="0.0122%" height="15" fill="rgb(213,55,15)" fg:x="2059" fg:w="13"/><text x="2.1871%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (846 samples, 0.80%)</title><rect x="1.1638%" y="1125" width="0.7959%" height="15" fill="rgb(209,9,3)" fg:x="1237" fg:w="846"/><text x="1.4138%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (85 samples, 0.08%)</title><rect x="1.8797%" y="1109" width="0.0800%" height="15" fill="rgb(230,59,30)" fg:x="1998" fg:w="85"/><text x="2.1297%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (11 samples, 0.01%)</title><rect x="1.9493%" y="1093" width="0.0103%" height="15" fill="rgb(209,121,21)" fg:x="2072" fg:w="11"/><text x="2.1993%" y="1103.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="1.9493%" y="1077" width="0.0103%" height="15" fill="rgb(220,109,13)" fg:x="2072" fg:w="11"/><text x="2.1993%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (31 samples, 0.03%)</title><rect x="2.0443%" y="1109" width="0.0292%" height="15" fill="rgb(232,18,1)" fg:x="2173" fg:w="31"/><text x="2.2943%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (31 samples, 0.03%)</title><rect x="2.0443%" y="1093" width="0.0292%" height="15" fill="rgb(215,41,42)" fg:x="2173" fg:w="31"/><text x="2.2943%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="2.0443%" y="1077" width="0.0292%" height="15" fill="rgb(224,123,36)" fg:x="2173" fg:w="31"/><text x="2.2943%" y="1087.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (31 samples, 0.03%)</title><rect x="2.0443%" y="1061" width="0.0292%" height="15" fill="rgb(240,125,3)" fg:x="2173" fg:w="31"/><text x="2.2943%" y="1071.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (31 samples, 0.03%)</title><rect x="2.0443%" y="1045" width="0.0292%" height="15" fill="rgb(205,98,50)" fg:x="2173" fg:w="31"/><text x="2.2943%" y="1055.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (134 samples, 0.13%)</title><rect x="1.9597%" y="1125" width="0.1261%" height="15" fill="rgb(205,185,37)" fg:x="2083" fg:w="134"/><text x="2.2097%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (13 samples, 0.01%)</title><rect x="2.0735%" y="1109" width="0.0122%" height="15" fill="rgb(238,207,15)" fg:x="2204" fg:w="13"/><text x="2.3235%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="2.0735%" y="1093" width="0.0122%" height="15" fill="rgb(213,199,42)" fg:x="2204" fg:w="13"/><text x="2.3235%" y="1103.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="2.0735%" y="1077" width="0.0122%" height="15" fill="rgb(235,201,11)" fg:x="2204" fg:w="13"/><text x="2.3235%" y="1087.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="2.0735%" y="1061" width="0.0122%" height="15" fill="rgb(207,46,11)" fg:x="2204" fg:w="13"/><text x="2.3235%" y="1071.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (34 samples, 0.03%)</title><rect x="2.1215%" y="1077" width="0.0320%" height="15" fill="rgb(241,35,35)" fg:x="2255" fg:w="34"/><text x="2.3715%" y="1087.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (66 samples, 0.06%)</title><rect x="2.0933%" y="1125" width="0.0621%" height="15" fill="rgb(243,32,47)" fg:x="2225" fg:w="66"/><text x="2.3433%" y="1135.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (53 samples, 0.05%)</title><rect x="2.1055%" y="1109" width="0.0499%" height="15" fill="rgb(247,202,23)" fg:x="2238" fg:w="53"/><text x="2.3555%" y="1119.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (47 samples, 0.04%)</title><rect x="2.1111%" y="1093" width="0.0442%" height="15" fill="rgb(219,102,11)" fg:x="2244" fg:w="47"/><text x="2.3611%" y="1103.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (34 samples, 0.03%)</title><rect x="2.1572%" y="1125" width="0.0320%" height="15" fill="rgb(243,110,44)" fg:x="2293" fg:w="34"/><text x="2.4072%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (105 samples, 0.10%)</title><rect x="2.1892%" y="1125" width="0.0988%" height="15" fill="rgb(222,74,54)" fg:x="2327" fg:w="105"/><text x="2.4392%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (53 samples, 0.05%)</title><rect x="2.2381%" y="1109" width="0.0499%" height="15" fill="rgb(216,99,12)" fg:x="2379" fg:w="53"/><text x="2.4881%" y="1119.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (45 samples, 0.04%)</title><rect x="2.2457%" y="1093" width="0.0423%" height="15" fill="rgb(226,22,26)" fg:x="2387" fg:w="45"/><text x="2.4957%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.02%)</title><rect x="2.2720%" y="1077" width="0.0160%" height="15" fill="rgb(217,163,10)" fg:x="2415" fg:w="17"/><text x="2.5220%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="2.3106%" y="1077" width="0.0160%" height="15" fill="rgb(213,25,53)" fg:x="2456" fg:w="17"/><text x="2.5606%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="2.3106%" y="1061" width="0.0160%" height="15" fill="rgb(252,105,26)" fg:x="2456" fg:w="17"/><text x="2.5606%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.02%)</title><rect x="2.3106%" y="1045" width="0.0160%" height="15" fill="rgb(220,39,43)" fg:x="2456" fg:w="17"/><text x="2.5606%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="2.3106%" y="1029" width="0.0160%" height="15" fill="rgb(229,68,48)" fg:x="2456" fg:w="17"/><text x="2.5606%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="2.3106%" y="1013" width="0.0160%" height="15" fill="rgb(252,8,32)" fg:x="2456" fg:w="17"/><text x="2.5606%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="2.3106%" y="997" width="0.0160%" height="15" fill="rgb(223,20,43)" fg:x="2456" fg:w="17"/><text x="2.5606%" y="1007.50"></text></g><g><title>__rg_alloc (17 samples, 0.02%)</title><rect x="2.3106%" y="981" width="0.0160%" height="15" fill="rgb(229,81,49)" fg:x="2456" fg:w="17"/><text x="2.5606%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.02%)</title><rect x="2.3106%" y="965" width="0.0160%" height="15" fill="rgb(236,28,36)" fg:x="2456" fg:w="17"/><text x="2.5606%" y="975.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (52 samples, 0.05%)</title><rect x="2.2880%" y="1125" width="0.0489%" height="15" fill="rgb(249,185,26)" fg:x="2432" fg:w="52"/><text x="2.5380%" y="1135.50"></text></g><g><title>value_trait::Builder::object (28 samples, 0.03%)</title><rect x="2.3106%" y="1109" width="0.0263%" height="15" fill="rgb(249,174,33)" fg:x="2456" fg:w="28"/><text x="2.5606%" y="1119.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (28 samples, 0.03%)</title><rect x="2.3106%" y="1093" width="0.0263%" height="15" fill="rgb(233,201,37)" fg:x="2456" fg:w="28"/><text x="2.5606%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (11 samples, 0.01%)</title><rect x="2.3266%" y="1077" width="0.0103%" height="15" fill="rgb(221,78,26)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="1087.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (11 samples, 0.01%)</title><rect x="2.3266%" y="1061" width="0.0103%" height="15" fill="rgb(250,127,30)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (11 samples, 0.01%)</title><rect x="2.3266%" y="1045" width="0.0103%" height="15" fill="rgb(230,49,44)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (11 samples, 0.01%)</title><rect x="2.3266%" y="1029" width="0.0103%" height="15" fill="rgb(229,67,23)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="1039.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (11 samples, 0.01%)</title><rect x="2.3266%" y="1013" width="0.0103%" height="15" fill="rgb(249,83,47)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="1023.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="2.3266%" y="997" width="0.0103%" height="15" fill="rgb(215,43,3)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="2.3266%" y="981" width="0.0103%" height="15" fill="rgb(238,154,13)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="2.3266%" y="965" width="0.0103%" height="15" fill="rgb(219,56,2)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="2.3266%" y="949" width="0.0103%" height="15" fill="rgb(233,0,4)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="2.3266%" y="933" width="0.0103%" height="15" fill="rgb(235,30,7)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="943.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="2.3266%" y="917" width="0.0103%" height="15" fill="rgb(250,79,13)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="927.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="2.3266%" y="901" width="0.0103%" height="15" fill="rgb(211,146,34)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="2.3266%" y="885" width="0.0103%" height="15" fill="rgb(228,22,38)" fg:x="2473" fg:w="11"/><text x="2.5766%" y="895.50"></text></g><g><title>___pthread_mutex_lock (51 samples, 0.05%)</title><rect x="2.3764%" y="1125" width="0.0480%" height="15" fill="rgb(235,168,5)" fg:x="2526" fg:w="51"/><text x="2.6264%" y="1135.50"></text></g><g><title>__clock_gettime_2 (53 samples, 0.05%)</title><rect x="2.4357%" y="1125" width="0.0499%" height="15" fill="rgb(221,155,16)" fg:x="2589" fg:w="53"/><text x="2.6857%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (39 samples, 0.04%)</title><rect x="2.4921%" y="1125" width="0.0367%" height="15" fill="rgb(215,215,53)" fg:x="2649" fg:w="39"/><text x="2.7421%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (39 samples, 0.04%)</title><rect x="2.5317%" y="1125" width="0.0367%" height="15" fill="rgb(223,4,10)" fg:x="2691" fg:w="39"/><text x="2.7817%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (49 samples, 0.05%)</title><rect x="2.5683%" y="1125" width="0.0461%" height="15" fill="rgb(234,103,6)" fg:x="2730" fg:w="49"/><text x="2.8183%" y="1135.50"></text></g><g><title>abi_stable::erased_types::iterator::next (23 samples, 0.02%)</title><rect x="2.6144%" y="1125" width="0.0216%" height="15" fill="rgb(227,97,0)" fg:x="2779" fg:w="23"/><text x="2.8644%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (32 samples, 0.03%)</title><rect x="2.7104%" y="1109" width="0.0301%" height="15" fill="rgb(234,150,53)" fg:x="2881" fg:w="32"/><text x="2.9604%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (32 samples, 0.03%)</title><rect x="2.7104%" y="1093" width="0.0301%" height="15" fill="rgb(228,201,54)" fg:x="2881" fg:w="32"/><text x="2.9604%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (32 samples, 0.03%)</title><rect x="2.7104%" y="1077" width="0.0301%" height="15" fill="rgb(222,22,37)" fg:x="2881" fg:w="32"/><text x="2.9604%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (118 samples, 0.11%)</title><rect x="2.6521%" y="1125" width="0.1110%" height="15" fill="rgb(237,53,32)" fg:x="2819" fg:w="118"/><text x="2.9021%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (98 samples, 0.09%)</title><rect x="2.7631%" y="1125" width="0.0922%" height="15" fill="rgb(233,25,53)" fg:x="2937" fg:w="98"/><text x="3.0131%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (16 samples, 0.02%)</title><rect x="2.8402%" y="1109" width="0.0151%" height="15" fill="rgb(210,40,34)" fg:x="3019" fg:w="16"/><text x="3.0902%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (16 samples, 0.02%)</title><rect x="2.8402%" y="1093" width="0.0151%" height="15" fill="rgb(241,220,44)" fg:x="3019" fg:w="16"/><text x="3.0902%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (16 samples, 0.02%)</title><rect x="2.8402%" y="1077" width="0.0151%" height="15" fill="rgb(235,28,35)" fg:x="3019" fg:w="16"/><text x="3.0902%" y="1087.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (16 samples, 0.02%)</title><rect x="2.8402%" y="1061" width="0.0151%" height="15" fill="rgb(210,56,17)" fg:x="3019" fg:w="16"/><text x="3.0902%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (16 samples, 0.02%)</title><rect x="2.8402%" y="1045" width="0.0151%" height="15" fill="rgb(224,130,29)" fg:x="3019" fg:w="16"/><text x="3.0902%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (16 samples, 0.02%)</title><rect x="2.8402%" y="1029" width="0.0151%" height="15" fill="rgb(235,212,8)" fg:x="3019" fg:w="16"/><text x="3.0902%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="2.8402%" y="1013" width="0.0151%" height="15" fill="rgb(223,33,50)" fg:x="3019" fg:w="16"/><text x="3.0902%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="2.8402%" y="997" width="0.0151%" height="15" fill="rgb(219,149,13)" fg:x="3019" fg:w="16"/><text x="3.0902%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="2.8402%" y="981" width="0.0151%" height="15" fill="rgb(250,156,29)" fg:x="3019" fg:w="16"/><text x="3.0902%" y="991.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="2.8402%" y="965" width="0.0151%" height="15" fill="rgb(216,193,19)" fg:x="3019" fg:w="16"/><text x="3.0902%" y="975.50"></text></g><g><title>__rg_alloc (16 samples, 0.02%)</title><rect x="2.8402%" y="949" width="0.0151%" height="15" fill="rgb(216,135,14)" fg:x="3019" fg:w="16"/><text x="3.0902%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.02%)</title><rect x="2.8402%" y="933" width="0.0151%" height="15" fill="rgb(241,47,5)" fg:x="3019" fg:w="16"/><text x="3.0902%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="2.8638%" y="1061" width="0.0103%" height="15" fill="rgb(233,42,35)" fg:x="3044" fg:w="11"/><text x="3.1138%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="2.8638%" y="1045" width="0.0103%" height="15" fill="rgb(231,13,6)" fg:x="3044" fg:w="11"/><text x="3.1138%" y="1055.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (41 samples, 0.04%)</title><rect x="2.8553%" y="1125" width="0.0386%" height="15" fill="rgb(207,181,40)" fg:x="3035" fg:w="41"/><text x="3.1053%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (32 samples, 0.03%)</title><rect x="2.8638%" y="1109" width="0.0301%" height="15" fill="rgb(254,173,49)" fg:x="3044" fg:w="32"/><text x="3.1138%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (32 samples, 0.03%)</title><rect x="2.8638%" y="1093" width="0.0301%" height="15" fill="rgb(221,1,38)" fg:x="3044" fg:w="32"/><text x="3.1138%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (32 samples, 0.03%)</title><rect x="2.8638%" y="1077" width="0.0301%" height="15" fill="rgb(206,124,46)" fg:x="3044" fg:w="32"/><text x="3.1138%" y="1087.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (11 samples, 0.01%)</title><rect x="2.8835%" y="1061" width="0.0103%" height="15" fill="rgb(249,21,11)" fg:x="3065" fg:w="11"/><text x="3.1335%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.01%)</title><rect x="2.8835%" y="1045" width="0.0103%" height="15" fill="rgb(222,201,40)" fg:x="3065" fg:w="11"/><text x="3.1335%" y="1055.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (11 samples, 0.01%)</title><rect x="2.8835%" y="1029" width="0.0103%" height="15" fill="rgb(235,61,29)" fg:x="3065" fg:w="11"/><text x="3.1335%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (11 samples, 0.01%)</title><rect x="2.8835%" y="1013" width="0.0103%" height="15" fill="rgb(219,207,3)" fg:x="3065" fg:w="11"/><text x="3.1335%" y="1023.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (11 samples, 0.01%)</title><rect x="2.8939%" y="1125" width="0.0103%" height="15" fill="rgb(222,56,46)" fg:x="3076" fg:w="11"/><text x="3.1439%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (137 samples, 0.13%)</title><rect x="2.9061%" y="1125" width="0.1289%" height="15" fill="rgb(239,76,54)" fg:x="3089" fg:w="137"/><text x="3.1561%" y="1135.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (116 samples, 0.11%)</title><rect x="2.9258%" y="1109" width="0.1091%" height="15" fill="rgb(231,124,27)" fg:x="3110" fg:w="116"/><text x="3.1758%" y="1119.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (116 samples, 0.11%)</title><rect x="2.9258%" y="1093" width="0.1091%" height="15" fill="rgb(249,195,6)" fg:x="3110" fg:w="116"/><text x="3.1758%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="3.0867%" y="917" width="0.0122%" height="15" fill="rgb(237,174,47)" fg:x="3281" fg:w="13"/><text x="3.3367%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="3.0867%" y="901" width="0.0122%" height="15" fill="rgb(206,201,31)" fg:x="3281" fg:w="13"/><text x="3.3367%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="3.0867%" y="885" width="0.0122%" height="15" fill="rgb(231,57,52)" fg:x="3281" fg:w="13"/><text x="3.3367%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="3.0867%" y="869" width="0.0122%" height="15" fill="rgb(248,177,22)" fg:x="3281" fg:w="13"/><text x="3.3367%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="3.0867%" y="853" width="0.0122%" height="15" fill="rgb(215,211,37)" fg:x="3281" fg:w="13"/><text x="3.3367%" y="863.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="3.0867%" y="837" width="0.0122%" height="15" fill="rgb(241,128,51)" fg:x="3281" fg:w="13"/><text x="3.3367%" y="847.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="3.0867%" y="821" width="0.0122%" height="15" fill="rgb(227,165,31)" fg:x="3281" fg:w="13"/><text x="3.3367%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="3.0867%" y="805" width="0.0122%" height="15" fill="rgb(228,167,24)" fg:x="3281" fg:w="13"/><text x="3.3367%" y="815.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="3.0867%" y="1029" width="0.0179%" height="15" fill="rgb(228,143,12)" fg:x="3281" fg:w="19"/><text x="3.3367%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (19 samples, 0.02%)</title><rect x="3.0867%" y="1013" width="0.0179%" height="15" fill="rgb(249,149,8)" fg:x="3281" fg:w="19"/><text x="3.3367%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (19 samples, 0.02%)</title><rect x="3.0867%" y="997" width="0.0179%" height="15" fill="rgb(243,35,44)" fg:x="3281" fg:w="19"/><text x="3.3367%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19 samples, 0.02%)</title><rect x="3.0867%" y="981" width="0.0179%" height="15" fill="rgb(246,89,9)" fg:x="3281" fg:w="19"/><text x="3.3367%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="3.0867%" y="965" width="0.0179%" height="15" fill="rgb(233,213,13)" fg:x="3281" fg:w="19"/><text x="3.3367%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="3.0867%" y="949" width="0.0179%" height="15" fill="rgb(233,141,41)" fg:x="3281" fg:w="19"/><text x="3.3367%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="3.0867%" y="933" width="0.0179%" height="15" fill="rgb(239,167,4)" fg:x="3281" fg:w="19"/><text x="3.3367%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (84 samples, 0.08%)</title><rect x="3.0350%" y="1125" width="0.0790%" height="15" fill="rgb(209,217,16)" fg:x="3226" fg:w="84"/><text x="3.2850%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (29 samples, 0.03%)</title><rect x="3.0867%" y="1109" width="0.0273%" height="15" fill="rgb(219,88,35)" fg:x="3281" fg:w="29"/><text x="3.3367%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (29 samples, 0.03%)</title><rect x="3.0867%" y="1093" width="0.0273%" height="15" fill="rgb(220,193,23)" fg:x="3281" fg:w="29"/><text x="3.3367%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29 samples, 0.03%)</title><rect x="3.0867%" y="1077" width="0.0273%" height="15" fill="rgb(230,90,52)" fg:x="3281" fg:w="29"/><text x="3.3367%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (29 samples, 0.03%)</title><rect x="3.0867%" y="1061" width="0.0273%" height="15" fill="rgb(252,106,19)" fg:x="3281" fg:w="29"/><text x="3.3367%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29 samples, 0.03%)</title><rect x="3.0867%" y="1045" width="0.0273%" height="15" fill="rgb(206,74,20)" fg:x="3281" fg:w="29"/><text x="3.3367%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 0.10%)</title><rect x="3.1582%" y="1061" width="0.1016%" height="15" fill="rgb(230,138,44)" fg:x="3357" fg:w="108"/><text x="3.4082%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (108 samples, 0.10%)</title><rect x="3.1582%" y="1045" width="0.1016%" height="15" fill="rgb(235,182,43)" fg:x="3357" fg:w="108"/><text x="3.4082%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (108 samples, 0.10%)</title><rect x="3.1582%" y="1029" width="0.1016%" height="15" fill="rgb(242,16,51)" fg:x="3357" fg:w="108"/><text x="3.4082%" y="1039.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (108 samples, 0.10%)</title><rect x="3.1582%" y="1013" width="0.1016%" height="15" fill="rgb(248,9,4)" fg:x="3357" fg:w="108"/><text x="3.4082%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (119 samples, 0.11%)</title><rect x="3.1582%" y="1077" width="0.1120%" height="15" fill="rgb(210,31,22)" fg:x="3357" fg:w="119"/><text x="3.4082%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="3.2598%" y="1061" width="0.0103%" height="15" fill="rgb(239,54,39)" fg:x="3465" fg:w="11"/><text x="3.5098%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="3.2598%" y="1045" width="0.0103%" height="15" fill="rgb(230,99,41)" fg:x="3465" fg:w="11"/><text x="3.5098%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="3.2598%" y="1029" width="0.0103%" height="15" fill="rgb(253,106,12)" fg:x="3465" fg:w="11"/><text x="3.5098%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="3.2598%" y="1013" width="0.0103%" height="15" fill="rgb(213,46,41)" fg:x="3465" fg:w="11"/><text x="3.5098%" y="1023.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="3.2598%" y="997" width="0.0103%" height="15" fill="rgb(215,133,35)" fg:x="3465" fg:w="11"/><text x="3.5098%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="3.2598%" y="981" width="0.0103%" height="15" fill="rgb(213,28,5)" fg:x="3465" fg:w="11"/><text x="3.5098%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="3.2702%" y="1061" width="0.0386%" height="15" fill="rgb(215,77,49)" fg:x="3476" fg:w="41"/><text x="3.5202%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (41 samples, 0.04%)</title><rect x="3.2702%" y="1045" width="0.0386%" height="15" fill="rgb(248,100,22)" fg:x="3476" fg:w="41"/><text x="3.5202%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (41 samples, 0.04%)</title><rect x="3.2702%" y="1029" width="0.0386%" height="15" fill="rgb(208,67,9)" fg:x="3476" fg:w="41"/><text x="3.5202%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (41 samples, 0.04%)</title><rect x="3.2702%" y="1013" width="0.0386%" height="15" fill="rgb(219,133,21)" fg:x="3476" fg:w="41"/><text x="3.5202%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (41 samples, 0.04%)</title><rect x="3.2702%" y="997" width="0.0386%" height="15" fill="rgb(246,46,29)" fg:x="3476" fg:w="41"/><text x="3.5202%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (48 samples, 0.05%)</title><rect x="3.2702%" y="1077" width="0.0452%" height="15" fill="rgb(246,185,52)" fg:x="3476" fg:w="48"/><text x="3.5202%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (238 samples, 0.22%)</title><rect x="3.1140%" y="1125" width="0.2239%" height="15" fill="rgb(252,136,11)" fg:x="3310" fg:w="238"/><text x="3.3640%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (191 samples, 0.18%)</title><rect x="3.1582%" y="1109" width="0.1797%" height="15" fill="rgb(219,138,53)" fg:x="3357" fg:w="191"/><text x="3.4082%" y="1119.50"></text></g><g><title>core::mem::drop (191 samples, 0.18%)</title><rect x="3.1582%" y="1093" width="0.1797%" height="15" fill="rgb(211,51,23)" fg:x="3357" fg:w="191"/><text x="3.4082%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="3.3153%" y="1077" width="0.0226%" height="15" fill="rgb(247,221,28)" fg:x="3524" fg:w="24"/><text x="3.5653%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="3.3153%" y="1061" width="0.0226%" height="15" fill="rgb(251,222,45)" fg:x="3524" fg:w="24"/><text x="3.5653%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (24 samples, 0.02%)</title><rect x="3.3153%" y="1045" width="0.0226%" height="15" fill="rgb(217,162,53)" fg:x="3524" fg:w="24"/><text x="3.5653%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (24 samples, 0.02%)</title><rect x="3.3153%" y="1029" width="0.0226%" height="15" fill="rgb(229,93,14)" fg:x="3524" fg:w="24"/><text x="3.5653%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (24 samples, 0.02%)</title><rect x="3.3153%" y="1013" width="0.0226%" height="15" fill="rgb(209,67,49)" fg:x="3524" fg:w="24"/><text x="3.5653%" y="1023.50"></text></g><g><title>async_executor::Ticker::sleep (33 samples, 0.03%)</title><rect x="3.3501%" y="1125" width="0.0310%" height="15" fill="rgb(213,87,29)" fg:x="3561" fg:w="33"/><text x="3.6001%" y="1135.50"></text></g><g><title>async_executor::steal (80 samples, 0.08%)</title><rect x="3.3897%" y="1125" width="0.0753%" height="15" fill="rgb(205,151,52)" fg:x="3603" fg:w="80"/><text x="3.6397%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (43 samples, 0.04%)</title><rect x="3.4649%" y="1125" width="0.0405%" height="15" fill="rgb(253,215,39)" fg:x="3683" fg:w="43"/><text x="3.7149%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (29 samples, 0.03%)</title><rect x="3.5054%" y="1125" width="0.0273%" height="15" fill="rgb(221,220,41)" fg:x="3726" fg:w="29"/><text x="3.7554%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (151 samples, 0.14%)</title><rect x="3.5468%" y="1125" width="0.1421%" height="15" fill="rgb(218,133,21)" fg:x="3770" fg:w="151"/><text x="3.7968%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (12 samples, 0.01%)</title><rect x="3.6775%" y="1109" width="0.0113%" height="15" fill="rgb(221,193,43)" fg:x="3909" fg:w="12"/><text x="3.9275%" y="1119.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="3.6775%" y="1093" width="0.0113%" height="15" fill="rgb(240,128,52)" fg:x="3909" fg:w="12"/><text x="3.9275%" y="1103.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (99 samples, 0.09%)</title><rect x="3.6888%" y="1125" width="0.0931%" height="15" fill="rgb(253,114,12)" fg:x="3921" fg:w="99"/><text x="3.9388%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (17 samples, 0.02%)</title><rect x="3.7820%" y="1125" width="0.0160%" height="15" fill="rgb(215,223,47)" fg:x="4020" fg:w="17"/><text x="4.0320%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (62 samples, 0.06%)</title><rect x="3.8036%" y="1125" width="0.0583%" height="15" fill="rgb(248,225,23)" fg:x="4043" fg:w="62"/><text x="4.0536%" y="1135.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="3.8111%" y="1109" width="0.0508%" height="15" fill="rgb(250,108,0)" fg:x="4051" fg:w="54"/><text x="4.0611%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (16 samples, 0.02%)</title><rect x="3.8666%" y="1125" width="0.0151%" height="15" fill="rgb(228,208,7)" fg:x="4110" fg:w="16"/><text x="4.1166%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (16 samples, 0.02%)</title><rect x="3.8666%" y="1109" width="0.0151%" height="15" fill="rgb(244,45,10)" fg:x="4110" fg:w="16"/><text x="4.1166%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="3.8817%" y="1125" width="0.0179%" height="15" fill="rgb(207,125,25)" fg:x="4126" fg:w="19"/><text x="4.1317%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="3.8996%" y="1125" width="0.0198%" height="15" fill="rgb(210,195,18)" fg:x="4145" fg:w="21"/><text x="4.1496%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (51 samples, 0.05%)</title><rect x="3.9193%" y="1125" width="0.0480%" height="15" fill="rgb(249,80,12)" fg:x="4166" fg:w="51"/><text x="4.1693%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (39 samples, 0.04%)</title><rect x="3.9673%" y="1125" width="0.0367%" height="15" fill="rgb(221,65,9)" fg:x="4217" fg:w="39"/><text x="4.2173%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (15 samples, 0.01%)</title><rect x="4.0040%" y="1125" width="0.0141%" height="15" fill="rgb(235,49,36)" fg:x="4256" fg:w="15"/><text x="4.2540%" y="1135.50"></text></g><g><title>event_listener::Event::listen (13 samples, 0.01%)</title><rect x="4.0266%" y="1125" width="0.0122%" height="15" fill="rgb(225,32,20)" fg:x="4280" fg:w="13"/><text x="4.2766%" y="1135.50"></text></g><g><title>event_listener::Event::notify (151 samples, 0.14%)</title><rect x="4.0388%" y="1125" width="0.1421%" height="15" fill="rgb(215,141,46)" fg:x="4293" fg:w="151"/><text x="4.2888%" y="1135.50"></text></g><g><title>event_listener::full_fence (64 samples, 0.06%)</title><rect x="4.1206%" y="1109" width="0.0602%" height="15" fill="rgb(250,160,47)" fg:x="4380" fg:w="64"/><text x="4.3706%" y="1119.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (35 samples, 0.03%)</title><rect x="4.1912%" y="1125" width="0.0329%" height="15" fill="rgb(216,222,40)" fg:x="4455" fg:w="35"/><text x="4.4412%" y="1135.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (103 samples, 0.10%)</title><rect x="4.2241%" y="1125" width="0.0969%" height="15" fill="rgb(234,217,39)" fg:x="4490" fg:w="103"/><text x="4.4741%" y="1135.50"></text></g><g><title>parking::Inner::park (32 samples, 0.03%)</title><rect x="4.3210%" y="1125" width="0.0301%" height="15" fill="rgb(207,178,40)" fg:x="4593" fg:w="32"/><text x="4.5710%" y="1135.50"></text></g><g><title>parking::Unparker::unpark (26 samples, 0.02%)</title><rect x="4.3511%" y="1125" width="0.0245%" height="15" fill="rgb(221,136,13)" fg:x="4625" fg:w="26"/><text x="4.6011%" y="1135.50"></text></g><g><title>rust_alloc (79 samples, 0.07%)</title><rect x="4.3794%" y="1125" width="0.0743%" height="15" fill="rgb(249,199,10)" fg:x="4655" fg:w="79"/><text x="4.6294%" y="1135.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="4.4537%" y="1125" width="0.0141%" height="15" fill="rgb(249,222,13)" fg:x="4734" fg:w="15"/><text x="4.7037%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (50 samples, 0.05%)</title><rect x="4.4838%" y="1125" width="0.0470%" height="15" fill="rgb(244,185,38)" fg:x="4766" fg:w="50"/><text x="4.7338%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (55 samples, 0.05%)</title><rect x="4.5365%" y="1125" width="0.0517%" height="15" fill="rgb(236,202,9)" fg:x="4822" fg:w="55"/><text x="4.7865%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.03%)</title><rect x="4.5882%" y="1125" width="0.0254%" height="15" fill="rgb(250,229,37)" fg:x="4877" fg:w="27"/><text x="4.8382%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.01%)</title><rect x="4.6004%" y="1109" width="0.0132%" height="15" fill="rgb(206,174,23)" fg:x="4890" fg:w="14"/><text x="4.8504%" y="1119.50"></text></g><g><title>tremor_common::time::nanotime (80 samples, 0.08%)</title><rect x="4.6136%" y="1125" width="0.0753%" height="15" fill="rgb(211,33,43)" fg:x="4904" fg:w="80"/><text x="4.8636%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (80 samples, 0.08%)</title><rect x="4.6136%" y="1109" width="0.0753%" height="15" fill="rgb(245,58,50)" fg:x="4904" fg:w="80"/><text x="4.8636%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (80 samples, 0.08%)</title><rect x="4.6136%" y="1093" width="0.0753%" height="15" fill="rgb(244,68,36)" fg:x="4904" fg:w="80"/><text x="4.8636%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (80 samples, 0.08%)</title><rect x="4.6136%" y="1077" width="0.0753%" height="15" fill="rgb(232,229,15)" fg:x="4904" fg:w="80"/><text x="4.8636%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (47 samples, 0.04%)</title><rect x="4.6908%" y="1125" width="0.0442%" height="15" fill="rgb(254,30,23)" fg:x="4986" fg:w="47"/><text x="4.9408%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (20 samples, 0.02%)</title><rect x="4.7162%" y="1109" width="0.0188%" height="15" fill="rgb(235,160,14)" fg:x="5013" fg:w="20"/><text x="4.9662%" y="1119.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (20 samples, 0.02%)</title><rect x="4.7162%" y="1093" width="0.0188%" height="15" fill="rgb(212,155,44)" fg:x="5013" fg:w="20"/><text x="4.9662%" y="1103.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="4.7162%" y="1077" width="0.0188%" height="15" fill="rgb(226,2,50)" fg:x="5013" fg:w="20"/><text x="4.9662%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="4.7162%" y="1061" width="0.0188%" height="15" fill="rgb(234,177,6)" fg:x="5013" fg:w="20"/><text x="4.9662%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="4.7162%" y="1045" width="0.0188%" height="15" fill="rgb(217,24,9)" fg:x="5013" fg:w="20"/><text x="4.9662%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="4.7237%" y="1029" width="0.0113%" height="15" fill="rgb(220,13,46)" fg:x="5021" fg:w="12"/><text x="4.9737%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="4.7237%" y="1013" width="0.0113%" height="15" fill="rgb(239,221,27)" fg:x="5021" fg:w="12"/><text x="4.9737%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="4.7237%" y="997" width="0.0113%" height="15" fill="rgb(222,198,25)" fg:x="5021" fg:w="12"/><text x="4.9737%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="4.7237%" y="981" width="0.0113%" height="15" fill="rgb(211,99,13)" fg:x="5021" fg:w="12"/><text x="4.9737%" y="991.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="4.7237%" y="965" width="0.0113%" height="15" fill="rgb(232,111,31)" fg:x="5021" fg:w="12"/><text x="4.9737%" y="975.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="4.7237%" y="949" width="0.0113%" height="15" fill="rgb(245,82,37)" fg:x="5021" fg:w="12"/><text x="4.9737%" y="959.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="4.7895%" y="1109" width="0.0132%" height="15" fill="rgb(227,149,46)" fg:x="5091" fg:w="14"/><text x="5.0395%" y="1119.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="4.8084%" y="1077" width="0.0113%" height="15" fill="rgb(218,36,50)" fg:x="5111" fg:w="12"/><text x="5.0584%" y="1087.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="4.8084%" y="1061" width="0.0113%" height="15" fill="rgb(226,80,48)" fg:x="5111" fg:w="12"/><text x="5.0584%" y="1071.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (12 samples, 0.01%)</title><rect x="4.8084%" y="1045" width="0.0113%" height="15" fill="rgb(238,224,15)" fg:x="5111" fg:w="12"/><text x="5.0584%" y="1055.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (12 samples, 0.01%)</title><rect x="4.8084%" y="1029" width="0.0113%" height="15" fill="rgb(241,136,10)" fg:x="5111" fg:w="12"/><text x="5.0584%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="4.8027%" y="1109" width="0.0310%" height="15" fill="rgb(208,32,45)" fg:x="5105" fg:w="33"/><text x="5.0527%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (33 samples, 0.03%)</title><rect x="4.8027%" y="1093" width="0.0310%" height="15" fill="rgb(207,135,9)" fg:x="5105" fg:w="33"/><text x="5.0527%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (19 samples, 0.02%)</title><rect x="4.8545%" y="1093" width="0.0179%" height="15" fill="rgb(206,86,44)" fg:x="5160" fg:w="19"/><text x="5.1045%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (161 samples, 0.15%)</title><rect x="4.7350%" y="1125" width="0.1515%" height="15" fill="rgb(245,177,15)" fg:x="5033" fg:w="161"/><text x="4.9850%" y="1135.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (35 samples, 0.03%)</title><rect x="4.8535%" y="1109" width="0.0329%" height="15" fill="rgb(206,64,50)" fg:x="5159" fg:w="35"/><text x="5.1035%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (15 samples, 0.01%)</title><rect x="4.8723%" y="1093" width="0.0141%" height="15" fill="rgb(234,36,40)" fg:x="5179" fg:w="15"/><text x="5.1223%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="4.8723%" y="1077" width="0.0141%" height="15" fill="rgb(213,64,8)" fg:x="5179" fg:w="15"/><text x="5.1223%" y="1087.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="4.8723%" y="1061" width="0.0141%" height="15" fill="rgb(210,75,36)" fg:x="5179" fg:w="15"/><text x="5.1223%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (13 samples, 0.01%)</title><rect x="4.8864%" y="1125" width="0.0122%" height="15" fill="rgb(229,88,21)" fg:x="5194" fg:w="13"/><text x="5.1364%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (20 samples, 0.02%)</title><rect x="4.8996%" y="1125" width="0.0188%" height="15" fill="rgb(252,204,47)" fg:x="5208" fg:w="20"/><text x="5.1496%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="4.9937%" y="981" width="0.0113%" height="15" fill="rgb(208,77,27)" fg:x="5308" fg:w="12"/><text x="5.2437%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="4.9937%" y="965" width="0.0113%" height="15" fill="rgb(221,76,26)" fg:x="5308" fg:w="12"/><text x="5.2437%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="4.9937%" y="949" width="0.0113%" height="15" fill="rgb(225,139,18)" fg:x="5308" fg:w="12"/><text x="5.2437%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="4.9937%" y="933" width="0.0113%" height="15" fill="rgb(230,137,11)" fg:x="5308" fg:w="12"/><text x="5.2437%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="4.9937%" y="917" width="0.0113%" height="15" fill="rgb(212,28,1)" fg:x="5308" fg:w="12"/><text x="5.2437%" y="927.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="4.9937%" y="901" width="0.0113%" height="15" fill="rgb(248,164,17)" fg:x="5308" fg:w="12"/><text x="5.2437%" y="911.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="4.9937%" y="885" width="0.0113%" height="15" fill="rgb(222,171,42)" fg:x="5308" fg:w="12"/><text x="5.2437%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="4.9937%" y="869" width="0.0113%" height="15" fill="rgb(243,84,45)" fg:x="5308" fg:w="12"/><text x="5.2437%" y="879.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="4.9871%" y="1109" width="0.0310%" height="15" fill="rgb(252,49,23)" fg:x="5301" fg:w="33"/><text x="5.2371%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="4.9937%" y="1093" width="0.0245%" height="15" fill="rgb(215,19,7)" fg:x="5308" fg:w="26"/><text x="5.2437%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (26 samples, 0.02%)</title><rect x="4.9937%" y="1077" width="0.0245%" height="15" fill="rgb(238,81,41)" fg:x="5308" fg:w="26"/><text x="5.2437%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (26 samples, 0.02%)</title><rect x="4.9937%" y="1061" width="0.0245%" height="15" fill="rgb(210,199,37)" fg:x="5308" fg:w="26"/><text x="5.2437%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (26 samples, 0.02%)</title><rect x="4.9937%" y="1045" width="0.0245%" height="15" fill="rgb(244,192,49)" fg:x="5308" fg:w="26"/><text x="5.2437%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.02%)</title><rect x="4.9937%" y="1029" width="0.0245%" height="15" fill="rgb(226,211,11)" fg:x="5308" fg:w="26"/><text x="5.2437%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.02%)</title><rect x="4.9937%" y="1013" width="0.0245%" height="15" fill="rgb(236,162,54)" fg:x="5308" fg:w="26"/><text x="5.2437%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.02%)</title><rect x="4.9937%" y="997" width="0.0245%" height="15" fill="rgb(220,229,9)" fg:x="5308" fg:w="26"/><text x="5.2437%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (14 samples, 0.01%)</title><rect x="5.0050%" y="981" width="0.0132%" height="15" fill="rgb(250,87,22)" fg:x="5320" fg:w="14"/><text x="5.2550%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="5.0050%" y="965" width="0.0132%" height="15" fill="rgb(239,43,17)" fg:x="5320" fg:w="14"/><text x="5.2550%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (14 samples, 0.01%)</title><rect x="5.0407%" y="1093" width="0.0132%" height="15" fill="rgb(231,177,25)" fg:x="5358" fg:w="14"/><text x="5.2907%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="5.0407%" y="1077" width="0.0132%" height="15" fill="rgb(219,179,1)" fg:x="5358" fg:w="14"/><text x="5.2907%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="5.0407%" y="1061" width="0.0132%" height="15" fill="rgb(238,219,53)" fg:x="5358" fg:w="14"/><text x="5.2907%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (159 samples, 0.15%)</title><rect x="4.9184%" y="1125" width="0.1496%" height="15" fill="rgb(232,167,36)" fg:x="5228" fg:w="159"/><text x="5.1684%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (29 samples, 0.03%)</title><rect x="5.0407%" y="1109" width="0.0273%" height="15" fill="rgb(244,19,51)" fg:x="5358" fg:w="29"/><text x="5.2907%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (15 samples, 0.01%)</title><rect x="5.0539%" y="1093" width="0.0141%" height="15" fill="rgb(224,6,22)" fg:x="5372" fg:w="15"/><text x="5.3039%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (15 samples, 0.01%)</title><rect x="5.0539%" y="1077" width="0.0141%" height="15" fill="rgb(224,145,5)" fg:x="5372" fg:w="15"/><text x="5.3039%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (32 samples, 0.03%)</title><rect x="5.0680%" y="1125" width="0.0301%" height="15" fill="rgb(234,130,49)" fg:x="5387" fg:w="32"/><text x="5.3180%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.02%)</title><rect x="5.1875%" y="1077" width="0.0151%" height="15" fill="rgb(254,6,2)" fg:x="5514" fg:w="16"/><text x="5.4375%" y="1087.50"></text></g><g><title>core::ptr::write (16 samples, 0.02%)</title><rect x="5.1875%" y="1061" width="0.0151%" height="15" fill="rgb(208,96,46)" fg:x="5514" fg:w="16"/><text x="5.4375%" y="1071.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (119 samples, 0.11%)</title><rect x="5.1066%" y="1125" width="0.1120%" height="15" fill="rgb(239,3,39)" fg:x="5428" fg:w="119"/><text x="5.3566%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.05%)</title><rect x="5.1706%" y="1109" width="0.0480%" height="15" fill="rgb(233,210,1)" fg:x="5496" fg:w="51"/><text x="5.4206%" y="1119.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (51 samples, 0.05%)</title><rect x="5.1706%" y="1093" width="0.0480%" height="15" fill="rgb(244,137,37)" fg:x="5496" fg:w="51"/><text x="5.4206%" y="1103.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (11 samples, 0.01%)</title><rect x="5.2082%" y="1077" width="0.0103%" height="15" fill="rgb(240,136,2)" fg:x="5536" fg:w="11"/><text x="5.4582%" y="1087.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (11 samples, 0.01%)</title><rect x="5.2082%" y="1061" width="0.0103%" height="15" fill="rgb(239,18,37)" fg:x="5536" fg:w="11"/><text x="5.4582%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="5.2082%" y="1045" width="0.0103%" height="15" fill="rgb(218,185,22)" fg:x="5536" fg:w="11"/><text x="5.4582%" y="1055.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="5.2082%" y="1029" width="0.0103%" height="15" fill="rgb(225,218,4)" fg:x="5536" fg:w="11"/><text x="5.4582%" y="1039.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (17 samples, 0.02%)</title><rect x="5.2336%" y="1125" width="0.0160%" height="15" fill="rgb(230,182,32)" fg:x="5563" fg:w="17"/><text x="5.4836%" y="1135.50"></text></g><g><title>[anon] (4,981 samples, 4.69%)</title><rect x="0.5645%" y="1141" width="4.6861%" height="15" fill="rgb(242,56,43)" fg:x="600" fg:w="4981"/><text x="0.8145%" y="1151.50">[anon]</text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="5.2505%" y="1141" width="0.0179%" height="15" fill="rgb(233,99,24)" fg:x="5581" fg:w="19"/><text x="5.5005%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="5.2684%" y="1125" width="0.0292%" height="15" fill="rgb(234,209,42)" fg:x="5600" fg:w="31"/><text x="5.5184%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.01%)</title><rect x="5.2872%" y="1109" width="0.0103%" height="15" fill="rgb(227,7,12)" fg:x="5620" fg:w="11"/><text x="5.5372%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="5.2872%" y="1093" width="0.0103%" height="15" fill="rgb(245,203,43)" fg:x="5620" fg:w="11"/><text x="5.5372%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="5.3032%" y="1125" width="0.0320%" height="15" fill="rgb(238,205,33)" fg:x="5637" fg:w="34"/><text x="5.5532%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="5.3399%" y="1125" width="0.0179%" height="15" fill="rgb(231,56,7)" fg:x="5676" fg:w="19"/><text x="5.5899%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.07%)</title><rect x="5.3578%" y="1125" width="0.0696%" height="15" fill="rgb(244,186,29)" fg:x="5695" fg:w="74"/><text x="5.6078%" y="1135.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (12 samples, 0.01%)</title><rect x="5.4462%" y="1109" width="0.0113%" height="15" fill="rgb(234,111,31)" fg:x="5789" fg:w="12"/><text x="5.6962%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (12 samples, 0.01%)</title><rect x="5.4462%" y="1093" width="0.0113%" height="15" fill="rgb(241,149,10)" fg:x="5789" fg:w="12"/><text x="5.6962%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.01%)</title><rect x="5.4462%" y="1077" width="0.0113%" height="15" fill="rgb(249,206,44)" fg:x="5789" fg:w="12"/><text x="5.6962%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="5.4462%" y="1061" width="0.0113%" height="15" fill="rgb(251,153,30)" fg:x="5789" fg:w="12"/><text x="5.6962%" y="1071.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (12 samples, 0.01%)</title><rect x="5.4462%" y="1045" width="0.0113%" height="15" fill="rgb(239,152,38)" fg:x="5789" fg:w="12"/><text x="5.6962%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.01%)</title><rect x="5.4462%" y="1029" width="0.0113%" height="15" fill="rgb(249,139,47)" fg:x="5789" fg:w="12"/><text x="5.6962%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="5.4462%" y="1013" width="0.0113%" height="15" fill="rgb(244,64,35)" fg:x="5789" fg:w="12"/><text x="5.6962%" y="1023.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (47 samples, 0.04%)</title><rect x="5.4274%" y="1125" width="0.0442%" height="15" fill="rgb(216,46,15)" fg:x="5769" fg:w="47"/><text x="5.6774%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (15 samples, 0.01%)</title><rect x="5.4575%" y="1109" width="0.0141%" height="15" fill="rgb(250,74,19)" fg:x="5801" fg:w="15"/><text x="5.7075%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (27 samples, 0.03%)</title><rect x="5.4716%" y="1125" width="0.0254%" height="15" fill="rgb(249,42,33)" fg:x="5816" fg:w="27"/><text x="5.7216%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.01%)</title><rect x="5.4848%" y="1109" width="0.0122%" height="15" fill="rgb(242,149,17)" fg:x="5830" fg:w="13"/><text x="5.7348%" y="1119.50"></text></g><g><title>__clock_gettime_2 (11 samples, 0.01%)</title><rect x="5.4980%" y="1125" width="0.0103%" height="15" fill="rgb(244,29,21)" fg:x="5844" fg:w="11"/><text x="5.7480%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (102 samples, 0.10%)</title><rect x="5.5196%" y="1125" width="0.0960%" height="15" fill="rgb(220,130,37)" fg:x="5867" fg:w="102"/><text x="5.7696%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (102 samples, 0.10%)</title><rect x="5.5196%" y="1109" width="0.0960%" height="15" fill="rgb(211,67,2)" fg:x="5867" fg:w="102"/><text x="5.7696%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (102 samples, 0.10%)</title><rect x="5.5196%" y="1093" width="0.0960%" height="15" fill="rgb(235,68,52)" fg:x="5867" fg:w="102"/><text x="5.7696%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (102 samples, 0.10%)</title><rect x="5.5196%" y="1077" width="0.0960%" height="15" fill="rgb(246,142,3)" fg:x="5867" fg:w="102"/><text x="5.7696%" y="1087.50"></text></g><g><title>abi_stable::erased_types::iterator::next (40 samples, 0.04%)</title><rect x="5.6156%" y="1125" width="0.0376%" height="15" fill="rgb(241,25,7)" fg:x="5969" fg:w="40"/><text x="5.8656%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (55 samples, 0.05%)</title><rect x="5.6833%" y="1109" width="0.0517%" height="15" fill="rgb(242,119,39)" fg:x="6041" fg:w="55"/><text x="5.9333%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (55 samples, 0.05%)</title><rect x="5.6833%" y="1093" width="0.0517%" height="15" fill="rgb(241,98,45)" fg:x="6041" fg:w="55"/><text x="5.9333%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (55 samples, 0.05%)</title><rect x="5.6833%" y="1077" width="0.0517%" height="15" fill="rgb(254,28,30)" fg:x="6041" fg:w="55"/><text x="5.9333%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (46 samples, 0.04%)</title><rect x="5.7350%" y="1109" width="0.0433%" height="15" fill="rgb(241,142,54)" fg:x="6096" fg:w="46"/><text x="5.9850%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (46 samples, 0.04%)</title><rect x="5.7350%" y="1093" width="0.0433%" height="15" fill="rgb(222,85,15)" fg:x="6096" fg:w="46"/><text x="5.9850%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (46 samples, 0.04%)</title><rect x="5.7350%" y="1077" width="0.0433%" height="15" fill="rgb(210,85,47)" fg:x="6096" fg:w="46"/><text x="5.9850%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (46 samples, 0.04%)</title><rect x="5.7350%" y="1061" width="0.0433%" height="15" fill="rgb(224,206,25)" fg:x="6096" fg:w="46"/><text x="5.9850%" y="1071.50"></text></g><g><title>__rg_dealloc (46 samples, 0.04%)</title><rect x="5.7350%" y="1045" width="0.0433%" height="15" fill="rgb(243,201,19)" fg:x="6096" fg:w="46"/><text x="5.9850%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (46 samples, 0.04%)</title><rect x="5.7350%" y="1029" width="0.0433%" height="15" fill="rgb(236,59,4)" fg:x="6096" fg:w="46"/><text x="5.9850%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (128 samples, 0.12%)</title><rect x="5.6701%" y="1125" width="0.1204%" height="15" fill="rgb(254,179,45)" fg:x="6027" fg:w="128"/><text x="5.9201%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="5.7783%" y="1109" width="0.0122%" height="15" fill="rgb(226,14,10)" fg:x="6142" fg:w="13"/><text x="6.0283%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="5.7783%" y="1093" width="0.0122%" height="15" fill="rgb(244,27,41)" fg:x="6142" fg:w="13"/><text x="6.0283%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="5.7783%" y="1077" width="0.0122%" height="15" fill="rgb(235,35,32)" fg:x="6142" fg:w="13"/><text x="6.0283%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="5.7783%" y="1061" width="0.0122%" height="15" fill="rgb(218,68,31)" fg:x="6142" fg:w="13"/><text x="6.0283%" y="1071.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="5.7783%" y="1045" width="0.0122%" height="15" fill="rgb(207,120,37)" fg:x="6142" fg:w="13"/><text x="6.0283%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="5.7783%" y="1029" width="0.0122%" height="15" fill="rgb(227,98,0)" fg:x="6142" fg:w="13"/><text x="6.0283%" y="1039.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (22 samples, 0.02%)</title><rect x="5.7905%" y="1125" width="0.0207%" height="15" fill="rgb(207,7,3)" fg:x="6155" fg:w="22"/><text x="6.0405%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (19 samples, 0.02%)</title><rect x="5.8197%" y="1125" width="0.0179%" height="15" fill="rgb(206,98,19)" fg:x="6186" fg:w="19"/><text x="6.0697%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="5.8451%" y="1125" width="0.0160%" height="15" fill="rgb(217,5,26)" fg:x="6213" fg:w="17"/><text x="6.0951%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (17 samples, 0.02%)</title><rect x="5.8451%" y="1109" width="0.0160%" height="15" fill="rgb(235,190,38)" fg:x="6213" fg:w="17"/><text x="6.0951%" y="1119.50"></text></g><g><title>event_listener::Event::notify (19 samples, 0.02%)</title><rect x="5.8611%" y="1125" width="0.0179%" height="15" fill="rgb(247,86,24)" fg:x="6230" fg:w="19"/><text x="6.1111%" y="1135.50"></text></g><g><title>rust_alloc (41 samples, 0.04%)</title><rect x="5.8790%" y="1125" width="0.0386%" height="15" fill="rgb(205,101,16)" fg:x="6249" fg:w="41"/><text x="6.1290%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (14 samples, 0.01%)</title><rect x="5.9260%" y="1125" width="0.0132%" height="15" fill="rgb(246,168,33)" fg:x="6299" fg:w="14"/><text x="6.1760%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (12 samples, 0.01%)</title><rect x="5.9279%" y="1109" width="0.0113%" height="15" fill="rgb(231,114,1)" fg:x="6301" fg:w="12"/><text x="6.1779%" y="1119.50"></text></g><g><title>[tremor-pdk-singlevalue] (729 samples, 0.69%)</title><rect x="5.2684%" y="1141" width="0.6858%" height="15" fill="rgb(207,184,53)" fg:x="5600" fg:w="729"/><text x="5.5184%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (12 samples, 0.01%)</title><rect x="5.9430%" y="1125" width="0.0113%" height="15" fill="rgb(224,95,51)" fg:x="6317" fg:w="12"/><text x="6.1930%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (47 samples, 0.04%)</title><rect x="5.9542%" y="1125" width="0.0442%" height="15" fill="rgb(212,188,45)" fg:x="6329" fg:w="47"/><text x="6.2042%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (18 samples, 0.02%)</title><rect x="5.9985%" y="1125" width="0.0169%" height="15" fill="rgb(223,154,38)" fg:x="6376" fg:w="18"/><text x="6.2485%" y="1135.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (120 samples, 0.11%)</title><rect x="6.0182%" y="1125" width="0.1129%" height="15" fill="rgb(251,22,52)" fg:x="6397" fg:w="120"/><text x="6.2682%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (11 samples, 0.01%)</title><rect x="6.2402%" y="1109" width="0.0103%" height="15" fill="rgb(229,209,22)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="6.2402%" y="1093" width="0.0103%" height="15" fill="rgb(234,138,34)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="6.2402%" y="1077" width="0.0103%" height="15" fill="rgb(212,95,11)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="1087.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="6.2402%" y="1061" width="0.0103%" height="15" fill="rgb(240,179,47)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="1071.50"></text></g><g><title>async_task::runnable::Runnable::run (11 samples, 0.01%)</title><rect x="6.2402%" y="1045" width="0.0103%" height="15" fill="rgb(240,163,11)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (11 samples, 0.01%)</title><rect x="6.2402%" y="1029" width="0.0103%" height="15" fill="rgb(236,37,12)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="1039.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="6.2402%" y="1013" width="0.0103%" height="15" fill="rgb(232,164,16)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="6.2402%" y="997" width="0.0103%" height="15" fill="rgb(244,205,15)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="1007.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (11 samples, 0.01%)</title><rect x="6.2402%" y="981" width="0.0103%" height="15" fill="rgb(223,117,47)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="991.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="6.2402%" y="965" width="0.0103%" height="15" fill="rgb(244,107,35)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (11 samples, 0.01%)</title><rect x="6.2402%" y="949" width="0.0103%" height="15" fill="rgb(205,140,8)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.01%)</title><rect x="6.2402%" y="933" width="0.0103%" height="15" fill="rgb(228,84,46)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.01%)</title><rect x="6.2402%" y="917" width="0.0103%" height="15" fill="rgb(254,188,9)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (11 samples, 0.01%)</title><rect x="6.2402%" y="901" width="0.0103%" height="15" fill="rgb(206,112,54)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="911.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11 samples, 0.01%)</title><rect x="6.2402%" y="885" width="0.0103%" height="15" fill="rgb(216,84,49)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="6.2402%" y="869" width="0.0103%" height="15" fill="rgb(214,194,35)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="879.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (11 samples, 0.01%)</title><rect x="6.2402%" y="853" width="0.0103%" height="15" fill="rgb(249,28,3)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="6.2402%" y="837" width="0.0103%" height="15" fill="rgb(222,56,52)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt; (11 samples, 0.01%)</title><rect x="6.2402%" y="821" width="0.0103%" height="15" fill="rgb(245,217,50)" fg:x="6633" fg:w="11"/><text x="6.4902%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (248 samples, 0.23%)</title><rect x="6.4256%" y="485" width="0.2333%" height="15" fill="rgb(213,201,24)" fg:x="6830" fg:w="248"/><text x="6.6756%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (248 samples, 0.23%)</title><rect x="6.4256%" y="469" width="0.2333%" height="15" fill="rgb(248,116,28)" fg:x="6830" fg:w="248"/><text x="6.6756%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (230 samples, 0.22%)</title><rect x="6.4425%" y="453" width="0.2164%" height="15" fill="rgb(219,72,43)" fg:x="6848" fg:w="230"/><text x="6.6925%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (208 samples, 0.20%)</title><rect x="6.4632%" y="437" width="0.1957%" height="15" fill="rgb(209,138,14)" fg:x="6870" fg:w="208"/><text x="6.7132%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (208 samples, 0.20%)</title><rect x="6.4632%" y="421" width="0.1957%" height="15" fill="rgb(222,18,33)" fg:x="6870" fg:w="208"/><text x="6.7132%" y="431.50"></text></g><g><title>alloc::alloc::exchange_malloc (262 samples, 0.25%)</title><rect x="6.4133%" y="597" width="0.2465%" height="15" fill="rgb(213,199,7)" fg:x="6817" fg:w="262"/><text x="6.6633%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (262 samples, 0.25%)</title><rect x="6.4133%" y="581" width="0.2465%" height="15" fill="rgb(250,110,10)" fg:x="6817" fg:w="262"/><text x="6.6633%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (262 samples, 0.25%)</title><rect x="6.4133%" y="565" width="0.2465%" height="15" fill="rgb(248,123,6)" fg:x="6817" fg:w="262"/><text x="6.6633%" y="575.50"></text></g><g><title>alloc::alloc::alloc (261 samples, 0.25%)</title><rect x="6.4143%" y="549" width="0.2455%" height="15" fill="rgb(206,91,31)" fg:x="6818" fg:w="261"/><text x="6.6643%" y="559.50"></text></g><g><title>__rg_alloc (261 samples, 0.25%)</title><rect x="6.4143%" y="533" width="0.2455%" height="15" fill="rgb(211,154,13)" fg:x="6818" fg:w="261"/><text x="6.6643%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (261 samples, 0.25%)</title><rect x="6.4143%" y="517" width="0.2455%" height="15" fill="rgb(225,148,7)" fg:x="6818" fg:w="261"/><text x="6.6643%" y="527.50"></text></g><g><title>rust_alloc (260 samples, 0.24%)</title><rect x="6.4152%" y="501" width="0.2446%" height="15" fill="rgb(220,160,43)" fg:x="6819" fg:w="260"/><text x="6.6652%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (51 samples, 0.05%)</title><rect x="6.7548%" y="533" width="0.0480%" height="15" fill="rgb(213,52,39)" fg:x="7180" fg:w="51"/><text x="7.0048%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::ge (51 samples, 0.05%)</title><rect x="6.7548%" y="517" width="0.0480%" height="15" fill="rgb(243,137,7)" fg:x="7180" fg:w="51"/><text x="7.0048%" y="527.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (50 samples, 0.05%)</title><rect x="6.7558%" y="501" width="0.0470%" height="15" fill="rgb(230,79,13)" fg:x="7181" fg:w="50"/><text x="7.0058%" y="511.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (50 samples, 0.05%)</title><rect x="6.7558%" y="485" width="0.0470%" height="15" fill="rgb(247,105,23)" fg:x="7181" fg:w="50"/><text x="7.0058%" y="495.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (50 samples, 0.05%)</title><rect x="6.7558%" y="469" width="0.0470%" height="15" fill="rgb(223,179,41)" fg:x="7181" fg:w="50"/><text x="7.0058%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (33 samples, 0.03%)</title><rect x="6.7718%" y="453" width="0.0310%" height="15" fill="rgb(218,9,34)" fg:x="7198" fg:w="33"/><text x="7.0218%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (121 samples, 0.11%)</title><rect x="6.7106%" y="565" width="0.1138%" height="15" fill="rgb(222,106,8)" fg:x="7133" fg:w="121"/><text x="6.9606%" y="575.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (121 samples, 0.11%)</title><rect x="6.7106%" y="549" width="0.1138%" height="15" fill="rgb(211,220,0)" fg:x="7133" fg:w="121"/><text x="6.9606%" y="559.50"></text></g><g><title>core::time::Duration::new (23 samples, 0.02%)</title><rect x="6.8028%" y="533" width="0.0216%" height="15" fill="rgb(229,52,16)" fg:x="7231" fg:w="23"/><text x="7.0528%" y="543.50"></text></g><g><title>std::time::SystemTime::duration_since (128 samples, 0.12%)</title><rect x="6.7106%" y="581" width="0.1204%" height="15" fill="rgb(212,155,18)" fg:x="7133" fg:w="128"/><text x="6.9606%" y="591.50"></text></g><g><title>__clock_gettime_2 (392 samples, 0.37%)</title><rect x="6.9251%" y="533" width="0.3688%" height="15" fill="rgb(242,21,14)" fg:x="7361" fg:w="392"/><text x="7.1751%" y="543.50"></text></g><g><title>__vdso_clock_gettime (380 samples, 0.36%)</title><rect x="6.9364%" y="517" width="0.3575%" height="15" fill="rgb(222,19,48)" fg:x="7373" fg:w="380"/><text x="7.1864%" y="527.50"></text></g><g><title>[[vdso]] (254 samples, 0.24%)</title><rect x="7.0550%" y="501" width="0.2390%" height="15" fill="rgb(232,45,27)" fg:x="7499" fg:w="254"/><text x="7.3050%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (1,110 samples, 1.04%)</title><rect x="6.2506%" y="981" width="1.0443%" height="15" fill="rgb(249,103,42)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,110 samples, 1.04%)</title><rect x="6.2506%" y="965" width="1.0443%" height="15" fill="rgb(246,81,33)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="975.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,110 samples, 1.04%)</title><rect x="6.2506%" y="949" width="1.0443%" height="15" fill="rgb(252,33,42)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="959.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,110 samples, 1.04%)</title><rect x="6.2506%" y="933" width="1.0443%" height="15" fill="rgb(209,212,41)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,110 samples, 1.04%)</title><rect x="6.2506%" y="917" width="1.0443%" height="15" fill="rgb(207,154,6)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="927.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,110 samples, 1.04%)</title><rect x="6.2506%" y="901" width="1.0443%" height="15" fill="rgb(223,64,47)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,110 samples, 1.04%)</title><rect x="6.2506%" y="885" width="1.0443%" height="15" fill="rgb(211,161,38)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="895.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,110 samples, 1.04%)</title><rect x="6.2506%" y="869" width="1.0443%" height="15" fill="rgb(219,138,40)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="879.50"></text></g><g><title>std::panic::catch_unwind (1,110 samples, 1.04%)</title><rect x="6.2506%" y="853" width="1.0443%" height="15" fill="rgb(241,228,46)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="863.50"></text></g><g><title>std::panicking::try (1,110 samples, 1.04%)</title><rect x="6.2506%" y="837" width="1.0443%" height="15" fill="rgb(223,209,38)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="847.50"></text></g><g><title>std::panicking::try::do_call (1,110 samples, 1.04%)</title><rect x="6.2506%" y="821" width="1.0443%" height="15" fill="rgb(236,164,45)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,110 samples, 1.04%)</title><rect x="6.2506%" y="805" width="1.0443%" height="15" fill="rgb(231,15,5)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,110 samples, 1.04%)</title><rect x="6.2506%" y="789" width="1.0443%" height="15" fill="rgb(252,35,15)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,110 samples, 1.04%)</title><rect x="6.2506%" y="773" width="1.0443%" height="15" fill="rgb(248,181,18)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="783.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,110 samples, 1.04%)</title><rect x="6.2506%" y="757" width="1.0443%" height="15" fill="rgb(233,39,42)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,110 samples, 1.04%)</title><rect x="6.2506%" y="741" width="1.0443%" height="15" fill="rgb(238,110,33)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,110 samples, 1.04%)</title><rect x="6.2506%" y="725" width="1.0443%" height="15" fill="rgb(233,195,10)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,110 samples, 1.04%)</title><rect x="6.2506%" y="709" width="1.0443%" height="15" fill="rgb(254,105,3)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="719.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,110 samples, 1.04%)</title><rect x="6.2506%" y="693" width="1.0443%" height="15" fill="rgb(221,225,9)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,110 samples, 1.04%)</title><rect x="6.2506%" y="677" width="1.0443%" height="15" fill="rgb(224,227,45)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="687.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,110 samples, 1.04%)</title><rect x="6.2506%" y="661" width="1.0443%" height="15" fill="rgb(229,198,43)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,110 samples, 1.04%)</title><rect x="6.2506%" y="645" width="1.0443%" height="15" fill="rgb(206,209,35)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,110 samples, 1.04%)</title><rect x="6.2506%" y="629" width="1.0443%" height="15" fill="rgb(245,195,53)" fg:x="6644" fg:w="1110"/><text x="6.5006%" y="639.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,109 samples, 1.04%)</title><rect x="6.2515%" y="613" width="1.0433%" height="15" fill="rgb(240,92,26)" fg:x="6645" fg:w="1109"/><text x="6.5015%" y="623.50"></text></g><g><title>tremor_common::time::nanotime (643 samples, 0.60%)</title><rect x="6.6899%" y="597" width="0.6049%" height="15" fill="rgb(207,40,23)" fg:x="7111" fg:w="643"/><text x="6.9399%" y="607.50"></text></g><g><title>std::time::SystemTime::now (493 samples, 0.46%)</title><rect x="6.8311%" y="581" width="0.4638%" height="15" fill="rgb(223,111,35)" fg:x="7261" fg:w="493"/><text x="7.0811%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (493 samples, 0.46%)</title><rect x="6.8311%" y="565" width="0.4638%" height="15" fill="rgb(229,147,28)" fg:x="7261" fg:w="493"/><text x="7.0811%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::now (493 samples, 0.46%)</title><rect x="6.8311%" y="549" width="0.4638%" height="15" fill="rgb(211,29,28)" fg:x="7261" fg:w="493"/><text x="7.0811%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="7.2949%" y="373" width="0.0386%" height="15" fill="rgb(228,72,33)" fg:x="7754" fg:w="41"/><text x="7.5449%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (41 samples, 0.04%)</title><rect x="7.2949%" y="357" width="0.0386%" height="15" fill="rgb(205,214,31)" fg:x="7754" fg:w="41"/><text x="7.5449%" y="367.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (38 samples, 0.04%)</title><rect x="7.2977%" y="341" width="0.0357%" height="15" fill="rgb(224,111,15)" fg:x="7757" fg:w="38"/><text x="7.5477%" y="351.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (28 samples, 0.03%)</title><rect x="7.3071%" y="325" width="0.0263%" height="15" fill="rgb(253,21,26)" fg:x="7767" fg:w="28"/><text x="7.5571%" y="335.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (28 samples, 0.03%)</title><rect x="7.3071%" y="309" width="0.0263%" height="15" fill="rgb(245,139,43)" fg:x="7767" fg:w="28"/><text x="7.5571%" y="319.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (28 samples, 0.03%)</title><rect x="7.3071%" y="293" width="0.0263%" height="15" fill="rgb(252,170,7)" fg:x="7767" fg:w="28"/><text x="7.5571%" y="303.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="7.2949%" y="677" width="0.0405%" height="15" fill="rgb(231,118,14)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (43 samples, 0.04%)</title><rect x="7.2949%" y="661" width="0.0405%" height="15" fill="rgb(238,83,0)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="671.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (43 samples, 0.04%)</title><rect x="7.2949%" y="645" width="0.0405%" height="15" fill="rgb(221,39,39)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (43 samples, 0.04%)</title><rect x="7.2949%" y="629" width="0.0405%" height="15" fill="rgb(222,119,46)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43 samples, 0.04%)</title><rect x="7.2949%" y="613" width="0.0405%" height="15" fill="rgb(222,165,49)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (43 samples, 0.04%)</title><rect x="7.2949%" y="597" width="0.0405%" height="15" fill="rgb(219,113,52)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43 samples, 0.04%)</title><rect x="7.2949%" y="581" width="0.0405%" height="15" fill="rgb(214,7,15)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43 samples, 0.04%)</title><rect x="7.2949%" y="565" width="0.0405%" height="15" fill="rgb(235,32,4)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43 samples, 0.04%)</title><rect x="7.2949%" y="549" width="0.0405%" height="15" fill="rgb(238,90,54)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.04%)</title><rect x="7.2949%" y="533" width="0.0405%" height="15" fill="rgb(213,208,19)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.04%)</title><rect x="7.2949%" y="517" width="0.0405%" height="15" fill="rgb(233,156,4)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.04%)</title><rect x="7.2949%" y="501" width="0.0405%" height="15" fill="rgb(207,194,5)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="511.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.04%)</title><rect x="7.2949%" y="485" width="0.0405%" height="15" fill="rgb(206,111,30)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="495.50"></text></g><g><title>__rg_alloc (43 samples, 0.04%)</title><rect x="7.2949%" y="469" width="0.0405%" height="15" fill="rgb(243,70,54)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (43 samples, 0.04%)</title><rect x="7.2949%" y="453" width="0.0405%" height="15" fill="rgb(242,28,8)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="463.50"></text></g><g><title>rust_alloc (43 samples, 0.04%)</title><rect x="7.2949%" y="437" width="0.0405%" height="15" fill="rgb(219,106,18)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="7.2949%" y="421" width="0.0405%" height="15" fill="rgb(244,222,10)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="7.2949%" y="405" width="0.0405%" height="15" fill="rgb(236,179,52)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="7.2949%" y="389" width="0.0405%" height="15" fill="rgb(213,23,39)" fg:x="7754" fg:w="43"/><text x="7.5449%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (32 samples, 0.03%)</title><rect x="7.3457%" y="661" width="0.0301%" height="15" fill="rgb(238,48,10)" fg:x="7808" fg:w="32"/><text x="7.5957%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (17 samples, 0.02%)</title><rect x="7.3598%" y="645" width="0.0160%" height="15" fill="rgb(251,196,23)" fg:x="7823" fg:w="17"/><text x="7.6098%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (15 samples, 0.01%)</title><rect x="7.3767%" y="437" width="0.0141%" height="15" fill="rgb(250,152,24)" fg:x="7841" fg:w="15"/><text x="7.6267%" y="447.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="7.3955%" y="325" width="0.0113%" height="15" fill="rgb(209,150,17)" fg:x="7861" fg:w="12"/><text x="7.6455%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.06%)</title><rect x="7.4143%" y="277" width="0.0583%" height="15" fill="rgb(234,202,34)" fg:x="7881" fg:w="62"/><text x="7.6643%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (62 samples, 0.06%)</title><rect x="7.4143%" y="261" width="0.0583%" height="15" fill="rgb(253,148,53)" fg:x="7881" fg:w="62"/><text x="7.6643%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (53 samples, 0.05%)</title><rect x="7.4228%" y="245" width="0.0499%" height="15" fill="rgb(218,129,16)" fg:x="7890" fg:w="53"/><text x="7.6728%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (42 samples, 0.04%)</title><rect x="7.4332%" y="229" width="0.0395%" height="15" fill="rgb(216,85,19)" fg:x="7901" fg:w="42"/><text x="7.6832%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="7.4332%" y="213" width="0.0395%" height="15" fill="rgb(235,228,7)" fg:x="7901" fg:w="42"/><text x="7.6832%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="7.4332%" y="197" width="0.0395%" height="15" fill="rgb(245,175,0)" fg:x="7901" fg:w="42"/><text x="7.6832%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (174 samples, 0.16%)</title><rect x="7.4068%" y="325" width="0.1637%" height="15" fill="rgb(208,168,36)" fg:x="7873" fg:w="174"/><text x="7.6568%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (174 samples, 0.16%)</title><rect x="7.4068%" y="309" width="0.1637%" height="15" fill="rgb(246,171,24)" fg:x="7873" fg:w="174"/><text x="7.6568%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (167 samples, 0.16%)</title><rect x="7.4134%" y="293" width="0.1571%" height="15" fill="rgb(215,142,24)" fg:x="7880" fg:w="167"/><text x="7.6634%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (88 samples, 0.08%)</title><rect x="7.4877%" y="277" width="0.0828%" height="15" fill="rgb(250,187,7)" fg:x="7959" fg:w="88"/><text x="7.7377%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (88 samples, 0.08%)</title><rect x="7.4877%" y="261" width="0.0828%" height="15" fill="rgb(228,66,33)" fg:x="7959" fg:w="88"/><text x="7.7377%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (219 samples, 0.21%)</title><rect x="7.3767%" y="469" width="0.2060%" height="15" fill="rgb(234,215,21)" fg:x="7841" fg:w="219"/><text x="7.6267%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (219 samples, 0.21%)</title><rect x="7.3767%" y="453" width="0.2060%" height="15" fill="rgb(222,191,20)" fg:x="7841" fg:w="219"/><text x="7.6267%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (204 samples, 0.19%)</title><rect x="7.3908%" y="437" width="0.1919%" height="15" fill="rgb(245,79,54)" fg:x="7856" fg:w="204"/><text x="7.6408%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (204 samples, 0.19%)</title><rect x="7.3908%" y="421" width="0.1919%" height="15" fill="rgb(240,10,37)" fg:x="7856" fg:w="204"/><text x="7.6408%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (204 samples, 0.19%)</title><rect x="7.3908%" y="405" width="0.1919%" height="15" fill="rgb(214,192,32)" fg:x="7856" fg:w="204"/><text x="7.6408%" y="415.50"></text></g><g><title>alloc::alloc::alloc (203 samples, 0.19%)</title><rect x="7.3918%" y="389" width="0.1910%" height="15" fill="rgb(209,36,54)" fg:x="7857" fg:w="203"/><text x="7.6418%" y="399.50"></text></g><g><title>__rg_alloc (203 samples, 0.19%)</title><rect x="7.3918%" y="373" width="0.1910%" height="15" fill="rgb(220,10,11)" fg:x="7857" fg:w="203"/><text x="7.6418%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (203 samples, 0.19%)</title><rect x="7.3918%" y="357" width="0.1910%" height="15" fill="rgb(221,106,17)" fg:x="7857" fg:w="203"/><text x="7.6418%" y="367.50"></text></g><g><title>rust_alloc (199 samples, 0.19%)</title><rect x="7.3955%" y="341" width="0.1872%" height="15" fill="rgb(251,142,44)" fg:x="7861" fg:w="199"/><text x="7.6455%" y="351.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="7.5705%" y="325" width="0.0122%" height="15" fill="rgb(238,13,15)" fg:x="8047" fg:w="13"/><text x="7.8205%" y="335.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (257 samples, 0.24%)</title><rect x="7.3758%" y="581" width="0.2418%" height="15" fill="rgb(208,107,27)" fg:x="7840" fg:w="257"/><text x="7.6258%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (257 samples, 0.24%)</title><rect x="7.3758%" y="565" width="0.2418%" height="15" fill="rgb(205,136,37)" fg:x="7840" fg:w="257"/><text x="7.6258%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (256 samples, 0.24%)</title><rect x="7.3767%" y="549" width="0.2408%" height="15" fill="rgb(250,205,27)" fg:x="7841" fg:w="256"/><text x="7.6267%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (256 samples, 0.24%)</title><rect x="7.3767%" y="533" width="0.2408%" height="15" fill="rgb(210,80,43)" fg:x="7841" fg:w="256"/><text x="7.6267%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (256 samples, 0.24%)</title><rect x="7.3767%" y="517" width="0.2408%" height="15" fill="rgb(247,160,36)" fg:x="7841" fg:w="256"/><text x="7.6267%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (256 samples, 0.24%)</title><rect x="7.3767%" y="501" width="0.2408%" height="15" fill="rgb(234,13,49)" fg:x="7841" fg:w="256"/><text x="7.6267%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (256 samples, 0.24%)</title><rect x="7.3767%" y="485" width="0.2408%" height="15" fill="rgb(234,122,0)" fg:x="7841" fg:w="256"/><text x="7.6267%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (37 samples, 0.03%)</title><rect x="7.5827%" y="469" width="0.0348%" height="15" fill="rgb(207,146,38)" fg:x="8060" fg:w="37"/><text x="7.8327%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.03%)</title><rect x="7.5865%" y="453" width="0.0310%" height="15" fill="rgb(207,177,25)" fg:x="8064" fg:w="33"/><text x="7.8365%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (29 samples, 0.03%)</title><rect x="7.5903%" y="437" width="0.0273%" height="15" fill="rgb(211,178,42)" fg:x="8068" fg:w="29"/><text x="7.8403%" y="447.50"></text></g><g><title>aligned_size (18 samples, 0.02%)</title><rect x="7.6401%" y="437" width="0.0169%" height="15" fill="rgb(230,69,54)" fg:x="8121" fg:w="18"/><text x="7.8901%" y="447.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="7.6571%" y="405" width="0.0103%" height="15" fill="rgb(214,135,41)" fg:x="8139" fg:w="11"/><text x="7.9071%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (11 samples, 0.01%)</title><rect x="7.6702%" y="341" width="0.0103%" height="15" fill="rgb(237,67,25)" fg:x="8153" fg:w="11"/><text x="7.9202%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="7.6693%" y="357" width="0.0141%" height="15" fill="rgb(222,189,50)" fg:x="8152" fg:w="15"/><text x="7.9193%" y="367.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="7.6872%" y="341" width="0.0113%" height="15" fill="rgb(245,148,34)" fg:x="8171" fg:w="12"/><text x="7.9372%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (69 samples, 0.06%)</title><rect x="7.6693%" y="389" width="0.0649%" height="15" fill="rgb(222,29,6)" fg:x="8152" fg:w="69"/><text x="7.9193%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (69 samples, 0.06%)</title><rect x="7.6693%" y="373" width="0.0649%" height="15" fill="rgb(221,189,43)" fg:x="8152" fg:w="69"/><text x="7.9193%" y="383.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (54 samples, 0.05%)</title><rect x="7.6834%" y="357" width="0.0508%" height="15" fill="rgb(207,36,27)" fg:x="8167" fg:w="54"/><text x="7.9334%" y="367.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (38 samples, 0.04%)</title><rect x="7.6985%" y="341" width="0.0357%" height="15" fill="rgb(217,90,24)" fg:x="8183" fg:w="38"/><text x="7.9485%" y="351.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (38 samples, 0.04%)</title><rect x="7.6985%" y="325" width="0.0357%" height="15" fill="rgb(224,66,35)" fg:x="8183" fg:w="38"/><text x="7.9485%" y="335.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (38 samples, 0.04%)</title><rect x="7.6985%" y="309" width="0.0357%" height="15" fill="rgb(221,13,50)" fg:x="8183" fg:w="38"/><text x="7.9485%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (197 samples, 0.19%)</title><rect x="7.6260%" y="533" width="0.1853%" height="15" fill="rgb(236,68,49)" fg:x="8106" fg:w="197"/><text x="7.8760%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (197 samples, 0.19%)</title><rect x="7.6260%" y="517" width="0.1853%" height="15" fill="rgb(229,146,28)" fg:x="8106" fg:w="197"/><text x="7.8760%" y="527.50"></text></g><g><title>alloc::alloc::alloc (184 samples, 0.17%)</title><rect x="7.6382%" y="501" width="0.1731%" height="15" fill="rgb(225,31,38)" fg:x="8119" fg:w="184"/><text x="7.8882%" y="511.50"></text></g><g><title>__rg_alloc (184 samples, 0.17%)</title><rect x="7.6382%" y="485" width="0.1731%" height="15" fill="rgb(250,208,3)" fg:x="8119" fg:w="184"/><text x="7.8882%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (184 samples, 0.17%)</title><rect x="7.6382%" y="469" width="0.1731%" height="15" fill="rgb(246,54,23)" fg:x="8119" fg:w="184"/><text x="7.8882%" y="479.50"></text></g><g><title>rust_alloc (182 samples, 0.17%)</title><rect x="7.6401%" y="453" width="0.1712%" height="15" fill="rgb(243,76,11)" fg:x="8121" fg:w="182"/><text x="7.8901%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (164 samples, 0.15%)</title><rect x="7.6571%" y="437" width="0.1543%" height="15" fill="rgb(245,21,50)" fg:x="8139" fg:w="164"/><text x="7.9071%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (164 samples, 0.15%)</title><rect x="7.6571%" y="421" width="0.1543%" height="15" fill="rgb(228,9,43)" fg:x="8139" fg:w="164"/><text x="7.9071%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (152 samples, 0.14%)</title><rect x="7.6684%" y="405" width="0.1430%" height="15" fill="rgb(208,100,47)" fg:x="8151" fg:w="152"/><text x="7.9184%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (75 samples, 0.07%)</title><rect x="7.7408%" y="389" width="0.0706%" height="15" fill="rgb(232,26,8)" fg:x="8228" fg:w="75"/><text x="7.9908%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (75 samples, 0.07%)</title><rect x="7.7408%" y="373" width="0.0706%" height="15" fill="rgb(216,166,38)" fg:x="8228" fg:w="75"/><text x="7.9908%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (212 samples, 0.20%)</title><rect x="7.6194%" y="581" width="0.1994%" height="15" fill="rgb(251,202,51)" fg:x="8099" fg:w="212"/><text x="7.8694%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (205 samples, 0.19%)</title><rect x="7.6260%" y="565" width="0.1929%" height="15" fill="rgb(254,216,34)" fg:x="8106" fg:w="205"/><text x="7.8760%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (205 samples, 0.19%)</title><rect x="7.6260%" y="549" width="0.1929%" height="15" fill="rgb(251,32,27)" fg:x="8106" fg:w="205"/><text x="7.8760%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (483 samples, 0.45%)</title><rect x="7.3758%" y="597" width="0.4544%" height="15" fill="rgb(208,127,28)" fg:x="7840" fg:w="483"/><text x="7.6258%" y="607.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (12 samples, 0.01%)</title><rect x="7.8189%" y="581" width="0.0113%" height="15" fill="rgb(224,137,22)" fg:x="8311" fg:w="12"/><text x="8.0689%" y="591.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (583 samples, 0.55%)</title><rect x="7.2949%" y="693" width="0.5485%" height="15" fill="rgb(254,70,32)" fg:x="7754" fg:w="583"/><text x="7.5449%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (540 samples, 0.51%)</title><rect x="7.3353%" y="677" width="0.5080%" height="15" fill="rgb(229,75,37)" fg:x="7797" fg:w="540"/><text x="7.5853%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (497 samples, 0.47%)</title><rect x="7.3758%" y="661" width="0.4676%" height="15" fill="rgb(252,64,23)" fg:x="7840" fg:w="497"/><text x="7.6258%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (497 samples, 0.47%)</title><rect x="7.3758%" y="645" width="0.4676%" height="15" fill="rgb(232,162,48)" fg:x="7840" fg:w="497"/><text x="7.6258%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (497 samples, 0.47%)</title><rect x="7.3758%" y="629" width="0.4676%" height="15" fill="rgb(246,160,12)" fg:x="7840" fg:w="497"/><text x="7.6258%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (497 samples, 0.47%)</title><rect x="7.3758%" y="613" width="0.4676%" height="15" fill="rgb(247,166,0)" fg:x="7840" fg:w="497"/><text x="7.6258%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (14 samples, 0.01%)</title><rect x="7.8302%" y="597" width="0.0132%" height="15" fill="rgb(249,219,21)" fg:x="8323" fg:w="14"/><text x="8.0802%" y="607.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="7.8640%" y="309" width="0.0198%" height="15" fill="rgb(205,209,3)" fg:x="8359" fg:w="21"/><text x="8.1140%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="7.8640%" y="293" width="0.0198%" height="15" fill="rgb(243,44,1)" fg:x="8359" fg:w="21"/><text x="8.1140%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="7.8556%" y="357" width="0.0376%" height="15" fill="rgb(206,159,16)" fg:x="8350" fg:w="40"/><text x="8.1056%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="7.8556%" y="341" width="0.0376%" height="15" fill="rgb(244,77,30)" fg:x="8350" fg:w="40"/><text x="8.1056%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (34 samples, 0.03%)</title><rect x="7.8612%" y="325" width="0.0320%" height="15" fill="rgb(218,69,12)" fg:x="8356" fg:w="34"/><text x="8.1112%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (49 samples, 0.05%)</title><rect x="7.8556%" y="373" width="0.0461%" height="15" fill="rgb(212,87,7)" fg:x="8350" fg:w="49"/><text x="8.1056%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (73 samples, 0.07%)</title><rect x="7.8433%" y="389" width="0.0687%" height="15" fill="rgb(245,114,25)" fg:x="8337" fg:w="73"/><text x="8.0933%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (47 samples, 0.04%)</title><rect x="7.9449%" y="373" width="0.0442%" height="15" fill="rgb(210,61,42)" fg:x="8445" fg:w="47"/><text x="8.1949%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (545 samples, 0.51%)</title><rect x="7.8433%" y="421" width="0.5127%" height="15" fill="rgb(211,52,33)" fg:x="8337" fg:w="545"/><text x="8.0933%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (545 samples, 0.51%)</title><rect x="7.8433%" y="405" width="0.5127%" height="15" fill="rgb(234,58,33)" fg:x="8337" fg:w="545"/><text x="8.0933%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (472 samples, 0.44%)</title><rect x="7.9120%" y="389" width="0.4441%" height="15" fill="rgb(220,115,36)" fg:x="8410" fg:w="472"/><text x="8.1620%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (390 samples, 0.37%)</title><rect x="7.9892%" y="373" width="0.3669%" height="15" fill="rgb(243,153,54)" fg:x="8492" fg:w="390"/><text x="8.2392%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (390 samples, 0.37%)</title><rect x="7.9892%" y="357" width="0.3669%" height="15" fill="rgb(251,47,18)" fg:x="8492" fg:w="390"/><text x="8.2392%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (390 samples, 0.37%)</title><rect x="7.9892%" y="341" width="0.3669%" height="15" fill="rgb(242,102,42)" fg:x="8492" fg:w="390"/><text x="8.2392%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (22 samples, 0.02%)</title><rect x="8.3598%" y="373" width="0.0207%" height="15" fill="rgb(234,31,38)" fg:x="8886" fg:w="22"/><text x="8.6098%" y="383.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (19 samples, 0.02%)</title><rect x="8.3627%" y="357" width="0.0179%" height="15" fill="rgb(221,117,51)" fg:x="8889" fg:w="19"/><text x="8.6127%" y="367.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (12 samples, 0.01%)</title><rect x="8.3692%" y="341" width="0.0113%" height="15" fill="rgb(212,20,18)" fg:x="8896" fg:w="12"/><text x="8.6192%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.02%)</title><rect x="8.3805%" y="373" width="0.0245%" height="15" fill="rgb(245,133,36)" fg:x="8908" fg:w="26"/><text x="8.6305%" y="383.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (17 samples, 0.02%)</title><rect x="8.3890%" y="357" width="0.0160%" height="15" fill="rgb(212,6,19)" fg:x="8917" fg:w="17"/><text x="8.6390%" y="367.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (14 samples, 0.01%)</title><rect x="8.3918%" y="341" width="0.0132%" height="15" fill="rgb(218,1,36)" fg:x="8920" fg:w="14"/><text x="8.6418%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="8.3918%" y="325" width="0.0132%" height="15" fill="rgb(246,84,54)" fg:x="8920" fg:w="14"/><text x="8.6418%" y="335.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (1,182 samples, 1.11%)</title><rect x="7.2949%" y="949" width="1.1120%" height="15" fill="rgb(242,110,6)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="959.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,182 samples, 1.11%)</title><rect x="7.2949%" y="933" width="1.1120%" height="15" fill="rgb(214,47,5)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,182 samples, 1.11%)</title><rect x="7.2949%" y="917" width="1.1120%" height="15" fill="rgb(218,159,25)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="927.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,182 samples, 1.11%)</title><rect x="7.2949%" y="901" width="1.1120%" height="15" fill="rgb(215,211,28)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,182 samples, 1.11%)</title><rect x="7.2949%" y="885" width="1.1120%" height="15" fill="rgb(238,59,32)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="895.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,182 samples, 1.11%)</title><rect x="7.2949%" y="869" width="1.1120%" height="15" fill="rgb(226,82,3)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="879.50"></text></g><g><title>std::panic::catch_unwind (1,182 samples, 1.11%)</title><rect x="7.2949%" y="853" width="1.1120%" height="15" fill="rgb(240,164,32)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="863.50"></text></g><g><title>std::panicking::try (1,182 samples, 1.11%)</title><rect x="7.2949%" y="837" width="1.1120%" height="15" fill="rgb(232,46,7)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="847.50"></text></g><g><title>std::panicking::try::do_call (1,182 samples, 1.11%)</title><rect x="7.2949%" y="821" width="1.1120%" height="15" fill="rgb(229,129,53)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,182 samples, 1.11%)</title><rect x="7.2949%" y="805" width="1.1120%" height="15" fill="rgb(234,188,29)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,182 samples, 1.11%)</title><rect x="7.2949%" y="789" width="1.1120%" height="15" fill="rgb(246,141,4)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,182 samples, 1.11%)</title><rect x="7.2949%" y="773" width="1.1120%" height="15" fill="rgb(229,23,39)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="783.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,182 samples, 1.11%)</title><rect x="7.2949%" y="757" width="1.1120%" height="15" fill="rgb(206,12,3)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,182 samples, 1.11%)</title><rect x="7.2949%" y="741" width="1.1120%" height="15" fill="rgb(252,226,20)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,182 samples, 1.11%)</title><rect x="7.2949%" y="725" width="1.1120%" height="15" fill="rgb(216,123,35)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (1,182 samples, 1.11%)</title><rect x="7.2949%" y="709" width="1.1120%" height="15" fill="rgb(212,68,40)" fg:x="7754" fg:w="1182"/><text x="7.5449%" y="719.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (599 samples, 0.56%)</title><rect x="7.8433%" y="693" width="0.5635%" height="15" fill="rgb(254,125,32)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (599 samples, 0.56%)</title><rect x="7.8433%" y="677" width="0.5635%" height="15" fill="rgb(253,97,22)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (599 samples, 0.56%)</title><rect x="7.8433%" y="661" width="0.5635%" height="15" fill="rgb(241,101,14)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (599 samples, 0.56%)</title><rect x="7.8433%" y="645" width="0.5635%" height="15" fill="rgb(238,103,29)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (599 samples, 0.56%)</title><rect x="7.8433%" y="629" width="0.5635%" height="15" fill="rgb(233,195,47)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (599 samples, 0.56%)</title><rect x="7.8433%" y="613" width="0.5635%" height="15" fill="rgb(246,218,30)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (599 samples, 0.56%)</title><rect x="7.8433%" y="597" width="0.5635%" height="15" fill="rgb(219,145,47)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (599 samples, 0.56%)</title><rect x="7.8433%" y="581" width="0.5635%" height="15" fill="rgb(243,12,26)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (599 samples, 0.56%)</title><rect x="7.8433%" y="565" width="0.5635%" height="15" fill="rgb(214,87,16)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (599 samples, 0.56%)</title><rect x="7.8433%" y="549" width="0.5635%" height="15" fill="rgb(208,99,42)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="559.50"></text></g><g><title>alloc::alloc::alloc (599 samples, 0.56%)</title><rect x="7.8433%" y="533" width="0.5635%" height="15" fill="rgb(253,99,2)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="543.50"></text></g><g><title>__rg_alloc (599 samples, 0.56%)</title><rect x="7.8433%" y="517" width="0.5635%" height="15" fill="rgb(220,168,23)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (599 samples, 0.56%)</title><rect x="7.8433%" y="501" width="0.5635%" height="15" fill="rgb(242,38,24)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="511.50"></text></g><g><title>rust_alloc (599 samples, 0.56%)</title><rect x="7.8433%" y="485" width="0.5635%" height="15" fill="rgb(225,182,9)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (599 samples, 0.56%)</title><rect x="7.8433%" y="469" width="0.5635%" height="15" fill="rgb(243,178,37)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (599 samples, 0.56%)</title><rect x="7.8433%" y="453" width="0.5635%" height="15" fill="rgb(232,139,19)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (599 samples, 0.56%)</title><rect x="7.8433%" y="437" width="0.5635%" height="15" fill="rgb(225,201,24)" fg:x="8337" fg:w="599"/><text x="8.0933%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (54 samples, 0.05%)</title><rect x="8.3561%" y="421" width="0.0508%" height="15" fill="rgb(221,47,46)" fg:x="8882" fg:w="54"/><text x="8.6061%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (53 samples, 0.05%)</title><rect x="8.3570%" y="405" width="0.0499%" height="15" fill="rgb(249,23,13)" fg:x="8883" fg:w="53"/><text x="8.6070%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="8.3598%" y="389" width="0.0470%" height="15" fill="rgb(219,9,5)" fg:x="8886" fg:w="50"/><text x="8.6098%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.02%)</title><rect x="8.4116%" y="917" width="0.0151%" height="15" fill="rgb(254,171,16)" fg:x="8941" fg:w="16"/><text x="8.6616%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="8.6609%" y="901" width="0.0113%" height="15" fill="rgb(230,171,20)" fg:x="9206" fg:w="12"/><text x="8.9109%" y="911.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (326 samples, 0.31%)</title><rect x="8.6778%" y="901" width="0.3067%" height="15" fill="rgb(210,71,41)" fg:x="9224" fg:w="326"/><text x="8.9278%" y="911.50"></text></g><g><title>core::ptr::read (299 samples, 0.28%)</title><rect x="8.7032%" y="885" width="0.2813%" height="15" fill="rgb(206,173,20)" fg:x="9251" fg:w="299"/><text x="8.9532%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (288 samples, 0.27%)</title><rect x="8.7136%" y="869" width="0.2709%" height="15" fill="rgb(233,88,34)" fg:x="9262" fg:w="288"/><text x="8.9636%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.02%)</title><rect x="8.9930%" y="901" width="0.0151%" height="15" fill="rgb(223,209,46)" fg:x="9559" fg:w="16"/><text x="9.2430%" y="911.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="9.0080%" y="901" width="0.0132%" height="15" fill="rgb(250,43,18)" fg:x="9575" fg:w="14"/><text x="9.2580%" y="911.50"></text></g><g><title>rust_alloc (21 samples, 0.02%)</title><rect x="9.0523%" y="597" width="0.0198%" height="15" fill="rgb(208,13,10)" fg:x="9622" fg:w="21"/><text x="9.3023%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="9.0889%" y="581" width="0.0226%" height="15" fill="rgb(212,200,36)" fg:x="9661" fg:w="24"/><text x="9.3389%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (24 samples, 0.02%)</title><rect x="9.0889%" y="565" width="0.0226%" height="15" fill="rgb(225,90,30)" fg:x="9661" fg:w="24"/><text x="9.3389%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (22 samples, 0.02%)</title><rect x="9.0908%" y="549" width="0.0207%" height="15" fill="rgb(236,182,39)" fg:x="9663" fg:w="22"/><text x="9.3408%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (19 samples, 0.02%)</title><rect x="9.0936%" y="533" width="0.0179%" height="15" fill="rgb(212,144,35)" fg:x="9666" fg:w="19"/><text x="9.3436%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (19 samples, 0.02%)</title><rect x="9.0936%" y="517" width="0.0179%" height="15" fill="rgb(228,63,44)" fg:x="9666" fg:w="19"/><text x="9.3436%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (19 samples, 0.02%)</title><rect x="9.0936%" y="501" width="0.0179%" height="15" fill="rgb(228,109,6)" fg:x="9666" fg:w="19"/><text x="9.3436%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (62 samples, 0.06%)</title><rect x="9.1115%" y="581" width="0.0583%" height="15" fill="rgb(238,117,24)" fg:x="9685" fg:w="62"/><text x="9.3615%" y="591.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (62 samples, 0.06%)</title><rect x="9.1115%" y="565" width="0.0583%" height="15" fill="rgb(242,26,26)" fg:x="9685" fg:w="62"/><text x="9.3615%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (416 samples, 0.39%)</title><rect x="9.0513%" y="629" width="0.3914%" height="15" fill="rgb(221,92,48)" fg:x="9621" fg:w="416"/><text x="9.3013%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (415 samples, 0.39%)</title><rect x="9.0523%" y="613" width="0.3904%" height="15" fill="rgb(209,209,32)" fg:x="9622" fg:w="415"/><text x="9.3023%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (384 samples, 0.36%)</title><rect x="9.0814%" y="597" width="0.3613%" height="15" fill="rgb(221,70,22)" fg:x="9653" fg:w="384"/><text x="9.3314%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (290 samples, 0.27%)</title><rect x="9.1698%" y="581" width="0.2728%" height="15" fill="rgb(248,145,5)" fg:x="9747" fg:w="290"/><text x="9.4198%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (290 samples, 0.27%)</title><rect x="9.1698%" y="565" width="0.2728%" height="15" fill="rgb(226,116,26)" fg:x="9747" fg:w="290"/><text x="9.4198%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (454 samples, 0.43%)</title><rect x="9.0212%" y="773" width="0.4271%" height="15" fill="rgb(244,5,17)" fg:x="9589" fg:w="454"/><text x="9.2712%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (454 samples, 0.43%)</title><rect x="9.0212%" y="757" width="0.4271%" height="15" fill="rgb(252,159,33)" fg:x="9589" fg:w="454"/><text x="9.2712%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (446 samples, 0.42%)</title><rect x="9.0287%" y="741" width="0.4196%" height="15" fill="rgb(206,71,0)" fg:x="9597" fg:w="446"/><text x="9.2787%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (446 samples, 0.42%)</title><rect x="9.0287%" y="725" width="0.4196%" height="15" fill="rgb(233,118,54)" fg:x="9597" fg:w="446"/><text x="9.2787%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (446 samples, 0.42%)</title><rect x="9.0287%" y="709" width="0.4196%" height="15" fill="rgb(234,83,48)" fg:x="9597" fg:w="446"/><text x="9.2787%" y="719.50"></text></g><g><title>alloc::alloc::alloc (435 samples, 0.41%)</title><rect x="9.0391%" y="693" width="0.4092%" height="15" fill="rgb(228,3,54)" fg:x="9608" fg:w="435"/><text x="9.2891%" y="703.50"></text></g><g><title>__rg_alloc (435 samples, 0.41%)</title><rect x="9.0391%" y="677" width="0.4092%" height="15" fill="rgb(226,155,13)" fg:x="9608" fg:w="435"/><text x="9.2891%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (435 samples, 0.41%)</title><rect x="9.0391%" y="661" width="0.4092%" height="15" fill="rgb(241,28,37)" fg:x="9608" fg:w="435"/><text x="9.2891%" y="671.50"></text></g><g><title>rust_alloc (431 samples, 0.41%)</title><rect x="9.0428%" y="645" width="0.4055%" height="15" fill="rgb(233,93,10)" fg:x="9612" fg:w="431"/><text x="9.2928%" y="655.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (496 samples, 0.47%)</title><rect x="9.0212%" y="901" width="0.4666%" height="15" fill="rgb(225,113,19)" fg:x="9589" fg:w="496"/><text x="9.2712%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (496 samples, 0.47%)</title><rect x="9.0212%" y="885" width="0.4666%" height="15" fill="rgb(241,2,18)" fg:x="9589" fg:w="496"/><text x="9.2712%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (496 samples, 0.47%)</title><rect x="9.0212%" y="869" width="0.4666%" height="15" fill="rgb(228,207,21)" fg:x="9589" fg:w="496"/><text x="9.2712%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (496 samples, 0.47%)</title><rect x="9.0212%" y="853" width="0.4666%" height="15" fill="rgb(213,211,35)" fg:x="9589" fg:w="496"/><text x="9.2712%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (496 samples, 0.47%)</title><rect x="9.0212%" y="837" width="0.4666%" height="15" fill="rgb(209,83,10)" fg:x="9589" fg:w="496"/><text x="9.2712%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (496 samples, 0.47%)</title><rect x="9.0212%" y="821" width="0.4666%" height="15" fill="rgb(209,164,1)" fg:x="9589" fg:w="496"/><text x="9.2712%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (496 samples, 0.47%)</title><rect x="9.0212%" y="805" width="0.4666%" height="15" fill="rgb(213,184,43)" fg:x="9589" fg:w="496"/><text x="9.2712%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (496 samples, 0.47%)</title><rect x="9.0212%" y="789" width="0.4666%" height="15" fill="rgb(231,61,34)" fg:x="9589" fg:w="496"/><text x="9.2712%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (42 samples, 0.04%)</title><rect x="9.4483%" y="773" width="0.0395%" height="15" fill="rgb(235,75,3)" fg:x="10043" fg:w="42"/><text x="9.6983%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (42 samples, 0.04%)</title><rect x="9.4483%" y="757" width="0.0395%" height="15" fill="rgb(220,106,47)" fg:x="10043" fg:w="42"/><text x="9.6983%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (37 samples, 0.03%)</title><rect x="9.4530%" y="741" width="0.0348%" height="15" fill="rgb(210,196,33)" fg:x="10048" fg:w="37"/><text x="9.7030%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (611 samples, 0.57%)</title><rect x="9.4878%" y="901" width="0.5748%" height="15" fill="rgb(229,154,42)" fg:x="10085" fg:w="611"/><text x="9.7378%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (352 samples, 0.33%)</title><rect x="10.0749%" y="885" width="0.3312%" height="15" fill="rgb(228,114,26)" fg:x="10709" fg:w="352"/><text x="10.3249%" y="895.50"></text></g><g><title>aligned_size (21 samples, 0.02%)</title><rect x="10.4089%" y="773" width="0.0198%" height="15" fill="rgb(208,144,1)" fg:x="11064" fg:w="21"/><text x="10.6589%" y="783.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="10.4286%" y="741" width="0.0122%" height="15" fill="rgb(239,112,37)" fg:x="11085" fg:w="13"/><text x="10.6786%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="10.4700%" y="613" width="0.0113%" height="15" fill="rgb(210,96,50)" fg:x="11129" fg:w="12"/><text x="10.7200%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="10.4710%" y="597" width="0.0103%" height="15" fill="rgb(222,178,2)" fg:x="11130" fg:w="11"/><text x="10.7210%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (42 samples, 0.04%)</title><rect x="10.4568%" y="661" width="0.0395%" height="15" fill="rgb(226,74,18)" fg:x="11115" fg:w="42"/><text x="10.7068%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (42 samples, 0.04%)</title><rect x="10.4568%" y="645" width="0.0395%" height="15" fill="rgb(225,67,54)" fg:x="11115" fg:w="42"/><text x="10.7068%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (37 samples, 0.03%)</title><rect x="10.4616%" y="629" width="0.0348%" height="15" fill="rgb(251,92,32)" fg:x="11120" fg:w="37"/><text x="10.7116%" y="639.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (16 samples, 0.02%)</title><rect x="10.4813%" y="613" width="0.0151%" height="15" fill="rgb(228,149,22)" fg:x="11141" fg:w="16"/><text x="10.7313%" y="623.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (16 samples, 0.02%)</title><rect x="10.4813%" y="597" width="0.0151%" height="15" fill="rgb(243,54,13)" fg:x="11141" fg:w="16"/><text x="10.7313%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (55 samples, 0.05%)</title><rect x="10.4568%" y="677" width="0.0517%" height="15" fill="rgb(243,180,28)" fg:x="11115" fg:w="55"/><text x="10.7068%" y="687.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="10.4964%" y="661" width="0.0122%" height="15" fill="rgb(208,167,24)" fg:x="11157" fg:w="13"/><text x="10.7464%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="10.4964%" y="645" width="0.0122%" height="15" fill="rgb(245,73,45)" fg:x="11157" fg:w="13"/><text x="10.7464%" y="655.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="10.4964%" y="629" width="0.0122%" height="15" fill="rgb(237,203,48)" fg:x="11157" fg:w="13"/><text x="10.7464%" y="639.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="10.4964%" y="613" width="0.0122%" height="15" fill="rgb(211,197,16)" fg:x="11157" fg:w="13"/><text x="10.7464%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (77 samples, 0.07%)</title><rect x="10.4493%" y="693" width="0.0724%" height="15" fill="rgb(243,99,51)" fg:x="11107" fg:w="77"/><text x="10.6993%" y="703.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="10.5114%" y="677" width="0.0103%" height="15" fill="rgb(215,123,29)" fg:x="11173" fg:w="11"/><text x="10.7614%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="10.5114%" y="661" width="0.0103%" height="15" fill="rgb(239,186,37)" fg:x="11173" fg:w="11"/><text x="10.7614%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="10.5114%" y="645" width="0.0103%" height="15" fill="rgb(252,136,39)" fg:x="11173" fg:w="11"/><text x="10.7614%" y="655.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="10.5114%" y="629" width="0.0103%" height="15" fill="rgb(223,213,32)" fg:x="11173" fg:w="11"/><text x="10.7614%" y="639.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (67 samples, 0.06%)</title><rect x="10.5528%" y="677" width="0.0630%" height="15" fill="rgb(233,115,5)" fg:x="11217" fg:w="67"/><text x="10.8028%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (598 samples, 0.56%)</title><rect x="10.4484%" y="725" width="0.5626%" height="15" fill="rgb(207,226,44)" fg:x="11106" fg:w="598"/><text x="10.6984%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (598 samples, 0.56%)</title><rect x="10.4484%" y="709" width="0.5626%" height="15" fill="rgb(208,126,0)" fg:x="11106" fg:w="598"/><text x="10.6984%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (520 samples, 0.49%)</title><rect x="10.5218%" y="693" width="0.4892%" height="15" fill="rgb(244,66,21)" fg:x="11184" fg:w="520"/><text x="10.7718%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (420 samples, 0.40%)</title><rect x="10.6158%" y="677" width="0.3951%" height="15" fill="rgb(222,97,12)" fg:x="11284" fg:w="420"/><text x="10.8658%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (420 samples, 0.40%)</title><rect x="10.6158%" y="661" width="0.3951%" height="15" fill="rgb(219,213,19)" fg:x="11284" fg:w="420"/><text x="10.8658%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (420 samples, 0.40%)</title><rect x="10.6158%" y="645" width="0.3951%" height="15" fill="rgb(252,169,30)" fg:x="11284" fg:w="420"/><text x="10.8658%" y="655.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (18 samples, 0.02%)</title><rect x="11.0157%" y="693" width="0.0169%" height="15" fill="rgb(206,32,51)" fg:x="11709" fg:w="18"/><text x="11.2657%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (18 samples, 0.02%)</title><rect x="11.0157%" y="677" width="0.0169%" height="15" fill="rgb(250,172,42)" fg:x="11709" fg:w="18"/><text x="11.2657%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="11.0166%" y="661" width="0.0160%" height="15" fill="rgb(209,34,43)" fg:x="11710" fg:w="17"/><text x="11.2666%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (23 samples, 0.02%)</title><rect x="11.0326%" y="693" width="0.0216%" height="15" fill="rgb(223,11,35)" fg:x="11727" fg:w="23"/><text x="11.2826%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (23 samples, 0.02%)</title><rect x="11.0326%" y="677" width="0.0216%" height="15" fill="rgb(251,219,26)" fg:x="11727" fg:w="23"/><text x="11.2826%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="11.0110%" y="725" width="0.0442%" height="15" fill="rgb(231,119,3)" fg:x="11704" fg:w="47"/><text x="11.2610%" y="735.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (43 samples, 0.04%)</title><rect x="11.0147%" y="709" width="0.0405%" height="15" fill="rgb(216,97,11)" fg:x="11708" fg:w="43"/><text x="11.2647%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="11.0589%" y="693" width="0.0160%" height="15" fill="rgb(223,59,9)" fg:x="11755" fg:w="17"/><text x="11.3089%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="11.0552%" y="725" width="0.0207%" height="15" fill="rgb(233,93,31)" fg:x="11751" fg:w="22"/><text x="11.3052%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="11.0561%" y="709" width="0.0198%" height="15" fill="rgb(239,81,33)" fg:x="11752" fg:w="21"/><text x="11.3061%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (831 samples, 0.78%)</title><rect x="10.4286%" y="773" width="0.7818%" height="15" fill="rgb(213,120,34)" fg:x="11085" fg:w="831"/><text x="10.6786%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (831 samples, 0.78%)</title><rect x="10.4286%" y="757" width="0.7818%" height="15" fill="rgb(243,49,53)" fg:x="11085" fg:w="831"/><text x="10.6786%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (818 samples, 0.77%)</title><rect x="10.4409%" y="741" width="0.7696%" height="15" fill="rgb(247,216,33)" fg:x="11098" fg:w="818"/><text x="10.6909%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::take (136 samples, 0.13%)</title><rect x="11.0825%" y="725" width="0.1279%" height="15" fill="rgb(226,26,14)" fg:x="11780" fg:w="136"/><text x="11.3325%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (136 samples, 0.13%)</title><rect x="11.0825%" y="709" width="0.1279%" height="15" fill="rgb(215,49,53)" fg:x="11780" fg:w="136"/><text x="11.3325%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,222 samples, 1.15%)</title><rect x="10.0627%" y="901" width="1.1496%" height="15" fill="rgb(245,162,40)" fg:x="10696" fg:w="1222"/><text x="10.3127%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (857 samples, 0.81%)</title><rect x="10.4060%" y="885" width="0.8063%" height="15" fill="rgb(229,68,17)" fg:x="11061" fg:w="857"/><text x="10.6560%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (857 samples, 0.81%)</title><rect x="10.4060%" y="869" width="0.8063%" height="15" fill="rgb(213,182,10)" fg:x="11061" fg:w="857"/><text x="10.6560%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (857 samples, 0.81%)</title><rect x="10.4060%" y="853" width="0.8063%" height="15" fill="rgb(245,125,30)" fg:x="11061" fg:w="857"/><text x="10.6560%" y="863.50"></text></g><g><title>alloc::alloc::alloc (857 samples, 0.81%)</title><rect x="10.4060%" y="837" width="0.8063%" height="15" fill="rgb(232,202,2)" fg:x="11061" fg:w="857"/><text x="10.6560%" y="847.50"></text></g><g><title>__rg_alloc (857 samples, 0.81%)</title><rect x="10.4060%" y="821" width="0.8063%" height="15" fill="rgb(237,140,51)" fg:x="11061" fg:w="857"/><text x="10.6560%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (857 samples, 0.81%)</title><rect x="10.4060%" y="805" width="0.8063%" height="15" fill="rgb(236,157,25)" fg:x="11061" fg:w="857"/><text x="10.6560%" y="815.50"></text></g><g><title>rust_alloc (854 samples, 0.80%)</title><rect x="10.4089%" y="789" width="0.8034%" height="15" fill="rgb(219,209,0)" fg:x="11064" fg:w="854"/><text x="10.6589%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="11.2264%" y="805" width="0.0122%" height="15" fill="rgb(240,116,54)" fg:x="11933" fg:w="13"/><text x="11.4764%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="11.2255%" y="853" width="0.0141%" height="15" fill="rgb(216,10,36)" fg:x="11932" fg:w="15"/><text x="11.4755%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (14 samples, 0.01%)</title><rect x="11.2264%" y="837" width="0.0132%" height="15" fill="rgb(222,72,44)" fg:x="11933" fg:w="14"/><text x="11.4764%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="11.2264%" y="821" width="0.0132%" height="15" fill="rgb(232,159,9)" fg:x="11933" fg:w="14"/><text x="11.4764%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (16 samples, 0.02%)</title><rect x="11.2255%" y="869" width="0.0151%" height="15" fill="rgb(210,39,32)" fg:x="11932" fg:w="16"/><text x="11.4755%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="11.2123%" y="885" width="0.0442%" height="15" fill="rgb(216,194,45)" fg:x="11918" fg:w="47"/><text x="11.4623%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)]&gt; (17 samples, 0.02%)</title><rect x="11.2405%" y="869" width="0.0160%" height="15" fill="rgb(218,18,35)" fg:x="11948" fg:w="17"/><text x="11.4905%" y="879.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="11.2603%" y="853" width="0.0113%" height="15" fill="rgb(207,83,51)" fg:x="11969" fg:w="12"/><text x="11.5103%" y="863.50"></text></g><g><title>rust_dealloc (22 samples, 0.02%)</title><rect x="11.2725%" y="789" width="0.0207%" height="15" fill="rgb(225,63,43)" fg:x="11982" fg:w="22"/><text x="11.5225%" y="799.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="11.3101%" y="741" width="0.0141%" height="15" fill="rgb(207,57,36)" fg:x="12022" fg:w="15"/><text x="11.5601%" y="751.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="11.3139%" y="725" width="0.0103%" height="15" fill="rgb(216,99,33)" fg:x="12026" fg:w="11"/><text x="11.5639%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (37 samples, 0.03%)</title><rect x="11.2998%" y="789" width="0.0348%" height="15" fill="rgb(225,42,16)" fg:x="12011" fg:w="37"/><text x="11.5498%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (37 samples, 0.03%)</title><rect x="11.2998%" y="773" width="0.0348%" height="15" fill="rgb(220,201,45)" fg:x="12011" fg:w="37"/><text x="11.5498%" y="783.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (35 samples, 0.03%)</title><rect x="11.3017%" y="757" width="0.0329%" height="15" fill="rgb(225,33,4)" fg:x="12013" fg:w="35"/><text x="11.5517%" y="767.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="11.3243%" y="741" width="0.0103%" height="15" fill="rgb(224,33,50)" fg:x="12037" fg:w="11"/><text x="11.5743%" y="751.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="11.3243%" y="725" width="0.0103%" height="15" fill="rgb(246,198,51)" fg:x="12037" fg:w="11"/><text x="11.5743%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (76 samples, 0.07%)</title><rect x="11.2716%" y="821" width="0.0715%" height="15" fill="rgb(205,22,4)" fg:x="11981" fg:w="76"/><text x="11.5216%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (76 samples, 0.07%)</title><rect x="11.2716%" y="805" width="0.0715%" height="15" fill="rgb(206,3,8)" fg:x="11981" fg:w="76"/><text x="11.5216%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (85 samples, 0.08%)</title><rect x="11.2716%" y="853" width="0.0800%" height="15" fill="rgb(251,23,15)" fg:x="11981" fg:w="85"/><text x="11.5216%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (85 samples, 0.08%)</title><rect x="11.2716%" y="837" width="0.0800%" height="15" fill="rgb(252,88,28)" fg:x="11981" fg:w="85"/><text x="11.5216%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (105 samples, 0.10%)</title><rect x="11.2603%" y="869" width="0.0988%" height="15" fill="rgb(212,127,14)" fg:x="11969" fg:w="105"/><text x="11.5103%" y="879.50"></text></g><g><title>rust_dealloc (119 samples, 0.11%)</title><rect x="11.2565%" y="885" width="0.1120%" height="15" fill="rgb(247,145,37)" fg:x="11965" fg:w="119"/><text x="11.5065%" y="895.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (25 samples, 0.02%)</title><rect x="11.3694%" y="869" width="0.0235%" height="15" fill="rgb(209,117,53)" fg:x="12085" fg:w="25"/><text x="11.6194%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (199 samples, 0.19%)</title><rect x="11.2123%" y="901" width="0.1872%" height="15" fill="rgb(212,90,42)" fg:x="11918" fg:w="199"/><text x="11.4623%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (33 samples, 0.03%)</title><rect x="11.3685%" y="885" width="0.0310%" height="15" fill="rgb(218,164,37)" fg:x="12084" fg:w="33"/><text x="11.6185%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (14 samples, 0.01%)</title><rect x="11.3995%" y="901" width="0.0132%" height="15" fill="rgb(246,65,34)" fg:x="12117" fg:w="14"/><text x="11.6495%" y="911.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="11.3995%" y="885" width="0.0132%" height="15" fill="rgb(231,100,33)" fg:x="12117" fg:w="14"/><text x="11.6495%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (11 samples, 0.01%)</title><rect x="11.4183%" y="901" width="0.0103%" height="15" fill="rgb(228,126,14)" fg:x="12137" fg:w="11"/><text x="11.6683%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (64 samples, 0.06%)</title><rect x="11.4287%" y="901" width="0.0602%" height="15" fill="rgb(215,173,21)" fg:x="12148" fg:w="64"/><text x="11.6787%" y="911.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (64 samples, 0.06%)</title><rect x="11.4287%" y="885" width="0.0602%" height="15" fill="rgb(210,6,40)" fg:x="12148" fg:w="64"/><text x="11.6787%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (64 samples, 0.06%)</title><rect x="11.4287%" y="869" width="0.0602%" height="15" fill="rgb(212,48,18)" fg:x="12148" fg:w="64"/><text x="11.6787%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (64 samples, 0.06%)</title><rect x="11.4287%" y="853" width="0.0602%" height="15" fill="rgb(230,214,11)" fg:x="12148" fg:w="64"/><text x="11.6787%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (30 samples, 0.03%)</title><rect x="11.4607%" y="837" width="0.0282%" height="15" fill="rgb(254,105,39)" fg:x="12182" fg:w="30"/><text x="11.7107%" y="847.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (30 samples, 0.03%)</title><rect x="11.4607%" y="821" width="0.0282%" height="15" fill="rgb(245,158,5)" fg:x="12182" fg:w="30"/><text x="11.7107%" y="831.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (30 samples, 0.03%)</title><rect x="11.4607%" y="805" width="0.0282%" height="15" fill="rgb(249,208,11)" fg:x="12182" fg:w="30"/><text x="11.7107%" y="815.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (26 samples, 0.02%)</title><rect x="11.4644%" y="789" width="0.0245%" height="15" fill="rgb(210,39,28)" fg:x="12186" fg:w="26"/><text x="11.7144%" y="799.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (17 samples, 0.02%)</title><rect x="11.4729%" y="773" width="0.0160%" height="15" fill="rgb(211,56,53)" fg:x="12195" fg:w="17"/><text x="11.7229%" y="783.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (19 samples, 0.02%)</title><rect x="11.4908%" y="901" width="0.0179%" height="15" fill="rgb(226,201,30)" fg:x="12214" fg:w="19"/><text x="11.7408%" y="911.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (4,541 samples, 4.27%)</title><rect x="7.2949%" y="981" width="4.2721%" height="15" fill="rgb(239,101,34)" fg:x="7754" fg:w="4541"/><text x="7.5449%" y="991.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,541 samples, 4.27%)</title><rect x="7.2949%" y="965" width="4.2721%" height="15" fill="rgb(226,209,5)" fg:x="7754" fg:w="4541"/><text x="7.5449%" y="975.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,359 samples, 3.16%)</title><rect x="8.4069%" y="949" width="3.1601%" height="15" fill="rgb(250,105,47)" fg:x="8936" fg:w="3359"/><text x="8.6569%" y="959.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,359 samples, 3.16%)</title><rect x="8.4069%" y="933" width="3.1601%" height="15" fill="rgb(230,72,3)" fg:x="8936" fg:w="3359"/><text x="8.6569%" y="943.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,338 samples, 3.14%)</title><rect x="8.4266%" y="917" width="3.1403%" height="15" fill="rgb(232,218,39)" fg:x="8957" fg:w="3338"/><text x="8.6766%" y="927.50">tre..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (62 samples, 0.06%)</title><rect x="11.5086%" y="901" width="0.0583%" height="15" fill="rgb(248,166,6)" fg:x="12233" fg:w="62"/><text x="11.7586%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (62 samples, 0.06%)</title><rect x="11.5086%" y="885" width="0.0583%" height="15" fill="rgb(247,89,20)" fg:x="12233" fg:w="62"/><text x="11.7586%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (62 samples, 0.06%)</title><rect x="11.5086%" y="869" width="0.0583%" height="15" fill="rgb(248,130,54)" fg:x="12233" fg:w="62"/><text x="11.7586%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (44 samples, 0.04%)</title><rect x="11.5256%" y="853" width="0.0414%" height="15" fill="rgb(234,196,4)" fg:x="12251" fg:w="44"/><text x="11.7756%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (80 samples, 0.08%)</title><rect x="11.6573%" y="917" width="0.0753%" height="15" fill="rgb(250,143,31)" fg:x="12391" fg:w="80"/><text x="11.9073%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (64 samples, 0.06%)</title><rect x="11.6723%" y="901" width="0.0602%" height="15" fill="rgb(211,110,34)" fg:x="12407" fg:w="64"/><text x="11.9223%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (13 samples, 0.01%)</title><rect x="11.7203%" y="885" width="0.0122%" height="15" fill="rgb(215,124,48)" fg:x="12458" fg:w="13"/><text x="11.9703%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (907 samples, 0.85%)</title><rect x="11.5867%" y="933" width="0.8533%" height="15" fill="rgb(216,46,13)" fg:x="12316" fg:w="907"/><text x="11.8367%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (752 samples, 0.71%)</title><rect x="11.7326%" y="917" width="0.7075%" height="15" fill="rgb(205,184,25)" fg:x="12471" fg:w="752"/><text x="11.9826%" y="927.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,389 samples, 1.31%)</title><rect x="11.5670%" y="965" width="1.3068%" height="15" fill="rgb(228,1,10)" fg:x="12295" fg:w="1389"/><text x="11.8170%" y="975.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,389 samples, 1.31%)</title><rect x="11.5670%" y="949" width="1.3068%" height="15" fill="rgb(213,116,27)" fg:x="12295" fg:w="1389"/><text x="11.8170%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (461 samples, 0.43%)</title><rect x="12.4400%" y="933" width="0.4337%" height="15" fill="rgb(241,95,50)" fg:x="13223" fg:w="461"/><text x="12.6900%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,196 samples, 6.77%)</title><rect x="6.1320%" y="1125" width="6.7699%" height="15" fill="rgb(238,48,32)" fg:x="6518" fg:w="7196"/><text x="6.3820%" y="1135.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (7,070 samples, 6.65%)</title><rect x="6.2506%" y="1109" width="6.6514%" height="15" fill="rgb(235,113,49)" fg:x="6644" fg:w="7070"/><text x="6.5006%" y="1119.50">async_exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (7,070 samples, 6.65%)</title><rect x="6.2506%" y="1093" width="6.6514%" height="15" fill="rgb(205,127,43)" fg:x="6644" fg:w="7070"/><text x="6.5006%" y="1103.50">&lt;async_st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (7,070 samples, 6.65%)</title><rect x="6.2506%" y="1077" width="6.6514%" height="15" fill="rgb(250,162,2)" fg:x="6644" fg:w="7070"/><text x="6.5006%" y="1087.50">async_std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,070 samples, 6.65%)</title><rect x="6.2506%" y="1061" width="6.6514%" height="15" fill="rgb(220,13,41)" fg:x="6644" fg:w="7070"/><text x="6.5006%" y="1071.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,070 samples, 6.65%)</title><rect x="6.2506%" y="1045" width="6.6514%" height="15" fill="rgb(249,221,25)" fg:x="6644" fg:w="7070"/><text x="6.5006%" y="1055.50">std::thre..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (7,070 samples, 6.65%)</title><rect x="6.2506%" y="1029" width="6.6514%" height="15" fill="rgb(215,208,19)" fg:x="6644" fg:w="7070"/><text x="6.5006%" y="1039.50">async_std..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,070 samples, 6.65%)</title><rect x="6.2506%" y="1013" width="6.6514%" height="15" fill="rgb(236,175,2)" fg:x="6644" fg:w="7070"/><text x="6.5006%" y="1023.50">&lt;async_st..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,070 samples, 6.65%)</title><rect x="6.2506%" y="997" width="6.6514%" height="15" fill="rgb(241,52,2)" fg:x="6644" fg:w="7070"/><text x="6.5006%" y="1007.50">&lt;core::fu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,419 samples, 1.33%)</title><rect x="11.5670%" y="981" width="1.3350%" height="15" fill="rgb(248,140,14)" fg:x="12295" fg:w="1419"/><text x="11.8170%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="12.8737%" y="965" width="0.0282%" height="15" fill="rgb(253,22,42)" fg:x="13684" fg:w="30"/><text x="13.1237%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (30 samples, 0.03%)</title><rect x="12.8737%" y="949" width="0.0282%" height="15" fill="rgb(234,61,47)" fg:x="13684" fg:w="30"/><text x="13.1237%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (30 samples, 0.03%)</title><rect x="12.8737%" y="933" width="0.0282%" height="15" fill="rgb(208,226,15)" fg:x="13684" fg:w="30"/><text x="13.1237%" y="943.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="12.8737%" y="917" width="0.0282%" height="15" fill="rgb(217,221,4)" fg:x="13684" fg:w="30"/><text x="13.1237%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (30 samples, 0.03%)</title><rect x="12.8737%" y="901" width="0.0282%" height="15" fill="rgb(212,174,34)" fg:x="13684" fg:w="30"/><text x="13.1237%" y="911.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="12.8737%" y="885" width="0.0282%" height="15" fill="rgb(253,83,4)" fg:x="13684" fg:w="30"/><text x="13.1237%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 0.01%)</title><rect x="12.8897%" y="869" width="0.0122%" height="15" fill="rgb(250,195,49)" fg:x="13701" fg:w="13"/><text x="13.1397%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 0.01%)</title><rect x="12.8897%" y="853" width="0.0122%" height="15" fill="rgb(241,192,25)" fg:x="13701" fg:w="13"/><text x="13.1397%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (46 samples, 0.04%)</title><rect x="12.9020%" y="1125" width="0.0433%" height="15" fill="rgb(208,124,10)" fg:x="13714" fg:w="46"/><text x="13.1520%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (40 samples, 0.04%)</title><rect x="12.9640%" y="1125" width="0.0376%" height="15" fill="rgb(222,33,0)" fg:x="13780" fg:w="40"/><text x="13.2140%" y="1135.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (22 samples, 0.02%)</title><rect x="13.0017%" y="1125" width="0.0207%" height="15" fill="rgb(234,209,28)" fg:x="13820" fg:w="22"/><text x="13.2517%" y="1135.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="13.0252%" y="1125" width="0.0113%" height="15" fill="rgb(224,11,23)" fg:x="13845" fg:w="12"/><text x="13.2752%" y="1135.50"></text></g><g><title>__clock_gettime_2 (65 samples, 0.06%)</title><rect x="13.0365%" y="1125" width="0.0612%" height="15" fill="rgb(232,99,1)" fg:x="13857" fg:w="65"/><text x="13.2865%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (133 samples, 0.13%)</title><rect x="13.0976%" y="1125" width="0.1251%" height="15" fill="rgb(237,95,45)" fg:x="13922" fg:w="133"/><text x="13.3476%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (21 samples, 0.02%)</title><rect x="13.2284%" y="1125" width="0.0198%" height="15" fill="rgb(208,109,11)" fg:x="14061" fg:w="21"/><text x="13.4784%" y="1135.50"></text></g><g><title>abi_stable::erased_types::iterator::next (41 samples, 0.04%)</title><rect x="13.2482%" y="1125" width="0.0386%" height="15" fill="rgb(216,190,48)" fg:x="14082" fg:w="41"/><text x="13.4982%" y="1135.50"></text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (11 samples, 0.01%)</title><rect x="13.2867%" y="1125" width="0.0103%" height="15" fill="rgb(251,171,36)" fg:x="14123" fg:w="11"/><text x="13.5367%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="13.3018%" y="1109" width="0.0245%" height="15" fill="rgb(230,62,22)" fg:x="14139" fg:w="26"/><text x="13.5518%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (26 samples, 0.02%)</title><rect x="13.3018%" y="1093" width="0.0245%" height="15" fill="rgb(225,114,35)" fg:x="14139" fg:w="26"/><text x="13.5518%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.02%)</title><rect x="13.3018%" y="1077" width="0.0245%" height="15" fill="rgb(215,118,42)" fg:x="14139" fg:w="26"/><text x="13.5518%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.02%)</title><rect x="13.3018%" y="1061" width="0.0245%" height="15" fill="rgb(243,119,21)" fg:x="14139" fg:w="26"/><text x="13.5518%" y="1071.50"></text></g><g><title>__rg_dealloc (26 samples, 0.02%)</title><rect x="13.3018%" y="1045" width="0.0245%" height="15" fill="rgb(252,177,53)" fg:x="14139" fg:w="26"/><text x="13.5518%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (26 samples, 0.02%)</title><rect x="13.3018%" y="1029" width="0.0245%" height="15" fill="rgb(237,209,29)" fg:x="14139" fg:w="26"/><text x="13.5518%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (62 samples, 0.06%)</title><rect x="13.2971%" y="1125" width="0.0583%" height="15" fill="rgb(212,65,23)" fg:x="14134" fg:w="62"/><text x="13.5471%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="13.3262%" y="1109" width="0.0292%" height="15" fill="rgb(230,222,46)" fg:x="14165" fg:w="31"/><text x="13.5762%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (31 samples, 0.03%)</title><rect x="13.3262%" y="1093" width="0.0292%" height="15" fill="rgb(215,135,32)" fg:x="14165" fg:w="31"/><text x="13.5762%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.03%)</title><rect x="13.3262%" y="1077" width="0.0292%" height="15" fill="rgb(246,101,22)" fg:x="14165" fg:w="31"/><text x="13.5762%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (31 samples, 0.03%)</title><rect x="13.3262%" y="1061" width="0.0292%" height="15" fill="rgb(206,107,13)" fg:x="14165" fg:w="31"/><text x="13.5762%" y="1071.50"></text></g><g><title>__rg_dealloc (31 samples, 0.03%)</title><rect x="13.3262%" y="1045" width="0.0292%" height="15" fill="rgb(250,100,44)" fg:x="14165" fg:w="31"/><text x="13.5762%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (31 samples, 0.03%)</title><rect x="13.3262%" y="1029" width="0.0292%" height="15" fill="rgb(231,147,38)" fg:x="14165" fg:w="31"/><text x="13.5762%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (21 samples, 0.02%)</title><rect x="13.3705%" y="1125" width="0.0198%" height="15" fill="rgb(229,8,40)" fg:x="14212" fg:w="21"/><text x="13.6205%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="13.4213%" y="917" width="0.0132%" height="15" fill="rgb(221,135,30)" fg:x="14266" fg:w="14"/><text x="13.6713%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="13.4213%" y="901" width="0.0132%" height="15" fill="rgb(249,193,18)" fg:x="14266" fg:w="14"/><text x="13.6713%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="13.4213%" y="885" width="0.0132%" height="15" fill="rgb(209,133,39)" fg:x="14266" fg:w="14"/><text x="13.6713%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="13.4213%" y="869" width="0.0132%" height="15" fill="rgb(232,100,14)" fg:x="14266" fg:w="14"/><text x="13.6713%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="13.4213%" y="853" width="0.0132%" height="15" fill="rgb(224,185,1)" fg:x="14266" fg:w="14"/><text x="13.6713%" y="863.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="13.4213%" y="837" width="0.0132%" height="15" fill="rgb(223,139,8)" fg:x="14266" fg:w="14"/><text x="13.6713%" y="847.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="13.4213%" y="821" width="0.0132%" height="15" fill="rgb(232,213,38)" fg:x="14266" fg:w="14"/><text x="13.6713%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="13.4213%" y="805" width="0.0132%" height="15" fill="rgb(207,94,22)" fg:x="14266" fg:w="14"/><text x="13.6713%" y="815.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="13.4213%" y="1029" width="0.0216%" height="15" fill="rgb(219,183,54)" fg:x="14266" fg:w="23"/><text x="13.6713%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (23 samples, 0.02%)</title><rect x="13.4213%" y="1013" width="0.0216%" height="15" fill="rgb(216,185,54)" fg:x="14266" fg:w="23"/><text x="13.6713%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (23 samples, 0.02%)</title><rect x="13.4213%" y="997" width="0.0216%" height="15" fill="rgb(254,217,39)" fg:x="14266" fg:w="23"/><text x="13.6713%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (23 samples, 0.02%)</title><rect x="13.4213%" y="981" width="0.0216%" height="15" fill="rgb(240,178,23)" fg:x="14266" fg:w="23"/><text x="13.6713%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.02%)</title><rect x="13.4213%" y="965" width="0.0216%" height="15" fill="rgb(218,11,47)" fg:x="14266" fg:w="23"/><text x="13.6713%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.02%)</title><rect x="13.4213%" y="949" width="0.0216%" height="15" fill="rgb(218,51,51)" fg:x="14266" fg:w="23"/><text x="13.6713%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.02%)</title><rect x="13.4213%" y="933" width="0.0216%" height="15" fill="rgb(238,126,27)" fg:x="14266" fg:w="23"/><text x="13.6713%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (57 samples, 0.05%)</title><rect x="13.3902%" y="1125" width="0.0536%" height="15" fill="rgb(249,202,22)" fg:x="14233" fg:w="57"/><text x="13.6402%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (24 samples, 0.02%)</title><rect x="13.4213%" y="1109" width="0.0226%" height="15" fill="rgb(254,195,49)" fg:x="14266" fg:w="24"/><text x="13.6713%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 0.02%)</title><rect x="13.4213%" y="1093" width="0.0226%" height="15" fill="rgb(208,123,14)" fg:x="14266" fg:w="24"/><text x="13.6713%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.02%)</title><rect x="13.4213%" y="1077" width="0.0226%" height="15" fill="rgb(224,200,8)" fg:x="14266" fg:w="24"/><text x="13.6713%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.02%)</title><rect x="13.4213%" y="1061" width="0.0226%" height="15" fill="rgb(217,61,36)" fg:x="14266" fg:w="24"/><text x="13.6713%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.02%)</title><rect x="13.4213%" y="1045" width="0.0226%" height="15" fill="rgb(206,35,45)" fg:x="14266" fg:w="24"/><text x="13.6713%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="13.4881%" y="1077" width="0.0103%" height="15" fill="rgb(217,65,33)" fg:x="14337" fg:w="11"/><text x="13.7381%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="13.4881%" y="1061" width="0.0103%" height="15" fill="rgb(222,158,48)" fg:x="14337" fg:w="11"/><text x="13.7381%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="13.4881%" y="1045" width="0.0103%" height="15" fill="rgb(254,2,54)" fg:x="14337" fg:w="11"/><text x="13.7381%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="13.4881%" y="1029" width="0.0103%" height="15" fill="rgb(250,143,38)" fg:x="14337" fg:w="11"/><text x="13.7381%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="13.4881%" y="1013" width="0.0103%" height="15" fill="rgb(248,25,0)" fg:x="14337" fg:w="11"/><text x="13.7381%" y="1023.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="13.4881%" y="997" width="0.0103%" height="15" fill="rgb(206,152,27)" fg:x="14337" fg:w="11"/><text x="13.7381%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="13.4881%" y="981" width="0.0103%" height="15" fill="rgb(240,77,30)" fg:x="14337" fg:w="11"/><text x="13.7381%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (16 samples, 0.02%)</title><rect x="13.4984%" y="1077" width="0.0151%" height="15" fill="rgb(231,5,3)" fg:x="14348" fg:w="16"/><text x="13.7484%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (84 samples, 0.08%)</title><rect x="13.4438%" y="1125" width="0.0790%" height="15" fill="rgb(207,226,32)" fg:x="14290" fg:w="84"/><text x="13.6938%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (37 samples, 0.03%)</title><rect x="13.4881%" y="1109" width="0.0348%" height="15" fill="rgb(222,207,47)" fg:x="14337" fg:w="37"/><text x="13.7381%" y="1119.50"></text></g><g><title>core::mem::drop (37 samples, 0.03%)</title><rect x="13.4881%" y="1093" width="0.0348%" height="15" fill="rgb(229,115,45)" fg:x="14337" fg:w="37"/><text x="13.7381%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.02%)</title><rect x="13.5229%" y="1125" width="0.0151%" height="15" fill="rgb(224,191,6)" fg:x="14374" fg:w="16"/><text x="13.7729%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="13.5229%" y="1109" width="0.0151%" height="15" fill="rgb(230,227,24)" fg:x="14374" fg:w="16"/><text x="13.7729%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (16 samples, 0.02%)</title><rect x="13.5229%" y="1093" width="0.0151%" height="15" fill="rgb(228,80,19)" fg:x="14374" fg:w="16"/><text x="13.7729%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (16 samples, 0.02%)</title><rect x="13.5229%" y="1077" width="0.0151%" height="15" fill="rgb(247,229,0)" fg:x="14374" fg:w="16"/><text x="13.7729%" y="1087.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (61 samples, 0.06%)</title><rect x="13.5379%" y="1125" width="0.0574%" height="15" fill="rgb(237,194,15)" fg:x="14390" fg:w="61"/><text x="13.7879%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="13.5831%" y="1109" width="0.0122%" height="15" fill="rgb(219,203,20)" fg:x="14438" fg:w="13"/><text x="13.8331%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (15 samples, 0.01%)</title><rect x="13.5981%" y="1125" width="0.0141%" height="15" fill="rgb(234,128,8)" fg:x="14454" fg:w="15"/><text x="13.8481%" y="1135.50"></text></g><g><title>async_ffi::DropBomb::with (15 samples, 0.01%)</title><rect x="13.5981%" y="1109" width="0.0141%" height="15" fill="rgb(248,202,8)" fg:x="14454" fg:w="15"/><text x="13.8481%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (15 samples, 0.01%)</title><rect x="13.5981%" y="1093" width="0.0141%" height="15" fill="rgb(206,104,37)" fg:x="14454" fg:w="15"/><text x="13.8481%" y="1103.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="13.5981%" y="1077" width="0.0141%" height="15" fill="rgb(223,8,27)" fg:x="14454" fg:w="15"/><text x="13.8481%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (25 samples, 0.02%)</title><rect x="13.6122%" y="1125" width="0.0235%" height="15" fill="rgb(216,217,28)" fg:x="14469" fg:w="25"/><text x="13.8622%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (60 samples, 0.06%)</title><rect x="13.7383%" y="517" width="0.0564%" height="15" fill="rgb(249,199,1)" fg:x="14603" fg:w="60"/><text x="13.9883%" y="527.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="14.0695%" y="501" width="0.0282%" height="15" fill="rgb(240,85,17)" fg:x="14955" fg:w="30"/><text x="14.3195%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (18 samples, 0.02%)</title><rect x="14.1269%" y="485" width="0.0169%" height="15" fill="rgb(206,108,45)" fg:x="15016" fg:w="18"/><text x="14.3769%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (18 samples, 0.02%)</title><rect x="14.1269%" y="469" width="0.0169%" height="15" fill="rgb(245,210,41)" fg:x="15016" fg:w="18"/><text x="14.3769%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (18 samples, 0.02%)</title><rect x="14.1269%" y="453" width="0.0169%" height="15" fill="rgb(206,13,37)" fg:x="15016" fg:w="18"/><text x="14.3769%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (18 samples, 0.02%)</title><rect x="14.1269%" y="437" width="0.0169%" height="15" fill="rgb(250,61,18)" fg:x="15016" fg:w="18"/><text x="14.3769%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="14.1269%" y="421" width="0.0169%" height="15" fill="rgb(235,172,48)" fg:x="15016" fg:w="18"/><text x="14.3769%" y="431.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (61 samples, 0.06%)</title><rect x="14.0977%" y="501" width="0.0574%" height="15" fill="rgb(249,201,17)" fg:x="14985" fg:w="61"/><text x="14.3477%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="14.1438%" y="485" width="0.0113%" height="15" fill="rgb(219,208,6)" fg:x="15034" fg:w="12"/><text x="14.3938%" y="495.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="14.1438%" y="469" width="0.0113%" height="15" fill="rgb(248,31,23)" fg:x="15034" fg:w="12"/><text x="14.3938%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="14.1438%" y="453" width="0.0113%" height="15" fill="rgb(245,15,42)" fg:x="15034" fg:w="12"/><text x="14.3938%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="14.1438%" y="437" width="0.0113%" height="15" fill="rgb(222,217,39)" fg:x="15034" fg:w="12"/><text x="14.3938%" y="447.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="14.1438%" y="421" width="0.0113%" height="15" fill="rgb(210,219,27)" fg:x="15034" fg:w="12"/><text x="14.3938%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="14.1438%" y="405" width="0.0113%" height="15" fill="rgb(252,166,36)" fg:x="15034" fg:w="12"/><text x="14.3938%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::deref::Deref for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::deref (24 samples, 0.02%)</title><rect x="14.1551%" y="501" width="0.0226%" height="15" fill="rgb(245,132,34)" fg:x="15046" fg:w="24"/><text x="14.4051%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (24 samples, 0.02%)</title><rect x="14.1551%" y="485" width="0.0226%" height="15" fill="rgb(236,54,3)" fg:x="15046" fg:w="24"/><text x="14.4051%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.04%)</title><rect x="14.1833%" y="437" width="0.0423%" height="15" fill="rgb(241,173,43)" fg:x="15076" fg:w="45"/><text x="14.4333%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (55 samples, 0.05%)</title><rect x="14.1833%" y="501" width="0.0517%" height="15" fill="rgb(215,190,9)" fg:x="15076" fg:w="55"/><text x="14.4333%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (55 samples, 0.05%)</title><rect x="14.1833%" y="485" width="0.0517%" height="15" fill="rgb(242,101,16)" fg:x="15076" fg:w="55"/><text x="14.4333%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55 samples, 0.05%)</title><rect x="14.1833%" y="469" width="0.0517%" height="15" fill="rgb(223,190,21)" fg:x="15076" fg:w="55"/><text x="14.4333%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (55 samples, 0.05%)</title><rect x="14.1833%" y="453" width="0.0517%" height="15" fill="rgb(215,228,25)" fg:x="15076" fg:w="55"/><text x="14.4333%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="14.3677%" y="197" width="0.0301%" height="15" fill="rgb(225,36,22)" fg:x="15272" fg:w="32"/><text x="14.6177%" y="207.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (31 samples, 0.03%)</title><rect x="14.3686%" y="181" width="0.0292%" height="15" fill="rgb(251,106,46)" fg:x="15273" fg:w="31"/><text x="14.6186%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (87 samples, 0.08%)</title><rect x="14.3216%" y="245" width="0.0818%" height="15" fill="rgb(208,90,1)" fg:x="15223" fg:w="87"/><text x="14.5716%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (87 samples, 0.08%)</title><rect x="14.3216%" y="229" width="0.0818%" height="15" fill="rgb(243,10,4)" fg:x="15223" fg:w="87"/><text x="14.5716%" y="239.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (78 samples, 0.07%)</title><rect x="14.3301%" y="213" width="0.0734%" height="15" fill="rgb(212,137,27)" fg:x="15232" fg:w="78"/><text x="14.5801%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (108 samples, 0.10%)</title><rect x="14.3141%" y="277" width="0.1016%" height="15" fill="rgb(231,220,49)" fg:x="15215" fg:w="108"/><text x="14.5641%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (108 samples, 0.10%)</title><rect x="14.3141%" y="261" width="0.1016%" height="15" fill="rgb(237,96,20)" fg:x="15215" fg:w="108"/><text x="14.5641%" y="271.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="14.4034%" y="245" width="0.0122%" height="15" fill="rgb(239,229,30)" fg:x="15310" fg:w="13"/><text x="14.6534%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (115 samples, 0.11%)</title><rect x="14.3141%" y="309" width="0.1082%" height="15" fill="rgb(219,65,33)" fg:x="15215" fg:w="115"/><text x="14.5641%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (115 samples, 0.11%)</title><rect x="14.3141%" y="293" width="0.1082%" height="15" fill="rgb(243,134,7)" fg:x="15215" fg:w="115"/><text x="14.5641%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (124 samples, 0.12%)</title><rect x="14.3112%" y="325" width="0.1167%" height="15" fill="rgb(216,177,54)" fg:x="15212" fg:w="124"/><text x="14.5612%" y="335.50"></text></g><g><title>rust_dealloc (139 samples, 0.13%)</title><rect x="14.3037%" y="341" width="0.1308%" height="15" fill="rgb(211,160,20)" fg:x="15204" fg:w="139"/><text x="14.5537%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (26 samples, 0.02%)</title><rect x="14.4373%" y="325" width="0.0245%" height="15" fill="rgb(239,85,39)" fg:x="15346" fg:w="26"/><text x="14.6873%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (214 samples, 0.20%)</title><rect x="14.2652%" y="405" width="0.2013%" height="15" fill="rgb(232,125,22)" fg:x="15163" fg:w="214"/><text x="14.5152%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (209 samples, 0.20%)</title><rect x="14.2699%" y="389" width="0.1966%" height="15" fill="rgb(244,57,34)" fg:x="15168" fg:w="209"/><text x="14.5199%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (193 samples, 0.18%)</title><rect x="14.2849%" y="373" width="0.1816%" height="15" fill="rgb(214,203,32)" fg:x="15184" fg:w="193"/><text x="14.5349%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (193 samples, 0.18%)</title><rect x="14.2849%" y="357" width="0.1816%" height="15" fill="rgb(207,58,43)" fg:x="15184" fg:w="193"/><text x="14.5349%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (34 samples, 0.03%)</title><rect x="14.4345%" y="341" width="0.0320%" height="15" fill="rgb(215,193,15)" fg:x="15343" fg:w="34"/><text x="14.6845%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (246 samples, 0.23%)</title><rect x="14.2463%" y="469" width="0.2314%" height="15" fill="rgb(232,15,44)" fg:x="15143" fg:w="246"/><text x="14.4963%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (238 samples, 0.22%)</title><rect x="14.2539%" y="453" width="0.2239%" height="15" fill="rgb(212,3,48)" fg:x="15151" fg:w="238"/><text x="14.5039%" y="463.50"></text></g><g><title>core::mem::drop (226 samples, 0.21%)</title><rect x="14.2652%" y="437" width="0.2126%" height="15" fill="rgb(218,128,7)" fg:x="15163" fg:w="226"/><text x="14.5152%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (226 samples, 0.21%)</title><rect x="14.2652%" y="421" width="0.2126%" height="15" fill="rgb(226,216,39)" fg:x="15163" fg:w="226"/><text x="14.5152%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="14.4665%" y="405" width="0.0113%" height="15" fill="rgb(243,47,51)" fg:x="15377" fg:w="12"/><text x="14.7165%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="14.4665%" y="389" width="0.0113%" height="15" fill="rgb(241,183,40)" fg:x="15377" fg:w="12"/><text x="14.7165%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="14.4665%" y="373" width="0.0113%" height="15" fill="rgb(231,217,32)" fg:x="15377" fg:w="12"/><text x="14.7165%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="14.4665%" y="357" width="0.0113%" height="15" fill="rgb(229,61,38)" fg:x="15377" fg:w="12"/><text x="14.7165%" y="367.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="14.4665%" y="341" width="0.0113%" height="15" fill="rgb(225,210,5)" fg:x="15377" fg:w="12"/><text x="14.7165%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="14.4665%" y="325" width="0.0113%" height="15" fill="rgb(231,79,45)" fg:x="15377" fg:w="12"/><text x="14.7165%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (19 samples, 0.02%)</title><rect x="14.5098%" y="373" width="0.0179%" height="15" fill="rgb(224,100,7)" fg:x="15423" fg:w="19"/><text x="14.7598%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (19 samples, 0.02%)</title><rect x="14.5098%" y="357" width="0.0179%" height="15" fill="rgb(241,198,18)" fg:x="15423" fg:w="19"/><text x="14.7598%" y="367.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (19 samples, 0.02%)</title><rect x="14.5098%" y="341" width="0.0179%" height="15" fill="rgb(252,97,53)" fg:x="15423" fg:w="19"/><text x="14.7598%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (42 samples, 0.04%)</title><rect x="14.4966%" y="405" width="0.0395%" height="15" fill="rgb(220,88,7)" fg:x="15409" fg:w="42"/><text x="14.7466%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (42 samples, 0.04%)</title><rect x="14.4966%" y="389" width="0.0395%" height="15" fill="rgb(213,176,14)" fg:x="15409" fg:w="42"/><text x="14.7466%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (57 samples, 0.05%)</title><rect x="14.4862%" y="453" width="0.0536%" height="15" fill="rgb(246,73,7)" fg:x="15398" fg:w="57"/><text x="14.7362%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (46 samples, 0.04%)</title><rect x="14.4966%" y="437" width="0.0433%" height="15" fill="rgb(245,64,36)" fg:x="15409" fg:w="46"/><text x="14.7466%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (46 samples, 0.04%)</title><rect x="14.4966%" y="421" width="0.0433%" height="15" fill="rgb(245,80,10)" fg:x="15409" fg:w="46"/><text x="14.7466%" y="431.50"></text></g><g><title>rust_dealloc (69 samples, 0.06%)</title><rect x="14.4778%" y="469" width="0.0649%" height="15" fill="rgb(232,107,50)" fg:x="15389" fg:w="69"/><text x="14.7278%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (328 samples, 0.31%)</title><rect x="14.2350%" y="501" width="0.3086%" height="15" fill="rgb(253,3,0)" fg:x="15131" fg:w="328"/><text x="14.4850%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (328 samples, 0.31%)</title><rect x="14.2350%" y="485" width="0.3086%" height="15" fill="rgb(212,99,53)" fg:x="15131" fg:w="328"/><text x="14.4850%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::private::RVec&lt;T&gt;::buffer_mut (11 samples, 0.01%)</title><rect x="14.5794%" y="373" width="0.0103%" height="15" fill="rgb(249,111,54)" fg:x="15497" fg:w="11"/><text x="14.8294%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (22 samples, 0.02%)</title><rect x="14.5737%" y="405" width="0.0207%" height="15" fill="rgb(249,55,30)" fg:x="15491" fg:w="22"/><text x="14.8237%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (22 samples, 0.02%)</title><rect x="14.5737%" y="389" width="0.0207%" height="15" fill="rgb(237,47,42)" fg:x="15491" fg:w="22"/><text x="14.8237%" y="399.50"></text></g><g><title>rust_dealloc (16 samples, 0.02%)</title><rect x="14.6029%" y="389" width="0.0151%" height="15" fill="rgb(211,20,18)" fg:x="15522" fg:w="16"/><text x="14.8529%" y="399.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="14.6255%" y="373" width="0.0122%" height="15" fill="rgb(231,203,46)" fg:x="15546" fg:w="13"/><text x="14.8755%" y="383.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="14.6264%" y="357" width="0.0113%" height="15" fill="rgb(237,142,3)" fg:x="15547" fg:w="12"/><text x="14.8764%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (17 samples, 0.02%)</title><rect x="14.7130%" y="277" width="0.0160%" height="15" fill="rgb(241,107,1)" fg:x="15639" fg:w="17"/><text x="14.9630%" y="287.50"></text></g><g><title> (17 samples, 0.02%)</title><rect x="14.7130%" y="261" width="0.0160%" height="15" fill="rgb(229,83,13)" fg:x="15639" fg:w="17"/><text x="14.9630%" y="271.50"></text></g><g><title>snmalloc::Remote::set_info (25 samples, 0.02%)</title><rect x="14.7290%" y="277" width="0.0235%" height="15" fill="rgb(241,91,40)" fg:x="15656" fg:w="25"/><text x="14.9790%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (125 samples, 0.12%)</title><rect x="14.6518%" y="309" width="0.1176%" height="15" fill="rgb(225,3,45)" fg:x="15574" fg:w="125"/><text x="14.9018%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (107 samples, 0.10%)</title><rect x="14.6687%" y="293" width="0.1007%" height="15" fill="rgb(244,223,14)" fg:x="15592" fg:w="107"/><text x="14.9187%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (18 samples, 0.02%)</title><rect x="14.7525%" y="277" width="0.0169%" height="15" fill="rgb(224,124,37)" fg:x="15681" fg:w="18"/><text x="15.0025%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (157 samples, 0.15%)</title><rect x="14.6377%" y="341" width="0.1477%" height="15" fill="rgb(251,171,30)" fg:x="15559" fg:w="157"/><text x="14.8877%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (157 samples, 0.15%)</title><rect x="14.6377%" y="325" width="0.1477%" height="15" fill="rgb(236,46,54)" fg:x="15559" fg:w="157"/><text x="14.8877%" y="335.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (17 samples, 0.02%)</title><rect x="14.7694%" y="309" width="0.0160%" height="15" fill="rgb(245,213,5)" fg:x="15699" fg:w="17"/><text x="15.0194%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (170 samples, 0.16%)</title><rect x="14.6377%" y="373" width="0.1599%" height="15" fill="rgb(230,144,27)" fg:x="15559" fg:w="170"/><text x="14.8877%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (170 samples, 0.16%)</title><rect x="14.6377%" y="357" width="0.1599%" height="15" fill="rgb(220,86,6)" fg:x="15559" fg:w="170"/><text x="14.8877%" y="367.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="14.7854%" y="341" width="0.0122%" height="15" fill="rgb(240,20,13)" fg:x="15716" fg:w="13"/><text x="15.0354%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="14.7854%" y="325" width="0.0122%" height="15" fill="rgb(217,89,34)" fg:x="15716" fg:w="13"/><text x="15.0354%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="14.7854%" y="309" width="0.0122%" height="15" fill="rgb(229,13,5)" fg:x="15716" fg:w="13"/><text x="15.0354%" y="319.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="14.7854%" y="293" width="0.0122%" height="15" fill="rgb(244,67,35)" fg:x="15716" fg:w="13"/><text x="15.0354%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (198 samples, 0.19%)</title><rect x="14.6179%" y="389" width="0.1863%" height="15" fill="rgb(221,40,2)" fg:x="15538" fg:w="198"/><text x="14.8679%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (274 samples, 0.26%)</title><rect x="14.5606%" y="453" width="0.2578%" height="15" fill="rgb(237,157,21)" fg:x="15477" fg:w="274"/><text x="14.8106%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (274 samples, 0.26%)</title><rect x="14.5606%" y="437" width="0.2578%" height="15" fill="rgb(222,94,11)" fg:x="15477" fg:w="274"/><text x="14.8106%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (274 samples, 0.26%)</title><rect x="14.5606%" y="421" width="0.2578%" height="15" fill="rgb(249,113,6)" fg:x="15477" fg:w="274"/><text x="14.8106%" y="431.50"></text></g><g><title>rust_dealloc (238 samples, 0.22%)</title><rect x="14.5944%" y="405" width="0.2239%" height="15" fill="rgb(238,137,36)" fg:x="15513" fg:w="238"/><text x="14.8444%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="14.8042%" y="389" width="0.0141%" height="15" fill="rgb(210,102,26)" fg:x="15736" fg:w="15"/><text x="15.0542%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (12 samples, 0.01%)</title><rect x="14.8324%" y="389" width="0.0113%" height="15" fill="rgb(218,30,30)" fg:x="15766" fg:w="12"/><text x="15.0824%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (12 samples, 0.01%)</title><rect x="14.8324%" y="373" width="0.0113%" height="15" fill="rgb(214,67,26)" fg:x="15766" fg:w="12"/><text x="15.0824%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (15 samples, 0.01%)</title><rect x="15.3301%" y="277" width="0.0141%" height="15" fill="rgb(251,9,53)" fg:x="16295" fg:w="15"/><text x="15.5801%" y="287.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (15 samples, 0.01%)</title><rect x="15.3301%" y="261" width="0.0141%" height="15" fill="rgb(228,204,25)" fg:x="16295" fg:w="15"/><text x="15.5801%" y="271.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="15.3329%" y="245" width="0.0113%" height="15" fill="rgb(207,153,8)" fg:x="16298" fg:w="12"/><text x="15.5829%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="15.3329%" y="229" width="0.0113%" height="15" fill="rgb(242,9,16)" fg:x="16298" fg:w="12"/><text x="15.5829%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="15.3329%" y="213" width="0.0113%" height="15" fill="rgb(217,211,10)" fg:x="16298" fg:w="12"/><text x="15.5829%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="15.3329%" y="197" width="0.0113%" height="15" fill="rgb(219,228,52)" fg:x="16298" fg:w="12"/><text x="15.5829%" y="207.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.02%)</title><rect x="15.3546%" y="245" width="0.0151%" height="15" fill="rgb(231,92,29)" fg:x="16321" fg:w="16"/><text x="15.6046%" y="255.50"></text></g><g><title>rust_dealloc (34 samples, 0.03%)</title><rect x="15.3696%" y="181" width="0.0320%" height="15" fill="rgb(232,8,23)" fg:x="16337" fg:w="34"/><text x="15.6196%" y="191.50"></text></g><g><title>sizeclass_to_size (12 samples, 0.01%)</title><rect x="15.4016%" y="181" width="0.0113%" height="15" fill="rgb(216,211,34)" fg:x="16371" fg:w="12"/><text x="15.6516%" y="191.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (12 samples, 0.01%)</title><rect x="15.4016%" y="165" width="0.0113%" height="15" fill="rgb(236,151,0)" fg:x="16371" fg:w="12"/><text x="15.6516%" y="175.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (24 samples, 0.02%)</title><rect x="15.4778%" y="149" width="0.0226%" height="15" fill="rgb(209,168,3)" fg:x="16452" fg:w="24"/><text x="15.7278%" y="159.50"></text></g><g><title> (24 samples, 0.02%)</title><rect x="15.4778%" y="133" width="0.0226%" height="15" fill="rgb(208,129,28)" fg:x="16452" fg:w="24"/><text x="15.7278%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (107 samples, 0.10%)</title><rect x="15.4157%" y="181" width="0.1007%" height="15" fill="rgb(229,78,22)" fg:x="16386" fg:w="107"/><text x="15.6657%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (99 samples, 0.09%)</title><rect x="15.4233%" y="165" width="0.0931%" height="15" fill="rgb(228,187,13)" fg:x="16394" fg:w="99"/><text x="15.6733%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="15.5051%" y="149" width="0.0113%" height="15" fill="rgb(240,119,24)" fg:x="16481" fg:w="12"/><text x="15.7551%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (168 samples, 0.16%)</title><rect x="15.3696%" y="213" width="0.1581%" height="15" fill="rgb(209,194,42)" fg:x="16337" fg:w="168"/><text x="15.6196%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (168 samples, 0.16%)</title><rect x="15.3696%" y="197" width="0.1581%" height="15" fill="rgb(247,200,46)" fg:x="16337" fg:w="168"/><text x="15.6196%" y="207.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="15.5164%" y="181" width="0.0113%" height="15" fill="rgb(218,76,16)" fg:x="16493" fg:w="12"/><text x="15.7664%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (169 samples, 0.16%)</title><rect x="15.3696%" y="245" width="0.1590%" height="15" fill="rgb(225,21,48)" fg:x="16337" fg:w="169"/><text x="15.6196%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (169 samples, 0.16%)</title><rect x="15.3696%" y="229" width="0.1590%" height="15" fill="rgb(239,223,50)" fg:x="16337" fg:w="169"/><text x="15.6196%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (196 samples, 0.18%)</title><rect x="15.3508%" y="261" width="0.1844%" height="15" fill="rgb(244,45,21)" fg:x="16317" fg:w="196"/><text x="15.6008%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (742 samples, 0.70%)</title><rect x="14.8437%" y="357" width="0.6981%" height="15" fill="rgb(232,33,43)" fg:x="15778" fg:w="742"/><text x="15.0937%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (741 samples, 0.70%)</title><rect x="14.8447%" y="341" width="0.6971%" height="15" fill="rgb(209,8,3)" fg:x="15779" fg:w="741"/><text x="15.0947%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (727 samples, 0.68%)</title><rect x="14.8578%" y="325" width="0.6840%" height="15" fill="rgb(214,25,53)" fg:x="15793" fg:w="727"/><text x="15.1078%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (727 samples, 0.68%)</title><rect x="14.8578%" y="309" width="0.6840%" height="15" fill="rgb(254,186,54)" fg:x="15793" fg:w="727"/><text x="15.1078%" y="319.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (727 samples, 0.68%)</title><rect x="14.8578%" y="293" width="0.6840%" height="15" fill="rgb(208,174,49)" fg:x="15793" fg:w="727"/><text x="15.1078%" y="303.50"></text></g><g><title>rust_dealloc (210 samples, 0.20%)</title><rect x="15.3442%" y="277" width="0.1976%" height="15" fill="rgb(233,191,51)" fg:x="16310" fg:w="210"/><text x="15.5942%" y="287.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (780 samples, 0.73%)</title><rect x="14.8221%" y="421" width="0.7338%" height="15" fill="rgb(222,134,10)" fg:x="15755" fg:w="780"/><text x="15.0721%" y="431.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (778 samples, 0.73%)</title><rect x="14.8240%" y="405" width="0.7319%" height="15" fill="rgb(230,226,20)" fg:x="15757" fg:w="778"/><text x="15.0740%" y="415.50"></text></g><g><title>core::mem::drop (757 samples, 0.71%)</title><rect x="14.8437%" y="389" width="0.7122%" height="15" fill="rgb(251,111,25)" fg:x="15778" fg:w="757"/><text x="15.0937%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (757 samples, 0.71%)</title><rect x="14.8437%" y="373" width="0.7122%" height="15" fill="rgb(224,40,46)" fg:x="15778" fg:w="757"/><text x="15.0937%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (15 samples, 0.01%)</title><rect x="15.5418%" y="357" width="0.0141%" height="15" fill="rgb(236,108,47)" fg:x="16520" fg:w="15"/><text x="15.7918%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="15.5418%" y="341" width="0.0141%" height="15" fill="rgb(234,93,0)" fg:x="16520" fg:w="15"/><text x="15.7918%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="15.5418%" y="325" width="0.0141%" height="15" fill="rgb(224,213,32)" fg:x="16520" fg:w="15"/><text x="15.7918%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="15.5418%" y="309" width="0.0141%" height="15" fill="rgb(251,11,48)" fg:x="16520" fg:w="15"/><text x="15.7918%" y="319.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="15.5418%" y="293" width="0.0141%" height="15" fill="rgb(236,173,5)" fg:x="16520" fg:w="15"/><text x="15.7918%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="15.5418%" y="277" width="0.0141%" height="15" fill="rgb(230,95,12)" fg:x="16520" fg:w="15"/><text x="15.7918%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (16 samples, 0.02%)</title><rect x="15.6142%" y="293" width="0.0151%" height="15" fill="rgb(232,209,1)" fg:x="16597" fg:w="16"/><text x="15.8642%" y="303.50"></text></g><g><title> (16 samples, 0.02%)</title><rect x="15.6142%" y="277" width="0.0151%" height="15" fill="rgb(232,6,1)" fg:x="16597" fg:w="16"/><text x="15.8642%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (61 samples, 0.06%)</title><rect x="15.5841%" y="325" width="0.0574%" height="15" fill="rgb(210,224,50)" fg:x="16565" fg:w="61"/><text x="15.8341%" y="335.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (52 samples, 0.05%)</title><rect x="15.5926%" y="309" width="0.0489%" height="15" fill="rgb(228,127,35)" fg:x="16574" fg:w="52"/><text x="15.8426%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="15.6302%" y="293" width="0.0113%" height="15" fill="rgb(245,102,45)" fg:x="16614" fg:w="12"/><text x="15.8802%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (85 samples, 0.08%)</title><rect x="15.5757%" y="357" width="0.0800%" height="15" fill="rgb(214,1,49)" fg:x="16556" fg:w="85"/><text x="15.8257%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (85 samples, 0.08%)</title><rect x="15.5757%" y="341" width="0.0800%" height="15" fill="rgb(226,163,40)" fg:x="16556" fg:w="85"/><text x="15.8257%" y="351.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="15.6415%" y="325" width="0.0141%" height="15" fill="rgb(239,212,28)" fg:x="16626" fg:w="15"/><text x="15.8915%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,184 samples, 1.11%)</title><rect x="14.5493%" y="485" width="1.1139%" height="15" fill="rgb(220,20,13)" fg:x="15465" fg:w="1184"/><text x="14.7993%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,172 samples, 1.10%)</title><rect x="14.5606%" y="469" width="1.1026%" height="15" fill="rgb(210,164,35)" fg:x="15477" fg:w="1172"/><text x="14.8106%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (898 samples, 0.84%)</title><rect x="14.8183%" y="453" width="0.8448%" height="15" fill="rgb(248,109,41)" fg:x="15751" fg:w="898"/><text x="15.0683%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (898 samples, 0.84%)</title><rect x="14.8183%" y="437" width="0.8448%" height="15" fill="rgb(238,23,50)" fg:x="15751" fg:w="898"/><text x="15.0683%" y="447.50"></text></g><g><title>rust_dealloc (114 samples, 0.11%)</title><rect x="15.5559%" y="421" width="0.1072%" height="15" fill="rgb(211,48,49)" fg:x="16535" fg:w="114"/><text x="15.8059%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (102 samples, 0.10%)</title><rect x="15.5672%" y="405" width="0.0960%" height="15" fill="rgb(223,36,21)" fg:x="16547" fg:w="102"/><text x="15.8172%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (93 samples, 0.09%)</title><rect x="15.5757%" y="389" width="0.0875%" height="15" fill="rgb(207,123,46)" fg:x="16556" fg:w="93"/><text x="15.8257%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (93 samples, 0.09%)</title><rect x="15.5757%" y="373" width="0.0875%" height="15" fill="rgb(240,218,32)" fg:x="16556" fg:w="93"/><text x="15.8257%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (436 samples, 0.41%)</title><rect x="15.8541%" y="389" width="0.4102%" height="15" fill="rgb(252,5,43)" fg:x="16852" fg:w="436"/><text x="16.1041%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (436 samples, 0.41%)</title><rect x="15.8541%" y="373" width="0.4102%" height="15" fill="rgb(252,84,19)" fg:x="16852" fg:w="436"/><text x="16.1041%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (436 samples, 0.41%)</title><rect x="15.8541%" y="357" width="0.4102%" height="15" fill="rgb(243,152,39)" fg:x="16852" fg:w="436"/><text x="16.1041%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (436 samples, 0.41%)</title><rect x="15.8541%" y="341" width="0.4102%" height="15" fill="rgb(234,160,15)" fg:x="16852" fg:w="436"/><text x="16.1041%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (436 samples, 0.41%)</title><rect x="15.8541%" y="325" width="0.4102%" height="15" fill="rgb(237,34,20)" fg:x="16852" fg:w="436"/><text x="16.1041%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (428 samples, 0.40%)</title><rect x="15.8617%" y="309" width="0.4027%" height="15" fill="rgb(229,97,13)" fg:x="16860" fg:w="428"/><text x="16.1117%" y="319.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (468 samples, 0.44%)</title><rect x="15.8344%" y="405" width="0.4403%" height="15" fill="rgb(234,71,50)" fg:x="16831" fg:w="468"/><text x="16.0844%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="16.2643%" y="389" width="0.0103%" height="15" fill="rgb(253,155,4)" fg:x="17288" fg:w="11"/><text x="16.5143%" y="399.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="16.2643%" y="373" width="0.0103%" height="15" fill="rgb(222,185,37)" fg:x="17288" fg:w="11"/><text x="16.5143%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="16.2643%" y="357" width="0.0103%" height="15" fill="rgb(251,177,13)" fg:x="17288" fg:w="11"/><text x="16.5143%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="16.2643%" y="341" width="0.0103%" height="15" fill="rgb(250,179,40)" fg:x="17288" fg:w="11"/><text x="16.5143%" y="351.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="16.2643%" y="325" width="0.0103%" height="15" fill="rgb(242,44,2)" fg:x="17288" fg:w="11"/><text x="16.5143%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="16.2643%" y="309" width="0.0103%" height="15" fill="rgb(216,177,13)" fg:x="17288" fg:w="11"/><text x="16.5143%" y="319.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="16.2756%" y="389" width="0.0103%" height="15" fill="rgb(216,106,43)" fg:x="17300" fg:w="11"/><text x="16.5256%" y="399.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (11 samples, 0.01%)</title><rect x="16.3217%" y="277" width="0.0103%" height="15" fill="rgb(216,183,2)" fg:x="17349" fg:w="11"/><text x="16.5717%" y="287.50"></text></g><g><title> (11 samples, 0.01%)</title><rect x="16.3217%" y="261" width="0.0103%" height="15" fill="rgb(249,75,3)" fg:x="17349" fg:w="11"/><text x="16.5717%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (44 samples, 0.04%)</title><rect x="16.3020%" y="309" width="0.0414%" height="15" fill="rgb(219,67,39)" fg:x="17328" fg:w="44"/><text x="16.5520%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (38 samples, 0.04%)</title><rect x="16.3076%" y="293" width="0.0357%" height="15" fill="rgb(253,228,2)" fg:x="17334" fg:w="38"/><text x="16.5576%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="16.3330%" y="277" width="0.0103%" height="15" fill="rgb(235,138,27)" fg:x="17361" fg:w="11"/><text x="16.5830%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (60 samples, 0.06%)</title><rect x="16.2888%" y="341" width="0.0564%" height="15" fill="rgb(236,97,51)" fg:x="17314" fg:w="60"/><text x="16.5388%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (60 samples, 0.06%)</title><rect x="16.2888%" y="325" width="0.0564%" height="15" fill="rgb(240,80,30)" fg:x="17314" fg:w="60"/><text x="16.5388%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (67 samples, 0.06%)</title><rect x="16.2888%" y="373" width="0.0630%" height="15" fill="rgb(230,178,19)" fg:x="17314" fg:w="67"/><text x="16.5388%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (67 samples, 0.06%)</title><rect x="16.2888%" y="357" width="0.0630%" height="15" fill="rgb(210,190,27)" fg:x="17314" fg:w="67"/><text x="16.5388%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (76 samples, 0.07%)</title><rect x="16.2860%" y="389" width="0.0715%" height="15" fill="rgb(222,107,31)" fg:x="17311" fg:w="76"/><text x="16.5360%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (712 samples, 0.67%)</title><rect x="15.6942%" y="453" width="0.6698%" height="15" fill="rgb(216,127,34)" fg:x="16682" fg:w="712"/><text x="15.9442%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (712 samples, 0.67%)</title><rect x="15.6942%" y="437" width="0.6698%" height="15" fill="rgb(234,116,52)" fg:x="16682" fg:w="712"/><text x="15.9442%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (712 samples, 0.67%)</title><rect x="15.6942%" y="421" width="0.6698%" height="15" fill="rgb(222,124,15)" fg:x="16682" fg:w="712"/><text x="15.9442%" y="431.50"></text></g><g><title>rust_dealloc (95 samples, 0.09%)</title><rect x="16.2747%" y="405" width="0.0894%" height="15" fill="rgb(231,179,28)" fg:x="17299" fg:w="95"/><text x="16.5247%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (736 samples, 0.69%)</title><rect x="15.6810%" y="469" width="0.6924%" height="15" fill="rgb(226,93,45)" fg:x="16668" fg:w="736"/><text x="15.9310%" y="479.50"></text></g><g><title>abi_stable::std_types::arc::private::RArc&lt;T&gt;::data (380 samples, 0.36%)</title><rect x="16.4403%" y="309" width="0.3575%" height="15" fill="rgb(215,8,51)" fg:x="17475" fg:w="380"/><text x="16.6903%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::get_mut_unchecked (12 samples, 0.01%)</title><rect x="16.8090%" y="229" width="0.0113%" height="15" fill="rgb(223,106,5)" fg:x="17867" fg:w="12"/><text x="17.0590%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="16.8213%" y="181" width="0.0160%" height="15" fill="rgb(250,191,5)" fg:x="17880" fg:w="17"/><text x="17.0713%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="16.8213%" y="165" width="0.0160%" height="15" fill="rgb(242,132,44)" fg:x="17880" fg:w="17"/><text x="17.0713%" y="175.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="16.8213%" y="149" width="0.0160%" height="15" fill="rgb(251,152,29)" fg:x="17880" fg:w="17"/><text x="17.0713%" y="159.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="16.8213%" y="133" width="0.0160%" height="15" fill="rgb(218,179,5)" fg:x="17880" fg:w="17"/><text x="17.0713%" y="143.50"></text></g><g><title>core::mem::drop (530 samples, 0.50%)</title><rect x="16.8203%" y="229" width="0.4986%" height="15" fill="rgb(227,67,19)" fg:x="17879" fg:w="530"/><text x="17.0703%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (530 samples, 0.50%)</title><rect x="16.8203%" y="213" width="0.4986%" height="15" fill="rgb(233,119,31)" fg:x="17879" fg:w="530"/><text x="17.0703%" y="223.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (530 samples, 0.50%)</title><rect x="16.8203%" y="197" width="0.4986%" height="15" fill="rgb(241,120,22)" fg:x="17879" fg:w="530"/><text x="17.0703%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (512 samples, 0.48%)</title><rect x="16.8373%" y="181" width="0.4817%" height="15" fill="rgb(224,102,30)" fg:x="17897" fg:w="512"/><text x="17.0873%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_sub (512 samples, 0.48%)</title><rect x="16.8373%" y="165" width="0.4817%" height="15" fill="rgb(210,164,37)" fg:x="17897" fg:w="512"/><text x="17.0873%" y="175.50"></text></g><g><title>rust_dealloc (19 samples, 0.02%)</title><rect x="17.3679%" y="85" width="0.0179%" height="15" fill="rgb(226,191,16)" fg:x="18461" fg:w="19"/><text x="17.6179%" y="95.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (29 samples, 0.03%)</title><rect x="17.4507%" y="53" width="0.0273%" height="15" fill="rgb(214,40,45)" fg:x="18549" fg:w="29"/><text x="17.7007%" y="63.50"></text></g><g><title> (29 samples, 0.03%)</title><rect x="17.4507%" y="37" width="0.0273%" height="15" fill="rgb(244,29,26)" fg:x="18549" fg:w="29"/><text x="17.7007%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (109 samples, 0.10%)</title><rect x="17.3876%" y="85" width="0.1025%" height="15" fill="rgb(216,16,5)" fg:x="18482" fg:w="109"/><text x="17.6376%" y="95.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (98 samples, 0.09%)</title><rect x="17.3980%" y="69" width="0.0922%" height="15" fill="rgb(249,76,35)" fg:x="18493" fg:w="98"/><text x="17.6480%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (150 samples, 0.14%)</title><rect x="17.3679%" y="117" width="0.1411%" height="15" fill="rgb(207,11,44)" fg:x="18461" fg:w="150"/><text x="17.6179%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (150 samples, 0.14%)</title><rect x="17.3679%" y="101" width="0.1411%" height="15" fill="rgb(228,190,49)" fg:x="18461" fg:w="150"/><text x="17.6179%" y="111.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (20 samples, 0.02%)</title><rect x="17.4902%" y="85" width="0.0188%" height="15" fill="rgb(214,173,12)" fg:x="18591" fg:w="20"/><text x="17.7402%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (158 samples, 0.15%)</title><rect x="17.3679%" y="149" width="0.1486%" height="15" fill="rgb(218,26,35)" fg:x="18461" fg:w="158"/><text x="17.6179%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (158 samples, 0.15%)</title><rect x="17.3679%" y="133" width="0.1486%" height="15" fill="rgb(220,200,19)" fg:x="18461" fg:w="158"/><text x="17.6179%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (168 samples, 0.16%)</title><rect x="17.3669%" y="165" width="0.1581%" height="15" fill="rgb(239,95,49)" fg:x="18460" fg:w="168"/><text x="17.6169%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (767 samples, 0.72%)</title><rect x="16.8090%" y="245" width="0.7216%" height="15" fill="rgb(235,85,53)" fg:x="17867" fg:w="767"/><text x="17.0590%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (225 samples, 0.21%)</title><rect x="17.3189%" y="229" width="0.2117%" height="15" fill="rgb(233,133,31)" fg:x="18409" fg:w="225"/><text x="17.5689%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (225 samples, 0.21%)</title><rect x="17.3189%" y="213" width="0.2117%" height="15" fill="rgb(218,25,20)" fg:x="18409" fg:w="225"/><text x="17.5689%" y="223.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (225 samples, 0.21%)</title><rect x="17.3189%" y="197" width="0.2117%" height="15" fill="rgb(252,210,38)" fg:x="18409" fg:w="225"/><text x="17.5689%" y="207.50"></text></g><g><title>rust_dealloc (183 samples, 0.17%)</title><rect x="17.3585%" y="181" width="0.1722%" height="15" fill="rgb(242,134,21)" fg:x="18451" fg:w="183"/><text x="17.6085%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (795 samples, 0.75%)</title><rect x="17.5306%" y="245" width="0.7479%" height="15" fill="rgb(213,28,48)" fg:x="18634" fg:w="795"/><text x="17.7806%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_sub (795 samples, 0.75%)</title><rect x="17.5306%" y="229" width="0.7479%" height="15" fill="rgb(250,196,2)" fg:x="18634" fg:w="795"/><text x="17.7806%" y="239.50"></text></g><g><title>sizeclass_to_size (14 samples, 0.01%)</title><rect x="18.3115%" y="149" width="0.0132%" height="15" fill="rgb(227,5,17)" fg:x="19464" fg:w="14"/><text x="18.5615%" y="159.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (14 samples, 0.01%)</title><rect x="18.3115%" y="133" width="0.0132%" height="15" fill="rgb(221,226,24)" fg:x="19464" fg:w="14"/><text x="18.5615%" y="143.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (13 samples, 0.01%)</title><rect x="18.3435%" y="117" width="0.0122%" height="15" fill="rgb(211,5,48)" fg:x="19498" fg:w="13"/><text x="18.5935%" y="127.50"></text></g><g><title> (13 samples, 0.01%)</title><rect x="18.3435%" y="101" width="0.0122%" height="15" fill="rgb(219,150,6)" fg:x="19498" fg:w="13"/><text x="18.5935%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (40 samples, 0.04%)</title><rect x="18.3246%" y="149" width="0.0376%" height="15" fill="rgb(251,46,16)" fg:x="19478" fg:w="40"/><text x="18.5746%" y="159.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (29 samples, 0.03%)</title><rect x="18.3350%" y="133" width="0.0273%" height="15" fill="rgb(220,204,40)" fg:x="19489" fg:w="29"/><text x="18.5850%" y="143.50"></text></g><g><title>rust_dealloc (92 samples, 0.09%)</title><rect x="18.2785%" y="245" width="0.0866%" height="15" fill="rgb(211,85,2)" fg:x="19429" fg:w="92"/><text x="18.5285%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (81 samples, 0.08%)</title><rect x="18.2889%" y="229" width="0.0762%" height="15" fill="rgb(229,17,7)" fg:x="19440" fg:w="81"/><text x="18.5389%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (67 samples, 0.06%)</title><rect x="18.3021%" y="213" width="0.0630%" height="15" fill="rgb(239,72,28)" fg:x="19454" fg:w="67"/><text x="18.5521%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (67 samples, 0.06%)</title><rect x="18.3021%" y="197" width="0.0630%" height="15" fill="rgb(230,47,54)" fg:x="19454" fg:w="67"/><text x="18.5521%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (67 samples, 0.06%)</title><rect x="18.3021%" y="181" width="0.0630%" height="15" fill="rgb(214,50,8)" fg:x="19454" fg:w="67"/><text x="18.5521%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (67 samples, 0.06%)</title><rect x="18.3021%" y="165" width="0.0630%" height="15" fill="rgb(216,198,43)" fg:x="19454" fg:w="67"/><text x="18.5521%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,101 samples, 1.98%)</title><rect x="16.3932%" y="373" width="1.9766%" height="15" fill="rgb(234,20,35)" fg:x="17425" fg:w="2101"/><text x="16.6432%" y="383.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (2,100 samples, 1.98%)</title><rect x="16.3942%" y="357" width="1.9757%" height="15" fill="rgb(254,45,19)" fg:x="17426" fg:w="2100"/><text x="16.6442%" y="367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (2,070 samples, 1.95%)</title><rect x="16.4224%" y="341" width="1.9474%" height="15" fill="rgb(219,14,44)" fg:x="17456" fg:w="2070"/><text x="16.6724%" y="351.50">c..</text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (2,070 samples, 1.95%)</title><rect x="16.4224%" y="325" width="1.9474%" height="15" fill="rgb(217,220,26)" fg:x="17456" fg:w="2070"/><text x="16.6724%" y="335.50">a..</text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (1,671 samples, 1.57%)</title><rect x="16.7977%" y="309" width="1.5721%" height="15" fill="rgb(213,158,28)" fg:x="17855" fg:w="1671"/><text x="17.0477%" y="319.50"></text></g><g><title>core::mem::drop (1,661 samples, 1.56%)</title><rect x="16.8072%" y="293" width="1.5626%" height="15" fill="rgb(252,51,52)" fg:x="17865" fg:w="1661"/><text x="17.0572%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,661 samples, 1.56%)</title><rect x="16.8072%" y="277" width="1.5626%" height="15" fill="rgb(246,89,16)" fg:x="17865" fg:w="1661"/><text x="17.0572%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,661 samples, 1.56%)</title><rect x="16.8072%" y="261" width="1.5626%" height="15" fill="rgb(216,158,49)" fg:x="17865" fg:w="1661"/><text x="17.0572%" y="271.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (2,131 samples, 2.00%)</title><rect x="16.3735%" y="437" width="2.0048%" height="15" fill="rgb(236,107,19)" fg:x="17404" fg:w="2131"/><text x="16.6235%" y="447.50">a..</text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (2,122 samples, 2.00%)</title><rect x="16.3819%" y="421" width="1.9963%" height="15" fill="rgb(228,185,30)" fg:x="17413" fg:w="2122"/><text x="16.6319%" y="431.50">a..</text></g><g><title>core::mem::drop (2,110 samples, 1.99%)</title><rect x="16.3932%" y="405" width="1.9851%" height="15" fill="rgb(246,134,8)" fg:x="17425" fg:w="2110"/><text x="16.6432%" y="415.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,110 samples, 1.99%)</title><rect x="16.3932%" y="389" width="1.9851%" height="15" fill="rgb(214,143,50)" fg:x="17425" fg:w="2110"/><text x="16.6432%" y="399.50">c..</text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="18.3783%" y="421" width="0.0103%" height="15" fill="rgb(228,75,8)" fg:x="19535" fg:w="11"/><text x="18.6283%" y="431.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="18.3896%" y="341" width="0.0122%" height="15" fill="rgb(207,175,4)" fg:x="19547" fg:w="13"/><text x="18.6396%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="18.4319%" y="309" width="0.0169%" height="15" fill="rgb(205,108,24)" fg:x="19592" fg:w="18"/><text x="18.6819%" y="319.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="18.4319%" y="293" width="0.0169%" height="15" fill="rgb(244,120,49)" fg:x="19592" fg:w="18"/><text x="18.6819%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (55 samples, 0.05%)</title><rect x="18.4018%" y="341" width="0.0517%" height="15" fill="rgb(223,47,38)" fg:x="19560" fg:w="55"/><text x="18.6518%" y="351.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (43 samples, 0.04%)</title><rect x="18.4131%" y="325" width="0.0405%" height="15" fill="rgb(229,179,11)" fg:x="19572" fg:w="43"/><text x="18.6631%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (70 samples, 0.07%)</title><rect x="18.3896%" y="373" width="0.0659%" height="15" fill="rgb(231,122,1)" fg:x="19547" fg:w="70"/><text x="18.6396%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (70 samples, 0.07%)</title><rect x="18.3896%" y="357" width="0.0659%" height="15" fill="rgb(245,119,9)" fg:x="19547" fg:w="70"/><text x="18.6396%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (75 samples, 0.07%)</title><rect x="18.3896%" y="405" width="0.0706%" height="15" fill="rgb(241,163,25)" fg:x="19547" fg:w="75"/><text x="18.6396%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (75 samples, 0.07%)</title><rect x="18.3896%" y="389" width="0.0706%" height="15" fill="rgb(217,214,3)" fg:x="19547" fg:w="75"/><text x="18.6396%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (86 samples, 0.08%)</title><rect x="18.3886%" y="421" width="0.0809%" height="15" fill="rgb(240,86,28)" fg:x="19546" fg:w="86"/><text x="18.6386%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,236 samples, 2.10%)</title><rect x="16.3735%" y="469" width="2.1036%" height="15" fill="rgb(215,47,9)" fg:x="17404" fg:w="2236"/><text x="16.6235%" y="479.50">c..</text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (2,236 samples, 2.10%)</title><rect x="16.3735%" y="453" width="2.1036%" height="15" fill="rgb(252,25,45)" fg:x="17404" fg:w="2236"/><text x="16.6235%" y="463.50">a..</text></g><g><title>rust_dealloc (105 samples, 0.10%)</title><rect x="18.3783%" y="437" width="0.0988%" height="15" fill="rgb(251,164,9)" fg:x="19535" fg:w="105"/><text x="18.6283%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (40 samples, 0.04%)</title><rect x="18.4855%" y="453" width="0.0376%" height="15" fill="rgb(233,194,0)" fg:x="19649" fg:w="40"/><text x="18.7355%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="18.5250%" y="437" width="0.0113%" height="15" fill="rgb(249,111,24)" fg:x="19691" fg:w="12"/><text x="18.7750%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (12 samples, 0.01%)</title><rect x="18.5250%" y="421" width="0.0113%" height="15" fill="rgb(250,223,3)" fg:x="19691" fg:w="12"/><text x="18.7750%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (71 samples, 0.07%)</title><rect x="18.4771%" y="469" width="0.0668%" height="15" fill="rgb(236,178,37)" fg:x="19640" fg:w="71"/><text x="18.7271%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (22 samples, 0.02%)</title><rect x="18.5232%" y="453" width="0.0207%" height="15" fill="rgb(241,158,50)" fg:x="19689" fg:w="22"/><text x="18.7732%" y="463.50"></text></g><g><title>sizeclass_to_size (12 samples, 0.01%)</title><rect x="18.5598%" y="373" width="0.0113%" height="15" fill="rgb(213,121,41)" fg:x="19728" fg:w="12"/><text x="18.8098%" y="383.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (12 samples, 0.01%)</title><rect x="18.5598%" y="357" width="0.0113%" height="15" fill="rgb(240,92,3)" fg:x="19728" fg:w="12"/><text x="18.8098%" y="367.50"></text></g><g><title>snmalloc::Remote::set_info (24 samples, 0.02%)</title><rect x="18.6050%" y="341" width="0.0226%" height="15" fill="rgb(205,123,3)" fg:x="19776" fg:w="24"/><text x="18.8550%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (66 samples, 0.06%)</title><rect x="18.5711%" y="373" width="0.0621%" height="15" fill="rgb(205,97,47)" fg:x="19740" fg:w="66"/><text x="18.8211%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (57 samples, 0.05%)</title><rect x="18.5796%" y="357" width="0.0536%" height="15" fill="rgb(247,152,14)" fg:x="19749" fg:w="57"/><text x="18.8296%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (82 samples, 0.08%)</title><rect x="18.5589%" y="437" width="0.0771%" height="15" fill="rgb(248,195,53)" fg:x="19727" fg:w="82"/><text x="18.8089%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (82 samples, 0.08%)</title><rect x="18.5589%" y="421" width="0.0771%" height="15" fill="rgb(226,201,16)" fg:x="19727" fg:w="82"/><text x="18.8089%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (82 samples, 0.08%)</title><rect x="18.5589%" y="405" width="0.0771%" height="15" fill="rgb(205,98,0)" fg:x="19727" fg:w="82"/><text x="18.8089%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (82 samples, 0.08%)</title><rect x="18.5589%" y="389" width="0.0771%" height="15" fill="rgb(214,191,48)" fg:x="19727" fg:w="82"/><text x="18.8089%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (100 samples, 0.09%)</title><rect x="18.5533%" y="453" width="0.0941%" height="15" fill="rgb(237,112,39)" fg:x="19721" fg:w="100"/><text x="18.8033%" y="463.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="18.6360%" y="437" width="0.0113%" height="15" fill="rgb(247,203,27)" fg:x="19809" fg:w="12"/><text x="18.8860%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="18.6360%" y="421" width="0.0113%" height="15" fill="rgb(235,124,28)" fg:x="19809" fg:w="12"/><text x="18.8860%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="18.6360%" y="405" width="0.0113%" height="15" fill="rgb(208,207,46)" fg:x="19809" fg:w="12"/><text x="18.8860%" y="415.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="18.6360%" y="389" width="0.0113%" height="15" fill="rgb(234,176,4)" fg:x="19809" fg:w="12"/><text x="18.8860%" y="399.50"></text></g><g><title>rust_dealloc (123 samples, 0.12%)</title><rect x="18.5439%" y="469" width="0.1157%" height="15" fill="rgb(230,133,28)" fg:x="19711" fg:w="123"/><text x="18.7939%" y="479.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="18.6473%" y="453" width="0.0122%" height="15" fill="rgb(211,137,40)" fg:x="19821" fg:w="13"/><text x="18.8973%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (4,376 samples, 4.12%)</title><rect x="14.5436%" y="501" width="4.1169%" height="15" fill="rgb(254,35,13)" fg:x="15459" fg:w="4376"/><text x="14.7936%" y="511.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (3,167 samples, 2.98%)</title><rect x="15.6810%" y="485" width="2.9795%" height="15" fill="rgb(225,49,51)" fg:x="16668" fg:w="3167"/><text x="15.9310%" y="495.50">cor..</text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (12 samples, 0.01%)</title><rect x="18.7687%" y="453" width="0.0113%" height="15" fill="rgb(251,10,15)" fg:x="19950" fg:w="12"/><text x="19.0187%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (12 samples, 0.01%)</title><rect x="18.7687%" y="437" width="0.0113%" height="15" fill="rgb(228,207,15)" fg:x="19950" fg:w="12"/><text x="19.0187%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (16 samples, 0.02%)</title><rect x="18.7838%" y="437" width="0.0151%" height="15" fill="rgb(241,99,19)" fg:x="19966" fg:w="16"/><text x="19.0338%" y="447.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at::{{closure}} (11 samples, 0.01%)</title><rect x="18.7885%" y="421" width="0.0103%" height="15" fill="rgb(207,104,49)" fg:x="19971" fg:w="11"/><text x="19.0385%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (11 samples, 0.01%)</title><rect x="18.7885%" y="405" width="0.0103%" height="15" fill="rgb(234,99,18)" fg:x="19971" fg:w="11"/><text x="19.0385%" y="415.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (11 samples, 0.01%)</title><rect x="18.7885%" y="389" width="0.0103%" height="15" fill="rgb(213,191,49)" fg:x="19971" fg:w="11"/><text x="19.0385%" y="399.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (21 samples, 0.02%)</title><rect x="18.8139%" y="421" width="0.0198%" height="15" fill="rgb(210,226,19)" fg:x="19998" fg:w="21"/><text x="19.0639%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (18 samples, 0.02%)</title><rect x="18.8167%" y="405" width="0.0169%" height="15" fill="rgb(229,97,18)" fg:x="20001" fg:w="18"/><text x="19.0667%" y="415.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (51 samples, 0.05%)</title><rect x="18.7988%" y="437" width="0.0480%" height="15" fill="rgb(211,167,15)" fg:x="19982" fg:w="51"/><text x="19.0488%" y="447.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::sub_bucket_for (14 samples, 0.01%)</title><rect x="18.8336%" y="421" width="0.0132%" height="15" fill="rgb(210,169,34)" fg:x="20019" fg:w="14"/><text x="19.0836%" y="431.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (72 samples, 0.07%)</title><rect x="18.7838%" y="453" width="0.0677%" height="15" fill="rgb(241,121,31)" fg:x="19966" fg:w="72"/><text x="19.0338%" y="463.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (205 samples, 0.19%)</title><rect x="18.6690%" y="501" width="0.1929%" height="15" fill="rgb(232,40,11)" fg:x="19844" fg:w="205"/><text x="18.9190%" y="511.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (197 samples, 0.19%)</title><rect x="18.6765%" y="485" width="0.1853%" height="15" fill="rgb(205,86,26)" fg:x="19852" fg:w="197"/><text x="18.9265%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (197 samples, 0.19%)</title><rect x="18.6765%" y="469" width="0.1853%" height="15" fill="rgb(231,126,28)" fg:x="19852" fg:w="197"/><text x="18.9265%" y="479.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="18.8722%" y="469" width="0.0103%" height="15" fill="rgb(219,221,18)" fg:x="20060" fg:w="11"/><text x="19.1222%" y="479.50"></text></g><g><title>sizeclass_to_size (12 samples, 0.01%)</title><rect x="18.8872%" y="405" width="0.0113%" height="15" fill="rgb(211,40,0)" fg:x="20076" fg:w="12"/><text x="19.1372%" y="415.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (12 samples, 0.01%)</title><rect x="18.8872%" y="389" width="0.0113%" height="15" fill="rgb(239,85,43)" fg:x="20076" fg:w="12"/><text x="19.1372%" y="399.50"></text></g><g><title>snmalloc::Remote::set_info (19 samples, 0.02%)</title><rect x="18.9522%" y="373" width="0.0179%" height="15" fill="rgb(231,55,21)" fg:x="20145" fg:w="19"/><text x="19.2022%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (82 samples, 0.08%)</title><rect x="18.8995%" y="405" width="0.0771%" height="15" fill="rgb(225,184,43)" fg:x="20089" fg:w="82"/><text x="19.1495%" y="415.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (72 samples, 0.07%)</title><rect x="18.9089%" y="389" width="0.0677%" height="15" fill="rgb(251,158,41)" fg:x="20099" fg:w="72"/><text x="19.1589%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (106 samples, 0.10%)</title><rect x="18.8825%" y="437" width="0.0997%" height="15" fill="rgb(234,159,37)" fg:x="20071" fg:w="106"/><text x="19.1325%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (106 samples, 0.10%)</title><rect x="18.8825%" y="421" width="0.0997%" height="15" fill="rgb(216,204,22)" fg:x="20071" fg:w="106"/><text x="19.1325%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (107 samples, 0.10%)</title><rect x="18.8825%" y="469" width="0.1007%" height="15" fill="rgb(214,17,3)" fg:x="20071" fg:w="107"/><text x="19.1325%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (107 samples, 0.10%)</title><rect x="18.8825%" y="453" width="0.1007%" height="15" fill="rgb(212,111,17)" fg:x="20071" fg:w="107"/><text x="19.1325%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (126 samples, 0.12%)</title><rect x="18.8712%" y="485" width="0.1185%" height="15" fill="rgb(221,157,24)" fg:x="20059" fg:w="126"/><text x="19.1212%" y="495.50"></text></g><g><title>rust_dealloc (145 samples, 0.14%)</title><rect x="18.8618%" y="501" width="0.1364%" height="15" fill="rgb(252,16,13)" fg:x="20049" fg:w="145"/><text x="19.1118%" y="511.50"></text></g><g><title>core::time::Duration::as_nanos (14 samples, 0.01%)</title><rect x="19.0265%" y="485" width="0.0132%" height="15" fill="rgb(221,62,2)" fg:x="20224" fg:w="14"/><text x="19.2765%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (76 samples, 0.07%)</title><rect x="19.0848%" y="437" width="0.0715%" height="15" fill="rgb(247,87,22)" fg:x="20286" fg:w="76"/><text x="19.3348%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::ge (76 samples, 0.07%)</title><rect x="19.0848%" y="421" width="0.0715%" height="15" fill="rgb(215,73,9)" fg:x="20286" fg:w="76"/><text x="19.3348%" y="431.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (74 samples, 0.07%)</title><rect x="19.0867%" y="405" width="0.0696%" height="15" fill="rgb(207,175,33)" fg:x="20288" fg:w="74"/><text x="19.3367%" y="415.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (74 samples, 0.07%)</title><rect x="19.0867%" y="389" width="0.0696%" height="15" fill="rgb(243,129,54)" fg:x="20288" fg:w="74"/><text x="19.3367%" y="399.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (74 samples, 0.07%)</title><rect x="19.0867%" y="373" width="0.0696%" height="15" fill="rgb(227,119,45)" fg:x="20288" fg:w="74"/><text x="19.3367%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (36 samples, 0.03%)</title><rect x="19.1224%" y="357" width="0.0339%" height="15" fill="rgb(205,109,36)" fg:x="20326" fg:w="36"/><text x="19.3724%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (145 samples, 0.14%)</title><rect x="19.0396%" y="469" width="0.1364%" height="15" fill="rgb(205,6,39)" fg:x="20238" fg:w="145"/><text x="19.2896%" y="479.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (145 samples, 0.14%)</title><rect x="19.0396%" y="453" width="0.1364%" height="15" fill="rgb(221,32,16)" fg:x="20238" fg:w="145"/><text x="19.2896%" y="463.50"></text></g><g><title>core::time::Duration::new (21 samples, 0.02%)</title><rect x="19.1563%" y="437" width="0.0198%" height="15" fill="rgb(228,144,50)" fg:x="20362" fg:w="21"/><text x="19.4063%" y="447.50"></text></g><g><title>std::time::SystemTime::duration_since (153 samples, 0.14%)</title><rect x="19.0396%" y="485" width="0.1439%" height="15" fill="rgb(229,201,53)" fg:x="20238" fg:w="153"/><text x="19.2896%" y="495.50"></text></g><g><title>__clock_gettime_2 (529 samples, 0.50%)</title><rect x="19.2899%" y="437" width="0.4977%" height="15" fill="rgb(249,153,27)" fg:x="20504" fg:w="529"/><text x="19.5399%" y="447.50"></text></g><g><title>__vdso_clock_gettime (512 samples, 0.48%)</title><rect x="19.3059%" y="421" width="0.4817%" height="15" fill="rgb(227,106,25)" fg:x="20521" fg:w="512"/><text x="19.5559%" y="431.50"></text></g><g><title>[[vdso]] (318 samples, 0.30%)</title><rect x="19.4884%" y="405" width="0.2992%" height="15" fill="rgb(230,65,29)" fg:x="20715" fg:w="318"/><text x="19.7384%" y="415.50"></text></g><g><title>tremor_common::time::nanotime (841 samples, 0.79%)</title><rect x="18.9983%" y="501" width="0.7912%" height="15" fill="rgb(221,57,46)" fg:x="20194" fg:w="841"/><text x="19.2483%" y="511.50"></text></g><g><title>std::time::SystemTime::now (644 samples, 0.61%)</title><rect x="19.1836%" y="485" width="0.6059%" height="15" fill="rgb(229,161,17)" fg:x="20391" fg:w="644"/><text x="19.4336%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (644 samples, 0.61%)</title><rect x="19.1836%" y="469" width="0.6059%" height="15" fill="rgb(222,213,11)" fg:x="20391" fg:w="644"/><text x="19.4336%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::now (644 samples, 0.61%)</title><rect x="19.1836%" y="453" width="0.6059%" height="15" fill="rgb(235,35,13)" fg:x="20391" fg:w="644"/><text x="19.4336%" y="463.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (183 samples, 0.17%)</title><rect x="19.7979%" y="485" width="0.1722%" height="15" fill="rgb(233,158,34)" fg:x="21044" fg:w="183"/><text x="20.0479%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (6,737 samples, 6.34%)</title><rect x="13.6461%" y="757" width="6.3381%" height="15" fill="rgb(215,151,48)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="767.50">tremor_r..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,737 samples, 6.34%)</title><rect x="13.6461%" y="741" width="6.3381%" height="15" fill="rgb(229,84,14)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="751.50">&lt;async_f..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,737 samples, 6.34%)</title><rect x="13.6461%" y="725" width="6.3381%" height="15" fill="rgb(229,68,14)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="735.50">&lt;async_f..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (6,737 samples, 6.34%)</title><rect x="13.6461%" y="709" width="6.3381%" height="15" fill="rgb(243,106,26)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="719.50">&lt;core::t..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,737 samples, 6.34%)</title><rect x="13.6461%" y="693" width="6.3381%" height="15" fill="rgb(206,45,38)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="703.50">&lt;async_f..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (6,737 samples, 6.34%)</title><rect x="13.6461%" y="677" width="6.3381%" height="15" fill="rgb(226,6,15)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="687.50">async_ff..</text></g><g><title>std::panic::catch_unwind (6,737 samples, 6.34%)</title><rect x="13.6461%" y="661" width="6.3381%" height="15" fill="rgb(232,22,54)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="671.50">std::pan..</text></g><g><title>std::panicking::try (6,737 samples, 6.34%)</title><rect x="13.6461%" y="645" width="6.3381%" height="15" fill="rgb(229,222,32)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="655.50">std::pan..</text></g><g><title>std::panicking::try::do_call (6,737 samples, 6.34%)</title><rect x="13.6461%" y="629" width="6.3381%" height="15" fill="rgb(228,62,29)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="639.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,737 samples, 6.34%)</title><rect x="13.6461%" y="613" width="6.3381%" height="15" fill="rgb(251,103,34)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="623.50">&lt;core::p..</text></g><g><title>core::ops::function::FnOnce::call_once (6,737 samples, 6.34%)</title><rect x="13.6461%" y="597" width="6.3381%" height="15" fill="rgb(233,12,30)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="607.50">core::op..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (6,737 samples, 6.34%)</title><rect x="13.6461%" y="581" width="6.3381%" height="15" fill="rgb(238,52,0)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="591.50">async_ff..</text></g><g><title>async_ffi::FfiContext::with_context (6,737 samples, 6.34%)</title><rect x="13.6461%" y="565" width="6.3381%" height="15" fill="rgb(223,98,5)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="575.50">async_ff..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (6,737 samples, 6.34%)</title><rect x="13.6461%" y="549" width="6.3381%" height="15" fill="rgb(228,75,37)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="559.50">async_ff..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,737 samples, 6.34%)</title><rect x="13.6461%" y="533" width="6.3381%" height="15" fill="rgb(205,115,49)" fg:x="14505" fg:w="6737"/><text x="13.8961%" y="543.50">&lt;core::f..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (6,579 samples, 6.19%)</title><rect x="13.7948%" y="517" width="6.1894%" height="15" fill="rgb(250,154,43)" fg:x="14663" fg:w="6579"/><text x="14.0448%" y="527.50">&lt;tremor_..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (207 samples, 0.19%)</title><rect x="19.7895%" y="501" width="0.1947%" height="15" fill="rgb(226,43,29)" fg:x="21035" fg:w="207"/><text x="20.0395%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::_::&lt;impl tremor_runtime::connectors::sink::EventSerializerOpaque_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::serialize (15 samples, 0.01%)</title><rect x="19.9701%" y="485" width="0.0141%" height="15" fill="rgb(249,228,39)" fg:x="21227" fg:w="15"/><text x="20.2201%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (29 samples, 0.03%)</title><rect x="20.2062%" y="725" width="0.0273%" height="15" fill="rgb(216,79,43)" fg:x="21478" fg:w="29"/><text x="20.4562%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (29 samples, 0.03%)</title><rect x="20.2062%" y="709" width="0.0273%" height="15" fill="rgb(228,95,12)" fg:x="21478" fg:w="29"/><text x="20.4562%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (29 samples, 0.03%)</title><rect x="20.2062%" y="693" width="0.0273%" height="15" fill="rgb(249,221,15)" fg:x="21478" fg:w="29"/><text x="20.4562%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (11 samples, 0.01%)</title><rect x="20.2232%" y="677" width="0.0103%" height="15" fill="rgb(233,34,13)" fg:x="21496" fg:w="11"/><text x="20.4732%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (11 samples, 0.01%)</title><rect x="20.2232%" y="661" width="0.0103%" height="15" fill="rgb(214,103,39)" fg:x="21496" fg:w="11"/><text x="20.4732%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (17 samples, 0.02%)</title><rect x="20.2693%" y="645" width="0.0160%" height="15" fill="rgb(251,126,39)" fg:x="21545" fg:w="17"/><text x="20.5193%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (17 samples, 0.02%)</title><rect x="20.2693%" y="629" width="0.0160%" height="15" fill="rgb(214,216,36)" fg:x="21545" fg:w="17"/><text x="20.5193%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (17 samples, 0.02%)</title><rect x="20.2693%" y="613" width="0.0160%" height="15" fill="rgb(220,221,8)" fg:x="21545" fg:w="17"/><text x="20.5193%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (17 samples, 0.02%)</title><rect x="20.2693%" y="597" width="0.0160%" height="15" fill="rgb(240,216,3)" fg:x="21545" fg:w="17"/><text x="20.5193%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="20.2693%" y="581" width="0.0160%" height="15" fill="rgb(232,218,17)" fg:x="21545" fg:w="17"/><text x="20.5193%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (13 samples, 0.01%)</title><rect x="20.2730%" y="565" width="0.0122%" height="15" fill="rgb(229,163,45)" fg:x="21549" fg:w="13"/><text x="20.5230%" y="575.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (54 samples, 0.05%)</title><rect x="20.2420%" y="661" width="0.0508%" height="15" fill="rgb(231,110,42)" fg:x="21516" fg:w="54"/><text x="20.4920%" y="671.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="20.2928%" y="645" width="0.0103%" height="15" fill="rgb(208,170,48)" fg:x="21570" fg:w="11"/><text x="20.5428%" y="655.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="20.3041%" y="629" width="0.0132%" height="15" fill="rgb(239,116,25)" fg:x="21582" fg:w="14"/><text x="20.5541%" y="639.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="20.3069%" y="613" width="0.0103%" height="15" fill="rgb(219,200,50)" fg:x="21585" fg:w="11"/><text x="20.5569%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (49 samples, 0.05%)</title><rect x="20.3718%" y="517" width="0.0461%" height="15" fill="rgb(245,200,0)" fg:x="21654" fg:w="49"/><text x="20.6218%" y="527.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (49 samples, 0.05%)</title><rect x="20.3718%" y="501" width="0.0461%" height="15" fill="rgb(245,119,33)" fg:x="21654" fg:w="49"/><text x="20.6218%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (104 samples, 0.10%)</title><rect x="20.3285%" y="565" width="0.0978%" height="15" fill="rgb(231,125,12)" fg:x="21608" fg:w="104"/><text x="20.5785%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (104 samples, 0.10%)</title><rect x="20.3285%" y="549" width="0.0978%" height="15" fill="rgb(216,96,41)" fg:x="21608" fg:w="104"/><text x="20.5785%" y="559.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (102 samples, 0.10%)</title><rect x="20.3304%" y="533" width="0.0960%" height="15" fill="rgb(248,43,45)" fg:x="21610" fg:w="102"/><text x="20.5804%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (139 samples, 0.13%)</title><rect x="20.3172%" y="597" width="0.1308%" height="15" fill="rgb(217,222,7)" fg:x="21596" fg:w="139"/><text x="20.5672%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (139 samples, 0.13%)</title><rect x="20.3172%" y="581" width="0.1308%" height="15" fill="rgb(233,28,6)" fg:x="21596" fg:w="139"/><text x="20.5672%" y="591.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (23 samples, 0.02%)</title><rect x="20.4264%" y="565" width="0.0216%" height="15" fill="rgb(231,218,15)" fg:x="21712" fg:w="23"/><text x="20.6764%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (140 samples, 0.13%)</title><rect x="20.3172%" y="629" width="0.1317%" height="15" fill="rgb(226,171,48)" fg:x="21596" fg:w="140"/><text x="20.5672%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (140 samples, 0.13%)</title><rect x="20.3172%" y="613" width="0.1317%" height="15" fill="rgb(235,201,9)" fg:x="21596" fg:w="140"/><text x="20.5672%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (158 samples, 0.15%)</title><rect x="20.3031%" y="645" width="0.1486%" height="15" fill="rgb(217,80,15)" fg:x="21581" fg:w="158"/><text x="20.5531%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,264 samples, 6.83%)</title><rect x="13.6358%" y="773" width="6.8339%" height="15" fill="rgb(219,152,8)" fg:x="14494" fg:w="7264"/><text x="13.8858%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (515 samples, 0.48%)</title><rect x="19.9851%" y="757" width="0.4845%" height="15" fill="rgb(243,107,38)" fg:x="21243" fg:w="515"/><text x="20.2351%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (280 samples, 0.26%)</title><rect x="20.2062%" y="741" width="0.2634%" height="15" fill="rgb(231,17,5)" fg:x="21478" fg:w="280"/><text x="20.4562%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (251 samples, 0.24%)</title><rect x="20.2335%" y="725" width="0.2361%" height="15" fill="rgb(209,25,54)" fg:x="21507" fg:w="251"/><text x="20.4835%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (251 samples, 0.24%)</title><rect x="20.2335%" y="709" width="0.2361%" height="15" fill="rgb(219,0,2)" fg:x="21507" fg:w="251"/><text x="20.4835%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (251 samples, 0.24%)</title><rect x="20.2335%" y="693" width="0.2361%" height="15" fill="rgb(246,9,5)" fg:x="21507" fg:w="251"/><text x="20.4835%" y="703.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (251 samples, 0.24%)</title><rect x="20.2335%" y="677" width="0.2361%" height="15" fill="rgb(226,159,4)" fg:x="21507" fg:w="251"/><text x="20.4835%" y="687.50"></text></g><g><title>rust_dealloc (188 samples, 0.18%)</title><rect x="20.2928%" y="661" width="0.1769%" height="15" fill="rgb(219,175,34)" fg:x="21570" fg:w="188"/><text x="20.5428%" y="671.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (19 samples, 0.02%)</title><rect x="20.4518%" y="645" width="0.0179%" height="15" fill="rgb(236,10,46)" fg:x="21739" fg:w="19"/><text x="20.7018%" y="655.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (13 samples, 0.01%)</title><rect x="20.4800%" y="645" width="0.0122%" height="15" fill="rgb(240,211,16)" fg:x="21769" fg:w="13"/><text x="20.7300%" y="655.50"></text></g><g><title>rust_alloc (19 samples, 0.02%)</title><rect x="20.5139%" y="469" width="0.0179%" height="15" fill="rgb(205,3,43)" fg:x="21805" fg:w="19"/><text x="20.7639%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="20.5402%" y="453" width="0.0122%" height="15" fill="rgb(245,7,22)" fg:x="21833" fg:w="13"/><text x="20.7902%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (13 samples, 0.01%)</title><rect x="20.5402%" y="437" width="0.0122%" height="15" fill="rgb(239,132,32)" fg:x="21833" fg:w="13"/><text x="20.7902%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (11 samples, 0.01%)</title><rect x="20.5421%" y="421" width="0.0103%" height="15" fill="rgb(228,202,34)" fg:x="21835" fg:w="11"/><text x="20.7921%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::empty (20 samples, 0.02%)</title><rect x="20.5543%" y="453" width="0.0188%" height="15" fill="rgb(254,200,22)" fg:x="21848" fg:w="20"/><text x="20.8043%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (20 samples, 0.02%)</title><rect x="20.5543%" y="437" width="0.0188%" height="15" fill="rgb(219,10,39)" fg:x="21848" fg:w="20"/><text x="20.8043%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (273 samples, 0.26%)</title><rect x="20.5092%" y="501" width="0.2568%" height="15" fill="rgb(226,210,39)" fg:x="21800" fg:w="273"/><text x="20.7592%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (268 samples, 0.25%)</title><rect x="20.5139%" y="485" width="0.2521%" height="15" fill="rgb(208,219,16)" fg:x="21805" fg:w="268"/><text x="20.7639%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (245 samples, 0.23%)</title><rect x="20.5355%" y="469" width="0.2305%" height="15" fill="rgb(216,158,51)" fg:x="21828" fg:w="245"/><text x="20.7855%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (205 samples, 0.19%)</title><rect x="20.5731%" y="453" width="0.1929%" height="15" fill="rgb(233,14,44)" fg:x="21868" fg:w="205"/><text x="20.8231%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (205 samples, 0.19%)</title><rect x="20.5731%" y="437" width="0.1929%" height="15" fill="rgb(237,97,39)" fg:x="21868" fg:w="205"/><text x="20.8231%" y="447.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (309 samples, 0.29%)</title><rect x="20.4800%" y="661" width="0.2907%" height="15" fill="rgb(218,198,43)" fg:x="21769" fg:w="309"/><text x="20.7300%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (296 samples, 0.28%)</title><rect x="20.4922%" y="645" width="0.2785%" height="15" fill="rgb(231,104,20)" fg:x="21782" fg:w="296"/><text x="20.7422%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (296 samples, 0.28%)</title><rect x="20.4922%" y="629" width="0.2785%" height="15" fill="rgb(254,36,13)" fg:x="21782" fg:w="296"/><text x="20.7422%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (285 samples, 0.27%)</title><rect x="20.5026%" y="613" width="0.2681%" height="15" fill="rgb(248,14,50)" fg:x="21793" fg:w="285"/><text x="20.7526%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (285 samples, 0.27%)</title><rect x="20.5026%" y="597" width="0.2681%" height="15" fill="rgb(217,107,29)" fg:x="21793" fg:w="285"/><text x="20.7526%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (285 samples, 0.27%)</title><rect x="20.5026%" y="581" width="0.2681%" height="15" fill="rgb(251,169,33)" fg:x="21793" fg:w="285"/><text x="20.7526%" y="591.50"></text></g><g><title>alloc::alloc::alloc (285 samples, 0.27%)</title><rect x="20.5026%" y="565" width="0.2681%" height="15" fill="rgb(217,108,32)" fg:x="21793" fg:w="285"/><text x="20.7526%" y="575.50"></text></g><g><title>__rg_alloc (285 samples, 0.27%)</title><rect x="20.5026%" y="549" width="0.2681%" height="15" fill="rgb(219,66,42)" fg:x="21793" fg:w="285"/><text x="20.7526%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (285 samples, 0.27%)</title><rect x="20.5026%" y="533" width="0.2681%" height="15" fill="rgb(206,180,7)" fg:x="21793" fg:w="285"/><text x="20.7526%" y="543.50"></text></g><g><title>rust_alloc (279 samples, 0.26%)</title><rect x="20.5082%" y="517" width="0.2625%" height="15" fill="rgb(208,226,31)" fg:x="21799" fg:w="279"/><text x="20.7582%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (18 samples, 0.02%)</title><rect x="20.7716%" y="597" width="0.0169%" height="15" fill="rgb(218,26,49)" fg:x="22079" fg:w="18"/><text x="21.0216%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (13 samples, 0.01%)</title><rect x="20.7763%" y="581" width="0.0122%" height="15" fill="rgb(233,197,48)" fg:x="22084" fg:w="13"/><text x="21.0263%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (19 samples, 0.02%)</title><rect x="20.7886%" y="597" width="0.0179%" height="15" fill="rgb(252,181,51)" fg:x="22097" fg:w="19"/><text x="21.0386%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (19 samples, 0.02%)</title><rect x="20.7886%" y="581" width="0.0179%" height="15" fill="rgb(253,90,19)" fg:x="22097" fg:w="19"/><text x="21.0386%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (47 samples, 0.04%)</title><rect x="20.7716%" y="613" width="0.0442%" height="15" fill="rgb(215,171,30)" fg:x="22079" fg:w="47"/><text x="21.0216%" y="623.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (368 samples, 0.35%)</title><rect x="20.4715%" y="741" width="0.3462%" height="15" fill="rgb(214,222,9)" fg:x="21760" fg:w="368"/><text x="20.7215%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (362 samples, 0.34%)</title><rect x="20.4772%" y="725" width="0.3406%" height="15" fill="rgb(223,3,22)" fg:x="21766" fg:w="362"/><text x="20.7272%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (359 samples, 0.34%)</title><rect x="20.4800%" y="709" width="0.3377%" height="15" fill="rgb(225,196,46)" fg:x="21769" fg:w="359"/><text x="20.7300%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (359 samples, 0.34%)</title><rect x="20.4800%" y="693" width="0.3377%" height="15" fill="rgb(209,110,37)" fg:x="21769" fg:w="359"/><text x="20.7300%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (359 samples, 0.34%)</title><rect x="20.4800%" y="677" width="0.3377%" height="15" fill="rgb(249,89,12)" fg:x="21769" fg:w="359"/><text x="20.7300%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (50 samples, 0.05%)</title><rect x="20.7707%" y="661" width="0.0470%" height="15" fill="rgb(226,27,33)" fg:x="22078" fg:w="50"/><text x="21.0207%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (50 samples, 0.05%)</title><rect x="20.7707%" y="645" width="0.0470%" height="15" fill="rgb(213,82,22)" fg:x="22078" fg:w="50"/><text x="21.0207%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (50 samples, 0.05%)</title><rect x="20.7707%" y="629" width="0.0470%" height="15" fill="rgb(248,140,0)" fg:x="22078" fg:w="50"/><text x="21.0207%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="21.1357%" y="709" width="0.0169%" height="15" fill="rgb(228,106,3)" fg:x="22466" fg:w="18"/><text x="21.3857%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (20 samples, 0.02%)</title><rect x="21.1527%" y="693" width="0.0188%" height="15" fill="rgb(209,23,37)" fg:x="22484" fg:w="20"/><text x="21.4027%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new (20 samples, 0.02%)</title><rect x="21.1527%" y="677" width="0.0188%" height="15" fill="rgb(241,93,50)" fg:x="22484" fg:w="20"/><text x="21.4027%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (20 samples, 0.02%)</title><rect x="21.1527%" y="661" width="0.0188%" height="15" fill="rgb(253,46,43)" fg:x="22484" fg:w="20"/><text x="21.4027%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.02%)</title><rect x="21.1527%" y="645" width="0.0188%" height="15" fill="rgb(226,206,43)" fg:x="22484" fg:w="20"/><text x="21.4027%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (12 samples, 0.01%)</title><rect x="21.1602%" y="629" width="0.0113%" height="15" fill="rgb(217,54,7)" fg:x="22492" fg:w="12"/><text x="21.4102%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="21.2242%" y="453" width="0.0235%" height="15" fill="rgb(223,5,52)" fg:x="22560" fg:w="25"/><text x="21.4742%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (25 samples, 0.02%)</title><rect x="21.2242%" y="437" width="0.0235%" height="15" fill="rgb(206,52,46)" fg:x="22560" fg:w="25"/><text x="21.4742%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (21 samples, 0.02%)</title><rect x="21.2279%" y="421" width="0.0198%" height="15" fill="rgb(253,136,11)" fg:x="22564" fg:w="21"/><text x="21.4779%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (16 samples, 0.02%)</title><rect x="21.2326%" y="405" width="0.0151%" height="15" fill="rgb(208,106,33)" fg:x="22569" fg:w="16"/><text x="21.4826%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (16 samples, 0.02%)</title><rect x="21.2326%" y="389" width="0.0151%" height="15" fill="rgb(206,54,4)" fg:x="22569" fg:w="16"/><text x="21.4826%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (16 samples, 0.02%)</title><rect x="21.2326%" y="373" width="0.0151%" height="15" fill="rgb(213,3,15)" fg:x="22569" fg:w="16"/><text x="21.4826%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (68 samples, 0.06%)</title><rect x="21.2157%" y="501" width="0.0640%" height="15" fill="rgb(252,211,39)" fg:x="22551" fg:w="68"/><text x="21.4657%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (68 samples, 0.06%)</title><rect x="21.2157%" y="485" width="0.0640%" height="15" fill="rgb(223,6,36)" fg:x="22551" fg:w="68"/><text x="21.4657%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (59 samples, 0.06%)</title><rect x="21.2242%" y="469" width="0.0555%" height="15" fill="rgb(252,169,45)" fg:x="22560" fg:w="59"/><text x="21.4742%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (31 samples, 0.03%)</title><rect x="21.2505%" y="453" width="0.0292%" height="15" fill="rgb(212,48,26)" fg:x="22588" fg:w="31"/><text x="21.5005%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (31 samples, 0.03%)</title><rect x="21.2505%" y="437" width="0.0292%" height="15" fill="rgb(251,102,48)" fg:x="22588" fg:w="31"/><text x="21.5005%" y="447.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (141 samples, 0.13%)</title><rect x="21.1527%" y="709" width="0.1327%" height="15" fill="rgb(243,208,16)" fg:x="22484" fg:w="141"/><text x="21.4027%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (121 samples, 0.11%)</title><rect x="21.1715%" y="693" width="0.1138%" height="15" fill="rgb(219,96,24)" fg:x="22504" fg:w="121"/><text x="21.4215%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (121 samples, 0.11%)</title><rect x="21.1715%" y="677" width="0.1138%" height="15" fill="rgb(219,33,29)" fg:x="22504" fg:w="121"/><text x="21.4215%" y="687.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (108 samples, 0.10%)</title><rect x="21.1837%" y="661" width="0.1016%" height="15" fill="rgb(223,176,5)" fg:x="22517" fg:w="108"/><text x="21.4337%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (108 samples, 0.10%)</title><rect x="21.1837%" y="645" width="0.1016%" height="15" fill="rgb(228,140,14)" fg:x="22517" fg:w="108"/><text x="21.4337%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (108 samples, 0.10%)</title><rect x="21.1837%" y="629" width="0.1016%" height="15" fill="rgb(217,179,31)" fg:x="22517" fg:w="108"/><text x="21.4337%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (87 samples, 0.08%)</title><rect x="21.2035%" y="613" width="0.0818%" height="15" fill="rgb(230,9,30)" fg:x="22538" fg:w="87"/><text x="21.4535%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (79 samples, 0.07%)</title><rect x="21.2110%" y="597" width="0.0743%" height="15" fill="rgb(230,136,20)" fg:x="22546" fg:w="79"/><text x="21.4610%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (79 samples, 0.07%)</title><rect x="21.2110%" y="581" width="0.0743%" height="15" fill="rgb(215,210,22)" fg:x="22546" fg:w="79"/><text x="21.4610%" y="591.50"></text></g><g><title>alloc::alloc::alloc (79 samples, 0.07%)</title><rect x="21.2110%" y="565" width="0.0743%" height="15" fill="rgb(218,43,5)" fg:x="22546" fg:w="79"/><text x="21.4610%" y="575.50"></text></g><g><title>__rg_alloc (79 samples, 0.07%)</title><rect x="21.2110%" y="549" width="0.0743%" height="15" fill="rgb(216,11,5)" fg:x="22546" fg:w="79"/><text x="21.4610%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (79 samples, 0.07%)</title><rect x="21.2110%" y="533" width="0.0743%" height="15" fill="rgb(209,82,29)" fg:x="22546" fg:w="79"/><text x="21.4610%" y="543.50"></text></g><g><title>rust_alloc (79 samples, 0.07%)</title><rect x="21.2110%" y="517" width="0.0743%" height="15" fill="rgb(244,115,12)" fg:x="22546" fg:w="79"/><text x="21.4610%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (13 samples, 0.01%)</title><rect x="21.3135%" y="661" width="0.0122%" height="15" fill="rgb(222,82,18)" fg:x="22655" fg:w="13"/><text x="21.5635%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="21.3135%" y="645" width="0.0122%" height="15" fill="rgb(249,227,8)" fg:x="22655" fg:w="13"/><text x="21.5635%" y="655.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (13 samples, 0.01%)</title><rect x="21.3135%" y="629" width="0.0122%" height="15" fill="rgb(253,141,45)" fg:x="22655" fg:w="13"/><text x="21.5635%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="21.3399%" y="565" width="0.0132%" height="15" fill="rgb(234,184,4)" fg:x="22683" fg:w="14"/><text x="21.5899%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="21.3399%" y="629" width="0.0141%" height="15" fill="rgb(218,194,23)" fg:x="22683" fg:w="15"/><text x="21.5899%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="21.3399%" y="613" width="0.0141%" height="15" fill="rgb(235,66,41)" fg:x="22683" fg:w="15"/><text x="21.5899%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="21.3399%" y="597" width="0.0141%" height="15" fill="rgb(245,217,1)" fg:x="22683" fg:w="15"/><text x="21.5899%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="21.3399%" y="581" width="0.0141%" height="15" fill="rgb(229,91,1)" fg:x="22683" fg:w="15"/><text x="21.5899%" y="591.50"></text></g><g><title>abi_stable::erased_types::iterator::next (30 samples, 0.03%)</title><rect x="21.3276%" y="661" width="0.0282%" height="15" fill="rgb(207,101,30)" fg:x="22670" fg:w="30"/><text x="21.5776%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (17 samples, 0.02%)</title><rect x="21.3399%" y="645" width="0.0160%" height="15" fill="rgb(223,82,49)" fg:x="22683" fg:w="17"/><text x="21.5899%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.07%)</title><rect x="21.3022%" y="693" width="0.0687%" height="15" fill="rgb(218,167,17)" fg:x="22643" fg:w="73"/><text x="21.5522%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (73 samples, 0.07%)</title><rect x="21.3022%" y="677" width="0.0687%" height="15" fill="rgb(208,103,14)" fg:x="22643" fg:w="73"/><text x="21.5522%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (16 samples, 0.02%)</title><rect x="21.3559%" y="661" width="0.0151%" height="15" fill="rgb(238,20,8)" fg:x="22700" fg:w="16"/><text x="21.6059%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (15 samples, 0.01%)</title><rect x="21.3568%" y="645" width="0.0141%" height="15" fill="rgb(218,80,54)" fg:x="22701" fg:w="15"/><text x="21.6068%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (16 samples, 0.02%)</title><rect x="21.3822%" y="661" width="0.0151%" height="15" fill="rgb(240,144,17)" fg:x="22728" fg:w="16"/><text x="21.6322%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (16 samples, 0.02%)</title><rect x="21.3822%" y="645" width="0.0151%" height="15" fill="rgb(245,27,50)" fg:x="22728" fg:w="16"/><text x="21.6322%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (11 samples, 0.01%)</title><rect x="21.3869%" y="629" width="0.0103%" height="15" fill="rgb(251,51,7)" fg:x="22733" fg:w="11"/><text x="21.6369%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (11 samples, 0.01%)</title><rect x="21.3869%" y="613" width="0.0103%" height="15" fill="rgb(245,217,29)" fg:x="22733" fg:w="11"/><text x="21.6369%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (11 samples, 0.01%)</title><rect x="21.3869%" y="597" width="0.0103%" height="15" fill="rgb(221,176,29)" fg:x="22733" fg:w="11"/><text x="21.6369%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (11 samples, 0.01%)</title><rect x="21.3869%" y="581" width="0.0103%" height="15" fill="rgb(212,180,24)" fg:x="22733" fg:w="11"/><text x="21.6369%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (52 samples, 0.05%)</title><rect x="21.3709%" y="693" width="0.0489%" height="15" fill="rgb(254,24,2)" fg:x="22716" fg:w="52"/><text x="21.6209%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (52 samples, 0.05%)</title><rect x="21.3709%" y="677" width="0.0489%" height="15" fill="rgb(230,100,2)" fg:x="22716" fg:w="52"/><text x="21.6209%" y="687.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (24 samples, 0.02%)</title><rect x="21.3973%" y="661" width="0.0226%" height="15" fill="rgb(219,142,25)" fg:x="22744" fg:w="24"/><text x="21.6473%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (24 samples, 0.02%)</title><rect x="21.3973%" y="645" width="0.0226%" height="15" fill="rgb(240,73,43)" fg:x="22744" fg:w="24"/><text x="21.6473%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (15 samples, 0.01%)</title><rect x="21.4057%" y="629" width="0.0141%" height="15" fill="rgb(214,114,15)" fg:x="22753" fg:w="15"/><text x="21.6557%" y="639.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (17 samples, 0.02%)</title><rect x="21.4198%" y="693" width="0.0160%" height="15" fill="rgb(207,130,4)" fg:x="22768" fg:w="17"/><text x="21.6698%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (17 samples, 0.02%)</title><rect x="21.4198%" y="677" width="0.0160%" height="15" fill="rgb(221,25,40)" fg:x="22768" fg:w="17"/><text x="21.6698%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (17 samples, 0.02%)</title><rect x="21.4198%" y="661" width="0.0160%" height="15" fill="rgb(241,184,7)" fg:x="22768" fg:w="17"/><text x="21.6698%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (15 samples, 0.01%)</title><rect x="21.4631%" y="581" width="0.0141%" height="15" fill="rgb(235,159,4)" fg:x="22814" fg:w="15"/><text x="21.7131%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::value::Value&gt;&gt;&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="21.4631%" y="565" width="0.0141%" height="15" fill="rgb(214,87,48)" fg:x="22814" fg:w="15"/><text x="21.7131%" y="575.50"></text></g><g><title>alloc::alloc::box_free (15 samples, 0.01%)</title><rect x="21.4631%" y="549" width="0.0141%" height="15" fill="rgb(246,198,24)" fg:x="22814" fg:w="15"/><text x="21.7131%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="21.4631%" y="533" width="0.0141%" height="15" fill="rgb(209,66,40)" fg:x="22814" fg:w="15"/><text x="21.7131%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="21.4631%" y="517" width="0.0141%" height="15" fill="rgb(233,147,39)" fg:x="22814" fg:w="15"/><text x="21.7131%" y="527.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="21.4631%" y="501" width="0.0141%" height="15" fill="rgb(231,145,52)" fg:x="22814" fg:w="15"/><text x="21.7131%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="21.4631%" y="485" width="0.0141%" height="15" fill="rgb(206,20,26)" fg:x="22814" fg:w="15"/><text x="21.7131%" y="495.50"></text></g><g><title>rust_dealloc (24 samples, 0.02%)</title><rect x="21.4960%" y="485" width="0.0226%" height="15" fill="rgb(238,220,4)" fg:x="22849" fg:w="24"/><text x="21.7460%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="21.5280%" y="485" width="0.0376%" height="15" fill="rgb(252,195,42)" fg:x="22883" fg:w="40"/><text x="21.7780%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="21.5280%" y="469" width="0.0376%" height="15" fill="rgb(209,10,6)" fg:x="22883" fg:w="40"/><text x="21.7780%" y="479.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (40 samples, 0.04%)</title><rect x="21.5280%" y="453" width="0.0376%" height="15" fill="rgb(229,3,52)" fg:x="22883" fg:w="40"/><text x="21.7780%" y="463.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="21.5544%" y="437" width="0.0113%" height="15" fill="rgb(253,49,37)" fg:x="22911" fg:w="12"/><text x="21.8044%" y="447.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="21.5544%" y="421" width="0.0113%" height="15" fill="rgb(240,103,49)" fg:x="22911" fg:w="12"/><text x="21.8044%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (81 samples, 0.08%)</title><rect x="21.4913%" y="517" width="0.0762%" height="15" fill="rgb(250,182,30)" fg:x="22844" fg:w="81"/><text x="21.7413%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (81 samples, 0.08%)</title><rect x="21.4913%" y="501" width="0.0762%" height="15" fill="rgb(248,8,30)" fg:x="22844" fg:w="81"/><text x="21.7413%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (85 samples, 0.08%)</title><rect x="21.4913%" y="549" width="0.0800%" height="15" fill="rgb(237,120,30)" fg:x="22844" fg:w="85"/><text x="21.7413%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (85 samples, 0.08%)</title><rect x="21.4913%" y="533" width="0.0800%" height="15" fill="rgb(221,146,34)" fg:x="22844" fg:w="85"/><text x="21.7413%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (98 samples, 0.09%)</title><rect x="21.4866%" y="565" width="0.0922%" height="15" fill="rgb(242,55,13)" fg:x="22839" fg:w="98"/><text x="21.7366%" y="575.50"></text></g><g><title>rust_dealloc (112 samples, 0.11%)</title><rect x="21.4772%" y="581" width="0.1054%" height="15" fill="rgb(242,112,31)" fg:x="22829" fg:w="112"/><text x="21.7272%" y="591.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,188 samples, 1.12%)</title><rect x="20.4696%" y="773" width="1.1177%" height="15" fill="rgb(249,192,27)" fg:x="21758" fg:w="1188"/><text x="20.7196%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,188 samples, 1.12%)</title><rect x="20.4696%" y="757" width="1.1177%" height="15" fill="rgb(208,204,44)" fg:x="21758" fg:w="1188"/><text x="20.7196%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (818 samples, 0.77%)</title><rect x="20.8177%" y="741" width="0.7696%" height="15" fill="rgb(208,93,54)" fg:x="22128" fg:w="818"/><text x="21.0677%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (480 samples, 0.45%)</title><rect x="21.1357%" y="725" width="0.4516%" height="15" fill="rgb(242,1,31)" fg:x="22466" fg:w="480"/><text x="21.3857%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (321 samples, 0.30%)</title><rect x="21.2853%" y="709" width="0.3020%" height="15" fill="rgb(241,83,25)" fg:x="22625" fg:w="321"/><text x="21.5353%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (161 samples, 0.15%)</title><rect x="21.4358%" y="693" width="0.1515%" height="15" fill="rgb(205,169,50)" fg:x="22785" fg:w="161"/><text x="21.6858%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (161 samples, 0.15%)</title><rect x="21.4358%" y="677" width="0.1515%" height="15" fill="rgb(239,186,37)" fg:x="22785" fg:w="161"/><text x="21.6858%" y="687.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (161 samples, 0.15%)</title><rect x="21.4358%" y="661" width="0.1515%" height="15" fill="rgb(205,221,10)" fg:x="22785" fg:w="161"/><text x="21.6858%" y="671.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (161 samples, 0.15%)</title><rect x="21.4358%" y="645" width="0.1515%" height="15" fill="rgb(218,196,15)" fg:x="22785" fg:w="161"/><text x="21.6858%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (143 samples, 0.13%)</title><rect x="21.4528%" y="629" width="0.1345%" height="15" fill="rgb(218,196,35)" fg:x="22803" fg:w="143"/><text x="21.7028%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (143 samples, 0.13%)</title><rect x="21.4528%" y="613" width="0.1345%" height="15" fill="rgb(233,63,24)" fg:x="22803" fg:w="143"/><text x="21.7028%" y="623.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (143 samples, 0.13%)</title><rect x="21.4528%" y="597" width="0.1345%" height="15" fill="rgb(225,8,4)" fg:x="22803" fg:w="143"/><text x="21.7028%" y="607.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (17 samples, 0.02%)</title><rect x="21.6127%" y="629" width="0.0160%" height="15" fill="rgb(234,105,35)" fg:x="22973" fg:w="17"/><text x="21.8627%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="21.6673%" y="437" width="0.0132%" height="15" fill="rgb(236,21,32)" fg:x="23031" fg:w="14"/><text x="21.9173%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (14 samples, 0.01%)</title><rect x="21.6673%" y="421" width="0.0132%" height="15" fill="rgb(228,109,6)" fg:x="23031" fg:w="14"/><text x="21.9173%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (12 samples, 0.01%)</title><rect x="21.6691%" y="405" width="0.0113%" height="15" fill="rgb(229,215,31)" fg:x="23033" fg:w="12"/><text x="21.9191%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (12 samples, 0.01%)</title><rect x="21.6691%" y="389" width="0.0113%" height="15" fill="rgb(221,52,54)" fg:x="23033" fg:w="12"/><text x="21.9191%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="21.6691%" y="373" width="0.0113%" height="15" fill="rgb(252,129,43)" fg:x="23033" fg:w="12"/><text x="21.9191%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="21.6691%" y="357" width="0.0113%" height="15" fill="rgb(248,183,27)" fg:x="23033" fg:w="12"/><text x="21.9191%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::empty (20 samples, 0.02%)</title><rect x="21.6814%" y="437" width="0.0188%" height="15" fill="rgb(250,0,22)" fg:x="23046" fg:w="20"/><text x="21.9314%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (20 samples, 0.02%)</title><rect x="21.6814%" y="421" width="0.0188%" height="15" fill="rgb(213,166,10)" fg:x="23046" fg:w="20"/><text x="21.9314%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.23%)</title><rect x="21.6522%" y="485" width="0.2324%" height="15" fill="rgb(207,163,36)" fg:x="23015" fg:w="247"/><text x="21.9022%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.23%)</title><rect x="21.6522%" y="469" width="0.2324%" height="15" fill="rgb(208,122,22)" fg:x="23015" fg:w="247"/><text x="21.9022%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (236 samples, 0.22%)</title><rect x="21.6626%" y="453" width="0.2220%" height="15" fill="rgb(207,104,49)" fg:x="23026" fg:w="236"/><text x="21.9126%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (196 samples, 0.18%)</title><rect x="21.7002%" y="437" width="0.1844%" height="15" fill="rgb(248,211,50)" fg:x="23066" fg:w="196"/><text x="21.9502%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (196 samples, 0.18%)</title><rect x="21.7002%" y="421" width="0.1844%" height="15" fill="rgb(217,13,45)" fg:x="23066" fg:w="196"/><text x="21.9502%" y="431.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (291 samples, 0.27%)</title><rect x="21.6127%" y="645" width="0.2738%" height="15" fill="rgb(211,216,49)" fg:x="22973" fg:w="291"/><text x="21.8627%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (274 samples, 0.26%)</title><rect x="21.6287%" y="629" width="0.2578%" height="15" fill="rgb(221,58,53)" fg:x="22990" fg:w="274"/><text x="21.8787%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (274 samples, 0.26%)</title><rect x="21.6287%" y="613" width="0.2578%" height="15" fill="rgb(220,112,41)" fg:x="22990" fg:w="274"/><text x="21.8787%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (268 samples, 0.25%)</title><rect x="21.6343%" y="597" width="0.2521%" height="15" fill="rgb(236,38,28)" fg:x="22996" fg:w="268"/><text x="21.8843%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (266 samples, 0.25%)</title><rect x="21.6362%" y="581" width="0.2502%" height="15" fill="rgb(227,195,22)" fg:x="22998" fg:w="266"/><text x="21.8862%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (266 samples, 0.25%)</title><rect x="21.6362%" y="565" width="0.2502%" height="15" fill="rgb(214,55,33)" fg:x="22998" fg:w="266"/><text x="21.8862%" y="575.50"></text></g><g><title>alloc::alloc::alloc (266 samples, 0.25%)</title><rect x="21.6362%" y="549" width="0.2502%" height="15" fill="rgb(248,80,13)" fg:x="22998" fg:w="266"/><text x="21.8862%" y="559.50"></text></g><g><title>__rg_alloc (266 samples, 0.25%)</title><rect x="21.6362%" y="533" width="0.2502%" height="15" fill="rgb(238,52,6)" fg:x="22998" fg:w="266"/><text x="21.8862%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (266 samples, 0.25%)</title><rect x="21.6362%" y="517" width="0.2502%" height="15" fill="rgb(224,198,47)" fg:x="22998" fg:w="266"/><text x="21.8862%" y="527.50"></text></g><g><title>rust_alloc (262 samples, 0.25%)</title><rect x="21.6400%" y="501" width="0.2465%" height="15" fill="rgb(233,171,20)" fg:x="23002" fg:w="262"/><text x="21.8900%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (15 samples, 0.01%)</title><rect x="21.9391%" y="581" width="0.0141%" height="15" fill="rgb(241,30,25)" fg:x="23320" fg:w="15"/><text x="22.1891%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (13 samples, 0.01%)</title><rect x="21.9410%" y="565" width="0.0122%" height="15" fill="rgb(207,171,38)" fg:x="23322" fg:w="13"/><text x="22.1910%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (128 samples, 0.12%)</title><rect x="21.9533%" y="581" width="0.1204%" height="15" fill="rgb(234,70,1)" fg:x="23335" fg:w="128"/><text x="22.2033%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (128 samples, 0.12%)</title><rect x="21.9533%" y="565" width="0.1204%" height="15" fill="rgb(232,178,18)" fg:x="23335" fg:w="128"/><text x="22.2033%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (148 samples, 0.14%)</title><rect x="21.9391%" y="597" width="0.1392%" height="15" fill="rgb(241,78,40)" fg:x="23320" fg:w="148"/><text x="22.1891%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (702 samples, 0.66%)</title><rect x="21.5892%" y="725" width="0.6604%" height="15" fill="rgb(222,35,25)" fg:x="22948" fg:w="702"/><text x="21.8392%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (677 samples, 0.64%)</title><rect x="21.6127%" y="709" width="0.6369%" height="15" fill="rgb(207,92,16)" fg:x="22973" fg:w="677"/><text x="21.8627%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (677 samples, 0.64%)</title><rect x="21.6127%" y="693" width="0.6369%" height="15" fill="rgb(216,59,51)" fg:x="22973" fg:w="677"/><text x="21.8627%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (677 samples, 0.64%)</title><rect x="21.6127%" y="677" width="0.6369%" height="15" fill="rgb(213,80,28)" fg:x="22973" fg:w="677"/><text x="21.8627%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (677 samples, 0.64%)</title><rect x="21.6127%" y="661" width="0.6369%" height="15" fill="rgb(220,93,7)" fg:x="22973" fg:w="677"/><text x="21.8627%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (386 samples, 0.36%)</title><rect x="21.8865%" y="645" width="0.3631%" height="15" fill="rgb(225,24,44)" fg:x="23264" fg:w="386"/><text x="22.1365%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (386 samples, 0.36%)</title><rect x="21.8865%" y="629" width="0.3631%" height="15" fill="rgb(243,74,40)" fg:x="23264" fg:w="386"/><text x="22.1365%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (386 samples, 0.36%)</title><rect x="21.8865%" y="613" width="0.3631%" height="15" fill="rgb(228,39,7)" fg:x="23264" fg:w="386"/><text x="22.1365%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (182 samples, 0.17%)</title><rect x="22.0784%" y="597" width="0.1712%" height="15" fill="rgb(227,79,8)" fg:x="23468" fg:w="182"/><text x="22.3284%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="22.5789%" y="693" width="0.0132%" height="15" fill="rgb(236,58,11)" fg:x="24000" fg:w="14"/><text x="22.8289%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (31 samples, 0.03%)</title><rect x="22.5921%" y="677" width="0.0292%" height="15" fill="rgb(249,63,35)" fg:x="24014" fg:w="31"/><text x="22.8421%" y="687.50"></text></g><g><title>std::collections::hash::map::RandomState::new (31 samples, 0.03%)</title><rect x="22.5921%" y="661" width="0.0292%" height="15" fill="rgb(252,114,16)" fg:x="24014" fg:w="31"/><text x="22.8421%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (31 samples, 0.03%)</title><rect x="22.5921%" y="645" width="0.0292%" height="15" fill="rgb(254,151,24)" fg:x="24014" fg:w="31"/><text x="22.8421%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.03%)</title><rect x="22.5921%" y="629" width="0.0292%" height="15" fill="rgb(253,54,39)" fg:x="24014" fg:w="31"/><text x="22.8421%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (24 samples, 0.02%)</title><rect x="22.5986%" y="613" width="0.0226%" height="15" fill="rgb(243,25,45)" fg:x="24021" fg:w="24"/><text x="22.8486%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="22.6720%" y="437" width="0.0216%" height="15" fill="rgb(234,134,9)" fg:x="24099" fg:w="23"/><text x="22.9220%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (23 samples, 0.02%)</title><rect x="22.6720%" y="421" width="0.0216%" height="15" fill="rgb(227,166,31)" fg:x="24099" fg:w="23"/><text x="22.9220%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (22 samples, 0.02%)</title><rect x="22.6730%" y="405" width="0.0207%" height="15" fill="rgb(245,143,41)" fg:x="24100" fg:w="22"/><text x="22.9230%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (21 samples, 0.02%)</title><rect x="22.6739%" y="389" width="0.0198%" height="15" fill="rgb(238,181,32)" fg:x="24101" fg:w="21"/><text x="22.9239%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (21 samples, 0.02%)</title><rect x="22.6739%" y="373" width="0.0198%" height="15" fill="rgb(224,113,18)" fg:x="24101" fg:w="21"/><text x="22.9239%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (21 samples, 0.02%)</title><rect x="22.6739%" y="357" width="0.0198%" height="15" fill="rgb(240,229,28)" fg:x="24101" fg:w="21"/><text x="22.9239%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (57 samples, 0.05%)</title><rect x="22.6645%" y="485" width="0.0536%" height="15" fill="rgb(250,185,3)" fg:x="24091" fg:w="57"/><text x="22.9145%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (57 samples, 0.05%)</title><rect x="22.6645%" y="469" width="0.0536%" height="15" fill="rgb(212,59,25)" fg:x="24091" fg:w="57"/><text x="22.9145%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.05%)</title><rect x="22.6720%" y="453" width="0.0461%" height="15" fill="rgb(221,87,20)" fg:x="24099" fg:w="49"/><text x="22.9220%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (25 samples, 0.02%)</title><rect x="22.6946%" y="437" width="0.0235%" height="15" fill="rgb(213,74,28)" fg:x="24123" fg:w="25"/><text x="22.9446%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (25 samples, 0.02%)</title><rect x="22.6946%" y="421" width="0.0235%" height="15" fill="rgb(224,132,34)" fg:x="24123" fg:w="25"/><text x="22.9446%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (141 samples, 0.13%)</title><rect x="22.5921%" y="693" width="0.1327%" height="15" fill="rgb(222,101,24)" fg:x="24014" fg:w="141"/><text x="22.8421%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (110 samples, 0.10%)</title><rect x="22.6212%" y="677" width="0.1035%" height="15" fill="rgb(254,142,4)" fg:x="24045" fg:w="110"/><text x="22.8712%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (110 samples, 0.10%)</title><rect x="22.6212%" y="661" width="0.1035%" height="15" fill="rgb(230,229,49)" fg:x="24045" fg:w="110"/><text x="22.8712%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (98 samples, 0.09%)</title><rect x="22.6325%" y="645" width="0.0922%" height="15" fill="rgb(238,70,47)" fg:x="24057" fg:w="98"/><text x="22.8825%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (98 samples, 0.09%)</title><rect x="22.6325%" y="629" width="0.0922%" height="15" fill="rgb(231,160,17)" fg:x="24057" fg:w="98"/><text x="22.8825%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (98 samples, 0.09%)</title><rect x="22.6325%" y="613" width="0.0922%" height="15" fill="rgb(218,68,53)" fg:x="24057" fg:w="98"/><text x="22.8825%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (82 samples, 0.08%)</title><rect x="22.6476%" y="597" width="0.0771%" height="15" fill="rgb(236,111,10)" fg:x="24073" fg:w="82"/><text x="22.8976%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (70 samples, 0.07%)</title><rect x="22.6589%" y="581" width="0.0659%" height="15" fill="rgb(224,34,41)" fg:x="24085" fg:w="70"/><text x="22.9089%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (70 samples, 0.07%)</title><rect x="22.6589%" y="565" width="0.0659%" height="15" fill="rgb(241,118,19)" fg:x="24085" fg:w="70"/><text x="22.9089%" y="575.50"></text></g><g><title>alloc::alloc::alloc (70 samples, 0.07%)</title><rect x="22.6589%" y="549" width="0.0659%" height="15" fill="rgb(238,129,25)" fg:x="24085" fg:w="70"/><text x="22.9089%" y="559.50"></text></g><g><title>__rg_alloc (70 samples, 0.07%)</title><rect x="22.6589%" y="533" width="0.0659%" height="15" fill="rgb(238,22,31)" fg:x="24085" fg:w="70"/><text x="22.9089%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (70 samples, 0.07%)</title><rect x="22.6589%" y="517" width="0.0659%" height="15" fill="rgb(222,174,48)" fg:x="24085" fg:w="70"/><text x="22.9089%" y="527.50"></text></g><g><title>rust_alloc (70 samples, 0.07%)</title><rect x="22.6589%" y="501" width="0.0659%" height="15" fill="rgb(206,152,40)" fg:x="24085" fg:w="70"/><text x="22.9089%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (13 samples, 0.01%)</title><rect x="22.7652%" y="645" width="0.0122%" height="15" fill="rgb(218,99,54)" fg:x="24198" fg:w="13"/><text x="23.0152%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="22.7652%" y="629" width="0.0122%" height="15" fill="rgb(220,174,26)" fg:x="24198" fg:w="13"/><text x="23.0152%" y="639.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (13 samples, 0.01%)</title><rect x="22.7652%" y="613" width="0.0122%" height="15" fill="rgb(245,116,9)" fg:x="24198" fg:w="13"/><text x="23.0152%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="22.7924%" y="613" width="0.0113%" height="15" fill="rgb(209,72,35)" fg:x="24227" fg:w="12"/><text x="23.0424%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="22.7924%" y="597" width="0.0113%" height="15" fill="rgb(226,126,21)" fg:x="24227" fg:w="12"/><text x="23.0424%" y="607.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="22.7924%" y="581" width="0.0113%" height="15" fill="rgb(227,192,1)" fg:x="24227" fg:w="12"/><text x="23.0424%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="22.7924%" y="565" width="0.0113%" height="15" fill="rgb(237,180,29)" fg:x="24227" fg:w="12"/><text x="23.0424%" y="575.50"></text></g><g><title>abi_stable::erased_types::iterator::next (30 samples, 0.03%)</title><rect x="22.7793%" y="645" width="0.0282%" height="15" fill="rgb(230,197,35)" fg:x="24213" fg:w="30"/><text x="23.0293%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (16 samples, 0.02%)</title><rect x="22.7924%" y="629" width="0.0151%" height="15" fill="rgb(246,193,31)" fg:x="24227" fg:w="16"/><text x="23.0424%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.08%)</title><rect x="22.7501%" y="677" width="0.0762%" height="15" fill="rgb(241,36,4)" fg:x="24182" fg:w="81"/><text x="23.0001%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (81 samples, 0.08%)</title><rect x="22.7501%" y="661" width="0.0762%" height="15" fill="rgb(241,130,17)" fg:x="24182" fg:w="81"/><text x="23.0001%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (20 samples, 0.02%)</title><rect x="22.8075%" y="645" width="0.0188%" height="15" fill="rgb(206,137,32)" fg:x="24243" fg:w="20"/><text x="23.0575%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (19 samples, 0.02%)</title><rect x="22.8084%" y="629" width="0.0179%" height="15" fill="rgb(237,228,51)" fg:x="24244" fg:w="19"/><text x="23.0584%" y="639.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (17 samples, 0.02%)</title><rect x="22.8301%" y="645" width="0.0160%" height="15" fill="rgb(243,6,42)" fg:x="24267" fg:w="17"/><text x="23.0801%" y="655.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (16 samples, 0.02%)</title><rect x="22.8310%" y="629" width="0.0151%" height="15" fill="rgb(251,74,28)" fg:x="24268" fg:w="16"/><text x="23.0810%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (40 samples, 0.04%)</title><rect x="22.8263%" y="677" width="0.0376%" height="15" fill="rgb(218,20,49)" fg:x="24263" fg:w="40"/><text x="23.0763%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (40 samples, 0.04%)</title><rect x="22.8263%" y="661" width="0.0376%" height="15" fill="rgb(238,28,14)" fg:x="24263" fg:w="40"/><text x="23.0763%" y="671.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (19 samples, 0.02%)</title><rect x="22.8461%" y="645" width="0.0179%" height="15" fill="rgb(229,40,46)" fg:x="24284" fg:w="19"/><text x="23.0961%" y="655.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (19 samples, 0.02%)</title><rect x="22.8461%" y="629" width="0.0179%" height="15" fill="rgb(244,195,20)" fg:x="24284" fg:w="19"/><text x="23.0961%" y="639.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (11 samples, 0.01%)</title><rect x="22.8536%" y="613" width="0.0103%" height="15" fill="rgb(253,56,35)" fg:x="24292" fg:w="11"/><text x="23.1036%" y="623.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="22.9035%" y="469" width="0.0132%" height="15" fill="rgb(210,149,44)" fg:x="24345" fg:w="14"/><text x="23.1535%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (45 samples, 0.04%)</title><rect x="22.9449%" y="421" width="0.0423%" height="15" fill="rgb(240,135,12)" fg:x="24389" fg:w="45"/><text x="23.1949%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (39 samples, 0.04%)</title><rect x="22.9505%" y="405" width="0.0367%" height="15" fill="rgb(251,24,50)" fg:x="24395" fg:w="39"/><text x="23.2005%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (84 samples, 0.08%)</title><rect x="22.9194%" y="469" width="0.0790%" height="15" fill="rgb(243,200,47)" fg:x="24362" fg:w="84"/><text x="23.1694%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (84 samples, 0.08%)</title><rect x="22.9194%" y="453" width="0.0790%" height="15" fill="rgb(224,166,26)" fg:x="24362" fg:w="84"/><text x="23.1694%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (84 samples, 0.08%)</title><rect x="22.9194%" y="437" width="0.0790%" height="15" fill="rgb(233,0,47)" fg:x="24362" fg:w="84"/><text x="23.1694%" y="447.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="22.9872%" y="421" width="0.0113%" height="15" fill="rgb(253,80,5)" fg:x="24434" fg:w="12"/><text x="23.2372%" y="431.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="22.9872%" y="405" width="0.0113%" height="15" fill="rgb(214,133,25)" fg:x="24434" fg:w="12"/><text x="23.2372%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (130 samples, 0.12%)</title><rect x="22.9025%" y="501" width="0.1223%" height="15" fill="rgb(209,27,14)" fg:x="24344" fg:w="130"/><text x="23.1525%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (130 samples, 0.12%)</title><rect x="22.9025%" y="485" width="0.1223%" height="15" fill="rgb(219,102,51)" fg:x="24344" fg:w="130"/><text x="23.1525%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (28 samples, 0.03%)</title><rect x="22.9985%" y="469" width="0.0263%" height="15" fill="rgb(237,18,16)" fg:x="24446" fg:w="28"/><text x="23.2485%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (146 samples, 0.14%)</title><rect x="22.9025%" y="533" width="0.1374%" height="15" fill="rgb(241,85,17)" fg:x="24344" fg:w="146"/><text x="23.1525%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (146 samples, 0.14%)</title><rect x="22.9025%" y="517" width="0.1374%" height="15" fill="rgb(236,90,42)" fg:x="24344" fg:w="146"/><text x="23.1525%" y="527.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.02%)</title><rect x="23.0248%" y="501" width="0.0151%" height="15" fill="rgb(249,57,21)" fg:x="24474" fg:w="16"/><text x="23.2748%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.02%)</title><rect x="23.0248%" y="485" width="0.0151%" height="15" fill="rgb(243,12,36)" fg:x="24474" fg:w="16"/><text x="23.2748%" y="495.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (16 samples, 0.02%)</title><rect x="23.0248%" y="469" width="0.0151%" height="15" fill="rgb(253,128,47)" fg:x="24474" fg:w="16"/><text x="23.2748%" y="479.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.02%)</title><rect x="23.0248%" y="453" width="0.0151%" height="15" fill="rgb(207,33,20)" fg:x="24474" fg:w="16"/><text x="23.2748%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (153 samples, 0.14%)</title><rect x="22.9016%" y="549" width="0.1439%" height="15" fill="rgb(233,215,35)" fg:x="24343" fg:w="153"/><text x="23.1516%" y="559.50"></text></g><g><title>rust_dealloc (166 samples, 0.16%)</title><rect x="22.8959%" y="565" width="0.1562%" height="15" fill="rgb(249,188,52)" fg:x="24337" fg:w="166"/><text x="23.1459%" y="575.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (1,559 samples, 1.47%)</title><rect x="21.5873%" y="773" width="1.4667%" height="15" fill="rgb(225,12,32)" fg:x="22946" fg:w="1559"/><text x="21.8373%" y="783.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (1,559 samples, 1.47%)</title><rect x="21.5873%" y="757" width="1.4667%" height="15" fill="rgb(247,98,14)" fg:x="22946" fg:w="1559"/><text x="21.8373%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,559 samples, 1.47%)</title><rect x="21.5873%" y="741" width="1.4667%" height="15" fill="rgb(247,219,48)" fg:x="22946" fg:w="1559"/><text x="21.8373%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (855 samples, 0.80%)</title><rect x="22.2496%" y="725" width="0.8044%" height="15" fill="rgb(253,60,48)" fg:x="23650" fg:w="855"/><text x="22.4996%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (505 samples, 0.48%)</title><rect x="22.5789%" y="709" width="0.4751%" height="15" fill="rgb(245,15,52)" fg:x="24000" fg:w="505"/><text x="22.8289%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (350 samples, 0.33%)</title><rect x="22.7247%" y="693" width="0.3293%" height="15" fill="rgb(220,133,28)" fg:x="24155" fg:w="350"/><text x="22.9747%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (197 samples, 0.19%)</title><rect x="22.8686%" y="677" width="0.1853%" height="15" fill="rgb(217,180,4)" fg:x="24308" fg:w="197"/><text x="23.1186%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (197 samples, 0.19%)</title><rect x="22.8686%" y="661" width="0.1853%" height="15" fill="rgb(251,24,1)" fg:x="24308" fg:w="197"/><text x="23.1186%" y="671.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (197 samples, 0.19%)</title><rect x="22.8686%" y="645" width="0.1853%" height="15" fill="rgb(212,185,49)" fg:x="24308" fg:w="197"/><text x="23.1186%" y="655.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (197 samples, 0.19%)</title><rect x="22.8686%" y="629" width="0.1853%" height="15" fill="rgb(215,175,22)" fg:x="24308" fg:w="197"/><text x="23.1186%" y="639.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (186 samples, 0.17%)</title><rect x="22.8790%" y="613" width="0.1750%" height="15" fill="rgb(250,205,14)" fg:x="24319" fg:w="186"/><text x="23.1290%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (186 samples, 0.17%)</title><rect x="22.8790%" y="597" width="0.1750%" height="15" fill="rgb(225,211,22)" fg:x="24319" fg:w="186"/><text x="23.1290%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (186 samples, 0.17%)</title><rect x="22.8790%" y="581" width="0.1750%" height="15" fill="rgb(251,179,42)" fg:x="24319" fg:w="186"/><text x="23.1290%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="23.0606%" y="549" width="0.0198%" height="15" fill="rgb(208,216,51)" fg:x="24512" fg:w="21"/><text x="23.3106%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="23.0606%" y="629" width="0.0207%" height="15" fill="rgb(235,36,11)" fg:x="24512" fg:w="22"/><text x="23.3106%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="23.0606%" y="613" width="0.0207%" height="15" fill="rgb(213,189,28)" fg:x="24512" fg:w="22"/><text x="23.3106%" y="623.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="23.0606%" y="597" width="0.0207%" height="15" fill="rgb(227,203,42)" fg:x="24512" fg:w="22"/><text x="23.3106%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="23.0606%" y="581" width="0.0207%" height="15" fill="rgb(244,72,36)" fg:x="24512" fg:w="22"/><text x="23.3106%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="23.0606%" y="565" width="0.0207%" height="15" fill="rgb(213,53,17)" fg:x="24512" fg:w="22"/><text x="23.3106%" y="575.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;abi_stable::std_types::tuple::Tuple2&lt;K,V&gt;&gt;&gt;::extend (36 samples, 0.03%)</title><rect x="23.0540%" y="757" width="0.0339%" height="15" fill="rgb(207,167,3)" fg:x="24505" fg:w="36"/><text x="23.3040%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (36 samples, 0.03%)</title><rect x="23.0540%" y="741" width="0.0339%" height="15" fill="rgb(216,98,30)" fg:x="24505" fg:w="36"/><text x="23.3040%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.03%)</title><rect x="23.0540%" y="725" width="0.0339%" height="15" fill="rgb(236,123,15)" fg:x="24505" fg:w="36"/><text x="23.3040%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.03%)</title><rect x="23.0540%" y="709" width="0.0339%" height="15" fill="rgb(248,81,50)" fg:x="24505" fg:w="36"/><text x="23.3040%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.03%)</title><rect x="23.0540%" y="693" width="0.0339%" height="15" fill="rgb(214,120,4)" fg:x="24505" fg:w="36"/><text x="23.3040%" y="703.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (36 samples, 0.03%)</title><rect x="23.0540%" y="677" width="0.0339%" height="15" fill="rgb(208,179,34)" fg:x="24505" fg:w="36"/><text x="23.3040%" y="687.50"></text></g><g><title>abi_stable::erased_types::iterator::next (36 samples, 0.03%)</title><rect x="23.0540%" y="661" width="0.0339%" height="15" fill="rgb(227,140,7)" fg:x="24505" fg:w="36"/><text x="23.3040%" y="671.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (29 samples, 0.03%)</title><rect x="23.0606%" y="645" width="0.0273%" height="15" fill="rgb(214,22,6)" fg:x="24512" fg:w="29"/><text x="23.3106%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (10,063 samples, 9.47%)</title><rect x="13.6358%" y="789" width="9.4671%" height="15" fill="rgb(207,137,27)" fg:x="14494" fg:w="10063"/><text x="13.8858%" y="799.50">tremor_runtime..</text></g><g><title>tremor_pipeline::OpMeta::merge (52 samples, 0.05%)</title><rect x="23.0540%" y="773" width="0.0489%" height="15" fill="rgb(210,8,46)" fg:x="24505" fg:w="52"/><text x="23.3040%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.02%)</title><rect x="23.0879%" y="757" width="0.0151%" height="15" fill="rgb(240,16,54)" fg:x="24541" fg:w="16"/><text x="23.3379%" y="767.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (16 samples, 0.02%)</title><rect x="23.0879%" y="741" width="0.0151%" height="15" fill="rgb(211,209,29)" fg:x="24541" fg:w="16"/><text x="23.3379%" y="751.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (16 samples, 0.02%)</title><rect x="23.0879%" y="725" width="0.0151%" height="15" fill="rgb(226,228,24)" fg:x="24541" fg:w="16"/><text x="23.3379%" y="735.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (16 samples, 0.02%)</title><rect x="23.0879%" y="709" width="0.0151%" height="15" fill="rgb(222,84,9)" fg:x="24541" fg:w="16"/><text x="23.3379%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (16 samples, 0.02%)</title><rect x="23.0879%" y="693" width="0.0151%" height="15" fill="rgb(234,203,30)" fg:x="24541" fg:w="16"/><text x="23.3379%" y="703.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (11 samples, 0.01%)</title><rect x="23.0926%" y="677" width="0.0103%" height="15" fill="rgb(238,109,14)" fg:x="24546" fg:w="11"/><text x="23.3426%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.01%)</title><rect x="23.0926%" y="661" width="0.0103%" height="15" fill="rgb(233,206,34)" fg:x="24546" fg:w="11"/><text x="23.3426%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (11 samples, 0.01%)</title><rect x="23.0926%" y="645" width="0.0103%" height="15" fill="rgb(220,167,47)" fg:x="24546" fg:w="11"/><text x="23.3426%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (11 samples, 0.01%)</title><rect x="23.0926%" y="629" width="0.0103%" height="15" fill="rgb(238,105,10)" fg:x="24546" fg:w="11"/><text x="23.3426%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (11 samples, 0.01%)</title><rect x="23.0926%" y="613" width="0.0103%" height="15" fill="rgb(213,227,17)" fg:x="24546" fg:w="11"/><text x="23.3426%" y="623.50"></text></g><g><title>size_to_sizeclass (20 samples, 0.02%)</title><rect x="23.2468%" y="741" width="0.0188%" height="15" fill="rgb(217,132,38)" fg:x="24710" fg:w="20"/><text x="23.4968%" y="751.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="23.2657%" y="677" width="0.0169%" height="15" fill="rgb(242,146,4)" fg:x="24730" fg:w="18"/><text x="23.5157%" y="687.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="23.3513%" y="645" width="0.0141%" height="15" fill="rgb(212,61,9)" fg:x="24821" fg:w="15"/><text x="23.6013%" y="655.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="23.3513%" y="629" width="0.0141%" height="15" fill="rgb(247,126,22)" fg:x="24821" fg:w="15"/><text x="23.6013%" y="639.50"></text></g><g><title>snmalloc::Remote::set_info (14 samples, 0.01%)</title><rect x="23.3654%" y="645" width="0.0132%" height="15" fill="rgb(220,196,2)" fg:x="24836" fg:w="14"/><text x="23.6154%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (100 samples, 0.09%)</title><rect x="23.2920%" y="677" width="0.0941%" height="15" fill="rgb(208,46,4)" fg:x="24758" fg:w="100"/><text x="23.5420%" y="687.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (89 samples, 0.08%)</title><rect x="23.3024%" y="661" width="0.0837%" height="15" fill="rgb(252,104,46)" fg:x="24769" fg:w="89"/><text x="23.5524%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="23.3861%" y="677" width="0.0103%" height="15" fill="rgb(237,152,48)" fg:x="24858" fg:w="11"/><text x="23.6361%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="23.3861%" y="661" width="0.0103%" height="15" fill="rgb(221,59,37)" fg:x="24858" fg:w="11"/><text x="23.6361%" y="671.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="23.3861%" y="645" width="0.0103%" height="15" fill="rgb(209,202,51)" fg:x="24858" fg:w="11"/><text x="23.6361%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (191 samples, 0.18%)</title><rect x="23.2657%" y="709" width="0.1797%" height="15" fill="rgb(228,81,30)" fg:x="24730" fg:w="191"/><text x="23.5157%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (191 samples, 0.18%)</title><rect x="23.2657%" y="693" width="0.1797%" height="15" fill="rgb(227,42,39)" fg:x="24730" fg:w="191"/><text x="23.5157%" y="703.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (52 samples, 0.05%)</title><rect x="23.3964%" y="677" width="0.0489%" height="15" fill="rgb(221,26,2)" fg:x="24869" fg:w="52"/><text x="23.6464%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (192 samples, 0.18%)</title><rect x="23.2657%" y="741" width="0.1806%" height="15" fill="rgb(254,61,31)" fg:x="24730" fg:w="192"/><text x="23.5157%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (192 samples, 0.18%)</title><rect x="23.2657%" y="725" width="0.1806%" height="15" fill="rgb(222,173,38)" fg:x="24730" fg:w="192"/><text x="23.5157%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (221 samples, 0.21%)</title><rect x="23.2468%" y="757" width="0.2079%" height="15" fill="rgb(218,50,12)" fg:x="24710" fg:w="221"/><text x="23.4968%" y="767.50"></text></g><g><title>rust_dealloc (243 samples, 0.23%)</title><rect x="23.2431%" y="773" width="0.2286%" height="15" fill="rgb(223,88,40)" fg:x="24706" fg:w="243"/><text x="23.4931%" y="783.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (18 samples, 0.02%)</title><rect x="23.4548%" y="757" width="0.0169%" height="15" fill="rgb(237,54,19)" fg:x="24931" fg:w="18"/><text x="23.7048%" y="767.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (393 samples, 0.37%)</title><rect x="23.1029%" y="789" width="0.3697%" height="15" fill="rgb(251,129,25)" fg:x="24557" fg:w="393"/><text x="23.3529%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="24.7831%" y="773" width="0.0207%" height="15" fill="rgb(238,97,19)" fg:x="26343" fg:w="22"/><text x="25.0331%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="24.9224%" y="757" width="0.0122%" height="15" fill="rgb(240,169,18)" fg:x="26491" fg:w="13"/><text x="25.1724%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (543 samples, 0.51%)</title><rect x="25.1632%" y="741" width="0.5108%" height="15" fill="rgb(230,187,49)" fg:x="26747" fg:w="543"/><text x="25.4132%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (447 samples, 0.42%)</title><rect x="25.6741%" y="741" width="0.4205%" height="15" fill="rgb(209,44,26)" fg:x="27290" fg:w="447"/><text x="25.9241%" y="751.50"></text></g><g><title>core::ptr::write (423 samples, 0.40%)</title><rect x="25.6967%" y="725" width="0.3980%" height="15" fill="rgb(244,0,6)" fg:x="27314" fg:w="423"/><text x="25.9467%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (423 samples, 0.40%)</title><rect x="25.6967%" y="709" width="0.3980%" height="15" fill="rgb(248,18,21)" fg:x="27314" fg:w="423"/><text x="25.9467%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 0.03%)</title><rect x="26.0946%" y="741" width="0.0320%" height="15" fill="rgb(245,180,19)" fg:x="27737" fg:w="34"/><text x="26.3446%" y="751.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (19 samples, 0.02%)</title><rect x="26.1539%" y="709" width="0.0179%" height="15" fill="rgb(252,118,36)" fg:x="27800" fg:w="19"/><text x="26.4039%" y="719.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (19 samples, 0.02%)</title><rect x="26.1539%" y="693" width="0.0179%" height="15" fill="rgb(210,224,19)" fg:x="27800" fg:w="19"/><text x="26.4039%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (740 samples, 0.70%)</title><rect x="26.1718%" y="645" width="0.6962%" height="15" fill="rgb(218,30,24)" fg:x="27819" fg:w="740"/><text x="26.4218%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (651 samples, 0.61%)</title><rect x="26.2555%" y="629" width="0.6125%" height="15" fill="rgb(219,75,50)" fg:x="27908" fg:w="651"/><text x="26.5055%" y="639.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (769 samples, 0.72%)</title><rect x="26.1473%" y="725" width="0.7235%" height="15" fill="rgb(234,72,50)" fg:x="27793" fg:w="769"/><text x="26.3973%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (743 samples, 0.70%)</title><rect x="26.1718%" y="709" width="0.6990%" height="15" fill="rgb(219,100,48)" fg:x="27819" fg:w="743"/><text x="26.4218%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (743 samples, 0.70%)</title><rect x="26.1718%" y="693" width="0.6990%" height="15" fill="rgb(253,5,41)" fg:x="27819" fg:w="743"/><text x="26.4218%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (743 samples, 0.70%)</title><rect x="26.1718%" y="677" width="0.6990%" height="15" fill="rgb(247,181,11)" fg:x="27819" fg:w="743"/><text x="26.4218%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (743 samples, 0.70%)</title><rect x="26.1718%" y="661" width="0.6990%" height="15" fill="rgb(222,223,25)" fg:x="27819" fg:w="743"/><text x="26.4218%" y="671.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (810 samples, 0.76%)</title><rect x="26.1266%" y="741" width="0.7620%" height="15" fill="rgb(214,198,28)" fg:x="27771" fg:w="810"/><text x="26.3766%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (19 samples, 0.02%)</title><rect x="26.8708%" y="725" width="0.0179%" height="15" fill="rgb(230,46,43)" fg:x="28562" fg:w="19"/><text x="27.1208%" y="735.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="27.6488%" y="709" width="0.0216%" height="15" fill="rgb(233,65,53)" fg:x="29389" fg:w="23"/><text x="27.8988%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (72 samples, 0.07%)</title><rect x="27.6732%" y="709" width="0.0677%" height="15" fill="rgb(221,121,27)" fg:x="29415" fg:w="72"/><text x="27.9232%" y="719.50"></text></g><g><title>core::ptr::read (34 samples, 0.03%)</title><rect x="27.7090%" y="693" width="0.0320%" height="15" fill="rgb(247,70,47)" fg:x="29453" fg:w="34"/><text x="27.9590%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (441 samples, 0.41%)</title><rect x="27.7410%" y="709" width="0.4149%" height="15" fill="rgb(228,85,35)" fg:x="29487" fg:w="441"/><text x="27.9910%" y="719.50"></text></g><g><title>core::ptr::write (441 samples, 0.41%)</title><rect x="27.7410%" y="693" width="0.4149%" height="15" fill="rgb(209,50,18)" fg:x="29487" fg:w="441"/><text x="27.9910%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (421 samples, 0.40%)</title><rect x="27.7598%" y="677" width="0.3961%" height="15" fill="rgb(250,19,35)" fg:x="29507" fg:w="421"/><text x="28.0098%" y="687.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,337 samples, 1.26%)</title><rect x="26.9169%" y="725" width="1.2578%" height="15" fill="rgb(253,107,29)" fg:x="28611" fg:w="1337"/><text x="27.1669%" y="735.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (14 samples, 0.01%)</title><rect x="28.1615%" y="709" width="0.0132%" height="15" fill="rgb(252,179,29)" fg:x="29934" fg:w="14"/><text x="28.4115%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,402 samples, 1.32%)</title><rect x="26.8886%" y="741" width="1.3190%" height="15" fill="rgb(238,194,6)" fg:x="28581" fg:w="1402"/><text x="27.1386%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (35 samples, 0.03%)</title><rect x="28.1747%" y="725" width="0.0329%" height="15" fill="rgb(238,164,29)" fg:x="29948" fg:w="35"/><text x="28.4247%" y="735.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,486 samples, 3.28%)</title><rect x="24.9346%" y="757" width="3.2796%" height="15" fill="rgb(224,25,9)" fg:x="26504" fg:w="3486"/><text x="25.1846%" y="767.50">tre..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (35 samples, 0.03%)</title><rect x="28.2142%" y="757" width="0.0329%" height="15" fill="rgb(244,153,23)" fg:x="29990" fg:w="35"/><text x="28.4642%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,704 samples, 3.48%)</title><rect x="24.8048%" y="773" width="3.4847%" height="15" fill="rgb(212,203,14)" fg:x="26366" fg:w="3704"/><text x="25.0548%" y="783.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (45 samples, 0.04%)</title><rect x="28.2471%" y="757" width="0.0423%" height="15" fill="rgb(220,164,20)" fg:x="30025" fg:w="45"/><text x="28.4971%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,379 samples, 1.30%)</title><rect x="28.2895%" y="773" width="1.2973%" height="15" fill="rgb(222,203,48)" fg:x="30070" fg:w="1379"/><text x="28.5395%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="29.5887%" y="757" width="0.0320%" height="15" fill="rgb(215,159,22)" fg:x="31451" fg:w="34"/><text x="29.8387%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (35 samples, 0.03%)</title><rect x="29.5887%" y="773" width="0.0329%" height="15" fill="rgb(216,183,47)" fg:x="31451" fg:w="35"/><text x="29.8387%" y="783.50"></text></g><g><title>async_global_executor::reactor::block_on (17,000 samples, 15.99%)</title><rect x="13.6358%" y="1125" width="15.9934%" height="15" fill="rgb(229,195,25)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="1135.50">async_global_executor::re..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (17,000 samples, 15.99%)</title><rect x="13.6358%" y="1109" width="15.9934%" height="15" fill="rgb(224,132,51)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="1119.50">async_global_executor::re..</text></g><g><title>async_io::driver::block_on (17,000 samples, 15.99%)</title><rect x="13.6358%" y="1093" width="15.9934%" height="15" fill="rgb(240,63,7)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="1103.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,000 samples, 15.99%)</title><rect x="13.6358%" y="1077" width="15.9934%" height="15" fill="rgb(249,182,41)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="1087.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,000 samples, 15.99%)</title><rect x="13.6358%" y="1061" width="15.9934%" height="15" fill="rgb(243,47,26)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="1071.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}} (17,000 samples, 15.99%)</title><rect x="13.6358%" y="1045" width="15.9934%" height="15" fill="rgb(233,48,2)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="1055.50">async_executor::Executor:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,000 samples, 15.99%)</title><rect x="13.6358%" y="1029" width="15.9934%" height="15" fill="rgb(244,165,34)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="1039.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,000 samples, 15.99%)</title><rect x="13.6358%" y="1013" width="15.9934%" height="15" fill="rgb(207,89,7)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="1023.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (17,000 samples, 15.99%)</title><rect x="13.6358%" y="997" width="15.9934%" height="15" fill="rgb(244,117,36)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="1007.50">async_executor::Executor:..</text></g><g><title>async_task::runnable::Runnable::run (17,000 samples, 15.99%)</title><rect x="13.6358%" y="981" width="15.9934%" height="15" fill="rgb(226,144,34)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="991.50">async_task::runnable::Run..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (17,000 samples, 15.99%)</title><rect x="13.6358%" y="965" width="15.9934%" height="15" fill="rgb(213,23,19)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="975.50">async_task::raw::RawTask&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (17,000 samples, 15.99%)</title><rect x="13.6358%" y="949" width="15.9934%" height="15" fill="rgb(217,75,12)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="959.50">&lt;core::pin::Pin&lt;P&gt; as cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,000 samples, 15.99%)</title><rect x="13.6358%" y="933" width="15.9934%" height="15" fill="rgb(224,159,17)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="943.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (17,000 samples, 15.99%)</title><rect x="13.6358%" y="917" width="15.9934%" height="15" fill="rgb(217,118,1)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="927.50">async_executor::Executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (17,000 samples, 15.99%)</title><rect x="13.6358%" y="901" width="15.9934%" height="15" fill="rgb(232,180,48)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="911.50">&lt;async_std::task::builder..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (17,000 samples, 15.99%)</title><rect x="13.6358%" y="885" width="15.9934%" height="15" fill="rgb(230,27,33)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="895.50">async_std::task::task_loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17,000 samples, 15.99%)</title><rect x="13.6358%" y="869" width="15.9934%" height="15" fill="rgb(205,31,21)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="879.50">std::thread::local::Local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17,000 samples, 15.99%)</title><rect x="13.6358%" y="853" width="15.9934%" height="15" fill="rgb(253,59,4)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="863.50">std::thread::local::Local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (17,000 samples, 15.99%)</title><rect x="13.6358%" y="837" width="15.9934%" height="15" fill="rgb(224,201,9)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="847.50">async_std::task::task_loc..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (17,000 samples, 15.99%)</title><rect x="13.6358%" y="821" width="15.9934%" height="15" fill="rgb(229,206,30)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="831.50">&lt;async_std::task::builder..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,000 samples, 15.99%)</title><rect x="13.6358%" y="805" width="15.9934%" height="15" fill="rgb(212,67,47)" fg:x="14494" fg:w="17000"/><text x="13.8858%" y="815.50">&lt;core::future::from_gener..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,544 samples, 6.16%)</title><rect x="23.4726%" y="789" width="6.1565%" height="15" fill="rgb(211,96,50)" fg:x="24950" fg:w="6544"/><text x="23.7226%" y="799.50">tremor_r..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (51 samples, 0.05%)</title><rect x="29.6291%" y="661" width="0.0480%" height="15" fill="rgb(252,114,18)" fg:x="31494" fg:w="51"/><text x="29.8791%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="29.9509%" y="645" width="0.0122%" height="15" fill="rgb(223,58,37)" fg:x="31836" fg:w="13"/><text x="30.2009%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (13 samples, 0.01%)</title><rect x="29.9509%" y="629" width="0.0122%" height="15" fill="rgb(237,70,4)" fg:x="31836" fg:w="13"/><text x="30.2009%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (52 samples, 0.05%)</title><rect x="31.2501%" y="613" width="0.0489%" height="15" fill="rgb(244,85,46)" fg:x="33217" fg:w="52"/><text x="31.5001%" y="623.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (52 samples, 0.05%)</title><rect x="31.2501%" y="597" width="0.0489%" height="15" fill="rgb(223,39,52)" fg:x="33217" fg:w="52"/><text x="31.5001%" y="607.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (143 samples, 0.13%)</title><rect x="31.3705%" y="549" width="0.1345%" height="15" fill="rgb(218,200,14)" fg:x="33345" fg:w="143"/><text x="31.6205%" y="559.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (220 samples, 0.21%)</title><rect x="31.2990%" y="581" width="0.2070%" height="15" fill="rgb(208,171,16)" fg:x="33269" fg:w="220"/><text x="31.5490%" y="591.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (144 samples, 0.14%)</title><rect x="31.3705%" y="565" width="0.1355%" height="15" fill="rgb(234,200,18)" fg:x="33345" fg:w="144"/><text x="31.6205%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (35 samples, 0.03%)</title><rect x="31.5352%" y="533" width="0.0329%" height="15" fill="rgb(228,45,11)" fg:x="33520" fg:w="35"/><text x="31.7852%" y="543.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (35 samples, 0.03%)</title><rect x="31.5352%" y="517" width="0.0329%" height="15" fill="rgb(237,182,11)" fg:x="33520" fg:w="35"/><text x="31.7852%" y="527.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (35 samples, 0.03%)</title><rect x="31.5352%" y="501" width="0.0329%" height="15" fill="rgb(241,175,49)" fg:x="33520" fg:w="35"/><text x="31.7852%" y="511.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="31.5681%" y="485" width="0.0254%" height="15" fill="rgb(247,38,35)" fg:x="33555" fg:w="27"/><text x="31.8181%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.03%)</title><rect x="31.5681%" y="469" width="0.0254%" height="15" fill="rgb(228,39,49)" fg:x="33555" fg:w="27"/><text x="31.8181%" y="479.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (27 samples, 0.03%)</title><rect x="31.5681%" y="453" width="0.0254%" height="15" fill="rgb(226,101,26)" fg:x="33555" fg:w="27"/><text x="31.8181%" y="463.50"></text></g><g><title>async_ffi::FfiContext::with_context (17 samples, 0.02%)</title><rect x="31.5775%" y="437" width="0.0160%" height="15" fill="rgb(206,141,19)" fg:x="33565" fg:w="17"/><text x="31.8275%" y="447.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,281 samples, 1.21%)</title><rect x="31.5276%" y="549" width="1.2051%" height="15" fill="rgb(211,200,13)" fg:x="33512" fg:w="1281"/><text x="31.7776%" y="559.50"></text></g><g><title>std::panic::catch_unwind (1,238 samples, 1.16%)</title><rect x="31.5681%" y="533" width="1.1647%" height="15" fill="rgb(241,121,6)" fg:x="33555" fg:w="1238"/><text x="31.8181%" y="543.50"></text></g><g><title>std::panicking::try (1,238 samples, 1.16%)</title><rect x="31.5681%" y="517" width="1.1647%" height="15" fill="rgb(234,221,29)" fg:x="33555" fg:w="1238"/><text x="31.8181%" y="527.50"></text></g><g><title>std::panicking::try::do_call (1,238 samples, 1.16%)</title><rect x="31.5681%" y="501" width="1.1647%" height="15" fill="rgb(229,136,5)" fg:x="33555" fg:w="1238"/><text x="31.8181%" y="511.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1,211 samples, 1.14%)</title><rect x="31.5935%" y="485" width="1.1393%" height="15" fill="rgb(238,36,11)" fg:x="33582" fg:w="1211"/><text x="31.8435%" y="495.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,301 samples, 1.22%)</title><rect x="31.5098%" y="565" width="1.2240%" height="15" fill="rgb(251,55,41)" fg:x="33493" fg:w="1301"/><text x="31.7598%" y="575.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,315 samples, 1.24%)</title><rect x="31.5060%" y="581" width="1.2371%" height="15" fill="rgb(242,34,40)" fg:x="33489" fg:w="1315"/><text x="31.7560%" y="591.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,727 samples, 1.62%)</title><rect x="31.2990%" y="613" width="1.6247%" height="15" fill="rgb(215,42,17)" fg:x="33269" fg:w="1727"/><text x="31.5490%" y="623.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,727 samples, 1.62%)</title><rect x="31.2990%" y="597" width="1.6247%" height="15" fill="rgb(207,44,46)" fg:x="33269" fg:w="1727"/><text x="31.5490%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (192 samples, 0.18%)</title><rect x="32.7431%" y="581" width="0.1806%" height="15" fill="rgb(211,206,28)" fg:x="34804" fg:w="192"/><text x="32.9931%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (642 samples, 0.60%)</title><rect x="32.9238%" y="613" width="0.6040%" height="15" fill="rgb(237,167,16)" fg:x="34996" fg:w="642"/><text x="33.1738%" y="623.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (53 samples, 0.05%)</title><rect x="33.5278%" y="613" width="0.0499%" height="15" fill="rgb(233,66,6)" fg:x="35638" fg:w="53"/><text x="33.7778%" y="623.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (19 samples, 0.02%)</title><rect x="33.5776%" y="565" width="0.0179%" height="15" fill="rgb(246,123,29)" fg:x="35691" fg:w="19"/><text x="33.8276%" y="575.50"></text></g><g><title>async_ffi::DropBomb::with (18 samples, 0.02%)</title><rect x="33.5786%" y="549" width="0.0169%" height="15" fill="rgb(209,62,40)" fg:x="35692" fg:w="18"/><text x="33.8286%" y="559.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="33.6378%" y="421" width="0.0198%" height="15" fill="rgb(218,4,25)" fg:x="35755" fg:w="21"/><text x="33.8878%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="33.6444%" y="405" width="0.0132%" height="15" fill="rgb(253,91,49)" fg:x="35762" fg:w="14"/><text x="33.8944%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (53 samples, 0.05%)</title><rect x="33.6162%" y="469" width="0.0499%" height="15" fill="rgb(228,155,29)" fg:x="35732" fg:w="53"/><text x="33.8662%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (53 samples, 0.05%)</title><rect x="33.6162%" y="453" width="0.0499%" height="15" fill="rgb(243,57,37)" fg:x="35732" fg:w="53"/><text x="33.8662%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (52 samples, 0.05%)</title><rect x="33.6171%" y="437" width="0.0489%" height="15" fill="rgb(244,167,17)" fg:x="35733" fg:w="52"/><text x="33.8671%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (76 samples, 0.07%)</title><rect x="33.6030%" y="501" width="0.0715%" height="15" fill="rgb(207,181,38)" fg:x="35718" fg:w="76"/><text x="33.8530%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (76 samples, 0.07%)</title><rect x="33.6030%" y="485" width="0.0715%" height="15" fill="rgb(211,8,23)" fg:x="35718" fg:w="76"/><text x="33.8530%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (81 samples, 0.08%)</title><rect x="33.6030%" y="533" width="0.0762%" height="15" fill="rgb(235,11,44)" fg:x="35718" fg:w="81"/><text x="33.8530%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (81 samples, 0.08%)</title><rect x="33.6030%" y="517" width="0.0762%" height="15" fill="rgb(248,18,52)" fg:x="35718" fg:w="81"/><text x="33.8530%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (86 samples, 0.08%)</title><rect x="33.6021%" y="549" width="0.0809%" height="15" fill="rgb(208,4,7)" fg:x="35717" fg:w="86"/><text x="33.8521%" y="559.50"></text></g><g><title>rust_dealloc (99 samples, 0.09%)</title><rect x="33.5955%" y="565" width="0.0931%" height="15" fill="rgb(240,17,39)" fg:x="35710" fg:w="99"/><text x="33.8455%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (17 samples, 0.02%)</title><rect x="33.6905%" y="549" width="0.0160%" height="15" fill="rgb(207,170,3)" fg:x="35811" fg:w="17"/><text x="33.9405%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (138 samples, 0.13%)</title><rect x="33.5776%" y="613" width="0.1298%" height="15" fill="rgb(236,100,52)" fg:x="35691" fg:w="138"/><text x="33.8276%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (138 samples, 0.13%)</title><rect x="33.5776%" y="597" width="0.1298%" height="15" fill="rgb(246,78,51)" fg:x="35691" fg:w="138"/><text x="33.8276%" y="607.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (138 samples, 0.13%)</title><rect x="33.5776%" y="581" width="0.1298%" height="15" fill="rgb(211,17,15)" fg:x="35691" fg:w="138"/><text x="33.8276%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (20 samples, 0.02%)</title><rect x="33.6886%" y="565" width="0.0188%" height="15" fill="rgb(209,59,46)" fg:x="35809" fg:w="20"/><text x="33.9386%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (156 samples, 0.15%)</title><rect x="34.1713%" y="597" width="0.1468%" height="15" fill="rgb(210,92,25)" fg:x="36322" fg:w="156"/><text x="34.4213%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (200 samples, 0.19%)</title><rect x="34.3575%" y="501" width="0.1882%" height="15" fill="rgb(238,174,52)" fg:x="36520" fg:w="200"/><text x="34.6075%" y="511.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="34.5513%" y="389" width="0.0103%" height="15" fill="rgb(230,73,7)" fg:x="36726" fg:w="11"/><text x="34.8013%" y="399.50"></text></g><g><title>rust_alloc (58 samples, 0.05%)</title><rect x="34.5617%" y="357" width="0.0546%" height="15" fill="rgb(243,124,40)" fg:x="36737" fg:w="58"/><text x="34.8117%" y="367.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="34.6454%" y="229" width="0.0141%" height="15" fill="rgb(244,170,11)" fg:x="36826" fg:w="15"/><text x="34.8954%" y="239.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="34.6454%" y="213" width="0.0141%" height="15" fill="rgb(207,114,54)" fg:x="36826" fg:w="15"/><text x="34.8954%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (25 samples, 0.02%)</title><rect x="34.6417%" y="293" width="0.0235%" height="15" fill="rgb(205,42,20)" fg:x="36822" fg:w="25"/><text x="34.8917%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (25 samples, 0.02%)</title><rect x="34.6417%" y="277" width="0.0235%" height="15" fill="rgb(230,30,28)" fg:x="36822" fg:w="25"/><text x="34.8917%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (25 samples, 0.02%)</title><rect x="34.6417%" y="261" width="0.0235%" height="15" fill="rgb(205,73,54)" fg:x="36822" fg:w="25"/><text x="34.8917%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (23 samples, 0.02%)</title><rect x="34.6435%" y="245" width="0.0216%" height="15" fill="rgb(254,227,23)" fg:x="36824" fg:w="23"/><text x="34.8935%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (37 samples, 0.03%)</title><rect x="34.6379%" y="309" width="0.0348%" height="15" fill="rgb(228,202,34)" fg:x="36818" fg:w="37"/><text x="34.8879%" y="319.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (22 samples, 0.02%)</title><rect x="34.6812%" y="293" width="0.0207%" height="15" fill="rgb(222,225,37)" fg:x="36864" fg:w="22"/><text x="34.9312%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (209 samples, 0.20%)</title><rect x="34.6370%" y="341" width="0.1966%" height="15" fill="rgb(221,14,54)" fg:x="36817" fg:w="209"/><text x="34.8870%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (209 samples, 0.20%)</title><rect x="34.6370%" y="325" width="0.1966%" height="15" fill="rgb(254,102,2)" fg:x="36817" fg:w="209"/><text x="34.8870%" y="335.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (171 samples, 0.16%)</title><rect x="34.6727%" y="309" width="0.1609%" height="15" fill="rgb(232,104,17)" fg:x="36855" fg:w="171"/><text x="34.9227%" y="319.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (140 samples, 0.13%)</title><rect x="34.7019%" y="293" width="0.1317%" height="15" fill="rgb(250,220,14)" fg:x="36886" fg:w="140"/><text x="34.9519%" y="303.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (140 samples, 0.13%)</title><rect x="34.7019%" y="277" width="0.1317%" height="15" fill="rgb(241,158,9)" fg:x="36886" fg:w="140"/><text x="34.9519%" y="287.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (140 samples, 0.13%)</title><rect x="34.7019%" y="261" width="0.1317%" height="15" fill="rgb(246,9,43)" fg:x="36886" fg:w="140"/><text x="34.9519%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (18 samples, 0.02%)</title><rect x="34.8402%" y="309" width="0.0169%" height="15" fill="rgb(206,73,33)" fg:x="37033" fg:w="18"/><text x="35.0902%" y="319.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (18 samples, 0.02%)</title><rect x="34.8402%" y="293" width="0.0169%" height="15" fill="rgb(222,79,8)" fg:x="37033" fg:w="18"/><text x="35.0902%" y="303.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="34.8402%" y="277" width="0.0169%" height="15" fill="rgb(234,8,54)" fg:x="37033" fg:w="18"/><text x="35.0902%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::take (29 samples, 0.03%)</title><rect x="34.8571%" y="309" width="0.0273%" height="15" fill="rgb(209,134,38)" fg:x="37051" fg:w="29"/><text x="35.1071%" y="319.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (29 samples, 0.03%)</title><rect x="34.8571%" y="293" width="0.0273%" height="15" fill="rgb(230,127,29)" fg:x="37051" fg:w="29"/><text x="35.1071%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.06%)</title><rect x="34.8336%" y="341" width="0.0564%" height="15" fill="rgb(242,44,41)" fg:x="37026" fg:w="60"/><text x="35.0836%" y="351.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (54 samples, 0.05%)</title><rect x="34.8392%" y="325" width="0.0508%" height="15" fill="rgb(222,56,43)" fg:x="37032" fg:w="54"/><text x="35.0892%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="34.8900%" y="341" width="0.0160%" height="15" fill="rgb(238,39,47)" fg:x="37086" fg:w="17"/><text x="35.1400%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.02%)</title><rect x="34.8910%" y="325" width="0.0151%" height="15" fill="rgb(226,79,43)" fg:x="37087" fg:w="16"/><text x="35.1410%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.02%)</title><rect x="34.8910%" y="309" width="0.0151%" height="15" fill="rgb(242,105,53)" fg:x="37087" fg:w="16"/><text x="35.1410%" y="319.50"></text></g><g><title>snmalloc::FreeListIter::empty (80 samples, 0.08%)</title><rect x="34.9060%" y="341" width="0.0753%" height="15" fill="rgb(251,132,46)" fg:x="37103" fg:w="80"/><text x="35.1560%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (80 samples, 0.08%)</title><rect x="34.9060%" y="325" width="0.0753%" height="15" fill="rgb(231,77,14)" fg:x="37103" fg:w="80"/><text x="35.1560%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (903 samples, 0.85%)</title><rect x="34.5617%" y="389" width="0.8495%" height="15" fill="rgb(240,135,9)" fg:x="36737" fg:w="903"/><text x="34.8117%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (903 samples, 0.85%)</title><rect x="34.5617%" y="373" width="0.8495%" height="15" fill="rgb(248,109,14)" fg:x="36737" fg:w="903"/><text x="34.8117%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (843 samples, 0.79%)</title><rect x="34.6181%" y="357" width="0.7931%" height="15" fill="rgb(227,146,52)" fg:x="36797" fg:w="843"/><text x="34.8681%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (457 samples, 0.43%)</title><rect x="34.9813%" y="341" width="0.4299%" height="15" fill="rgb(232,54,3)" fg:x="37183" fg:w="457"/><text x="35.2313%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (457 samples, 0.43%)</title><rect x="34.9813%" y="325" width="0.4299%" height="15" fill="rgb(229,201,43)" fg:x="37183" fg:w="457"/><text x="35.2313%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,155 samples, 1.09%)</title><rect x="34.3387%" y="517" width="1.0866%" height="15" fill="rgb(252,161,33)" fg:x="36500" fg:w="1155"/><text x="34.5887%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (935 samples, 0.88%)</title><rect x="34.5457%" y="501" width="0.8796%" height="15" fill="rgb(226,146,40)" fg:x="36720" fg:w="935"/><text x="34.7957%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (935 samples, 0.88%)</title><rect x="34.5457%" y="485" width="0.8796%" height="15" fill="rgb(219,47,25)" fg:x="36720" fg:w="935"/><text x="34.7957%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (935 samples, 0.88%)</title><rect x="34.5457%" y="469" width="0.8796%" height="15" fill="rgb(250,135,13)" fg:x="36720" fg:w="935"/><text x="34.7957%" y="479.50"></text></g><g><title>alloc::alloc::alloc (935 samples, 0.88%)</title><rect x="34.5457%" y="453" width="0.8796%" height="15" fill="rgb(219,229,18)" fg:x="36720" fg:w="935"/><text x="34.7957%" y="463.50"></text></g><g><title>__rg_alloc (935 samples, 0.88%)</title><rect x="34.5457%" y="437" width="0.8796%" height="15" fill="rgb(217,152,27)" fg:x="36720" fg:w="935"/><text x="34.7957%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (935 samples, 0.88%)</title><rect x="34.5457%" y="421" width="0.8796%" height="15" fill="rgb(225,71,47)" fg:x="36720" fg:w="935"/><text x="34.7957%" y="431.50"></text></g><g><title>rust_alloc (929 samples, 0.87%)</title><rect x="34.5513%" y="405" width="0.8740%" height="15" fill="rgb(220,139,14)" fg:x="36726" fg:w="929"/><text x="34.8013%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="35.4112%" y="389" width="0.0141%" height="15" fill="rgb(247,54,32)" fg:x="37640" fg:w="15"/><text x="35.6612%" y="399.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (1,178 samples, 1.11%)</title><rect x="34.3227%" y="597" width="1.1082%" height="15" fill="rgb(252,131,39)" fg:x="36483" fg:w="1178"/><text x="34.5727%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (1,161 samples, 1.09%)</title><rect x="34.3387%" y="581" width="1.0923%" height="15" fill="rgb(210,108,39)" fg:x="36500" fg:w="1161"/><text x="34.5887%" y="591.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (1,161 samples, 1.09%)</title><rect x="34.3387%" y="565" width="1.0923%" height="15" fill="rgb(205,23,29)" fg:x="36500" fg:w="1161"/><text x="34.5887%" y="575.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (1,161 samples, 1.09%)</title><rect x="34.3387%" y="549" width="1.0923%" height="15" fill="rgb(246,139,46)" fg:x="36500" fg:w="1161"/><text x="34.5887%" y="559.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (1,161 samples, 1.09%)</title><rect x="34.3387%" y="533" width="1.0923%" height="15" fill="rgb(250,81,26)" fg:x="36500" fg:w="1161"/><text x="34.5887%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (5,499 samples, 5.17%)</title><rect x="30.2877%" y="629" width="5.1734%" height="15" fill="rgb(214,104,7)" fg:x="32194" fg:w="5499"/><text x="30.5377%" y="639.50">tremor..</text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (1,864 samples, 1.75%)</title><rect x="33.7075%" y="613" width="1.7536%" height="15" fill="rgb(233,189,8)" fg:x="35829" fg:w="1864"/><text x="33.9575%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::_::&lt;impl tremor_runtime::connectors::sink::RawSink_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::on_event (31 samples, 0.03%)</title><rect x="35.4319%" y="597" width="0.0292%" height="15" fill="rgb(228,141,17)" fg:x="37662" fg:w="31"/><text x="35.6819%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,831 samples, 5.49%)</title><rect x="29.9763%" y="645" width="5.4857%" height="15" fill="rgb(247,157,1)" fg:x="31863" fg:w="5831"/><text x="30.2263%" y="655.50">&lt;core::..</text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="35.4620%" y="645" width="0.0263%" height="15" fill="rgb(249,225,5)" fg:x="37694" fg:w="28"/><text x="35.7120%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="35.5589%" y="597" width="0.0141%" height="15" fill="rgb(242,55,13)" fg:x="37797" fg:w="15"/><text x="35.8089%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (15 samples, 0.01%)</title><rect x="35.5589%" y="581" width="0.0141%" height="15" fill="rgb(230,49,50)" fg:x="37797" fg:w="15"/><text x="35.8089%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (12 samples, 0.01%)</title><rect x="35.5862%" y="485" width="0.0113%" height="15" fill="rgb(241,111,38)" fg:x="37826" fg:w="12"/><text x="35.8362%" y="495.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (106 samples, 0.10%)</title><rect x="35.5091%" y="629" width="0.0997%" height="15" fill="rgb(252,155,4)" fg:x="37744" fg:w="106"/><text x="35.7591%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (79 samples, 0.07%)</title><rect x="35.5345%" y="613" width="0.0743%" height="15" fill="rgb(212,69,32)" fg:x="37771" fg:w="79"/><text x="35.7845%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (38 samples, 0.04%)</title><rect x="35.5730%" y="597" width="0.0357%" height="15" fill="rgb(243,107,47)" fg:x="37812" fg:w="38"/><text x="35.8230%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (38 samples, 0.04%)</title><rect x="35.5730%" y="581" width="0.0357%" height="15" fill="rgb(247,130,12)" fg:x="37812" fg:w="38"/><text x="35.8230%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.04%)</title><rect x="35.5730%" y="565" width="0.0357%" height="15" fill="rgb(233,74,16)" fg:x="37812" fg:w="38"/><text x="35.8230%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.04%)</title><rect x="35.5730%" y="549" width="0.0357%" height="15" fill="rgb(208,58,18)" fg:x="37812" fg:w="38"/><text x="35.8230%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.04%)</title><rect x="35.5730%" y="533" width="0.0357%" height="15" fill="rgb(242,225,1)" fg:x="37812" fg:w="38"/><text x="35.8230%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (38 samples, 0.04%)</title><rect x="35.5730%" y="517" width="0.0357%" height="15" fill="rgb(249,39,40)" fg:x="37812" fg:w="38"/><text x="35.8230%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="35.5862%" y="501" width="0.0226%" height="15" fill="rgb(207,72,44)" fg:x="37826" fg:w="24"/><text x="35.8362%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="35.5975%" y="485" width="0.0113%" height="15" fill="rgb(215,193,12)" fg:x="37838" fg:w="12"/><text x="35.8475%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array (11 samples, 0.01%)</title><rect x="35.5984%" y="469" width="0.0103%" height="15" fill="rgb(248,41,39)" fg:x="37839" fg:w="11"/><text x="35.8484%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (11 samples, 0.01%)</title><rect x="35.5984%" y="453" width="0.0103%" height="15" fill="rgb(253,85,4)" fg:x="37839" fg:w="11"/><text x="35.8484%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (11 samples, 0.01%)</title><rect x="35.5984%" y="437" width="0.0103%" height="15" fill="rgb(243,70,31)" fg:x="37839" fg:w="11"/><text x="35.8484%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="35.6088%" y="629" width="0.0273%" height="15" fill="rgb(253,195,26)" fg:x="37850" fg:w="29"/><text x="35.8588%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (175 samples, 0.16%)</title><rect x="35.4884%" y="645" width="0.1646%" height="15" fill="rgb(243,42,11)" fg:x="37722" fg:w="175"/><text x="35.7384%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (18 samples, 0.02%)</title><rect x="35.6361%" y="629" width="0.0169%" height="15" fill="rgb(239,66,17)" fg:x="37879" fg:w="18"/><text x="35.8861%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,789 samples, 1.68%)</title><rect x="35.6530%" y="645" width="1.6831%" height="15" fill="rgb(217,132,21)" fg:x="37897" fg:w="1789"/><text x="35.9030%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (11 samples, 0.01%)</title><rect x="37.3793%" y="389" width="0.0103%" height="15" fill="rgb(252,202,21)" fg:x="39732" fg:w="11"/><text x="37.6293%" y="399.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (35 samples, 0.03%)</title><rect x="37.4847%" y="357" width="0.0329%" height="15" fill="rgb(233,98,36)" fg:x="39844" fg:w="35"/><text x="37.7347%" y="367.50"></text></g><g><title> (35 samples, 0.03%)</title><rect x="37.4847%" y="341" width="0.0329%" height="15" fill="rgb(216,153,54)" fg:x="39844" fg:w="35"/><text x="37.7347%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (152 samples, 0.14%)</title><rect x="37.3897%" y="389" width="0.1430%" height="15" fill="rgb(250,99,7)" fg:x="39743" fg:w="152"/><text x="37.6397%" y="399.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (136 samples, 0.13%)</title><rect x="37.4047%" y="373" width="0.1279%" height="15" fill="rgb(207,56,50)" fg:x="39759" fg:w="136"/><text x="37.6547%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="37.5223%" y="357" width="0.0103%" height="15" fill="rgb(244,61,34)" fg:x="39884" fg:w="11"/><text x="37.7723%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (208 samples, 0.20%)</title><rect x="37.3746%" y="421" width="0.1957%" height="15" fill="rgb(241,50,38)" fg:x="39727" fg:w="208"/><text x="37.6246%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (208 samples, 0.20%)</title><rect x="37.3746%" y="405" width="0.1957%" height="15" fill="rgb(212,166,30)" fg:x="39727" fg:w="208"/><text x="37.6246%" y="415.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (38 samples, 0.04%)</title><rect x="37.5346%" y="389" width="0.0357%" height="15" fill="rgb(249,127,32)" fg:x="39897" fg:w="38"/><text x="37.7846%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (236 samples, 0.22%)</title><rect x="37.3558%" y="469" width="0.2220%" height="15" fill="rgb(209,103,0)" fg:x="39707" fg:w="236"/><text x="37.6058%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (216 samples, 0.20%)</title><rect x="37.3746%" y="453" width="0.2032%" height="15" fill="rgb(238,209,51)" fg:x="39727" fg:w="216"/><text x="37.6246%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (216 samples, 0.20%)</title><rect x="37.3746%" y="437" width="0.2032%" height="15" fill="rgb(237,56,23)" fg:x="39727" fg:w="216"/><text x="37.6246%" y="447.50"></text></g><g><title>rust_dealloc (244 samples, 0.23%)</title><rect x="37.3502%" y="485" width="0.2296%" height="15" fill="rgb(215,153,46)" fg:x="39701" fg:w="244"/><text x="37.6002%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (261 samples, 0.25%)</title><rect x="37.3361%" y="645" width="0.2455%" height="15" fill="rgb(224,49,31)" fg:x="39686" fg:w="261"/><text x="37.5861%" y="655.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (261 samples, 0.25%)</title><rect x="37.3361%" y="629" width="0.2455%" height="15" fill="rgb(250,18,42)" fg:x="39686" fg:w="261"/><text x="37.5861%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (246 samples, 0.23%)</title><rect x="37.3502%" y="613" width="0.2314%" height="15" fill="rgb(215,176,39)" fg:x="39701" fg:w="246"/><text x="37.6002%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (246 samples, 0.23%)</title><rect x="37.3502%" y="597" width="0.2314%" height="15" fill="rgb(223,77,29)" fg:x="39701" fg:w="246"/><text x="37.6002%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (246 samples, 0.23%)</title><rect x="37.3502%" y="581" width="0.2314%" height="15" fill="rgb(234,94,52)" fg:x="39701" fg:w="246"/><text x="37.6002%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (246 samples, 0.23%)</title><rect x="37.3502%" y="565" width="0.2314%" height="15" fill="rgb(220,154,50)" fg:x="39701" fg:w="246"/><text x="37.6002%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (246 samples, 0.23%)</title><rect x="37.3502%" y="549" width="0.2314%" height="15" fill="rgb(212,11,10)" fg:x="39701" fg:w="246"/><text x="37.6002%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (246 samples, 0.23%)</title><rect x="37.3502%" y="533" width="0.2314%" height="15" fill="rgb(205,166,19)" fg:x="39701" fg:w="246"/><text x="37.6002%" y="543.50"></text></g><g><title>__rg_dealloc (246 samples, 0.23%)</title><rect x="37.3502%" y="517" width="0.2314%" height="15" fill="rgb(244,198,16)" fg:x="39701" fg:w="246"/><text x="37.6002%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (246 samples, 0.23%)</title><rect x="37.3502%" y="501" width="0.2314%" height="15" fill="rgb(219,69,12)" fg:x="39701" fg:w="246"/><text x="37.6002%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (48 samples, 0.05%)</title><rect x="37.5816%" y="629" width="0.0452%" height="15" fill="rgb(245,30,7)" fg:x="39947" fg:w="48"/><text x="37.8316%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (58 samples, 0.05%)</title><rect x="37.5816%" y="645" width="0.0546%" height="15" fill="rgb(218,221,48)" fg:x="39947" fg:w="58"/><text x="37.8316%" y="655.50"></text></g><g><title>core::time::Duration::as_nanos (27 samples, 0.03%)</title><rect x="37.6936%" y="629" width="0.0254%" height="15" fill="rgb(216,66,15)" fg:x="40066" fg:w="27"/><text x="37.9436%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (142 samples, 0.13%)</title><rect x="37.8168%" y="581" width="0.1336%" height="15" fill="rgb(226,122,50)" fg:x="40197" fg:w="142"/><text x="38.0668%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (142 samples, 0.13%)</title><rect x="37.8168%" y="565" width="0.1336%" height="15" fill="rgb(239,156,16)" fg:x="40197" fg:w="142"/><text x="38.0668%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (140 samples, 0.13%)</title><rect x="37.8187%" y="549" width="0.1317%" height="15" fill="rgb(224,27,38)" fg:x="40199" fg:w="140"/><text x="38.0687%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (140 samples, 0.13%)</title><rect x="37.8187%" y="533" width="0.1317%" height="15" fill="rgb(224,39,27)" fg:x="40199" fg:w="140"/><text x="38.0687%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (140 samples, 0.13%)</title><rect x="37.8187%" y="517" width="0.1317%" height="15" fill="rgb(215,92,29)" fg:x="40199" fg:w="140"/><text x="38.0687%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (74 samples, 0.07%)</title><rect x="37.8808%" y="501" width="0.0696%" height="15" fill="rgb(207,159,16)" fg:x="40265" fg:w="74"/><text x="38.1308%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (283 samples, 0.27%)</title><rect x="37.7190%" y="613" width="0.2662%" height="15" fill="rgb(238,163,47)" fg:x="40093" fg:w="283"/><text x="37.9690%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (283 samples, 0.27%)</title><rect x="37.7190%" y="597" width="0.2662%" height="15" fill="rgb(219,91,49)" fg:x="40093" fg:w="283"/><text x="37.9690%" y="607.50"></text></g><g><title>core::time::Duration::new (37 samples, 0.03%)</title><rect x="37.9504%" y="581" width="0.0348%" height="15" fill="rgb(227,167,31)" fg:x="40339" fg:w="37"/><text x="38.2004%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (311 samples, 0.29%)</title><rect x="37.7190%" y="629" width="0.2926%" height="15" fill="rgb(234,80,54)" fg:x="40093" fg:w="311"/><text x="37.9690%" y="639.50"></text></g><g><title>tremor_common::time::nanotime (28 samples, 0.03%)</title><rect x="37.9852%" y="613" width="0.0263%" height="15" fill="rgb(212,114,2)" fg:x="40376" fg:w="28"/><text x="38.2352%" y="623.50"></text></g><g><title>__clock_gettime_2 (1,279 samples, 1.20%)</title><rect x="38.2439%" y="581" width="1.2033%" height="15" fill="rgb(234,50,24)" fg:x="40651" fg:w="1279"/><text x="38.4939%" y="591.50"></text></g><g><title>__vdso_clock_gettime (1,048 samples, 0.99%)</title><rect x="38.4612%" y="565" width="0.9859%" height="15" fill="rgb(221,68,8)" fg:x="40882" fg:w="1048"/><text x="38.7112%" y="575.50"></text></g><g><title>[[vdso]] (649 samples, 0.61%)</title><rect x="38.8366%" y="549" width="0.6106%" height="15" fill="rgb(254,180,31)" fg:x="41281" fg:w="649"/><text x="39.0866%" y="559.50"></text></g><g><title>tremor_common::time::nanotime (1,926 samples, 1.81%)</title><rect x="37.6362%" y="645" width="1.8120%" height="15" fill="rgb(247,130,50)" fg:x="40005" fg:w="1926"/><text x="37.8862%" y="655.50">t..</text></g><g><title>std::time::SystemTime::now (1,527 samples, 1.44%)</title><rect x="38.0116%" y="629" width="1.4366%" height="15" fill="rgb(211,109,4)" fg:x="40404" fg:w="1527"/><text x="38.2616%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,527 samples, 1.44%)</title><rect x="38.0116%" y="613" width="1.4366%" height="15" fill="rgb(238,50,21)" fg:x="40404" fg:w="1527"/><text x="38.2616%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (1,527 samples, 1.44%)</title><rect x="38.0116%" y="597" width="1.4366%" height="15" fill="rgb(225,57,45)" fg:x="40404" fg:w="1527"/><text x="38.2616%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (13 samples, 0.01%)</title><rect x="39.4632%" y="533" width="0.0122%" height="15" fill="rgb(209,196,50)" fg:x="41947" fg:w="13"/><text x="39.7132%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="39.4632%" y="517" width="0.0122%" height="15" fill="rgb(242,140,13)" fg:x="41947" fg:w="13"/><text x="39.7132%" y="527.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (13 samples, 0.01%)</title><rect x="39.4632%" y="501" width="0.0122%" height="15" fill="rgb(217,111,7)" fg:x="41947" fg:w="13"/><text x="39.7132%" y="511.50"></text></g><g><title>abi_stable::erased_types::iterator::next (13 samples, 0.01%)</title><rect x="39.4754%" y="533" width="0.0122%" height="15" fill="rgb(253,193,51)" fg:x="41960" fg:w="13"/><text x="39.7254%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.04%)</title><rect x="39.4557%" y="597" width="0.0386%" height="15" fill="rgb(252,70,29)" fg:x="41939" fg:w="41"/><text x="39.7057%" y="607.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.04%)</title><rect x="39.4557%" y="581" width="0.0386%" height="15" fill="rgb(232,127,12)" fg:x="41939" fg:w="41"/><text x="39.7057%" y="591.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.04%)</title><rect x="39.4557%" y="565" width="0.0386%" height="15" fill="rgb(211,180,21)" fg:x="41939" fg:w="41"/><text x="39.7057%" y="575.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (33 samples, 0.03%)</title><rect x="39.4632%" y="549" width="0.0310%" height="15" fill="rgb(229,72,13)" fg:x="41947" fg:w="33"/><text x="39.7132%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (45 samples, 0.04%)</title><rect x="39.4942%" y="597" width="0.0423%" height="15" fill="rgb(240,211,49)" fg:x="41980" fg:w="45"/><text x="39.7442%" y="607.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::size_hint (45 samples, 0.04%)</title><rect x="39.4942%" y="581" width="0.0423%" height="15" fill="rgb(219,149,40)" fg:x="41980" fg:w="45"/><text x="39.7442%" y="591.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (45 samples, 0.04%)</title><rect x="39.4942%" y="565" width="0.0423%" height="15" fill="rgb(210,127,46)" fg:x="41980" fg:w="45"/><text x="39.7442%" y="575.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (45 samples, 0.04%)</title><rect x="39.4942%" y="549" width="0.0423%" height="15" fill="rgb(220,106,7)" fg:x="41980" fg:w="45"/><text x="39.7442%" y="559.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (12 samples, 0.01%)</title><rect x="39.5253%" y="533" width="0.0113%" height="15" fill="rgb(249,31,22)" fg:x="42013" fg:w="12"/><text x="39.7753%" y="543.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (12 samples, 0.01%)</title><rect x="39.5253%" y="517" width="0.0113%" height="15" fill="rgb(253,1,49)" fg:x="42013" fg:w="12"/><text x="39.7753%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;abi_stable::std_types::tuple::Tuple2&lt;K,V&gt;&gt;&gt;::extend (112 samples, 0.11%)</title><rect x="39.4481%" y="629" width="0.1054%" height="15" fill="rgb(227,144,33)" fg:x="41931" fg:w="112"/><text x="39.6981%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (112 samples, 0.11%)</title><rect x="39.4481%" y="613" width="0.1054%" height="15" fill="rgb(249,163,44)" fg:x="41931" fg:w="112"/><text x="39.6981%" y="623.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (18 samples, 0.02%)</title><rect x="39.5366%" y="597" width="0.0169%" height="15" fill="rgb(234,15,39)" fg:x="42025" fg:w="18"/><text x="39.7866%" y="607.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (16 samples, 0.02%)</title><rect x="39.5384%" y="581" width="0.0151%" height="15" fill="rgb(207,66,16)" fg:x="42027" fg:w="16"/><text x="39.7884%" y="591.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (16 samples, 0.02%)</title><rect x="39.5384%" y="565" width="0.0151%" height="15" fill="rgb(233,112,24)" fg:x="42027" fg:w="16"/><text x="39.7884%" y="575.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (15 samples, 0.01%)</title><rect x="39.5394%" y="549" width="0.0141%" height="15" fill="rgb(230,90,22)" fg:x="42028" fg:w="15"/><text x="39.7894%" y="559.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (15 samples, 0.01%)</title><rect x="39.5394%" y="533" width="0.0141%" height="15" fill="rgb(229,61,13)" fg:x="42028" fg:w="15"/><text x="39.7894%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (15 samples, 0.01%)</title><rect x="39.5394%" y="517" width="0.0141%" height="15" fill="rgb(225,57,24)" fg:x="42028" fg:w="15"/><text x="39.7894%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (15 samples, 0.01%)</title><rect x="39.5394%" y="501" width="0.0141%" height="15" fill="rgb(208,169,48)" fg:x="42028" fg:w="15"/><text x="39.7894%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (15 samples, 0.01%)</title><rect x="39.5394%" y="485" width="0.0141%" height="15" fill="rgb(244,218,51)" fg:x="42028" fg:w="15"/><text x="39.7894%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (21 samples, 0.02%)</title><rect x="40.0681%" y="501" width="0.0198%" height="15" fill="rgb(214,148,10)" fg:x="42590" fg:w="21"/><text x="40.3181%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (45 samples, 0.04%)</title><rect x="40.0888%" y="469" width="0.0423%" height="15" fill="rgb(225,174,27)" fg:x="42612" fg:w="45"/><text x="40.3388%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (45 samples, 0.04%)</title><rect x="40.0888%" y="453" width="0.0423%" height="15" fill="rgb(230,96,26)" fg:x="42612" fg:w="45"/><text x="40.3388%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (74 samples, 0.07%)</title><rect x="40.0888%" y="485" width="0.0696%" height="15" fill="rgb(232,10,30)" fg:x="42612" fg:w="74"/><text x="40.3388%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (29 samples, 0.03%)</title><rect x="40.1311%" y="469" width="0.0273%" height="15" fill="rgb(222,8,50)" fg:x="42657" fg:w="29"/><text x="40.3811%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (20 samples, 0.02%)</title><rect x="40.1396%" y="453" width="0.0188%" height="15" fill="rgb(213,81,27)" fg:x="42666" fg:w="20"/><text x="40.3896%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (20 samples, 0.02%)</title><rect x="40.1396%" y="437" width="0.0188%" height="15" fill="rgb(245,50,10)" fg:x="42666" fg:w="20"/><text x="40.3896%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (648 samples, 0.61%)</title><rect x="39.5714%" y="549" width="0.6096%" height="15" fill="rgb(216,100,18)" fg:x="42062" fg:w="648"/><text x="39.8214%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (591 samples, 0.56%)</title><rect x="39.6250%" y="533" width="0.5560%" height="15" fill="rgb(236,147,54)" fg:x="42119" fg:w="591"/><text x="39.8750%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (129 samples, 0.12%)</title><rect x="40.0596%" y="517" width="0.1214%" height="15" fill="rgb(205,143,26)" fg:x="42581" fg:w="129"/><text x="40.3096%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (99 samples, 0.09%)</title><rect x="40.0879%" y="501" width="0.0931%" height="15" fill="rgb(236,26,9)" fg:x="42611" fg:w="99"/><text x="40.3379%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (24 samples, 0.02%)</title><rect x="40.1584%" y="485" width="0.0226%" height="15" fill="rgb(221,165,53)" fg:x="42686" fg:w="24"/><text x="40.4084%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (33 samples, 0.03%)</title><rect x="40.2055%" y="389" width="0.0310%" height="15" fill="rgb(214,110,17)" fg:x="42736" fg:w="33"/><text x="40.4555%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (33 samples, 0.03%)</title><rect x="40.2055%" y="373" width="0.0310%" height="15" fill="rgb(237,197,12)" fg:x="42736" fg:w="33"/><text x="40.4555%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="40.2102%" y="357" width="0.0263%" height="15" fill="rgb(205,84,17)" fg:x="42741" fg:w="28"/><text x="40.4602%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (23 samples, 0.02%)</title><rect x="40.2149%" y="341" width="0.0216%" height="15" fill="rgb(237,18,45)" fg:x="42746" fg:w="23"/><text x="40.4649%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (23 samples, 0.02%)</title><rect x="40.2149%" y="325" width="0.0216%" height="15" fill="rgb(221,87,14)" fg:x="42746" fg:w="23"/><text x="40.4649%" y="335.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (70 samples, 0.07%)</title><rect x="40.1810%" y="549" width="0.0659%" height="15" fill="rgb(238,186,15)" fg:x="42710" fg:w="70"/><text x="40.4310%" y="559.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (70 samples, 0.07%)</title><rect x="40.1810%" y="533" width="0.0659%" height="15" fill="rgb(208,115,11)" fg:x="42710" fg:w="70"/><text x="40.4310%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (70 samples, 0.07%)</title><rect x="40.1810%" y="517" width="0.0659%" height="15" fill="rgb(254,175,0)" fg:x="42710" fg:w="70"/><text x="40.4310%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (66 samples, 0.06%)</title><rect x="40.1848%" y="501" width="0.0621%" height="15" fill="rgb(227,24,42)" fg:x="42714" fg:w="66"/><text x="40.4348%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62 samples, 0.06%)</title><rect x="40.1885%" y="485" width="0.0583%" height="15" fill="rgb(223,211,37)" fg:x="42718" fg:w="62"/><text x="40.4385%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (62 samples, 0.06%)</title><rect x="40.1885%" y="469" width="0.0583%" height="15" fill="rgb(235,49,27)" fg:x="42718" fg:w="62"/><text x="40.4385%" y="479.50"></text></g><g><title>alloc::alloc::alloc (62 samples, 0.06%)</title><rect x="40.1885%" y="453" width="0.0583%" height="15" fill="rgb(254,97,51)" fg:x="42718" fg:w="62"/><text x="40.4385%" y="463.50"></text></g><g><title>__rg_alloc (62 samples, 0.06%)</title><rect x="40.1885%" y="437" width="0.0583%" height="15" fill="rgb(249,51,40)" fg:x="42718" fg:w="62"/><text x="40.4385%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (62 samples, 0.06%)</title><rect x="40.1885%" y="421" width="0.0583%" height="15" fill="rgb(210,128,45)" fg:x="42718" fg:w="62"/><text x="40.4385%" y="431.50"></text></g><g><title>rust_alloc (50 samples, 0.05%)</title><rect x="40.1998%" y="405" width="0.0470%" height="15" fill="rgb(224,137,50)" fg:x="42730" fg:w="50"/><text x="40.4498%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="40.2365%" y="389" width="0.0103%" height="15" fill="rgb(242,15,9)" fg:x="42769" fg:w="11"/><text x="40.4865%" y="399.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (27 samples, 0.03%)</title><rect x="40.2751%" y="485" width="0.0254%" height="15" fill="rgb(233,187,41)" fg:x="42810" fg:w="27"/><text x="40.5251%" y="495.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="40.3193%" y="389" width="0.0141%" height="15" fill="rgb(227,2,29)" fg:x="42857" fg:w="15"/><text x="40.5693%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (25 samples, 0.02%)</title><rect x="40.3616%" y="341" width="0.0235%" height="15" fill="rgb(222,70,3)" fg:x="42902" fg:w="25"/><text x="40.6116%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="40.3654%" y="325" width="0.0198%" height="15" fill="rgb(213,11,42)" fg:x="42906" fg:w="21"/><text x="40.6154%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (52 samples, 0.05%)</title><rect x="40.3419%" y="389" width="0.0489%" height="15" fill="rgb(225,150,9)" fg:x="42881" fg:w="52"/><text x="40.5919%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (52 samples, 0.05%)</title><rect x="40.3419%" y="373" width="0.0489%" height="15" fill="rgb(230,162,45)" fg:x="42881" fg:w="52"/><text x="40.5919%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (49 samples, 0.05%)</title><rect x="40.3447%" y="357" width="0.0461%" height="15" fill="rgb(222,14,52)" fg:x="42884" fg:w="49"/><text x="40.5947%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (82 samples, 0.08%)</title><rect x="40.3174%" y="421" width="0.0771%" height="15" fill="rgb(254,198,14)" fg:x="42855" fg:w="82"/><text x="40.5674%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (82 samples, 0.08%)</title><rect x="40.3174%" y="405" width="0.0771%" height="15" fill="rgb(220,217,30)" fg:x="42855" fg:w="82"/><text x="40.5674%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (84 samples, 0.08%)</title><rect x="40.3174%" y="453" width="0.0790%" height="15" fill="rgb(215,146,41)" fg:x="42855" fg:w="84"/><text x="40.5674%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (84 samples, 0.08%)</title><rect x="40.3174%" y="437" width="0.0790%" height="15" fill="rgb(217,27,36)" fg:x="42855" fg:w="84"/><text x="40.5674%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (107 samples, 0.10%)</title><rect x="40.3090%" y="469" width="0.1007%" height="15" fill="rgb(219,218,39)" fg:x="42846" fg:w="107"/><text x="40.5590%" y="479.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="40.3964%" y="453" width="0.0132%" height="15" fill="rgb(219,4,42)" fg:x="42939" fg:w="14"/><text x="40.6464%" y="463.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="40.3964%" y="437" width="0.0132%" height="15" fill="rgb(249,119,36)" fg:x="42939" fg:w="14"/><text x="40.6464%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (14 samples, 0.01%)</title><rect x="40.3964%" y="421" width="0.0132%" height="15" fill="rgb(209,23,33)" fg:x="42939" fg:w="14"/><text x="40.6464%" y="431.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="40.3964%" y="405" width="0.0132%" height="15" fill="rgb(211,10,0)" fg:x="42939" fg:w="14"/><text x="40.6464%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (170 samples, 0.16%)</title><rect x="40.2563%" y="501" width="0.1599%" height="15" fill="rgb(208,99,37)" fg:x="42790" fg:w="170"/><text x="40.5063%" y="511.50"></text></g><g><title>rust_dealloc (123 samples, 0.12%)</title><rect x="40.3005%" y="485" width="0.1157%" height="15" fill="rgb(213,132,31)" fg:x="42837" fg:w="123"/><text x="40.5505%" y="495.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (970 samples, 0.91%)</title><rect x="39.5535%" y="629" width="0.9126%" height="15" fill="rgb(243,129,40)" fg:x="42043" fg:w="970"/><text x="39.8035%" y="639.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (970 samples, 0.91%)</title><rect x="39.5535%" y="613" width="0.9126%" height="15" fill="rgb(210,66,33)" fg:x="42043" fg:w="970"/><text x="39.8035%" y="623.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (956 samples, 0.90%)</title><rect x="39.5667%" y="597" width="0.8994%" height="15" fill="rgb(209,189,4)" fg:x="42057" fg:w="956"/><text x="39.8167%" y="607.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (951 samples, 0.89%)</title><rect x="39.5714%" y="581" width="0.8947%" height="15" fill="rgb(214,107,37)" fg:x="42062" fg:w="951"/><text x="39.8214%" y="591.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (951 samples, 0.89%)</title><rect x="39.5714%" y="565" width="0.8947%" height="15" fill="rgb(245,88,54)" fg:x="42062" fg:w="951"/><text x="39.8214%" y="575.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (223 samples, 0.21%)</title><rect x="40.2563%" y="549" width="0.2098%" height="15" fill="rgb(205,146,20)" fg:x="42790" fg:w="223"/><text x="40.5063%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (223 samples, 0.21%)</title><rect x="40.2563%" y="533" width="0.2098%" height="15" fill="rgb(220,161,25)" fg:x="42790" fg:w="223"/><text x="40.5063%" y="543.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (223 samples, 0.21%)</title><rect x="40.2563%" y="517" width="0.2098%" height="15" fill="rgb(215,152,15)" fg:x="42790" fg:w="223"/><text x="40.5063%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (53 samples, 0.05%)</title><rect x="40.4162%" y="501" width="0.0499%" height="15" fill="rgb(233,192,44)" fg:x="42960" fg:w="53"/><text x="40.6662%" y="511.50"></text></g><g><title>core::ptr::read (53 samples, 0.05%)</title><rect x="40.4162%" y="485" width="0.0499%" height="15" fill="rgb(240,170,46)" fg:x="42960" fg:w="53"/><text x="40.6662%" y="495.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (47 samples, 0.04%)</title><rect x="40.4792%" y="517" width="0.0442%" height="15" fill="rgb(207,104,33)" fg:x="43027" fg:w="47"/><text x="40.7292%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt; (27 samples, 0.03%)</title><rect x="40.4981%" y="501" width="0.0254%" height="15" fill="rgb(219,21,39)" fg:x="43047" fg:w="27"/><text x="40.7481%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (27 samples, 0.03%)</title><rect x="40.4981%" y="485" width="0.0254%" height="15" fill="rgb(214,133,29)" fg:x="43047" fg:w="27"/><text x="40.7481%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;&gt; (27 samples, 0.03%)</title><rect x="40.4981%" y="469" width="0.0254%" height="15" fill="rgb(226,93,6)" fg:x="43047" fg:w="27"/><text x="40.7481%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value)&gt;&gt; (27 samples, 0.03%)</title><rect x="40.4981%" y="453" width="0.0254%" height="15" fill="rgb(252,222,34)" fg:x="43047" fg:w="27"/><text x="40.7481%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="40.5037%" y="437" width="0.0198%" height="15" fill="rgb(252,92,48)" fg:x="43053" fg:w="21"/><text x="40.7537%" y="447.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="40.5319%" y="485" width="0.0103%" height="15" fill="rgb(245,223,24)" fg:x="43083" fg:w="11"/><text x="40.7819%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (24 samples, 0.02%)</title><rect x="40.6072%" y="373" width="0.0226%" height="15" fill="rgb(205,176,3)" fg:x="43163" fg:w="24"/><text x="40.8572%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (22 samples, 0.02%)</title><rect x="40.6091%" y="357" width="0.0207%" height="15" fill="rgb(235,151,15)" fg:x="43165" fg:w="22"/><text x="40.8591%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (81 samples, 0.08%)</title><rect x="40.5630%" y="421" width="0.0762%" height="15" fill="rgb(237,209,11)" fg:x="43116" fg:w="81"/><text x="40.8130%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (81 samples, 0.08%)</title><rect x="40.5630%" y="405" width="0.0762%" height="15" fill="rgb(243,227,24)" fg:x="43116" fg:w="81"/><text x="40.8130%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (80 samples, 0.08%)</title><rect x="40.5639%" y="389" width="0.0753%" height="15" fill="rgb(239,193,16)" fg:x="43117" fg:w="80"/><text x="40.8139%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (113 samples, 0.11%)</title><rect x="40.5423%" y="453" width="0.1063%" height="15" fill="rgb(231,27,9)" fg:x="43094" fg:w="113"/><text x="40.7923%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (113 samples, 0.11%)</title><rect x="40.5423%" y="437" width="0.1063%" height="15" fill="rgb(219,169,10)" fg:x="43094" fg:w="113"/><text x="40.7923%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (116 samples, 0.11%)</title><rect x="40.5423%" y="485" width="0.1091%" height="15" fill="rgb(244,229,43)" fg:x="43094" fg:w="116"/><text x="40.7923%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (116 samples, 0.11%)</title><rect x="40.5423%" y="469" width="0.1091%" height="15" fill="rgb(254,38,20)" fg:x="43094" fg:w="116"/><text x="40.7923%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (135 samples, 0.13%)</title><rect x="40.5310%" y="501" width="0.1270%" height="15" fill="rgb(250,47,30)" fg:x="43082" fg:w="135"/><text x="40.7810%" y="511.50"></text></g><g><title>rust_dealloc (155 samples, 0.15%)</title><rect x="40.5235%" y="517" width="0.1458%" height="15" fill="rgb(224,124,36)" fg:x="43074" fg:w="155"/><text x="40.7735%" y="527.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="40.6580%" y="501" width="0.0113%" height="15" fill="rgb(246,68,51)" fg:x="43217" fg:w="12"/><text x="40.9080%" y="511.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (1,301 samples, 1.22%)</title><rect x="39.4481%" y="645" width="1.2240%" height="15" fill="rgb(253,43,49)" fg:x="41931" fg:w="1301"/><text x="39.6981%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt; (219 samples, 0.21%)</title><rect x="40.4661%" y="629" width="0.2060%" height="15" fill="rgb(219,54,36)" fg:x="43013" fg:w="219"/><text x="40.7161%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (219 samples, 0.21%)</title><rect x="40.4661%" y="613" width="0.2060%" height="15" fill="rgb(227,133,34)" fg:x="43013" fg:w="219"/><text x="40.7161%" y="623.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (219 samples, 0.21%)</title><rect x="40.4661%" y="597" width="0.2060%" height="15" fill="rgb(247,227,15)" fg:x="43013" fg:w="219"/><text x="40.7161%" y="607.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (217 samples, 0.20%)</title><rect x="40.4679%" y="581" width="0.2042%" height="15" fill="rgb(229,96,14)" fg:x="43015" fg:w="217"/><text x="40.7179%" y="591.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (208 samples, 0.20%)</title><rect x="40.4764%" y="565" width="0.1957%" height="15" fill="rgb(220,79,17)" fg:x="43024" fg:w="208"/><text x="40.7264%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (208 samples, 0.20%)</title><rect x="40.4764%" y="549" width="0.1957%" height="15" fill="rgb(205,131,53)" fg:x="43024" fg:w="208"/><text x="40.7264%" y="559.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (208 samples, 0.20%)</title><rect x="40.4764%" y="533" width="0.1957%" height="15" fill="rgb(209,50,29)" fg:x="43024" fg:w="208"/><text x="40.7264%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies (35 samples, 0.03%)</title><rect x="40.6740%" y="645" width="0.0329%" height="15" fill="rgb(245,86,46)" fg:x="43234" fg:w="35"/><text x="40.9240%" y="655.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (12 samples, 0.01%)</title><rect x="40.7069%" y="645" width="0.0113%" height="15" fill="rgb(235,66,46)" fg:x="43269" fg:w="12"/><text x="40.9569%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (11,738 samples, 11.04%)</title><rect x="29.6771%" y="661" width="11.0430%" height="15" fill="rgb(232,148,31)" fg:x="31545" fg:w="11738"/><text x="29.9271%" y="671.50">tremor_runtime::..</text></g><g><title>async_global_executor::threading::thread_main_loop (11,797 samples, 11.10%)</title><rect x="29.6291%" y="1125" width="11.0985%" height="15" fill="rgb(217,149,8)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="1135.50">async_global_exe..</text></g><g><title>std::panic::catch_unwind (11,797 samples, 11.10%)</title><rect x="29.6291%" y="1109" width="11.0985%" height="15" fill="rgb(209,183,11)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="1119.50">std::panic::catc..</text></g><g><title>std::panicking::try (11,797 samples, 11.10%)</title><rect x="29.6291%" y="1093" width="11.0985%" height="15" fill="rgb(208,55,20)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="1103.50">std::panicking::..</text></g><g><title>std::panicking::try::do_call (11,797 samples, 11.10%)</title><rect x="29.6291%" y="1077" width="11.0985%" height="15" fill="rgb(218,39,14)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="1087.50">std::panicking::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (11,797 samples, 11.10%)</title><rect x="29.6291%" y="1061" width="11.0985%" height="15" fill="rgb(216,169,33)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="1071.50">async_global_exe..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,797 samples, 11.10%)</title><rect x="29.6291%" y="1045" width="11.0985%" height="15" fill="rgb(233,80,24)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="1055.50">std::thread::loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,797 samples, 11.10%)</title><rect x="29.6291%" y="1029" width="11.0985%" height="15" fill="rgb(213,179,31)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="1039.50">std::thread::loc..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (11,797 samples, 11.10%)</title><rect x="29.6291%" y="1013" width="11.0985%" height="15" fill="rgb(209,19,5)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="1023.50">async_global_exe..</text></g><g><title>async_global_executor::reactor::block_on (11,797 samples, 11.10%)</title><rect x="29.6291%" y="997" width="11.0985%" height="15" fill="rgb(219,18,35)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="1007.50">async_global_exe..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (11,797 samples, 11.10%)</title><rect x="29.6291%" y="981" width="11.0985%" height="15" fill="rgb(209,169,16)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="991.50">async_global_exe..</text></g><g><title>async_io::driver::block_on (11,797 samples, 11.10%)</title><rect x="29.6291%" y="965" width="11.0985%" height="15" fill="rgb(245,90,51)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="975.50">async_io::driver..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,797 samples, 11.10%)</title><rect x="29.6291%" y="949" width="11.0985%" height="15" fill="rgb(220,99,45)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="959.50">&lt;futures_lite::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,797 samples, 11.10%)</title><rect x="29.6291%" y="933" width="11.0985%" height="15" fill="rgb(249,89,25)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="943.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::run::{{closure}} (11,797 samples, 11.10%)</title><rect x="29.6291%" y="917" width="11.0985%" height="15" fill="rgb(239,193,0)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="927.50">async_executor::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,797 samples, 11.10%)</title><rect x="29.6291%" y="901" width="11.0985%" height="15" fill="rgb(231,126,1)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="911.50">&lt;futures_lite::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,797 samples, 11.10%)</title><rect x="29.6291%" y="885" width="11.0985%" height="15" fill="rgb(243,166,3)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="895.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11,797 samples, 11.10%)</title><rect x="29.6291%" y="869" width="11.0985%" height="15" fill="rgb(223,22,34)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="879.50">async_executor::..</text></g><g><title>async_task::runnable::Runnable::run (11,797 samples, 11.10%)</title><rect x="29.6291%" y="853" width="11.0985%" height="15" fill="rgb(251,52,51)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="863.50">async_task::runn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (11,797 samples, 11.10%)</title><rect x="29.6291%" y="837" width="11.0985%" height="15" fill="rgb(221,165,28)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="847.50">async_task::raw:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,797 samples, 11.10%)</title><rect x="29.6291%" y="821" width="11.0985%" height="15" fill="rgb(218,121,47)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="831.50">&lt;core::pin::Pin&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,797 samples, 11.10%)</title><rect x="29.6291%" y="805" width="11.0985%" height="15" fill="rgb(209,120,9)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="815.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (11,797 samples, 11.10%)</title><rect x="29.6291%" y="789" width="11.0985%" height="15" fill="rgb(236,68,12)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="799.50">async_executor::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (11,797 samples, 11.10%)</title><rect x="29.6291%" y="773" width="11.0985%" height="15" fill="rgb(225,194,26)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="783.50">&lt;async_std::task..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (11,797 samples, 11.10%)</title><rect x="29.6291%" y="757" width="11.0985%" height="15" fill="rgb(231,84,39)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="767.50">async_std::task:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,797 samples, 11.10%)</title><rect x="29.6291%" y="741" width="11.0985%" height="15" fill="rgb(210,11,45)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="751.50">std::thread::loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,797 samples, 11.10%)</title><rect x="29.6291%" y="725" width="11.0985%" height="15" fill="rgb(224,54,52)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="735.50">std::thread::loc..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (11,797 samples, 11.10%)</title><rect x="29.6291%" y="709" width="11.0985%" height="15" fill="rgb(238,102,14)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="719.50">async_std::task:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11,797 samples, 11.10%)</title><rect x="29.6291%" y="693" width="11.0985%" height="15" fill="rgb(243,160,52)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="703.50">&lt;async_std::task..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,797 samples, 11.10%)</title><rect x="29.6291%" y="677" width="11.0985%" height="15" fill="rgb(216,114,19)" fg:x="31494" fg:w="11797"/><text x="29.8791%" y="687.50">&lt;core::future::f..</text></g><g><title>__memcpy_avx_unaligned_erms (558 samples, 0.52%)</title><rect x="40.8057%" y="741" width="0.5250%" height="15" fill="rgb(244,166,37)" fg:x="43374" fg:w="558"/><text x="41.0557%" y="751.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (587 samples, 0.55%)</title><rect x="40.7859%" y="757" width="0.5522%" height="15" fill="rgb(246,29,44)" fg:x="43353" fg:w="587"/><text x="41.0359%" y="767.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,012 samples, 0.95%)</title><rect x="40.7530%" y="773" width="0.9521%" height="15" fill="rgb(215,56,53)" fg:x="43318" fg:w="1012"/><text x="41.0030%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (390 samples, 0.37%)</title><rect x="41.3382%" y="757" width="0.3669%" height="15" fill="rgb(217,60,2)" fg:x="43940" fg:w="390"/><text x="41.5882%" y="767.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,038 samples, 0.98%)</title><rect x="40.7314%" y="805" width="0.9765%" height="15" fill="rgb(207,26,24)" fg:x="43295" fg:w="1038"/><text x="40.9814%" y="815.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,038 samples, 0.98%)</title><rect x="40.7314%" y="789" width="0.9765%" height="15" fill="rgb(252,210,15)" fg:x="43295" fg:w="1038"/><text x="40.9814%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (23 samples, 0.02%)</title><rect x="41.7126%" y="469" width="0.0216%" height="15" fill="rgb(253,209,26)" fg:x="44338" fg:w="23"/><text x="41.9626%" y="479.50"></text></g><g><title>&lt;abi_stable::std_types::result::RResult&lt;T,E&gt; as core::convert::From&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::from (23 samples, 0.02%)</title><rect x="41.7126%" y="453" width="0.0216%" height="15" fill="rgb(238,170,14)" fg:x="44338" fg:w="23"/><text x="41.9626%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (77 samples, 0.07%)</title><rect x="41.7418%" y="469" width="0.0724%" height="15" fill="rgb(216,178,15)" fg:x="44369" fg:w="77"/><text x="41.9918%" y="479.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (68 samples, 0.06%)</title><rect x="41.7502%" y="453" width="0.0640%" height="15" fill="rgb(250,197,2)" fg:x="44378" fg:w="68"/><text x="42.0002%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (58 samples, 0.05%)</title><rect x="41.7596%" y="437" width="0.0546%" height="15" fill="rgb(212,70,42)" fg:x="44388" fg:w="58"/><text x="42.0096%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (58 samples, 0.05%)</title><rect x="41.7596%" y="421" width="0.0546%" height="15" fill="rgb(227,213,9)" fg:x="44388" fg:w="58"/><text x="42.0096%" y="431.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (54 samples, 0.05%)</title><rect x="41.7634%" y="405" width="0.0508%" height="15" fill="rgb(245,99,25)" fg:x="44392" fg:w="54"/><text x="42.0134%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.02%)</title><rect x="41.7992%" y="389" width="0.0151%" height="15" fill="rgb(250,82,29)" fg:x="44430" fg:w="16"/><text x="42.0492%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.02%)</title><rect x="41.7992%" y="373" width="0.0151%" height="15" fill="rgb(241,226,54)" fg:x="44430" fg:w="16"/><text x="42.0492%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (189 samples, 0.18%)</title><rect x="41.8359%" y="453" width="0.1778%" height="15" fill="rgb(221,99,41)" fg:x="44469" fg:w="189"/><text x="42.0859%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (567 samples, 0.53%)</title><rect x="42.0146%" y="453" width="0.5334%" height="15" fill="rgb(213,90,21)" fg:x="44659" fg:w="567"/><text x="42.2646%" y="463.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (13 samples, 0.01%)</title><rect x="42.5546%" y="453" width="0.0122%" height="15" fill="rgb(205,208,24)" fg:x="45233" fg:w="13"/><text x="42.8046%" y="463.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (44 samples, 0.04%)</title><rect x="42.5668%" y="453" width="0.0414%" height="15" fill="rgb(246,31,12)" fg:x="45246" fg:w="44"/><text x="42.8168%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::cow::RCow&lt;B,&lt;B as abi_stable::traits::IntoOwned&gt;::ROwned&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="42.5941%" y="437" width="0.0141%" height="15" fill="rgb(213,154,6)" fg:x="45275" fg:w="15"/><text x="42.8441%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,013 samples, 1.89%)</title><rect x="40.7314%" y="821" width="1.8938%" height="15" fill="rgb(222,163,29)" fg:x="43295" fg:w="2013"/><text x="40.9814%" y="831.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (975 samples, 0.92%)</title><rect x="41.7079%" y="805" width="0.9173%" height="15" fill="rgb(227,201,8)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="815.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (975 samples, 0.92%)</title><rect x="41.7079%" y="789" width="0.9173%" height="15" fill="rgb(233,9,32)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="799.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (975 samples, 0.92%)</title><rect x="41.7079%" y="773" width="0.9173%" height="15" fill="rgb(217,54,24)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="783.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (975 samples, 0.92%)</title><rect x="41.7079%" y="757" width="0.9173%" height="15" fill="rgb(235,192,0)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="767.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (975 samples, 0.92%)</title><rect x="41.7079%" y="741" width="0.9173%" height="15" fill="rgb(235,45,9)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="751.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (975 samples, 0.92%)</title><rect x="41.7079%" y="725" width="0.9173%" height="15" fill="rgb(246,42,40)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (975 samples, 0.92%)</title><rect x="41.7079%" y="709" width="0.9173%" height="15" fill="rgb(248,111,24)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="719.50"></text></g><g><title>std::panic::catch_unwind (975 samples, 0.92%)</title><rect x="41.7079%" y="693" width="0.9173%" height="15" fill="rgb(249,65,22)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="703.50"></text></g><g><title>std::panicking::try (975 samples, 0.92%)</title><rect x="41.7079%" y="677" width="0.9173%" height="15" fill="rgb(238,111,51)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="687.50"></text></g><g><title>std::panicking::try::do_call (975 samples, 0.92%)</title><rect x="41.7079%" y="661" width="0.9173%" height="15" fill="rgb(250,118,22)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="671.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (975 samples, 0.92%)</title><rect x="41.7079%" y="645" width="0.9173%" height="15" fill="rgb(234,84,26)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (975 samples, 0.92%)</title><rect x="41.7079%" y="629" width="0.9173%" height="15" fill="rgb(243,172,12)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="639.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (975 samples, 0.92%)</title><rect x="41.7079%" y="613" width="0.9173%" height="15" fill="rgb(236,150,49)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="623.50"></text></g><g><title>async_ffi::FfiContext::with_context (975 samples, 0.92%)</title><rect x="41.7079%" y="597" width="0.9173%" height="15" fill="rgb(225,197,26)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (975 samples, 0.92%)</title><rect x="41.7079%" y="581" width="0.9173%" height="15" fill="rgb(214,17,42)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (975 samples, 0.92%)</title><rect x="41.7079%" y="565" width="0.9173%" height="15" fill="rgb(224,165,40)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="575.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (975 samples, 0.92%)</title><rect x="41.7079%" y="549" width="0.9173%" height="15" fill="rgb(246,100,4)" fg:x="44333" fg:w="975"/><text x="41.9579%" y="559.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (974 samples, 0.92%)</title><rect x="41.7088%" y="533" width="0.9163%" height="15" fill="rgb(222,103,0)" fg:x="44334" fg:w="974"/><text x="41.9588%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (974 samples, 0.92%)</title><rect x="41.7088%" y="517" width="0.9163%" height="15" fill="rgb(227,189,26)" fg:x="44334" fg:w="974"/><text x="41.9588%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (974 samples, 0.92%)</title><rect x="41.7088%" y="501" width="0.9163%" height="15" fill="rgb(214,202,17)" fg:x="44334" fg:w="974"/><text x="41.9588%" y="511.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (974 samples, 0.92%)</title><rect x="41.7088%" y="485" width="0.9163%" height="15" fill="rgb(229,111,3)" fg:x="44334" fg:w="974"/><text x="41.9588%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (862 samples, 0.81%)</title><rect x="41.8142%" y="469" width="0.8110%" height="15" fill="rgb(229,172,15)" fg:x="44446" fg:w="862"/><text x="42.0642%" y="479.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (26 samples, 0.02%)</title><rect x="42.6252%" y="821" width="0.0245%" height="15" fill="rgb(230,224,35)" fg:x="45308" fg:w="26"/><text x="42.8752%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (236 samples, 0.22%)</title><rect x="43.9442%" y="773" width="0.2220%" height="15" fill="rgb(251,141,6)" fg:x="46710" fg:w="236"/><text x="44.1942%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (233 samples, 0.22%)</title><rect x="43.9470%" y="757" width="0.2192%" height="15" fill="rgb(225,208,6)" fg:x="46713" fg:w="233"/><text x="44.1970%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (220 samples, 0.21%)</title><rect x="43.9592%" y="741" width="0.2070%" height="15" fill="rgb(246,181,16)" fg:x="46726" fg:w="220"/><text x="44.2092%" y="751.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (220 samples, 0.21%)</title><rect x="44.1699%" y="709" width="0.2070%" height="15" fill="rgb(227,129,36)" fg:x="46950" fg:w="220"/><text x="44.4199%" y="719.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (228 samples, 0.21%)</title><rect x="44.1662%" y="741" width="0.2145%" height="15" fill="rgb(248,117,24)" fg:x="46946" fg:w="228"/><text x="44.4162%" y="751.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (224 samples, 0.21%)</title><rect x="44.1699%" y="725" width="0.2107%" height="15" fill="rgb(214,185,35)" fg:x="46950" fg:w="224"/><text x="44.4199%" y="735.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (40 samples, 0.04%)</title><rect x="44.3807%" y="741" width="0.0376%" height="15" fill="rgb(236,150,34)" fg:x="47174" fg:w="40"/><text x="44.6307%" y="751.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (20 samples, 0.02%)</title><rect x="44.3995%" y="725" width="0.0188%" height="15" fill="rgb(243,228,27)" fg:x="47194" fg:w="20"/><text x="44.6495%" y="735.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (468 samples, 0.44%)</title><rect x="44.1662%" y="773" width="0.4403%" height="15" fill="rgb(245,77,44)" fg:x="46946" fg:w="468"/><text x="44.4162%" y="783.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (468 samples, 0.44%)</title><rect x="44.1662%" y="757" width="0.4403%" height="15" fill="rgb(235,214,42)" fg:x="46946" fg:w="468"/><text x="44.4162%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (200 samples, 0.19%)</title><rect x="44.4183%" y="741" width="0.1882%" height="15" fill="rgb(221,74,3)" fg:x="47214" fg:w="200"/><text x="44.6683%" y="751.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (37 samples, 0.03%)</title><rect x="44.6065%" y="773" width="0.0348%" height="15" fill="rgb(206,121,29)" fg:x="47414" fg:w="37"/><text x="44.8565%" y="783.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (18 samples, 0.02%)</title><rect x="44.6544%" y="725" width="0.0169%" height="15" fill="rgb(249,131,53)" fg:x="47465" fg:w="18"/><text x="44.9044%" y="735.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="44.6789%" y="629" width="0.0103%" height="15" fill="rgb(236,170,29)" fg:x="47491" fg:w="11"/><text x="44.9289%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="44.6977%" y="581" width="0.0122%" height="15" fill="rgb(247,96,15)" fg:x="47511" fg:w="13"/><text x="44.9477%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (30 samples, 0.03%)</title><rect x="44.6893%" y="629" width="0.0282%" height="15" fill="rgb(211,210,7)" fg:x="47502" fg:w="30"/><text x="44.9393%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (30 samples, 0.03%)</title><rect x="44.6893%" y="613" width="0.0282%" height="15" fill="rgb(240,88,50)" fg:x="47502" fg:w="30"/><text x="44.9393%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (29 samples, 0.03%)</title><rect x="44.6902%" y="597" width="0.0273%" height="15" fill="rgb(209,229,26)" fg:x="47503" fg:w="29"/><text x="44.9402%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (45 samples, 0.04%)</title><rect x="44.6780%" y="661" width="0.0423%" height="15" fill="rgb(210,68,23)" fg:x="47490" fg:w="45"/><text x="44.9280%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (45 samples, 0.04%)</title><rect x="44.6780%" y="645" width="0.0423%" height="15" fill="rgb(229,180,13)" fg:x="47490" fg:w="45"/><text x="44.9280%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (53 samples, 0.05%)</title><rect x="44.6780%" y="693" width="0.0499%" height="15" fill="rgb(236,53,44)" fg:x="47490" fg:w="53"/><text x="44.9280%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (53 samples, 0.05%)</title><rect x="44.6780%" y="677" width="0.0499%" height="15" fill="rgb(244,214,29)" fg:x="47490" fg:w="53"/><text x="44.9280%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (61 samples, 0.06%)</title><rect x="44.6770%" y="709" width="0.0574%" height="15" fill="rgb(220,75,29)" fg:x="47489" fg:w="61"/><text x="44.9270%" y="719.50"></text></g><g><title>rust_dealloc (72 samples, 0.07%)</title><rect x="44.6714%" y="725" width="0.0677%" height="15" fill="rgb(214,183,37)" fg:x="47483" fg:w="72"/><text x="44.9214%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (112 samples, 0.11%)</title><rect x="44.6413%" y="773" width="0.1054%" height="15" fill="rgb(239,117,29)" fg:x="47451" fg:w="112"/><text x="44.8913%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (112 samples, 0.11%)</title><rect x="44.6413%" y="757" width="0.1054%" height="15" fill="rgb(237,171,35)" fg:x="47451" fg:w="112"/><text x="44.8913%" y="767.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 0.11%)</title><rect x="44.6413%" y="741" width="0.1054%" height="15" fill="rgb(229,178,53)" fg:x="47451" fg:w="112"/><text x="44.8913%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="44.8172%" y="437" width="0.0103%" height="15" fill="rgb(210,102,19)" fg:x="47638" fg:w="11"/><text x="45.0672%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="44.8172%" y="421" width="0.0103%" height="15" fill="rgb(235,127,22)" fg:x="47638" fg:w="11"/><text x="45.0672%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (14 samples, 0.01%)</title><rect x="44.8172%" y="453" width="0.0132%" height="15" fill="rgb(244,31,31)" fg:x="47638" fg:w="14"/><text x="45.0672%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (20 samples, 0.02%)</title><rect x="44.8134%" y="469" width="0.0188%" height="15" fill="rgb(231,43,21)" fg:x="47634" fg:w="20"/><text x="45.0634%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="44.8134%" y="501" width="0.0818%" height="15" fill="rgb(217,131,35)" fg:x="47634" fg:w="87"/><text x="45.0634%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (87 samples, 0.08%)</title><rect x="44.8134%" y="485" width="0.0818%" height="15" fill="rgb(221,149,4)" fg:x="47634" fg:w="87"/><text x="45.0634%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (67 samples, 0.06%)</title><rect x="44.8323%" y="469" width="0.0630%" height="15" fill="rgb(232,170,28)" fg:x="47654" fg:w="67"/><text x="45.0823%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (54 samples, 0.05%)</title><rect x="44.8445%" y="453" width="0.0508%" height="15" fill="rgb(238,56,10)" fg:x="47667" fg:w="54"/><text x="45.0945%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (54 samples, 0.05%)</title><rect x="44.8445%" y="437" width="0.0508%" height="15" fill="rgb(235,196,14)" fg:x="47667" fg:w="54"/><text x="45.0945%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (54 samples, 0.05%)</title><rect x="44.8445%" y="421" width="0.0508%" height="15" fill="rgb(216,45,48)" fg:x="47667" fg:w="54"/><text x="45.0945%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="44.8972%" y="501" width="0.0235%" height="15" fill="rgb(238,213,17)" fg:x="47723" fg:w="25"/><text x="45.1472%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="44.8981%" y="485" width="0.0226%" height="15" fill="rgb(212,13,2)" fg:x="47724" fg:w="24"/><text x="45.1481%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="44.9000%" y="469" width="0.0207%" height="15" fill="rgb(240,114,20)" fg:x="47726" fg:w="22"/><text x="45.1500%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="44.9028%" y="453" width="0.0179%" height="15" fill="rgb(228,41,40)" fg:x="47729" fg:w="19"/><text x="45.1528%" y="463.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (19 samples, 0.02%)</title><rect x="44.9028%" y="437" width="0.0179%" height="15" fill="rgb(244,132,35)" fg:x="47729" fg:w="19"/><text x="45.1528%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::empty (19 samples, 0.02%)</title><rect x="44.9207%" y="501" width="0.0179%" height="15" fill="rgb(253,189,4)" fg:x="47748" fg:w="19"/><text x="45.1707%" y="511.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (19 samples, 0.02%)</title><rect x="44.9207%" y="485" width="0.0179%" height="15" fill="rgb(224,37,19)" fg:x="47748" fg:w="19"/><text x="45.1707%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (207 samples, 0.19%)</title><rect x="44.8003%" y="549" width="0.1947%" height="15" fill="rgb(235,223,18)" fg:x="47620" fg:w="207"/><text x="45.0503%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (204 samples, 0.19%)</title><rect x="44.8031%" y="533" width="0.1919%" height="15" fill="rgb(235,163,25)" fg:x="47623" fg:w="204"/><text x="45.0531%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (199 samples, 0.19%)</title><rect x="44.8078%" y="517" width="0.1872%" height="15" fill="rgb(217,145,28)" fg:x="47628" fg:w="199"/><text x="45.0578%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (60 samples, 0.06%)</title><rect x="44.9386%" y="501" width="0.0564%" height="15" fill="rgb(223,223,32)" fg:x="47767" fg:w="60"/><text x="45.1886%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (60 samples, 0.06%)</title><rect x="44.9386%" y="485" width="0.0564%" height="15" fill="rgb(227,189,39)" fg:x="47767" fg:w="60"/><text x="45.1886%" y="495.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (256 samples, 0.24%)</title><rect x="44.7645%" y="757" width="0.2408%" height="15" fill="rgb(248,10,22)" fg:x="47582" fg:w="256"/><text x="45.0145%" y="767.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (241 samples, 0.23%)</title><rect x="44.7786%" y="741" width="0.2267%" height="15" fill="rgb(248,46,39)" fg:x="47597" fg:w="241"/><text x="45.0286%" y="751.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (241 samples, 0.23%)</title><rect x="44.7786%" y="725" width="0.2267%" height="15" fill="rgb(248,113,48)" fg:x="47597" fg:w="241"/><text x="45.0286%" y="735.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (241 samples, 0.23%)</title><rect x="44.7786%" y="709" width="0.2267%" height="15" fill="rgb(245,16,25)" fg:x="47597" fg:w="241"/><text x="45.0286%" y="719.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (241 samples, 0.23%)</title><rect x="44.7786%" y="693" width="0.2267%" height="15" fill="rgb(249,152,16)" fg:x="47597" fg:w="241"/><text x="45.0286%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (241 samples, 0.23%)</title><rect x="44.7786%" y="677" width="0.2267%" height="15" fill="rgb(250,16,1)" fg:x="47597" fg:w="241"/><text x="45.0286%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (226 samples, 0.21%)</title><rect x="44.7927%" y="661" width="0.2126%" height="15" fill="rgb(249,138,3)" fg:x="47612" fg:w="226"/><text x="45.0427%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (226 samples, 0.21%)</title><rect x="44.7927%" y="645" width="0.2126%" height="15" fill="rgb(227,71,41)" fg:x="47612" fg:w="226"/><text x="45.0427%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (226 samples, 0.21%)</title><rect x="44.7927%" y="629" width="0.2126%" height="15" fill="rgb(209,184,23)" fg:x="47612" fg:w="226"/><text x="45.0427%" y="639.50"></text></g><g><title>alloc::alloc::alloc (225 samples, 0.21%)</title><rect x="44.7937%" y="613" width="0.2117%" height="15" fill="rgb(223,215,31)" fg:x="47613" fg:w="225"/><text x="45.0437%" y="623.50"></text></g><g><title>__rg_alloc (225 samples, 0.21%)</title><rect x="44.7937%" y="597" width="0.2117%" height="15" fill="rgb(210,146,28)" fg:x="47613" fg:w="225"/><text x="45.0437%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (225 samples, 0.21%)</title><rect x="44.7937%" y="581" width="0.2117%" height="15" fill="rgb(209,183,41)" fg:x="47613" fg:w="225"/><text x="45.0437%" y="591.50"></text></g><g><title>rust_alloc (221 samples, 0.21%)</title><rect x="44.7974%" y="565" width="0.2079%" height="15" fill="rgb(209,224,45)" fg:x="47617" fg:w="221"/><text x="45.0474%" y="575.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="44.9950%" y="549" width="0.0103%" height="15" fill="rgb(224,209,51)" fg:x="47827" fg:w="11"/><text x="45.2450%" y="559.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::_::&lt;impl tremor_runtime::connectors::source::RawSource_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::pull_data (34 samples, 0.03%)</title><rect x="45.0091%" y="757" width="0.0320%" height="15" fill="rgb(223,17,39)" fg:x="47842" fg:w="34"/><text x="45.2591%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (1,903 samples, 1.79%)</title><rect x="43.2536%" y="789" width="1.7903%" height="15" fill="rgb(234,204,37)" fg:x="45976" fg:w="1903"/><text x="43.5036%" y="799.50">t..</text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::pull_data (316 samples, 0.30%)</title><rect x="44.7466%" y="773" width="0.2973%" height="15" fill="rgb(236,120,5)" fg:x="47563" fg:w="316"/><text x="44.9966%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::control_plane::{{closure}} (299 samples, 0.28%)</title><rect x="45.0439%" y="789" width="0.2813%" height="15" fill="rgb(248,97,27)" fg:x="47879" fg:w="299"/><text x="45.2939%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::needs_control_plane_msg (239 samples, 0.22%)</title><rect x="45.1004%" y="773" width="0.2248%" height="15" fill="rgb(240,66,17)" fg:x="47939" fg:w="239"/><text x="45.3504%" y="783.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (215 samples, 0.20%)</title><rect x="45.1230%" y="757" width="0.2023%" height="15" fill="rgb(210,79,3)" fg:x="47963" fg:w="215"/><text x="45.3730%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (211 samples, 0.20%)</title><rect x="45.1267%" y="741" width="0.1985%" height="15" fill="rgb(214,176,27)" fg:x="47967" fg:w="211"/><text x="45.3767%" y="751.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (152 samples, 0.14%)</title><rect x="45.1822%" y="725" width="0.1430%" height="15" fill="rgb(235,185,3)" fg:x="48026" fg:w="152"/><text x="45.4322%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (139 samples, 0.13%)</title><rect x="45.1945%" y="709" width="0.1308%" height="15" fill="rgb(227,24,12)" fg:x="48039" fg:w="139"/><text x="45.4445%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (139 samples, 0.13%)</title><rect x="45.1945%" y="693" width="0.1308%" height="15" fill="rgb(252,169,48)" fg:x="48039" fg:w="139"/><text x="45.4445%" y="703.50"></text></g><g><title>&lt;abi_stable::std_types::utypeid::UTypeId as core::cmp::PartialEq&gt;::eq (195 samples, 0.18%)</title><rect x="46.2011%" y="709" width="0.1835%" height="15" fill="rgb(212,65,1)" fg:x="49109" fg:w="195"/><text x="46.4511%" y="719.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (191 samples, 0.18%)</title><rect x="46.2049%" y="693" width="0.1797%" height="15" fill="rgb(242,39,24)" fg:x="49113" fg:w="191"/><text x="46.4549%" y="703.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (191 samples, 0.18%)</title><rect x="46.2049%" y="677" width="0.1797%" height="15" fill="rgb(249,32,23)" fg:x="49113" fg:w="191"/><text x="46.4549%" y="687.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (35 samples, 0.03%)</title><rect x="46.3846%" y="709" width="0.0329%" height="15" fill="rgb(251,195,23)" fg:x="49304" fg:w="35"/><text x="46.6346%" y="719.50"></text></g><g><title>abi_stable::std_types::utypeid::new_utypeid (25 samples, 0.02%)</title><rect x="46.3940%" y="693" width="0.0235%" height="15" fill="rgb(236,174,8)" fg:x="49314" fg:w="25"/><text x="46.6440%" y="703.50"></text></g><g><title>abi_stable::std_types::utypeid::UTypeId::new (14 samples, 0.01%)</title><rect x="46.4043%" y="677" width="0.0132%" height="15" fill="rgb(220,197,8)" fg:x="49325" fg:w="14"/><text x="46.6543%" y="687.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (241 samples, 0.23%)</title><rect x="46.2011%" y="725" width="0.2267%" height="15" fill="rgb(240,108,37)" fg:x="49109" fg:w="241"/><text x="46.4511%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (11 samples, 0.01%)</title><rect x="46.4175%" y="709" width="0.0103%" height="15" fill="rgb(232,176,24)" fg:x="49339" fg:w="11"/><text x="46.6675%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (334 samples, 0.31%)</title><rect x="46.1296%" y="773" width="0.3142%" height="15" fill="rgb(243,35,29)" fg:x="49033" fg:w="334"/><text x="46.3796%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::convert::From&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (313 samples, 0.29%)</title><rect x="46.1494%" y="757" width="0.2945%" height="15" fill="rgb(210,37,18)" fg:x="49054" fg:w="313"/><text x="46.3994%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (295 samples, 0.28%)</title><rect x="46.1663%" y="741" width="0.2775%" height="15" fill="rgb(224,184,40)" fg:x="49072" fg:w="295"/><text x="46.4163%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (670 samples, 0.63%)</title><rect x="46.4570%" y="773" width="0.6303%" height="15" fill="rgb(236,39,29)" fg:x="49381" fg:w="670"/><text x="46.7070%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="47.2294%" y="517" width="0.0395%" height="15" fill="rgb(232,48,39)" fg:x="50202" fg:w="42"/><text x="47.4794%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (42 samples, 0.04%)</title><rect x="47.2294%" y="501" width="0.0395%" height="15" fill="rgb(236,34,42)" fg:x="50202" fg:w="42"/><text x="47.4794%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (32 samples, 0.03%)</title><rect x="47.2388%" y="485" width="0.0301%" height="15" fill="rgb(243,106,37)" fg:x="50212" fg:w="32"/><text x="47.4888%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (21 samples, 0.02%)</title><rect x="47.2491%" y="469" width="0.0198%" height="15" fill="rgb(218,96,6)" fg:x="50223" fg:w="21"/><text x="47.4991%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (21 samples, 0.02%)</title><rect x="47.2491%" y="453" width="0.0198%" height="15" fill="rgb(235,130,12)" fg:x="50223" fg:w="21"/><text x="47.4991%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (21 samples, 0.02%)</title><rect x="47.2491%" y="437" width="0.0198%" height="15" fill="rgb(231,95,0)" fg:x="50223" fg:w="21"/><text x="47.4991%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (135 samples, 0.13%)</title><rect x="47.2228%" y="565" width="0.1270%" height="15" fill="rgb(228,12,23)" fg:x="50195" fg:w="135"/><text x="47.4728%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (135 samples, 0.13%)</title><rect x="47.2228%" y="549" width="0.1270%" height="15" fill="rgb(216,12,1)" fg:x="50195" fg:w="135"/><text x="47.4728%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (132 samples, 0.12%)</title><rect x="47.2256%" y="533" width="0.1242%" height="15" fill="rgb(219,59,3)" fg:x="50198" fg:w="132"/><text x="47.4756%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (71 samples, 0.07%)</title><rect x="47.2830%" y="517" width="0.0668%" height="15" fill="rgb(215,208,46)" fg:x="50259" fg:w="71"/><text x="47.5330%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (71 samples, 0.07%)</title><rect x="47.2830%" y="501" width="0.0668%" height="15" fill="rgb(254,224,29)" fg:x="50259" fg:w="71"/><text x="47.5330%" y="511.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (253 samples, 0.24%)</title><rect x="47.1193%" y="709" width="0.2380%" height="15" fill="rgb(232,14,29)" fg:x="50085" fg:w="253"/><text x="47.3693%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (253 samples, 0.24%)</title><rect x="47.1193%" y="693" width="0.2380%" height="15" fill="rgb(208,45,52)" fg:x="50085" fg:w="253"/><text x="47.3693%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (159 samples, 0.15%)</title><rect x="47.2077%" y="677" width="0.1496%" height="15" fill="rgb(234,191,28)" fg:x="50179" fg:w="159"/><text x="47.4577%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (152 samples, 0.14%)</title><rect x="47.2143%" y="661" width="0.1430%" height="15" fill="rgb(244,67,43)" fg:x="50186" fg:w="152"/><text x="47.4643%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (152 samples, 0.14%)</title><rect x="47.2143%" y="645" width="0.1430%" height="15" fill="rgb(236,189,24)" fg:x="50186" fg:w="152"/><text x="47.4643%" y="655.50"></text></g><g><title>alloc::alloc::alloc (152 samples, 0.14%)</title><rect x="47.2143%" y="629" width="0.1430%" height="15" fill="rgb(239,214,33)" fg:x="50186" fg:w="152"/><text x="47.4643%" y="639.50"></text></g><g><title>__rg_alloc (152 samples, 0.14%)</title><rect x="47.2143%" y="613" width="0.1430%" height="15" fill="rgb(226,176,41)" fg:x="50186" fg:w="152"/><text x="47.4643%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (152 samples, 0.14%)</title><rect x="47.2143%" y="597" width="0.1430%" height="15" fill="rgb(248,47,8)" fg:x="50186" fg:w="152"/><text x="47.4643%" y="607.50"></text></g><g><title>rust_alloc (151 samples, 0.14%)</title><rect x="47.2153%" y="581" width="0.1421%" height="15" fill="rgb(218,81,44)" fg:x="50187" fg:w="151"/><text x="47.4653%" y="591.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (18 samples, 0.02%)</title><rect x="47.3573%" y="613" width="0.0169%" height="15" fill="rgb(213,98,6)" fg:x="50338" fg:w="18"/><text x="47.6073%" y="623.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (13 samples, 0.01%)</title><rect x="47.3743%" y="613" width="0.0122%" height="15" fill="rgb(222,85,22)" fg:x="50356" fg:w="13"/><text x="47.6243%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (34 samples, 0.03%)</title><rect x="47.3573%" y="677" width="0.0320%" height="15" fill="rgb(239,46,39)" fg:x="50338" fg:w="34"/><text x="47.6073%" y="687.50"></text></g><g><title>std::collections::hash::map::RandomState::new (34 samples, 0.03%)</title><rect x="47.3573%" y="661" width="0.0320%" height="15" fill="rgb(237,12,29)" fg:x="50338" fg:w="34"/><text x="47.6073%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34 samples, 0.03%)</title><rect x="47.3573%" y="645" width="0.0320%" height="15" fill="rgb(214,77,8)" fg:x="50338" fg:w="34"/><text x="47.6073%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 0.03%)</title><rect x="47.3573%" y="629" width="0.0320%" height="15" fill="rgb(217,168,37)" fg:x="50338" fg:w="34"/><text x="47.6073%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (18 samples, 0.02%)</title><rect x="47.4411%" y="373" width="0.0169%" height="15" fill="rgb(221,217,23)" fg:x="50427" fg:w="18"/><text x="47.6911%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (18 samples, 0.02%)</title><rect x="47.4411%" y="357" width="0.0169%" height="15" fill="rgb(243,229,36)" fg:x="50427" fg:w="18"/><text x="47.6911%" y="367.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="47.4458%" y="341" width="0.0122%" height="15" fill="rgb(251,163,40)" fg:x="50432" fg:w="13"/><text x="47.6958%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (24 samples, 0.02%)</title><rect x="47.4411%" y="389" width="0.0226%" height="15" fill="rgb(237,222,12)" fg:x="50427" fg:w="24"/><text x="47.6911%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (30 samples, 0.03%)</title><rect x="47.4382%" y="405" width="0.0282%" height="15" fill="rgb(248,132,6)" fg:x="50424" fg:w="30"/><text x="47.6882%" y="415.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (23 samples, 0.02%)</title><rect x="47.4787%" y="389" width="0.0216%" height="15" fill="rgb(227,167,50)" fg:x="50467" fg:w="23"/><text x="47.7287%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (181 samples, 0.17%)</title><rect x="47.4382%" y="437" width="0.1703%" height="15" fill="rgb(242,84,37)" fg:x="50424" fg:w="181"/><text x="47.6882%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (181 samples, 0.17%)</title><rect x="47.4382%" y="421" width="0.1703%" height="15" fill="rgb(212,4,50)" fg:x="50424" fg:w="181"/><text x="47.6882%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (151 samples, 0.14%)</title><rect x="47.4665%" y="405" width="0.1421%" height="15" fill="rgb(230,228,32)" fg:x="50454" fg:w="151"/><text x="47.7165%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (115 samples, 0.11%)</title><rect x="47.5003%" y="389" width="0.1082%" height="15" fill="rgb(248,217,23)" fg:x="50490" fg:w="115"/><text x="47.7503%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (115 samples, 0.11%)</title><rect x="47.5003%" y="373" width="0.1082%" height="15" fill="rgb(238,197,32)" fg:x="50490" fg:w="115"/><text x="47.7503%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (115 samples, 0.11%)</title><rect x="47.5003%" y="357" width="0.1082%" height="15" fill="rgb(236,106,1)" fg:x="50490" fg:w="115"/><text x="47.7503%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="47.6085%" y="437" width="0.0141%" height="15" fill="rgb(219,228,13)" fg:x="50605" fg:w="15"/><text x="47.8585%" y="447.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (12 samples, 0.01%)</title><rect x="47.6113%" y="421" width="0.0113%" height="15" fill="rgb(238,30,35)" fg:x="50608" fg:w="12"/><text x="47.8613%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (395 samples, 0.37%)</title><rect x="47.4288%" y="485" width="0.3716%" height="15" fill="rgb(236,70,23)" fg:x="50414" fg:w="395"/><text x="47.6788%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (395 samples, 0.37%)</title><rect x="47.4288%" y="469" width="0.3716%" height="15" fill="rgb(249,104,48)" fg:x="50414" fg:w="395"/><text x="47.6788%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (390 samples, 0.37%)</title><rect x="47.4335%" y="453" width="0.3669%" height="15" fill="rgb(254,117,50)" fg:x="50419" fg:w="390"/><text x="47.6835%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (178 samples, 0.17%)</title><rect x="47.6330%" y="437" width="0.1675%" height="15" fill="rgb(223,152,4)" fg:x="50631" fg:w="178"/><text x="47.8830%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (178 samples, 0.17%)</title><rect x="47.6330%" y="421" width="0.1675%" height="15" fill="rgb(245,6,2)" fg:x="50631" fg:w="178"/><text x="47.8830%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (432 samples, 0.41%)</title><rect x="47.3987%" y="613" width="0.4064%" height="15" fill="rgb(249,150,24)" fg:x="50382" fg:w="432"/><text x="47.6487%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (417 samples, 0.39%)</title><rect x="47.4128%" y="597" width="0.3923%" height="15" fill="rgb(228,185,42)" fg:x="50397" fg:w="417"/><text x="47.6628%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (413 samples, 0.39%)</title><rect x="47.4166%" y="581" width="0.3885%" height="15" fill="rgb(226,39,33)" fg:x="50401" fg:w="413"/><text x="47.6666%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (413 samples, 0.39%)</title><rect x="47.4166%" y="565" width="0.3885%" height="15" fill="rgb(221,166,19)" fg:x="50401" fg:w="413"/><text x="47.6666%" y="575.50"></text></g><g><title>alloc::alloc::alloc (413 samples, 0.39%)</title><rect x="47.4166%" y="549" width="0.3885%" height="15" fill="rgb(209,109,2)" fg:x="50401" fg:w="413"/><text x="47.6666%" y="559.50"></text></g><g><title>__rg_alloc (413 samples, 0.39%)</title><rect x="47.4166%" y="533" width="0.3885%" height="15" fill="rgb(252,216,26)" fg:x="50401" fg:w="413"/><text x="47.6666%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (413 samples, 0.39%)</title><rect x="47.4166%" y="517" width="0.3885%" height="15" fill="rgb(227,173,36)" fg:x="50401" fg:w="413"/><text x="47.6666%" y="527.50"></text></g><g><title>rust_alloc (412 samples, 0.39%)</title><rect x="47.4175%" y="501" width="0.3876%" height="15" fill="rgb(209,90,7)" fg:x="50402" fg:w="412"/><text x="47.6675%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (483 samples, 0.45%)</title><rect x="47.3573%" y="693" width="0.4544%" height="15" fill="rgb(250,194,11)" fg:x="50338" fg:w="483"/><text x="47.6073%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (449 samples, 0.42%)</title><rect x="47.3893%" y="677" width="0.4224%" height="15" fill="rgb(220,72,50)" fg:x="50372" fg:w="449"/><text x="47.6393%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (449 samples, 0.42%)</title><rect x="47.3893%" y="661" width="0.4224%" height="15" fill="rgb(222,106,48)" fg:x="50372" fg:w="449"/><text x="47.6393%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (439 samples, 0.41%)</title><rect x="47.3987%" y="645" width="0.4130%" height="15" fill="rgb(216,220,45)" fg:x="50382" fg:w="439"/><text x="47.6487%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (439 samples, 0.41%)</title><rect x="47.3987%" y="629" width="0.4130%" height="15" fill="rgb(234,112,18)" fg:x="50382" fg:w="439"/><text x="47.6487%" y="639.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (512 samples, 0.48%)</title><rect x="47.3573%" y="709" width="0.4817%" height="15" fill="rgb(206,179,9)" fg:x="50338" fg:w="512"/><text x="47.6073%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (29 samples, 0.03%)</title><rect x="47.8117%" y="693" width="0.0273%" height="15" fill="rgb(215,115,40)" fg:x="50821" fg:w="29"/><text x="48.0617%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (29 samples, 0.03%)</title><rect x="47.8117%" y="677" width="0.0273%" height="15" fill="rgb(222,69,34)" fg:x="50821" fg:w="29"/><text x="48.0617%" y="687.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (29 samples, 0.03%)</title><rect x="47.8117%" y="661" width="0.0273%" height="15" fill="rgb(209,161,10)" fg:x="50821" fg:w="29"/><text x="48.0617%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (26 samples, 0.02%)</title><rect x="47.8146%" y="645" width="0.0245%" height="15" fill="rgb(217,6,38)" fg:x="50824" fg:w="26"/><text x="48.0646%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (26 samples, 0.02%)</title><rect x="47.8146%" y="629" width="0.0245%" height="15" fill="rgb(229,229,48)" fg:x="50824" fg:w="26"/><text x="48.0646%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (26 samples, 0.02%)</title><rect x="47.8146%" y="613" width="0.0245%" height="15" fill="rgb(225,21,28)" fg:x="50824" fg:w="26"/><text x="48.0646%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (26 samples, 0.02%)</title><rect x="47.8146%" y="597" width="0.0245%" height="15" fill="rgb(206,33,13)" fg:x="50824" fg:w="26"/><text x="48.0646%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (26 samples, 0.02%)</title><rect x="47.8146%" y="581" width="0.0245%" height="15" fill="rgb(242,178,17)" fg:x="50824" fg:w="26"/><text x="48.0646%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (801 samples, 0.75%)</title><rect x="47.0967%" y="773" width="0.7536%" height="15" fill="rgb(220,162,5)" fg:x="50061" fg:w="801"/><text x="47.3467%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (799 samples, 0.75%)</title><rect x="47.0986%" y="757" width="0.7517%" height="15" fill="rgb(210,33,43)" fg:x="50063" fg:w="799"/><text x="47.3486%" y="767.50"></text></g><g><title>value_trait::Builder::object (783 samples, 0.74%)</title><rect x="47.1137%" y="741" width="0.7366%" height="15" fill="rgb(216,116,54)" fg:x="50079" fg:w="783"/><text x="47.3637%" y="751.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (777 samples, 0.73%)</title><rect x="47.1193%" y="725" width="0.7310%" height="15" fill="rgb(249,92,24)" fg:x="50085" fg:w="777"/><text x="47.3693%" y="735.50"></text></g><g><title>tremor_value::value::Value::Object (12 samples, 0.01%)</title><rect x="47.8390%" y="709" width="0.0113%" height="15" fill="rgb(231,189,14)" fg:x="50850" fg:w="12"/><text x="48.0890%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="47.8578%" y="773" width="0.0103%" height="15" fill="rgb(230,8,41)" fg:x="50870" fg:w="11"/><text x="48.1078%" y="783.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (41 samples, 0.04%)</title><rect x="47.9406%" y="661" width="0.0386%" height="15" fill="rgb(249,7,27)" fg:x="50958" fg:w="41"/><text x="48.1906%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.02%)</title><rect x="48.0253%" y="517" width="0.0160%" height="15" fill="rgb(232,86,5)" fg:x="51048" fg:w="17"/><text x="48.2753%" y="527.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="48.0272%" y="501" width="0.0141%" height="15" fill="rgb(224,175,18)" fg:x="51050" fg:w="15"/><text x="48.2772%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (45 samples, 0.04%)</title><rect x="48.0093%" y="565" width="0.0423%" height="15" fill="rgb(220,129,12)" fg:x="51031" fg:w="45"/><text x="48.2593%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (45 samples, 0.04%)</title><rect x="48.0093%" y="549" width="0.0423%" height="15" fill="rgb(210,19,36)" fg:x="51031" fg:w="45"/><text x="48.2593%" y="559.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (41 samples, 0.04%)</title><rect x="48.0131%" y="533" width="0.0386%" height="15" fill="rgb(219,96,14)" fg:x="51035" fg:w="41"/><text x="48.2631%" y="543.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="48.0413%" y="517" width="0.0103%" height="15" fill="rgb(249,106,1)" fg:x="51065" fg:w="11"/><text x="48.2913%" y="527.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="48.0413%" y="501" width="0.0103%" height="15" fill="rgb(249,155,20)" fg:x="51065" fg:w="11"/><text x="48.2913%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (75 samples, 0.07%)</title><rect x="47.9952%" y="597" width="0.0706%" height="15" fill="rgb(244,168,9)" fg:x="51016" fg:w="75"/><text x="48.2452%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (75 samples, 0.07%)</title><rect x="47.9952%" y="581" width="0.0706%" height="15" fill="rgb(216,23,50)" fg:x="51016" fg:w="75"/><text x="48.2452%" y="591.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="48.0516%" y="565" width="0.0141%" height="15" fill="rgb(224,219,20)" fg:x="51076" fg:w="15"/><text x="48.3016%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (77 samples, 0.07%)</title><rect x="47.9952%" y="629" width="0.0724%" height="15" fill="rgb(222,156,15)" fg:x="51016" fg:w="77"/><text x="48.2452%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (77 samples, 0.07%)</title><rect x="47.9952%" y="613" width="0.0724%" height="15" fill="rgb(231,97,17)" fg:x="51016" fg:w="77"/><text x="48.2452%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (95 samples, 0.09%)</title><rect x="47.9839%" y="645" width="0.0894%" height="15" fill="rgb(218,70,48)" fg:x="51004" fg:w="95"/><text x="48.2339%" y="655.50"></text></g><g><title>rust_dealloc (112 samples, 0.11%)</title><rect x="47.9792%" y="661" width="0.1054%" height="15" fill="rgb(212,196,52)" fg:x="50999" fg:w="112"/><text x="48.2292%" y="671.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="48.0733%" y="645" width="0.0113%" height="15" fill="rgb(243,203,18)" fg:x="51099" fg:w="12"/><text x="48.3233%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (179 samples, 0.17%)</title><rect x="47.9293%" y="709" width="0.1684%" height="15" fill="rgb(252,125,41)" fg:x="50946" fg:w="179"/><text x="48.1793%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (179 samples, 0.17%)</title><rect x="47.9293%" y="693" width="0.1684%" height="15" fill="rgb(223,180,33)" fg:x="50946" fg:w="179"/><text x="48.1793%" y="703.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (179 samples, 0.17%)</title><rect x="47.9293%" y="677" width="0.1684%" height="15" fill="rgb(254,159,46)" fg:x="50946" fg:w="179"/><text x="48.1793%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (14 samples, 0.01%)</title><rect x="48.0846%" y="661" width="0.0132%" height="15" fill="rgb(254,38,10)" fg:x="51111" fg:w="14"/><text x="48.3346%" y="671.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (205 samples, 0.19%)</title><rect x="47.9143%" y="725" width="0.1929%" height="15" fill="rgb(208,217,32)" fg:x="50930" fg:w="205"/><text x="48.1643%" y="735.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (33 samples, 0.03%)</title><rect x="48.1598%" y="581" width="0.0310%" height="15" fill="rgb(221,120,13)" fg:x="51191" fg:w="33"/><text x="48.4098%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (30 samples, 0.03%)</title><rect x="48.1626%" y="565" width="0.0282%" height="15" fill="rgb(246,54,52)" fg:x="51194" fg:w="30"/><text x="48.4126%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (58 samples, 0.05%)</title><rect x="48.1457%" y="629" width="0.0546%" height="15" fill="rgb(242,34,25)" fg:x="51176" fg:w="58"/><text x="48.3957%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (58 samples, 0.05%)</title><rect x="48.1457%" y="613" width="0.0546%" height="15" fill="rgb(247,209,9)" fg:x="51176" fg:w="58"/><text x="48.3957%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (57 samples, 0.05%)</title><rect x="48.1466%" y="597" width="0.0536%" height="15" fill="rgb(228,71,26)" fg:x="51177" fg:w="57"/><text x="48.3966%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (85 samples, 0.08%)</title><rect x="48.1241%" y="693" width="0.0800%" height="15" fill="rgb(222,145,49)" fg:x="51153" fg:w="85"/><text x="48.3741%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (85 samples, 0.08%)</title><rect x="48.1241%" y="677" width="0.0800%" height="15" fill="rgb(218,121,17)" fg:x="51153" fg:w="85"/><text x="48.3741%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (85 samples, 0.08%)</title><rect x="48.1241%" y="661" width="0.0800%" height="15" fill="rgb(244,50,7)" fg:x="51153" fg:w="85"/><text x="48.3741%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (85 samples, 0.08%)</title><rect x="48.1241%" y="645" width="0.0800%" height="15" fill="rgb(246,229,37)" fg:x="51153" fg:w="85"/><text x="48.3741%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (101 samples, 0.10%)</title><rect x="48.1109%" y="709" width="0.0950%" height="15" fill="rgb(225,18,5)" fg:x="51139" fg:w="101"/><text x="48.3609%" y="719.50"></text></g><g><title>rust_dealloc (107 samples, 0.10%)</title><rect x="48.1071%" y="725" width="0.1007%" height="15" fill="rgb(213,204,8)" fg:x="51135" fg:w="107"/><text x="48.3571%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (365 samples, 0.34%)</title><rect x="47.8682%" y="773" width="0.3434%" height="15" fill="rgb(238,103,6)" fg:x="50881" fg:w="365"/><text x="48.1182%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (353 samples, 0.33%)</title><rect x="47.8795%" y="757" width="0.3321%" height="15" fill="rgb(222,25,35)" fg:x="50893" fg:w="353"/><text x="48.1295%" y="767.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (353 samples, 0.33%)</title><rect x="47.8795%" y="741" width="0.3321%" height="15" fill="rgb(213,203,35)" fg:x="50893" fg:w="353"/><text x="48.1295%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (55 samples, 0.05%)</title><rect x="48.2802%" y="709" width="0.0517%" height="15" fill="rgb(221,79,53)" fg:x="51319" fg:w="55"/><text x="48.5302%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (55 samples, 0.05%)</title><rect x="48.2802%" y="693" width="0.0517%" height="15" fill="rgb(243,200,35)" fg:x="51319" fg:w="55"/><text x="48.5302%" y="703.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (54 samples, 0.05%)</title><rect x="48.2812%" y="677" width="0.0508%" height="15" fill="rgb(248,60,25)" fg:x="51320" fg:w="54"/><text x="48.5312%" y="687.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (54 samples, 0.05%)</title><rect x="48.2812%" y="661" width="0.0508%" height="15" fill="rgb(227,53,46)" fg:x="51320" fg:w="54"/><text x="48.5312%" y="671.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (54 samples, 0.05%)</title><rect x="48.2812%" y="645" width="0.0508%" height="15" fill="rgb(216,120,32)" fg:x="51320" fg:w="54"/><text x="48.5312%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (33 samples, 0.03%)</title><rect x="48.3009%" y="629" width="0.0310%" height="15" fill="rgb(220,134,1)" fg:x="51341" fg:w="33"/><text x="48.5509%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (113 samples, 0.11%)</title><rect x="48.2454%" y="741" width="0.1063%" height="15" fill="rgb(237,168,5)" fg:x="51282" fg:w="113"/><text x="48.4954%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (113 samples, 0.11%)</title><rect x="48.2454%" y="725" width="0.1063%" height="15" fill="rgb(231,100,33)" fg:x="51282" fg:w="113"/><text x="48.4954%" y="735.50"></text></g><g><title>core::time::Duration::new (21 samples, 0.02%)</title><rect x="48.3320%" y="709" width="0.0198%" height="15" fill="rgb(236,177,47)" fg:x="51374" fg:w="21"/><text x="48.5820%" y="719.50"></text></g><g><title>std::time::SystemTime::duration_since (125 samples, 0.12%)</title><rect x="48.2454%" y="757" width="0.1176%" height="15" fill="rgb(235,7,49)" fg:x="51282" fg:w="125"/><text x="48.4954%" y="767.50"></text></g><g><title>tremor_common::time::nanotime (12 samples, 0.01%)</title><rect x="48.3517%" y="741" width="0.0113%" height="15" fill="rgb(232,119,22)" fg:x="51395" fg:w="12"/><text x="48.6017%" y="751.50"></text></g><g><title>tremor_common::time::nanotime (716 samples, 0.67%)</title><rect x="48.2116%" y="773" width="0.6736%" height="15" fill="rgb(254,73,53)" fg:x="51246" fg:w="716"/><text x="48.4616%" y="783.50"></text></g><g><title>std::time::SystemTime::now (555 samples, 0.52%)</title><rect x="48.3630%" y="757" width="0.5221%" height="15" fill="rgb(251,35,20)" fg:x="51407" fg:w="555"/><text x="48.6130%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (555 samples, 0.52%)</title><rect x="48.3630%" y="741" width="0.5221%" height="15" fill="rgb(241,119,20)" fg:x="51407" fg:w="555"/><text x="48.6130%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (555 samples, 0.52%)</title><rect x="48.3630%" y="725" width="0.5221%" height="15" fill="rgb(207,102,14)" fg:x="51407" fg:w="555"/><text x="48.6130%" y="735.50"></text></g><g><title>__clock_gettime_2 (462 samples, 0.43%)</title><rect x="48.4505%" y="709" width="0.4346%" height="15" fill="rgb(248,201,50)" fg:x="51500" fg:w="462"/><text x="48.7005%" y="719.50"></text></g><g><title>__vdso_clock_gettime (417 samples, 0.39%)</title><rect x="48.4929%" y="693" width="0.3923%" height="15" fill="rgb(222,185,44)" fg:x="51545" fg:w="417"/><text x="48.7429%" y="703.50"></text></g><g><title>[[vdso]] (243 samples, 0.23%)</title><rect x="48.6566%" y="677" width="0.2286%" height="15" fill="rgb(218,107,18)" fg:x="51719" fg:w="243"/><text x="48.9066%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,823 samples, 3.60%)</title><rect x="45.3252%" y="789" width="3.5966%" height="15" fill="rgb(237,177,39)" fg:x="48178" fg:w="3823"/><text x="45.5752%" y="799.50">trem..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (39 samples, 0.04%)</title><rect x="48.8852%" y="773" width="0.0367%" height="15" fill="rgb(246,69,6)" fg:x="51962" fg:w="39"/><text x="49.1352%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,307 samples, 5.93%)</title><rect x="43.0391%" y="805" width="5.9335%" height="15" fill="rgb(234,208,37)" fg:x="45748" fg:w="6307"/><text x="43.2891%" y="815.50">&lt;core::f..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (54 samples, 0.05%)</title><rect x="48.9219%" y="789" width="0.0508%" height="15" fill="rgb(225,4,6)" fg:x="52001" fg:w="54"/><text x="49.1719%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.02%)</title><rect x="48.9727%" y="805" width="0.0188%" height="15" fill="rgb(233,45,0)" fg:x="52055" fg:w="20"/><text x="49.2227%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (740 samples, 0.70%)</title><rect x="48.9915%" y="805" width="0.6962%" height="15" fill="rgb(226,136,5)" fg:x="52075" fg:w="740"/><text x="49.2415%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (31 samples, 0.03%)</title><rect x="49.6905%" y="789" width="0.0292%" height="15" fill="rgb(211,91,47)" fg:x="52818" fg:w="31"/><text x="49.9405%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (37 samples, 0.03%)</title><rect x="49.6905%" y="805" width="0.0348%" height="15" fill="rgb(242,88,51)" fg:x="52818" fg:w="37"/><text x="49.9405%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,551 samples, 7.10%)</title><rect x="42.6496%" y="821" width="7.1039%" height="15" fill="rgb(230,91,28)" fg:x="45334" fg:w="7551"/><text x="42.8996%" y="831.50">tremor_run..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::should_pull_data (30 samples, 0.03%)</title><rect x="49.7253%" y="805" width="0.0282%" height="15" fill="rgb(254,186,29)" fg:x="52855" fg:w="30"/><text x="49.9753%" y="815.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (47 samples, 0.04%)</title><rect x="49.7582%" y="757" width="0.0442%" height="15" fill="rgb(238,6,4)" fg:x="52890" fg:w="47"/><text x="50.0082%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (41 samples, 0.04%)</title><rect x="49.7639%" y="741" width="0.0386%" height="15" fill="rgb(221,151,16)" fg:x="52896" fg:w="41"/><text x="50.0139%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (41 samples, 0.04%)</title><rect x="49.7639%" y="725" width="0.0386%" height="15" fill="rgb(251,143,52)" fg:x="52896" fg:w="41"/><text x="50.0139%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (41 samples, 0.04%)</title><rect x="49.7639%" y="709" width="0.0386%" height="15" fill="rgb(206,90,15)" fg:x="52896" fg:w="41"/><text x="50.0139%" y="719.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (9,646 samples, 9.07%)</title><rect x="40.7285%" y="1109" width="9.0748%" height="15" fill="rgb(218,35,8)" fg:x="43292" fg:w="9646"/><text x="40.9785%" y="1119.50">&lt;futures_lite..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,643 samples, 9.07%)</title><rect x="40.7314%" y="1093" width="9.0720%" height="15" fill="rgb(239,215,6)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="1103.50">&lt;core::future..</text></g><g><title>async_executor::Executor::run::{{closure}} (9,643 samples, 9.07%)</title><rect x="40.7314%" y="1077" width="9.0720%" height="15" fill="rgb(245,116,39)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="1087.50">async_executo..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (9,643 samples, 9.07%)</title><rect x="40.7314%" y="1061" width="9.0720%" height="15" fill="rgb(242,65,28)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="1071.50">&lt;futures_lite..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,643 samples, 9.07%)</title><rect x="40.7314%" y="1045" width="9.0720%" height="15" fill="rgb(252,132,53)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="1055.50">&lt;core::future..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (9,643 samples, 9.07%)</title><rect x="40.7314%" y="1029" width="9.0720%" height="15" fill="rgb(224,159,50)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="1039.50">async_executo..</text></g><g><title>async_task::runnable::Runnable::run (9,643 samples, 9.07%)</title><rect x="40.7314%" y="1013" width="9.0720%" height="15" fill="rgb(224,93,4)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="1023.50">async_task::r..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,643 samples, 9.07%)</title><rect x="40.7314%" y="997" width="9.0720%" height="15" fill="rgb(208,81,34)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="1007.50">async_task::r..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9,643 samples, 9.07%)</title><rect x="40.7314%" y="981" width="9.0720%" height="15" fill="rgb(233,92,54)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="991.50">&lt;core::pin::P..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,643 samples, 9.07%)</title><rect x="40.7314%" y="965" width="9.0720%" height="15" fill="rgb(237,21,14)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="975.50">&lt;core::future..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (9,643 samples, 9.07%)</title><rect x="40.7314%" y="949" width="9.0720%" height="15" fill="rgb(249,128,51)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="959.50">async_executo..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (9,643 samples, 9.07%)</title><rect x="40.7314%" y="933" width="9.0720%" height="15" fill="rgb(223,129,24)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="943.50">&lt;async_std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (9,643 samples, 9.07%)</title><rect x="40.7314%" y="917" width="9.0720%" height="15" fill="rgb(231,168,25)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="927.50">async_std::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,643 samples, 9.07%)</title><rect x="40.7314%" y="901" width="9.0720%" height="15" fill="rgb(224,39,20)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="911.50">std::thread::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,643 samples, 9.07%)</title><rect x="40.7314%" y="885" width="9.0720%" height="15" fill="rgb(225,152,53)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="895.50">std::thread::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (9,643 samples, 9.07%)</title><rect x="40.7314%" y="869" width="9.0720%" height="15" fill="rgb(252,17,24)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="879.50">async_std::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,643 samples, 9.07%)</title><rect x="40.7314%" y="853" width="9.0720%" height="15" fill="rgb(250,114,30)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="863.50">&lt;async_std::t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,643 samples, 9.07%)</title><rect x="40.7314%" y="837" width="9.0720%" height="15" fill="rgb(229,5,4)" fg:x="43295" fg:w="9643"/><text x="40.9814%" y="847.50">&lt;core::future..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (53 samples, 0.05%)</title><rect x="49.7535%" y="821" width="0.0499%" height="15" fill="rgb(225,176,49)" fg:x="52885" fg:w="53"/><text x="50.0035%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (53 samples, 0.05%)</title><rect x="49.7535%" y="805" width="0.0499%" height="15" fill="rgb(224,221,49)" fg:x="52885" fg:w="53"/><text x="50.0035%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (53 samples, 0.05%)</title><rect x="49.7535%" y="789" width="0.0499%" height="15" fill="rgb(253,169,27)" fg:x="52885" fg:w="53"/><text x="50.0035%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (53 samples, 0.05%)</title><rect x="49.7535%" y="773" width="0.0499%" height="15" fill="rgb(211,206,16)" fg:x="52885" fg:w="53"/><text x="50.0035%" y="783.50"></text></g><g><title>async_io::driver::block_on (9,649 samples, 9.08%)</title><rect x="40.7276%" y="1125" width="9.0777%" height="15" fill="rgb(244,87,35)" fg:x="43291" fg:w="9649"/><text x="40.9776%" y="1135.50">async_io::dri..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (16 samples, 0.02%)</title><rect x="49.9464%" y="437" width="0.0151%" height="15" fill="rgb(246,28,10)" fg:x="53090" fg:w="16"/><text x="50.1964%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="49.9868%" y="389" width="0.0132%" height="15" fill="rgb(229,12,44)" fg:x="53133" fg:w="14"/><text x="50.2368%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (22 samples, 0.02%)</title><rect x="50.0000%" y="389" width="0.0207%" height="15" fill="rgb(210,145,37)" fg:x="53147" fg:w="22"/><text x="50.2500%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (13 samples, 0.01%)</title><rect x="50.0085%" y="373" width="0.0122%" height="15" fill="rgb(227,112,52)" fg:x="53156" fg:w="13"/><text x="50.2585%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (13 samples, 0.01%)</title><rect x="50.0085%" y="357" width="0.0122%" height="15" fill="rgb(238,155,34)" fg:x="53156" fg:w="13"/><text x="50.2585%" y="367.50"></text></g><g><title>core::ptr::write (12 samples, 0.01%)</title><rect x="50.0094%" y="341" width="0.0113%" height="15" fill="rgb(239,226,36)" fg:x="53157" fg:w="12"/><text x="50.2594%" y="351.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="50.0724%" y="85" width="0.0113%" height="15" fill="rgb(230,16,23)" fg:x="53224" fg:w="12"/><text x="50.3224%" y="95.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="50.0724%" y="69" width="0.0113%" height="15" fill="rgb(236,171,36)" fg:x="53224" fg:w="12"/><text x="50.3224%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (41 samples, 0.04%)</title><rect x="50.0508%" y="133" width="0.0386%" height="15" fill="rgb(221,22,14)" fg:x="53201" fg:w="41"/><text x="50.3008%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (41 samples, 0.04%)</title><rect x="50.0508%" y="117" width="0.0386%" height="15" fill="rgb(242,43,11)" fg:x="53201" fg:w="41"/><text x="50.3008%" y="127.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (41 samples, 0.04%)</title><rect x="50.0508%" y="101" width="0.0386%" height="15" fill="rgb(232,69,23)" fg:x="53201" fg:w="41"/><text x="50.3008%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (58 samples, 0.05%)</title><rect x="50.0433%" y="165" width="0.0546%" height="15" fill="rgb(216,180,54)" fg:x="53193" fg:w="58"/><text x="50.2933%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (58 samples, 0.05%)</title><rect x="50.0433%" y="149" width="0.0546%" height="15" fill="rgb(216,5,24)" fg:x="53193" fg:w="58"/><text x="50.2933%" y="159.50"></text></g><g><title>rust_dealloc (69 samples, 0.06%)</title><rect x="50.0367%" y="229" width="0.0649%" height="15" fill="rgb(225,89,9)" fg:x="53186" fg:w="69"/><text x="50.2867%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (65 samples, 0.06%)</title><rect x="50.0405%" y="213" width="0.0612%" height="15" fill="rgb(243,75,33)" fg:x="53190" fg:w="65"/><text x="50.2905%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (62 samples, 0.06%)</title><rect x="50.0433%" y="197" width="0.0583%" height="15" fill="rgb(247,141,45)" fg:x="53193" fg:w="62"/><text x="50.2933%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (62 samples, 0.06%)</title><rect x="50.0433%" y="181" width="0.0583%" height="15" fill="rgb(232,177,36)" fg:x="53193" fg:w="62"/><text x="50.2933%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (84 samples, 0.08%)</title><rect x="50.0235%" y="357" width="0.0790%" height="15" fill="rgb(219,125,36)" fg:x="53172" fg:w="84"/><text x="50.2735%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.08%)</title><rect x="50.0235%" y="341" width="0.0790%" height="15" fill="rgb(227,94,9)" fg:x="53172" fg:w="84"/><text x="50.2735%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (84 samples, 0.08%)</title><rect x="50.0235%" y="325" width="0.0790%" height="15" fill="rgb(240,34,52)" fg:x="53172" fg:w="84"/><text x="50.2735%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.08%)</title><rect x="50.0235%" y="309" width="0.0790%" height="15" fill="rgb(216,45,12)" fg:x="53172" fg:w="84"/><text x="50.2735%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (84 samples, 0.08%)</title><rect x="50.0235%" y="293" width="0.0790%" height="15" fill="rgb(246,21,19)" fg:x="53172" fg:w="84"/><text x="50.2735%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (81 samples, 0.08%)</title><rect x="50.0263%" y="277" width="0.0762%" height="15" fill="rgb(213,98,42)" fg:x="53175" fg:w="81"/><text x="50.2763%" y="287.50"></text></g><g><title>__rg_dealloc (81 samples, 0.08%)</title><rect x="50.0263%" y="261" width="0.0762%" height="15" fill="rgb(250,136,47)" fg:x="53175" fg:w="81"/><text x="50.2763%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (81 samples, 0.08%)</title><rect x="50.0263%" y="245" width="0.0762%" height="15" fill="rgb(251,124,27)" fg:x="53175" fg:w="81"/><text x="50.2763%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (153 samples, 0.14%)</title><rect x="49.9652%" y="437" width="0.1439%" height="15" fill="rgb(229,180,14)" fg:x="53110" fg:w="153"/><text x="50.2152%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (138 samples, 0.13%)</title><rect x="49.9793%" y="421" width="0.1298%" height="15" fill="rgb(245,216,25)" fg:x="53125" fg:w="138"/><text x="50.2293%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (130 samples, 0.12%)</title><rect x="49.9868%" y="405" width="0.1223%" height="15" fill="rgb(251,43,5)" fg:x="53133" fg:w="130"/><text x="50.2368%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (94 samples, 0.09%)</title><rect x="50.0207%" y="389" width="0.0884%" height="15" fill="rgb(250,128,24)" fg:x="53169" fg:w="94"/><text x="50.2707%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.09%)</title><rect x="50.0207%" y="373" width="0.0884%" height="15" fill="rgb(217,117,27)" fg:x="53169" fg:w="94"/><text x="50.2707%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (181 samples, 0.17%)</title><rect x="49.9464%" y="453" width="0.1703%" height="15" fill="rgb(245,147,4)" fg:x="53090" fg:w="181"/><text x="50.1964%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (94 samples, 0.09%)</title><rect x="50.1167%" y="453" width="0.0884%" height="15" fill="rgb(242,201,35)" fg:x="53271" fg:w="94"/><text x="50.3667%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (64 samples, 0.06%)</title><rect x="50.1449%" y="437" width="0.0602%" height="15" fill="rgb(218,181,1)" fg:x="53301" fg:w="64"/><text x="50.3949%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (64 samples, 0.06%)</title><rect x="50.1449%" y="421" width="0.0602%" height="15" fill="rgb(222,6,29)" fg:x="53301" fg:w="64"/><text x="50.3949%" y="431.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="50.2277%" y="261" width="0.0113%" height="15" fill="rgb(208,186,3)" fg:x="53389" fg:w="12"/><text x="50.4777%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="50.2568%" y="245" width="0.0113%" height="15" fill="rgb(216,36,26)" fg:x="53420" fg:w="12"/><text x="50.5068%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (12 samples, 0.01%)</title><rect x="50.2568%" y="229" width="0.0113%" height="15" fill="rgb(248,201,23)" fg:x="53420" fg:w="12"/><text x="50.5068%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::empty (43 samples, 0.04%)</title><rect x="50.2691%" y="245" width="0.0405%" height="15" fill="rgb(251,170,31)" fg:x="53433" fg:w="43"/><text x="50.5191%" y="255.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (43 samples, 0.04%)</title><rect x="50.2691%" y="229" width="0.0405%" height="15" fill="rgb(207,110,25)" fg:x="53433" fg:w="43"/><text x="50.5191%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (404 samples, 0.38%)</title><rect x="50.2277%" y="293" width="0.3801%" height="15" fill="rgb(250,54,15)" fg:x="53389" fg:w="404"/><text x="50.4777%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (404 samples, 0.38%)</title><rect x="50.2277%" y="277" width="0.3801%" height="15" fill="rgb(227,68,33)" fg:x="53389" fg:w="404"/><text x="50.4777%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (383 samples, 0.36%)</title><rect x="50.2474%" y="261" width="0.3603%" height="15" fill="rgb(238,34,41)" fg:x="53410" fg:w="383"/><text x="50.4974%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::take (317 samples, 0.30%)</title><rect x="50.3095%" y="245" width="0.2982%" height="15" fill="rgb(220,11,15)" fg:x="53476" fg:w="317"/><text x="50.5595%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (317 samples, 0.30%)</title><rect x="50.3095%" y="229" width="0.2982%" height="15" fill="rgb(246,111,35)" fg:x="53476" fg:w="317"/><text x="50.5595%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (427 samples, 0.40%)</title><rect x="50.2098%" y="389" width="0.4017%" height="15" fill="rgb(209,88,53)" fg:x="53370" fg:w="427"/><text x="50.4598%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (427 samples, 0.40%)</title><rect x="50.2098%" y="373" width="0.4017%" height="15" fill="rgb(231,185,47)" fg:x="53370" fg:w="427"/><text x="50.4598%" y="383.50"></text></g><g><title>alloc::alloc::alloc (420 samples, 0.40%)</title><rect x="50.2164%" y="357" width="0.3951%" height="15" fill="rgb(233,154,1)" fg:x="53377" fg:w="420"/><text x="50.4664%" y="367.50"></text></g><g><title>__rg_alloc (420 samples, 0.40%)</title><rect x="50.2164%" y="341" width="0.3951%" height="15" fill="rgb(225,15,46)" fg:x="53377" fg:w="420"/><text x="50.4664%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (420 samples, 0.40%)</title><rect x="50.2164%" y="325" width="0.3951%" height="15" fill="rgb(211,135,41)" fg:x="53377" fg:w="420"/><text x="50.4664%" y="335.50"></text></g><g><title>rust_alloc (413 samples, 0.39%)</title><rect x="50.2230%" y="309" width="0.3885%" height="15" fill="rgb(208,54,0)" fg:x="53384" fg:w="413"/><text x="50.4730%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (436 samples, 0.41%)</title><rect x="50.2098%" y="405" width="0.4102%" height="15" fill="rgb(244,136,14)" fg:x="53370" fg:w="436"/><text x="50.4598%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (868 samples, 0.82%)</title><rect x="49.8081%" y="597" width="0.8166%" height="15" fill="rgb(241,56,14)" fg:x="52943" fg:w="868"/><text x="50.0581%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (868 samples, 0.82%)</title><rect x="49.8081%" y="581" width="0.8166%" height="15" fill="rgb(205,80,24)" fg:x="52943" fg:w="868"/><text x="50.0581%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (868 samples, 0.82%)</title><rect x="49.8081%" y="565" width="0.8166%" height="15" fill="rgb(220,57,4)" fg:x="52943" fg:w="868"/><text x="50.0581%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (868 samples, 0.82%)</title><rect x="49.8081%" y="549" width="0.8166%" height="15" fill="rgb(226,193,50)" fg:x="52943" fg:w="868"/><text x="50.0581%" y="559.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (868 samples, 0.82%)</title><rect x="49.8081%" y="533" width="0.8166%" height="15" fill="rgb(231,168,22)" fg:x="52943" fg:w="868"/><text x="50.0581%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (868 samples, 0.82%)</title><rect x="49.8081%" y="517" width="0.8166%" height="15" fill="rgb(254,215,14)" fg:x="52943" fg:w="868"/><text x="50.0581%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (868 samples, 0.82%)</title><rect x="49.8081%" y="501" width="0.8166%" height="15" fill="rgb(211,115,16)" fg:x="52943" fg:w="868"/><text x="50.0581%" y="511.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (868 samples, 0.82%)</title><rect x="49.8081%" y="485" width="0.8166%" height="15" fill="rgb(236,210,16)" fg:x="52943" fg:w="868"/><text x="50.0581%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (722 samples, 0.68%)</title><rect x="49.9454%" y="469" width="0.6792%" height="15" fill="rgb(221,94,12)" fg:x="53089" fg:w="722"/><text x="50.1954%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (446 samples, 0.42%)</title><rect x="50.2051%" y="453" width="0.4196%" height="15" fill="rgb(235,218,49)" fg:x="53365" fg:w="446"/><text x="50.4551%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (446 samples, 0.42%)</title><rect x="50.2051%" y="437" width="0.4196%" height="15" fill="rgb(217,114,14)" fg:x="53365" fg:w="446"/><text x="50.4551%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (441 samples, 0.41%)</title><rect x="50.2098%" y="421" width="0.4149%" height="15" fill="rgb(216,145,22)" fg:x="53370" fg:w="441"/><text x="50.4598%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (860 samples, 0.81%)</title><rect x="50.6633%" y="565" width="0.8091%" height="15" fill="rgb(217,112,39)" fg:x="53852" fg:w="860"/><text x="50.9133%" y="575.50"></text></g><g><title>aligned_size (22 samples, 0.02%)</title><rect x="51.4723%" y="549" width="0.0207%" height="15" fill="rgb(225,85,32)" fg:x="54712" fg:w="22"/><text x="51.7223%" y="559.50"></text></g><g><title>rust_alloc (18 samples, 0.02%)</title><rect x="51.4940%" y="517" width="0.0169%" height="15" fill="rgb(245,209,47)" fg:x="54735" fg:w="18"/><text x="51.7440%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (19 samples, 0.02%)</title><rect x="51.5213%" y="469" width="0.0179%" height="15" fill="rgb(218,220,15)" fg:x="54764" fg:w="19"/><text x="51.7713%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (126 samples, 0.12%)</title><rect x="51.5213%" y="501" width="0.1185%" height="15" fill="rgb(222,202,31)" fg:x="54764" fg:w="126"/><text x="51.7713%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (126 samples, 0.12%)</title><rect x="51.5213%" y="485" width="0.1185%" height="15" fill="rgb(243,203,4)" fg:x="54764" fg:w="126"/><text x="51.7713%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (107 samples, 0.10%)</title><rect x="51.5391%" y="469" width="0.1007%" height="15" fill="rgb(237,92,17)" fg:x="54783" fg:w="107"/><text x="51.7891%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (93 samples, 0.09%)</title><rect x="51.5523%" y="453" width="0.0875%" height="15" fill="rgb(231,119,7)" fg:x="54797" fg:w="93"/><text x="51.8023%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (93 samples, 0.09%)</title><rect x="51.5523%" y="437" width="0.0875%" height="15" fill="rgb(237,82,41)" fg:x="54797" fg:w="93"/><text x="51.8023%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (93 samples, 0.09%)</title><rect x="51.5523%" y="421" width="0.0875%" height="15" fill="rgb(226,81,48)" fg:x="54797" fg:w="93"/><text x="51.8023%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (17 samples, 0.02%)</title><rect x="51.6464%" y="469" width="0.0160%" height="15" fill="rgb(234,70,51)" fg:x="54897" fg:w="17"/><text x="51.8964%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (17 samples, 0.02%)</title><rect x="51.6464%" y="453" width="0.0160%" height="15" fill="rgb(251,86,4)" fg:x="54897" fg:w="17"/><text x="51.8964%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="51.6464%" y="437" width="0.0160%" height="15" fill="rgb(244,144,28)" fg:x="54897" fg:w="17"/><text x="51.8964%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (16 samples, 0.02%)</title><rect x="51.6624%" y="469" width="0.0151%" height="15" fill="rgb(232,161,39)" fg:x="54914" fg:w="16"/><text x="51.9124%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (16 samples, 0.02%)</title><rect x="51.6624%" y="453" width="0.0151%" height="15" fill="rgb(247,34,51)" fg:x="54914" fg:w="16"/><text x="51.9124%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="51.6398%" y="501" width="0.0395%" height="15" fill="rgb(225,132,2)" fg:x="54890" fg:w="42"/><text x="51.8898%" y="511.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (37 samples, 0.03%)</title><rect x="51.6445%" y="485" width="0.0348%" height="15" fill="rgb(209,159,44)" fg:x="54895" fg:w="37"/><text x="51.8945%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (25 samples, 0.02%)</title><rect x="51.6878%" y="453" width="0.0235%" height="15" fill="rgb(251,214,1)" fg:x="54941" fg:w="25"/><text x="51.9378%" y="463.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (18 samples, 0.02%)</title><rect x="51.6944%" y="437" width="0.0169%" height="15" fill="rgb(247,84,47)" fg:x="54948" fg:w="18"/><text x="51.9444%" y="447.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (13 samples, 0.01%)</title><rect x="51.6991%" y="421" width="0.0122%" height="15" fill="rgb(240,111,43)" fg:x="54953" fg:w="13"/><text x="51.9491%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="51.6793%" y="501" width="0.0442%" height="15" fill="rgb(215,214,35)" fg:x="54932" fg:w="47"/><text x="51.9293%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="51.6821%" y="485" width="0.0414%" height="15" fill="rgb(248,207,23)" fg:x="54935" fg:w="44"/><text x="51.9321%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="51.6849%" y="469" width="0.0386%" height="15" fill="rgb(214,186,4)" fg:x="54938" fg:w="41"/><text x="51.9349%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="51.7113%" y="453" width="0.0122%" height="15" fill="rgb(220,133,22)" fg:x="54966" fg:w="13"/><text x="51.9613%" y="463.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (12 samples, 0.01%)</title><rect x="51.7122%" y="437" width="0.0113%" height="15" fill="rgb(239,134,19)" fg:x="54967" fg:w="12"/><text x="51.9622%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::empty (16 samples, 0.02%)</title><rect x="51.7235%" y="501" width="0.0151%" height="15" fill="rgb(250,140,9)" fg:x="54979" fg:w="16"/><text x="51.9735%" y="511.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (16 samples, 0.02%)</title><rect x="51.7235%" y="485" width="0.0151%" height="15" fill="rgb(225,59,14)" fg:x="54979" fg:w="16"/><text x="51.9735%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (448 samples, 0.42%)</title><rect x="51.4930%" y="549" width="0.4215%" height="15" fill="rgb(214,152,51)" fg:x="54734" fg:w="448"/><text x="51.7430%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (447 samples, 0.42%)</title><rect x="51.4940%" y="533" width="0.4205%" height="15" fill="rgb(251,227,43)" fg:x="54735" fg:w="447"/><text x="51.7440%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (427 samples, 0.40%)</title><rect x="51.5128%" y="517" width="0.4017%" height="15" fill="rgb(241,96,17)" fg:x="54755" fg:w="427"/><text x="51.7628%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (187 samples, 0.18%)</title><rect x="51.7386%" y="501" width="0.1759%" height="15" fill="rgb(234,198,43)" fg:x="54995" fg:w="187"/><text x="51.9886%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (187 samples, 0.18%)</title><rect x="51.7386%" y="485" width="0.1759%" height="15" fill="rgb(220,108,29)" fg:x="54995" fg:w="187"/><text x="51.9886%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,241 samples, 2.11%)</title><rect x="49.8071%" y="949" width="2.1083%" height="15" fill="rgb(226,163,33)" fg:x="52942" fg:w="2241"/><text x="50.0571%" y="959.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,240 samples, 2.11%)</title><rect x="49.8081%" y="933" width="2.1074%" height="15" fill="rgb(205,194,45)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="943.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (2,240 samples, 2.11%)</title><rect x="49.8081%" y="917" width="2.1074%" height="15" fill="rgb(206,143,44)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="927.50">t..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,240 samples, 2.11%)</title><rect x="49.8081%" y="901" width="2.1074%" height="15" fill="rgb(236,136,36)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="911.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,240 samples, 2.11%)</title><rect x="49.8081%" y="885" width="2.1074%" height="15" fill="rgb(249,172,42)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="895.50">&lt;..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (2,240 samples, 2.11%)</title><rect x="49.8081%" y="869" width="2.1074%" height="15" fill="rgb(216,139,23)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="879.50">&lt;..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,240 samples, 2.11%)</title><rect x="49.8081%" y="853" width="2.1074%" height="15" fill="rgb(207,166,20)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="863.50">&lt;..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (2,240 samples, 2.11%)</title><rect x="49.8081%" y="837" width="2.1074%" height="15" fill="rgb(210,209,22)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="847.50">a..</text></g><g><title>std::panic::catch_unwind (2,240 samples, 2.11%)</title><rect x="49.8081%" y="821" width="2.1074%" height="15" fill="rgb(232,118,20)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="831.50">s..</text></g><g><title>std::panicking::try (2,240 samples, 2.11%)</title><rect x="49.8081%" y="805" width="2.1074%" height="15" fill="rgb(238,113,42)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="815.50">s..</text></g><g><title>std::panicking::try::do_call (2,240 samples, 2.11%)</title><rect x="49.8081%" y="789" width="2.1074%" height="15" fill="rgb(231,42,5)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="799.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,240 samples, 2.11%)</title><rect x="49.8081%" y="773" width="2.1074%" height="15" fill="rgb(243,166,24)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="783.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once (2,240 samples, 2.11%)</title><rect x="49.8081%" y="757" width="2.1074%" height="15" fill="rgb(237,226,12)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="767.50">c..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (2,240 samples, 2.11%)</title><rect x="49.8081%" y="741" width="2.1074%" height="15" fill="rgb(229,133,24)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="751.50">a..</text></g><g><title>async_ffi::FfiContext::with_context (2,240 samples, 2.11%)</title><rect x="49.8081%" y="725" width="2.1074%" height="15" fill="rgb(238,33,43)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="735.50">a..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (2,240 samples, 2.11%)</title><rect x="49.8081%" y="709" width="2.1074%" height="15" fill="rgb(227,59,38)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="719.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,240 samples, 2.11%)</title><rect x="49.8081%" y="693" width="2.1074%" height="15" fill="rgb(230,97,0)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="703.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (2,240 samples, 2.11%)</title><rect x="49.8081%" y="677" width="2.1074%" height="15" fill="rgb(250,173,50)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="687.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (2,240 samples, 2.11%)</title><rect x="49.8081%" y="661" width="2.1074%" height="15" fill="rgb(240,15,50)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="671.50">t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (2,240 samples, 2.11%)</title><rect x="49.8081%" y="645" width="2.1074%" height="15" fill="rgb(221,93,22)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="655.50">t..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (2,240 samples, 2.11%)</title><rect x="49.8081%" y="629" width="2.1074%" height="15" fill="rgb(245,180,53)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="639.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (2,240 samples, 2.11%)</title><rect x="49.8081%" y="613" width="2.1074%" height="15" fill="rgb(231,88,51)" fg:x="52943" fg:w="2240"/><text x="50.0581%" y="623.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,372 samples, 1.29%)</title><rect x="50.6247%" y="597" width="1.2908%" height="15" fill="rgb(240,58,21)" fg:x="53811" fg:w="1372"/><text x="50.8747%" y="607.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (1,372 samples, 1.29%)</title><rect x="50.6247%" y="581" width="1.2908%" height="15" fill="rgb(237,21,10)" fg:x="53811" fg:w="1372"/><text x="50.8747%" y="591.50"></text></g><g><title>rust_alloc (471 samples, 0.44%)</title><rect x="51.4723%" y="565" width="0.4431%" height="15" fill="rgb(218,43,11)" fg:x="54712" fg:w="471"/><text x="51.7223%" y="575.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (245 samples, 0.23%)</title><rect x="51.9286%" y="789" width="0.2305%" height="15" fill="rgb(218,221,29)" fg:x="55197" fg:w="245"/><text x="52.1786%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (217 samples, 0.20%)</title><rect x="51.9550%" y="773" width="0.2042%" height="15" fill="rgb(214,118,42)" fg:x="55225" fg:w="217"/><text x="52.2050%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (256 samples, 0.24%)</title><rect x="51.9286%" y="821" width="0.2408%" height="15" fill="rgb(251,200,26)" fg:x="55197" fg:w="256"/><text x="52.1786%" y="831.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (256 samples, 0.24%)</title><rect x="51.9286%" y="805" width="0.2408%" height="15" fill="rgb(237,101,39)" fg:x="55197" fg:w="256"/><text x="52.1786%" y="815.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (11 samples, 0.01%)</title><rect x="52.1591%" y="789" width="0.0103%" height="15" fill="rgb(251,117,11)" fg:x="55442" fg:w="11"/><text x="52.4091%" y="799.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="54.3295%" y="357" width="0.0103%" height="15" fill="rgb(216,223,23)" fg:x="57749" fg:w="11"/><text x="54.5795%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::empty (39 samples, 0.04%)</title><rect x="54.3549%" y="341" width="0.0367%" height="15" fill="rgb(251,54,12)" fg:x="57776" fg:w="39"/><text x="54.6049%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (39 samples, 0.04%)</title><rect x="54.3549%" y="325" width="0.0367%" height="15" fill="rgb(254,176,54)" fg:x="57776" fg:w="39"/><text x="54.6049%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (611 samples, 0.57%)</title><rect x="54.3182%" y="389" width="0.5748%" height="15" fill="rgb(210,32,8)" fg:x="57737" fg:w="611"/><text x="54.5682%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (603 samples, 0.57%)</title><rect x="54.3257%" y="373" width="0.5673%" height="15" fill="rgb(235,52,38)" fg:x="57745" fg:w="603"/><text x="54.5757%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (588 samples, 0.55%)</title><rect x="54.3398%" y="357" width="0.5532%" height="15" fill="rgb(231,4,44)" fg:x="57760" fg:w="588"/><text x="54.5898%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (533 samples, 0.50%)</title><rect x="54.3916%" y="341" width="0.5014%" height="15" fill="rgb(249,2,32)" fg:x="57815" fg:w="533"/><text x="54.6416%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (533 samples, 0.50%)</title><rect x="54.3916%" y="325" width="0.5014%" height="15" fill="rgb(224,65,26)" fg:x="57815" fg:w="533"/><text x="54.6416%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (665 samples, 0.63%)</title><rect x="54.2768%" y="533" width="0.6256%" height="15" fill="rgb(250,73,40)" fg:x="57693" fg:w="665"/><text x="54.5268%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (665 samples, 0.63%)</title><rect x="54.2768%" y="517" width="0.6256%" height="15" fill="rgb(253,177,16)" fg:x="57693" fg:w="665"/><text x="54.5268%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (662 samples, 0.62%)</title><rect x="54.2796%" y="501" width="0.6228%" height="15" fill="rgb(217,32,34)" fg:x="57696" fg:w="662"/><text x="54.5296%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (662 samples, 0.62%)</title><rect x="54.2796%" y="485" width="0.6228%" height="15" fill="rgb(212,7,10)" fg:x="57696" fg:w="662"/><text x="54.5296%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (662 samples, 0.62%)</title><rect x="54.2796%" y="469" width="0.6228%" height="15" fill="rgb(245,89,8)" fg:x="57696" fg:w="662"/><text x="54.5296%" y="479.50"></text></g><g><title>alloc::alloc::alloc (655 samples, 0.62%)</title><rect x="54.2862%" y="453" width="0.6162%" height="15" fill="rgb(237,16,53)" fg:x="57703" fg:w="655"/><text x="54.5362%" y="463.50"></text></g><g><title>__rg_alloc (655 samples, 0.62%)</title><rect x="54.2862%" y="437" width="0.6162%" height="15" fill="rgb(250,204,30)" fg:x="57703" fg:w="655"/><text x="54.5362%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (655 samples, 0.62%)</title><rect x="54.2862%" y="421" width="0.6162%" height="15" fill="rgb(208,77,27)" fg:x="57703" fg:w="655"/><text x="54.5362%" y="431.50"></text></g><g><title>rust_alloc (634 samples, 0.60%)</title><rect x="54.3060%" y="405" width="0.5965%" height="15" fill="rgb(250,204,28)" fg:x="57724" fg:w="634"/><text x="54.5560%" y="415.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,366 samples, 1.29%)</title><rect x="53.6625%" y="661" width="1.2851%" height="15" fill="rgb(244,63,21)" fg:x="57040" fg:w="1366"/><text x="53.9125%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (764 samples, 0.72%)</title><rect x="54.2288%" y="645" width="0.7188%" height="15" fill="rgb(236,85,44)" fg:x="57642" fg:w="764"/><text x="54.4788%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (745 samples, 0.70%)</title><rect x="54.2467%" y="629" width="0.7009%" height="15" fill="rgb(215,98,4)" fg:x="57661" fg:w="745"/><text x="54.4967%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (713 samples, 0.67%)</title><rect x="54.2768%" y="613" width="0.6708%" height="15" fill="rgb(235,38,11)" fg:x="57693" fg:w="713"/><text x="54.5268%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (713 samples, 0.67%)</title><rect x="54.2768%" y="597" width="0.6708%" height="15" fill="rgb(254,186,25)" fg:x="57693" fg:w="713"/><text x="54.5268%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (713 samples, 0.67%)</title><rect x="54.2768%" y="581" width="0.6708%" height="15" fill="rgb(225,55,31)" fg:x="57693" fg:w="713"/><text x="54.5268%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (713 samples, 0.67%)</title><rect x="54.2768%" y="565" width="0.6708%" height="15" fill="rgb(211,15,21)" fg:x="57693" fg:w="713"/><text x="54.5268%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (713 samples, 0.67%)</title><rect x="54.2768%" y="549" width="0.6708%" height="15" fill="rgb(215,187,41)" fg:x="57693" fg:w="713"/><text x="54.5268%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (48 samples, 0.05%)</title><rect x="54.9024%" y="533" width="0.0452%" height="15" fill="rgb(248,69,32)" fg:x="58358" fg:w="48"/><text x="55.1524%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (48 samples, 0.05%)</title><rect x="54.9024%" y="517" width="0.0452%" height="15" fill="rgb(252,102,52)" fg:x="58358" fg:w="48"/><text x="55.1524%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (48 samples, 0.05%)</title><rect x="54.9024%" y="501" width="0.0452%" height="15" fill="rgb(253,140,32)" fg:x="58358" fg:w="48"/><text x="55.1524%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (33 samples, 0.03%)</title><rect x="55.0247%" y="629" width="0.0310%" height="15" fill="rgb(216,56,42)" fg:x="58488" fg:w="33"/><text x="55.2747%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (16 samples, 0.02%)</title><rect x="55.0407%" y="613" width="0.0151%" height="15" fill="rgb(216,184,14)" fg:x="58505" fg:w="16"/><text x="55.2907%" y="623.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="55.0708%" y="437" width="0.0122%" height="15" fill="rgb(237,187,27)" fg:x="58537" fg:w="13"/><text x="55.3208%" y="447.50"></text></g><g><title>rust_alloc (34 samples, 0.03%)</title><rect x="55.0840%" y="405" width="0.0320%" height="15" fill="rgb(219,65,3)" fg:x="58551" fg:w="34"/><text x="55.3340%" y="415.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (12 samples, 0.01%)</title><rect x="55.1358%" y="357" width="0.0113%" height="15" fill="rgb(245,83,25)" fg:x="58606" fg:w="12"/><text x="55.3858%" y="367.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (12 samples, 0.01%)</title><rect x="55.1358%" y="341" width="0.0113%" height="15" fill="rgb(214,205,45)" fg:x="58606" fg:w="12"/><text x="55.3858%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="55.1358%" y="325" width="0.0113%" height="15" fill="rgb(241,20,18)" fg:x="58606" fg:w="12"/><text x="55.3858%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::take (16 samples, 0.02%)</title><rect x="55.1470%" y="357" width="0.0151%" height="15" fill="rgb(232,163,23)" fg:x="58618" fg:w="16"/><text x="55.3970%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (16 samples, 0.02%)</title><rect x="55.1470%" y="341" width="0.0151%" height="15" fill="rgb(214,5,46)" fg:x="58618" fg:w="16"/><text x="55.3970%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="55.1301%" y="389" width="0.0348%" height="15" fill="rgb(229,78,17)" fg:x="58600" fg:w="37"/><text x="55.3801%" y="399.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (31 samples, 0.03%)</title><rect x="55.1358%" y="373" width="0.0292%" height="15" fill="rgb(248,89,10)" fg:x="58606" fg:w="31"/><text x="55.3858%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (40 samples, 0.04%)</title><rect x="55.1649%" y="389" width="0.0376%" height="15" fill="rgb(248,54,15)" fg:x="58637" fg:w="40"/><text x="55.4149%" y="399.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (40 samples, 0.04%)</title><rect x="55.1649%" y="373" width="0.0376%" height="15" fill="rgb(223,116,6)" fg:x="58637" fg:w="40"/><text x="55.4149%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (298 samples, 0.28%)</title><rect x="55.0831%" y="437" width="0.2804%" height="15" fill="rgb(205,125,38)" fg:x="58550" fg:w="298"/><text x="55.3331%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (297 samples, 0.28%)</title><rect x="55.0840%" y="421" width="0.2794%" height="15" fill="rgb(251,78,38)" fg:x="58551" fg:w="297"/><text x="55.3340%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (262 samples, 0.25%)</title><rect x="55.1169%" y="405" width="0.2465%" height="15" fill="rgb(253,78,28)" fg:x="58586" fg:w="262"/><text x="55.3669%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (171 samples, 0.16%)</title><rect x="55.2026%" y="389" width="0.1609%" height="15" fill="rgb(209,120,3)" fg:x="58677" fg:w="171"/><text x="55.4526%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (171 samples, 0.16%)</title><rect x="55.2026%" y="373" width="0.1609%" height="15" fill="rgb(238,229,9)" fg:x="58677" fg:w="171"/><text x="55.4526%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (328 samples, 0.31%)</title><rect x="55.0558%" y="581" width="0.3086%" height="15" fill="rgb(253,159,18)" fg:x="58521" fg:w="328"/><text x="55.3058%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (328 samples, 0.31%)</title><rect x="55.0558%" y="565" width="0.3086%" height="15" fill="rgb(244,42,34)" fg:x="58521" fg:w="328"/><text x="55.3058%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (326 samples, 0.31%)</title><rect x="55.0577%" y="549" width="0.3067%" height="15" fill="rgb(224,8,7)" fg:x="58523" fg:w="326"/><text x="55.3077%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (326 samples, 0.31%)</title><rect x="55.0577%" y="533" width="0.3067%" height="15" fill="rgb(210,201,45)" fg:x="58523" fg:w="326"/><text x="55.3077%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (324 samples, 0.30%)</title><rect x="55.0596%" y="517" width="0.3048%" height="15" fill="rgb(252,185,21)" fg:x="58525" fg:w="324"/><text x="55.3096%" y="527.50"></text></g><g><title>alloc::alloc::alloc (324 samples, 0.30%)</title><rect x="55.0596%" y="501" width="0.3048%" height="15" fill="rgb(223,131,1)" fg:x="58525" fg:w="324"/><text x="55.3096%" y="511.50"></text></g><g><title>__rg_alloc (324 samples, 0.30%)</title><rect x="55.0596%" y="485" width="0.3048%" height="15" fill="rgb(245,141,16)" fg:x="58525" fg:w="324"/><text x="55.3096%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (316 samples, 0.30%)</title><rect x="55.0671%" y="469" width="0.2973%" height="15" fill="rgb(229,55,45)" fg:x="58533" fg:w="316"/><text x="55.3171%" y="479.50"></text></g><g><title>rust_alloc (312 samples, 0.29%)</title><rect x="55.0708%" y="453" width="0.2935%" height="15" fill="rgb(208,92,15)" fg:x="58537" fg:w="312"/><text x="55.3208%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (694 samples, 0.65%)</title><rect x="55.0558%" y="597" width="0.6529%" height="15" fill="rgb(234,185,47)" fg:x="58521" fg:w="694"/><text x="55.3058%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (366 samples, 0.34%)</title><rect x="55.3644%" y="581" width="0.3443%" height="15" fill="rgb(253,104,50)" fg:x="58849" fg:w="366"/><text x="55.6144%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (366 samples, 0.34%)</title><rect x="55.3644%" y="565" width="0.3443%" height="15" fill="rgb(205,70,7)" fg:x="58849" fg:w="366"/><text x="55.6144%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (362 samples, 0.34%)</title><rect x="55.3681%" y="549" width="0.3406%" height="15" fill="rgb(240,178,43)" fg:x="58853" fg:w="362"/><text x="55.6181%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (735 samples, 0.69%)</title><rect x="55.0247%" y="645" width="0.6915%" height="15" fill="rgb(214,112,2)" fg:x="58488" fg:w="735"/><text x="55.2747%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (702 samples, 0.66%)</title><rect x="55.0558%" y="629" width="0.6604%" height="15" fill="rgb(206,46,17)" fg:x="58521" fg:w="702"/><text x="55.3058%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (702 samples, 0.66%)</title><rect x="55.0558%" y="613" width="0.6604%" height="15" fill="rgb(225,220,16)" fg:x="58521" fg:w="702"/><text x="55.3058%" y="623.50"></text></g><g><title>async_ffi::FfiContext::with_context (3,782 samples, 3.56%)</title><rect x="52.1704%" y="725" width="3.5581%" height="15" fill="rgb(238,65,40)" fg:x="55454" fg:w="3782"/><text x="52.4204%" y="735.50">asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (3,770 samples, 3.55%)</title><rect x="52.1817%" y="709" width="3.5468%" height="15" fill="rgb(230,151,21)" fg:x="55466" fg:w="3770"/><text x="52.4317%" y="719.50">asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,770 samples, 3.55%)</title><rect x="52.1817%" y="693" width="3.5468%" height="15" fill="rgb(218,58,49)" fg:x="55466" fg:w="3770"/><text x="52.4317%" y="703.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (3,204 samples, 3.01%)</title><rect x="52.7142%" y="677" width="3.0143%" height="15" fill="rgb(219,179,14)" fg:x="56032" fg:w="3204"/><text x="52.9642%" y="687.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (830 samples, 0.78%)</title><rect x="54.9476%" y="661" width="0.7809%" height="15" fill="rgb(223,72,1)" fg:x="58406" fg:w="830"/><text x="55.1976%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="55.7162%" y="645" width="0.0122%" height="15" fill="rgb(238,126,10)" fg:x="59223" fg:w="13"/><text x="55.9662%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.01%)</title><rect x="55.7162%" y="629" width="0.0122%" height="15" fill="rgb(224,206,38)" fg:x="59223" fg:w="13"/><text x="55.9662%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,788 samples, 3.56%)</title><rect x="52.1695%" y="773" width="3.5637%" height="15" fill="rgb(212,201,54)" fg:x="55453" fg:w="3788"/><text x="52.4195%" y="783.50">&lt;cor..</text></g><g><title>core::ops::function::FnOnce::call_once (3,788 samples, 3.56%)</title><rect x="52.1695%" y="757" width="3.5637%" height="15" fill="rgb(218,154,48)" fg:x="55453" fg:w="3788"/><text x="52.4195%" y="767.50">core..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (3,788 samples, 3.56%)</title><rect x="52.1695%" y="741" width="3.5637%" height="15" fill="rgb(232,93,24)" fg:x="55453" fg:w="3788"/><text x="52.4195%" y="751.50">asyn..</text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (4,368 samples, 4.11%)</title><rect x="51.9154%" y="917" width="4.1094%" height="15" fill="rgb(245,30,21)" fg:x="55183" fg:w="4368"/><text x="52.1654%" y="927.50">trem..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,368 samples, 4.11%)</title><rect x="51.9154%" y="901" width="4.1094%" height="15" fill="rgb(242,148,29)" fg:x="55183" fg:w="4368"/><text x="52.1654%" y="911.50">&lt;asy..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,368 samples, 4.11%)</title><rect x="51.9154%" y="885" width="4.1094%" height="15" fill="rgb(244,153,54)" fg:x="55183" fg:w="4368"/><text x="52.1654%" y="895.50">&lt;asy..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (4,368 samples, 4.11%)</title><rect x="51.9154%" y="869" width="4.1094%" height="15" fill="rgb(252,87,22)" fg:x="55183" fg:w="4368"/><text x="52.1654%" y="879.50">&lt;cor..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,368 samples, 4.11%)</title><rect x="51.9154%" y="853" width="4.1094%" height="15" fill="rgb(210,51,29)" fg:x="55183" fg:w="4368"/><text x="52.1654%" y="863.50">&lt;asy..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (4,368 samples, 4.11%)</title><rect x="51.9154%" y="837" width="4.1094%" height="15" fill="rgb(242,136,47)" fg:x="55183" fg:w="4368"/><text x="52.1654%" y="847.50">asyn..</text></g><g><title>std::panic::catch_unwind (4,098 samples, 3.86%)</title><rect x="52.1695%" y="821" width="3.8553%" height="15" fill="rgb(238,68,4)" fg:x="55453" fg:w="4098"/><text x="52.4195%" y="831.50">std:..</text></g><g><title>std::panicking::try (4,098 samples, 3.86%)</title><rect x="52.1695%" y="805" width="3.8553%" height="15" fill="rgb(242,161,30)" fg:x="55453" fg:w="4098"/><text x="52.4195%" y="815.50">std:..</text></g><g><title>std::panicking::try::do_call (4,098 samples, 3.86%)</title><rect x="52.1695%" y="789" width="3.8553%" height="15" fill="rgb(218,58,44)" fg:x="55453" fg:w="4098"/><text x="52.4195%" y="799.50">std:..</text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (310 samples, 0.29%)</title><rect x="55.7332%" y="773" width="0.2916%" height="15" fill="rgb(252,125,32)" fg:x="59241" fg:w="310"/><text x="55.9832%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (131 samples, 0.12%)</title><rect x="55.9016%" y="757" width="0.1232%" height="15" fill="rgb(219,178,0)" fg:x="59420" fg:w="131"/><text x="56.1516%" y="767.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (22 samples, 0.02%)</title><rect x="56.0747%" y="821" width="0.0207%" height="15" fill="rgb(213,152,7)" fg:x="59604" fg:w="22"/><text x="56.3247%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (4,481 samples, 4.22%)</title><rect x="51.9154%" y="949" width="4.2157%" height="15" fill="rgb(249,109,34)" fg:x="55183" fg:w="4481"/><text x="52.1654%" y="959.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,481 samples, 4.22%)</title><rect x="51.9154%" y="933" width="4.2157%" height="15" fill="rgb(232,96,21)" fg:x="55183" fg:w="4481"/><text x="52.1654%" y="943.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (113 samples, 0.11%)</title><rect x="56.0248%" y="917" width="0.1063%" height="15" fill="rgb(228,27,39)" fg:x="59551" fg:w="113"/><text x="56.2748%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (113 samples, 0.11%)</title><rect x="56.0248%" y="901" width="0.1063%" height="15" fill="rgb(211,182,52)" fg:x="59551" fg:w="113"/><text x="56.2748%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (87 samples, 0.08%)</title><rect x="56.0493%" y="885" width="0.0818%" height="15" fill="rgb(234,178,38)" fg:x="59577" fg:w="87"/><text x="56.2993%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (79 samples, 0.07%)</title><rect x="56.0568%" y="869" width="0.0743%" height="15" fill="rgb(221,111,3)" fg:x="59585" fg:w="79"/><text x="56.3068%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (79 samples, 0.07%)</title><rect x="56.0568%" y="853" width="0.0743%" height="15" fill="rgb(228,175,21)" fg:x="59585" fg:w="79"/><text x="56.3068%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (79 samples, 0.07%)</title><rect x="56.0568%" y="837" width="0.0743%" height="15" fill="rgb(228,174,43)" fg:x="59585" fg:w="79"/><text x="56.3068%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (38 samples, 0.04%)</title><rect x="56.0954%" y="821" width="0.0357%" height="15" fill="rgb(211,191,0)" fg:x="59626" fg:w="38"/><text x="56.3454%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="56.1847%" y="917" width="0.0292%" height="15" fill="rgb(253,117,3)" fg:x="59721" fg:w="31"/><text x="56.4347%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (247 samples, 0.23%)</title><rect x="56.2139%" y="917" width="0.2324%" height="15" fill="rgb(241,127,19)" fg:x="59752" fg:w="247"/><text x="56.4639%" y="927.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (22 samples, 0.02%)</title><rect x="56.5902%" y="901" width="0.0207%" height="15" fill="rgb(218,103,12)" fg:x="60152" fg:w="22"/><text x="56.8402%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.03%)</title><rect x="56.6109%" y="885" width="0.0339%" height="15" fill="rgb(236,214,43)" fg:x="60174" fg:w="36"/><text x="56.8609%" y="895.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (12 samples, 0.01%)</title><rect x="56.6335%" y="869" width="0.0113%" height="15" fill="rgb(244,144,19)" fg:x="60198" fg:w="12"/><text x="56.8835%" y="879.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (266 samples, 0.25%)</title><rect x="56.6109%" y="901" width="0.2502%" height="15" fill="rgb(246,188,10)" fg:x="60174" fg:w="266"/><text x="56.8609%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (230 samples, 0.22%)</title><rect x="56.6448%" y="885" width="0.2164%" height="15" fill="rgb(212,193,33)" fg:x="60210" fg:w="230"/><text x="56.8948%" y="895.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (218 samples, 0.21%)</title><rect x="56.6561%" y="869" width="0.2051%" height="15" fill="rgb(241,51,29)" fg:x="60222" fg:w="218"/><text x="56.9061%" y="879.50"></text></g><g><title>core::ptr::read (218 samples, 0.21%)</title><rect x="56.6561%" y="853" width="0.2051%" height="15" fill="rgb(211,58,19)" fg:x="60222" fg:w="218"/><text x="56.9061%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (218 samples, 0.21%)</title><rect x="56.6561%" y="837" width="0.2051%" height="15" fill="rgb(229,111,26)" fg:x="60222" fg:w="218"/><text x="56.9061%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.02%)</title><rect x="56.8687%" y="741" width="0.0151%" height="15" fill="rgb(213,115,40)" fg:x="60448" fg:w="16"/><text x="57.1187%" y="751.50"></text></g><g><title>rust_alloc (35 samples, 0.03%)</title><rect x="56.9082%" y="597" width="0.0329%" height="15" fill="rgb(209,56,44)" fg:x="60490" fg:w="35"/><text x="57.1582%" y="607.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="56.9628%" y="469" width="0.0141%" height="15" fill="rgb(230,108,32)" fg:x="60548" fg:w="15"/><text x="57.2128%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="56.9628%" y="453" width="0.0141%" height="15" fill="rgb(216,165,31)" fg:x="60548" fg:w="15"/><text x="57.2128%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (25 samples, 0.02%)</title><rect x="56.9581%" y="517" width="0.0235%" height="15" fill="rgb(218,122,21)" fg:x="60543" fg:w="25"/><text x="57.2081%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (25 samples, 0.02%)</title><rect x="56.9581%" y="501" width="0.0235%" height="15" fill="rgb(223,224,47)" fg:x="60543" fg:w="25"/><text x="57.2081%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (22 samples, 0.02%)</title><rect x="56.9609%" y="485" width="0.0207%" height="15" fill="rgb(238,102,44)" fg:x="60546" fg:w="22"/><text x="57.2109%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (32 samples, 0.03%)</title><rect x="56.9581%" y="533" width="0.0301%" height="15" fill="rgb(236,46,40)" fg:x="60543" fg:w="32"/><text x="57.2081%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (50 samples, 0.05%)</title><rect x="56.9515%" y="549" width="0.0470%" height="15" fill="rgb(247,202,50)" fg:x="60536" fg:w="50"/><text x="57.2015%" y="559.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="56.9882%" y="533" width="0.0103%" height="15" fill="rgb(209,99,20)" fg:x="60575" fg:w="11"/><text x="57.2382%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="56.9882%" y="517" width="0.0103%" height="15" fill="rgb(252,27,34)" fg:x="60575" fg:w="11"/><text x="57.2382%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="56.9882%" y="501" width="0.0103%" height="15" fill="rgb(215,206,23)" fg:x="60575" fg:w="11"/><text x="57.2382%" y="511.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="56.9882%" y="485" width="0.0103%" height="15" fill="rgb(212,135,36)" fg:x="60575" fg:w="11"/><text x="57.2382%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (26 samples, 0.02%)</title><rect x="57.0032%" y="533" width="0.0245%" height="15" fill="rgb(240,189,1)" fg:x="60591" fg:w="26"/><text x="57.2532%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.23%)</title><rect x="56.9515%" y="581" width="0.2324%" height="15" fill="rgb(242,56,20)" fg:x="60536" fg:w="247"/><text x="57.2015%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (247 samples, 0.23%)</title><rect x="56.9515%" y="565" width="0.2324%" height="15" fill="rgb(247,132,33)" fg:x="60536" fg:w="247"/><text x="57.2015%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (197 samples, 0.19%)</title><rect x="56.9985%" y="549" width="0.1853%" height="15" fill="rgb(208,149,11)" fg:x="60586" fg:w="197"/><text x="57.2485%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (166 samples, 0.16%)</title><rect x="57.0277%" y="533" width="0.1562%" height="15" fill="rgb(211,33,11)" fg:x="60617" fg:w="166"/><text x="57.2777%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (166 samples, 0.16%)</title><rect x="57.0277%" y="517" width="0.1562%" height="15" fill="rgb(221,29,38)" fg:x="60617" fg:w="166"/><text x="57.2777%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (166 samples, 0.16%)</title><rect x="57.0277%" y="501" width="0.1562%" height="15" fill="rgb(206,182,49)" fg:x="60617" fg:w="166"/><text x="57.2777%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (84 samples, 0.08%)</title><rect x="57.1867%" y="581" width="0.0790%" height="15" fill="rgb(216,140,1)" fg:x="60786" fg:w="84"/><text x="57.4367%" y="591.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (84 samples, 0.08%)</title><rect x="57.1867%" y="565" width="0.0790%" height="15" fill="rgb(232,57,40)" fg:x="60786" fg:w="84"/><text x="57.4367%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (927 samples, 0.87%)</title><rect x="56.9073%" y="629" width="0.8721%" height="15" fill="rgb(224,186,18)" fg:x="60489" fg:w="927"/><text x="57.1573%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (926 samples, 0.87%)</title><rect x="56.9082%" y="613" width="0.8712%" height="15" fill="rgb(215,121,11)" fg:x="60490" fg:w="926"/><text x="57.1582%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (884 samples, 0.83%)</title><rect x="56.9477%" y="597" width="0.8317%" height="15" fill="rgb(245,147,10)" fg:x="60532" fg:w="884"/><text x="57.1977%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (546 samples, 0.51%)</title><rect x="57.2657%" y="581" width="0.5137%" height="15" fill="rgb(238,153,13)" fg:x="60870" fg:w="546"/><text x="57.5157%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (546 samples, 0.51%)</title><rect x="57.2657%" y="565" width="0.5137%" height="15" fill="rgb(233,108,0)" fg:x="60870" fg:w="546"/><text x="57.5157%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,003 samples, 0.94%)</title><rect x="56.8687%" y="773" width="0.9436%" height="15" fill="rgb(212,157,17)" fg:x="60448" fg:w="1003"/><text x="57.1187%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,003 samples, 0.94%)</title><rect x="56.8687%" y="757" width="0.9436%" height="15" fill="rgb(225,213,38)" fg:x="60448" fg:w="1003"/><text x="57.1187%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (987 samples, 0.93%)</title><rect x="56.8837%" y="741" width="0.9286%" height="15" fill="rgb(248,16,11)" fg:x="60464" fg:w="987"/><text x="57.1337%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (987 samples, 0.93%)</title><rect x="56.8837%" y="725" width="0.9286%" height="15" fill="rgb(241,33,4)" fg:x="60464" fg:w="987"/><text x="57.1337%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (987 samples, 0.93%)</title><rect x="56.8837%" y="709" width="0.9286%" height="15" fill="rgb(222,26,43)" fg:x="60464" fg:w="987"/><text x="57.1337%" y="719.50"></text></g><g><title>alloc::alloc::alloc (972 samples, 0.91%)</title><rect x="56.8978%" y="693" width="0.9144%" height="15" fill="rgb(243,29,36)" fg:x="60479" fg:w="972"/><text x="57.1478%" y="703.50"></text></g><g><title>__rg_alloc (972 samples, 0.91%)</title><rect x="56.8978%" y="677" width="0.9144%" height="15" fill="rgb(241,9,27)" fg:x="60479" fg:w="972"/><text x="57.1478%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (972 samples, 0.91%)</title><rect x="56.8978%" y="661" width="0.9144%" height="15" fill="rgb(205,117,26)" fg:x="60479" fg:w="972"/><text x="57.1478%" y="671.50"></text></g><g><title>rust_alloc (972 samples, 0.91%)</title><rect x="56.8978%" y="645" width="0.9144%" height="15" fill="rgb(209,80,39)" fg:x="60479" fg:w="972"/><text x="57.1478%" y="655.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (35 samples, 0.03%)</title><rect x="57.7794%" y="629" width="0.0329%" height="15" fill="rgb(239,155,6)" fg:x="61416" fg:w="35"/><text x="58.0294%" y="639.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,042 samples, 0.98%)</title><rect x="56.8687%" y="901" width="0.9803%" height="15" fill="rgb(212,104,12)" fg:x="60448" fg:w="1042"/><text x="57.1187%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,042 samples, 0.98%)</title><rect x="56.8687%" y="885" width="0.9803%" height="15" fill="rgb(234,204,3)" fg:x="60448" fg:w="1042"/><text x="57.1187%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,042 samples, 0.98%)</title><rect x="56.8687%" y="869" width="0.9803%" height="15" fill="rgb(251,218,7)" fg:x="60448" fg:w="1042"/><text x="57.1187%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,042 samples, 0.98%)</title><rect x="56.8687%" y="853" width="0.9803%" height="15" fill="rgb(221,81,32)" fg:x="60448" fg:w="1042"/><text x="57.1187%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,042 samples, 0.98%)</title><rect x="56.8687%" y="837" width="0.9803%" height="15" fill="rgb(214,152,26)" fg:x="60448" fg:w="1042"/><text x="57.1187%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,042 samples, 0.98%)</title><rect x="56.8687%" y="821" width="0.9803%" height="15" fill="rgb(223,22,3)" fg:x="60448" fg:w="1042"/><text x="57.1187%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1,042 samples, 0.98%)</title><rect x="56.8687%" y="805" width="0.9803%" height="15" fill="rgb(207,174,7)" fg:x="60448" fg:w="1042"/><text x="57.1187%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,042 samples, 0.98%)</title><rect x="56.8687%" y="789" width="0.9803%" height="15" fill="rgb(224,19,52)" fg:x="60448" fg:w="1042"/><text x="57.1187%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (39 samples, 0.04%)</title><rect x="57.8123%" y="773" width="0.0367%" height="15" fill="rgb(228,24,14)" fg:x="61451" fg:w="39"/><text x="58.0623%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.04%)</title><rect x="57.8123%" y="757" width="0.0367%" height="15" fill="rgb(230,153,43)" fg:x="61451" fg:w="39"/><text x="58.0623%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (29 samples, 0.03%)</title><rect x="57.8217%" y="741" width="0.0273%" height="15" fill="rgb(231,106,12)" fg:x="61461" fg:w="29"/><text x="58.0717%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,162 samples, 1.09%)</title><rect x="57.8490%" y="901" width="1.0932%" height="15" fill="rgb(215,92,2)" fg:x="61490" fg:w="1162"/><text x="58.0990%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (15 samples, 0.01%)</title><rect x="58.9422%" y="901" width="0.0141%" height="15" fill="rgb(249,143,25)" fg:x="62652" fg:w="15"/><text x="59.1922%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (20 samples, 0.02%)</title><rect x="58.9563%" y="901" width="0.0188%" height="15" fill="rgb(252,7,35)" fg:x="62667" fg:w="20"/><text x="59.2063%" y="911.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="58.9563%" y="885" width="0.0188%" height="15" fill="rgb(216,69,40)" fg:x="62667" fg:w="20"/><text x="59.2063%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="58.9845%" y="901" width="0.0132%" height="15" fill="rgb(240,36,33)" fg:x="62697" fg:w="14"/><text x="59.2345%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (21 samples, 0.02%)</title><rect x="58.9977%" y="901" width="0.0198%" height="15" fill="rgb(231,128,14)" fg:x="62711" fg:w="21"/><text x="59.2477%" y="911.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (16 samples, 0.02%)</title><rect x="59.0250%" y="885" width="0.0151%" height="15" fill="rgb(245,143,14)" fg:x="62740" fg:w="16"/><text x="59.2750%" y="895.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (36 samples, 0.03%)</title><rect x="59.0410%" y="853" width="0.0339%" height="15" fill="rgb(222,130,28)" fg:x="62757" fg:w="36"/><text x="59.2910%" y="863.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (271 samples, 0.25%)</title><rect x="59.0174%" y="901" width="0.2550%" height="15" fill="rgb(212,10,48)" fg:x="62732" fg:w="271"/><text x="59.2674%" y="911.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (247 samples, 0.23%)</title><rect x="59.0400%" y="885" width="0.2324%" height="15" fill="rgb(254,118,45)" fg:x="62756" fg:w="247"/><text x="59.2900%" y="895.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (246 samples, 0.23%)</title><rect x="59.0410%" y="869" width="0.2314%" height="15" fill="rgb(228,6,45)" fg:x="62757" fg:w="246"/><text x="59.2910%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (210 samples, 0.20%)</title><rect x="59.0748%" y="853" width="0.1976%" height="15" fill="rgb(241,18,35)" fg:x="62793" fg:w="210"/><text x="59.3248%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (210 samples, 0.20%)</title><rect x="59.0748%" y="837" width="0.1976%" height="15" fill="rgb(227,214,53)" fg:x="62793" fg:w="210"/><text x="59.3248%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (210 samples, 0.20%)</title><rect x="59.0748%" y="821" width="0.1976%" height="15" fill="rgb(224,107,51)" fg:x="62793" fg:w="210"/><text x="59.3248%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (210 samples, 0.20%)</title><rect x="59.0748%" y="805" width="0.1976%" height="15" fill="rgb(248,60,28)" fg:x="62793" fg:w="210"/><text x="59.3248%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (210 samples, 0.20%)</title><rect x="59.0748%" y="789" width="0.1976%" height="15" fill="rgb(249,101,23)" fg:x="62793" fg:w="210"/><text x="59.3248%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (136 samples, 0.13%)</title><rect x="59.1444%" y="773" width="0.1279%" height="15" fill="rgb(228,51,19)" fg:x="62867" fg:w="136"/><text x="59.3944%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (10,091 samples, 9.49%)</title><rect x="49.8071%" y="1125" width="9.4935%" height="15" fill="rgb(213,20,6)" fg:x="52942" fg:w="10091"/><text x="50.0571%" y="1135.50">async_task::ra..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10,091 samples, 9.49%)</title><rect x="49.8071%" y="1109" width="9.4935%" height="15" fill="rgb(212,124,10)" fg:x="52942" fg:w="10091"/><text x="50.0571%" y="1119.50">&lt;core::pin::Pi..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,091 samples, 9.49%)</title><rect x="49.8071%" y="1093" width="9.4935%" height="15" fill="rgb(248,3,40)" fg:x="52942" fg:w="10091"/><text x="50.0571%" y="1103.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (10,091 samples, 9.49%)</title><rect x="49.8071%" y="1077" width="9.4935%" height="15" fill="rgb(223,178,23)" fg:x="52942" fg:w="10091"/><text x="50.0571%" y="1087.50">async_executor..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (10,091 samples, 9.49%)</title><rect x="49.8071%" y="1061" width="9.4935%" height="15" fill="rgb(240,132,45)" fg:x="52942" fg:w="10091"/><text x="50.0571%" y="1071.50">&lt;async_std::ta..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (10,091 samples, 9.49%)</title><rect x="49.8071%" y="1045" width="9.4935%" height="15" fill="rgb(245,164,36)" fg:x="52942" fg:w="10091"/><text x="50.0571%" y="1055.50">async_std::tas..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,091 samples, 9.49%)</title><rect x="49.8071%" y="1029" width="9.4935%" height="15" fill="rgb(231,188,53)" fg:x="52942" fg:w="10091"/><text x="50.0571%" y="1039.50">std::thread::l..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,091 samples, 9.49%)</title><rect x="49.8071%" y="1013" width="9.4935%" height="15" fill="rgb(237,198,39)" fg:x="52942" fg:w="10091"/><text x="50.0571%" y="1023.50">std::thread::l..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (10,091 samples, 9.49%)</title><rect x="49.8071%" y="997" width="9.4935%" height="15" fill="rgb(223,120,35)" fg:x="52942" fg:w="10091"/><text x="50.0571%" y="1007.50">async_std::tas..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (10,091 samples, 9.49%)</title><rect x="49.8071%" y="981" width="9.4935%" height="15" fill="rgb(253,107,49)" fg:x="52942" fg:w="10091"/><text x="50.0571%" y="991.50">&lt;async_std::ta..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,091 samples, 9.49%)</title><rect x="49.8071%" y="965" width="9.4935%" height="15" fill="rgb(216,44,31)" fg:x="52942" fg:w="10091"/><text x="50.0571%" y="975.50">&lt;core::future:..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,369 samples, 3.17%)</title><rect x="56.1311%" y="949" width="3.1695%" height="15" fill="rgb(253,87,21)" fg:x="59664" fg:w="3369"/><text x="56.3811%" y="959.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,369 samples, 3.17%)</title><rect x="56.1311%" y="933" width="3.1695%" height="15" fill="rgb(226,18,2)" fg:x="59664" fg:w="3369"/><text x="56.3811%" y="943.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,034 samples, 2.85%)</title><rect x="56.4463%" y="917" width="2.8543%" height="15" fill="rgb(216,8,46)" fg:x="59999" fg:w="3034"/><text x="56.6963%" y="927.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (30 samples, 0.03%)</title><rect x="59.2724%" y="901" width="0.0282%" height="15" fill="rgb(226,140,39)" fg:x="63003" fg:w="30"/><text x="59.5224%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (30 samples, 0.03%)</title><rect x="59.2724%" y="885" width="0.0282%" height="15" fill="rgb(221,194,54)" fg:x="63003" fg:w="30"/><text x="59.5224%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (30 samples, 0.03%)</title><rect x="59.2724%" y="869" width="0.0282%" height="15" fill="rgb(213,92,11)" fg:x="63003" fg:w="30"/><text x="59.5224%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (17 samples, 0.02%)</title><rect x="59.2846%" y="853" width="0.0160%" height="15" fill="rgb(229,162,46)" fg:x="63016" fg:w="17"/><text x="59.5346%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (21 samples, 0.02%)</title><rect x="59.3138%" y="1125" width="0.0198%" height="15" fill="rgb(214,111,36)" fg:x="63047" fg:w="21"/><text x="59.5638%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="59.3345%" y="1125" width="0.0113%" height="15" fill="rgb(207,6,21)" fg:x="63069" fg:w="12"/><text x="59.5845%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="59.3458%" y="1125" width="0.0198%" height="15" fill="rgb(213,127,38)" fg:x="63081" fg:w="21"/><text x="59.5958%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="59.3655%" y="1125" width="0.0169%" height="15" fill="rgb(238,118,32)" fg:x="63102" fg:w="18"/><text x="59.6155%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (16 samples, 0.02%)</title><rect x="59.3900%" y="1125" width="0.0151%" height="15" fill="rgb(240,139,39)" fg:x="63128" fg:w="16"/><text x="59.6400%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="59.4050%" y="1125" width="0.0198%" height="15" fill="rgb(235,10,37)" fg:x="63144" fg:w="21"/><text x="59.6550%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (12 samples, 0.01%)</title><rect x="59.4248%" y="1125" width="0.0113%" height="15" fill="rgb(249,171,38)" fg:x="63165" fg:w="12"/><text x="59.6748%" y="1135.50"></text></g><g><title>event_listener::Event::notify (50 samples, 0.05%)</title><rect x="59.4502%" y="1125" width="0.0470%" height="15" fill="rgb(242,144,32)" fg:x="63192" fg:w="50"/><text x="59.7002%" y="1135.50"></text></g><g><title>event_listener::full_fence (37 samples, 0.03%)</title><rect x="59.4624%" y="1109" width="0.0348%" height="15" fill="rgb(217,117,21)" fg:x="63205" fg:w="37"/><text x="59.7124%" y="1119.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (23 samples, 0.02%)</title><rect x="59.4982%" y="1125" width="0.0216%" height="15" fill="rgb(249,87,1)" fg:x="63243" fg:w="23"/><text x="59.7482%" y="1135.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (17 samples, 0.02%)</title><rect x="59.5198%" y="1125" width="0.0160%" height="15" fill="rgb(248,196,48)" fg:x="63266" fg:w="17"/><text x="59.7698%" y="1135.50"></text></g><g><title>polling::epoll::Poller::wait (15 samples, 0.01%)</title><rect x="59.5443%" y="1125" width="0.0141%" height="15" fill="rgb(251,206,33)" fg:x="63292" fg:w="15"/><text x="59.7943%" y="1135.50"></text></g><g><title>rust_alloc (81 samples, 0.08%)</title><rect x="59.5584%" y="1125" width="0.0762%" height="15" fill="rgb(232,141,28)" fg:x="63307" fg:w="81"/><text x="59.8084%" y="1135.50"></text></g><g><title>rust_dealloc (21 samples, 0.02%)</title><rect x="59.6346%" y="1125" width="0.0198%" height="15" fill="rgb(209,167,14)" fg:x="63388" fg:w="21"/><text x="59.8846%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (19 samples, 0.02%)</title><rect x="59.6365%" y="1109" width="0.0179%" height="15" fill="rgb(225,11,50)" fg:x="63390" fg:w="19"/><text x="59.8865%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (19 samples, 0.02%)</title><rect x="59.6365%" y="1093" width="0.0179%" height="15" fill="rgb(209,50,20)" fg:x="63390" fg:w="19"/><text x="59.8865%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (19 samples, 0.02%)</title><rect x="59.6365%" y="1077" width="0.0179%" height="15" fill="rgb(212,17,46)" fg:x="63390" fg:w="19"/><text x="59.8865%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (19 samples, 0.02%)</title><rect x="59.6365%" y="1061" width="0.0179%" height="15" fill="rgb(216,101,39)" fg:x="63390" fg:w="19"/><text x="59.8865%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (19 samples, 0.02%)</title><rect x="59.6365%" y="1045" width="0.0179%" height="15" fill="rgb(212,228,48)" fg:x="63390" fg:w="19"/><text x="59.8865%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (19 samples, 0.02%)</title><rect x="59.6365%" y="1029" width="0.0179%" height="15" fill="rgb(250,6,50)" fg:x="63390" fg:w="19"/><text x="59.8865%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (19 samples, 0.02%)</title><rect x="59.6365%" y="1013" width="0.0179%" height="15" fill="rgb(250,160,48)" fg:x="63390" fg:w="19"/><text x="59.8865%" y="1023.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (19 samples, 0.02%)</title><rect x="59.6365%" y="997" width="0.0179%" height="15" fill="rgb(244,216,33)" fg:x="63390" fg:w="19"/><text x="59.8865%" y="1007.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (14 samples, 0.01%)</title><rect x="59.6600%" y="1125" width="0.0132%" height="15" fill="rgb(207,157,5)" fg:x="63415" fg:w="14"/><text x="59.9100%" y="1135.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (15 samples, 0.01%)</title><rect x="59.6732%" y="1125" width="0.0141%" height="15" fill="rgb(228,199,8)" fg:x="63429" fg:w="15"/><text x="59.9232%" y="1135.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (11 samples, 0.01%)</title><rect x="59.6873%" y="1125" width="0.0103%" height="15" fill="rgb(227,80,20)" fg:x="63444" fg:w="11"/><text x="59.9373%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (41 samples, 0.04%)</title><rect x="59.6976%" y="1125" width="0.0386%" height="15" fill="rgb(222,9,33)" fg:x="63455" fg:w="41"/><text x="59.9476%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (73 samples, 0.07%)</title><rect x="59.8058%" y="933" width="0.0687%" height="15" fill="rgb(239,44,28)" fg:x="63570" fg:w="73"/><text x="60.0558%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (72 samples, 0.07%)</title><rect x="59.8068%" y="917" width="0.0677%" height="15" fill="rgb(249,187,43)" fg:x="63571" fg:w="72"/><text x="60.0568%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (72 samples, 0.07%)</title><rect x="59.8068%" y="901" width="0.0677%" height="15" fill="rgb(216,141,28)" fg:x="63571" fg:w="72"/><text x="60.0568%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (49 samples, 0.05%)</title><rect x="59.8284%" y="885" width="0.0461%" height="15" fill="rgb(230,154,53)" fg:x="63594" fg:w="49"/><text x="60.0784%" y="895.50"></text></g><g><title>___pthread_mutex_lock (49 samples, 0.05%)</title><rect x="59.8284%" y="869" width="0.0461%" height="15" fill="rgb(227,82,4)" fg:x="63594" fg:w="49"/><text x="60.0784%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (121 samples, 0.11%)</title><rect x="59.7776%" y="949" width="0.1138%" height="15" fill="rgb(220,107,16)" fg:x="63540" fg:w="121"/><text x="60.0276%" y="959.50"></text></g><g><title>event_listener::List::remove (18 samples, 0.02%)</title><rect x="59.8745%" y="933" width="0.0169%" height="15" fill="rgb(207,187,2)" fg:x="63643" fg:w="18"/><text x="60.1245%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (15 samples, 0.01%)</title><rect x="59.8773%" y="917" width="0.0141%" height="15" fill="rgb(210,162,52)" fg:x="63646" fg:w="15"/><text x="60.1273%" y="927.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="59.8773%" y="901" width="0.0141%" height="15" fill="rgb(217,216,49)" fg:x="63646" fg:w="15"/><text x="60.1273%" y="911.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="59.8773%" y="885" width="0.0141%" height="15" fill="rgb(218,146,49)" fg:x="63646" fg:w="15"/><text x="60.1273%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (852 samples, 0.80%)</title><rect x="59.8914%" y="949" width="0.8016%" height="15" fill="rgb(216,55,40)" fg:x="63661" fg:w="852"/><text x="60.1414%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (650 samples, 0.61%)</title><rect x="60.7297%" y="933" width="0.6115%" height="15" fill="rgb(208,196,21)" fg:x="64552" fg:w="650"/><text x="60.9797%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (398 samples, 0.37%)</title><rect x="61.5115%" y="901" width="0.3744%" height="15" fill="rgb(242,117,42)" fg:x="65383" fg:w="398"/><text x="61.7615%" y="911.50"></text></g><g><title>concurrent_queue::full_fence (14 samples, 0.01%)</title><rect x="61.8859%" y="901" width="0.0132%" height="15" fill="rgb(210,11,23)" fg:x="65781" fg:w="14"/><text x="62.1359%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (13 samples, 0.01%)</title><rect x="61.8868%" y="885" width="0.0122%" height="15" fill="rgb(217,110,2)" fg:x="65782" fg:w="13"/><text x="62.1368%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.01%)</title><rect x="61.8868%" y="869" width="0.0122%" height="15" fill="rgb(229,77,54)" fg:x="65782" fg:w="13"/><text x="62.1368%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.01%)</title><rect x="61.8868%" y="853" width="0.0122%" height="15" fill="rgb(218,53,16)" fg:x="65782" fg:w="13"/><text x="62.1368%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (497 samples, 0.47%)</title><rect x="61.9019%" y="901" width="0.4676%" height="15" fill="rgb(215,38,13)" fg:x="65798" fg:w="497"/><text x="62.1519%" y="911.50"></text></g><g><title>core::ptr::read (497 samples, 0.47%)</title><rect x="61.9019%" y="885" width="0.4676%" height="15" fill="rgb(235,42,18)" fg:x="65798" fg:w="497"/><text x="62.1519%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (497 samples, 0.47%)</title><rect x="61.9019%" y="869" width="0.4676%" height="15" fill="rgb(219,66,54)" fg:x="65798" fg:w="497"/><text x="62.1519%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (494 samples, 0.46%)</title><rect x="62.3695%" y="901" width="0.4647%" height="15" fill="rgb(222,205,4)" fg:x="66295" fg:w="494"/><text x="62.6195%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (494 samples, 0.46%)</title><rect x="62.3695%" y="885" width="0.4647%" height="15" fill="rgb(227,213,46)" fg:x="66295" fg:w="494"/><text x="62.6195%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (252 samples, 0.24%)</title><rect x="62.8342%" y="901" width="0.2371%" height="15" fill="rgb(250,145,42)" fg:x="66789" fg:w="252"/><text x="63.0842%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (251 samples, 0.24%)</title><rect x="62.8352%" y="885" width="0.2361%" height="15" fill="rgb(219,15,2)" fg:x="66790" fg:w="251"/><text x="63.0852%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,840 samples, 1.73%)</title><rect x="61.3412%" y="933" width="1.7310%" height="15" fill="rgb(231,181,52)" fg:x="65202" fg:w="1840"/><text x="61.5912%" y="943.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,805 samples, 1.70%)</title><rect x="61.3741%" y="917" width="1.6981%" height="15" fill="rgb(235,1,42)" fg:x="65237" fg:w="1805"/><text x="61.6241%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (40 samples, 0.04%)</title><rect x="63.0863%" y="917" width="0.0376%" height="15" fill="rgb(249,88,27)" fg:x="67057" fg:w="40"/><text x="63.3363%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (40 samples, 0.04%)</title><rect x="63.0863%" y="901" width="0.0376%" height="15" fill="rgb(235,145,16)" fg:x="67057" fg:w="40"/><text x="63.3363%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="63.0863%" y="885" width="0.0376%" height="15" fill="rgb(237,114,19)" fg:x="67057" fg:w="40"/><text x="63.3363%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.04%)</title><rect x="63.0863%" y="869" width="0.0376%" height="15" fill="rgb(238,51,50)" fg:x="67057" fg:w="40"/><text x="63.3363%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (40 samples, 0.04%)</title><rect x="63.0863%" y="853" width="0.0376%" height="15" fill="rgb(205,194,25)" fg:x="67057" fg:w="40"/><text x="63.3363%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (40 samples, 0.04%)</title><rect x="63.0863%" y="837" width="0.0376%" height="15" fill="rgb(215,203,17)" fg:x="67057" fg:w="40"/><text x="63.3363%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (24 samples, 0.02%)</title><rect x="63.1240%" y="917" width="0.0226%" height="15" fill="rgb(233,112,49)" fg:x="67097" fg:w="24"/><text x="63.3740%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (24 samples, 0.02%)</title><rect x="63.1240%" y="901" width="0.0226%" height="15" fill="rgb(241,130,26)" fg:x="67097" fg:w="24"/><text x="63.3740%" y="911.50"></text></g><g><title>event_listener::Inner::lock (63 samples, 0.06%)</title><rect x="63.1475%" y="917" width="0.0593%" height="15" fill="rgb(252,223,19)" fg:x="67122" fg:w="63"/><text x="63.3975%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.06%)</title><rect x="63.1484%" y="901" width="0.0583%" height="15" fill="rgb(211,95,25)" fg:x="67123" fg:w="62"/><text x="63.3984%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (61 samples, 0.06%)</title><rect x="63.1494%" y="885" width="0.0574%" height="15" fill="rgb(251,182,27)" fg:x="67124" fg:w="61"/><text x="63.3994%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (54 samples, 0.05%)</title><rect x="63.1560%" y="869" width="0.0508%" height="15" fill="rgb(238,24,4)" fg:x="67131" fg:w="54"/><text x="63.4060%" y="879.50"></text></g><g><title>___pthread_mutex_lock (54 samples, 0.05%)</title><rect x="63.1560%" y="853" width="0.0508%" height="15" fill="rgb(224,220,25)" fg:x="67131" fg:w="54"/><text x="63.4060%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (11 samples, 0.01%)</title><rect x="63.2096%" y="869" width="0.0103%" height="15" fill="rgb(239,133,26)" fg:x="67188" fg:w="11"/><text x="63.4596%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.01%)</title><rect x="63.2096%" y="853" width="0.0103%" height="15" fill="rgb(211,94,48)" fg:x="67188" fg:w="11"/><text x="63.4596%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.01%)</title><rect x="63.2096%" y="837" width="0.0103%" height="15" fill="rgb(239,87,6)" fg:x="67188" fg:w="11"/><text x="63.4596%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="63.2228%" y="757" width="0.0132%" height="15" fill="rgb(227,62,0)" fg:x="67202" fg:w="14"/><text x="63.4728%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (15 samples, 0.01%)</title><rect x="63.2228%" y="821" width="0.0141%" height="15" fill="rgb(211,226,4)" fg:x="67202" fg:w="15"/><text x="63.4728%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="63.2228%" y="805" width="0.0141%" height="15" fill="rgb(253,38,52)" fg:x="67202" fg:w="15"/><text x="63.4728%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="63.2228%" y="789" width="0.0141%" height="15" fill="rgb(229,126,40)" fg:x="67202" fg:w="15"/><text x="63.4728%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="63.2228%" y="773" width="0.0141%" height="15" fill="rgb(229,165,44)" fg:x="67202" fg:w="15"/><text x="63.4728%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (21 samples, 0.02%)</title><rect x="63.2698%" y="741" width="0.0198%" height="15" fill="rgb(247,95,47)" fg:x="67252" fg:w="21"/><text x="63.5198%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (21 samples, 0.02%)</title><rect x="63.2698%" y="725" width="0.0198%" height="15" fill="rgb(216,140,30)" fg:x="67252" fg:w="21"/><text x="63.5198%" y="735.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (32 samples, 0.03%)</title><rect x="63.2896%" y="741" width="0.0301%" height="15" fill="rgb(246,214,8)" fg:x="67273" fg:w="32"/><text x="63.5396%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (32 samples, 0.03%)</title><rect x="63.2896%" y="725" width="0.0301%" height="15" fill="rgb(227,224,15)" fg:x="67273" fg:w="32"/><text x="63.5396%" y="735.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (32 samples, 0.03%)</title><rect x="63.2896%" y="709" width="0.0301%" height="15" fill="rgb(233,175,4)" fg:x="67273" fg:w="32"/><text x="63.5396%" y="719.50"></text></g><g><title>__GI___pthread_cond_signal (32 samples, 0.03%)</title><rect x="63.2896%" y="693" width="0.0301%" height="15" fill="rgb(221,66,45)" fg:x="67273" fg:w="32"/><text x="63.5396%" y="703.50"></text></g><g><title>parking::Unparker::unpark (81 samples, 0.08%)</title><rect x="63.2547%" y="773" width="0.0762%" height="15" fill="rgb(221,178,18)" fg:x="67236" fg:w="81"/><text x="63.5047%" y="783.50"></text></g><g><title>parking::Inner::unpark (71 samples, 0.07%)</title><rect x="63.2642%" y="757" width="0.0668%" height="15" fill="rgb(213,81,29)" fg:x="67246" fg:w="71"/><text x="63.5142%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.01%)</title><rect x="63.3197%" y="741" width="0.0113%" height="15" fill="rgb(220,89,49)" fg:x="67305" fg:w="12"/><text x="63.5697%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="63.3197%" y="725" width="0.0113%" height="15" fill="rgb(227,60,33)" fg:x="67305" fg:w="12"/><text x="63.5697%" y="735.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (93 samples, 0.09%)</title><rect x="63.2463%" y="789" width="0.0875%" height="15" fill="rgb(205,113,12)" fg:x="67227" fg:w="93"/><text x="63.4963%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (103 samples, 0.10%)</title><rect x="63.2444%" y="821" width="0.0969%" height="15" fill="rgb(211,32,1)" fg:x="67225" fg:w="103"/><text x="63.4944%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (103 samples, 0.10%)</title><rect x="63.2444%" y="805" width="0.0969%" height="15" fill="rgb(246,2,12)" fg:x="67225" fg:w="103"/><text x="63.4944%" y="815.50"></text></g><g><title>async_executor::State::notify (138 samples, 0.13%)</title><rect x="63.2209%" y="837" width="0.1298%" height="15" fill="rgb(243,37,27)" fg:x="67200" fg:w="138"/><text x="63.4709%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (31 samples, 0.03%)</title><rect x="63.3573%" y="805" width="0.0292%" height="15" fill="rgb(248,211,31)" fg:x="67345" fg:w="31"/><text x="63.6073%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (31 samples, 0.03%)</title><rect x="63.3573%" y="789" width="0.0292%" height="15" fill="rgb(242,146,47)" fg:x="67345" fg:w="31"/><text x="63.6073%" y="799.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (187 samples, 0.18%)</title><rect x="63.2209%" y="853" width="0.1759%" height="15" fill="rgb(206,70,20)" fg:x="67200" fg:w="187"/><text x="63.4709%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (49 samples, 0.05%)</title><rect x="63.3507%" y="837" width="0.0461%" height="15" fill="rgb(215,10,51)" fg:x="67338" fg:w="49"/><text x="63.6007%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (46 samples, 0.04%)</title><rect x="63.3535%" y="821" width="0.0433%" height="15" fill="rgb(243,178,53)" fg:x="67341" fg:w="46"/><text x="63.6035%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (25 samples, 0.02%)</title><rect x="63.3968%" y="853" width="0.0235%" height="15" fill="rgb(233,221,20)" fg:x="67387" fg:w="25"/><text x="63.6468%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 0.02%)</title><rect x="63.3968%" y="837" width="0.0235%" height="15" fill="rgb(218,95,35)" fg:x="67387" fg:w="25"/><text x="63.6468%" y="847.50"></text></g><g><title>event_listener::List::notify (229 samples, 0.22%)</title><rect x="63.2068%" y="917" width="0.2154%" height="15" fill="rgb(229,13,5)" fg:x="67185" fg:w="229"/><text x="63.4568%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (226 samples, 0.21%)</title><rect x="63.2096%" y="901" width="0.2126%" height="15" fill="rgb(252,164,30)" fg:x="67188" fg:w="226"/><text x="63.4596%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (226 samples, 0.21%)</title><rect x="63.2096%" y="885" width="0.2126%" height="15" fill="rgb(232,68,36)" fg:x="67188" fg:w="226"/><text x="63.4596%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (214 samples, 0.20%)</title><rect x="63.2209%" y="869" width="0.2013%" height="15" fill="rgb(219,59,54)" fg:x="67200" fg:w="214"/><text x="63.4709%" y="879.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3,301 samples, 3.11%)</title><rect x="60.6930%" y="949" width="3.1055%" height="15" fill="rgb(250,92,33)" fg:x="64513" fg:w="3301"/><text x="60.9430%" y="959.50">asy..</text></g><g><title>event_listener::Event::notify (772 samples, 0.73%)</title><rect x="63.0722%" y="933" width="0.7263%" height="15" fill="rgb(229,162,54)" fg:x="67042" fg:w="772"/><text x="63.3222%" y="943.50"></text></g><g><title>event_listener::full_fence (400 samples, 0.38%)</title><rect x="63.4222%" y="917" width="0.3763%" height="15" fill="rgb(244,114,52)" fg:x="67414" fg:w="400"/><text x="63.6722%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (389 samples, 0.37%)</title><rect x="63.4326%" y="901" width="0.3660%" height="15" fill="rgb(212,211,43)" fg:x="67425" fg:w="389"/><text x="63.6826%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (389 samples, 0.37%)</title><rect x="63.4326%" y="885" width="0.3660%" height="15" fill="rgb(226,147,8)" fg:x="67425" fg:w="389"/><text x="63.6826%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (21 samples, 0.02%)</title><rect x="63.8023%" y="949" width="0.0198%" height="15" fill="rgb(226,23,13)" fg:x="67818" fg:w="21"/><text x="64.0523%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="63.8230%" y="933" width="0.0235%" height="15" fill="rgb(240,63,4)" fg:x="67840" fg:w="25"/><text x="64.0730%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="63.8230%" y="917" width="0.0235%" height="15" fill="rgb(221,1,32)" fg:x="67840" fg:w="25"/><text x="64.0730%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="63.8230%" y="901" width="0.0235%" height="15" fill="rgb(242,117,10)" fg:x="67840" fg:w="25"/><text x="64.0730%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (14 samples, 0.01%)</title><rect x="63.8465%" y="933" width="0.0132%" height="15" fill="rgb(249,172,44)" fg:x="67865" fg:w="14"/><text x="64.0965%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (14 samples, 0.01%)</title><rect x="63.8465%" y="917" width="0.0132%" height="15" fill="rgb(244,46,45)" fg:x="67865" fg:w="14"/><text x="64.0965%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="63.8465%" y="901" width="0.0132%" height="15" fill="rgb(206,43,17)" fg:x="67865" fg:w="14"/><text x="64.0965%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="63.8465%" y="885" width="0.0132%" height="15" fill="rgb(239,218,39)" fg:x="67865" fg:w="14"/><text x="64.0965%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="63.8474%" y="869" width="0.0122%" height="15" fill="rgb(208,169,54)" fg:x="67866" fg:w="13"/><text x="64.0974%" y="879.50"></text></g><g><title>event_listener::Inner::lock (15 samples, 0.01%)</title><rect x="63.8597%" y="933" width="0.0141%" height="15" fill="rgb(247,25,42)" fg:x="67879" fg:w="15"/><text x="64.1097%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="63.8597%" y="917" width="0.0141%" height="15" fill="rgb(226,23,31)" fg:x="67879" fg:w="15"/><text x="64.1097%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="63.8597%" y="901" width="0.0141%" height="15" fill="rgb(247,16,28)" fg:x="67879" fg:w="15"/><text x="64.1097%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="63.8597%" y="885" width="0.0141%" height="15" fill="rgb(231,147,38)" fg:x="67879" fg:w="15"/><text x="64.1097%" y="895.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="63.8606%" y="869" width="0.0132%" height="15" fill="rgb(253,81,48)" fg:x="67880" fg:w="14"/><text x="64.1106%" y="879.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (4,400 samples, 4.14%)</title><rect x="59.7362%" y="1045" width="4.1395%" height="15" fill="rgb(249,222,43)" fg:x="63496" fg:w="4400"/><text x="59.9862%" y="1055.50">tremo..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,400 samples, 4.14%)</title><rect x="59.7362%" y="1029" width="4.1395%" height="15" fill="rgb(221,3,27)" fg:x="63496" fg:w="4400"/><text x="59.9862%" y="1039.50">&lt;asyn..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (4,400 samples, 4.14%)</title><rect x="59.7362%" y="1013" width="4.1395%" height="15" fill="rgb(228,180,5)" fg:x="63496" fg:w="4400"/><text x="59.9862%" y="1023.50">&lt;trem..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,400 samples, 4.14%)</title><rect x="59.7362%" y="997" width="4.1395%" height="15" fill="rgb(227,131,42)" fg:x="63496" fg:w="4400"/><text x="59.9862%" y="1007.50">&lt;asyn..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,400 samples, 4.14%)</title><rect x="59.7362%" y="981" width="4.1395%" height="15" fill="rgb(212,3,39)" fg:x="63496" fg:w="4400"/><text x="59.9862%" y="991.50">&lt;asyn..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,400 samples, 4.14%)</title><rect x="59.7362%" y="965" width="4.1395%" height="15" fill="rgb(226,45,5)" fg:x="63496" fg:w="4400"/><text x="59.9862%" y="975.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (57 samples, 0.05%)</title><rect x="63.8220%" y="949" width="0.0536%" height="15" fill="rgb(215,167,45)" fg:x="67839" fg:w="57"/><text x="64.0720%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (88 samples, 0.08%)</title><rect x="63.9001%" y="949" width="0.0828%" height="15" fill="rgb(250,218,53)" fg:x="67922" fg:w="88"/><text x="64.1501%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (357 samples, 0.34%)</title><rect x="64.3141%" y="869" width="0.3359%" height="15" fill="rgb(207,140,0)" fg:x="68362" fg:w="357"/><text x="64.5641%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (357 samples, 0.34%)</title><rect x="64.3141%" y="853" width="0.3359%" height="15" fill="rgb(238,133,51)" fg:x="68362" fg:w="357"/><text x="64.5641%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (419 samples, 0.39%)</title><rect x="64.6499%" y="869" width="0.3942%" height="15" fill="rgb(218,203,53)" fg:x="68719" fg:w="419"/><text x="64.8999%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (413 samples, 0.39%)</title><rect x="64.6556%" y="853" width="0.3885%" height="15" fill="rgb(226,184,25)" fg:x="68725" fg:w="413"/><text x="64.9056%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (975 samples, 0.92%)</title><rect x="64.1306%" y="901" width="0.9173%" height="15" fill="rgb(231,121,21)" fg:x="68167" fg:w="975"/><text x="64.3806%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (902 samples, 0.85%)</title><rect x="64.1993%" y="885" width="0.8486%" height="15" fill="rgb(251,14,34)" fg:x="68240" fg:w="902"/><text x="64.4493%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (61 samples, 0.06%)</title><rect x="65.0761%" y="805" width="0.0574%" height="15" fill="rgb(249,193,11)" fg:x="69172" fg:w="61"/><text x="65.3261%" y="815.50"></text></g><g><title>__GI___lll_lock_wake (13 samples, 0.01%)</title><rect x="65.1213%" y="789" width="0.0122%" height="15" fill="rgb(220,172,37)" fg:x="69220" fg:w="13"/><text x="65.3713%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (67 samples, 0.06%)</title><rect x="65.0714%" y="885" width="0.0630%" height="15" fill="rgb(231,229,43)" fg:x="69167" fg:w="67"/><text x="65.3214%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (67 samples, 0.06%)</title><rect x="65.0714%" y="869" width="0.0630%" height="15" fill="rgb(250,161,5)" fg:x="69167" fg:w="67"/><text x="65.3214%" y="879.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.06%)</title><rect x="65.0714%" y="853" width="0.0630%" height="15" fill="rgb(218,225,18)" fg:x="69167" fg:w="67"/><text x="65.3214%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (65 samples, 0.06%)</title><rect x="65.0733%" y="837" width="0.0612%" height="15" fill="rgb(245,45,42)" fg:x="69169" fg:w="65"/><text x="65.3233%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (62 samples, 0.06%)</title><rect x="65.0761%" y="821" width="0.0583%" height="15" fill="rgb(211,115,1)" fg:x="69172" fg:w="62"/><text x="65.3261%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (25 samples, 0.02%)</title><rect x="65.1344%" y="885" width="0.0235%" height="15" fill="rgb(248,133,52)" fg:x="69234" fg:w="25"/><text x="65.3844%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (25 samples, 0.02%)</title><rect x="65.1344%" y="869" width="0.0235%" height="15" fill="rgb(238,100,21)" fg:x="69234" fg:w="25"/><text x="65.3844%" y="879.50"></text></g><g><title>event_listener::Inner::lock (82 samples, 0.08%)</title><rect x="65.1608%" y="885" width="0.0771%" height="15" fill="rgb(247,144,11)" fg:x="69262" fg:w="82"/><text x="65.4108%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (82 samples, 0.08%)</title><rect x="65.1608%" y="869" width="0.0771%" height="15" fill="rgb(206,164,16)" fg:x="69262" fg:w="82"/><text x="65.4108%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (82 samples, 0.08%)</title><rect x="65.1608%" y="853" width="0.0771%" height="15" fill="rgb(222,34,3)" fg:x="69262" fg:w="82"/><text x="65.4108%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (78 samples, 0.07%)</title><rect x="65.1645%" y="837" width="0.0734%" height="15" fill="rgb(248,82,4)" fg:x="69266" fg:w="78"/><text x="65.4145%" y="847.50"></text></g><g><title>___pthread_mutex_lock (78 samples, 0.07%)</title><rect x="65.1645%" y="821" width="0.0734%" height="15" fill="rgb(228,81,46)" fg:x="69266" fg:w="78"/><text x="65.4145%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (20 samples, 0.02%)</title><rect x="65.2464%" y="837" width="0.0188%" height="15" fill="rgb(227,67,47)" fg:x="69353" fg:w="20"/><text x="65.4964%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.02%)</title><rect x="65.2464%" y="821" width="0.0188%" height="15" fill="rgb(215,93,53)" fg:x="69353" fg:w="20"/><text x="65.4964%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.02%)</title><rect x="65.2464%" y="805" width="0.0188%" height="15" fill="rgb(248,194,39)" fg:x="69353" fg:w="20"/><text x="65.4964%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (25 samples, 0.02%)</title><rect x="65.2756%" y="789" width="0.0235%" height="15" fill="rgb(215,5,19)" fg:x="69384" fg:w="25"/><text x="65.5256%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="65.2756%" y="773" width="0.0235%" height="15" fill="rgb(226,215,51)" fg:x="69384" fg:w="25"/><text x="65.5256%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (24 samples, 0.02%)</title><rect x="65.2765%" y="757" width="0.0226%" height="15" fill="rgb(225,56,26)" fg:x="69385" fg:w="24"/><text x="65.5265%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (24 samples, 0.02%)</title><rect x="65.2765%" y="741" width="0.0226%" height="15" fill="rgb(222,75,29)" fg:x="69385" fg:w="24"/><text x="65.5265%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (24 samples, 0.02%)</title><rect x="65.2765%" y="725" width="0.0226%" height="15" fill="rgb(236,139,6)" fg:x="69385" fg:w="24"/><text x="65.5265%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (18 samples, 0.02%)</title><rect x="65.2991%" y="789" width="0.0169%" height="15" fill="rgb(223,137,36)" fg:x="69409" fg:w="18"/><text x="65.5491%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="65.2991%" y="773" width="0.0169%" height="15" fill="rgb(226,99,2)" fg:x="69409" fg:w="18"/><text x="65.5491%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (45 samples, 0.04%)</title><rect x="65.3696%" y="709" width="0.0423%" height="15" fill="rgb(206,133,23)" fg:x="69484" fg:w="45"/><text x="65.6196%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (45 samples, 0.04%)</title><rect x="65.3696%" y="693" width="0.0423%" height="15" fill="rgb(243,173,15)" fg:x="69484" fg:w="45"/><text x="65.6196%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (57 samples, 0.05%)</title><rect x="65.4120%" y="709" width="0.0536%" height="15" fill="rgb(228,69,28)" fg:x="69529" fg:w="57"/><text x="65.6620%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (57 samples, 0.05%)</title><rect x="65.4120%" y="693" width="0.0536%" height="15" fill="rgb(212,51,22)" fg:x="69529" fg:w="57"/><text x="65.6620%" y="703.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (57 samples, 0.05%)</title><rect x="65.4120%" y="677" width="0.0536%" height="15" fill="rgb(227,113,0)" fg:x="69529" fg:w="57"/><text x="65.6620%" y="687.50"></text></g><g><title>__GI___pthread_cond_signal (57 samples, 0.05%)</title><rect x="65.4120%" y="661" width="0.0536%" height="15" fill="rgb(252,84,27)" fg:x="69529" fg:w="57"/><text x="65.6620%" y="671.50"></text></g><g><title>parking::Unparker::unpark (178 samples, 0.17%)</title><rect x="65.3282%" y="741" width="0.1675%" height="15" fill="rgb(223,145,39)" fg:x="69440" fg:w="178"/><text x="65.5782%" y="751.50"></text></g><g><title>parking::Inner::unpark (144 samples, 0.14%)</title><rect x="65.3602%" y="725" width="0.1355%" height="15" fill="rgb(239,219,30)" fg:x="69474" fg:w="144"/><text x="65.6102%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.03%)</title><rect x="65.4656%" y="709" width="0.0301%" height="15" fill="rgb(224,196,39)" fg:x="69586" fg:w="32"/><text x="65.7156%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (32 samples, 0.03%)</title><rect x="65.4656%" y="693" width="0.0301%" height="15" fill="rgb(205,35,43)" fg:x="69586" fg:w="32"/><text x="65.7156%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (32 samples, 0.03%)</title><rect x="65.4656%" y="677" width="0.0301%" height="15" fill="rgb(228,201,21)" fg:x="69586" fg:w="32"/><text x="65.7156%" y="687.50"></text></g><g><title>___pthread_mutex_lock (32 samples, 0.03%)</title><rect x="65.4656%" y="661" width="0.0301%" height="15" fill="rgb(237,118,16)" fg:x="69586" fg:w="32"/><text x="65.7156%" y="671.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (197 samples, 0.19%)</title><rect x="65.3170%" y="757" width="0.1853%" height="15" fill="rgb(241,17,19)" fg:x="69428" fg:w="197"/><text x="65.5670%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (235 samples, 0.22%)</title><rect x="65.3160%" y="789" width="0.2211%" height="15" fill="rgb(214,10,25)" fg:x="69427" fg:w="235"/><text x="65.5660%" y="799.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (235 samples, 0.22%)</title><rect x="65.3160%" y="773" width="0.2211%" height="15" fill="rgb(238,37,29)" fg:x="69427" fg:w="235"/><text x="65.5660%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (37 samples, 0.03%)</title><rect x="65.5023%" y="757" width="0.0348%" height="15" fill="rgb(253,83,25)" fg:x="69625" fg:w="37"/><text x="65.7523%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="65.5023%" y="741" width="0.0348%" height="15" fill="rgb(234,192,12)" fg:x="69625" fg:w="37"/><text x="65.7523%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (37 samples, 0.03%)</title><rect x="65.5023%" y="725" width="0.0348%" height="15" fill="rgb(241,216,45)" fg:x="69625" fg:w="37"/><text x="65.7523%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (37 samples, 0.03%)</title><rect x="65.5023%" y="709" width="0.0348%" height="15" fill="rgb(242,22,33)" fg:x="69625" fg:w="37"/><text x="65.7523%" y="719.50"></text></g><g><title>async_executor::State::notify (334 samples, 0.31%)</title><rect x="65.2652%" y="805" width="0.3142%" height="15" fill="rgb(231,105,49)" fg:x="69373" fg:w="334"/><text x="65.5152%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (45 samples, 0.04%)</title><rect x="65.5371%" y="789" width="0.0423%" height="15" fill="rgb(218,204,15)" fg:x="69662" fg:w="45"/><text x="65.7871%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (44 samples, 0.04%)</title><rect x="65.5380%" y="773" width="0.0414%" height="15" fill="rgb(235,138,41)" fg:x="69663" fg:w="44"/><text x="65.7880%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (36 samples, 0.03%)</title><rect x="65.5456%" y="757" width="0.0339%" height="15" fill="rgb(246,0,9)" fg:x="69671" fg:w="36"/><text x="65.7956%" y="767.50"></text></g><g><title>___pthread_mutex_lock (36 samples, 0.03%)</title><rect x="65.5456%" y="741" width="0.0339%" height="15" fill="rgb(210,74,4)" fg:x="69671" fg:w="36"/><text x="65.7956%" y="751.50"></text></g><g><title>__GI___lll_lock_wait (11 samples, 0.01%)</title><rect x="65.5691%" y="725" width="0.0103%" height="15" fill="rgb(250,60,41)" fg:x="69696" fg:w="11"/><text x="65.8191%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (41 samples, 0.04%)</title><rect x="65.5879%" y="773" width="0.0386%" height="15" fill="rgb(220,115,12)" fg:x="69716" fg:w="41"/><text x="65.8379%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (41 samples, 0.04%)</title><rect x="65.5879%" y="757" width="0.0386%" height="15" fill="rgb(237,100,13)" fg:x="69716" fg:w="41"/><text x="65.8379%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (14 samples, 0.01%)</title><rect x="65.6274%" y="773" width="0.0132%" height="15" fill="rgb(213,55,26)" fg:x="69758" fg:w="14"/><text x="65.8774%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_or (14 samples, 0.01%)</title><rect x="65.6274%" y="757" width="0.0132%" height="15" fill="rgb(216,17,4)" fg:x="69758" fg:w="14"/><text x="65.8774%" y="767.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (401 samples, 0.38%)</title><rect x="65.2652%" y="821" width="0.3773%" height="15" fill="rgb(220,153,47)" fg:x="69373" fg:w="401"/><text x="65.5152%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (67 samples, 0.06%)</title><rect x="65.5794%" y="805" width="0.0630%" height="15" fill="rgb(215,131,9)" fg:x="69707" fg:w="67"/><text x="65.8294%" y="815.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (62 samples, 0.06%)</title><rect x="65.5841%" y="789" width="0.0583%" height="15" fill="rgb(233,46,42)" fg:x="69712" fg:w="62"/><text x="65.8341%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (46 samples, 0.04%)</title><rect x="65.6425%" y="821" width="0.0433%" height="15" fill="rgb(226,86,7)" fg:x="69774" fg:w="46"/><text x="65.8925%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (46 samples, 0.04%)</title><rect x="65.6425%" y="805" width="0.0433%" height="15" fill="rgb(239,226,21)" fg:x="69774" fg:w="46"/><text x="65.8925%" y="815.50"></text></g><g><title>event_listener::List::notify (482 samples, 0.45%)</title><rect x="65.2379%" y="885" width="0.4535%" height="15" fill="rgb(244,137,22)" fg:x="69344" fg:w="482"/><text x="65.4879%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (474 samples, 0.45%)</title><rect x="65.2455%" y="869" width="0.4459%" height="15" fill="rgb(211,139,35)" fg:x="69352" fg:w="474"/><text x="65.4955%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (473 samples, 0.44%)</title><rect x="65.2464%" y="853" width="0.4450%" height="15" fill="rgb(214,62,50)" fg:x="69353" fg:w="473"/><text x="65.4964%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (453 samples, 0.43%)</title><rect x="65.2652%" y="837" width="0.4262%" height="15" fill="rgb(212,113,44)" fg:x="69373" fg:w="453"/><text x="65.5152%" y="847.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,368 samples, 2.23%)</title><rect x="64.1109%" y="917" width="2.2278%" height="15" fill="rgb(226,150,43)" fg:x="68146" fg:w="2368"/><text x="64.3609%" y="927.50">a..</text></g><g><title>event_listener::Event::notify (1,372 samples, 1.29%)</title><rect x="65.0479%" y="901" width="1.2908%" height="15" fill="rgb(250,71,37)" fg:x="69142" fg:w="1372"/><text x="65.2979%" y="911.50"></text></g><g><title>event_listener::full_fence (688 samples, 0.65%)</title><rect x="65.6914%" y="885" width="0.6473%" height="15" fill="rgb(219,76,19)" fg:x="69826" fg:w="688"/><text x="65.9414%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (681 samples, 0.64%)</title><rect x="65.6980%" y="869" width="0.6407%" height="15" fill="rgb(250,39,11)" fg:x="69833" fg:w="681"/><text x="65.9480%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (681 samples, 0.64%)</title><rect x="65.6980%" y="853" width="0.6407%" height="15" fill="rgb(230,64,31)" fg:x="69833" fg:w="681"/><text x="65.9480%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (27 samples, 0.03%)</title><rect x="66.3386%" y="917" width="0.0254%" height="15" fill="rgb(208,222,23)" fg:x="70514" fg:w="27"/><text x="66.5886%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (12 samples, 0.01%)</title><rect x="66.3640%" y="917" width="0.0113%" height="15" fill="rgb(227,125,18)" fg:x="70541" fg:w="12"/><text x="66.6140%" y="927.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="66.3640%" y="901" width="0.0113%" height="15" fill="rgb(234,210,9)" fg:x="70541" fg:w="12"/><text x="66.6140%" y="911.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,687 samples, 2.53%)</title><rect x="64.0450%" y="933" width="2.5279%" height="15" fill="rgb(217,127,24)" fg:x="68076" fg:w="2687"/><text x="64.2950%" y="943.50">&lt;a..</text></g><g><title>event_listener::Event::notify (201 samples, 0.19%)</title><rect x="66.3838%" y="917" width="0.1891%" height="15" fill="rgb(239,141,48)" fg:x="70562" fg:w="201"/><text x="66.6338%" y="927.50"></text></g><g><title>event_listener::full_fence (190 samples, 0.18%)</title><rect x="66.3942%" y="901" width="0.1787%" height="15" fill="rgb(227,109,8)" fg:x="70573" fg:w="190"/><text x="66.6442%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (184 samples, 0.17%)</title><rect x="66.3998%" y="885" width="0.1731%" height="15" fill="rgb(235,184,23)" fg:x="70579" fg:w="184"/><text x="66.6498%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (184 samples, 0.17%)</title><rect x="66.3998%" y="869" width="0.1731%" height="15" fill="rgb(227,226,48)" fg:x="70579" fg:w="184"/><text x="66.6498%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,883 samples, 2.71%)</title><rect x="63.8757%" y="997" width="2.7123%" height="15" fill="rgb(206,150,11)" fg:x="67896" fg:w="2883"/><text x="64.1257%" y="1007.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (2,883 samples, 2.71%)</title><rect x="63.8757%" y="981" width="2.7123%" height="15" fill="rgb(254,2,33)" fg:x="67896" fg:w="2883"/><text x="64.1257%" y="991.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,883 samples, 2.71%)</title><rect x="63.8757%" y="965" width="2.7123%" height="15" fill="rgb(243,160,20)" fg:x="67896" fg:w="2883"/><text x="64.1257%" y="975.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,769 samples, 2.61%)</title><rect x="63.9829%" y="949" width="2.6050%" height="15" fill="rgb(218,208,30)" fg:x="68010" fg:w="2769"/><text x="64.2329%" y="959.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="66.5729%" y="933" width="0.0151%" height="15" fill="rgb(224,120,49)" fg:x="70763" fg:w="16"/><text x="66.8229%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="67.3095%" y="981" width="0.0122%" height="15" fill="rgb(246,12,2)" fg:x="71546" fg:w="13"/><text x="67.5595%" y="991.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="67.3218%" y="981" width="0.0188%" height="15" fill="rgb(236,117,3)" fg:x="71559" fg:w="20"/><text x="67.5718%" y="991.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="67.3406%" y="981" width="0.0141%" height="15" fill="rgb(216,128,52)" fg:x="71579" fg:w="15"/><text x="67.5906%" y="991.50"></text></g><g><title>aligned_size (21 samples, 0.02%)</title><rect x="67.9352%" y="709" width="0.0198%" height="15" fill="rgb(246,145,19)" fg:x="72211" fg:w="21"/><text x="68.1852%" y="719.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="67.9577%" y="677" width="0.0113%" height="15" fill="rgb(222,11,46)" fg:x="72235" fg:w="12"/><text x="68.2077%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="67.9850%" y="661" width="0.0414%" height="15" fill="rgb(245,82,36)" fg:x="72264" fg:w="44"/><text x="68.2350%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (44 samples, 0.04%)</title><rect x="67.9850%" y="645" width="0.0414%" height="15" fill="rgb(250,73,51)" fg:x="72264" fg:w="44"/><text x="68.2350%" y="655.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (38 samples, 0.04%)</title><rect x="67.9907%" y="629" width="0.0357%" height="15" fill="rgb(221,189,23)" fg:x="72270" fg:w="38"/><text x="68.2407%" y="639.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (31 samples, 0.03%)</title><rect x="67.9973%" y="613" width="0.0292%" height="15" fill="rgb(210,33,7)" fg:x="72277" fg:w="31"/><text x="68.2473%" y="623.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (31 samples, 0.03%)</title><rect x="67.9973%" y="597" width="0.0292%" height="15" fill="rgb(210,107,22)" fg:x="72277" fg:w="31"/><text x="68.2473%" y="607.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (31 samples, 0.03%)</title><rect x="67.9973%" y="581" width="0.0292%" height="15" fill="rgb(222,116,37)" fg:x="72277" fg:w="31"/><text x="68.2473%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (301 samples, 0.28%)</title><rect x="67.9135%" y="821" width="0.2832%" height="15" fill="rgb(254,17,48)" fg:x="72188" fg:w="301"/><text x="68.1635%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (301 samples, 0.28%)</title><rect x="67.9135%" y="805" width="0.2832%" height="15" fill="rgb(224,36,32)" fg:x="72188" fg:w="301"/><text x="68.1635%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (301 samples, 0.28%)</title><rect x="67.9135%" y="789" width="0.2832%" height="15" fill="rgb(232,90,46)" fg:x="72188" fg:w="301"/><text x="68.1635%" y="799.50"></text></g><g><title>alloc::alloc::alloc (293 samples, 0.28%)</title><rect x="67.9210%" y="773" width="0.2757%" height="15" fill="rgb(241,66,40)" fg:x="72196" fg:w="293"/><text x="68.1710%" y="783.50"></text></g><g><title>__rg_alloc (293 samples, 0.28%)</title><rect x="67.9210%" y="757" width="0.2757%" height="15" fill="rgb(249,184,29)" fg:x="72196" fg:w="293"/><text x="68.1710%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (293 samples, 0.28%)</title><rect x="67.9210%" y="741" width="0.2757%" height="15" fill="rgb(231,181,1)" fg:x="72196" fg:w="293"/><text x="68.1710%" y="751.50"></text></g><g><title>rust_alloc (278 samples, 0.26%)</title><rect x="67.9352%" y="725" width="0.2615%" height="15" fill="rgb(224,94,2)" fg:x="72211" fg:w="278"/><text x="68.1852%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (255 samples, 0.24%)</title><rect x="67.9568%" y="709" width="0.2399%" height="15" fill="rgb(229,170,15)" fg:x="72234" fg:w="255"/><text x="68.2068%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (254 samples, 0.24%)</title><rect x="67.9577%" y="693" width="0.2390%" height="15" fill="rgb(240,127,35)" fg:x="72235" fg:w="254"/><text x="68.2077%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (233 samples, 0.22%)</title><rect x="67.9775%" y="677" width="0.2192%" height="15" fill="rgb(248,196,34)" fg:x="72256" fg:w="233"/><text x="68.2275%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::take (169 samples, 0.16%)</title><rect x="68.0377%" y="661" width="0.1590%" height="15" fill="rgb(236,137,7)" fg:x="72320" fg:w="169"/><text x="68.2877%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (169 samples, 0.16%)</title><rect x="68.0377%" y="645" width="0.1590%" height="15" fill="rgb(235,127,16)" fg:x="72320" fg:w="169"/><text x="68.2877%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (302 samples, 0.28%)</title><rect x="67.9135%" y="853" width="0.2841%" height="15" fill="rgb(250,192,54)" fg:x="72188" fg:w="302"/><text x="68.1635%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (302 samples, 0.28%)</title><rect x="67.9135%" y="837" width="0.2841%" height="15" fill="rgb(218,98,20)" fg:x="72188" fg:w="302"/><text x="68.1635%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (366 samples, 0.34%)</title><rect x="67.9116%" y="949" width="0.3443%" height="15" fill="rgb(230,176,47)" fg:x="72186" fg:w="366"/><text x="68.1616%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (364 samples, 0.34%)</title><rect x="67.9135%" y="933" width="0.3424%" height="15" fill="rgb(244,2,33)" fg:x="72188" fg:w="364"/><text x="68.1635%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (364 samples, 0.34%)</title><rect x="67.9135%" y="917" width="0.3424%" height="15" fill="rgb(231,100,17)" fg:x="72188" fg:w="364"/><text x="68.1635%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (364 samples, 0.34%)</title><rect x="67.9135%" y="901" width="0.3424%" height="15" fill="rgb(245,23,12)" fg:x="72188" fg:w="364"/><text x="68.1635%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (364 samples, 0.34%)</title><rect x="67.9135%" y="885" width="0.3424%" height="15" fill="rgb(249,55,22)" fg:x="72188" fg:w="364"/><text x="68.1635%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (364 samples, 0.34%)</title><rect x="67.9135%" y="869" width="0.3424%" height="15" fill="rgb(207,134,9)" fg:x="72188" fg:w="364"/><text x="68.1635%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (62 samples, 0.06%)</title><rect x="68.1976%" y="853" width="0.0583%" height="15" fill="rgb(218,134,0)" fg:x="72490" fg:w="62"/><text x="68.4476%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62 samples, 0.06%)</title><rect x="68.1976%" y="837" width="0.0583%" height="15" fill="rgb(213,212,33)" fg:x="72490" fg:w="62"/><text x="68.4476%" y="847.50"></text></g><g><title>__memcpy_avx_unaligned_erms (50 samples, 0.05%)</title><rect x="68.2089%" y="821" width="0.0470%" height="15" fill="rgb(252,106,18)" fg:x="72502" fg:w="50"/><text x="68.4589%" y="831.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (387 samples, 0.36%)</title><rect x="67.8938%" y="965" width="0.3641%" height="15" fill="rgb(208,126,42)" fg:x="72167" fg:w="387"/><text x="68.1438%" y="975.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (17 samples, 0.02%)</title><rect x="68.2691%" y="949" width="0.0160%" height="15" fill="rgb(246,175,29)" fg:x="72566" fg:w="17"/><text x="68.5191%" y="959.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="68.3030%" y="613" width="0.0103%" height="15" fill="rgb(215,13,50)" fg:x="72602" fg:w="11"/><text x="68.5530%" y="623.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="68.3134%" y="581" width="0.0103%" height="15" fill="rgb(216,172,15)" fg:x="72613" fg:w="11"/><text x="68.5634%" y="591.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="68.3134%" y="565" width="0.0103%" height="15" fill="rgb(212,103,13)" fg:x="72613" fg:w="11"/><text x="68.5634%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="68.3237%" y="533" width="0.0113%" height="15" fill="rgb(231,171,36)" fg:x="72624" fg:w="12"/><text x="68.5737%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.06%)</title><rect x="68.3237%" y="565" width="0.0583%" height="15" fill="rgb(250,123,20)" fg:x="72624" fg:w="62"/><text x="68.5737%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (62 samples, 0.06%)</title><rect x="68.3237%" y="549" width="0.0583%" height="15" fill="rgb(212,53,50)" fg:x="72624" fg:w="62"/><text x="68.5737%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (50 samples, 0.05%)</title><rect x="68.3350%" y="533" width="0.0470%" height="15" fill="rgb(243,54,12)" fg:x="72636" fg:w="50"/><text x="68.5850%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (39 samples, 0.04%)</title><rect x="68.3453%" y="517" width="0.0367%" height="15" fill="rgb(234,101,34)" fg:x="72647" fg:w="39"/><text x="68.5953%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (39 samples, 0.04%)</title><rect x="68.3453%" y="501" width="0.0367%" height="15" fill="rgb(254,67,22)" fg:x="72647" fg:w="39"/><text x="68.5953%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (39 samples, 0.04%)</title><rect x="68.3453%" y="485" width="0.0367%" height="15" fill="rgb(250,35,47)" fg:x="72647" fg:w="39"/><text x="68.5953%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.02%)</title><rect x="68.3830%" y="565" width="0.0151%" height="15" fill="rgb(226,126,38)" fg:x="72687" fg:w="16"/><text x="68.6330%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.02%)</title><rect x="68.3830%" y="549" width="0.0151%" height="15" fill="rgb(216,138,53)" fg:x="72687" fg:w="16"/><text x="68.6330%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.02%)</title><rect x="68.3830%" y="533" width="0.0151%" height="15" fill="rgb(246,199,43)" fg:x="72687" fg:w="16"/><text x="68.6330%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.02%)</title><rect x="68.3830%" y="517" width="0.0151%" height="15" fill="rgb(232,125,11)" fg:x="72687" fg:w="16"/><text x="68.6330%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (16 samples, 0.02%)</title><rect x="68.3830%" y="501" width="0.0151%" height="15" fill="rgb(218,219,45)" fg:x="72687" fg:w="16"/><text x="68.6330%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (188 samples, 0.18%)</title><rect x="68.3134%" y="613" width="0.1769%" height="15" fill="rgb(216,102,54)" fg:x="72613" fg:w="188"/><text x="68.5634%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (188 samples, 0.18%)</title><rect x="68.3134%" y="597" width="0.1769%" height="15" fill="rgb(250,228,7)" fg:x="72613" fg:w="188"/><text x="68.5634%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (177 samples, 0.17%)</title><rect x="68.3237%" y="581" width="0.1665%" height="15" fill="rgb(226,125,25)" fg:x="72624" fg:w="177"/><text x="68.5737%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (96 samples, 0.09%)</title><rect x="68.3999%" y="565" width="0.0903%" height="15" fill="rgb(224,165,27)" fg:x="72705" fg:w="96"/><text x="68.6499%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (96 samples, 0.09%)</title><rect x="68.3999%" y="549" width="0.0903%" height="15" fill="rgb(233,86,3)" fg:x="72705" fg:w="96"/><text x="68.6499%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (224 samples, 0.21%)</title><rect x="68.2870%" y="757" width="0.2107%" height="15" fill="rgb(228,116,20)" fg:x="72585" fg:w="224"/><text x="68.5370%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (224 samples, 0.21%)</title><rect x="68.2870%" y="741" width="0.2107%" height="15" fill="rgb(209,192,17)" fg:x="72585" fg:w="224"/><text x="68.5370%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (215 samples, 0.20%)</title><rect x="68.2955%" y="725" width="0.2023%" height="15" fill="rgb(224,88,34)" fg:x="72594" fg:w="215"/><text x="68.5455%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (215 samples, 0.20%)</title><rect x="68.2955%" y="709" width="0.2023%" height="15" fill="rgb(233,38,6)" fg:x="72594" fg:w="215"/><text x="68.5455%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (215 samples, 0.20%)</title><rect x="68.2955%" y="693" width="0.2023%" height="15" fill="rgb(212,59,30)" fg:x="72594" fg:w="215"/><text x="68.5455%" y="703.50"></text></g><g><title>alloc::alloc::alloc (213 samples, 0.20%)</title><rect x="68.2974%" y="677" width="0.2004%" height="15" fill="rgb(213,80,3)" fg:x="72596" fg:w="213"/><text x="68.5474%" y="687.50"></text></g><g><title>__rg_alloc (213 samples, 0.20%)</title><rect x="68.2974%" y="661" width="0.2004%" height="15" fill="rgb(251,178,7)" fg:x="72596" fg:w="213"/><text x="68.5474%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (213 samples, 0.20%)</title><rect x="68.2974%" y="645" width="0.2004%" height="15" fill="rgb(213,154,26)" fg:x="72596" fg:w="213"/><text x="68.5474%" y="655.50"></text></g><g><title>rust_alloc (207 samples, 0.19%)</title><rect x="68.3030%" y="629" width="0.1947%" height="15" fill="rgb(238,165,49)" fg:x="72602" fg:w="207"/><text x="68.5530%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (279 samples, 0.26%)</title><rect x="68.2851%" y="869" width="0.2625%" height="15" fill="rgb(248,91,46)" fg:x="72583" fg:w="279"/><text x="68.5351%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (279 samples, 0.26%)</title><rect x="68.2851%" y="853" width="0.2625%" height="15" fill="rgb(244,21,52)" fg:x="72583" fg:w="279"/><text x="68.5351%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (277 samples, 0.26%)</title><rect x="68.2870%" y="837" width="0.2606%" height="15" fill="rgb(247,122,20)" fg:x="72585" fg:w="277"/><text x="68.5370%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (277 samples, 0.26%)</title><rect x="68.2870%" y="821" width="0.2606%" height="15" fill="rgb(218,27,9)" fg:x="72585" fg:w="277"/><text x="68.5370%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (277 samples, 0.26%)</title><rect x="68.2870%" y="805" width="0.2606%" height="15" fill="rgb(246,7,6)" fg:x="72585" fg:w="277"/><text x="68.5370%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (277 samples, 0.26%)</title><rect x="68.2870%" y="789" width="0.2606%" height="15" fill="rgb(227,135,54)" fg:x="72585" fg:w="277"/><text x="68.5370%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (277 samples, 0.26%)</title><rect x="68.2870%" y="773" width="0.2606%" height="15" fill="rgb(247,14,11)" fg:x="72585" fg:w="277"/><text x="68.5370%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (53 samples, 0.05%)</title><rect x="68.4978%" y="757" width="0.0499%" height="15" fill="rgb(206,149,34)" fg:x="72809" fg:w="53"/><text x="68.7478%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (46 samples, 0.04%)</title><rect x="68.5043%" y="741" width="0.0433%" height="15" fill="rgb(227,228,4)" fg:x="72816" fg:w="46"/><text x="68.7543%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (36 samples, 0.03%)</title><rect x="68.5137%" y="725" width="0.0339%" height="15" fill="rgb(238,218,28)" fg:x="72826" fg:w="36"/><text x="68.7637%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.04%)</title><rect x="68.5843%" y="677" width="0.0357%" height="15" fill="rgb(252,86,40)" fg:x="72901" fg:w="38"/><text x="68.8343%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (38 samples, 0.04%)</title><rect x="68.5843%" y="661" width="0.0357%" height="15" fill="rgb(251,225,11)" fg:x="72901" fg:w="38"/><text x="68.8343%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (31 samples, 0.03%)</title><rect x="68.5909%" y="645" width="0.0292%" height="15" fill="rgb(206,46,49)" fg:x="72908" fg:w="31"/><text x="68.8409%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (21 samples, 0.02%)</title><rect x="68.6003%" y="629" width="0.0198%" height="15" fill="rgb(245,128,24)" fg:x="72918" fg:w="21"/><text x="68.8503%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (21 samples, 0.02%)</title><rect x="68.6003%" y="613" width="0.0198%" height="15" fill="rgb(219,177,34)" fg:x="72918" fg:w="21"/><text x="68.8503%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (21 samples, 0.02%)</title><rect x="68.6003%" y="597" width="0.0198%" height="15" fill="rgb(218,60,48)" fg:x="72918" fg:w="21"/><text x="68.8503%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (159 samples, 0.15%)</title><rect x="68.5758%" y="725" width="0.1496%" height="15" fill="rgb(221,11,5)" fg:x="72892" fg:w="159"/><text x="68.8258%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (152 samples, 0.14%)</title><rect x="68.5824%" y="709" width="0.1430%" height="15" fill="rgb(220,148,13)" fg:x="72899" fg:w="152"/><text x="68.8324%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (152 samples, 0.14%)</title><rect x="68.5824%" y="693" width="0.1430%" height="15" fill="rgb(210,16,3)" fg:x="72899" fg:w="152"/><text x="68.8324%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (104 samples, 0.10%)</title><rect x="68.6276%" y="677" width="0.0978%" height="15" fill="rgb(236,80,2)" fg:x="72947" fg:w="104"/><text x="68.8776%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (104 samples, 0.10%)</title><rect x="68.6276%" y="661" width="0.0978%" height="15" fill="rgb(239,129,19)" fg:x="72947" fg:w="104"/><text x="68.8776%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (185 samples, 0.17%)</title><rect x="68.5627%" y="821" width="0.1740%" height="15" fill="rgb(220,106,35)" fg:x="72878" fg:w="185"/><text x="68.8127%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (185 samples, 0.17%)</title><rect x="68.5627%" y="805" width="0.1740%" height="15" fill="rgb(252,139,45)" fg:x="72878" fg:w="185"/><text x="68.8127%" y="815.50"></text></g><g><title>alloc::alloc::alloc (180 samples, 0.17%)</title><rect x="68.5674%" y="789" width="0.1693%" height="15" fill="rgb(229,8,36)" fg:x="72883" fg:w="180"/><text x="68.8174%" y="799.50"></text></g><g><title>__rg_alloc (180 samples, 0.17%)</title><rect x="68.5674%" y="773" width="0.1693%" height="15" fill="rgb(230,126,33)" fg:x="72883" fg:w="180"/><text x="68.8174%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (180 samples, 0.17%)</title><rect x="68.5674%" y="757" width="0.1693%" height="15" fill="rgb(239,140,21)" fg:x="72883" fg:w="180"/><text x="68.8174%" y="767.50"></text></g><g><title>rust_alloc (171 samples, 0.16%)</title><rect x="68.5758%" y="741" width="0.1609%" height="15" fill="rgb(254,104,9)" fg:x="72892" fg:w="171"/><text x="68.8258%" y="751.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="68.7254%" y="725" width="0.0113%" height="15" fill="rgb(239,52,14)" fg:x="73051" fg:w="12"/><text x="68.9754%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (199 samples, 0.19%)</title><rect x="68.5561%" y="869" width="0.1872%" height="15" fill="rgb(208,227,44)" fg:x="72871" fg:w="199"/><text x="68.8061%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (192 samples, 0.18%)</title><rect x="68.5627%" y="853" width="0.1806%" height="15" fill="rgb(246,18,19)" fg:x="72878" fg:w="192"/><text x="68.8127%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (192 samples, 0.18%)</title><rect x="68.5627%" y="837" width="0.1806%" height="15" fill="rgb(235,228,25)" fg:x="72878" fg:w="192"/><text x="68.8127%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (498 samples, 0.47%)</title><rect x="68.2851%" y="885" width="0.4685%" height="15" fill="rgb(240,156,20)" fg:x="72583" fg:w="498"/><text x="68.5351%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (11 samples, 0.01%)</title><rect x="68.7433%" y="869" width="0.0103%" height="15" fill="rgb(224,8,20)" fg:x="73070" fg:w="11"/><text x="68.9933%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (544 samples, 0.51%)</title><rect x="68.2579%" y="965" width="0.5118%" height="15" fill="rgb(214,12,52)" fg:x="72554" fg:w="544"/><text x="68.5079%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (515 samples, 0.48%)</title><rect x="68.2851%" y="949" width="0.4845%" height="15" fill="rgb(211,220,47)" fg:x="72583" fg:w="515"/><text x="68.5351%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (515 samples, 0.48%)</title><rect x="68.2851%" y="933" width="0.4845%" height="15" fill="rgb(250,173,5)" fg:x="72583" fg:w="515"/><text x="68.5351%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (515 samples, 0.48%)</title><rect x="68.2851%" y="917" width="0.4845%" height="15" fill="rgb(250,125,52)" fg:x="72583" fg:w="515"/><text x="68.5351%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (515 samples, 0.48%)</title><rect x="68.2851%" y="901" width="0.4845%" height="15" fill="rgb(209,133,18)" fg:x="72583" fg:w="515"/><text x="68.5351%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (17 samples, 0.02%)</title><rect x="68.7536%" y="885" width="0.0160%" height="15" fill="rgb(216,173,22)" fg:x="73081" fg:w="17"/><text x="69.0036%" y="895.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,510 samples, 1.42%)</title><rect x="67.3547%" y="981" width="1.4206%" height="15" fill="rgb(205,3,22)" fg:x="71594" fg:w="1510"/><text x="67.6047%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (161 samples, 0.15%)</title><rect x="68.7753%" y="981" width="0.1515%" height="15" fill="rgb(248,22,20)" fg:x="73104" fg:w="161"/><text x="69.0253%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (345 samples, 0.32%)</title><rect x="68.9296%" y="981" width="0.3246%" height="15" fill="rgb(233,6,29)" fg:x="73268" fg:w="345"/><text x="69.1796%" y="991.50"></text></g><g><title>core::ptr::write (320 samples, 0.30%)</title><rect x="68.9531%" y="965" width="0.3011%" height="15" fill="rgb(240,22,54)" fg:x="73293" fg:w="320"/><text x="69.2031%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (312 samples, 0.29%)</title><rect x="68.9606%" y="949" width="0.2935%" height="15" fill="rgb(231,133,32)" fg:x="73301" fg:w="312"/><text x="69.2106%" y="959.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="69.2748%" y="821" width="0.0122%" height="15" fill="rgb(248,193,4)" fg:x="73635" fg:w="13"/><text x="69.5248%" y="831.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="69.3200%" y="661" width="0.0141%" height="15" fill="rgb(211,178,46)" fg:x="73683" fg:w="15"/><text x="69.5700%" y="671.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="69.3200%" y="645" width="0.0141%" height="15" fill="rgb(224,5,42)" fg:x="73683" fg:w="15"/><text x="69.5700%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (44 samples, 0.04%)</title><rect x="69.3068%" y="709" width="0.0414%" height="15" fill="rgb(239,176,25)" fg:x="73669" fg:w="44"/><text x="69.5568%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (44 samples, 0.04%)</title><rect x="69.3068%" y="693" width="0.0414%" height="15" fill="rgb(245,187,50)" fg:x="73669" fg:w="44"/><text x="69.5568%" y="703.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (36 samples, 0.03%)</title><rect x="69.3144%" y="677" width="0.0339%" height="15" fill="rgb(248,24,15)" fg:x="73677" fg:w="36"/><text x="69.5644%" y="687.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="69.3341%" y="661" width="0.0141%" height="15" fill="rgb(205,166,13)" fg:x="73698" fg:w="15"/><text x="69.5841%" y="671.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="69.3341%" y="645" width="0.0141%" height="15" fill="rgb(208,114,23)" fg:x="73698" fg:w="15"/><text x="69.5841%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (53 samples, 0.05%)</title><rect x="69.3068%" y="725" width="0.0499%" height="15" fill="rgb(239,127,18)" fg:x="73669" fg:w="53"/><text x="69.5568%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (77 samples, 0.07%)</title><rect x="69.2984%" y="741" width="0.0724%" height="15" fill="rgb(219,154,28)" fg:x="73660" fg:w="77"/><text x="69.5484%" y="751.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="69.3595%" y="725" width="0.0113%" height="15" fill="rgb(225,157,23)" fg:x="73725" fg:w="12"/><text x="69.6095%" y="735.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="69.3595%" y="709" width="0.0113%" height="15" fill="rgb(219,8,6)" fg:x="73725" fg:w="12"/><text x="69.6095%" y="719.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="69.3595%" y="693" width="0.0113%" height="15" fill="rgb(212,47,6)" fg:x="73725" fg:w="12"/><text x="69.6095%" y="703.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="69.3595%" y="677" width="0.0113%" height="15" fill="rgb(224,190,4)" fg:x="73725" fg:w="12"/><text x="69.6095%" y="687.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (66 samples, 0.06%)</title><rect x="69.4047%" y="725" width="0.0621%" height="15" fill="rgb(239,183,29)" fg:x="73773" fg:w="66"/><text x="69.6547%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (556 samples, 0.52%)</title><rect x="69.2984%" y="773" width="0.5231%" height="15" fill="rgb(213,57,7)" fg:x="73660" fg:w="556"/><text x="69.5484%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (556 samples, 0.52%)</title><rect x="69.2984%" y="757" width="0.5231%" height="15" fill="rgb(216,148,1)" fg:x="73660" fg:w="556"/><text x="69.5484%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (479 samples, 0.45%)</title><rect x="69.3708%" y="741" width="0.4506%" height="15" fill="rgb(236,182,29)" fg:x="73737" fg:w="479"/><text x="69.6208%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (377 samples, 0.35%)</title><rect x="69.4668%" y="725" width="0.3547%" height="15" fill="rgb(244,120,48)" fg:x="73839" fg:w="377"/><text x="69.7168%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (377 samples, 0.35%)</title><rect x="69.4668%" y="709" width="0.3547%" height="15" fill="rgb(206,71,34)" fg:x="73839" fg:w="377"/><text x="69.7168%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (377 samples, 0.35%)</title><rect x="69.4668%" y="693" width="0.3547%" height="15" fill="rgb(242,32,6)" fg:x="73839" fg:w="377"/><text x="69.7168%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (13 samples, 0.01%)</title><rect x="69.8233%" y="741" width="0.0122%" height="15" fill="rgb(241,35,3)" fg:x="74218" fg:w="13"/><text x="70.0733%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (13 samples, 0.01%)</title><rect x="69.8233%" y="725" width="0.0122%" height="15" fill="rgb(222,62,19)" fg:x="74218" fg:w="13"/><text x="70.0733%" y="735.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="69.8233%" y="709" width="0.0122%" height="15" fill="rgb(223,110,41)" fg:x="74218" fg:w="13"/><text x="70.0733%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (35 samples, 0.03%)</title><rect x="69.8356%" y="741" width="0.0329%" height="15" fill="rgb(208,224,4)" fg:x="74231" fg:w="35"/><text x="70.0856%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (35 samples, 0.03%)</title><rect x="69.8356%" y="725" width="0.0329%" height="15" fill="rgb(241,137,19)" fg:x="74231" fg:w="35"/><text x="70.0856%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (56 samples, 0.05%)</title><rect x="69.8214%" y="773" width="0.0527%" height="15" fill="rgb(244,24,17)" fg:x="74216" fg:w="56"/><text x="70.0714%" y="783.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (54 samples, 0.05%)</title><rect x="69.8233%" y="757" width="0.0508%" height="15" fill="rgb(245,178,49)" fg:x="74218" fg:w="54"/><text x="70.0733%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (742 samples, 0.70%)</title><rect x="69.2880%" y="821" width="0.6981%" height="15" fill="rgb(219,160,38)" fg:x="73649" fg:w="742"/><text x="69.5380%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (742 samples, 0.70%)</title><rect x="69.2880%" y="805" width="0.6981%" height="15" fill="rgb(228,137,14)" fg:x="73649" fg:w="742"/><text x="69.5380%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (734 samples, 0.69%)</title><rect x="69.2955%" y="789" width="0.6905%" height="15" fill="rgb(237,134,11)" fg:x="73657" fg:w="734"/><text x="69.5455%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::take (112 samples, 0.11%)</title><rect x="69.8807%" y="773" width="0.1054%" height="15" fill="rgb(211,126,44)" fg:x="74279" fg:w="112"/><text x="70.1307%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (112 samples, 0.11%)</title><rect x="69.8807%" y="757" width="0.1054%" height="15" fill="rgb(226,171,33)" fg:x="74279" fg:w="112"/><text x="70.1307%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (774 samples, 0.73%)</title><rect x="69.2598%" y="917" width="0.7282%" height="15" fill="rgb(253,99,13)" fg:x="73619" fg:w="774"/><text x="69.5098%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (774 samples, 0.73%)</title><rect x="69.2598%" y="901" width="0.7282%" height="15" fill="rgb(244,48,7)" fg:x="73619" fg:w="774"/><text x="69.5098%" y="911.50"></text></g><g><title>alloc::alloc::alloc (768 samples, 0.72%)</title><rect x="69.2654%" y="885" width="0.7225%" height="15" fill="rgb(244,217,54)" fg:x="73625" fg:w="768"/><text x="69.5154%" y="895.50"></text></g><g><title>__rg_alloc (768 samples, 0.72%)</title><rect x="69.2654%" y="869" width="0.7225%" height="15" fill="rgb(224,15,18)" fg:x="73625" fg:w="768"/><text x="69.5154%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (768 samples, 0.72%)</title><rect x="69.2654%" y="853" width="0.7225%" height="15" fill="rgb(244,99,12)" fg:x="73625" fg:w="768"/><text x="69.5154%" y="863.50"></text></g><g><title>rust_alloc (758 samples, 0.71%)</title><rect x="69.2748%" y="837" width="0.7131%" height="15" fill="rgb(233,226,8)" fg:x="73635" fg:w="758"/><text x="69.5248%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (794 samples, 0.75%)</title><rect x="69.2541%" y="981" width="0.7470%" height="15" fill="rgb(229,211,3)" fg:x="73613" fg:w="794"/><text x="69.5041%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (794 samples, 0.75%)</title><rect x="69.2541%" y="965" width="0.7470%" height="15" fill="rgb(216,140,21)" fg:x="73613" fg:w="794"/><text x="69.5041%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (788 samples, 0.74%)</title><rect x="69.2598%" y="949" width="0.7413%" height="15" fill="rgb(234,122,30)" fg:x="73619" fg:w="788"/><text x="69.5098%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (788 samples, 0.74%)</title><rect x="69.2598%" y="933" width="0.7413%" height="15" fill="rgb(236,25,46)" fg:x="73619" fg:w="788"/><text x="69.5098%" y="943.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="70.0040%" y="805" width="0.0141%" height="15" fill="rgb(217,52,54)" fg:x="74410" fg:w="15"/><text x="70.2540%" y="815.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="70.0284%" y="725" width="0.0103%" height="15" fill="rgb(222,29,26)" fg:x="74436" fg:w="11"/><text x="70.2784%" y="735.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (25 samples, 0.02%)</title><rect x="70.0632%" y="677" width="0.0235%" height="15" fill="rgb(216,177,29)" fg:x="74473" fg:w="25"/><text x="70.3132%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="70.0698%" y="661" width="0.0169%" height="15" fill="rgb(247,136,51)" fg:x="74480" fg:w="18"/><text x="70.3198%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (51 samples, 0.05%)</title><rect x="70.0482%" y="725" width="0.0480%" height="15" fill="rgb(231,47,47)" fg:x="74457" fg:w="51"/><text x="70.2982%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (51 samples, 0.05%)</title><rect x="70.0482%" y="709" width="0.0480%" height="15" fill="rgb(211,192,36)" fg:x="74457" fg:w="51"/><text x="70.2982%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (51 samples, 0.05%)</title><rect x="70.0482%" y="693" width="0.0480%" height="15" fill="rgb(229,156,32)" fg:x="74457" fg:w="51"/><text x="70.2982%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (76 samples, 0.07%)</title><rect x="70.0275%" y="757" width="0.0715%" height="15" fill="rgb(248,213,20)" fg:x="74435" fg:w="76"/><text x="70.2775%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (76 samples, 0.07%)</title><rect x="70.0275%" y="741" width="0.0715%" height="15" fill="rgb(217,64,7)" fg:x="74435" fg:w="76"/><text x="70.2775%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (81 samples, 0.08%)</title><rect x="70.0275%" y="789" width="0.0762%" height="15" fill="rgb(232,142,8)" fg:x="74435" fg:w="81"/><text x="70.2775%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (81 samples, 0.08%)</title><rect x="70.0275%" y="773" width="0.0762%" height="15" fill="rgb(224,92,44)" fg:x="74435" fg:w="81"/><text x="70.2775%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (97 samples, 0.09%)</title><rect x="70.0190%" y="805" width="0.0913%" height="15" fill="rgb(214,169,17)" fg:x="74426" fg:w="97"/><text x="70.2690%" y="815.50"></text></g><g><title>rust_dealloc (121 samples, 0.11%)</title><rect x="70.0030%" y="821" width="0.1138%" height="15" fill="rgb(210,59,37)" fg:x="74409" fg:w="121"/><text x="70.2530%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (126 samples, 0.12%)</title><rect x="70.0011%" y="885" width="0.1185%" height="15" fill="rgb(214,116,48)" fg:x="74407" fg:w="126"/><text x="70.2511%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (126 samples, 0.12%)</title><rect x="70.0011%" y="869" width="0.1185%" height="15" fill="rgb(244,191,6)" fg:x="74407" fg:w="126"/><text x="70.2511%" y="879.50"></text></g><g><title>__rg_dealloc (126 samples, 0.12%)</title><rect x="70.0011%" y="853" width="0.1185%" height="15" fill="rgb(241,50,52)" fg:x="74407" fg:w="126"/><text x="70.2511%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (126 samples, 0.12%)</title><rect x="70.0011%" y="837" width="0.1185%" height="15" fill="rgb(236,75,39)" fg:x="74407" fg:w="126"/><text x="70.2511%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (130 samples, 0.12%)</title><rect x="70.0011%" y="949" width="0.1223%" height="15" fill="rgb(236,99,0)" fg:x="74407" fg:w="130"/><text x="70.2511%" y="959.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (130 samples, 0.12%)</title><rect x="70.0011%" y="933" width="0.1223%" height="15" fill="rgb(207,202,15)" fg:x="74407" fg:w="130"/><text x="70.2511%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (130 samples, 0.12%)</title><rect x="70.0011%" y="917" width="0.1223%" height="15" fill="rgb(233,207,14)" fg:x="74407" fg:w="130"/><text x="70.2511%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (130 samples, 0.12%)</title><rect x="70.0011%" y="901" width="0.1223%" height="15" fill="rgb(226,27,51)" fg:x="74407" fg:w="130"/><text x="70.2511%" y="911.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (132 samples, 0.12%)</title><rect x="70.0011%" y="965" width="0.1242%" height="15" fill="rgb(206,104,42)" fg:x="74407" fg:w="132"/><text x="70.2511%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (133 samples, 0.13%)</title><rect x="70.0011%" y="981" width="0.1251%" height="15" fill="rgb(212,225,4)" fg:x="74407" fg:w="133"/><text x="70.2511%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (26 samples, 0.02%)</title><rect x="70.1394%" y="917" width="0.0245%" height="15" fill="rgb(233,96,42)" fg:x="74554" fg:w="26"/><text x="70.3894%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (26 samples, 0.02%)</title><rect x="70.1394%" y="901" width="0.0245%" height="15" fill="rgb(229,21,32)" fg:x="74554" fg:w="26"/><text x="70.3894%" y="911.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="70.1507%" y="885" width="0.0132%" height="15" fill="rgb(226,216,24)" fg:x="74566" fg:w="14"/><text x="70.4007%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="70.1507%" y="869" width="0.0132%" height="15" fill="rgb(221,163,17)" fg:x="74566" fg:w="14"/><text x="70.4007%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="70.1507%" y="853" width="0.0132%" height="15" fill="rgb(216,216,42)" fg:x="74566" fg:w="14"/><text x="70.4007%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="70.1507%" y="837" width="0.0132%" height="15" fill="rgb(240,118,7)" fg:x="74566" fg:w="14"/><text x="70.4007%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="70.1507%" y="821" width="0.0132%" height="15" fill="rgb(221,67,37)" fg:x="74566" fg:w="14"/><text x="70.4007%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="70.1507%" y="805" width="0.0132%" height="15" fill="rgb(241,32,44)" fg:x="74566" fg:w="14"/><text x="70.4007%" y="815.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="70.1507%" y="789" width="0.0132%" height="15" fill="rgb(235,204,43)" fg:x="74566" fg:w="14"/><text x="70.4007%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="70.1507%" y="773" width="0.0132%" height="15" fill="rgb(213,116,10)" fg:x="74566" fg:w="14"/><text x="70.4007%" y="783.50"></text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="70.1968%" y="821" width="0.0160%" height="15" fill="rgb(239,15,48)" fg:x="74615" fg:w="17"/><text x="70.4468%" y="831.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (51 samples, 0.05%)</title><rect x="70.2693%" y="773" width="0.0480%" height="15" fill="rgb(207,123,36)" fg:x="74692" fg:w="51"/><text x="70.5193%" y="783.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (48 samples, 0.05%)</title><rect x="70.2721%" y="757" width="0.0452%" height="15" fill="rgb(209,103,30)" fg:x="74695" fg:w="48"/><text x="70.5221%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (116 samples, 0.11%)</title><rect x="70.2250%" y="821" width="0.1091%" height="15" fill="rgb(238,100,19)" fg:x="74645" fg:w="116"/><text x="70.4750%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (116 samples, 0.11%)</title><rect x="70.2250%" y="805" width="0.1091%" height="15" fill="rgb(244,30,14)" fg:x="74645" fg:w="116"/><text x="70.4750%" y="815.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (115 samples, 0.11%)</title><rect x="70.2260%" y="789" width="0.1082%" height="15" fill="rgb(249,174,6)" fg:x="74646" fg:w="115"/><text x="70.4760%" y="799.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (18 samples, 0.02%)</title><rect x="70.3172%" y="773" width="0.0169%" height="15" fill="rgb(235,213,41)" fg:x="74743" fg:w="18"/><text x="70.5672%" y="783.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (18 samples, 0.02%)</title><rect x="70.3172%" y="757" width="0.0169%" height="15" fill="rgb(213,118,6)" fg:x="74743" fg:w="18"/><text x="70.5672%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (169 samples, 0.16%)</title><rect x="70.1949%" y="853" width="0.1590%" height="15" fill="rgb(235,44,51)" fg:x="74613" fg:w="169"/><text x="70.4449%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (169 samples, 0.16%)</title><rect x="70.1949%" y="837" width="0.1590%" height="15" fill="rgb(217,9,53)" fg:x="74613" fg:w="169"/><text x="70.4449%" y="847.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (21 samples, 0.02%)</title><rect x="70.3342%" y="821" width="0.0198%" height="15" fill="rgb(237,172,34)" fg:x="74761" fg:w="21"/><text x="70.5842%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (178 samples, 0.17%)</title><rect x="70.1949%" y="885" width="0.1675%" height="15" fill="rgb(206,206,11)" fg:x="74613" fg:w="178"/><text x="70.4449%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (178 samples, 0.17%)</title><rect x="70.1949%" y="869" width="0.1675%" height="15" fill="rgb(214,149,29)" fg:x="74613" fg:w="178"/><text x="70.4449%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (201 samples, 0.19%)</title><rect x="70.1780%" y="901" width="0.1891%" height="15" fill="rgb(208,123,3)" fg:x="74595" fg:w="201"/><text x="70.4280%" y="911.50"></text></g><g><title>rust_dealloc (225 samples, 0.21%)</title><rect x="70.1639%" y="917" width="0.2117%" height="15" fill="rgb(229,126,4)" fg:x="74580" fg:w="225"/><text x="70.4139%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (272 samples, 0.26%)</title><rect x="70.1263%" y="965" width="0.2559%" height="15" fill="rgb(222,92,36)" fg:x="74540" fg:w="272"/><text x="70.3763%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (272 samples, 0.26%)</title><rect x="70.1263%" y="949" width="0.2559%" height="15" fill="rgb(216,39,41)" fg:x="74540" fg:w="272"/><text x="70.3763%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (272 samples, 0.26%)</title><rect x="70.1263%" y="933" width="0.2559%" height="15" fill="rgb(253,127,28)" fg:x="74540" fg:w="272"/><text x="70.3763%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (14 samples, 0.01%)</title><rect x="70.4348%" y="789" width="0.0132%" height="15" fill="rgb(249,152,51)" fg:x="74868" fg:w="14"/><text x="70.6848%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (14 samples, 0.01%)</title><rect x="70.4348%" y="773" width="0.0132%" height="15" fill="rgb(209,123,42)" fg:x="74868" fg:w="14"/><text x="70.6848%" y="783.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="70.4358%" y="757" width="0.0122%" height="15" fill="rgb(241,118,22)" fg:x="74869" fg:w="13"/><text x="70.6858%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="70.4358%" y="741" width="0.0122%" height="15" fill="rgb(208,25,7)" fg:x="74869" fg:w="13"/><text x="70.6858%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="70.4358%" y="725" width="0.0122%" height="15" fill="rgb(243,144,39)" fg:x="74869" fg:w="13"/><text x="70.6858%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="70.4358%" y="709" width="0.0122%" height="15" fill="rgb(250,50,5)" fg:x="74869" fg:w="13"/><text x="70.6858%" y="719.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (29 samples, 0.03%)</title><rect x="70.4903%" y="645" width="0.0273%" height="15" fill="rgb(207,67,11)" fg:x="74927" fg:w="29"/><text x="70.7403%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (26 samples, 0.02%)</title><rect x="70.4932%" y="629" width="0.0245%" height="15" fill="rgb(245,204,40)" fg:x="74930" fg:w="26"/><text x="70.7432%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (47 samples, 0.04%)</title><rect x="70.4790%" y="693" width="0.0442%" height="15" fill="rgb(238,228,24)" fg:x="74915" fg:w="47"/><text x="70.7290%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (47 samples, 0.04%)</title><rect x="70.4790%" y="677" width="0.0442%" height="15" fill="rgb(217,116,22)" fg:x="74915" fg:w="47"/><text x="70.7290%" y="687.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (47 samples, 0.04%)</title><rect x="70.4790%" y="661" width="0.0442%" height="15" fill="rgb(234,98,12)" fg:x="74915" fg:w="47"/><text x="70.7290%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (68 samples, 0.06%)</title><rect x="70.4631%" y="725" width="0.0640%" height="15" fill="rgb(242,170,50)" fg:x="74898" fg:w="68"/><text x="70.7131%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (68 samples, 0.06%)</title><rect x="70.4631%" y="709" width="0.0640%" height="15" fill="rgb(235,7,5)" fg:x="74898" fg:w="68"/><text x="70.7131%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (71 samples, 0.07%)</title><rect x="70.4631%" y="757" width="0.0668%" height="15" fill="rgb(241,114,28)" fg:x="74898" fg:w="71"/><text x="70.7131%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (71 samples, 0.07%)</title><rect x="70.4631%" y="741" width="0.0668%" height="15" fill="rgb(246,112,42)" fg:x="74898" fg:w="71"/><text x="70.7131%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (88 samples, 0.08%)</title><rect x="70.4546%" y="773" width="0.0828%" height="15" fill="rgb(248,228,14)" fg:x="74889" fg:w="88"/><text x="70.7046%" y="783.50"></text></g><g><title>rust_dealloc (102 samples, 0.10%)</title><rect x="70.4480%" y="789" width="0.0960%" height="15" fill="rgb(208,133,18)" fg:x="74882" fg:w="102"/><text x="70.6980%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (138 samples, 0.13%)</title><rect x="70.4226%" y="805" width="0.1298%" height="15" fill="rgb(207,35,49)" fg:x="74855" fg:w="138"/><text x="70.6726%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (159 samples, 0.15%)</title><rect x="70.4038%" y="869" width="0.1496%" height="15" fill="rgb(205,68,36)" fg:x="74835" fg:w="159"/><text x="70.6538%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (156 samples, 0.15%)</title><rect x="70.4066%" y="853" width="0.1468%" height="15" fill="rgb(245,62,40)" fg:x="74838" fg:w="156"/><text x="70.6566%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (139 samples, 0.13%)</title><rect x="70.4226%" y="837" width="0.1308%" height="15" fill="rgb(228,27,24)" fg:x="74855" fg:w="139"/><text x="70.6726%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (139 samples, 0.13%)</title><rect x="70.4226%" y="821" width="0.1308%" height="15" fill="rgb(253,19,12)" fg:x="74855" fg:w="139"/><text x="70.6726%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (186 samples, 0.17%)</title><rect x="70.3859%" y="933" width="0.1750%" height="15" fill="rgb(232,28,20)" fg:x="74816" fg:w="186"/><text x="70.6359%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (177 samples, 0.17%)</title><rect x="70.3944%" y="917" width="0.1665%" height="15" fill="rgb(218,35,51)" fg:x="74825" fg:w="177"/><text x="70.6444%" y="927.50"></text></g><g><title>core::mem::drop (167 samples, 0.16%)</title><rect x="70.4038%" y="901" width="0.1571%" height="15" fill="rgb(212,90,40)" fg:x="74835" fg:w="167"/><text x="70.6538%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (167 samples, 0.16%)</title><rect x="70.4038%" y="885" width="0.1571%" height="15" fill="rgb(220,172,12)" fg:x="74835" fg:w="167"/><text x="70.6538%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="70.5825%" y="837" width="0.0292%" height="15" fill="rgb(226,159,20)" fg:x="75025" fg:w="31"/><text x="70.8325%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="70.5825%" y="821" width="0.0292%" height="15" fill="rgb(234,205,16)" fg:x="75025" fg:w="31"/><text x="70.8325%" y="831.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="70.5825%" y="805" width="0.0292%" height="15" fill="rgb(207,9,39)" fg:x="75025" fg:w="31"/><text x="70.8325%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (53 samples, 0.05%)</title><rect x="70.5741%" y="869" width="0.0499%" height="15" fill="rgb(249,143,15)" fg:x="75016" fg:w="53"/><text x="70.8241%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (53 samples, 0.05%)</title><rect x="70.5741%" y="853" width="0.0499%" height="15" fill="rgb(253,133,29)" fg:x="75016" fg:w="53"/><text x="70.8241%" y="863.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="70.6117%" y="837" width="0.0122%" height="15" fill="rgb(221,187,0)" fg:x="75056" fg:w="13"/><text x="70.8617%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (69 samples, 0.06%)</title><rect x="70.5665%" y="917" width="0.0649%" height="15" fill="rgb(205,204,26)" fg:x="75008" fg:w="69"/><text x="70.8165%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (61 samples, 0.06%)</title><rect x="70.5741%" y="901" width="0.0574%" height="15" fill="rgb(224,68,54)" fg:x="75016" fg:w="61"/><text x="70.8241%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (61 samples, 0.06%)</title><rect x="70.5741%" y="885" width="0.0574%" height="15" fill="rgb(209,67,4)" fg:x="75016" fg:w="61"/><text x="70.8241%" y="895.50"></text></g><g><title>rust_dealloc (76 samples, 0.07%)</title><rect x="70.5609%" y="933" width="0.0715%" height="15" fill="rgb(228,229,18)" fg:x="75002" fg:w="76"/><text x="70.8109%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (268 samples, 0.25%)</title><rect x="70.3821%" y="949" width="0.2521%" height="15" fill="rgb(231,89,13)" fg:x="74812" fg:w="268"/><text x="70.6321%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (553 samples, 0.52%)</title><rect x="70.1263%" y="981" width="0.5203%" height="15" fill="rgb(210,182,18)" fg:x="74540" fg:w="553"/><text x="70.3763%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (281 samples, 0.26%)</title><rect x="70.3821%" y="965" width="0.2644%" height="15" fill="rgb(240,105,2)" fg:x="74812" fg:w="281"/><text x="70.6321%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (13 samples, 0.01%)</title><rect x="70.6343%" y="949" width="0.0122%" height="15" fill="rgb(207,170,50)" fg:x="75080" fg:w="13"/><text x="70.8843%" y="959.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (31 samples, 0.03%)</title><rect x="70.6465%" y="981" width="0.0292%" height="15" fill="rgb(232,133,24)" fg:x="75093" fg:w="31"/><text x="70.8965%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (15 samples, 0.01%)</title><rect x="70.6757%" y="981" width="0.0141%" height="15" fill="rgb(235,166,27)" fg:x="75124" fg:w="15"/><text x="70.9257%" y="991.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,252 samples, 6.82%)</title><rect x="63.8757%" y="1045" width="6.8226%" height="15" fill="rgb(209,19,13)" fg:x="67896" fg:w="7252"/><text x="64.1257%" y="1055.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,252 samples, 6.82%)</title><rect x="63.8757%" y="1029" width="6.8226%" height="15" fill="rgb(226,79,39)" fg:x="67896" fg:w="7252"/><text x="64.1257%" y="1039.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (7,252 samples, 6.82%)</title><rect x="63.8757%" y="1013" width="6.8226%" height="15" fill="rgb(222,163,10)" fg:x="67896" fg:w="7252"/><text x="64.1257%" y="1023.50">tremor_ru..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,369 samples, 4.11%)</title><rect x="66.5880%" y="997" width="4.1103%" height="15" fill="rgb(214,44,19)" fg:x="70779" fg:w="4369"/><text x="66.8380%" y="1007.50">trem..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="70.7603%" y="933" width="0.0132%" height="15" fill="rgb(210,217,13)" fg:x="75214" fg:w="14"/><text x="71.0103%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (13 samples, 0.01%)</title><rect x="70.7735%" y="933" width="0.0122%" height="15" fill="rgb(237,61,54)" fg:x="75228" fg:w="13"/><text x="71.0235%" y="943.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="70.7735%" y="917" width="0.0122%" height="15" fill="rgb(226,184,24)" fg:x="75228" fg:w="13"/><text x="71.0235%" y="927.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="70.7735%" y="901" width="0.0122%" height="15" fill="rgb(223,226,4)" fg:x="75228" fg:w="13"/><text x="71.0235%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (195 samples, 0.18%)</title><rect x="70.8469%" y="917" width="0.1835%" height="15" fill="rgb(210,26,41)" fg:x="75306" fg:w="195"/><text x="71.0969%" y="927.50"></text></g><g><title>core::mem::replace (195 samples, 0.18%)</title><rect x="70.8469%" y="901" width="0.1835%" height="15" fill="rgb(220,221,6)" fg:x="75306" fg:w="195"/><text x="71.0969%" y="911.50"></text></g><g><title>core::ptr::read (195 samples, 0.18%)</title><rect x="70.8469%" y="885" width="0.1835%" height="15" fill="rgb(225,89,49)" fg:x="75306" fg:w="195"/><text x="71.0969%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (313 samples, 0.29%)</title><rect x="70.7857%" y="933" width="0.2945%" height="15" fill="rgb(218,70,45)" fg:x="75241" fg:w="313"/><text x="71.0357%" y="943.50"></text></g><g><title>core::mem::drop (53 samples, 0.05%)</title><rect x="71.0303%" y="917" width="0.0499%" height="15" fill="rgb(238,166,21)" fg:x="75501" fg:w="53"/><text x="71.2803%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (53 samples, 0.05%)</title><rect x="71.0303%" y="901" width="0.0499%" height="15" fill="rgb(224,141,44)" fg:x="75501" fg:w="53"/><text x="71.2803%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (260 samples, 0.24%)</title><rect x="71.1113%" y="853" width="0.2446%" height="15" fill="rgb(230,12,49)" fg:x="75587" fg:w="260"/><text x="71.3613%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (302 samples, 0.28%)</title><rect x="71.0802%" y="933" width="0.2841%" height="15" fill="rgb(212,174,12)" fg:x="75554" fg:w="302"/><text x="71.3302%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (294 samples, 0.28%)</title><rect x="71.0877%" y="917" width="0.2766%" height="15" fill="rgb(246,67,9)" fg:x="75562" fg:w="294"/><text x="71.3377%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (294 samples, 0.28%)</title><rect x="71.0877%" y="901" width="0.2766%" height="15" fill="rgb(239,35,23)" fg:x="75562" fg:w="294"/><text x="71.3377%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (279 samples, 0.26%)</title><rect x="71.1018%" y="885" width="0.2625%" height="15" fill="rgb(211,167,0)" fg:x="75577" fg:w="279"/><text x="71.3518%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (269 samples, 0.25%)</title><rect x="71.1113%" y="869" width="0.2531%" height="15" fill="rgb(225,119,45)" fg:x="75587" fg:w="269"/><text x="71.3613%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (31 samples, 0.03%)</title><rect x="71.3831%" y="885" width="0.0292%" height="15" fill="rgb(210,162,6)" fg:x="75876" fg:w="31"/><text x="71.6331%" y="895.50"></text></g><g><title>core::task::wake::Waker::will_wake (60 samples, 0.06%)</title><rect x="71.3662%" y="933" width="0.0564%" height="15" fill="rgb(208,118,35)" fg:x="75858" fg:w="60"/><text x="71.6162%" y="943.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (60 samples, 0.06%)</title><rect x="71.3662%" y="917" width="0.0564%" height="15" fill="rgb(239,4,53)" fg:x="75858" fg:w="60"/><text x="71.6162%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (42 samples, 0.04%)</title><rect x="71.3831%" y="901" width="0.0395%" height="15" fill="rgb(213,130,21)" fg:x="75876" fg:w="42"/><text x="71.6331%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="71.4123%" y="885" width="0.0103%" height="15" fill="rgb(235,148,0)" fg:x="75907" fg:w="11"/><text x="71.6623%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,645 samples, 1.55%)</title><rect x="70.6983%" y="1029" width="1.5476%" height="15" fill="rgb(244,224,18)" fg:x="75148" fg:w="1645"/><text x="70.9483%" y="1039.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,645 samples, 1.55%)</title><rect x="70.6983%" y="1013" width="1.5476%" height="15" fill="rgb(211,214,4)" fg:x="75148" fg:w="1645"/><text x="70.9483%" y="1023.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,645 samples, 1.55%)</title><rect x="70.6983%" y="997" width="1.5476%" height="15" fill="rgb(206,119,25)" fg:x="75148" fg:w="1645"/><text x="70.9483%" y="1007.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,645 samples, 1.55%)</title><rect x="70.6983%" y="981" width="1.5476%" height="15" fill="rgb(243,93,47)" fg:x="75148" fg:w="1645"/><text x="70.9483%" y="991.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,645 samples, 1.55%)</title><rect x="70.6983%" y="965" width="1.5476%" height="15" fill="rgb(224,194,6)" fg:x="75148" fg:w="1645"/><text x="70.9483%" y="975.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,645 samples, 1.55%)</title><rect x="70.6983%" y="949" width="1.5476%" height="15" fill="rgb(243,229,6)" fg:x="75148" fg:w="1645"/><text x="70.9483%" y="959.50"></text></g><g><title>event_listener::Inner::lock (875 samples, 0.82%)</title><rect x="71.4227%" y="933" width="0.8232%" height="15" fill="rgb(207,23,50)" fg:x="75918" fg:w="875"/><text x="71.6727%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (865 samples, 0.81%)</title><rect x="71.4321%" y="917" width="0.8138%" height="15" fill="rgb(253,192,32)" fg:x="75928" fg:w="865"/><text x="71.6821%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (856 samples, 0.81%)</title><rect x="71.4405%" y="901" width="0.8053%" height="15" fill="rgb(213,21,6)" fg:x="75937" fg:w="856"/><text x="71.6905%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (797 samples, 0.75%)</title><rect x="71.4960%" y="885" width="0.7498%" height="15" fill="rgb(243,151,13)" fg:x="75996" fg:w="797"/><text x="71.7460%" y="895.50"></text></g><g><title>___pthread_mutex_lock (797 samples, 0.75%)</title><rect x="71.4960%" y="869" width="0.7498%" height="15" fill="rgb(233,165,41)" fg:x="75996" fg:w="797"/><text x="71.7460%" y="879.50"></text></g><g><title>__memcpy_avx_unaligned_erms (266 samples, 0.25%)</title><rect x="72.2665%" y="981" width="0.2502%" height="15" fill="rgb(246,176,45)" fg:x="76815" fg:w="266"/><text x="72.5165%" y="991.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="72.6400%" y="965" width="0.0103%" height="15" fill="rgb(217,170,52)" fg:x="77212" fg:w="11"/><text x="72.8900%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (792 samples, 0.75%)</title><rect x="72.6504%" y="965" width="0.7451%" height="15" fill="rgb(214,203,54)" fg:x="77223" fg:w="792"/><text x="72.9004%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (22 samples, 0.02%)</title><rect x="73.3955%" y="949" width="0.0207%" height="15" fill="rgb(248,215,49)" fg:x="78015" fg:w="22"/><text x="73.6455%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14,548 samples, 13.69%)</title><rect x="59.7362%" y="1125" width="13.6866%" height="15" fill="rgb(208,46,10)" fg:x="63496" fg:w="14548"/><text x="59.9862%" y="1135.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14,548 samples, 13.69%)</title><rect x="59.7362%" y="1109" width="13.6866%" height="15" fill="rgb(254,5,31)" fg:x="63496" fg:w="14548"/><text x="59.9862%" y="1119.50">std::thread::local::L..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (14,548 samples, 13.69%)</title><rect x="59.7362%" y="1093" width="13.6866%" height="15" fill="rgb(222,104,33)" fg:x="63496" fg:w="14548"/><text x="59.9862%" y="1103.50">async_std::task::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (14,548 samples, 13.69%)</title><rect x="59.7362%" y="1077" width="13.6866%" height="15" fill="rgb(248,49,16)" fg:x="63496" fg:w="14548"/><text x="59.9862%" y="1087.50">&lt;async_std::task::bui..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,548 samples, 13.69%)</title><rect x="59.7362%" y="1061" width="13.6866%" height="15" fill="rgb(232,198,41)" fg:x="63496" fg:w="14548"/><text x="59.9862%" y="1071.50">&lt;core::future::from_g..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,896 samples, 2.72%)</title><rect x="70.6983%" y="1045" width="2.7245%" height="15" fill="rgb(214,125,3)" fg:x="75148" fg:w="2896"/><text x="70.9483%" y="1055.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,251 samples, 1.18%)</title><rect x="72.2458%" y="1029" width="1.1769%" height="15" fill="rgb(229,220,28)" fg:x="76793" fg:w="1251"/><text x="72.4958%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,251 samples, 1.18%)</title><rect x="72.2458%" y="1013" width="1.1769%" height="15" fill="rgb(222,64,37)" fg:x="76793" fg:w="1251"/><text x="72.4958%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,251 samples, 1.18%)</title><rect x="72.2458%" y="997" width="1.1769%" height="15" fill="rgb(249,184,13)" fg:x="76793" fg:w="1251"/><text x="72.4958%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (963 samples, 0.91%)</title><rect x="72.5168%" y="981" width="0.9060%" height="15" fill="rgb(252,176,6)" fg:x="77081" fg:w="963"/><text x="72.7668%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (29 samples, 0.03%)</title><rect x="73.3955%" y="965" width="0.0273%" height="15" fill="rgb(228,153,7)" fg:x="78015" fg:w="29"/><text x="73.6455%" y="975.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (17 samples, 0.02%)</title><rect x="73.4247%" y="1125" width="0.0160%" height="15" fill="rgb(242,193,5)" fg:x="78046" fg:w="17"/><text x="73.6747%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (23 samples, 0.02%)</title><rect x="73.4406%" y="1125" width="0.0216%" height="15" fill="rgb(232,140,9)" fg:x="78063" fg:w="23"/><text x="73.6906%" y="1135.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="74.0315%" y="1029" width="0.0113%" height="15" fill="rgb(213,222,16)" fg:x="78691" fg:w="12"/><text x="74.2815%" y="1039.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (12 samples, 0.01%)</title><rect x="74.0710%" y="933" width="0.0113%" height="15" fill="rgb(222,75,50)" fg:x="78733" fg:w="12"/><text x="74.3210%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (30 samples, 0.03%)</title><rect x="74.0559%" y="997" width="0.0282%" height="15" fill="rgb(205,180,2)" fg:x="78717" fg:w="30"/><text x="74.3059%" y="1007.50"></text></g><g><title>std::collections::hash::map::RandomState::new (30 samples, 0.03%)</title><rect x="74.0559%" y="981" width="0.0282%" height="15" fill="rgb(216,34,7)" fg:x="78717" fg:w="30"/><text x="74.3059%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (30 samples, 0.03%)</title><rect x="74.0559%" y="965" width="0.0282%" height="15" fill="rgb(253,16,32)" fg:x="78717" fg:w="30"/><text x="74.3059%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (30 samples, 0.03%)</title><rect x="74.0559%" y="949" width="0.0282%" height="15" fill="rgb(208,97,28)" fg:x="78717" fg:w="30"/><text x="74.3059%" y="959.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="74.1105%" y="773" width="0.0113%" height="15" fill="rgb(225,92,11)" fg:x="78775" fg:w="12"/><text x="74.3605%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="74.1274%" y="709" width="0.0113%" height="15" fill="rgb(243,38,12)" fg:x="78793" fg:w="12"/><text x="74.3774%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (16 samples, 0.02%)</title><rect x="74.1265%" y="725" width="0.0151%" height="15" fill="rgb(208,139,16)" fg:x="78792" fg:w="16"/><text x="74.3765%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="74.1265%" y="757" width="0.0612%" height="15" fill="rgb(227,24,9)" fg:x="78792" fg:w="65"/><text x="74.3765%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (65 samples, 0.06%)</title><rect x="74.1265%" y="741" width="0.0612%" height="15" fill="rgb(206,62,11)" fg:x="78792" fg:w="65"/><text x="74.3765%" y="751.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (49 samples, 0.05%)</title><rect x="74.1415%" y="725" width="0.0461%" height="15" fill="rgb(228,134,27)" fg:x="78808" fg:w="49"/><text x="74.3915%" y="735.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (40 samples, 0.04%)</title><rect x="74.1500%" y="709" width="0.0376%" height="15" fill="rgb(205,55,33)" fg:x="78817" fg:w="40"/><text x="74.4000%" y="719.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="74.1500%" y="693" width="0.0376%" height="15" fill="rgb(243,75,43)" fg:x="78817" fg:w="40"/><text x="74.4000%" y="703.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="74.1500%" y="677" width="0.0376%" height="15" fill="rgb(223,27,42)" fg:x="78817" fg:w="40"/><text x="74.4000%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (23 samples, 0.02%)</title><rect x="74.2083%" y="677" width="0.0216%" height="15" fill="rgb(232,189,33)" fg:x="78879" fg:w="23"/><text x="74.4583%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="74.2083%" y="661" width="0.0216%" height="15" fill="rgb(210,9,39)" fg:x="78879" fg:w="23"/><text x="74.4583%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="74.1914%" y="757" width="0.0395%" height="15" fill="rgb(242,85,26)" fg:x="78861" fg:w="42"/><text x="74.4414%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="74.1923%" y="741" width="0.0386%" height="15" fill="rgb(248,44,4)" fg:x="78862" fg:w="41"/><text x="74.4423%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="74.1923%" y="725" width="0.0386%" height="15" fill="rgb(250,96,46)" fg:x="78862" fg:w="41"/><text x="74.4423%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="74.1923%" y="709" width="0.0386%" height="15" fill="rgb(229,116,26)" fg:x="78862" fg:w="41"/><text x="74.4423%" y="719.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (41 samples, 0.04%)</title><rect x="74.1923%" y="693" width="0.0386%" height="15" fill="rgb(246,94,34)" fg:x="78862" fg:w="41"/><text x="74.4423%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (198 samples, 0.19%)</title><rect x="74.1105%" y="805" width="0.1863%" height="15" fill="rgb(251,73,21)" fg:x="78775" fg:w="198"/><text x="74.3605%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (198 samples, 0.19%)</title><rect x="74.1105%" y="789" width="0.1863%" height="15" fill="rgb(254,121,25)" fg:x="78775" fg:w="198"/><text x="74.3605%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (186 samples, 0.17%)</title><rect x="74.1218%" y="773" width="0.1750%" height="15" fill="rgb(215,161,49)" fg:x="78787" fg:w="186"/><text x="74.3718%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::take (69 samples, 0.06%)</title><rect x="74.2318%" y="757" width="0.0649%" height="15" fill="rgb(221,43,13)" fg:x="78904" fg:w="69"/><text x="74.4818%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (69 samples, 0.06%)</title><rect x="74.2318%" y="741" width="0.0649%" height="15" fill="rgb(249,5,37)" fg:x="78904" fg:w="69"/><text x="74.4818%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (232 samples, 0.22%)</title><rect x="74.0841%" y="933" width="0.2183%" height="15" fill="rgb(226,25,44)" fg:x="78747" fg:w="232"/><text x="74.3341%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (217 samples, 0.20%)</title><rect x="74.0983%" y="917" width="0.2042%" height="15" fill="rgb(238,189,16)" fg:x="78762" fg:w="217"/><text x="74.3483%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (216 samples, 0.20%)</title><rect x="74.0992%" y="901" width="0.2032%" height="15" fill="rgb(251,186,8)" fg:x="78763" fg:w="216"/><text x="74.3492%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (216 samples, 0.20%)</title><rect x="74.0992%" y="885" width="0.2032%" height="15" fill="rgb(254,34,31)" fg:x="78763" fg:w="216"/><text x="74.3492%" y="895.50"></text></g><g><title>alloc::alloc::alloc (216 samples, 0.20%)</title><rect x="74.0992%" y="869" width="0.2032%" height="15" fill="rgb(225,215,27)" fg:x="78763" fg:w="216"/><text x="74.3492%" y="879.50"></text></g><g><title>__rg_alloc (216 samples, 0.20%)</title><rect x="74.0992%" y="853" width="0.2032%" height="15" fill="rgb(221,192,48)" fg:x="78763" fg:w="216"/><text x="74.3492%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (216 samples, 0.20%)</title><rect x="74.0992%" y="837" width="0.2032%" height="15" fill="rgb(219,137,20)" fg:x="78763" fg:w="216"/><text x="74.3492%" y="847.50"></text></g><g><title>rust_alloc (209 samples, 0.20%)</title><rect x="74.1058%" y="821" width="0.1966%" height="15" fill="rgb(219,84,11)" fg:x="78770" fg:w="209"/><text x="74.3558%" y="831.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (279 samples, 0.26%)</title><rect x="74.0427%" y="1029" width="0.2625%" height="15" fill="rgb(224,10,23)" fg:x="78703" fg:w="279"/><text x="74.2927%" y="1039.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (265 samples, 0.25%)</title><rect x="74.0559%" y="1013" width="0.2493%" height="15" fill="rgb(248,22,39)" fg:x="78717" fg:w="265"/><text x="74.3059%" y="1023.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (235 samples, 0.22%)</title><rect x="74.0841%" y="997" width="0.2211%" height="15" fill="rgb(212,154,20)" fg:x="78747" fg:w="235"/><text x="74.3341%" y="1007.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (235 samples, 0.22%)</title><rect x="74.0841%" y="981" width="0.2211%" height="15" fill="rgb(236,199,50)" fg:x="78747" fg:w="235"/><text x="74.3341%" y="991.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (235 samples, 0.22%)</title><rect x="74.0841%" y="965" width="0.2211%" height="15" fill="rgb(211,9,17)" fg:x="78747" fg:w="235"/><text x="74.3341%" y="975.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (235 samples, 0.22%)</title><rect x="74.0841%" y="949" width="0.2211%" height="15" fill="rgb(243,216,36)" fg:x="78747" fg:w="235"/><text x="74.3341%" y="959.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="74.7493%" y="821" width="0.0141%" height="15" fill="rgb(250,2,10)" fg:x="79454" fg:w="15"/><text x="74.9993%" y="831.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="74.7737%" y="789" width="0.0103%" height="15" fill="rgb(226,50,48)" fg:x="79480" fg:w="11"/><text x="75.0237%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="74.7935%" y="709" width="0.0122%" height="15" fill="rgb(243,81,16)" fg:x="79501" fg:w="13"/><text x="75.0435%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="74.7935%" y="693" width="0.0122%" height="15" fill="rgb(250,14,2)" fg:x="79501" fg:w="13"/><text x="75.0435%" y="703.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="74.7954%" y="677" width="0.0103%" height="15" fill="rgb(233,135,29)" fg:x="79503" fg:w="11"/><text x="75.0454%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (14 samples, 0.01%)</title><rect x="74.7935%" y="725" width="0.0132%" height="15" fill="rgb(224,64,43)" fg:x="79501" fg:w="14"/><text x="75.0435%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (19 samples, 0.02%)</title><rect x="74.7916%" y="741" width="0.0179%" height="15" fill="rgb(238,84,13)" fg:x="79499" fg:w="19"/><text x="75.0416%" y="751.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="74.8151%" y="725" width="0.0103%" height="15" fill="rgb(253,48,26)" fg:x="79524" fg:w="11"/><text x="75.0651%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="74.7916%" y="773" width="0.0884%" height="15" fill="rgb(205,223,31)" fg:x="79499" fg:w="94"/><text x="75.0416%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (94 samples, 0.09%)</title><rect x="74.7916%" y="757" width="0.0884%" height="15" fill="rgb(221,41,32)" fg:x="79499" fg:w="94"/><text x="75.0416%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (75 samples, 0.07%)</title><rect x="74.8095%" y="741" width="0.0706%" height="15" fill="rgb(213,158,31)" fg:x="79518" fg:w="75"/><text x="75.0595%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (58 samples, 0.05%)</title><rect x="74.8255%" y="725" width="0.0546%" height="15" fill="rgb(245,126,43)" fg:x="79535" fg:w="58"/><text x="75.0755%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (58 samples, 0.05%)</title><rect x="74.8255%" y="709" width="0.0546%" height="15" fill="rgb(227,7,22)" fg:x="79535" fg:w="58"/><text x="75.0755%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (58 samples, 0.05%)</title><rect x="74.8255%" y="693" width="0.0546%" height="15" fill="rgb(252,90,44)" fg:x="79535" fg:w="58"/><text x="75.0755%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (293 samples, 0.28%)</title><rect x="74.7700%" y="821" width="0.2757%" height="15" fill="rgb(253,91,0)" fg:x="79476" fg:w="293"/><text x="75.0200%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (289 samples, 0.27%)</title><rect x="74.7737%" y="805" width="0.2719%" height="15" fill="rgb(252,175,49)" fg:x="79480" fg:w="289"/><text x="75.0237%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (278 samples, 0.26%)</title><rect x="74.7841%" y="789" width="0.2615%" height="15" fill="rgb(246,150,1)" fg:x="79491" fg:w="278"/><text x="75.0341%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::take (159 samples, 0.15%)</title><rect x="74.8960%" y="773" width="0.1496%" height="15" fill="rgb(241,192,25)" fg:x="79610" fg:w="159"/><text x="75.1460%" y="783.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (159 samples, 0.15%)</title><rect x="74.8960%" y="757" width="0.1496%" height="15" fill="rgb(239,187,11)" fg:x="79610" fg:w="159"/><text x="75.1460%" y="767.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (348 samples, 0.33%)</title><rect x="74.7248%" y="965" width="0.3274%" height="15" fill="rgb(218,202,51)" fg:x="79428" fg:w="348"/><text x="74.9748%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (348 samples, 0.33%)</title><rect x="74.7248%" y="949" width="0.3274%" height="15" fill="rgb(225,176,8)" fg:x="79428" fg:w="348"/><text x="74.9748%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (328 samples, 0.31%)</title><rect x="74.7436%" y="933" width="0.3086%" height="15" fill="rgb(219,122,41)" fg:x="79448" fg:w="328"/><text x="74.9936%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (328 samples, 0.31%)</title><rect x="74.7436%" y="917" width="0.3086%" height="15" fill="rgb(248,140,20)" fg:x="79448" fg:w="328"/><text x="74.9936%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (328 samples, 0.31%)</title><rect x="74.7436%" y="901" width="0.3086%" height="15" fill="rgb(245,41,37)" fg:x="79448" fg:w="328"/><text x="74.9936%" y="911.50"></text></g><g><title>alloc::alloc::alloc (323 samples, 0.30%)</title><rect x="74.7483%" y="885" width="0.3039%" height="15" fill="rgb(235,82,39)" fg:x="79453" fg:w="323"/><text x="74.9983%" y="895.50"></text></g><g><title>__rg_alloc (323 samples, 0.30%)</title><rect x="74.7483%" y="869" width="0.3039%" height="15" fill="rgb(230,108,42)" fg:x="79453" fg:w="323"/><text x="74.9983%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (323 samples, 0.30%)</title><rect x="74.7483%" y="853" width="0.3039%" height="15" fill="rgb(215,150,50)" fg:x="79453" fg:w="323"/><text x="74.9983%" y="863.50"></text></g><g><title>rust_alloc (322 samples, 0.30%)</title><rect x="74.7493%" y="837" width="0.3029%" height="15" fill="rgb(233,212,5)" fg:x="79454" fg:w="322"/><text x="74.9993%" y="847.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (15 samples, 0.01%)</title><rect x="75.0522%" y="869" width="0.0141%" height="15" fill="rgb(245,80,22)" fg:x="79776" fg:w="15"/><text x="75.3022%" y="879.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (19 samples, 0.02%)</title><rect x="75.0663%" y="853" width="0.0179%" height="15" fill="rgb(238,129,16)" fg:x="79791" fg:w="19"/><text x="75.3163%" y="863.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (36 samples, 0.03%)</title><rect x="75.0663%" y="869" width="0.0339%" height="15" fill="rgb(240,19,0)" fg:x="79791" fg:w="36"/><text x="75.3163%" y="879.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (17 samples, 0.02%)</title><rect x="75.0842%" y="853" width="0.0160%" height="15" fill="rgb(232,42,35)" fg:x="79810" fg:w="17"/><text x="75.3342%" y="863.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="75.0861%" y="837" width="0.0141%" height="15" fill="rgb(223,130,24)" fg:x="79812" fg:w="15"/><text x="75.3361%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (15 samples, 0.01%)</title><rect x="75.0861%" y="821" width="0.0141%" height="15" fill="rgb(237,16,22)" fg:x="79812" fg:w="15"/><text x="75.3361%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (150 samples, 0.14%)</title><rect x="75.0522%" y="933" width="0.1411%" height="15" fill="rgb(248,192,20)" fg:x="79776" fg:w="150"/><text x="75.3022%" y="943.50"></text></g><g><title>std::collections::hash::map::RandomState::new (150 samples, 0.14%)</title><rect x="75.0522%" y="917" width="0.1411%" height="15" fill="rgb(233,167,2)" fg:x="79776" fg:w="150"/><text x="75.3022%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (150 samples, 0.14%)</title><rect x="75.0522%" y="901" width="0.1411%" height="15" fill="rgb(252,71,44)" fg:x="79776" fg:w="150"/><text x="75.3022%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (150 samples, 0.14%)</title><rect x="75.0522%" y="885" width="0.1411%" height="15" fill="rgb(238,37,47)" fg:x="79776" fg:w="150"/><text x="75.3022%" y="895.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (99 samples, 0.09%)</title><rect x="75.1002%" y="869" width="0.0931%" height="15" fill="rgb(214,202,54)" fg:x="79827" fg:w="99"/><text x="75.3502%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (24 samples, 0.02%)</title><rect x="75.1708%" y="853" width="0.0226%" height="15" fill="rgb(254,165,40)" fg:x="79902" fg:w="24"/><text x="75.4208%" y="863.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="75.1933%" y="869" width="0.0113%" height="15" fill="rgb(246,173,38)" fg:x="79926" fg:w="12"/><text x="75.4433%" y="879.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="75.2921%" y="581" width="0.0179%" height="15" fill="rgb(215,3,27)" fg:x="80031" fg:w="19"/><text x="75.5421%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="75.2921%" y="565" width="0.0179%" height="15" fill="rgb(239,169,51)" fg:x="80031" fg:w="19"/><text x="75.5421%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="75.2846%" y="629" width="0.0376%" height="15" fill="rgb(212,5,25)" fg:x="80023" fg:w="40"/><text x="75.5346%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="75.2846%" y="613" width="0.0376%" height="15" fill="rgb(243,45,17)" fg:x="80023" fg:w="40"/><text x="75.5346%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (38 samples, 0.04%)</title><rect x="75.2865%" y="597" width="0.0357%" height="15" fill="rgb(242,97,9)" fg:x="80025" fg:w="38"/><text x="75.5365%" y="607.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="75.3100%" y="581" width="0.0122%" height="15" fill="rgb(228,71,31)" fg:x="80050" fg:w="13"/><text x="75.5600%" y="591.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="75.3100%" y="565" width="0.0122%" height="15" fill="rgb(252,184,16)" fg:x="80050" fg:w="13"/><text x="75.5600%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (45 samples, 0.04%)</title><rect x="75.2846%" y="645" width="0.0423%" height="15" fill="rgb(236,169,46)" fg:x="80023" fg:w="45"/><text x="75.5346%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (67 samples, 0.06%)</title><rect x="75.2752%" y="661" width="0.0630%" height="15" fill="rgb(207,17,47)" fg:x="80013" fg:w="67"/><text x="75.5252%" y="671.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (44 samples, 0.04%)</title><rect x="75.3646%" y="645" width="0.0414%" height="15" fill="rgb(206,201,28)" fg:x="80108" fg:w="44"/><text x="75.6146%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (372 samples, 0.35%)</title><rect x="75.2752%" y="693" width="0.3500%" height="15" fill="rgb(224,184,23)" fg:x="80013" fg:w="372"/><text x="75.5252%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (372 samples, 0.35%)</title><rect x="75.2752%" y="677" width="0.3500%" height="15" fill="rgb(208,139,48)" fg:x="80013" fg:w="372"/><text x="75.5252%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (305 samples, 0.29%)</title><rect x="75.3382%" y="661" width="0.2869%" height="15" fill="rgb(208,130,10)" fg:x="80080" fg:w="305"/><text x="75.5882%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (233 samples, 0.22%)</title><rect x="75.4059%" y="645" width="0.2192%" height="15" fill="rgb(211,213,45)" fg:x="80152" fg:w="233"/><text x="75.6559%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (233 samples, 0.22%)</title><rect x="75.4059%" y="629" width="0.2192%" height="15" fill="rgb(235,100,30)" fg:x="80152" fg:w="233"/><text x="75.6559%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (233 samples, 0.22%)</title><rect x="75.4059%" y="613" width="0.2192%" height="15" fill="rgb(206,144,31)" fg:x="80152" fg:w="233"/><text x="75.6559%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="75.6252%" y="693" width="0.0235%" height="15" fill="rgb(224,200,26)" fg:x="80385" fg:w="25"/><text x="75.8752%" y="703.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (22 samples, 0.02%)</title><rect x="75.6280%" y="677" width="0.0207%" height="15" fill="rgb(247,104,53)" fg:x="80388" fg:w="22"/><text x="75.8780%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="75.6487%" y="693" width="0.0207%" height="15" fill="rgb(220,14,17)" fg:x="80410" fg:w="22"/><text x="75.8987%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="75.6506%" y="677" width="0.0188%" height="15" fill="rgb(230,140,40)" fg:x="80412" fg:w="20"/><text x="75.9006%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="75.6506%" y="661" width="0.0188%" height="15" fill="rgb(229,2,41)" fg:x="80412" fg:w="20"/><text x="75.9006%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="75.6506%" y="645" width="0.0188%" height="15" fill="rgb(232,89,16)" fg:x="80412" fg:w="20"/><text x="75.9006%" y="655.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (20 samples, 0.02%)</title><rect x="75.6506%" y="629" width="0.0188%" height="15" fill="rgb(247,59,52)" fg:x="80412" fg:w="20"/><text x="75.9006%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (700 samples, 0.66%)</title><rect x="75.2535%" y="741" width="0.6586%" height="15" fill="rgb(226,110,21)" fg:x="79990" fg:w="700"/><text x="75.5035%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (696 samples, 0.65%)</title><rect x="75.2573%" y="725" width="0.6548%" height="15" fill="rgb(224,176,43)" fg:x="79994" fg:w="696"/><text x="75.5073%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (682 samples, 0.64%)</title><rect x="75.2705%" y="709" width="0.6416%" height="15" fill="rgb(221,73,6)" fg:x="80008" fg:w="682"/><text x="75.5205%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (254 samples, 0.24%)</title><rect x="75.6731%" y="693" width="0.2390%" height="15" fill="rgb(232,78,19)" fg:x="80436" fg:w="254"/><text x="75.9231%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (254 samples, 0.24%)</title><rect x="75.6731%" y="677" width="0.2390%" height="15" fill="rgb(233,112,48)" fg:x="80436" fg:w="254"/><text x="75.9231%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (928 samples, 0.87%)</title><rect x="75.0522%" y="965" width="0.8731%" height="15" fill="rgb(243,131,47)" fg:x="79776" fg:w="928"/><text x="75.3022%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (928 samples, 0.87%)</title><rect x="75.0522%" y="949" width="0.8731%" height="15" fill="rgb(226,51,1)" fg:x="79776" fg:w="928"/><text x="75.3022%" y="959.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (778 samples, 0.73%)</title><rect x="75.1933%" y="933" width="0.7319%" height="15" fill="rgb(247,58,7)" fg:x="79926" fg:w="778"/><text x="75.4433%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (778 samples, 0.73%)</title><rect x="75.1933%" y="917" width="0.7319%" height="15" fill="rgb(209,7,32)" fg:x="79926" fg:w="778"/><text x="75.4433%" y="927.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (778 samples, 0.73%)</title><rect x="75.1933%" y="901" width="0.7319%" height="15" fill="rgb(209,39,41)" fg:x="79926" fg:w="778"/><text x="75.4433%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (778 samples, 0.73%)</title><rect x="75.1933%" y="885" width="0.7319%" height="15" fill="rgb(226,182,46)" fg:x="79926" fg:w="778"/><text x="75.4433%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (766 samples, 0.72%)</title><rect x="75.2046%" y="869" width="0.7206%" height="15" fill="rgb(230,219,10)" fg:x="79938" fg:w="766"/><text x="75.4546%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (734 samples, 0.69%)</title><rect x="75.2347%" y="853" width="0.6905%" height="15" fill="rgb(227,175,30)" fg:x="79970" fg:w="734"/><text x="75.4847%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (734 samples, 0.69%)</title><rect x="75.2347%" y="837" width="0.6905%" height="15" fill="rgb(217,2,50)" fg:x="79970" fg:w="734"/><text x="75.4847%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (734 samples, 0.69%)</title><rect x="75.2347%" y="821" width="0.6905%" height="15" fill="rgb(229,160,0)" fg:x="79970" fg:w="734"/><text x="75.4847%" y="831.50"></text></g><g><title>alloc::alloc::alloc (729 samples, 0.69%)</title><rect x="75.2394%" y="805" width="0.6858%" height="15" fill="rgb(207,78,37)" fg:x="79975" fg:w="729"/><text x="75.4894%" y="815.50"></text></g><g><title>__rg_alloc (729 samples, 0.69%)</title><rect x="75.2394%" y="789" width="0.6858%" height="15" fill="rgb(225,57,0)" fg:x="79975" fg:w="729"/><text x="75.4894%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (729 samples, 0.69%)</title><rect x="75.2394%" y="773" width="0.6858%" height="15" fill="rgb(232,154,2)" fg:x="79975" fg:w="729"/><text x="75.4894%" y="783.50"></text></g><g><title>rust_alloc (723 samples, 0.68%)</title><rect x="75.2451%" y="757" width="0.6802%" height="15" fill="rgb(241,212,25)" fg:x="79981" fg:w="723"/><text x="75.4951%" y="767.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="75.9121%" y="741" width="0.0132%" height="15" fill="rgb(226,69,20)" fg:x="80690" fg:w="14"/><text x="76.1621%" y="751.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (1,409 samples, 1.33%)</title><rect x="74.6091%" y="1013" width="1.3256%" height="15" fill="rgb(247,184,54)" fg:x="79305" fg:w="1409"/><text x="74.8591%" y="1023.50"></text></g><g><title>value_trait::Builder::object (1,286 samples, 1.21%)</title><rect x="74.7248%" y="997" width="1.2099%" height="15" fill="rgb(210,145,0)" fg:x="79428" fg:w="1286"/><text x="74.9748%" y="1007.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (1,286 samples, 1.21%)</title><rect x="74.7248%" y="981" width="1.2099%" height="15" fill="rgb(253,82,12)" fg:x="79428" fg:w="1286"/><text x="74.9748%" y="991.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (2,095 samples, 1.97%)</title><rect x="73.9788%" y="1045" width="1.9709%" height="15" fill="rgb(245,42,11)" fg:x="78635" fg:w="2095"/><text x="74.2288%" y="1055.50">&lt;..</text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (1,748 samples, 1.64%)</title><rect x="74.3052%" y="1029" width="1.6445%" height="15" fill="rgb(219,147,32)" fg:x="78982" fg:w="1748"/><text x="74.5552%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::default::Default for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::default (16 samples, 0.02%)</title><rect x="75.9347%" y="1013" width="0.0151%" height="15" fill="rgb(246,12,7)" fg:x="80714" fg:w="16"/><text x="76.1847%" y="1023.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.02%)</title><rect x="75.9347%" y="997" width="0.0151%" height="15" fill="rgb(243,50,9)" fg:x="80714" fg:w="16"/><text x="76.1847%" y="1007.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (16 samples, 0.02%)</title><rect x="75.9347%" y="981" width="0.0151%" height="15" fill="rgb(219,149,6)" fg:x="80714" fg:w="16"/><text x="76.1847%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (35 samples, 0.03%)</title><rect x="75.9591%" y="1045" width="0.0329%" height="15" fill="rgb(241,51,42)" fg:x="80740" fg:w="35"/><text x="76.2091%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (35 samples, 0.03%)</title><rect x="75.9591%" y="1029" width="0.0329%" height="15" fill="rgb(226,128,27)" fg:x="80740" fg:w="35"/><text x="76.2091%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (35 samples, 0.03%)</title><rect x="75.9591%" y="1013" width="0.0329%" height="15" fill="rgb(244,144,4)" fg:x="80740" fg:w="35"/><text x="76.2091%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (51 samples, 0.05%)</title><rect x="75.9921%" y="1029" width="0.0480%" height="15" fill="rgb(221,4,13)" fg:x="80775" fg:w="51"/><text x="76.2421%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (51 samples, 0.05%)</title><rect x="75.9921%" y="1013" width="0.0480%" height="15" fill="rgb(208,170,28)" fg:x="80775" fg:w="51"/><text x="76.2421%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (40 samples, 0.04%)</title><rect x="76.0024%" y="997" width="0.0376%" height="15" fill="rgb(226,131,13)" fg:x="80786" fg:w="40"/><text x="76.2524%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (37 samples, 0.03%)</title><rect x="76.0052%" y="981" width="0.0348%" height="15" fill="rgb(215,72,41)" fg:x="80789" fg:w="37"/><text x="76.2552%" y="991.50"></text></g><g><title>core::mem::drop (22 samples, 0.02%)</title><rect x="76.0193%" y="965" width="0.0207%" height="15" fill="rgb(243,108,20)" fg:x="80804" fg:w="22"/><text x="76.2693%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="76.0193%" y="949" width="0.0207%" height="15" fill="rgb(230,189,17)" fg:x="80804" fg:w="22"/><text x="76.2693%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="76.0278%" y="933" width="0.0122%" height="15" fill="rgb(220,50,17)" fg:x="80813" fg:w="13"/><text x="76.2778%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="76.0278%" y="917" width="0.0122%" height="15" fill="rgb(248,152,48)" fg:x="80813" fg:w="13"/><text x="76.2778%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="76.0278%" y="901" width="0.0122%" height="15" fill="rgb(244,91,11)" fg:x="80813" fg:w="13"/><text x="76.2778%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (38 samples, 0.04%)</title><rect x="76.1398%" y="901" width="0.0357%" height="15" fill="rgb(220,157,5)" fg:x="80932" fg:w="38"/><text x="76.3898%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="76.1595%" y="885" width="0.0160%" height="15" fill="rgb(253,137,8)" fg:x="80953" fg:w="17"/><text x="76.4095%" y="895.50"></text></g><g><title>alloc::alloc::box_free (17 samples, 0.02%)</title><rect x="76.1595%" y="869" width="0.0160%" height="15" fill="rgb(217,137,51)" fg:x="80953" fg:w="17"/><text x="76.4095%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="76.1595%" y="853" width="0.0160%" height="15" fill="rgb(218,209,53)" fg:x="80953" fg:w="17"/><text x="76.4095%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="76.1595%" y="837" width="0.0160%" height="15" fill="rgb(249,137,25)" fg:x="80953" fg:w="17"/><text x="76.4095%" y="847.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="76.1595%" y="821" width="0.0160%" height="15" fill="rgb(239,155,26)" fg:x="80953" fg:w="17"/><text x="76.4095%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="76.1595%" y="805" width="0.0160%" height="15" fill="rgb(227,85,46)" fg:x="80953" fg:w="17"/><text x="76.4095%" y="815.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="76.1990%" y="869" width="0.0103%" height="15" fill="rgb(251,107,43)" fg:x="80995" fg:w="11"/><text x="76.4490%" y="879.50"></text></g><g><title>rust_dealloc (19 samples, 0.02%)</title><rect x="76.2131%" y="805" width="0.0179%" height="15" fill="rgb(234,170,33)" fg:x="81010" fg:w="19"/><text x="76.4631%" y="815.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (39 samples, 0.04%)</title><rect x="76.2687%" y="757" width="0.0367%" height="15" fill="rgb(206,29,35)" fg:x="81069" fg:w="39"/><text x="76.5187%" y="767.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (32 samples, 0.03%)</title><rect x="76.2752%" y="741" width="0.0301%" height="15" fill="rgb(227,138,25)" fg:x="81076" fg:w="32"/><text x="76.5252%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (84 samples, 0.08%)</title><rect x="76.2423%" y="805" width="0.0790%" height="15" fill="rgb(249,131,35)" fg:x="81041" fg:w="84"/><text x="76.4923%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (84 samples, 0.08%)</title><rect x="76.2423%" y="789" width="0.0790%" height="15" fill="rgb(239,6,40)" fg:x="81041" fg:w="84"/><text x="76.4923%" y="799.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (81 samples, 0.08%)</title><rect x="76.2451%" y="773" width="0.0762%" height="15" fill="rgb(246,136,47)" fg:x="81044" fg:w="81"/><text x="76.4951%" y="783.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (17 samples, 0.02%)</title><rect x="76.3053%" y="757" width="0.0160%" height="15" fill="rgb(253,58,26)" fg:x="81108" fg:w="17"/><text x="76.5553%" y="767.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (17 samples, 0.02%)</title><rect x="76.3053%" y="741" width="0.0160%" height="15" fill="rgb(237,141,10)" fg:x="81108" fg:w="17"/><text x="76.5553%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (123 samples, 0.12%)</title><rect x="76.2094%" y="837" width="0.1157%" height="15" fill="rgb(234,156,12)" fg:x="81006" fg:w="123"/><text x="76.4594%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (123 samples, 0.12%)</title><rect x="76.2094%" y="821" width="0.1157%" height="15" fill="rgb(243,224,36)" fg:x="81006" fg:w="123"/><text x="76.4594%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (130 samples, 0.12%)</title><rect x="76.2094%" y="869" width="0.1223%" height="15" fill="rgb(205,229,51)" fg:x="81006" fg:w="130"/><text x="76.4594%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (130 samples, 0.12%)</title><rect x="76.2094%" y="853" width="0.1223%" height="15" fill="rgb(223,189,4)" fg:x="81006" fg:w="130"/><text x="76.4594%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (157 samples, 0.15%)</title><rect x="76.1915%" y="885" width="0.1477%" height="15" fill="rgb(249,167,54)" fg:x="80987" fg:w="157"/><text x="76.4415%" y="895.50"></text></g><g><title>rust_dealloc (181 samples, 0.17%)</title><rect x="76.1755%" y="901" width="0.1703%" height="15" fill="rgb(218,34,28)" fg:x="80970" fg:w="181"/><text x="76.4255%" y="911.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (14 samples, 0.01%)</title><rect x="76.3467%" y="885" width="0.0132%" height="15" fill="rgb(232,109,42)" fg:x="81152" fg:w="14"/><text x="76.5967%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt; (248 samples, 0.23%)</title><rect x="76.1285%" y="949" width="0.2333%" height="15" fill="rgb(248,214,46)" fg:x="80920" fg:w="248"/><text x="76.3785%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt;&gt; (248 samples, 0.23%)</title><rect x="76.1285%" y="933" width="0.2333%" height="15" fill="rgb(244,216,40)" fg:x="80920" fg:w="248"/><text x="76.3785%" y="943.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (248 samples, 0.23%)</title><rect x="76.1285%" y="917" width="0.2333%" height="15" fill="rgb(231,226,31)" fg:x="80920" fg:w="248"/><text x="76.3785%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (17 samples, 0.02%)</title><rect x="76.3458%" y="901" width="0.0160%" height="15" fill="rgb(238,38,43)" fg:x="81151" fg:w="17"/><text x="76.5958%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (288 samples, 0.27%)</title><rect x="76.0955%" y="965" width="0.2709%" height="15" fill="rgb(208,88,43)" fg:x="80885" fg:w="288"/><text x="76.3455%" y="975.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="76.3665%" y="949" width="0.0113%" height="15" fill="rgb(205,136,37)" fg:x="81173" fg:w="12"/><text x="76.6165%" y="959.50"></text></g><g><title>sizeclass_to_size (15 samples, 0.01%)</title><rect x="76.4107%" y="869" width="0.0141%" height="15" fill="rgb(237,34,14)" fg:x="81220" fg:w="15"/><text x="76.6607%" y="879.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (15 samples, 0.01%)</title><rect x="76.4107%" y="853" width="0.0141%" height="15" fill="rgb(236,193,44)" fg:x="81220" fg:w="15"/><text x="76.6607%" y="863.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="76.4719%" y="821" width="0.0301%" height="15" fill="rgb(231,48,10)" fg:x="81285" fg:w="32"/><text x="76.7219%" y="831.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (30 samples, 0.03%)</title><rect x="76.4737%" y="805" width="0.0282%" height="15" fill="rgb(213,141,34)" fg:x="81287" fg:w="30"/><text x="76.7237%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (87 samples, 0.08%)</title><rect x="76.4323%" y="869" width="0.0818%" height="15" fill="rgb(249,130,34)" fg:x="81243" fg:w="87"/><text x="76.6823%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (87 samples, 0.08%)</title><rect x="76.4323%" y="853" width="0.0818%" height="15" fill="rgb(219,42,41)" fg:x="81243" fg:w="87"/><text x="76.6823%" y="863.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (84 samples, 0.08%)</title><rect x="76.4352%" y="837" width="0.0790%" height="15" fill="rgb(224,100,54)" fg:x="81246" fg:w="84"/><text x="76.6852%" y="847.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="76.5020%" y="821" width="0.0122%" height="15" fill="rgb(229,200,27)" fg:x="81317" fg:w="13"/><text x="76.7520%" y="831.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="76.5020%" y="805" width="0.0122%" height="15" fill="rgb(217,118,10)" fg:x="81317" fg:w="13"/><text x="76.7520%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (128 samples, 0.12%)</title><rect x="76.4041%" y="933" width="0.1204%" height="15" fill="rgb(206,22,3)" fg:x="81213" fg:w="128"/><text x="76.6541%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (128 samples, 0.12%)</title><rect x="76.4041%" y="917" width="0.1204%" height="15" fill="rgb(232,163,46)" fg:x="81213" fg:w="128"/><text x="76.6541%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (128 samples, 0.12%)</title><rect x="76.4041%" y="901" width="0.1204%" height="15" fill="rgb(206,95,13)" fg:x="81213" fg:w="128"/><text x="76.6541%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (128 samples, 0.12%)</title><rect x="76.4041%" y="885" width="0.1204%" height="15" fill="rgb(253,154,18)" fg:x="81213" fg:w="128"/><text x="76.6541%" y="895.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="76.5142%" y="869" width="0.0103%" height="15" fill="rgb(219,32,23)" fg:x="81330" fg:w="11"/><text x="76.7642%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (162 samples, 0.15%)</title><rect x="76.3844%" y="949" width="0.1524%" height="15" fill="rgb(230,191,45)" fg:x="81192" fg:w="162"/><text x="76.6344%" y="959.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="76.5245%" y="933" width="0.0122%" height="15" fill="rgb(229,64,36)" fg:x="81341" fg:w="13"/><text x="76.7745%" y="943.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="76.5245%" y="917" width="0.0122%" height="15" fill="rgb(205,129,25)" fg:x="81341" fg:w="13"/><text x="76.7745%" y="927.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="76.5245%" y="901" width="0.0122%" height="15" fill="rgb(254,112,7)" fg:x="81341" fg:w="13"/><text x="76.7745%" y="911.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="76.5245%" y="885" width="0.0122%" height="15" fill="rgb(226,53,48)" fg:x="81341" fg:w="13"/><text x="76.7745%" y="895.50"></text></g><g><title>rust_dealloc (189 samples, 0.18%)</title><rect x="76.3665%" y="965" width="0.1778%" height="15" fill="rgb(214,153,38)" fg:x="81173" fg:w="189"/><text x="76.6165%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (545 samples, 0.51%)</title><rect x="76.0400%" y="1013" width="0.5127%" height="15" fill="rgb(243,101,7)" fg:x="80826" fg:w="545"/><text x="76.2900%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (540 samples, 0.51%)</title><rect x="76.0447%" y="997" width="0.5080%" height="15" fill="rgb(240,140,22)" fg:x="80831" fg:w="540"/><text x="76.2947%" y="1007.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (540 samples, 0.51%)</title><rect x="76.0447%" y="981" width="0.5080%" height="15" fill="rgb(235,114,2)" fg:x="80831" fg:w="540"/><text x="76.2947%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (638 samples, 0.60%)</title><rect x="75.9921%" y="1045" width="0.6002%" height="15" fill="rgb(242,59,12)" fg:x="80775" fg:w="638"/><text x="76.2421%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (587 samples, 0.55%)</title><rect x="76.0400%" y="1029" width="0.5522%" height="15" fill="rgb(252,134,9)" fg:x="80826" fg:w="587"/><text x="76.2900%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (42 samples, 0.04%)</title><rect x="76.5528%" y="1013" width="0.0395%" height="15" fill="rgb(236,4,44)" fg:x="81371" fg:w="42"/><text x="76.8028%" y="1023.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (3,338 samples, 3.14%)</title><rect x="73.4773%" y="1061" width="3.1403%" height="15" fill="rgb(254,172,41)" fg:x="78102" fg:w="3338"/><text x="73.7273%" y="1071.50">tre..</text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (27 samples, 0.03%)</title><rect x="76.5923%" y="1045" width="0.0254%" height="15" fill="rgb(244,63,20)" fg:x="81413" fg:w="27"/><text x="76.8423%" y="1055.50"></text></g><g><title>tremor_pipeline::EventId::new (19 samples, 0.02%)</title><rect x="76.5998%" y="1029" width="0.0179%" height="15" fill="rgb(250,73,31)" fg:x="81421" fg:w="19"/><text x="76.8498%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (11 samples, 0.01%)</title><rect x="77.0448%" y="853" width="0.0103%" height="15" fill="rgb(241,38,36)" fg:x="81894" fg:w="11"/><text x="77.2948%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="77.0439%" y="885" width="0.0612%" height="15" fill="rgb(245,211,2)" fg:x="81893" fg:w="65"/><text x="77.2939%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (65 samples, 0.06%)</title><rect x="77.0439%" y="869" width="0.0612%" height="15" fill="rgb(206,120,28)" fg:x="81893" fg:w="65"/><text x="77.2939%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (53 samples, 0.05%)</title><rect x="77.0551%" y="853" width="0.0499%" height="15" fill="rgb(211,59,34)" fg:x="81905" fg:w="53"/><text x="77.3051%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (43 samples, 0.04%)</title><rect x="77.0646%" y="837" width="0.0405%" height="15" fill="rgb(233,168,5)" fg:x="81915" fg:w="43"/><text x="77.3146%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (43 samples, 0.04%)</title><rect x="77.0646%" y="821" width="0.0405%" height="15" fill="rgb(234,33,13)" fg:x="81915" fg:w="43"/><text x="77.3146%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (43 samples, 0.04%)</title><rect x="77.0646%" y="805" width="0.0405%" height="15" fill="rgb(231,150,26)" fg:x="81915" fg:w="43"/><text x="77.3146%" y="815.50"></text></g><g><title>snmalloc::FreeListIter::empty (11 samples, 0.01%)</title><rect x="77.1078%" y="885" width="0.0103%" height="15" fill="rgb(217,191,4)" fg:x="81961" fg:w="11"/><text x="77.3578%" y="895.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (11 samples, 0.01%)</title><rect x="77.1078%" y="869" width="0.0103%" height="15" fill="rgb(246,198,38)" fg:x="81961" fg:w="11"/><text x="77.3578%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (255 samples, 0.24%)</title><rect x="77.0307%" y="933" width="0.2399%" height="15" fill="rgb(245,64,37)" fg:x="81879" fg:w="255"/><text x="77.2807%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (249 samples, 0.23%)</title><rect x="77.0363%" y="917" width="0.2343%" height="15" fill="rgb(250,30,36)" fg:x="81885" fg:w="249"/><text x="77.2863%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.23%)</title><rect x="77.0382%" y="901" width="0.2324%" height="15" fill="rgb(217,86,53)" fg:x="81887" fg:w="247"/><text x="77.2882%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (162 samples, 0.15%)</title><rect x="77.1182%" y="885" width="0.1524%" height="15" fill="rgb(228,157,16)" fg:x="81972" fg:w="162"/><text x="77.3682%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (162 samples, 0.15%)</title><rect x="77.1182%" y="869" width="0.1524%" height="15" fill="rgb(217,59,31)" fg:x="81972" fg:w="162"/><text x="77.3682%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (269 samples, 0.25%)</title><rect x="77.0232%" y="1045" width="0.2531%" height="15" fill="rgb(237,138,41)" fg:x="81871" fg:w="269"/><text x="77.2732%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (269 samples, 0.25%)</title><rect x="77.0232%" y="1029" width="0.2531%" height="15" fill="rgb(227,91,49)" fg:x="81871" fg:w="269"/><text x="77.2732%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (269 samples, 0.25%)</title><rect x="77.0232%" y="1013" width="0.2531%" height="15" fill="rgb(247,21,44)" fg:x="81871" fg:w="269"/><text x="77.2732%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (269 samples, 0.25%)</title><rect x="77.0232%" y="997" width="0.2531%" height="15" fill="rgb(219,210,51)" fg:x="81871" fg:w="269"/><text x="77.2732%" y="1007.50"></text></g><g><title>__rg_alloc (269 samples, 0.25%)</title><rect x="77.0232%" y="981" width="0.2531%" height="15" fill="rgb(209,140,6)" fg:x="81871" fg:w="269"/><text x="77.2732%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (269 samples, 0.25%)</title><rect x="77.0232%" y="965" width="0.2531%" height="15" fill="rgb(221,188,24)" fg:x="81871" fg:w="269"/><text x="77.2732%" y="975.50"></text></g><g><title>rust_alloc (263 samples, 0.25%)</title><rect x="77.0288%" y="949" width="0.2474%" height="15" fill="rgb(232,154,20)" fg:x="81877" fg:w="263"/><text x="77.2788%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (14 samples, 0.01%)</title><rect x="77.2762%" y="1045" width="0.0132%" height="15" fill="rgb(244,137,50)" fg:x="82140" fg:w="14"/><text x="77.5262%" y="1055.50"></text></g><g><title>alloc::slice::hack::into_vec (14 samples, 0.01%)</title><rect x="77.2762%" y="1029" width="0.0132%" height="15" fill="rgb(225,185,43)" fg:x="82140" fg:w="14"/><text x="77.5262%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (14 samples, 0.01%)</title><rect x="77.2762%" y="1013" width="0.0132%" height="15" fill="rgb(213,205,38)" fg:x="82140" fg:w="14"/><text x="77.5262%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="77.2894%" y="1045" width="0.0122%" height="15" fill="rgb(236,73,12)" fg:x="82154" fg:w="13"/><text x="77.5394%" y="1055.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (739 samples, 0.70%)</title><rect x="76.6177%" y="1061" width="0.6952%" height="15" fill="rgb(235,219,13)" fg:x="81440" fg:w="739"/><text x="76.8677%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (306 samples, 0.29%)</title><rect x="77.5820%" y="1045" width="0.2879%" height="15" fill="rgb(218,59,36)" fg:x="82465" fg:w="306"/><text x="77.8320%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (16 samples, 0.02%)</title><rect x="77.9056%" y="821" width="0.0151%" height="15" fill="rgb(205,110,39)" fg:x="82809" fg:w="16"/><text x="78.1556%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (57 samples, 0.05%)</title><rect x="77.9056%" y="853" width="0.0536%" height="15" fill="rgb(218,206,42)" fg:x="82809" fg:w="57"/><text x="78.1556%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (57 samples, 0.05%)</title><rect x="77.9056%" y="837" width="0.0536%" height="15" fill="rgb(248,125,24)" fg:x="82809" fg:w="57"/><text x="78.1556%" y="847.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (41 samples, 0.04%)</title><rect x="77.9207%" y="821" width="0.0386%" height="15" fill="rgb(242,28,27)" fg:x="82825" fg:w="41"/><text x="78.1707%" y="831.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (34 samples, 0.03%)</title><rect x="77.9273%" y="805" width="0.0320%" height="15" fill="rgb(216,228,15)" fg:x="82832" fg:w="34"/><text x="78.1773%" y="815.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="77.9273%" y="789" width="0.0320%" height="15" fill="rgb(235,116,46)" fg:x="82832" fg:w="34"/><text x="78.1773%" y="799.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="77.9273%" y="773" width="0.0320%" height="15" fill="rgb(224,18,32)" fg:x="82832" fg:w="34"/><text x="78.1773%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (100 samples, 0.09%)</title><rect x="77.8953%" y="901" width="0.0941%" height="15" fill="rgb(252,5,12)" fg:x="82798" fg:w="100"/><text x="78.1453%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (95 samples, 0.09%)</title><rect x="77.9000%" y="885" width="0.0894%" height="15" fill="rgb(251,36,5)" fg:x="82803" fg:w="95"/><text x="78.1500%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (92 samples, 0.09%)</title><rect x="77.9028%" y="869" width="0.0866%" height="15" fill="rgb(217,53,14)" fg:x="82806" fg:w="92"/><text x="78.1528%" y="879.50"></text></g><g><title>snmalloc::FreeListIter::take (19 samples, 0.02%)</title><rect x="77.9715%" y="853" width="0.0179%" height="15" fill="rgb(215,86,45)" fg:x="82879" fg:w="19"/><text x="78.2215%" y="863.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (19 samples, 0.02%)</title><rect x="77.9715%" y="837" width="0.0179%" height="15" fill="rgb(242,169,11)" fg:x="82879" fg:w="19"/><text x="78.2215%" y="847.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (136 samples, 0.13%)</title><rect x="77.8699%" y="1045" width="0.1279%" height="15" fill="rgb(211,213,45)" fg:x="82771" fg:w="136"/><text x="78.1199%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (136 samples, 0.13%)</title><rect x="77.8699%" y="1029" width="0.1279%" height="15" fill="rgb(205,88,11)" fg:x="82771" fg:w="136"/><text x="78.1199%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (121 samples, 0.11%)</title><rect x="77.8840%" y="1013" width="0.1138%" height="15" fill="rgb(252,69,26)" fg:x="82786" fg:w="121"/><text x="78.1340%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (121 samples, 0.11%)</title><rect x="77.8840%" y="997" width="0.1138%" height="15" fill="rgb(246,123,37)" fg:x="82786" fg:w="121"/><text x="78.1340%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (121 samples, 0.11%)</title><rect x="77.8840%" y="981" width="0.1138%" height="15" fill="rgb(212,205,5)" fg:x="82786" fg:w="121"/><text x="78.1340%" y="991.50"></text></g><g><title>alloc::alloc::alloc (120 samples, 0.11%)</title><rect x="77.8849%" y="965" width="0.1129%" height="15" fill="rgb(253,148,0)" fg:x="82787" fg:w="120"/><text x="78.1349%" y="975.50"></text></g><g><title>__rg_alloc (120 samples, 0.11%)</title><rect x="77.8849%" y="949" width="0.1129%" height="15" fill="rgb(239,22,4)" fg:x="82787" fg:w="120"/><text x="78.1349%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (120 samples, 0.11%)</title><rect x="77.8849%" y="933" width="0.1129%" height="15" fill="rgb(226,26,53)" fg:x="82787" fg:w="120"/><text x="78.1349%" y="943.50"></text></g><g><title>rust_alloc (115 samples, 0.11%)</title><rect x="77.8896%" y="917" width="0.1082%" height="15" fill="rgb(225,229,45)" fg:x="82792" fg:w="115"/><text x="78.1396%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.02%)</title><rect x="78.0270%" y="885" width="0.0245%" height="15" fill="rgb(220,60,37)" fg:x="82938" fg:w="26"/><text x="78.2770%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (26 samples, 0.02%)</title><rect x="78.0270%" y="869" width="0.0245%" height="15" fill="rgb(217,180,35)" fg:x="82938" fg:w="26"/><text x="78.2770%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (23 samples, 0.02%)</title><rect x="78.0298%" y="853" width="0.0216%" height="15" fill="rgb(229,7,53)" fg:x="82941" fg:w="23"/><text x="78.2798%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (19 samples, 0.02%)</title><rect x="78.0336%" y="837" width="0.0179%" height="15" fill="rgb(254,137,3)" fg:x="82945" fg:w="19"/><text x="78.2836%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (19 samples, 0.02%)</title><rect x="78.0336%" y="821" width="0.0179%" height="15" fill="rgb(215,140,41)" fg:x="82945" fg:w="19"/><text x="78.2836%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (19 samples, 0.02%)</title><rect x="78.0336%" y="805" width="0.0179%" height="15" fill="rgb(250,80,15)" fg:x="82945" fg:w="19"/><text x="78.2836%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (97 samples, 0.09%)</title><rect x="77.9978%" y="1045" width="0.0913%" height="15" fill="rgb(252,191,6)" fg:x="82907" fg:w="97"/><text x="78.2478%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (97 samples, 0.09%)</title><rect x="77.9978%" y="1029" width="0.0913%" height="15" fill="rgb(246,217,18)" fg:x="82907" fg:w="97"/><text x="78.2478%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (97 samples, 0.09%)</title><rect x="77.9978%" y="1013" width="0.0913%" height="15" fill="rgb(223,93,7)" fg:x="82907" fg:w="97"/><text x="78.2478%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (97 samples, 0.09%)</title><rect x="77.9978%" y="997" width="0.0913%" height="15" fill="rgb(225,55,52)" fg:x="82907" fg:w="97"/><text x="78.2478%" y="1007.50"></text></g><g><title>__rg_alloc (97 samples, 0.09%)</title><rect x="77.9978%" y="981" width="0.0913%" height="15" fill="rgb(240,31,24)" fg:x="82907" fg:w="97"/><text x="78.2478%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (97 samples, 0.09%)</title><rect x="77.9978%" y="965" width="0.0913%" height="15" fill="rgb(205,56,52)" fg:x="82907" fg:w="97"/><text x="78.2478%" y="975.50"></text></g><g><title>rust_alloc (89 samples, 0.08%)</title><rect x="78.0053%" y="949" width="0.0837%" height="15" fill="rgb(246,146,12)" fg:x="82915" fg:w="89"/><text x="78.2553%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (85 samples, 0.08%)</title><rect x="78.0091%" y="933" width="0.0800%" height="15" fill="rgb(239,84,36)" fg:x="82919" fg:w="85"/><text x="78.2591%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (85 samples, 0.08%)</title><rect x="78.0091%" y="917" width="0.0800%" height="15" fill="rgb(207,41,40)" fg:x="82919" fg:w="85"/><text x="78.2591%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="78.0176%" y="901" width="0.0715%" height="15" fill="rgb(241,179,25)" fg:x="82928" fg:w="76"/><text x="78.2676%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (37 samples, 0.03%)</title><rect x="78.0543%" y="885" width="0.0348%" height="15" fill="rgb(210,0,34)" fg:x="82967" fg:w="37"/><text x="78.3043%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (37 samples, 0.03%)</title><rect x="78.0543%" y="869" width="0.0348%" height="15" fill="rgb(225,217,29)" fg:x="82967" fg:w="37"/><text x="78.3043%" y="879.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::new (21 samples, 0.02%)</title><rect x="78.0891%" y="1045" width="0.0198%" height="15" fill="rgb(216,191,38)" fg:x="83004" fg:w="21"/><text x="78.3391%" y="1055.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (17 samples, 0.02%)</title><rect x="78.4343%" y="1029" width="0.0160%" height="15" fill="rgb(232,140,52)" fg:x="83371" fg:w="17"/><text x="78.6843%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (14 samples, 0.01%)</title><rect x="78.5294%" y="661" width="0.0132%" height="15" fill="rgb(223,158,51)" fg:x="83472" fg:w="14"/><text x="78.7794%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (63 samples, 0.06%)</title><rect x="78.5294%" y="693" width="0.0593%" height="15" fill="rgb(235,29,51)" fg:x="83472" fg:w="63"/><text x="78.7794%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (63 samples, 0.06%)</title><rect x="78.5294%" y="677" width="0.0593%" height="15" fill="rgb(215,181,18)" fg:x="83472" fg:w="63"/><text x="78.7794%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (49 samples, 0.05%)</title><rect x="78.5425%" y="661" width="0.0461%" height="15" fill="rgb(227,125,34)" fg:x="83486" fg:w="49"/><text x="78.7925%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (36 samples, 0.03%)</title><rect x="78.5548%" y="645" width="0.0339%" height="15" fill="rgb(230,197,49)" fg:x="83499" fg:w="36"/><text x="78.8048%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (36 samples, 0.03%)</title><rect x="78.5548%" y="629" width="0.0339%" height="15" fill="rgb(239,141,16)" fg:x="83499" fg:w="36"/><text x="78.8048%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (36 samples, 0.03%)</title><rect x="78.5548%" y="613" width="0.0339%" height="15" fill="rgb(225,105,43)" fg:x="83499" fg:w="36"/><text x="78.8048%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (188 samples, 0.18%)</title><rect x="78.5134%" y="741" width="0.1769%" height="15" fill="rgb(214,131,14)" fg:x="83455" fg:w="188"/><text x="78.7634%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (188 samples, 0.18%)</title><rect x="78.5134%" y="725" width="0.1769%" height="15" fill="rgb(229,177,11)" fg:x="83455" fg:w="188"/><text x="78.7634%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (182 samples, 0.17%)</title><rect x="78.5190%" y="709" width="0.1712%" height="15" fill="rgb(231,180,14)" fg:x="83461" fg:w="182"/><text x="78.7690%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (89 samples, 0.08%)</title><rect x="78.6065%" y="693" width="0.0837%" height="15" fill="rgb(232,88,2)" fg:x="83554" fg:w="89"/><text x="78.8565%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (89 samples, 0.08%)</title><rect x="78.6065%" y="677" width="0.0837%" height="15" fill="rgb(205,220,8)" fg:x="83554" fg:w="89"/><text x="78.8565%" y="687.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (220 samples, 0.21%)</title><rect x="78.4851%" y="901" width="0.2070%" height="15" fill="rgb(225,23,53)" fg:x="83425" fg:w="220"/><text x="78.7351%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (213 samples, 0.20%)</title><rect x="78.4917%" y="885" width="0.2004%" height="15" fill="rgb(213,62,29)" fg:x="83432" fg:w="213"/><text x="78.7417%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (213 samples, 0.20%)</title><rect x="78.4917%" y="869" width="0.2004%" height="15" fill="rgb(227,75,7)" fg:x="83432" fg:w="213"/><text x="78.7417%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (200 samples, 0.19%)</title><rect x="78.5040%" y="853" width="0.1882%" height="15" fill="rgb(207,105,14)" fg:x="83445" fg:w="200"/><text x="78.7540%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (200 samples, 0.19%)</title><rect x="78.5040%" y="837" width="0.1882%" height="15" fill="rgb(245,62,29)" fg:x="83445" fg:w="200"/><text x="78.7540%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (200 samples, 0.19%)</title><rect x="78.5040%" y="821" width="0.1882%" height="15" fill="rgb(236,202,4)" fg:x="83445" fg:w="200"/><text x="78.7540%" y="831.50"></text></g><g><title>alloc::alloc::alloc (200 samples, 0.19%)</title><rect x="78.5040%" y="805" width="0.1882%" height="15" fill="rgb(250,67,1)" fg:x="83445" fg:w="200"/><text x="78.7540%" y="815.50"></text></g><g><title>__rg_alloc (200 samples, 0.19%)</title><rect x="78.5040%" y="789" width="0.1882%" height="15" fill="rgb(253,115,44)" fg:x="83445" fg:w="200"/><text x="78.7540%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (200 samples, 0.19%)</title><rect x="78.5040%" y="773" width="0.1882%" height="15" fill="rgb(251,139,18)" fg:x="83445" fg:w="200"/><text x="78.7540%" y="783.50"></text></g><g><title>rust_alloc (198 samples, 0.19%)</title><rect x="78.5058%" y="757" width="0.1863%" height="15" fill="rgb(218,22,32)" fg:x="83447" fg:w="198"/><text x="78.7558%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (12 samples, 0.01%)</title><rect x="78.7025%" y="837" width="0.0113%" height="15" fill="rgb(243,53,5)" fg:x="83656" fg:w="12"/><text x="78.9525%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (12 samples, 0.01%)</title><rect x="78.7025%" y="821" width="0.0113%" height="15" fill="rgb(227,56,16)" fg:x="83656" fg:w="12"/><text x="78.9525%" y="831.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (261 samples, 0.25%)</title><rect x="78.4720%" y="981" width="0.2455%" height="15" fill="rgb(245,53,0)" fg:x="83411" fg:w="261"/><text x="78.7220%" y="991.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (256 samples, 0.24%)</title><rect x="78.4767%" y="965" width="0.2408%" height="15" fill="rgb(216,170,35)" fg:x="83416" fg:w="256"/><text x="78.7267%" y="975.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (247 samples, 0.23%)</title><rect x="78.4851%" y="949" width="0.2324%" height="15" fill="rgb(211,200,8)" fg:x="83425" fg:w="247"/><text x="78.7351%" y="959.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (247 samples, 0.23%)</title><rect x="78.4851%" y="933" width="0.2324%" height="15" fill="rgb(228,204,44)" fg:x="83425" fg:w="247"/><text x="78.7351%" y="943.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (247 samples, 0.23%)</title><rect x="78.4851%" y="917" width="0.2324%" height="15" fill="rgb(214,121,17)" fg:x="83425" fg:w="247"/><text x="78.7351%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (27 samples, 0.03%)</title><rect x="78.6921%" y="901" width="0.0254%" height="15" fill="rgb(233,64,38)" fg:x="83645" fg:w="27"/><text x="78.9421%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (27 samples, 0.03%)</title><rect x="78.6921%" y="885" width="0.0254%" height="15" fill="rgb(253,54,19)" fg:x="83645" fg:w="27"/><text x="78.9421%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (27 samples, 0.03%)</title><rect x="78.6921%" y="869" width="0.0254%" height="15" fill="rgb(253,94,18)" fg:x="83645" fg:w="27"/><text x="78.9421%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (26 samples, 0.02%)</title><rect x="78.6931%" y="853" width="0.0245%" height="15" fill="rgb(227,57,52)" fg:x="83646" fg:w="26"/><text x="78.9431%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (19 samples, 0.02%)</title><rect x="79.0148%" y="933" width="0.0179%" height="15" fill="rgb(230,228,50)" fg:x="83988" fg:w="19"/><text x="79.2648%" y="943.50"></text></g><g><title>std::collections::hash::map::RandomState::new (19 samples, 0.02%)</title><rect x="79.0148%" y="917" width="0.0179%" height="15" fill="rgb(217,205,27)" fg:x="83988" fg:w="19"/><text x="79.2648%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.02%)</title><rect x="79.0148%" y="901" width="0.0179%" height="15" fill="rgb(252,71,50)" fg:x="83988" fg:w="19"/><text x="79.2648%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.02%)</title><rect x="79.0148%" y="885" width="0.0179%" height="15" fill="rgb(209,86,4)" fg:x="83988" fg:w="19"/><text x="79.2648%" y="895.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (13 samples, 0.01%)</title><rect x="79.0205%" y="869" width="0.0122%" height="15" fill="rgb(229,94,0)" fg:x="83994" fg:w="13"/><text x="79.2705%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (20 samples, 0.02%)</title><rect x="79.0872%" y="629" width="0.0188%" height="15" fill="rgb(252,223,21)" fg:x="84065" fg:w="20"/><text x="79.3372%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (20 samples, 0.02%)</title><rect x="79.0872%" y="613" width="0.0188%" height="15" fill="rgb(230,210,4)" fg:x="84065" fg:w="20"/><text x="79.3372%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (18 samples, 0.02%)</title><rect x="79.0891%" y="597" width="0.0169%" height="15" fill="rgb(240,149,38)" fg:x="84067" fg:w="18"/><text x="79.3391%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (25 samples, 0.02%)</title><rect x="79.0872%" y="645" width="0.0235%" height="15" fill="rgb(254,105,20)" fg:x="84065" fg:w="25"/><text x="79.3372%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (35 samples, 0.03%)</title><rect x="79.0825%" y="661" width="0.0329%" height="15" fill="rgb(253,87,46)" fg:x="84060" fg:w="35"/><text x="79.3325%" y="671.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (22 samples, 0.02%)</title><rect x="79.1221%" y="645" width="0.0207%" height="15" fill="rgb(253,116,33)" fg:x="84102" fg:w="22"/><text x="79.3721%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (178 samples, 0.17%)</title><rect x="79.0825%" y="693" width="0.1675%" height="15" fill="rgb(229,198,5)" fg:x="84060" fg:w="178"/><text x="79.3325%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (178 samples, 0.17%)</title><rect x="79.0825%" y="677" width="0.1675%" height="15" fill="rgb(242,38,37)" fg:x="84060" fg:w="178"/><text x="79.3325%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (143 samples, 0.13%)</title><rect x="79.1155%" y="661" width="0.1345%" height="15" fill="rgb(242,69,53)" fg:x="84095" fg:w="143"/><text x="79.3655%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (114 samples, 0.11%)</title><rect x="79.1428%" y="645" width="0.1072%" height="15" fill="rgb(249,80,16)" fg:x="84124" fg:w="114"/><text x="79.3928%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (114 samples, 0.11%)</title><rect x="79.1428%" y="629" width="0.1072%" height="15" fill="rgb(206,128,11)" fg:x="84124" fg:w="114"/><text x="79.3928%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (114 samples, 0.11%)</title><rect x="79.1428%" y="613" width="0.1072%" height="15" fill="rgb(212,35,20)" fg:x="84124" fg:w="114"/><text x="79.3928%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (238 samples, 0.22%)</title><rect x="79.0731%" y="741" width="0.2239%" height="15" fill="rgb(236,79,13)" fg:x="84050" fg:w="238"/><text x="79.3231%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (238 samples, 0.22%)</title><rect x="79.0731%" y="725" width="0.2239%" height="15" fill="rgb(233,123,3)" fg:x="84050" fg:w="238"/><text x="79.3231%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (230 samples, 0.22%)</title><rect x="79.0807%" y="709" width="0.2164%" height="15" fill="rgb(214,93,52)" fg:x="84058" fg:w="230"/><text x="79.3307%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (42 samples, 0.04%)</title><rect x="79.2575%" y="693" width="0.0395%" height="15" fill="rgb(251,37,40)" fg:x="84246" fg:w="42"/><text x="79.5075%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (42 samples, 0.04%)</title><rect x="79.2575%" y="677" width="0.0395%" height="15" fill="rgb(227,80,54)" fg:x="84246" fg:w="42"/><text x="79.5075%" y="687.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (305 samples, 0.29%)</title><rect x="79.0148%" y="949" width="0.2869%" height="15" fill="rgb(254,48,11)" fg:x="83988" fg:w="305"/><text x="79.2648%" y="959.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (286 samples, 0.27%)</title><rect x="79.0327%" y="933" width="0.2691%" height="15" fill="rgb(235,193,26)" fg:x="84007" fg:w="286"/><text x="79.2827%" y="943.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (286 samples, 0.27%)</title><rect x="79.0327%" y="917" width="0.2691%" height="15" fill="rgb(229,99,21)" fg:x="84007" fg:w="286"/><text x="79.2827%" y="927.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (274 samples, 0.26%)</title><rect x="79.0440%" y="901" width="0.2578%" height="15" fill="rgb(211,140,41)" fg:x="84019" fg:w="274"/><text x="79.2940%" y="911.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (274 samples, 0.26%)</title><rect x="79.0440%" y="885" width="0.2578%" height="15" fill="rgb(240,227,30)" fg:x="84019" fg:w="274"/><text x="79.2940%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (274 samples, 0.26%)</title><rect x="79.0440%" y="869" width="0.2578%" height="15" fill="rgb(215,224,45)" fg:x="84019" fg:w="274"/><text x="79.2940%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (257 samples, 0.24%)</title><rect x="79.0600%" y="853" width="0.2418%" height="15" fill="rgb(206,123,31)" fg:x="84036" fg:w="257"/><text x="79.3100%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (249 samples, 0.23%)</title><rect x="79.0675%" y="837" width="0.2343%" height="15" fill="rgb(210,138,16)" fg:x="84044" fg:w="249"/><text x="79.3175%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (249 samples, 0.23%)</title><rect x="79.0675%" y="821" width="0.2343%" height="15" fill="rgb(228,57,28)" fg:x="84044" fg:w="249"/><text x="79.3175%" y="831.50"></text></g><g><title>alloc::alloc::alloc (249 samples, 0.23%)</title><rect x="79.0675%" y="805" width="0.2343%" height="15" fill="rgb(242,170,10)" fg:x="84044" fg:w="249"/><text x="79.3175%" y="815.50"></text></g><g><title>__rg_alloc (249 samples, 0.23%)</title><rect x="79.0675%" y="789" width="0.2343%" height="15" fill="rgb(228,214,39)" fg:x="84044" fg:w="249"/><text x="79.3175%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (249 samples, 0.23%)</title><rect x="79.0675%" y="773" width="0.2343%" height="15" fill="rgb(218,179,33)" fg:x="84044" fg:w="249"/><text x="79.3175%" y="783.50"></text></g><g><title>rust_alloc (249 samples, 0.23%)</title><rect x="79.0675%" y="757" width="0.2343%" height="15" fill="rgb(235,193,39)" fg:x="84044" fg:w="249"/><text x="79.3175%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="79.3384%" y="805" width="0.0151%" height="15" fill="rgb(219,221,36)" fg:x="84332" fg:w="16"/><text x="79.5884%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="79.3384%" y="869" width="0.0169%" height="15" fill="rgb(248,218,19)" fg:x="84332" fg:w="18"/><text x="79.5884%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="79.3384%" y="853" width="0.0169%" height="15" fill="rgb(205,50,9)" fg:x="84332" fg:w="18"/><text x="79.5884%" y="863.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="79.3384%" y="837" width="0.0169%" height="15" fill="rgb(238,81,28)" fg:x="84332" fg:w="18"/><text x="79.5884%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="79.3384%" y="821" width="0.0169%" height="15" fill="rgb(235,110,19)" fg:x="84332" fg:w="18"/><text x="79.5884%" y="831.50"></text></g><g><title>abi_stable::erased_types::iterator::next (30 samples, 0.03%)</title><rect x="79.3337%" y="901" width="0.0282%" height="15" fill="rgb(214,7,14)" fg:x="84327" fg:w="30"/><text x="79.5837%" y="911.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (25 samples, 0.02%)</title><rect x="79.3384%" y="885" width="0.0235%" height="15" fill="rgb(211,77,3)" fg:x="84332" fg:w="25"/><text x="79.5884%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.05%)</title><rect x="79.3187%" y="933" width="0.0527%" height="15" fill="rgb(229,5,9)" fg:x="84311" fg:w="56"/><text x="79.5687%" y="943.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (56 samples, 0.05%)</title><rect x="79.3187%" y="917" width="0.0527%" height="15" fill="rgb(225,90,11)" fg:x="84311" fg:w="56"/><text x="79.5687%" y="927.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (21 samples, 0.02%)</title><rect x="79.3874%" y="901" width="0.0198%" height="15" fill="rgb(242,56,8)" fg:x="84384" fg:w="21"/><text x="79.6374%" y="911.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="79.4071%" y="869" width="0.0103%" height="15" fill="rgb(249,212,39)" fg:x="84405" fg:w="11"/><text x="79.6571%" y="879.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (11 samples, 0.01%)</title><rect x="79.4071%" y="853" width="0.0103%" height="15" fill="rgb(236,90,9)" fg:x="84405" fg:w="11"/><text x="79.6571%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (60 samples, 0.06%)</title><rect x="79.3714%" y="933" width="0.0564%" height="15" fill="rgb(206,88,35)" fg:x="84367" fg:w="60"/><text x="79.6214%" y="943.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (60 samples, 0.06%)</title><rect x="79.3714%" y="917" width="0.0564%" height="15" fill="rgb(205,126,30)" fg:x="84367" fg:w="60"/><text x="79.6214%" y="927.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (22 samples, 0.02%)</title><rect x="79.4071%" y="901" width="0.0207%" height="15" fill="rgb(230,176,12)" fg:x="84405" fg:w="22"/><text x="79.6571%" y="911.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (22 samples, 0.02%)</title><rect x="79.4071%" y="885" width="0.0207%" height="15" fill="rgb(243,19,9)" fg:x="84405" fg:w="22"/><text x="79.6571%" y="895.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (11 samples, 0.01%)</title><rect x="79.4175%" y="869" width="0.0103%" height="15" fill="rgb(245,171,17)" fg:x="84416" fg:w="11"/><text x="79.6675%" y="879.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (22 samples, 0.02%)</title><rect x="79.5031%" y="677" width="0.0207%" height="15" fill="rgb(227,52,21)" fg:x="84507" fg:w="22"/><text x="79.7531%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="79.5068%" y="661" width="0.0169%" height="15" fill="rgb(238,69,14)" fg:x="84511" fg:w="18"/><text x="79.7568%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (48 samples, 0.05%)</title><rect x="79.4852%" y="725" width="0.0452%" height="15" fill="rgb(241,156,39)" fg:x="84488" fg:w="48"/><text x="79.7352%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (48 samples, 0.05%)</title><rect x="79.4852%" y="709" width="0.0452%" height="15" fill="rgb(212,227,28)" fg:x="84488" fg:w="48"/><text x="79.7352%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (47 samples, 0.04%)</title><rect x="79.4861%" y="693" width="0.0442%" height="15" fill="rgb(209,118,27)" fg:x="84489" fg:w="47"/><text x="79.7361%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (85 samples, 0.08%)</title><rect x="79.4692%" y="757" width="0.0800%" height="15" fill="rgb(226,102,5)" fg:x="84471" fg:w="85"/><text x="79.7192%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (85 samples, 0.08%)</title><rect x="79.4692%" y="741" width="0.0800%" height="15" fill="rgb(223,34,3)" fg:x="84471" fg:w="85"/><text x="79.7192%" y="751.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (20 samples, 0.02%)</title><rect x="79.5304%" y="725" width="0.0188%" height="15" fill="rgb(221,81,38)" fg:x="84536" fg:w="20"/><text x="79.7804%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (88 samples, 0.08%)</title><rect x="79.4692%" y="789" width="0.0828%" height="15" fill="rgb(236,219,28)" fg:x="84471" fg:w="88"/><text x="79.7192%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (88 samples, 0.08%)</title><rect x="79.4692%" y="773" width="0.0828%" height="15" fill="rgb(213,200,14)" fg:x="84471" fg:w="88"/><text x="79.7192%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (96 samples, 0.09%)</title><rect x="79.4645%" y="805" width="0.0903%" height="15" fill="rgb(240,33,19)" fg:x="84466" fg:w="96"/><text x="79.7145%" y="815.50"></text></g><g><title>rust_dealloc (106 samples, 0.10%)</title><rect x="79.4570%" y="821" width="0.0997%" height="15" fill="rgb(233,113,27)" fg:x="84458" fg:w="106"/><text x="79.7070%" y="831.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (136 samples, 0.13%)</title><rect x="79.4306%" y="901" width="0.1279%" height="15" fill="rgb(220,221,18)" fg:x="84430" fg:w="136"/><text x="79.6806%" y="911.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (127 samples, 0.12%)</title><rect x="79.4391%" y="885" width="0.1195%" height="15" fill="rgb(238,92,8)" fg:x="84439" fg:w="127"/><text x="79.6891%" y="895.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (123 samples, 0.12%)</title><rect x="79.4429%" y="869" width="0.1157%" height="15" fill="rgb(222,164,16)" fg:x="84443" fg:w="123"/><text x="79.6929%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::value::Value&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (123 samples, 0.12%)</title><rect x="79.4429%" y="853" width="0.1157%" height="15" fill="rgb(241,119,3)" fg:x="84443" fg:w="123"/><text x="79.6929%" y="863.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (123 samples, 0.12%)</title><rect x="79.4429%" y="837" width="0.1157%" height="15" fill="rgb(241,44,8)" fg:x="84443" fg:w="123"/><text x="79.6929%" y="847.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1,163 samples, 1.09%)</title><rect x="78.4701%" y="997" width="1.0941%" height="15" fill="rgb(230,36,40)" fg:x="83409" fg:w="1163"/><text x="78.7201%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (900 samples, 0.85%)</title><rect x="78.7175%" y="981" width="0.8467%" height="15" fill="rgb(243,16,36)" fg:x="83672" fg:w="900"/><text x="78.9675%" y="991.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (584 samples, 0.55%)</title><rect x="79.0148%" y="965" width="0.5494%" height="15" fill="rgb(231,4,26)" fg:x="83988" fg:w="584"/><text x="79.2648%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (279 samples, 0.26%)</title><rect x="79.3017%" y="949" width="0.2625%" height="15" fill="rgb(240,9,31)" fg:x="84293" fg:w="279"/><text x="79.5517%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (142 samples, 0.13%)</title><rect x="79.4306%" y="933" width="0.1336%" height="15" fill="rgb(207,173,15)" fg:x="84430" fg:w="142"/><text x="79.6806%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (142 samples, 0.13%)</title><rect x="79.4306%" y="917" width="0.1336%" height="15" fill="rgb(224,192,53)" fg:x="84430" fg:w="142"/><text x="79.6806%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.05%)</title><rect x="79.6179%" y="789" width="0.0452%" height="15" fill="rgb(223,67,28)" fg:x="84629" fg:w="48"/><text x="79.8679%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (48 samples, 0.05%)</title><rect x="79.6179%" y="773" width="0.0452%" height="15" fill="rgb(211,20,47)" fg:x="84629" fg:w="48"/><text x="79.8679%" y="783.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (39 samples, 0.04%)</title><rect x="79.6263%" y="757" width="0.0367%" height="15" fill="rgb(240,228,2)" fg:x="84638" fg:w="39"/><text x="79.8763%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (34 samples, 0.03%)</title><rect x="79.6310%" y="741" width="0.0320%" height="15" fill="rgb(248,151,12)" fg:x="84643" fg:w="34"/><text x="79.8810%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="79.6310%" y="725" width="0.0320%" height="15" fill="rgb(244,8,39)" fg:x="84643" fg:w="34"/><text x="79.8810%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="79.6310%" y="709" width="0.0320%" height="15" fill="rgb(222,26,8)" fg:x="84643" fg:w="34"/><text x="79.8810%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (173 samples, 0.16%)</title><rect x="79.6037%" y="837" width="0.1628%" height="15" fill="rgb(213,106,44)" fg:x="84614" fg:w="173"/><text x="79.8537%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (166 samples, 0.16%)</title><rect x="79.6103%" y="821" width="0.1562%" height="15" fill="rgb(214,129,20)" fg:x="84621" fg:w="166"/><text x="79.8603%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (162 samples, 0.15%)</title><rect x="79.6141%" y="805" width="0.1524%" height="15" fill="rgb(212,32,13)" fg:x="84625" fg:w="162"/><text x="79.8641%" y="815.50"></text></g><g><title>snmalloc::FreeListIter::take (104 samples, 0.10%)</title><rect x="79.6687%" y="789" width="0.0978%" height="15" fill="rgb(208,168,33)" fg:x="84683" fg:w="104"/><text x="79.9187%" y="799.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (104 samples, 0.10%)</title><rect x="79.6687%" y="773" width="0.0978%" height="15" fill="rgb(231,207,8)" fg:x="84683" fg:w="104"/><text x="79.9187%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (220 samples, 0.21%)</title><rect x="79.5652%" y="965" width="0.2070%" height="15" fill="rgb(235,219,23)" fg:x="84573" fg:w="220"/><text x="79.8152%" y="975.50"></text></g><g><title>alloc::alloc::exchange_malloc (189 samples, 0.18%)</title><rect x="79.5943%" y="949" width="0.1778%" height="15" fill="rgb(226,216,26)" fg:x="84604" fg:w="189"/><text x="79.8443%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (189 samples, 0.18%)</title><rect x="79.5943%" y="933" width="0.1778%" height="15" fill="rgb(239,137,16)" fg:x="84604" fg:w="189"/><text x="79.8443%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (189 samples, 0.18%)</title><rect x="79.5943%" y="917" width="0.1778%" height="15" fill="rgb(207,12,36)" fg:x="84604" fg:w="189"/><text x="79.8443%" y="927.50"></text></g><g><title>alloc::alloc::alloc (189 samples, 0.18%)</title><rect x="79.5943%" y="901" width="0.1778%" height="15" fill="rgb(210,214,24)" fg:x="84604" fg:w="189"/><text x="79.8443%" y="911.50"></text></g><g><title>__rg_alloc (189 samples, 0.18%)</title><rect x="79.5943%" y="885" width="0.1778%" height="15" fill="rgb(206,56,30)" fg:x="84604" fg:w="189"/><text x="79.8443%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (189 samples, 0.18%)</title><rect x="79.5943%" y="869" width="0.1778%" height="15" fill="rgb(228,143,26)" fg:x="84604" fg:w="189"/><text x="79.8443%" y="879.50"></text></g><g><title>rust_alloc (181 samples, 0.17%)</title><rect x="79.6019%" y="853" width="0.1703%" height="15" fill="rgb(216,218,46)" fg:x="84612" fg:w="181"/><text x="79.8519%" y="863.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (1,416 samples, 1.33%)</title><rect x="78.4503%" y="1029" width="1.3322%" height="15" fill="rgb(206,6,19)" fg:x="83388" fg:w="1416"/><text x="78.7003%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::clone::Clone for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::clone (1,401 samples, 1.32%)</title><rect x="78.4644%" y="1013" width="1.3180%" height="15" fill="rgb(239,177,51)" fg:x="83403" fg:w="1401"/><text x="78.7144%" y="1023.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (231 samples, 0.22%)</title><rect x="79.5652%" y="997" width="0.2173%" height="15" fill="rgb(216,55,25)" fg:x="84573" fg:w="231"/><text x="79.8152%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (231 samples, 0.22%)</title><rect x="79.5652%" y="981" width="0.2173%" height="15" fill="rgb(231,163,29)" fg:x="84573" fg:w="231"/><text x="79.8152%" y="991.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (11 samples, 0.01%)</title><rect x="79.7721%" y="965" width="0.0103%" height="15" fill="rgb(232,149,50)" fg:x="84793" fg:w="11"/><text x="80.0221%" y="975.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (6,721 samples, 6.32%)</title><rect x="73.4717%" y="1125" width="6.3230%" height="15" fill="rgb(223,142,48)" fg:x="78096" fg:w="6721"/><text x="73.7217%" y="1135.50">tremor_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,721 samples, 6.32%)</title><rect x="73.4717%" y="1109" width="6.3230%" height="15" fill="rgb(245,83,23)" fg:x="78096" fg:w="6721"/><text x="73.7217%" y="1119.50">&lt;core::f..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (6,721 samples, 6.32%)</title><rect x="73.4717%" y="1093" width="6.3230%" height="15" fill="rgb(224,63,2)" fg:x="78096" fg:w="6721"/><text x="73.7217%" y="1103.50">tremor_r..</text></g><g><title>tremor_runtime::connectors::source::build_events (6,718 samples, 6.32%)</title><rect x="73.4745%" y="1077" width="6.3202%" height="15" fill="rgb(218,65,53)" fg:x="78099" fg:w="6718"/><text x="73.7245%" y="1087.50">tremor_r..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,638 samples, 2.48%)</title><rect x="77.3129%" y="1061" width="2.4818%" height="15" fill="rgb(221,84,29)" fg:x="82179" fg:w="2638"/><text x="77.5629%" y="1071.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,792 samples, 1.69%)</title><rect x="78.1088%" y="1045" width="1.6859%" height="15" fill="rgb(234,0,32)" fg:x="83025" fg:w="1792"/><text x="78.3588%" y="1055.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (13 samples, 0.01%)</title><rect x="79.7825%" y="1029" width="0.0122%" height="15" fill="rgb(206,20,16)" fg:x="84804" fg:w="13"/><text x="80.0325%" y="1039.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="80.0553%" y="981" width="0.0216%" height="15" fill="rgb(244,172,18)" fg:x="85094" fg:w="23"/><text x="80.3053%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (23 samples, 0.02%)</title><rect x="80.0553%" y="965" width="0.0216%" height="15" fill="rgb(254,133,1)" fg:x="85094" fg:w="23"/><text x="80.3053%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.02%)</title><rect x="80.0553%" y="949" width="0.0216%" height="15" fill="rgb(222,206,41)" fg:x="85094" fg:w="23"/><text x="80.3053%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (23 samples, 0.02%)</title><rect x="80.0553%" y="933" width="0.0216%" height="15" fill="rgb(212,3,42)" fg:x="85094" fg:w="23"/><text x="80.3053%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="80.0770%" y="981" width="0.0113%" height="15" fill="rgb(241,11,4)" fg:x="85117" fg:w="12"/><text x="80.3270%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (13 samples, 0.01%)</title><rect x="80.0882%" y="981" width="0.0122%" height="15" fill="rgb(205,19,26)" fg:x="85129" fg:w="13"/><text x="80.3382%" y="991.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="80.0882%" y="965" width="0.0122%" height="15" fill="rgb(210,179,32)" fg:x="85129" fg:w="13"/><text x="80.3382%" y="975.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="80.0882%" y="949" width="0.0122%" height="15" fill="rgb(227,116,49)" fg:x="85129" fg:w="13"/><text x="80.3382%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (179 samples, 0.17%)</title><rect x="80.1626%" y="965" width="0.1684%" height="15" fill="rgb(211,146,6)" fg:x="85208" fg:w="179"/><text x="80.4126%" y="975.50"></text></g><g><title>core::mem::replace (179 samples, 0.17%)</title><rect x="80.1626%" y="949" width="0.1684%" height="15" fill="rgb(219,44,39)" fg:x="85208" fg:w="179"/><text x="80.4126%" y="959.50"></text></g><g><title>core::ptr::read (178 samples, 0.17%)</title><rect x="80.1635%" y="933" width="0.1675%" height="15" fill="rgb(234,128,11)" fg:x="85209" fg:w="178"/><text x="80.4135%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (313 samples, 0.29%)</title><rect x="80.1005%" y="981" width="0.2945%" height="15" fill="rgb(220,183,53)" fg:x="85142" fg:w="313"/><text x="80.3505%" y="991.50"></text></g><g><title>core::mem::drop (68 samples, 0.06%)</title><rect x="80.3310%" y="965" width="0.0640%" height="15" fill="rgb(213,219,32)" fg:x="85387" fg:w="68"/><text x="80.5810%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (68 samples, 0.06%)</title><rect x="80.3310%" y="949" width="0.0640%" height="15" fill="rgb(232,156,16)" fg:x="85387" fg:w="68"/><text x="80.5810%" y="959.50"></text></g><g><title>core::mem::drop (30 samples, 0.03%)</title><rect x="80.3949%" y="981" width="0.0282%" height="15" fill="rgb(246,135,34)" fg:x="85455" fg:w="30"/><text x="80.6449%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (30 samples, 0.03%)</title><rect x="80.3949%" y="965" width="0.0282%" height="15" fill="rgb(241,99,0)" fg:x="85455" fg:w="30"/><text x="80.6449%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (28 samples, 0.03%)</title><rect x="80.3968%" y="949" width="0.0263%" height="15" fill="rgb(222,103,45)" fg:x="85457" fg:w="28"/><text x="80.6468%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="80.3968%" y="933" width="0.0263%" height="15" fill="rgb(212,57,4)" fg:x="85457" fg:w="28"/><text x="80.6468%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (27 samples, 0.03%)</title><rect x="80.3978%" y="917" width="0.0254%" height="15" fill="rgb(215,68,47)" fg:x="85458" fg:w="27"/><text x="80.6478%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (27 samples, 0.03%)</title><rect x="80.3978%" y="901" width="0.0254%" height="15" fill="rgb(230,84,2)" fg:x="85458" fg:w="27"/><text x="80.6478%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (27 samples, 0.03%)</title><rect x="80.3978%" y="885" width="0.0254%" height="15" fill="rgb(220,102,14)" fg:x="85458" fg:w="27"/><text x="80.6478%" y="895.50"></text></g><g><title>__GI___lll_lock_wake (12 samples, 0.01%)</title><rect x="80.4119%" y="869" width="0.0113%" height="15" fill="rgb(240,10,32)" fg:x="85473" fg:w="12"/><text x="80.6619%" y="879.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="80.4232%" y="965" width="0.0282%" height="15" fill="rgb(215,47,27)" fg:x="85485" fg:w="30"/><text x="80.6732%" y="975.50"></text></g><g><title>std::sync::poison::Flag::done (15 samples, 0.01%)</title><rect x="80.4589%" y="933" width="0.0141%" height="15" fill="rgb(233,188,43)" fg:x="85523" fg:w="15"/><text x="80.7089%" y="943.50"></text></g><g><title>std::thread::panicking (14 samples, 0.01%)</title><rect x="80.4599%" y="917" width="0.0132%" height="15" fill="rgb(253,190,1)" fg:x="85524" fg:w="14"/><text x="80.7099%" y="927.50"></text></g><g><title>std::panicking::panicking (14 samples, 0.01%)</title><rect x="80.4599%" y="901" width="0.0132%" height="15" fill="rgb(206,114,52)" fg:x="85524" fg:w="14"/><text x="80.7099%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (14 samples, 0.01%)</title><rect x="80.4599%" y="885" width="0.0132%" height="15" fill="rgb(233,120,37)" fg:x="85524" fg:w="14"/><text x="80.7099%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="80.4730%" y="917" width="0.0103%" height="15" fill="rgb(214,52,39)" fg:x="85538" fg:w="11"/><text x="80.7230%" y="927.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (295 samples, 0.28%)</title><rect x="80.4834%" y="901" width="0.2775%" height="15" fill="rgb(223,80,29)" fg:x="85549" fg:w="295"/><text x="80.7334%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (370 samples, 0.35%)</title><rect x="80.4232%" y="981" width="0.3481%" height="15" fill="rgb(230,101,40)" fg:x="85485" fg:w="370"/><text x="80.6732%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (340 samples, 0.32%)</title><rect x="80.4514%" y="965" width="0.3199%" height="15" fill="rgb(219,211,8)" fg:x="85515" fg:w="340"/><text x="80.7014%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (340 samples, 0.32%)</title><rect x="80.4514%" y="949" width="0.3199%" height="15" fill="rgb(252,126,28)" fg:x="85515" fg:w="340"/><text x="80.7014%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (317 samples, 0.30%)</title><rect x="80.4730%" y="933" width="0.2982%" height="15" fill="rgb(215,56,38)" fg:x="85538" fg:w="317"/><text x="80.7230%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (306 samples, 0.29%)</title><rect x="80.4834%" y="917" width="0.2879%" height="15" fill="rgb(249,55,44)" fg:x="85549" fg:w="306"/><text x="80.7334%" y="927.50"></text></g><g><title>___pthread_mutex_unlock (11 samples, 0.01%)</title><rect x="80.7609%" y="901" width="0.0103%" height="15" fill="rgb(220,221,32)" fg:x="85844" fg:w="11"/><text x="81.0109%" y="911.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="80.7844%" y="933" width="0.0160%" height="15" fill="rgb(212,216,41)" fg:x="85869" fg:w="17"/><text x="81.0344%" y="943.50"></text></g><g><title>core::task::wake::Waker::will_wake (40 samples, 0.04%)</title><rect x="80.7741%" y="981" width="0.0376%" height="15" fill="rgb(228,213,43)" fg:x="85858" fg:w="40"/><text x="81.0241%" y="991.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (40 samples, 0.04%)</title><rect x="80.7741%" y="965" width="0.0376%" height="15" fill="rgb(211,31,26)" fg:x="85858" fg:w="40"/><text x="81.0241%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (29 samples, 0.03%)</title><rect x="80.7844%" y="949" width="0.0273%" height="15" fill="rgb(229,202,19)" fg:x="85869" fg:w="29"/><text x="81.0344%" y="959.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="80.8004%" y="933" width="0.0113%" height="15" fill="rgb(229,105,46)" fg:x="85886" fg:w="12"/><text x="81.0504%" y="943.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="80.8277%" y="949" width="0.0216%" height="15" fill="rgb(235,108,1)" fg:x="85915" fg:w="23"/><text x="81.0777%" y="959.50"></text></g><g><title>std::sync::poison::Flag::borrow (23 samples, 0.02%)</title><rect x="80.8277%" y="933" width="0.0216%" height="15" fill="rgb(245,111,35)" fg:x="85915" fg:w="23"/><text x="81.0777%" y="943.50"></text></g><g><title>std::thread::panicking (14 samples, 0.01%)</title><rect x="80.8362%" y="917" width="0.0132%" height="15" fill="rgb(219,185,31)" fg:x="85924" fg:w="14"/><text x="81.0862%" y="927.50"></text></g><g><title>std::panicking::panicking (14 samples, 0.01%)</title><rect x="80.8362%" y="901" width="0.0132%" height="15" fill="rgb(214,4,43)" fg:x="85924" fg:w="14"/><text x="81.0862%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (14 samples, 0.01%)</title><rect x="80.8362%" y="885" width="0.0132%" height="15" fill="rgb(235,227,40)" fg:x="85924" fg:w="14"/><text x="81.0862%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="80.8362%" y="869" width="0.0132%" height="15" fill="rgb(230,88,30)" fg:x="85924" fg:w="14"/><text x="81.0862%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="80.8362%" y="853" width="0.0132%" height="15" fill="rgb(216,217,1)" fg:x="85924" fg:w="14"/><text x="81.0862%" y="863.50"></text></g><g><title>event_listener::Inner::lock (647 samples, 0.61%)</title><rect x="80.8117%" y="981" width="0.6087%" height="15" fill="rgb(248,139,50)" fg:x="85898" fg:w="647"/><text x="81.0617%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (630 samples, 0.59%)</title><rect x="80.8277%" y="965" width="0.5927%" height="15" fill="rgb(233,1,21)" fg:x="85915" fg:w="630"/><text x="81.0777%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (607 samples, 0.57%)</title><rect x="80.8493%" y="949" width="0.5711%" height="15" fill="rgb(215,183,12)" fg:x="85938" fg:w="607"/><text x="81.0993%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (596 samples, 0.56%)</title><rect x="80.8597%" y="933" width="0.5607%" height="15" fill="rgb(229,104,42)" fg:x="85949" fg:w="596"/><text x="81.1097%" y="943.50"></text></g><g><title>___pthread_mutex_lock (596 samples, 0.56%)</title><rect x="80.8597%" y="917" width="0.5607%" height="15" fill="rgb(243,34,48)" fg:x="85949" fg:w="596"/><text x="81.1097%" y="927.50"></text></g><g><title>__GI___lll_lock_wait (78 samples, 0.07%)</title><rect x="81.3470%" y="901" width="0.0734%" height="15" fill="rgb(239,11,44)" fg:x="86467" fg:w="78"/><text x="81.5970%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,596 samples, 1.50%)</title><rect x="79.9697%" y="997" width="1.5015%" height="15" fill="rgb(231,98,35)" fg:x="85003" fg:w="1596"/><text x="80.2197%" y="1007.50"></text></g><g><title>event_listener::List::remove (54 samples, 0.05%)</title><rect x="81.4204%" y="981" width="0.0508%" height="15" fill="rgb(233,28,25)" fg:x="86545" fg:w="54"/><text x="81.6704%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (47 samples, 0.04%)</title><rect x="81.4270%" y="965" width="0.0442%" height="15" fill="rgb(234,123,11)" fg:x="86552" fg:w="47"/><text x="81.6770%" y="975.50"></text></g><g><title>core::mem::replace (47 samples, 0.04%)</title><rect x="81.4270%" y="949" width="0.0442%" height="15" fill="rgb(220,69,3)" fg:x="86552" fg:w="47"/><text x="81.6770%" y="959.50"></text></g><g><title>core::ptr::read (47 samples, 0.04%)</title><rect x="81.4270%" y="933" width="0.0442%" height="15" fill="rgb(214,64,36)" fg:x="86552" fg:w="47"/><text x="81.6770%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (36 samples, 0.03%)</title><rect x="81.6923%" y="949" width="0.0339%" height="15" fill="rgb(211,138,32)" fg:x="86834" fg:w="36"/><text x="81.9423%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (36 samples, 0.03%)</title><rect x="81.6923%" y="933" width="0.0339%" height="15" fill="rgb(213,118,47)" fg:x="86834" fg:w="36"/><text x="81.9423%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (36 samples, 0.03%)</title><rect x="81.6923%" y="917" width="0.0339%" height="15" fill="rgb(243,124,49)" fg:x="86834" fg:w="36"/><text x="81.9423%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (36 samples, 0.03%)</title><rect x="81.6923%" y="901" width="0.0339%" height="15" fill="rgb(221,30,28)" fg:x="86834" fg:w="36"/><text x="81.9423%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (203 samples, 0.19%)</title><rect x="81.7318%" y="949" width="0.1910%" height="15" fill="rgb(246,37,13)" fg:x="86876" fg:w="203"/><text x="81.9818%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (203 samples, 0.19%)</title><rect x="81.7318%" y="933" width="0.1910%" height="15" fill="rgb(249,66,14)" fg:x="86876" fg:w="203"/><text x="81.9818%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (418 samples, 0.39%)</title><rect x="81.9228%" y="949" width="0.3932%" height="15" fill="rgb(213,166,5)" fg:x="87079" fg:w="418"/><text x="82.1728%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (408 samples, 0.38%)</title><rect x="81.9322%" y="933" width="0.3838%" height="15" fill="rgb(221,66,24)" fg:x="87089" fg:w="408"/><text x="82.1822%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (885 samples, 0.83%)</title><rect x="81.4947%" y="981" width="0.8326%" height="15" fill="rgb(210,132,17)" fg:x="86624" fg:w="885"/><text x="81.7447%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (838 samples, 0.79%)</title><rect x="81.5389%" y="965" width="0.7884%" height="15" fill="rgb(243,202,5)" fg:x="86671" fg:w="838"/><text x="81.7889%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (12 samples, 0.01%)</title><rect x="82.3160%" y="949" width="0.0113%" height="15" fill="rgb(233,70,48)" fg:x="87497" fg:w="12"/><text x="82.5660%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_store (12 samples, 0.01%)</title><rect x="82.3160%" y="933" width="0.0113%" height="15" fill="rgb(238,41,26)" fg:x="87497" fg:w="12"/><text x="82.5660%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (109 samples, 0.10%)</title><rect x="82.3546%" y="965" width="0.1025%" height="15" fill="rgb(241,19,31)" fg:x="87538" fg:w="109"/><text x="82.6046%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (109 samples, 0.10%)</title><rect x="82.3546%" y="949" width="0.1025%" height="15" fill="rgb(214,76,10)" fg:x="87538" fg:w="109"/><text x="82.6046%" y="959.50"></text></g><g><title>event_listener::Event::try_inner (139 samples, 0.13%)</title><rect x="82.4571%" y="965" width="0.1308%" height="15" fill="rgb(254,202,22)" fg:x="87647" fg:w="139"/><text x="82.7071%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (139 samples, 0.13%)</title><rect x="82.4571%" y="949" width="0.1308%" height="15" fill="rgb(214,72,24)" fg:x="87647" fg:w="139"/><text x="82.7071%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (139 samples, 0.13%)</title><rect x="82.4571%" y="933" width="0.1308%" height="15" fill="rgb(221,92,46)" fg:x="87647" fg:w="139"/><text x="82.7071%" y="943.50"></text></g><g><title>event_listener::Inner::lock (17 samples, 0.02%)</title><rect x="82.5879%" y="965" width="0.0160%" height="15" fill="rgb(246,13,50)" fg:x="87786" fg:w="17"/><text x="82.8379%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="82.5879%" y="949" width="0.0160%" height="15" fill="rgb(240,165,38)" fg:x="87786" fg:w="17"/><text x="82.8379%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="82.5879%" y="933" width="0.0160%" height="15" fill="rgb(241,24,51)" fg:x="87786" fg:w="17"/><text x="82.8379%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="82.5898%" y="917" width="0.0141%" height="15" fill="rgb(227,51,44)" fg:x="87788" fg:w="15"/><text x="82.8398%" y="927.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="82.5898%" y="901" width="0.0141%" height="15" fill="rgb(231,121,3)" fg:x="87788" fg:w="15"/><text x="82.8398%" y="911.50"></text></g><g><title>parking::Unparker::unpark (35 samples, 0.03%)</title><rect x="82.6180%" y="821" width="0.0329%" height="15" fill="rgb(245,3,41)" fg:x="87818" fg:w="35"/><text x="82.8680%" y="831.50"></text></g><g><title>parking::Inner::unpark (33 samples, 0.03%)</title><rect x="82.6199%" y="805" width="0.0310%" height="15" fill="rgb(214,13,26)" fg:x="87820" fg:w="33"/><text x="82.8699%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.02%)</title><rect x="82.6359%" y="789" width="0.0151%" height="15" fill="rgb(252,75,11)" fg:x="87837" fg:w="16"/><text x="82.8859%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="82.6368%" y="773" width="0.0141%" height="15" fill="rgb(218,226,17)" fg:x="87838" fg:w="15"/><text x="82.8868%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="82.6368%" y="757" width="0.0141%" height="15" fill="rgb(248,89,38)" fg:x="87838" fg:w="15"/><text x="82.8868%" y="767.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="82.6368%" y="741" width="0.0141%" height="15" fill="rgb(237,73,46)" fg:x="87838" fg:w="15"/><text x="82.8868%" y="751.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (39 samples, 0.04%)</title><rect x="82.6152%" y="837" width="0.0367%" height="15" fill="rgb(242,78,33)" fg:x="87815" fg:w="39"/><text x="82.8652%" y="847.50"></text></g><g><title>core::task::wake::Waker::wake (43 samples, 0.04%)</title><rect x="82.6152%" y="869" width="0.0405%" height="15" fill="rgb(235,60,3)" fg:x="87815" fg:w="43"/><text x="82.8652%" y="879.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (43 samples, 0.04%)</title><rect x="82.6152%" y="853" width="0.0405%" height="15" fill="rgb(216,172,19)" fg:x="87815" fg:w="43"/><text x="82.8652%" y="863.50"></text></g><g><title>async_executor::State::notify (54 samples, 0.05%)</title><rect x="82.6077%" y="885" width="0.0508%" height="15" fill="rgb(227,6,42)" fg:x="87807" fg:w="54"/><text x="82.8577%" y="895.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (65 samples, 0.06%)</title><rect x="82.6077%" y="901" width="0.0612%" height="15" fill="rgb(223,207,42)" fg:x="87807" fg:w="65"/><text x="82.8577%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (11 samples, 0.01%)</title><rect x="82.6585%" y="885" width="0.0103%" height="15" fill="rgb(246,138,30)" fg:x="87861" fg:w="11"/><text x="82.9085%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (11 samples, 0.01%)</title><rect x="82.6585%" y="869" width="0.0103%" height="15" fill="rgb(251,199,47)" fg:x="87861" fg:w="11"/><text x="82.9085%" y="879.50"></text></g><g><title>event_listener::List::notify (80 samples, 0.08%)</title><rect x="82.6039%" y="965" width="0.0753%" height="15" fill="rgb(228,218,44)" fg:x="87803" fg:w="80"/><text x="82.8539%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (79 samples, 0.07%)</title><rect x="82.6049%" y="949" width="0.0743%" height="15" fill="rgb(220,68,6)" fg:x="87804" fg:w="79"/><text x="82.8549%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (79 samples, 0.07%)</title><rect x="82.6049%" y="933" width="0.0743%" height="15" fill="rgb(240,60,26)" fg:x="87804" fg:w="79"/><text x="82.8549%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (77 samples, 0.07%)</title><rect x="82.6067%" y="917" width="0.0724%" height="15" fill="rgb(211,200,19)" fg:x="87806" fg:w="77"/><text x="82.8567%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.01%)</title><rect x="82.6688%" y="901" width="0.0103%" height="15" fill="rgb(242,145,30)" fg:x="87872" fg:w="11"/><text x="82.9188%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.01%)</title><rect x="82.6688%" y="885" width="0.0103%" height="15" fill="rgb(225,64,13)" fg:x="87872" fg:w="11"/><text x="82.9188%" y="895.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,979 samples, 1.86%)</title><rect x="81.4712%" y="997" width="1.8618%" height="15" fill="rgb(218,103,35)" fg:x="86599" fg:w="1979"/><text x="81.7212%" y="1007.50">a..</text></g><g><title>event_listener::Event::notify (1,069 samples, 1.01%)</title><rect x="82.3273%" y="981" width="1.0057%" height="15" fill="rgb(216,93,46)" fg:x="87509" fg:w="1069"/><text x="82.5773%" y="991.50"></text></g><g><title>event_listener::full_fence (695 samples, 0.65%)</title><rect x="82.6792%" y="965" width="0.6538%" height="15" fill="rgb(225,159,27)" fg:x="87883" fg:w="695"/><text x="82.9292%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (694 samples, 0.65%)</title><rect x="82.6801%" y="949" width="0.6529%" height="15" fill="rgb(225,204,11)" fg:x="87884" fg:w="694"/><text x="82.9301%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (694 samples, 0.65%)</title><rect x="82.6801%" y="933" width="0.6529%" height="15" fill="rgb(205,56,4)" fg:x="87884" fg:w="694"/><text x="82.9301%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (16 samples, 0.02%)</title><rect x="83.3330%" y="997" width="0.0151%" height="15" fill="rgb(206,6,35)" fg:x="88578" fg:w="16"/><text x="83.5830%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (36 samples, 0.03%)</title><rect x="83.3659%" y="949" width="0.0339%" height="15" fill="rgb(247,73,52)" fg:x="88613" fg:w="36"/><text x="83.6159%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (35 samples, 0.03%)</title><rect x="83.3669%" y="933" width="0.0329%" height="15" fill="rgb(246,97,4)" fg:x="88614" fg:w="35"/><text x="83.6169%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="83.3669%" y="917" width="0.0329%" height="15" fill="rgb(212,37,15)" fg:x="88614" fg:w="35"/><text x="83.6169%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (34 samples, 0.03%)</title><rect x="83.3678%" y="901" width="0.0320%" height="15" fill="rgb(208,130,40)" fg:x="88615" fg:w="34"/><text x="83.6178%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (34 samples, 0.03%)</title><rect x="83.3678%" y="885" width="0.0320%" height="15" fill="rgb(236,55,29)" fg:x="88615" fg:w="34"/><text x="83.6178%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (34 samples, 0.03%)</title><rect x="83.3678%" y="869" width="0.0320%" height="15" fill="rgb(209,156,45)" fg:x="88615" fg:w="34"/><text x="83.6178%" y="879.50"></text></g><g><title>event_listener::Inner::lock (69 samples, 0.06%)</title><rect x="83.3998%" y="949" width="0.0649%" height="15" fill="rgb(249,107,4)" fg:x="88649" fg:w="69"/><text x="83.6498%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (68 samples, 0.06%)</title><rect x="83.4008%" y="933" width="0.0640%" height="15" fill="rgb(227,7,13)" fg:x="88650" fg:w="68"/><text x="83.6508%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (63 samples, 0.06%)</title><rect x="83.4055%" y="917" width="0.0593%" height="15" fill="rgb(250,129,14)" fg:x="88655" fg:w="63"/><text x="83.6555%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (56 samples, 0.05%)</title><rect x="83.4120%" y="901" width="0.0527%" height="15" fill="rgb(229,92,13)" fg:x="88662" fg:w="56"/><text x="83.6620%" y="911.50"></text></g><g><title>___pthread_mutex_lock (56 samples, 0.05%)</title><rect x="83.4120%" y="885" width="0.0527%" height="15" fill="rgb(245,98,39)" fg:x="88662" fg:w="56"/><text x="83.6620%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (16 samples, 0.02%)</title><rect x="83.4497%" y="869" width="0.0151%" height="15" fill="rgb(234,135,48)" fg:x="88702" fg:w="16"/><text x="83.6997%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (120 samples, 0.11%)</title><rect x="83.3641%" y="965" width="0.1129%" height="15" fill="rgb(230,98,28)" fg:x="88611" fg:w="120"/><text x="83.6141%" y="975.50"></text></g><g><title>event_listener::List::remove (11 samples, 0.01%)</title><rect x="83.4666%" y="949" width="0.0103%" height="15" fill="rgb(223,121,0)" fg:x="88720" fg:w="11"/><text x="83.7166%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (164 samples, 0.15%)</title><rect x="83.3481%" y="997" width="0.1543%" height="15" fill="rgb(234,173,33)" fg:x="88594" fg:w="164"/><text x="83.5981%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (148 samples, 0.14%)</title><rect x="83.3631%" y="981" width="0.1392%" height="15" fill="rgb(245,47,8)" fg:x="88610" fg:w="148"/><text x="83.6131%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (27 samples, 0.03%)</title><rect x="83.4770%" y="965" width="0.0254%" height="15" fill="rgb(205,17,20)" fg:x="88731" fg:w="27"/><text x="83.7270%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="83.4770%" y="949" width="0.0254%" height="15" fill="rgb(232,151,16)" fg:x="88731" fg:w="27"/><text x="83.7270%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.03%)</title><rect x="83.4770%" y="933" width="0.0254%" height="15" fill="rgb(208,30,32)" fg:x="88731" fg:w="27"/><text x="83.7270%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.03%)</title><rect x="83.4770%" y="917" width="0.0254%" height="15" fill="rgb(254,26,3)" fg:x="88731" fg:w="27"/><text x="83.7270%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (55 samples, 0.05%)</title><rect x="83.5052%" y="981" width="0.0517%" height="15" fill="rgb(240,177,30)" fg:x="88761" fg:w="55"/><text x="83.7552%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (55 samples, 0.05%)</title><rect x="83.5052%" y="965" width="0.0517%" height="15" fill="rgb(248,76,44)" fg:x="88761" fg:w="55"/><text x="83.7552%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (55 samples, 0.05%)</title><rect x="83.5052%" y="949" width="0.0517%" height="15" fill="rgb(241,186,54)" fg:x="88761" fg:w="55"/><text x="83.7552%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (45 samples, 0.04%)</title><rect x="83.5579%" y="901" width="0.0423%" height="15" fill="rgb(249,171,29)" fg:x="88817" fg:w="45"/><text x="83.8079%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (47 samples, 0.04%)</title><rect x="83.5569%" y="981" width="0.0442%" height="15" fill="rgb(237,151,44)" fg:x="88816" fg:w="47"/><text x="83.8069%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (46 samples, 0.04%)</title><rect x="83.5579%" y="965" width="0.0433%" height="15" fill="rgb(228,174,30)" fg:x="88817" fg:w="46"/><text x="83.8079%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="83.5579%" y="949" width="0.0433%" height="15" fill="rgb(252,14,37)" fg:x="88817" fg:w="46"/><text x="83.8079%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (46 samples, 0.04%)</title><rect x="83.5579%" y="933" width="0.0433%" height="15" fill="rgb(207,111,40)" fg:x="88817" fg:w="46"/><text x="83.8079%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (46 samples, 0.04%)</title><rect x="83.5579%" y="917" width="0.0433%" height="15" fill="rgb(248,171,54)" fg:x="88817" fg:w="46"/><text x="83.8079%" y="927.50"></text></g><g><title>event_listener::Inner::lock (34 samples, 0.03%)</title><rect x="83.6030%" y="981" width="0.0320%" height="15" fill="rgb(211,127,2)" fg:x="88865" fg:w="34"/><text x="83.8530%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (34 samples, 0.03%)</title><rect x="83.6030%" y="965" width="0.0320%" height="15" fill="rgb(236,87,47)" fg:x="88865" fg:w="34"/><text x="83.8530%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (33 samples, 0.03%)</title><rect x="83.6040%" y="949" width="0.0310%" height="15" fill="rgb(223,190,45)" fg:x="88866" fg:w="33"/><text x="83.8540%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (33 samples, 0.03%)</title><rect x="83.6040%" y="933" width="0.0310%" height="15" fill="rgb(215,5,16)" fg:x="88866" fg:w="33"/><text x="83.8540%" y="943.50"></text></g><g><title>___pthread_mutex_lock (32 samples, 0.03%)</title><rect x="83.6049%" y="917" width="0.0301%" height="15" fill="rgb(252,82,33)" fg:x="88867" fg:w="32"/><text x="83.8549%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,003 samples, 3.77%)</title><rect x="79.8982%" y="1013" width="3.7660%" height="15" fill="rgb(247,213,44)" fg:x="84927" fg:w="4003"/><text x="80.1482%" y="1023.50">&lt;asy..</text></g><g><title>event_listener::Event::listen (172 samples, 0.16%)</title><rect x="83.5024%" y="997" width="0.1618%" height="15" fill="rgb(205,196,44)" fg:x="88758" fg:w="172"/><text x="83.7524%" y="1007.50"></text></g><g><title>event_listener::full_fence (29 samples, 0.03%)</title><rect x="83.6369%" y="981" width="0.0273%" height="15" fill="rgb(237,96,54)" fg:x="88901" fg:w="29"/><text x="83.8869%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (28 samples, 0.03%)</title><rect x="83.6378%" y="965" width="0.0263%" height="15" fill="rgb(230,113,34)" fg:x="88902" fg:w="28"/><text x="83.8878%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.03%)</title><rect x="83.6378%" y="949" width="0.0263%" height="15" fill="rgb(221,224,12)" fg:x="88902" fg:w="28"/><text x="83.8878%" y="959.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.02%)</title><rect x="83.6642%" y="1013" width="0.0151%" height="15" fill="rgb(219,112,44)" fg:x="88930" fg:w="16"/><text x="83.9142%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (828 samples, 0.78%)</title><rect x="83.6792%" y="1013" width="0.7790%" height="15" fill="rgb(210,31,13)" fg:x="88946" fg:w="828"/><text x="83.9292%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (201 samples, 0.19%)</title><rect x="84.4723%" y="997" width="0.1891%" height="15" fill="rgb(230,25,16)" fg:x="89789" fg:w="201"/><text x="84.7223%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (776 samples, 0.73%)</title><rect x="84.6718%" y="965" width="0.7301%" height="15" fill="rgb(246,108,53)" fg:x="90001" fg:w="776"/><text x="84.9218%" y="975.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="85.4253%" y="853" width="0.0113%" height="15" fill="rgb(241,172,50)" fg:x="90802" fg:w="12"/><text x="85.6753%" y="863.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="85.4394%" y="789" width="0.0122%" height="15" fill="rgb(235,141,10)" fg:x="90817" fg:w="13"/><text x="85.6894%" y="799.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (13 samples, 0.01%)</title><rect x="85.4987%" y="757" width="0.0122%" height="15" fill="rgb(220,174,43)" fg:x="90880" fg:w="13"/><text x="85.7487%" y="767.50"></text></g><g><title> (13 samples, 0.01%)</title><rect x="85.4987%" y="741" width="0.0122%" height="15" fill="rgb(215,181,40)" fg:x="90880" fg:w="13"/><text x="85.7487%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (68 samples, 0.06%)</title><rect x="85.4554%" y="789" width="0.0640%" height="15" fill="rgb(230,97,2)" fg:x="90834" fg:w="68"/><text x="85.7054%" y="799.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (62 samples, 0.06%)</title><rect x="85.4611%" y="773" width="0.0583%" height="15" fill="rgb(211,25,27)" fg:x="90840" fg:w="62"/><text x="85.7111%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (104 samples, 0.10%)</title><rect x="85.4366%" y="821" width="0.0978%" height="15" fill="rgb(230,87,26)" fg:x="90814" fg:w="104"/><text x="85.6866%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (104 samples, 0.10%)</title><rect x="85.4366%" y="805" width="0.0978%" height="15" fill="rgb(227,160,17)" fg:x="90814" fg:w="104"/><text x="85.6866%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (108 samples, 0.10%)</title><rect x="85.4366%" y="853" width="0.1016%" height="15" fill="rgb(244,85,34)" fg:x="90814" fg:w="108"/><text x="85.6866%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (108 samples, 0.10%)</title><rect x="85.4366%" y="837" width="0.1016%" height="15" fill="rgb(207,70,0)" fg:x="90814" fg:w="108"/><text x="85.6866%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (130 samples, 0.12%)</title><rect x="85.4197%" y="869" width="0.1223%" height="15" fill="rgb(223,129,7)" fg:x="90796" fg:w="130"/><text x="85.6697%" y="879.50"></text></g><g><title>rust_dealloc (151 samples, 0.14%)</title><rect x="85.4084%" y="885" width="0.1421%" height="15" fill="rgb(246,105,7)" fg:x="90784" fg:w="151"/><text x="85.6584%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (6,055 samples, 5.70%)</title><rect x="79.8578%" y="1029" width="5.6965%" height="15" fill="rgb(215,154,42)" fg:x="84884" fg:w="6055"/><text x="80.1078%" y="1039.50">&lt;async_..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,165 samples, 1.10%)</title><rect x="84.4582%" y="1013" width="1.0960%" height="15" fill="rgb(220,215,30)" fg:x="89774" fg:w="1165"/><text x="84.7082%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (949 samples, 0.89%)</title><rect x="84.6614%" y="997" width="0.8928%" height="15" fill="rgb(228,81,51)" fg:x="89990" fg:w="949"/><text x="84.9114%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (949 samples, 0.89%)</title><rect x="84.6614%" y="981" width="0.8928%" height="15" fill="rgb(247,71,54)" fg:x="89990" fg:w="949"/><text x="84.9114%" y="991.50"></text></g><g><title>alloc::alloc::box_free (162 samples, 0.15%)</title><rect x="85.4018%" y="965" width="0.1524%" height="15" fill="rgb(234,176,34)" fg:x="90777" fg:w="162"/><text x="85.6518%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (162 samples, 0.15%)</title><rect x="85.4018%" y="949" width="0.1524%" height="15" fill="rgb(241,103,54)" fg:x="90777" fg:w="162"/><text x="85.6518%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (162 samples, 0.15%)</title><rect x="85.4018%" y="933" width="0.1524%" height="15" fill="rgb(228,22,34)" fg:x="90777" fg:w="162"/><text x="85.6518%" y="943.50"></text></g><g><title>__rg_dealloc (162 samples, 0.15%)</title><rect x="85.4018%" y="917" width="0.1524%" height="15" fill="rgb(241,179,48)" fg:x="90777" fg:w="162"/><text x="85.6518%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (162 samples, 0.15%)</title><rect x="85.4018%" y="901" width="0.1524%" height="15" fill="rgb(235,167,37)" fg:x="90777" fg:w="162"/><text x="85.6518%" y="911.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,465 samples, 6.08%)</title><rect x="79.8361%" y="1045" width="6.0822%" height="15" fill="rgb(213,109,30)" fg:x="84861" fg:w="6465"/><text x="80.0861%" y="1055.50">&lt;async_s..</text></g><g><title>__memcpy_avx_unaligned_erms (387 samples, 0.36%)</title><rect x="85.5542%" y="1029" width="0.3641%" height="15" fill="rgb(222,172,16)" fg:x="90939" fg:w="387"/><text x="85.8042%" y="1039.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,907 samples, 6.50%)</title><rect x="79.8079%" y="1109" width="6.4980%" height="15" fill="rgb(233,192,5)" fg:x="84831" fg:w="6907"/><text x="80.0579%" y="1119.50">&lt;async_st..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,907 samples, 6.50%)</title><rect x="79.8079%" y="1093" width="6.4980%" height="15" fill="rgb(247,189,41)" fg:x="84831" fg:w="6907"/><text x="80.0579%" y="1103.50">&lt;tremor_r..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,907 samples, 6.50%)</title><rect x="79.8079%" y="1077" width="6.4980%" height="15" fill="rgb(218,134,47)" fg:x="84831" fg:w="6907"/><text x="80.0579%" y="1087.50">&lt;async_st..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,907 samples, 6.50%)</title><rect x="79.8079%" y="1061" width="6.4980%" height="15" fill="rgb(216,29,3)" fg:x="84831" fg:w="6907"/><text x="80.0579%" y="1071.50">&lt;tremor_r..</text></g><g><title>__memcpy_avx_unaligned_erms (412 samples, 0.39%)</title><rect x="85.9183%" y="1045" width="0.3876%" height="15" fill="rgb(246,140,12)" fg:x="91326" fg:w="412"/><text x="86.1683%" y="1055.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="86.3878%" y="1029" width="0.0282%" height="15" fill="rgb(230,136,11)" fg:x="91825" fg:w="30"/><text x="86.6378%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (19 samples, 0.02%)</title><rect x="86.4329%" y="1013" width="0.0179%" height="15" fill="rgb(247,22,47)" fg:x="91873" fg:w="19"/><text x="86.6829%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (18 samples, 0.02%)</title><rect x="86.4339%" y="997" width="0.0169%" height="15" fill="rgb(218,84,22)" fg:x="91874" fg:w="18"/><text x="86.6839%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="86.4339%" y="981" width="0.0169%" height="15" fill="rgb(216,87,39)" fg:x="91874" fg:w="18"/><text x="86.6839%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.02%)</title><rect x="86.4339%" y="965" width="0.0169%" height="15" fill="rgb(221,178,8)" fg:x="91874" fg:w="18"/><text x="86.6839%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (18 samples, 0.02%)</title><rect x="86.4339%" y="949" width="0.0169%" height="15" fill="rgb(230,42,11)" fg:x="91874" fg:w="18"/><text x="86.6839%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="86.4339%" y="933" width="0.0169%" height="15" fill="rgb(237,229,4)" fg:x="91874" fg:w="18"/><text x="86.6839%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (46 samples, 0.04%)</title><rect x="86.4160%" y="1029" width="0.0433%" height="15" fill="rgb(222,31,33)" fg:x="91855" fg:w="46"/><text x="86.6660%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (33 samples, 0.03%)</title><rect x="86.4593%" y="1029" width="0.0310%" height="15" fill="rgb(210,17,39)" fg:x="91901" fg:w="33"/><text x="86.7093%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (19 samples, 0.02%)</title><rect x="86.5195%" y="1013" width="0.0179%" height="15" fill="rgb(244,93,20)" fg:x="91965" fg:w="19"/><text x="86.7695%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (359 samples, 0.34%)</title><rect x="86.6305%" y="997" width="0.3377%" height="15" fill="rgb(210,40,47)" fg:x="92083" fg:w="359"/><text x="86.8805%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="87.0585%" y="981" width="0.0113%" height="15" fill="rgb(239,211,47)" fg:x="92538" fg:w="12"/><text x="87.3085%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (31 samples, 0.03%)</title><rect x="87.0698%" y="981" width="0.0292%" height="15" fill="rgb(251,223,49)" fg:x="92550" fg:w="31"/><text x="87.3198%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (28 samples, 0.03%)</title><rect x="87.0726%" y="965" width="0.0263%" height="15" fill="rgb(221,149,5)" fg:x="92553" fg:w="28"/><text x="87.3226%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (28 samples, 0.03%)</title><rect x="87.0726%" y="949" width="0.0263%" height="15" fill="rgb(219,224,51)" fg:x="92553" fg:w="28"/><text x="87.3226%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.03%)</title><rect x="87.0726%" y="933" width="0.0263%" height="15" fill="rgb(223,7,8)" fg:x="92553" fg:w="28"/><text x="87.3226%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (24 samples, 0.02%)</title><rect x="87.0990%" y="981" width="0.0226%" height="15" fill="rgb(241,217,22)" fg:x="92581" fg:w="24"/><text x="87.3490%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (217 samples, 0.20%)</title><rect x="87.1216%" y="981" width="0.2042%" height="15" fill="rgb(248,209,0)" fg:x="92605" fg:w="217"/><text x="87.3716%" y="991.50"></text></g><g><title>core::ptr::write (217 samples, 0.20%)</title><rect x="87.1216%" y="965" width="0.2042%" height="15" fill="rgb(217,205,4)" fg:x="92605" fg:w="217"/><text x="87.3716%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (210 samples, 0.20%)</title><rect x="87.1282%" y="949" width="0.1976%" height="15" fill="rgb(228,124,39)" fg:x="92612" fg:w="210"/><text x="87.3782%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (294 samples, 0.28%)</title><rect x="87.3257%" y="981" width="0.2766%" height="15" fill="rgb(250,116,42)" fg:x="92822" fg:w="294"/><text x="87.5757%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (294 samples, 0.28%)</title><rect x="87.3257%" y="965" width="0.2766%" height="15" fill="rgb(223,202,9)" fg:x="92822" fg:w="294"/><text x="87.5757%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (230 samples, 0.22%)</title><rect x="87.6023%" y="981" width="0.2164%" height="15" fill="rgb(242,222,40)" fg:x="93116" fg:w="230"/><text x="87.8523%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (226 samples, 0.21%)</title><rect x="87.6061%" y="965" width="0.2126%" height="15" fill="rgb(229,99,46)" fg:x="93120" fg:w="226"/><text x="87.8561%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,370 samples, 1.29%)</title><rect x="86.5373%" y="1013" width="1.2889%" height="15" fill="rgb(225,56,46)" fg:x="91984" fg:w="1370"/><text x="86.7873%" y="1023.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (912 samples, 0.86%)</title><rect x="86.9682%" y="997" width="0.8580%" height="15" fill="rgb(227,94,5)" fg:x="92442" fg:w="912"/><text x="87.2182%" y="1007.50"></text></g><g><title>event_listener::Inner::lock (51 samples, 0.05%)</title><rect x="87.8601%" y="997" width="0.0480%" height="15" fill="rgb(205,112,38)" fg:x="93390" fg:w="51"/><text x="88.1101%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.05%)</title><rect x="87.8610%" y="981" width="0.0470%" height="15" fill="rgb(231,133,46)" fg:x="93391" fg:w="50"/><text x="88.1110%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (49 samples, 0.05%)</title><rect x="87.8620%" y="965" width="0.0461%" height="15" fill="rgb(217,16,9)" fg:x="93392" fg:w="49"/><text x="88.1120%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (46 samples, 0.04%)</title><rect x="87.8648%" y="949" width="0.0433%" height="15" fill="rgb(249,173,9)" fg:x="93395" fg:w="46"/><text x="88.1148%" y="959.50"></text></g><g><title>___pthread_mutex_lock (46 samples, 0.04%)</title><rect x="87.8648%" y="933" width="0.0433%" height="15" fill="rgb(205,163,53)" fg:x="93395" fg:w="46"/><text x="88.1148%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (14 samples, 0.01%)</title><rect x="87.9513%" y="821" width="0.0132%" height="15" fill="rgb(217,54,41)" fg:x="93487" fg:w="14"/><text x="88.2013%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_swap (14 samples, 0.01%)</title><rect x="87.9513%" y="805" width="0.0132%" height="15" fill="rgb(228,216,12)" fg:x="93487" fg:w="14"/><text x="88.2013%" y="815.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (28 samples, 0.03%)</title><rect x="87.9645%" y="821" width="0.0263%" height="15" fill="rgb(244,228,15)" fg:x="93501" fg:w="28"/><text x="88.2145%" y="831.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (28 samples, 0.03%)</title><rect x="87.9645%" y="805" width="0.0263%" height="15" fill="rgb(221,176,53)" fg:x="93501" fg:w="28"/><text x="88.2145%" y="815.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (28 samples, 0.03%)</title><rect x="87.9645%" y="789" width="0.0263%" height="15" fill="rgb(205,94,34)" fg:x="93501" fg:w="28"/><text x="88.2145%" y="799.50"></text></g><g><title>__GI___pthread_cond_signal (28 samples, 0.03%)</title><rect x="87.9645%" y="773" width="0.0263%" height="15" fill="rgb(213,110,48)" fg:x="93501" fg:w="28"/><text x="88.2145%" y="783.50"></text></g><g><title>parking::Unparker::unpark (77 samples, 0.07%)</title><rect x="87.9363%" y="853" width="0.0724%" height="15" fill="rgb(236,142,28)" fg:x="93471" fg:w="77"/><text x="88.1863%" y="863.50"></text></g><g><title>parking::Inner::unpark (68 samples, 0.06%)</title><rect x="87.9448%" y="837" width="0.0640%" height="15" fill="rgb(225,135,29)" fg:x="93480" fg:w="68"/><text x="88.1948%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (19 samples, 0.02%)</title><rect x="87.9909%" y="821" width="0.0179%" height="15" fill="rgb(252,45,31)" fg:x="93529" fg:w="19"/><text x="88.2409%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (19 samples, 0.02%)</title><rect x="87.9909%" y="805" width="0.0179%" height="15" fill="rgb(211,187,50)" fg:x="93529" fg:w="19"/><text x="88.2409%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (18 samples, 0.02%)</title><rect x="87.9918%" y="789" width="0.0169%" height="15" fill="rgb(229,109,7)" fg:x="93530" fg:w="18"/><text x="88.2418%" y="799.50"></text></g><g><title>___pthread_mutex_lock (18 samples, 0.02%)</title><rect x="87.9918%" y="773" width="0.0169%" height="15" fill="rgb(251,131,51)" fg:x="93530" fg:w="18"/><text x="88.2418%" y="783.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (86 samples, 0.08%)</title><rect x="87.9288%" y="869" width="0.0809%" height="15" fill="rgb(251,180,35)" fg:x="93463" fg:w="86"/><text x="88.1788%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (99 samples, 0.09%)</title><rect x="87.9288%" y="901" width="0.0931%" height="15" fill="rgb(211,46,32)" fg:x="93463" fg:w="99"/><text x="88.1788%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (99 samples, 0.09%)</title><rect x="87.9288%" y="885" width="0.0931%" height="15" fill="rgb(248,123,17)" fg:x="93463" fg:w="99"/><text x="88.1788%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="88.0097%" y="869" width="0.0122%" height="15" fill="rgb(227,141,18)" fg:x="93549" fg:w="13"/><text x="88.2597%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="88.0097%" y="853" width="0.0122%" height="15" fill="rgb(216,102,9)" fg:x="93549" fg:w="13"/><text x="88.2597%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="88.0097%" y="837" width="0.0122%" height="15" fill="rgb(253,47,13)" fg:x="93549" fg:w="13"/><text x="88.2597%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="88.0097%" y="821" width="0.0122%" height="15" fill="rgb(226,93,23)" fg:x="93549" fg:w="13"/><text x="88.2597%" y="831.50"></text></g><g><title>async_executor::State::notify (135 samples, 0.13%)</title><rect x="87.9137%" y="917" width="0.1270%" height="15" fill="rgb(247,104,17)" fg:x="93447" fg:w="135"/><text x="88.1637%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="88.0219%" y="901" width="0.0188%" height="15" fill="rgb(233,203,26)" fg:x="93562" fg:w="20"/><text x="88.2719%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="88.0219%" y="885" width="0.0188%" height="15" fill="rgb(244,98,49)" fg:x="93562" fg:w="20"/><text x="88.2719%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="88.0247%" y="869" width="0.0160%" height="15" fill="rgb(235,134,22)" fg:x="93565" fg:w="17"/><text x="88.2747%" y="879.50"></text></g><g><title>___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="88.0247%" y="853" width="0.0160%" height="15" fill="rgb(221,70,32)" fg:x="93565" fg:w="17"/><text x="88.2747%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (21 samples, 0.02%)</title><rect x="88.0454%" y="885" width="0.0198%" height="15" fill="rgb(238,15,50)" fg:x="93587" fg:w="21"/><text x="88.2954%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.02%)</title><rect x="88.0454%" y="869" width="0.0198%" height="15" fill="rgb(215,221,48)" fg:x="93587" fg:w="21"/><text x="88.2954%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (171 samples, 0.16%)</title><rect x="87.9137%" y="933" width="0.1609%" height="15" fill="rgb(236,73,3)" fg:x="93447" fg:w="171"/><text x="88.1637%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (36 samples, 0.03%)</title><rect x="88.0407%" y="917" width="0.0339%" height="15" fill="rgb(250,107,11)" fg:x="93582" fg:w="36"/><text x="88.2907%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (36 samples, 0.03%)</title><rect x="88.0407%" y="901" width="0.0339%" height="15" fill="rgb(242,39,14)" fg:x="93582" fg:w="36"/><text x="88.2907%" y="911.50"></text></g><g><title>event_listener::List::notify (200 samples, 0.19%)</title><rect x="87.9081%" y="997" width="0.1882%" height="15" fill="rgb(248,164,37)" fg:x="93441" fg:w="200"/><text x="88.1581%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (199 samples, 0.19%)</title><rect x="87.9090%" y="981" width="0.1872%" height="15" fill="rgb(217,60,12)" fg:x="93442" fg:w="199"/><text x="88.1590%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (199 samples, 0.19%)</title><rect x="87.9090%" y="965" width="0.1872%" height="15" fill="rgb(240,125,29)" fg:x="93442" fg:w="199"/><text x="88.1590%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (194 samples, 0.18%)</title><rect x="87.9137%" y="949" width="0.1825%" height="15" fill="rgb(208,207,28)" fg:x="93447" fg:w="194"/><text x="88.1637%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (23 samples, 0.02%)</title><rect x="88.0746%" y="933" width="0.0216%" height="15" fill="rgb(209,159,27)" fg:x="93618" fg:w="23"/><text x="88.3246%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (23 samples, 0.02%)</title><rect x="88.0746%" y="917" width="0.0216%" height="15" fill="rgb(251,176,53)" fg:x="93618" fg:w="23"/><text x="88.3246%" y="927.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,732 samples, 2.57%)</title><rect x="86.4903%" y="1029" width="2.5702%" height="15" fill="rgb(211,85,7)" fg:x="91934" fg:w="2732"/><text x="86.7403%" y="1039.50">as..</text></g><g><title>event_listener::Event::notify (1,312 samples, 1.23%)</title><rect x="87.8262%" y="1013" width="1.2343%" height="15" fill="rgb(216,64,54)" fg:x="93354" fg:w="1312"/><text x="88.0762%" y="1023.50"></text></g><g><title>event_listener::full_fence (1,025 samples, 0.96%)</title><rect x="88.0962%" y="997" width="0.9643%" height="15" fill="rgb(217,54,24)" fg:x="93641" fg:w="1025"/><text x="88.3462%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,006 samples, 0.95%)</title><rect x="88.1141%" y="981" width="0.9464%" height="15" fill="rgb(208,206,53)" fg:x="93660" fg:w="1006"/><text x="88.3641%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,006 samples, 0.95%)</title><rect x="88.1141%" y="965" width="0.9464%" height="15" fill="rgb(251,74,39)" fg:x="93660" fg:w="1006"/><text x="88.3641%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (15 samples, 0.01%)</title><rect x="89.0605%" y="1029" width="0.0141%" height="15" fill="rgb(226,47,5)" fg:x="94666" fg:w="15"/><text x="89.3105%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (416 samples, 0.39%)</title><rect x="89.0746%" y="1029" width="0.3914%" height="15" fill="rgb(234,111,33)" fg:x="94681" fg:w="416"/><text x="89.3246%" y="1039.50"></text></g><g><title>core::mem::replace (416 samples, 0.39%)</title><rect x="89.0746%" y="1013" width="0.3914%" height="15" fill="rgb(251,14,10)" fg:x="94681" fg:w="416"/><text x="89.3246%" y="1023.50"></text></g><g><title>core::ptr::read (409 samples, 0.38%)</title><rect x="89.0812%" y="997" width="0.3848%" height="15" fill="rgb(232,43,0)" fg:x="94688" fg:w="409"/><text x="89.3312%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (394 samples, 0.37%)</title><rect x="89.0953%" y="981" width="0.3707%" height="15" fill="rgb(222,68,43)" fg:x="94703" fg:w="394"/><text x="89.3453%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (523 samples, 0.49%)</title><rect x="89.4660%" y="1029" width="0.4920%" height="15" fill="rgb(217,24,23)" fg:x="95097" fg:w="523"/><text x="89.7160%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (504 samples, 0.47%)</title><rect x="89.4839%" y="1013" width="0.4742%" height="15" fill="rgb(229,209,14)" fg:x="95116" fg:w="504"/><text x="89.7339%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="89.9627%" y="1013" width="0.0188%" height="15" fill="rgb(250,149,48)" fg:x="95625" fg:w="20"/><text x="90.2127%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="89.9627%" y="997" width="0.0188%" height="15" fill="rgb(210,120,37)" fg:x="95625" fg:w="20"/><text x="90.2127%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="89.9627%" y="981" width="0.0188%" height="15" fill="rgb(210,21,8)" fg:x="95625" fg:w="20"/><text x="90.2127%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (22 samples, 0.02%)</title><rect x="89.9816%" y="1013" width="0.0207%" height="15" fill="rgb(243,145,7)" fg:x="95645" fg:w="22"/><text x="90.2316%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (20 samples, 0.02%)</title><rect x="89.9834%" y="997" width="0.0188%" height="15" fill="rgb(238,178,32)" fg:x="95647" fg:w="20"/><text x="90.2334%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="89.9834%" y="981" width="0.0188%" height="15" fill="rgb(222,4,10)" fg:x="95647" fg:w="20"/><text x="90.2334%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (20 samples, 0.02%)</title><rect x="89.9834%" y="965" width="0.0188%" height="15" fill="rgb(239,7,37)" fg:x="95647" fg:w="20"/><text x="90.2334%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (20 samples, 0.02%)</title><rect x="89.9834%" y="949" width="0.0188%" height="15" fill="rgb(215,31,37)" fg:x="95647" fg:w="20"/><text x="90.2334%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="89.9834%" y="933" width="0.0188%" height="15" fill="rgb(224,83,33)" fg:x="95647" fg:w="20"/><text x="90.2334%" y="943.50"></text></g><g><title>event_listener::Inner::lock (21 samples, 0.02%)</title><rect x="90.0041%" y="1013" width="0.0198%" height="15" fill="rgb(239,55,3)" fg:x="95669" fg:w="21"/><text x="90.2541%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="90.0041%" y="997" width="0.0198%" height="15" fill="rgb(247,92,11)" fg:x="95669" fg:w="21"/><text x="90.2541%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="90.0051%" y="981" width="0.0188%" height="15" fill="rgb(239,200,7)" fg:x="95670" fg:w="20"/><text x="90.2551%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="90.0051%" y="965" width="0.0188%" height="15" fill="rgb(227,115,8)" fg:x="95670" fg:w="20"/><text x="90.2551%" y="975.50"></text></g><g><title>___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="90.0051%" y="949" width="0.0188%" height="15" fill="rgb(215,189,27)" fg:x="95670" fg:w="20"/><text x="90.2551%" y="959.50"></text></g><g><title>event_listener::Event::listen (70 samples, 0.07%)</title><rect x="89.9627%" y="1029" width="0.0659%" height="15" fill="rgb(251,216,39)" fg:x="95625" fg:w="70"/><text x="90.2127%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (29 samples, 0.03%)</title><rect x="90.0427%" y="933" width="0.0273%" height="15" fill="rgb(207,29,47)" fg:x="95710" fg:w="29"/><text x="90.2927%" y="943.50"></text></g><g><title>__GI___lll_lock_wake (14 samples, 0.01%)</title><rect x="90.0568%" y="917" width="0.0132%" height="15" fill="rgb(210,71,34)" fg:x="95725" fg:w="14"/><text x="90.3068%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (31 samples, 0.03%)</title><rect x="90.0418%" y="1013" width="0.0292%" height="15" fill="rgb(253,217,51)" fg:x="95709" fg:w="31"/><text x="90.2918%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (30 samples, 0.03%)</title><rect x="90.0427%" y="997" width="0.0282%" height="15" fill="rgb(222,117,46)" fg:x="95710" fg:w="30"/><text x="90.2927%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="90.0427%" y="981" width="0.0282%" height="15" fill="rgb(226,132,6)" fg:x="95710" fg:w="30"/><text x="90.2927%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.03%)</title><rect x="90.0427%" y="965" width="0.0282%" height="15" fill="rgb(254,145,51)" fg:x="95710" fg:w="30"/><text x="90.2927%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (30 samples, 0.03%)</title><rect x="90.0427%" y="949" width="0.0282%" height="15" fill="rgb(231,199,27)" fg:x="95710" fg:w="30"/><text x="90.2927%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="90.0709%" y="1013" width="0.0103%" height="15" fill="rgb(245,158,14)" fg:x="95740" fg:w="11"/><text x="90.3209%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="90.0709%" y="997" width="0.0103%" height="15" fill="rgb(240,113,14)" fg:x="95740" fg:w="11"/><text x="90.3209%" y="1007.50"></text></g><g><title>event_listener::Inner::lock (66 samples, 0.06%)</title><rect x="90.0813%" y="1013" width="0.0621%" height="15" fill="rgb(210,20,13)" fg:x="95751" fg:w="66"/><text x="90.3313%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (64 samples, 0.06%)</title><rect x="90.0832%" y="997" width="0.0602%" height="15" fill="rgb(241,144,13)" fg:x="95753" fg:w="64"/><text x="90.3332%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (60 samples, 0.06%)</title><rect x="90.0869%" y="981" width="0.0564%" height="15" fill="rgb(235,43,34)" fg:x="95757" fg:w="60"/><text x="90.3369%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (59 samples, 0.06%)</title><rect x="90.0879%" y="965" width="0.0555%" height="15" fill="rgb(208,36,20)" fg:x="95758" fg:w="59"/><text x="90.3379%" y="975.50"></text></g><g><title>___pthread_mutex_lock (59 samples, 0.06%)</title><rect x="90.0879%" y="949" width="0.0555%" height="15" fill="rgb(239,204,10)" fg:x="95758" fg:w="59"/><text x="90.3379%" y="959.50"></text></g><g><title>__GI___lll_lock_wait (36 samples, 0.03%)</title><rect x="90.1095%" y="933" width="0.0339%" height="15" fill="rgb(217,84,43)" fg:x="95781" fg:w="36"/><text x="90.3595%" y="943.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4,339 samples, 4.08%)</title><rect x="86.3059%" y="1045" width="4.0821%" height="15" fill="rgb(241,170,50)" fg:x="91738" fg:w="4339"/><text x="86.5559%" y="1055.50">&lt;asy..</text></g><g><title>event_listener::Event::notify (382 samples, 0.36%)</title><rect x="90.0286%" y="1029" width="0.3594%" height="15" fill="rgb(226,205,29)" fg:x="95695" fg:w="382"/><text x="90.2786%" y="1039.50"></text></g><g><title>event_listener::full_fence (258 samples, 0.24%)</title><rect x="90.1453%" y="1013" width="0.2427%" height="15" fill="rgb(233,113,1)" fg:x="95819" fg:w="258"/><text x="90.3953%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (249 samples, 0.23%)</title><rect x="90.1537%" y="997" width="0.2343%" height="15" fill="rgb(253,98,13)" fg:x="95828" fg:w="249"/><text x="90.4037%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (249 samples, 0.23%)</title><rect x="90.1537%" y="981" width="0.2343%" height="15" fill="rgb(211,115,12)" fg:x="95828" fg:w="249"/><text x="90.4037%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="90.3936%" y="901" width="0.0122%" height="15" fill="rgb(208,12,16)" fg:x="96083" fg:w="13"/><text x="90.6436%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (18 samples, 0.02%)</title><rect x="90.3908%" y="981" width="0.0169%" height="15" fill="rgb(237,193,54)" fg:x="96080" fg:w="18"/><text x="90.6408%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (17 samples, 0.02%)</title><rect x="90.3917%" y="965" width="0.0160%" height="15" fill="rgb(243,22,42)" fg:x="96081" fg:w="17"/><text x="90.6417%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="90.3917%" y="949" width="0.0160%" height="15" fill="rgb(233,151,36)" fg:x="96081" fg:w="17"/><text x="90.6417%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.02%)</title><rect x="90.3927%" y="933" width="0.0151%" height="15" fill="rgb(237,57,45)" fg:x="96082" fg:w="16"/><text x="90.6427%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="90.3936%" y="917" width="0.0141%" height="15" fill="rgb(221,88,17)" fg:x="96083" fg:w="15"/><text x="90.6436%" y="927.50"></text></g><g><title>event_listener::Inner::lock (32 samples, 0.03%)</title><rect x="90.4077%" y="981" width="0.0301%" height="15" fill="rgb(230,79,15)" fg:x="96098" fg:w="32"/><text x="90.6577%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.03%)</title><rect x="90.4087%" y="965" width="0.0292%" height="15" fill="rgb(213,57,13)" fg:x="96099" fg:w="31"/><text x="90.6587%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (31 samples, 0.03%)</title><rect x="90.4087%" y="949" width="0.0292%" height="15" fill="rgb(222,116,39)" fg:x="96099" fg:w="31"/><text x="90.6587%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (30 samples, 0.03%)</title><rect x="90.4096%" y="933" width="0.0282%" height="15" fill="rgb(245,107,2)" fg:x="96100" fg:w="30"/><text x="90.6596%" y="943.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="90.4096%" y="917" width="0.0282%" height="15" fill="rgb(238,1,10)" fg:x="96100" fg:w="30"/><text x="90.6596%" y="927.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (11,302 samples, 10.63%)</title><rect x="79.8079%" y="1125" width="10.6328%" height="15" fill="rgb(249,4,48)" fg:x="84831" fg:w="11302"/><text x="80.0579%" y="1135.50">tremor_runtime::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,395 samples, 4.13%)</title><rect x="86.3059%" y="1109" width="4.1348%" height="15" fill="rgb(223,151,18)" fg:x="91738" fg:w="4395"/><text x="86.5559%" y="1119.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (4,395 samples, 4.13%)</title><rect x="86.3059%" y="1093" width="4.1348%" height="15" fill="rgb(227,65,43)" fg:x="91738" fg:w="4395"/><text x="86.5559%" y="1103.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,395 samples, 4.13%)</title><rect x="86.3059%" y="1077" width="4.1348%" height="15" fill="rgb(218,40,45)" fg:x="91738" fg:w="4395"/><text x="86.5559%" y="1087.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (4,395 samples, 4.13%)</title><rect x="86.3059%" y="1061" width="4.1348%" height="15" fill="rgb(252,121,31)" fg:x="91738" fg:w="4395"/><text x="86.5559%" y="1071.50">tremo..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (56 samples, 0.05%)</title><rect x="90.3880%" y="1045" width="0.0527%" height="15" fill="rgb(219,158,43)" fg:x="96077" fg:w="56"/><text x="90.6380%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (56 samples, 0.05%)</title><rect x="90.3880%" y="1029" width="0.0527%" height="15" fill="rgb(231,162,42)" fg:x="96077" fg:w="56"/><text x="90.6380%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (56 samples, 0.05%)</title><rect x="90.3880%" y="1013" width="0.0527%" height="15" fill="rgb(217,179,25)" fg:x="96077" fg:w="56"/><text x="90.6380%" y="1023.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="90.3880%" y="997" width="0.0527%" height="15" fill="rgb(206,212,31)" fg:x="96077" fg:w="56"/><text x="90.6380%" y="1007.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (43 samples, 0.04%)</title><rect x="90.4407%" y="1125" width="0.0405%" height="15" fill="rgb(235,144,12)" fg:x="96133" fg:w="43"/><text x="90.6907%" y="1135.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (69 samples, 0.06%)</title><rect x="90.4811%" y="1125" width="0.0649%" height="15" fill="rgb(213,51,10)" fg:x="96176" fg:w="69"/><text x="90.7311%" y="1135.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (98 samples, 0.09%)</title><rect x="90.5479%" y="1125" width="0.0922%" height="15" fill="rgb(231,145,14)" fg:x="96247" fg:w="98"/><text x="90.7979%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (48 samples, 0.05%)</title><rect x="90.5950%" y="1109" width="0.0452%" height="15" fill="rgb(235,15,28)" fg:x="96297" fg:w="48"/><text x="90.8450%" y="1119.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="90.6486%" y="1093" width="0.0103%" height="15" fill="rgb(237,206,10)" fg:x="96354" fg:w="11"/><text x="90.8986%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="90.6486%" y="1077" width="0.0103%" height="15" fill="rgb(236,227,27)" fg:x="96354" fg:w="11"/><text x="90.8986%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="90.6486%" y="1061" width="0.0103%" height="15" fill="rgb(246,83,35)" fg:x="96354" fg:w="11"/><text x="90.8986%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="90.6486%" y="1045" width="0.0103%" height="15" fill="rgb(220,136,24)" fg:x="96354" fg:w="11"/><text x="90.8986%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="90.6486%" y="1029" width="0.0103%" height="15" fill="rgb(217,3,25)" fg:x="96354" fg:w="11"/><text x="90.8986%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="90.6486%" y="1013" width="0.0103%" height="15" fill="rgb(239,24,14)" fg:x="96354" fg:w="11"/><text x="90.8986%" y="1023.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="90.6486%" y="997" width="0.0103%" height="15" fill="rgb(244,16,53)" fg:x="96354" fg:w="11"/><text x="90.8986%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="90.6486%" y="981" width="0.0103%" height="15" fill="rgb(208,175,44)" fg:x="96354" fg:w="11"/><text x="90.8986%" y="991.50"></text></g><g><title>[unknown] (90,053 samples, 84.72%)</title><rect x="5.9542%" y="1141" width="84.7207%" height="15" fill="rgb(252,18,48)" fg:x="6329" fg:w="90053"/><text x="6.2042%" y="1151.50">[unknown]</text></g><g><title>value_trait::Builder::object (37 samples, 0.03%)</title><rect x="90.6401%" y="1125" width="0.0348%" height="15" fill="rgb(234,199,32)" fg:x="96345" fg:w="37"/><text x="90.8901%" y="1135.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (28 samples, 0.03%)</title><rect x="90.6486%" y="1109" width="0.0263%" height="15" fill="rgb(225,77,54)" fg:x="96354" fg:w="28"/><text x="90.8986%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V&gt;::with_capacity (17 samples, 0.02%)</title><rect x="90.6589%" y="1093" width="0.0160%" height="15" fill="rgb(225,42,25)" fg:x="96365" fg:w="17"/><text x="90.9089%" y="1103.50"></text></g><g><title>snmalloc::AllocPool&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt;::acquire (19 samples, 0.02%)</title><rect x="90.6900%" y="677" width="0.0179%" height="15" fill="rgb(242,227,46)" fg:x="96398" fg:w="19"/><text x="90.9400%" y="687.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (19 samples, 0.02%)</title><rect x="90.6900%" y="661" width="0.0179%" height="15" fill="rgb(246,197,35)" fg:x="96398" fg:w="19"/><text x="90.9400%" y="671.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (19 samples, 0.02%)</title><rect x="90.6900%" y="645" width="0.0179%" height="15" fill="rgb(215,159,26)" fg:x="96398" fg:w="19"/><text x="90.9400%" y="655.50"></text></g><g><title>snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;::alloc_chunk&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, 4096ul, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (19 samples, 0.02%)</title><rect x="90.6900%" y="629" width="0.0179%" height="15" fill="rgb(212,194,50)" fg:x="96398" fg:w="19"/><text x="90.9400%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::Allocator (19 samples, 0.02%)</title><rect x="90.6900%" y="613" width="0.0179%" height="15" fill="rgb(246,132,1)" fg:x="96398" fg:w="19"/><text x="90.9400%" y="623.50"></text></g><g><title>async_channel::bounded (23 samples, 0.02%)</title><rect x="90.6890%" y="901" width="0.0216%" height="15" fill="rgb(217,71,7)" fg:x="96397" fg:w="23"/><text x="90.9390%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="90.6890%" y="885" width="0.0216%" height="15" fill="rgb(252,59,32)" fg:x="96397" fg:w="23"/><text x="90.9390%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (23 samples, 0.02%)</title><rect x="90.6890%" y="869" width="0.0216%" height="15" fill="rgb(253,204,25)" fg:x="96397" fg:w="23"/><text x="90.9390%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.02%)</title><rect x="90.6890%" y="853" width="0.0216%" height="15" fill="rgb(232,21,16)" fg:x="96397" fg:w="23"/><text x="90.9390%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.02%)</title><rect x="90.6890%" y="837" width="0.0216%" height="15" fill="rgb(248,90,29)" fg:x="96397" fg:w="23"/><text x="90.9390%" y="847.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.02%)</title><rect x="90.6890%" y="821" width="0.0216%" height="15" fill="rgb(249,223,7)" fg:x="96397" fg:w="23"/><text x="90.9390%" y="831.50"></text></g><g><title>__rg_alloc (23 samples, 0.02%)</title><rect x="90.6890%" y="805" width="0.0216%" height="15" fill="rgb(231,119,42)" fg:x="96397" fg:w="23"/><text x="90.9390%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (23 samples, 0.02%)</title><rect x="90.6890%" y="789" width="0.0216%" height="15" fill="rgb(215,41,35)" fg:x="96397" fg:w="23"/><text x="90.9390%" y="799.50"></text></g><g><title>rust_alloc (23 samples, 0.02%)</title><rect x="90.6890%" y="773" width="0.0216%" height="15" fill="rgb(220,44,45)" fg:x="96397" fg:w="23"/><text x="90.9390%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="90.6890%" y="757" width="0.0216%" height="15" fill="rgb(253,197,36)" fg:x="96397" fg:w="23"/><text x="90.9390%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="90.6890%" y="741" width="0.0216%" height="15" fill="rgb(245,225,54)" fg:x="96397" fg:w="23"/><text x="90.9390%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="90.6900%" y="725" width="0.0207%" height="15" fill="rgb(239,94,37)" fg:x="96398" fg:w="22"/><text x="90.9400%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="90.6900%" y="709" width="0.0207%" height="15" fill="rgb(242,217,10)" fg:x="96398" fg:w="22"/><text x="90.9400%" y="719.50"></text></g><g><title>snmalloc::init_thread_allocator (22 samples, 0.02%)</title><rect x="90.6900%" y="693" width="0.0207%" height="15" fill="rgb(250,193,7)" fg:x="96398" fg:w="22"/><text x="90.9400%" y="703.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="90.8236%" y="549" width="0.0160%" height="15" fill="rgb(230,104,19)" fg:x="96540" fg:w="17"/><text x="91.0736%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="90.9205%" y="533" width="0.0122%" height="15" fill="rgb(230,181,4)" fg:x="96643" fg:w="13"/><text x="91.1705%" y="543.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="90.9995%" y="453" width="0.0113%" height="15" fill="rgb(216,219,49)" fg:x="96727" fg:w="12"/><text x="91.2495%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (14 samples, 0.01%)</title><rect x="91.0240%" y="437" width="0.0132%" height="15" fill="rgb(254,144,0)" fg:x="96753" fg:w="14"/><text x="91.2740%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (13 samples, 0.01%)</title><rect x="91.0249%" y="421" width="0.0122%" height="15" fill="rgb(205,209,38)" fg:x="96754" fg:w="13"/><text x="91.2749%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="91.0371%" y="437" width="0.0169%" height="15" fill="rgb(240,21,42)" fg:x="96767" fg:w="18"/><text x="91.2871%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="91.0541%" y="437" width="0.0132%" height="15" fill="rgb(241,132,3)" fg:x="96785" fg:w="14"/><text x="91.3041%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (153 samples, 0.14%)</title><rect x="90.9628%" y="485" width="0.1439%" height="15" fill="rgb(225,14,2)" fg:x="96688" fg:w="153"/><text x="91.2128%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (129 samples, 0.12%)</title><rect x="90.9854%" y="469" width="0.1214%" height="15" fill="rgb(210,141,35)" fg:x="96712" fg:w="129"/><text x="91.2354%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (102 samples, 0.10%)</title><rect x="91.0108%" y="453" width="0.0960%" height="15" fill="rgb(251,14,44)" fg:x="96739" fg:w="102"/><text x="91.2608%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (42 samples, 0.04%)</title><rect x="91.0672%" y="437" width="0.0395%" height="15" fill="rgb(247,48,18)" fg:x="96799" fg:w="42"/><text x="91.3172%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (42 samples, 0.04%)</title><rect x="91.0672%" y="421" width="0.0395%" height="15" fill="rgb(225,0,40)" fg:x="96799" fg:w="42"/><text x="91.3172%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (38 samples, 0.04%)</title><rect x="91.0710%" y="405" width="0.0357%" height="15" fill="rgb(221,31,33)" fg:x="96803" fg:w="38"/><text x="91.3210%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (38 samples, 0.04%)</title><rect x="91.0710%" y="389" width="0.0357%" height="15" fill="rgb(237,42,40)" fg:x="96803" fg:w="38"/><text x="91.3210%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (206 samples, 0.19%)</title><rect x="90.9327%" y="533" width="0.1938%" height="15" fill="rgb(233,51,29)" fg:x="96656" fg:w="206"/><text x="91.1827%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (206 samples, 0.19%)</title><rect x="90.9327%" y="517" width="0.1938%" height="15" fill="rgb(226,58,20)" fg:x="96656" fg:w="206"/><text x="91.1827%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (206 samples, 0.19%)</title><rect x="90.9327%" y="501" width="0.1938%" height="15" fill="rgb(208,98,7)" fg:x="96656" fg:w="206"/><text x="91.1827%" y="511.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (21 samples, 0.02%)</title><rect x="91.1067%" y="485" width="0.0198%" height="15" fill="rgb(228,143,44)" fg:x="96841" fg:w="21"/><text x="91.3567%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (455 samples, 0.43%)</title><rect x="91.2864%" y="501" width="0.4281%" height="15" fill="rgb(246,55,38)" fg:x="97032" fg:w="455"/><text x="91.5364%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (314 samples, 0.30%)</title><rect x="91.4191%" y="485" width="0.2954%" height="15" fill="rgb(247,87,16)" fg:x="97173" fg:w="314"/><text x="91.6691%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (314 samples, 0.30%)</title><rect x="91.4191%" y="469" width="0.2954%" height="15" fill="rgb(234,129,42)" fg:x="97173" fg:w="314"/><text x="91.6691%" y="479.50"></text></g><g><title>async_executor::steal (633 samples, 0.60%)</title><rect x="91.1265%" y="533" width="0.5955%" height="15" fill="rgb(220,82,16)" fg:x="96862" fg:w="633"/><text x="91.3765%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (618 samples, 0.58%)</title><rect x="91.1406%" y="517" width="0.5814%" height="15" fill="rgb(211,88,4)" fg:x="96877" fg:w="618"/><text x="91.3906%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (721 samples, 0.68%)</title><rect x="92.1388%" y="501" width="0.6783%" height="15" fill="rgb(248,151,21)" fg:x="97938" fg:w="721"/><text x="92.3888%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (716 samples, 0.67%)</title><rect x="92.1435%" y="485" width="0.6736%" height="15" fill="rgb(238,163,6)" fg:x="97943" fg:w="716"/><text x="92.3935%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (716 samples, 0.67%)</title><rect x="92.1435%" y="469" width="0.6736%" height="15" fill="rgb(209,183,11)" fg:x="97943" fg:w="716"/><text x="92.3935%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (716 samples, 0.67%)</title><rect x="92.1435%" y="453" width="0.6736%" height="15" fill="rgb(219,37,20)" fg:x="97943" fg:w="716"/><text x="92.3935%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,101 samples, 1.04%)</title><rect x="91.8613%" y="517" width="1.0358%" height="15" fill="rgb(210,158,4)" fg:x="97643" fg:w="1101"/><text x="92.1113%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (85 samples, 0.08%)</title><rect x="92.8171%" y="501" width="0.0800%" height="15" fill="rgb(221,167,53)" fg:x="98659" fg:w="85"/><text x="93.0671%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (83 samples, 0.08%)</title><rect x="92.8190%" y="485" width="0.0781%" height="15" fill="rgb(237,151,45)" fg:x="98661" fg:w="83"/><text x="93.0690%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (212 samples, 0.20%)</title><rect x="92.9385%" y="501" width="0.1994%" height="15" fill="rgb(231,39,3)" fg:x="98788" fg:w="212"/><text x="93.1885%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (210 samples, 0.20%)</title><rect x="92.9403%" y="485" width="0.1976%" height="15" fill="rgb(212,167,28)" fg:x="98790" fg:w="210"/><text x="93.1903%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (210 samples, 0.20%)</title><rect x="92.9403%" y="469" width="0.1976%" height="15" fill="rgb(232,178,8)" fg:x="98790" fg:w="210"/><text x="93.1903%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (210 samples, 0.20%)</title><rect x="92.9403%" y="453" width="0.1976%" height="15" fill="rgb(225,151,20)" fg:x="98790" fg:w="210"/><text x="93.1903%" y="463.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (21 samples, 0.02%)</title><rect x="93.1398%" y="501" width="0.0198%" height="15" fill="rgb(238,3,37)" fg:x="99002" fg:w="21"/><text x="93.3898%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="93.1398%" y="485" width="0.0198%" height="15" fill="rgb(251,147,42)" fg:x="99002" fg:w="21"/><text x="93.3898%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="93.1398%" y="469" width="0.0198%" height="15" fill="rgb(208,173,10)" fg:x="99002" fg:w="21"/><text x="93.3898%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (87 samples, 0.08%)</title><rect x="93.1746%" y="501" width="0.0818%" height="15" fill="rgb(246,225,4)" fg:x="99039" fg:w="87"/><text x="93.4246%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (87 samples, 0.08%)</title><rect x="93.1746%" y="485" width="0.0818%" height="15" fill="rgb(248,102,6)" fg:x="99039" fg:w="87"/><text x="93.4246%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (63 samples, 0.06%)</title><rect x="93.2564%" y="501" width="0.0593%" height="15" fill="rgb(232,6,21)" fg:x="99126" fg:w="63"/><text x="93.5064%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_or (63 samples, 0.06%)</title><rect x="93.2564%" y="485" width="0.0593%" height="15" fill="rgb(221,179,22)" fg:x="99126" fg:w="63"/><text x="93.5064%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,842 samples, 1.73%)</title><rect x="91.7220%" y="533" width="1.7329%" height="15" fill="rgb(252,50,20)" fg:x="97495" fg:w="1842"/><text x="91.9720%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (593 samples, 0.56%)</title><rect x="92.8971%" y="517" width="0.5579%" height="15" fill="rgb(222,56,38)" fg:x="98744" fg:w="593"/><text x="93.1471%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (148 samples, 0.14%)</title><rect x="93.3157%" y="501" width="0.1392%" height="15" fill="rgb(206,193,29)" fg:x="99189" fg:w="148"/><text x="93.5657%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (148 samples, 0.14%)</title><rect x="93.3157%" y="485" width="0.1392%" height="15" fill="rgb(239,192,45)" fg:x="99189" fg:w="148"/><text x="93.5657%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (114 samples, 0.11%)</title><rect x="93.4832%" y="469" width="0.1072%" height="15" fill="rgb(254,18,36)" fg:x="99367" fg:w="114"/><text x="93.7332%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (114 samples, 0.11%)</title><rect x="93.4832%" y="453" width="0.1072%" height="15" fill="rgb(221,127,11)" fg:x="99367" fg:w="114"/><text x="93.7332%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (280 samples, 0.26%)</title><rect x="93.4549%" y="533" width="0.2634%" height="15" fill="rgb(234,146,35)" fg:x="99337" fg:w="280"/><text x="93.7049%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (280 samples, 0.26%)</title><rect x="93.4549%" y="517" width="0.2634%" height="15" fill="rgb(254,201,37)" fg:x="99337" fg:w="280"/><text x="93.7049%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (274 samples, 0.26%)</title><rect x="93.4606%" y="501" width="0.2578%" height="15" fill="rgb(211,202,23)" fg:x="99343" fg:w="274"/><text x="93.7106%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (258 samples, 0.24%)</title><rect x="93.4756%" y="485" width="0.2427%" height="15" fill="rgb(237,91,2)" fg:x="99359" fg:w="258"/><text x="93.7256%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (136 samples, 0.13%)</title><rect x="93.5904%" y="469" width="0.1279%" height="15" fill="rgb(226,228,36)" fg:x="99481" fg:w="136"/><text x="93.8404%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (136 samples, 0.13%)</title><rect x="93.5904%" y="453" width="0.1279%" height="15" fill="rgb(213,63,50)" fg:x="99481" fg:w="136"/><text x="93.8404%" y="463.50"></text></g><g><title>fastrand::Rng::usize (21 samples, 0.02%)</title><rect x="93.7315%" y="469" width="0.0198%" height="15" fill="rgb(235,194,19)" fg:x="99631" fg:w="21"/><text x="93.9815%" y="479.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (19 samples, 0.02%)</title><rect x="93.7334%" y="453" width="0.0179%" height="15" fill="rgb(207,204,18)" fg:x="99633" fg:w="19"/><text x="93.9834%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32 samples, 0.03%)</title><rect x="93.7240%" y="501" width="0.0301%" height="15" fill="rgb(248,8,7)" fg:x="99623" fg:w="32"/><text x="93.9740%" y="511.50"></text></g><g><title>fastrand::usize::{{closure}} (24 samples, 0.02%)</title><rect x="93.7315%" y="485" width="0.0226%" height="15" fill="rgb(223,145,47)" fg:x="99631" fg:w="24"/><text x="93.9815%" y="495.50"></text></g><g><title>fastrand::usize (41 samples, 0.04%)</title><rect x="93.7184%" y="533" width="0.0386%" height="15" fill="rgb(228,84,11)" fg:x="99617" fg:w="41"/><text x="93.9684%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.03%)</title><rect x="93.7231%" y="517" width="0.0339%" height="15" fill="rgb(218,76,45)" fg:x="99622" fg:w="36"/><text x="93.9731%" y="527.50"></text></g><g><title>___pthread_rwlock_rdlock (200 samples, 0.19%)</title><rect x="93.7711%" y="485" width="0.1882%" height="15" fill="rgb(223,80,15)" fg:x="99673" fg:w="200"/><text x="94.0211%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (3,393 samples, 3.19%)</title><rect x="90.8396%" y="549" width="3.1921%" height="15" fill="rgb(219,218,33)" fg:x="96557" fg:w="3393"/><text x="91.0896%" y="559.50">asy..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (292 samples, 0.27%)</title><rect x="93.7569%" y="533" width="0.2747%" height="15" fill="rgb(208,51,11)" fg:x="99658" fg:w="292"/><text x="94.0069%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (285 samples, 0.27%)</title><rect x="93.7635%" y="517" width="0.2681%" height="15" fill="rgb(229,165,39)" fg:x="99665" fg:w="285"/><text x="94.0135%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (284 samples, 0.27%)</title><rect x="93.7645%" y="501" width="0.2672%" height="15" fill="rgb(241,100,24)" fg:x="99666" fg:w="284"/><text x="94.0145%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (77 samples, 0.07%)</title><rect x="93.9592%" y="485" width="0.0724%" height="15" fill="rgb(228,14,23)" fg:x="99873" fg:w="77"/><text x="94.2092%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (77 samples, 0.07%)</title><rect x="93.9592%" y="469" width="0.0724%" height="15" fill="rgb(247,116,52)" fg:x="99873" fg:w="77"/><text x="94.2092%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (16 samples, 0.02%)</title><rect x="94.0392%" y="469" width="0.0151%" height="15" fill="rgb(216,149,33)" fg:x="99958" fg:w="16"/><text x="94.2892%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (19 samples, 0.02%)</title><rect x="94.0382%" y="533" width="0.0179%" height="15" fill="rgb(238,142,29)" fg:x="99957" fg:w="19"/><text x="94.2882%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="94.0382%" y="517" width="0.0179%" height="15" fill="rgb(224,83,40)" fg:x="99957" fg:w="19"/><text x="94.2882%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (19 samples, 0.02%)</title><rect x="94.0382%" y="501" width="0.0179%" height="15" fill="rgb(234,165,11)" fg:x="99957" fg:w="19"/><text x="94.2882%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (18 samples, 0.02%)</title><rect x="94.0392%" y="485" width="0.0169%" height="15" fill="rgb(215,96,23)" fg:x="99958" fg:w="18"/><text x="94.2892%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (35 samples, 0.03%)</title><rect x="94.0561%" y="533" width="0.0329%" height="15" fill="rgb(233,179,26)" fg:x="99976" fg:w="35"/><text x="94.3061%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.03%)</title><rect x="94.0561%" y="517" width="0.0329%" height="15" fill="rgb(225,129,33)" fg:x="99976" fg:w="35"/><text x="94.3061%" y="527.50"></text></g><g><title>async_io::reactor::Reactor::notify (17 samples, 0.02%)</title><rect x="94.0956%" y="485" width="0.0160%" height="15" fill="rgb(237,49,13)" fg:x="100018" fg:w="17"/><text x="94.3456%" y="495.50"></text></g><g><title>polling::Poller::notify (17 samples, 0.02%)</title><rect x="94.0956%" y="469" width="0.0160%" height="15" fill="rgb(211,3,31)" fg:x="100018" fg:w="17"/><text x="94.3456%" y="479.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="94.1351%" y="453" width="0.0122%" height="15" fill="rgb(216,152,19)" fg:x="100060" fg:w="13"/><text x="94.3851%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (13 samples, 0.01%)</title><rect x="94.1351%" y="437" width="0.0122%" height="15" fill="rgb(251,121,35)" fg:x="100060" fg:w="13"/><text x="94.3851%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="94.1351%" y="421" width="0.0122%" height="15" fill="rgb(210,217,47)" fg:x="100060" fg:w="13"/><text x="94.3851%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="94.1351%" y="405" width="0.0122%" height="15" fill="rgb(244,116,22)" fg:x="100060" fg:w="13"/><text x="94.3851%" y="415.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="94.1351%" y="389" width="0.0122%" height="15" fill="rgb(228,17,21)" fg:x="100060" fg:w="13"/><text x="94.3851%" y="399.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="94.1351%" y="373" width="0.0122%" height="15" fill="rgb(240,149,34)" fg:x="100060" fg:w="13"/><text x="94.3851%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (68 samples, 0.06%)</title><rect x="94.1474%" y="453" width="0.0640%" height="15" fill="rgb(208,125,47)" fg:x="100073" fg:w="68"/><text x="94.3974%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (68 samples, 0.06%)</title><rect x="94.1474%" y="437" width="0.0640%" height="15" fill="rgb(249,186,39)" fg:x="100073" fg:w="68"/><text x="94.3974%" y="447.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (104 samples, 0.10%)</title><rect x="94.2113%" y="453" width="0.0978%" height="15" fill="rgb(240,220,33)" fg:x="100141" fg:w="104"/><text x="94.4613%" y="463.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (104 samples, 0.10%)</title><rect x="94.2113%" y="437" width="0.0978%" height="15" fill="rgb(243,110,23)" fg:x="100141" fg:w="104"/><text x="94.4613%" y="447.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (104 samples, 0.10%)</title><rect x="94.2113%" y="421" width="0.0978%" height="15" fill="rgb(219,163,46)" fg:x="100141" fg:w="104"/><text x="94.4613%" y="431.50"></text></g><g><title>__GI___pthread_cond_signal (104 samples, 0.10%)</title><rect x="94.2113%" y="405" width="0.0978%" height="15" fill="rgb(216,126,30)" fg:x="100141" fg:w="104"/><text x="94.4613%" y="415.50"></text></g><g><title>parking::Unparker::unpark (289 samples, 0.27%)</title><rect x="94.1154%" y="485" width="0.2719%" height="15" fill="rgb(208,139,11)" fg:x="100039" fg:w="289"/><text x="94.3654%" y="495.50"></text></g><g><title>parking::Inner::unpark (269 samples, 0.25%)</title><rect x="94.1342%" y="469" width="0.2531%" height="15" fill="rgb(213,118,36)" fg:x="100059" fg:w="269"/><text x="94.3842%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (83 samples, 0.08%)</title><rect x="94.3092%" y="453" width="0.0781%" height="15" fill="rgb(226,43,17)" fg:x="100245" fg:w="83"/><text x="94.5592%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (83 samples, 0.08%)</title><rect x="94.3092%" y="437" width="0.0781%" height="15" fill="rgb(254,217,4)" fg:x="100245" fg:w="83"/><text x="94.5592%" y="447.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (81 samples, 0.08%)</title><rect x="94.3111%" y="421" width="0.0762%" height="15" fill="rgb(210,134,47)" fg:x="100247" fg:w="81"/><text x="94.5611%" y="431.50"></text></g><g><title>___pthread_mutex_lock (81 samples, 0.08%)</title><rect x="94.3111%" y="405" width="0.0762%" height="15" fill="rgb(237,24,49)" fg:x="100247" fg:w="81"/><text x="94.5611%" y="415.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (12 samples, 0.01%)</title><rect x="94.3873%" y="453" width="0.0113%" height="15" fill="rgb(251,39,46)" fg:x="100328" fg:w="12"/><text x="94.6373%" y="463.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="94.3873%" y="437" width="0.0113%" height="15" fill="rgb(251,220,3)" fg:x="100328" fg:w="12"/><text x="94.6373%" y="447.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="94.3873%" y="421" width="0.0113%" height="15" fill="rgb(228,105,12)" fg:x="100328" fg:w="12"/><text x="94.6373%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.01%)</title><rect x="94.3873%" y="405" width="0.0113%" height="15" fill="rgb(215,196,1)" fg:x="100328" fg:w="12"/><text x="94.6373%" y="415.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (328 samples, 0.31%)</title><rect x="94.0919%" y="501" width="0.3086%" height="15" fill="rgb(214,33,39)" fg:x="100014" fg:w="328"/><text x="94.3419%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.01%)</title><rect x="94.3873%" y="485" width="0.0132%" height="15" fill="rgb(220,19,52)" fg:x="100328" fg:w="14"/><text x="94.6373%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.01%)</title><rect x="94.3873%" y="469" width="0.0132%" height="15" fill="rgb(221,78,38)" fg:x="100328" fg:w="14"/><text x="94.6373%" y="479.50"></text></g><g><title>core::task::wake::Waker::wake (381 samples, 0.36%)</title><rect x="94.0890%" y="533" width="0.3584%" height="15" fill="rgb(253,30,16)" fg:x="100011" fg:w="381"/><text x="94.3390%" y="543.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (380 samples, 0.36%)</title><rect x="94.0900%" y="517" width="0.3575%" height="15" fill="rgb(242,65,0)" fg:x="100012" fg:w="380"/><text x="94.3400%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (50 samples, 0.05%)</title><rect x="94.4004%" y="501" width="0.0470%" height="15" fill="rgb(235,201,12)" fg:x="100342" fg:w="50"/><text x="94.6504%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.05%)</title><rect x="94.4004%" y="485" width="0.0470%" height="15" fill="rgb(233,161,9)" fg:x="100342" fg:w="50"/><text x="94.6504%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (49 samples, 0.05%)</title><rect x="94.4014%" y="469" width="0.0461%" height="15" fill="rgb(241,207,41)" fg:x="100343" fg:w="49"/><text x="94.6514%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (49 samples, 0.05%)</title><rect x="94.4014%" y="453" width="0.0461%" height="15" fill="rgb(212,69,46)" fg:x="100343" fg:w="49"/><text x="94.6514%" y="463.50"></text></g><g><title>async_executor::State::notify (463 samples, 0.44%)</title><rect x="94.0316%" y="549" width="0.4356%" height="15" fill="rgb(239,69,45)" fg:x="99950" fg:w="463"/><text x="94.2816%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="94.4475%" y="533" width="0.0198%" height="15" fill="rgb(242,117,48)" fg:x="100392" fg:w="21"/><text x="94.6975%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.02%)</title><rect x="94.4475%" y="517" width="0.0198%" height="15" fill="rgb(228,41,36)" fg:x="100392" fg:w="21"/><text x="94.6975%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="94.4484%" y="501" width="0.0188%" height="15" fill="rgb(212,3,32)" fg:x="100393" fg:w="20"/><text x="94.6984%" y="511.50"></text></g><g><title>___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="94.4484%" y="485" width="0.0188%" height="15" fill="rgb(233,41,49)" fg:x="100393" fg:w="20"/><text x="94.6984%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (97 samples, 0.09%)</title><rect x="94.4851%" y="517" width="0.0913%" height="15" fill="rgb(252,170,49)" fg:x="100432" fg:w="97"/><text x="94.7351%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (94 samples, 0.09%)</title><rect x="94.4879%" y="501" width="0.0884%" height="15" fill="rgb(229,53,26)" fg:x="100435" fg:w="94"/><text x="94.7379%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (93 samples, 0.09%)</title><rect x="94.4889%" y="485" width="0.0875%" height="15" fill="rgb(217,157,12)" fg:x="100436" fg:w="93"/><text x="94.7389%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (93 samples, 0.09%)</title><rect x="94.4889%" y="469" width="0.0875%" height="15" fill="rgb(227,17,9)" fg:x="100436" fg:w="93"/><text x="94.7389%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (93 samples, 0.09%)</title><rect x="94.4889%" y="453" width="0.0875%" height="15" fill="rgb(218,84,12)" fg:x="100436" fg:w="93"/><text x="94.7389%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (93 samples, 0.09%)</title><rect x="94.4889%" y="437" width="0.0875%" height="15" fill="rgb(212,79,24)" fg:x="100436" fg:w="93"/><text x="94.7389%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (21 samples, 0.02%)</title><rect x="94.5764%" y="517" width="0.0198%" height="15" fill="rgb(217,222,37)" fg:x="100529" fg:w="21"/><text x="94.8264%" y="527.50"></text></g><g><title>async_executor::Sleepers::insert (145 samples, 0.14%)</title><rect x="94.4832%" y="533" width="0.1364%" height="15" fill="rgb(246,208,8)" fg:x="100430" fg:w="145"/><text x="94.7332%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.02%)</title><rect x="94.5961%" y="517" width="0.0235%" height="15" fill="rgb(244,133,10)" fg:x="100550" fg:w="25"/><text x="94.8461%" y="527.50"></text></g><g><title>core::ptr::write (23 samples, 0.02%)</title><rect x="94.5980%" y="501" width="0.0216%" height="15" fill="rgb(209,219,41)" fg:x="100552" fg:w="23"/><text x="94.8480%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="94.6554%" y="517" width="0.0405%" height="15" fill="rgb(253,175,45)" fg:x="100613" fg:w="43"/><text x="94.9054%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (43 samples, 0.04%)</title><rect x="94.6554%" y="501" width="0.0405%" height="15" fill="rgb(235,100,37)" fg:x="100613" fg:w="43"/><text x="94.9054%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="94.6563%" y="485" width="0.0395%" height="15" fill="rgb(225,87,19)" fg:x="100614" fg:w="42"/><text x="94.9063%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="94.6563%" y="469" width="0.0395%" height="15" fill="rgb(217,152,17)" fg:x="100614" fg:w="42"/><text x="94.9063%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (42 samples, 0.04%)</title><rect x="94.6563%" y="453" width="0.0395%" height="15" fill="rgb(235,72,13)" fg:x="100614" fg:w="42"/><text x="94.9063%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (42 samples, 0.04%)</title><rect x="94.6563%" y="437" width="0.0395%" height="15" fill="rgb(233,140,18)" fg:x="100614" fg:w="42"/><text x="94.9063%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.02%)</title><rect x="94.6958%" y="517" width="0.0207%" height="15" fill="rgb(207,212,28)" fg:x="100656" fg:w="22"/><text x="94.9458%" y="527.50"></text></g><g><title>core::ptr::write (20 samples, 0.02%)</title><rect x="94.6977%" y="501" width="0.0188%" height="15" fill="rgb(220,130,25)" fg:x="100658" fg:w="20"/><text x="94.9477%" y="511.50"></text></g><g><title>async_executor::Sleepers::update (106 samples, 0.10%)</title><rect x="94.6253%" y="533" width="0.0997%" height="15" fill="rgb(205,55,34)" fg:x="100581" fg:w="106"/><text x="94.8753%" y="543.50"></text></g><g><title>std::sync::poison::Flag::done (12 samples, 0.01%)</title><rect x="94.7250%" y="501" width="0.0113%" height="15" fill="rgb(237,54,35)" fg:x="100687" fg:w="12"/><text x="94.9750%" y="511.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (135 samples, 0.13%)</title><rect x="94.7372%" y="469" width="0.1270%" height="15" fill="rgb(208,67,23)" fg:x="100700" fg:w="135"/><text x="94.9872%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (151 samples, 0.14%)</title><rect x="94.7250%" y="533" width="0.1421%" height="15" fill="rgb(206,207,50)" fg:x="100687" fg:w="151"/><text x="94.9750%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (151 samples, 0.14%)</title><rect x="94.7250%" y="517" width="0.1421%" height="15" fill="rgb(213,211,42)" fg:x="100687" fg:w="151"/><text x="94.9750%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (139 samples, 0.13%)</title><rect x="94.7363%" y="501" width="0.1308%" height="15" fill="rgb(252,197,50)" fg:x="100699" fg:w="139"/><text x="94.9863%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (138 samples, 0.13%)</title><rect x="94.7372%" y="485" width="0.1298%" height="15" fill="rgb(251,211,41)" fg:x="100700" fg:w="138"/><text x="94.9872%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (109 samples, 0.10%)</title><rect x="94.8671%" y="533" width="0.1025%" height="15" fill="rgb(229,211,5)" fg:x="100838" fg:w="109"/><text x="95.1171%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (109 samples, 0.10%)</title><rect x="94.8671%" y="517" width="0.1025%" height="15" fill="rgb(239,36,31)" fg:x="100838" fg:w="109"/><text x="95.1171%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (76 samples, 0.07%)</title><rect x="94.9696%" y="533" width="0.0715%" height="15" fill="rgb(248,67,31)" fg:x="100947" fg:w="76"/><text x="95.2196%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (76 samples, 0.07%)</title><rect x="94.9696%" y="517" width="0.0715%" height="15" fill="rgb(249,55,44)" fg:x="100947" fg:w="76"/><text x="95.2196%" y="527.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="95.0411%" y="517" width="0.0113%" height="15" fill="rgb(216,82,12)" fg:x="101023" fg:w="12"/><text x="95.2911%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (12 samples, 0.01%)</title><rect x="95.0411%" y="501" width="0.0113%" height="15" fill="rgb(242,174,1)" fg:x="101023" fg:w="12"/><text x="95.2911%" y="511.50"></text></g><g><title>async_executor::Ticker::sleep (1,150 samples, 1.08%)</title><rect x="94.4672%" y="549" width="1.0819%" height="15" fill="rgb(208,120,29)" fg:x="100413" fg:w="1150"/><text x="94.7172%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (540 samples, 0.51%)</title><rect x="95.0411%" y="533" width="0.5080%" height="15" fill="rgb(221,105,43)" fg:x="101023" fg:w="540"/><text x="95.2911%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (528 samples, 0.50%)</title><rect x="95.0524%" y="517" width="0.4967%" height="15" fill="rgb(234,124,22)" fg:x="101035" fg:w="528"/><text x="95.3024%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (488 samples, 0.46%)</title><rect x="95.0900%" y="501" width="0.4591%" height="15" fill="rgb(212,23,30)" fg:x="101075" fg:w="488"/><text x="95.3400%" y="511.50"></text></g><g><title>___pthread_mutex_lock (488 samples, 0.46%)</title><rect x="95.0900%" y="485" width="0.4591%" height="15" fill="rgb(219,122,53)" fg:x="101075" fg:w="488"/><text x="95.3400%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (30 samples, 0.03%)</title><rect x="95.5209%" y="469" width="0.0282%" height="15" fill="rgb(248,84,24)" fg:x="101533" fg:w="30"/><text x="95.7709%" y="479.50"></text></g><g><title>async_executor::Sleepers::remove (39 samples, 0.04%)</title><rect x="95.5576%" y="533" width="0.0367%" height="15" fill="rgb(245,115,18)" fg:x="101572" fg:w="39"/><text x="95.8076%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (23 samples, 0.02%)</title><rect x="95.5727%" y="517" width="0.0216%" height="15" fill="rgb(227,176,51)" fg:x="101588" fg:w="23"/><text x="95.8227%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (23 samples, 0.02%)</title><rect x="95.5727%" y="501" width="0.0216%" height="15" fill="rgb(229,63,42)" fg:x="101588" fg:w="23"/><text x="95.8227%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="95.5727%" y="485" width="0.0216%" height="15" fill="rgb(247,202,24)" fg:x="101588" fg:w="23"/><text x="95.8227%" y="495.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (23 samples, 0.02%)</title><rect x="95.5727%" y="469" width="0.0216%" height="15" fill="rgb(244,173,20)" fg:x="101588" fg:w="23"/><text x="95.8227%" y="479.50"></text></g><g><title>core::mem::drop (22 samples, 0.02%)</title><rect x="95.5736%" y="453" width="0.0207%" height="15" fill="rgb(242,81,47)" fg:x="101589" fg:w="22"/><text x="95.8236%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="95.5736%" y="437" width="0.0207%" height="15" fill="rgb(231,185,54)" fg:x="101589" fg:w="22"/><text x="95.8236%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="95.5736%" y="421" width="0.0207%" height="15" fill="rgb(243,55,32)" fg:x="101589" fg:w="22"/><text x="95.8236%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.02%)</title><rect x="95.5736%" y="405" width="0.0207%" height="15" fill="rgb(208,167,19)" fg:x="101589" fg:w="22"/><text x="95.8236%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.02%)</title><rect x="95.5736%" y="389" width="0.0207%" height="15" fill="rgb(231,72,35)" fg:x="101589" fg:w="22"/><text x="95.8236%" y="399.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (38 samples, 0.04%)</title><rect x="95.5971%" y="469" width="0.0357%" height="15" fill="rgb(250,173,51)" fg:x="101614" fg:w="38"/><text x="95.8471%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (42 samples, 0.04%)</title><rect x="95.5943%" y="533" width="0.0395%" height="15" fill="rgb(209,5,22)" fg:x="101611" fg:w="42"/><text x="95.8443%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="95.5943%" y="517" width="0.0395%" height="15" fill="rgb(250,174,19)" fg:x="101611" fg:w="42"/><text x="95.8443%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (39 samples, 0.04%)</title><rect x="95.5971%" y="501" width="0.0367%" height="15" fill="rgb(217,3,49)" fg:x="101614" fg:w="39"/><text x="95.8471%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (39 samples, 0.04%)</title><rect x="95.5971%" y="485" width="0.0367%" height="15" fill="rgb(218,225,5)" fg:x="101614" fg:w="39"/><text x="95.8471%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (52 samples, 0.05%)</title><rect x="95.6338%" y="533" width="0.0489%" height="15" fill="rgb(236,89,11)" fg:x="101653" fg:w="52"/><text x="95.8838%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (52 samples, 0.05%)</title><rect x="95.6338%" y="517" width="0.0489%" height="15" fill="rgb(206,33,28)" fg:x="101653" fg:w="52"/><text x="95.8838%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (44 samples, 0.04%)</title><rect x="95.6827%" y="533" width="0.0414%" height="15" fill="rgb(241,56,42)" fg:x="101705" fg:w="44"/><text x="95.9327%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (44 samples, 0.04%)</title><rect x="95.6827%" y="517" width="0.0414%" height="15" fill="rgb(222,44,11)" fg:x="101705" fg:w="44"/><text x="95.9327%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,343 samples, 5.03%)</title><rect x="90.7558%" y="613" width="5.0266%" height="15" fill="rgb(234,111,20)" fg:x="96468" fg:w="5343"/><text x="91.0058%" y="623.50">&lt;core:..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (5,341 samples, 5.02%)</title><rect x="90.7577%" y="597" width="5.0247%" height="15" fill="rgb(237,77,6)" fg:x="96470" fg:w="5341"/><text x="91.0077%" y="607.50">async_..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5,334 samples, 5.02%)</title><rect x="90.7643%" y="581" width="5.0182%" height="15" fill="rgb(235,111,23)" fg:x="96477" fg:w="5334"/><text x="91.0143%" y="591.50">&lt;futur..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (5,325 samples, 5.01%)</title><rect x="90.7728%" y="565" width="5.0097%" height="15" fill="rgb(251,135,29)" fg:x="96486" fg:w="5325"/><text x="91.0228%" y="575.50">async_..</text></g><g><title>async_executor::Ticker::wake (248 samples, 0.23%)</title><rect x="95.5491%" y="549" width="0.2333%" height="15" fill="rgb(217,57,1)" fg:x="101563" fg:w="248"/><text x="95.7991%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.06%)</title><rect x="95.7241%" y="533" width="0.0583%" height="15" fill="rgb(249,119,31)" fg:x="101749" fg:w="62"/><text x="95.9741%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (58 samples, 0.05%)</title><rect x="95.7279%" y="517" width="0.0546%" height="15" fill="rgb(233,164,33)" fg:x="101753" fg:w="58"/><text x="95.9779%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (57 samples, 0.05%)</title><rect x="95.7288%" y="501" width="0.0536%" height="15" fill="rgb(250,217,43)" fg:x="101754" fg:w="57"/><text x="95.9788%" y="511.50"></text></g><g><title>___pthread_mutex_lock (57 samples, 0.05%)</title><rect x="95.7288%" y="485" width="0.0536%" height="15" fill="rgb(232,154,50)" fg:x="101754" fg:w="57"/><text x="95.9788%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (18 samples, 0.02%)</title><rect x="95.7655%" y="469" width="0.0169%" height="15" fill="rgb(227,190,8)" fg:x="101793" fg:w="18"/><text x="96.0155%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,411 samples, 5.09%)</title><rect x="90.7427%" y="645" width="5.0906%" height="15" fill="rgb(209,217,32)" fg:x="96454" fg:w="5411"/><text x="90.9927%" y="655.50">&lt;core:..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (5,409 samples, 5.09%)</title><rect x="90.7445%" y="629" width="5.0887%" height="15" fill="rgb(243,203,50)" fg:x="96456" fg:w="5409"/><text x="90.9945%" y="639.50">async_..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (51 samples, 0.05%)</title><rect x="95.7853%" y="613" width="0.0480%" height="15" fill="rgb(232,152,27)" fg:x="101814" fg:w="51"/><text x="96.0353%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (51 samples, 0.05%)</title><rect x="95.7853%" y="597" width="0.0480%" height="15" fill="rgb(240,34,29)" fg:x="101814" fg:w="51"/><text x="96.0353%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (48 samples, 0.05%)</title><rect x="95.9311%" y="517" width="0.0452%" height="15" fill="rgb(215,185,52)" fg:x="101969" fg:w="48"/><text x="96.1811%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (43 samples, 0.04%)</title><rect x="95.9358%" y="501" width="0.0405%" height="15" fill="rgb(240,89,49)" fg:x="101974" fg:w="43"/><text x="96.1858%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (36 samples, 0.03%)</title><rect x="95.9781%" y="501" width="0.0339%" height="15" fill="rgb(225,12,52)" fg:x="102019" fg:w="36"/><text x="96.2281%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (138 samples, 0.13%)</title><rect x="95.8982%" y="597" width="0.1298%" height="15" fill="rgb(239,128,45)" fg:x="101934" fg:w="138"/><text x="96.1482%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (137 samples, 0.13%)</title><rect x="95.8991%" y="581" width="0.1289%" height="15" fill="rgb(211,78,47)" fg:x="101935" fg:w="137"/><text x="96.1491%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (108 samples, 0.10%)</title><rect x="95.9264%" y="565" width="0.1016%" height="15" fill="rgb(232,31,21)" fg:x="101964" fg:w="108"/><text x="96.1764%" y="575.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (108 samples, 0.10%)</title><rect x="95.9264%" y="549" width="0.1016%" height="15" fill="rgb(222,168,14)" fg:x="101964" fg:w="108"/><text x="96.1764%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (104 samples, 0.10%)</title><rect x="95.9302%" y="533" width="0.0978%" height="15" fill="rgb(209,128,24)" fg:x="101968" fg:w="104"/><text x="96.1802%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (55 samples, 0.05%)</title><rect x="95.9763%" y="517" width="0.0517%" height="15" fill="rgb(249,35,13)" fg:x="102017" fg:w="55"/><text x="96.2263%" y="527.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (139 samples, 0.13%)</title><rect x="95.8982%" y="613" width="0.1308%" height="15" fill="rgb(218,7,2)" fg:x="101934" fg:w="139"/><text x="96.1482%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (25 samples, 0.02%)</title><rect x="96.0289%" y="613" width="0.0235%" height="15" fill="rgb(238,107,27)" fg:x="102073" fg:w="25"/><text x="96.2789%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.02%)</title><rect x="96.0308%" y="597" width="0.0216%" height="15" fill="rgb(217,88,38)" fg:x="102075" fg:w="23"/><text x="96.2808%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (23 samples, 0.02%)</title><rect x="96.0308%" y="581" width="0.0216%" height="15" fill="rgb(230,207,0)" fg:x="102075" fg:w="23"/><text x="96.2808%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (11 samples, 0.01%)</title><rect x="96.0572%" y="485" width="0.0103%" height="15" fill="rgb(249,64,54)" fg:x="102103" fg:w="11"/><text x="96.3072%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (11 samples, 0.01%)</title><rect x="96.0572%" y="469" width="0.0103%" height="15" fill="rgb(231,7,11)" fg:x="102103" fg:w="11"/><text x="96.3072%" y="479.50"></text></g><g><title>parking::Unparker::unpark (25 samples, 0.02%)</title><rect x="96.0562%" y="517" width="0.0235%" height="15" fill="rgb(205,149,21)" fg:x="102102" fg:w="25"/><text x="96.3062%" y="527.50"></text></g><g><title>parking::Inner::unpark (25 samples, 0.02%)</title><rect x="96.0562%" y="501" width="0.0235%" height="15" fill="rgb(215,126,34)" fg:x="102102" fg:w="25"/><text x="96.3062%" y="511.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (27 samples, 0.03%)</title><rect x="96.0553%" y="533" width="0.0254%" height="15" fill="rgb(241,132,45)" fg:x="102101" fg:w="27"/><text x="96.3053%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (32 samples, 0.03%)</title><rect x="96.0553%" y="565" width="0.0301%" height="15" fill="rgb(252,69,32)" fg:x="102101" fg:w="32"/><text x="96.3053%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (32 samples, 0.03%)</title><rect x="96.0553%" y="549" width="0.0301%" height="15" fill="rgb(232,204,19)" fg:x="102101" fg:w="32"/><text x="96.3053%" y="559.50"></text></g><g><title>async_executor::State::notify (36 samples, 0.03%)</title><rect x="96.0534%" y="581" width="0.0339%" height="15" fill="rgb(249,15,47)" fg:x="102099" fg:w="36"/><text x="96.3034%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (54 samples, 0.05%)</title><rect x="96.0534%" y="613" width="0.0508%" height="15" fill="rgb(209,227,23)" fg:x="102099" fg:w="54"/><text x="96.3034%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (54 samples, 0.05%)</title><rect x="96.0534%" y="597" width="0.0508%" height="15" fill="rgb(248,92,24)" fg:x="102099" fg:w="54"/><text x="96.3034%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (18 samples, 0.02%)</title><rect x="96.0873%" y="581" width="0.0169%" height="15" fill="rgb(247,59,2)" fg:x="102135" fg:w="18"/><text x="96.3373%" y="591.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (16 samples, 0.02%)</title><rect x="96.0891%" y="565" width="0.0151%" height="15" fill="rgb(221,30,5)" fg:x="102137" fg:w="16"/><text x="96.3391%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (125 samples, 0.12%)</title><rect x="96.1042%" y="613" width="0.1176%" height="15" fill="rgb(208,108,53)" fg:x="102153" fg:w="125"/><text x="96.3542%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (125 samples, 0.12%)</title><rect x="96.1042%" y="597" width="0.1176%" height="15" fill="rgb(211,183,26)" fg:x="102153" fg:w="125"/><text x="96.3542%" y="607.50"></text></g><g><title>async_task::runnable::Runnable::run (417 samples, 0.39%)</title><rect x="95.8333%" y="645" width="0.3923%" height="15" fill="rgb(232,132,4)" fg:x="101865" fg:w="417"/><text x="96.0833%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (401 samples, 0.38%)</title><rect x="95.8483%" y="629" width="0.3773%" height="15" fill="rgb(253,128,37)" fg:x="101881" fg:w="401"/><text x="96.0983%" y="639.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (5,846 samples, 5.50%)</title><rect x="90.7342%" y="693" width="5.4998%" height="15" fill="rgb(221,58,24)" fg:x="96445" fg:w="5846"/><text x="90.9842%" y="703.50">&lt;future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,846 samples, 5.50%)</title><rect x="90.7342%" y="677" width="5.4998%" height="15" fill="rgb(230,54,45)" fg:x="96445" fg:w="5846"/><text x="90.9842%" y="687.50">&lt;core::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (5,845 samples, 5.50%)</title><rect x="90.7351%" y="661" width="5.4989%" height="15" fill="rgb(254,21,18)" fg:x="96446" fg:w="5845"/><text x="90.9851%" y="671.50">async_e..</text></g><g><title>async_executor::Executor::run::{{closure}} (5,855 samples, 5.51%)</title><rect x="90.7304%" y="709" width="5.5083%" height="15" fill="rgb(221,108,0)" fg:x="96441" fg:w="5855"/><text x="90.9804%" y="719.50">async_e..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.01%)</title><rect x="96.3112%" y="453" width="0.0141%" height="15" fill="rgb(206,95,1)" fg:x="102373" fg:w="15"/><text x="96.5612%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.01%)</title><rect x="96.3121%" y="437" width="0.0132%" height="15" fill="rgb(237,52,5)" fg:x="102374" fg:w="14"/><text x="96.5621%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.01%)</title><rect x="96.3131%" y="421" width="0.0122%" height="15" fill="rgb(218,150,34)" fg:x="102375" fg:w="13"/><text x="96.5631%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.01%)</title><rect x="96.3140%" y="405" width="0.0113%" height="15" fill="rgb(235,194,28)" fg:x="102376" fg:w="12"/><text x="96.5640%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (12 samples, 0.01%)</title><rect x="96.3140%" y="389" width="0.0113%" height="15" fill="rgb(245,92,18)" fg:x="102376" fg:w="12"/><text x="96.5640%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="96.3112%" y="501" width="0.0151%" height="15" fill="rgb(253,203,53)" fg:x="102373" fg:w="16"/><text x="96.5612%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (16 samples, 0.02%)</title><rect x="96.3112%" y="485" width="0.0151%" height="15" fill="rgb(249,185,47)" fg:x="102373" fg:w="16"/><text x="96.5612%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.02%)</title><rect x="96.3112%" y="469" width="0.0151%" height="15" fill="rgb(252,194,52)" fg:x="102373" fg:w="16"/><text x="96.5612%" y="479.50"></text></g><g><title>concurrent_queue::full_fence (38 samples, 0.04%)</title><rect x="96.3535%" y="469" width="0.0357%" height="15" fill="rgb(210,53,36)" fg:x="102418" fg:w="38"/><text x="96.6035%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (38 samples, 0.04%)</title><rect x="96.3535%" y="453" width="0.0357%" height="15" fill="rgb(237,37,25)" fg:x="102418" fg:w="38"/><text x="96.6035%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (38 samples, 0.04%)</title><rect x="96.3535%" y="437" width="0.0357%" height="15" fill="rgb(242,116,27)" fg:x="102418" fg:w="38"/><text x="96.6035%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (38 samples, 0.04%)</title><rect x="96.3535%" y="421" width="0.0357%" height="15" fill="rgb(213,185,26)" fg:x="102418" fg:w="38"/><text x="96.6035%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (126 samples, 0.12%)</title><rect x="96.3356%" y="485" width="0.1185%" height="15" fill="rgb(225,204,8)" fg:x="102399" fg:w="126"/><text x="96.5856%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (69 samples, 0.06%)</title><rect x="96.3893%" y="469" width="0.0649%" height="15" fill="rgb(254,111,37)" fg:x="102456" fg:w="69"/><text x="96.6393%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (68 samples, 0.06%)</title><rect x="96.3902%" y="453" width="0.0640%" height="15" fill="rgb(242,35,9)" fg:x="102457" fg:w="68"/><text x="96.6402%" y="463.50"></text></g><g><title>concurrent_queue::full_fence (29 samples, 0.03%)</title><rect x="96.4626%" y="469" width="0.0273%" height="15" fill="rgb(232,138,49)" fg:x="102534" fg:w="29"/><text x="96.7126%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (29 samples, 0.03%)</title><rect x="96.4626%" y="453" width="0.0273%" height="15" fill="rgb(247,56,4)" fg:x="102534" fg:w="29"/><text x="96.7126%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (29 samples, 0.03%)</title><rect x="96.4626%" y="437" width="0.0273%" height="15" fill="rgb(226,179,17)" fg:x="102534" fg:w="29"/><text x="96.7126%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.03%)</title><rect x="96.4626%" y="421" width="0.0273%" height="15" fill="rgb(216,163,45)" fg:x="102534" fg:w="29"/><text x="96.7126%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (188 samples, 0.18%)</title><rect x="96.3262%" y="501" width="0.1769%" height="15" fill="rgb(211,157,3)" fg:x="102389" fg:w="188"/><text x="96.5762%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (52 samples, 0.05%)</title><rect x="96.4542%" y="485" width="0.0489%" height="15" fill="rgb(234,44,20)" fg:x="102525" fg:w="52"/><text x="96.7042%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="96.4927%" y="469" width="0.0103%" height="15" fill="rgb(254,138,23)" fg:x="102566" fg:w="11"/><text x="96.7427%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="96.4927%" y="453" width="0.0103%" height="15" fill="rgb(206,119,39)" fg:x="102566" fg:w="11"/><text x="96.7427%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (25 samples, 0.02%)</title><rect x="96.5069%" y="437" width="0.0235%" height="15" fill="rgb(231,105,52)" fg:x="102581" fg:w="25"/><text x="96.7569%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (25 samples, 0.02%)</title><rect x="96.5069%" y="421" width="0.0235%" height="15" fill="rgb(250,20,5)" fg:x="102581" fg:w="25"/><text x="96.7569%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (67 samples, 0.06%)</title><rect x="96.5031%" y="501" width="0.0630%" height="15" fill="rgb(215,198,30)" fg:x="102577" fg:w="67"/><text x="96.7531%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.06%)</title><rect x="96.5031%" y="485" width="0.0630%" height="15" fill="rgb(246,142,8)" fg:x="102577" fg:w="67"/><text x="96.7531%" y="495.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (67 samples, 0.06%)</title><rect x="96.5031%" y="469" width="0.0630%" height="15" fill="rgb(243,26,38)" fg:x="102577" fg:w="67"/><text x="96.7531%" y="479.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (66 samples, 0.06%)</title><rect x="96.5040%" y="453" width="0.0621%" height="15" fill="rgb(205,133,28)" fg:x="102578" fg:w="66"/><text x="96.7540%" y="463.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (38 samples, 0.04%)</title><rect x="96.5304%" y="437" width="0.0357%" height="15" fill="rgb(212,34,0)" fg:x="102606" fg:w="38"/><text x="96.7804%" y="447.50"></text></g><g><title>___pthread_rwlock_unlock (38 samples, 0.04%)</title><rect x="96.5304%" y="421" width="0.0357%" height="15" fill="rgb(251,226,22)" fg:x="102606" fg:w="38"/><text x="96.7804%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.01%)</title><rect x="96.5671%" y="469" width="0.0122%" height="15" fill="rgb(252,119,9)" fg:x="102645" fg:w="13"/><text x="96.8171%" y="479.50"></text></g><g><title>fastrand::usize (16 samples, 0.02%)</title><rect x="96.5661%" y="501" width="0.0151%" height="15" fill="rgb(213,150,50)" fg:x="102644" fg:w="16"/><text x="96.8161%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.02%)</title><rect x="96.5661%" y="485" width="0.0151%" height="15" fill="rgb(212,24,39)" fg:x="102644" fg:w="16"/><text x="96.8161%" y="495.50"></text></g><g><title>___pthread_rwlock_rdlock (44 samples, 0.04%)</title><rect x="96.5878%" y="453" width="0.0414%" height="15" fill="rgb(213,46,39)" fg:x="102667" fg:w="44"/><text x="96.8378%" y="463.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (377 samples, 0.35%)</title><rect x="96.3036%" y="517" width="0.3547%" height="15" fill="rgb(239,106,12)" fg:x="102365" fg:w="377"/><text x="96.5536%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (82 samples, 0.08%)</title><rect x="96.5812%" y="501" width="0.0771%" height="15" fill="rgb(249,229,21)" fg:x="102660" fg:w="82"/><text x="96.8312%" y="511.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (80 samples, 0.08%)</title><rect x="96.5831%" y="485" width="0.0753%" height="15" fill="rgb(212,158,3)" fg:x="102662" fg:w="80"/><text x="96.8331%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (79 samples, 0.07%)</title><rect x="96.5840%" y="469" width="0.0743%" height="15" fill="rgb(253,26,48)" fg:x="102663" fg:w="79"/><text x="96.8340%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (31 samples, 0.03%)</title><rect x="96.6292%" y="453" width="0.0292%" height="15" fill="rgb(238,178,20)" fg:x="102711" fg:w="31"/><text x="96.8792%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (31 samples, 0.03%)</title><rect x="96.6292%" y="437" width="0.0292%" height="15" fill="rgb(208,86,15)" fg:x="102711" fg:w="31"/><text x="96.8792%" y="447.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="96.6847%" y="437" width="0.0122%" height="15" fill="rgb(239,42,53)" fg:x="102770" fg:w="13"/><text x="96.9347%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (31 samples, 0.03%)</title><rect x="96.6687%" y="501" width="0.0292%" height="15" fill="rgb(245,226,8)" fg:x="102753" fg:w="31"/><text x="96.9187%" y="511.50"></text></g><g><title>core::task::wake::Waker::will_wake (15 samples, 0.01%)</title><rect x="96.6837%" y="485" width="0.0141%" height="15" fill="rgb(216,176,32)" fg:x="102769" fg:w="15"/><text x="96.9337%" y="495.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (15 samples, 0.01%)</title><rect x="96.6837%" y="469" width="0.0141%" height="15" fill="rgb(231,186,21)" fg:x="102769" fg:w="15"/><text x="96.9337%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.01%)</title><rect x="96.6847%" y="453" width="0.0132%" height="15" fill="rgb(205,95,49)" fg:x="102770" fg:w="14"/><text x="96.9347%" y="463.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (45 samples, 0.04%)</title><rect x="96.7007%" y="437" width="0.0423%" height="15" fill="rgb(217,145,8)" fg:x="102787" fg:w="45"/><text x="96.9507%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (49 samples, 0.05%)</title><rect x="96.6978%" y="501" width="0.0461%" height="15" fill="rgb(239,144,48)" fg:x="102784" fg:w="49"/><text x="96.9478%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.05%)</title><rect x="96.6978%" y="485" width="0.0461%" height="15" fill="rgb(214,189,23)" fg:x="102784" fg:w="49"/><text x="96.9478%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (46 samples, 0.04%)</title><rect x="96.7007%" y="469" width="0.0433%" height="15" fill="rgb(229,157,17)" fg:x="102787" fg:w="46"/><text x="96.9507%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (46 samples, 0.04%)</title><rect x="96.7007%" y="453" width="0.0433%" height="15" fill="rgb(230,5,48)" fg:x="102787" fg:w="46"/><text x="96.9507%" y="463.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (561 samples, 0.53%)</title><rect x="96.2848%" y="629" width="0.5278%" height="15" fill="rgb(224,156,48)" fg:x="102345" fg:w="561"/><text x="96.5348%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (560 samples, 0.53%)</title><rect x="96.2858%" y="613" width="0.5268%" height="15" fill="rgb(223,14,29)" fg:x="102346" fg:w="560"/><text x="96.5358%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (557 samples, 0.52%)</title><rect x="96.2886%" y="597" width="0.5240%" height="15" fill="rgb(229,96,36)" fg:x="102349" fg:w="557"/><text x="96.5386%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (553 samples, 0.52%)</title><rect x="96.2924%" y="581" width="0.5203%" height="15" fill="rgb(231,102,53)" fg:x="102353" fg:w="553"/><text x="96.5424%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (551 samples, 0.52%)</title><rect x="96.2942%" y="565" width="0.5184%" height="15" fill="rgb(210,77,38)" fg:x="102355" fg:w="551"/><text x="96.5442%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (549 samples, 0.52%)</title><rect x="96.2961%" y="549" width="0.5165%" height="15" fill="rgb(235,131,6)" fg:x="102357" fg:w="549"/><text x="96.5461%" y="559.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (542 samples, 0.51%)</title><rect x="96.3027%" y="533" width="0.5099%" height="15" fill="rgb(252,55,38)" fg:x="102364" fg:w="542"/><text x="96.5527%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (164 samples, 0.15%)</title><rect x="96.6583%" y="517" width="0.1543%" height="15" fill="rgb(246,38,14)" fg:x="102742" fg:w="164"/><text x="96.9083%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (73 samples, 0.07%)</title><rect x="96.7439%" y="501" width="0.0687%" height="15" fill="rgb(242,27,5)" fg:x="102833" fg:w="73"/><text x="96.9939%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (69 samples, 0.06%)</title><rect x="96.7477%" y="485" width="0.0649%" height="15" fill="rgb(228,65,35)" fg:x="102837" fg:w="69"/><text x="96.9977%" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (69 samples, 0.06%)</title><rect x="96.7477%" y="469" width="0.0649%" height="15" fill="rgb(245,93,11)" fg:x="102837" fg:w="69"/><text x="96.9977%" y="479.50"></text></g><g><title>___pthread_mutex_lock (69 samples, 0.06%)</title><rect x="96.7477%" y="453" width="0.0649%" height="15" fill="rgb(213,1,31)" fg:x="102837" fg:w="69"/><text x="96.9977%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (24 samples, 0.02%)</title><rect x="96.8832%" y="565" width="0.0226%" height="15" fill="rgb(237,205,14)" fg:x="102981" fg:w="24"/><text x="97.1332%" y="575.50"></text></g><g><title>core::mem::replace (24 samples, 0.02%)</title><rect x="96.8832%" y="549" width="0.0226%" height="15" fill="rgb(232,118,45)" fg:x="102981" fg:w="24"/><text x="97.1332%" y="559.50"></text></g><g><title>core::ptr::read (24 samples, 0.02%)</title><rect x="96.8832%" y="533" width="0.0226%" height="15" fill="rgb(218,5,6)" fg:x="102981" fg:w="24"/><text x="97.1332%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (38 samples, 0.04%)</title><rect x="96.8756%" y="581" width="0.0357%" height="15" fill="rgb(251,87,51)" fg:x="102973" fg:w="38"/><text x="97.1256%" y="591.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (43 samples, 0.04%)</title><rect x="96.9180%" y="501" width="0.0405%" height="15" fill="rgb(207,225,20)" fg:x="103018" fg:w="43"/><text x="97.1680%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (52 samples, 0.05%)</title><rect x="96.9114%" y="581" width="0.0489%" height="15" fill="rgb(222,78,54)" fg:x="103011" fg:w="52"/><text x="97.1614%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (51 samples, 0.05%)</title><rect x="96.9123%" y="565" width="0.0480%" height="15" fill="rgb(232,85,16)" fg:x="103012" fg:w="51"/><text x="97.1623%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="96.9123%" y="549" width="0.0480%" height="15" fill="rgb(244,25,33)" fg:x="103012" fg:w="51"/><text x="97.1623%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (45 samples, 0.04%)</title><rect x="96.9180%" y="533" width="0.0423%" height="15" fill="rgb(233,24,36)" fg:x="103018" fg:w="45"/><text x="97.1680%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (45 samples, 0.04%)</title><rect x="96.9180%" y="517" width="0.0423%" height="15" fill="rgb(253,49,54)" fg:x="103018" fg:w="45"/><text x="97.1680%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (228 samples, 0.21%)</title><rect x="96.8587%" y="597" width="0.2145%" height="15" fill="rgb(245,12,22)" fg:x="102955" fg:w="228"/><text x="97.1087%" y="607.50"></text></g><g><title>event_listener::Inner::lock (110 samples, 0.10%)</title><rect x="96.9697%" y="581" width="0.1035%" height="15" fill="rgb(253,141,28)" fg:x="103073" fg:w="110"/><text x="97.2197%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (110 samples, 0.10%)</title><rect x="96.9697%" y="565" width="0.1035%" height="15" fill="rgb(225,207,27)" fg:x="103073" fg:w="110"/><text x="97.2197%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (107 samples, 0.10%)</title><rect x="96.9725%" y="549" width="0.1007%" height="15" fill="rgb(220,84,2)" fg:x="103076" fg:w="107"/><text x="97.2225%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (97 samples, 0.09%)</title><rect x="96.9820%" y="533" width="0.0913%" height="15" fill="rgb(224,37,37)" fg:x="103086" fg:w="97"/><text x="97.2320%" y="543.50"></text></g><g><title>___pthread_mutex_lock (97 samples, 0.09%)</title><rect x="96.9820%" y="517" width="0.0913%" height="15" fill="rgb(220,143,18)" fg:x="103086" fg:w="97"/><text x="97.2320%" y="527.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (947 samples, 0.89%)</title><rect x="96.2811%" y="661" width="0.8909%" height="15" fill="rgb(210,88,33)" fg:x="102341" fg:w="947"/><text x="96.5311%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (944 samples, 0.89%)</title><rect x="96.2839%" y="645" width="0.8881%" height="15" fill="rgb(219,87,51)" fg:x="102344" fg:w="944"/><text x="96.5339%" y="655.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (382 samples, 0.36%)</title><rect x="96.8126%" y="629" width="0.3594%" height="15" fill="rgb(211,7,35)" fg:x="102906" fg:w="382"/><text x="97.0626%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (361 samples, 0.34%)</title><rect x="96.8324%" y="613" width="0.3396%" height="15" fill="rgb(232,77,2)" fg:x="102927" fg:w="361"/><text x="97.0824%" y="623.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (105 samples, 0.10%)</title><rect x="97.0732%" y="597" width="0.0988%" height="15" fill="rgb(249,94,25)" fg:x="103183" fg:w="105"/><text x="97.3232%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (105 samples, 0.10%)</title><rect x="97.0732%" y="581" width="0.0988%" height="15" fill="rgb(215,112,2)" fg:x="103183" fg:w="105"/><text x="97.3232%" y="591.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (43 samples, 0.04%)</title><rect x="97.1315%" y="565" width="0.0405%" height="15" fill="rgb(226,115,48)" fg:x="103245" fg:w="43"/><text x="97.3815%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (42 samples, 0.04%)</title><rect x="97.1325%" y="549" width="0.0395%" height="15" fill="rgb(249,196,10)" fg:x="103246" fg:w="42"/><text x="97.3825%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (42 samples, 0.04%)</title><rect x="97.1325%" y="533" width="0.0395%" height="15" fill="rgb(237,109,14)" fg:x="103246" fg:w="42"/><text x="97.3825%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.04%)</title><rect x="97.1325%" y="517" width="0.0395%" height="15" fill="rgb(217,103,53)" fg:x="103246" fg:w="42"/><text x="97.3825%" y="527.50"></text></g><g><title>async_executor::Executor::state (11 samples, 0.01%)</title><rect x="97.1720%" y="661" width="0.0103%" height="15" fill="rgb(244,137,9)" fg:x="103288" fg:w="11"/><text x="97.4220%" y="671.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (11 samples, 0.01%)</title><rect x="97.1720%" y="645" width="0.0103%" height="15" fill="rgb(227,201,3)" fg:x="103288" fg:w="11"/><text x="97.4220%" y="655.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (11 samples, 0.01%)</title><rect x="97.1720%" y="629" width="0.0103%" height="15" fill="rgb(243,94,6)" fg:x="103288" fg:w="11"/><text x="97.4220%" y="639.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (11 samples, 0.01%)</title><rect x="97.1720%" y="613" width="0.0103%" height="15" fill="rgb(235,118,5)" fg:x="103288" fg:w="11"/><text x="97.4220%" y="623.50"></text></g><g><title>once_cell::imp::initialize_inner (11 samples, 0.01%)</title><rect x="97.1720%" y="597" width="0.0103%" height="15" fill="rgb(247,10,30)" fg:x="103288" fg:w="11"/><text x="97.4220%" y="607.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (11 samples, 0.01%)</title><rect x="97.1720%" y="581" width="0.0103%" height="15" fill="rgb(205,26,28)" fg:x="103288" fg:w="11"/><text x="97.4220%" y="591.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (11 samples, 0.01%)</title><rect x="97.1720%" y="565" width="0.0103%" height="15" fill="rgb(206,99,35)" fg:x="103288" fg:w="11"/><text x="97.4220%" y="575.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (11 samples, 0.01%)</title><rect x="97.1720%" y="549" width="0.0103%" height="15" fill="rgb(238,130,40)" fg:x="103288" fg:w="11"/><text x="97.4220%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,876 samples, 6.47%)</title><rect x="90.7191%" y="741" width="6.4689%" height="15" fill="rgb(224,126,31)" fg:x="96429" fg:w="6876"/><text x="90.9691%" y="751.50">&lt;futures..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,870 samples, 6.46%)</title><rect x="90.7248%" y="725" width="6.4632%" height="15" fill="rgb(254,105,17)" fg:x="96435" fg:w="6870"/><text x="90.9748%" y="735.50">&lt;core::f..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,009 samples, 0.95%)</title><rect x="96.2387%" y="709" width="0.9493%" height="15" fill="rgb(216,87,36)" fg:x="102296" fg:w="1009"/><text x="96.4887%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (971 samples, 0.91%)</title><rect x="96.2745%" y="693" width="0.9135%" height="15" fill="rgb(240,21,12)" fg:x="102334" fg:w="971"/><text x="96.5245%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (971 samples, 0.91%)</title><rect x="96.2745%" y="677" width="0.9135%" height="15" fill="rgb(245,192,34)" fg:x="102334" fg:w="971"/><text x="96.5245%" y="687.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (16 samples, 0.02%)</title><rect x="97.1936%" y="661" width="0.0151%" height="15" fill="rgb(226,100,49)" fg:x="103311" fg:w="16"/><text x="97.4436%" y="671.50"></text></g><g><title>once_cell::imp::initialize_inner (16 samples, 0.02%)</title><rect x="97.1936%" y="645" width="0.0151%" height="15" fill="rgb(245,188,27)" fg:x="103311" fg:w="16"/><text x="97.4436%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::get (26 samples, 0.02%)</title><rect x="97.1936%" y="741" width="0.0245%" height="15" fill="rgb(212,170,8)" fg:x="103311" fg:w="26"/><text x="97.4436%" y="751.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (26 samples, 0.02%)</title><rect x="97.1936%" y="725" width="0.0245%" height="15" fill="rgb(217,113,29)" fg:x="103311" fg:w="26"/><text x="97.4436%" y="735.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (26 samples, 0.02%)</title><rect x="97.1936%" y="709" width="0.0245%" height="15" fill="rgb(237,30,3)" fg:x="103311" fg:w="26"/><text x="97.4436%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (26 samples, 0.02%)</title><rect x="97.1936%" y="693" width="0.0245%" height="15" fill="rgb(227,19,28)" fg:x="103311" fg:w="26"/><text x="97.4436%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (26 samples, 0.02%)</title><rect x="97.1936%" y="677" width="0.0245%" height="15" fill="rgb(239,172,45)" fg:x="103311" fg:w="26"/><text x="97.4436%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (165 samples, 0.16%)</title><rect x="97.2181%" y="741" width="0.1552%" height="15" fill="rgb(254,55,39)" fg:x="103337" fg:w="165"/><text x="97.4681%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (165 samples, 0.16%)</title><rect x="97.2181%" y="725" width="0.1552%" height="15" fill="rgb(249,208,12)" fg:x="103337" fg:w="165"/><text x="97.4681%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (162 samples, 0.15%)</title><rect x="97.2209%" y="709" width="0.1524%" height="15" fill="rgb(240,52,13)" fg:x="103340" fg:w="162"/><text x="97.4709%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (155 samples, 0.15%)</title><rect x="97.2275%" y="693" width="0.1458%" height="15" fill="rgb(252,149,13)" fg:x="103347" fg:w="155"/><text x="97.4775%" y="703.50"></text></g><g><title>__GI___pthread_mutex_trylock (155 samples, 0.15%)</title><rect x="97.2275%" y="677" width="0.1458%" height="15" fill="rgb(232,81,48)" fg:x="103347" fg:w="155"/><text x="97.4775%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="97.3912%" y="709" width="0.0132%" height="15" fill="rgb(222,144,2)" fg:x="103521" fg:w="14"/><text x="97.6412%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (12 samples, 0.01%)</title><rect x="97.3931%" y="693" width="0.0113%" height="15" fill="rgb(216,81,32)" fg:x="103523" fg:w="12"/><text x="97.6431%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (11 samples, 0.01%)</title><rect x="97.3940%" y="677" width="0.0103%" height="15" fill="rgb(244,78,51)" fg:x="103524" fg:w="11"/><text x="97.6440%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (11 samples, 0.01%)</title><rect x="97.4288%" y="677" width="0.0103%" height="15" fill="rgb(217,66,21)" fg:x="103561" fg:w="11"/><text x="97.6788%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="97.4589%" y="309" width="0.0103%" height="15" fill="rgb(247,101,42)" fg:x="103593" fg:w="11"/><text x="97.7089%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (20 samples, 0.02%)</title><rect x="97.4542%" y="357" width="0.0188%" height="15" fill="rgb(227,81,39)" fg:x="103588" fg:w="20"/><text x="97.7042%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (20 samples, 0.02%)</title><rect x="97.4542%" y="341" width="0.0188%" height="15" fill="rgb(220,223,44)" fg:x="103588" fg:w="20"/><text x="97.7042%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (16 samples, 0.02%)</title><rect x="97.4580%" y="325" width="0.0151%" height="15" fill="rgb(205,218,2)" fg:x="103592" fg:w="16"/><text x="97.7080%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (22 samples, 0.02%)</title><rect x="97.4542%" y="373" width="0.0207%" height="15" fill="rgb(212,207,28)" fg:x="103588" fg:w="22"/><text x="97.7042%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (28 samples, 0.03%)</title><rect x="97.4533%" y="389" width="0.0263%" height="15" fill="rgb(224,12,41)" fg:x="103587" fg:w="28"/><text x="97.7033%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (20 samples, 0.02%)</title><rect x="97.4872%" y="373" width="0.0188%" height="15" fill="rgb(216,118,12)" fg:x="103623" fg:w="20"/><text x="97.7372%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (179 samples, 0.17%)</title><rect x="97.4533%" y="421" width="0.1684%" height="15" fill="rgb(252,97,46)" fg:x="103587" fg:w="179"/><text x="97.7033%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (179 samples, 0.17%)</title><rect x="97.4533%" y="405" width="0.1684%" height="15" fill="rgb(244,206,19)" fg:x="103587" fg:w="179"/><text x="97.7033%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (151 samples, 0.14%)</title><rect x="97.4796%" y="389" width="0.1421%" height="15" fill="rgb(231,84,31)" fg:x="103615" fg:w="151"/><text x="97.7296%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (123 samples, 0.12%)</title><rect x="97.5060%" y="373" width="0.1157%" height="15" fill="rgb(244,133,0)" fg:x="103643" fg:w="123"/><text x="97.7560%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (123 samples, 0.12%)</title><rect x="97.5060%" y="357" width="0.1157%" height="15" fill="rgb(223,15,50)" fg:x="103643" fg:w="123"/><text x="97.7560%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (123 samples, 0.12%)</title><rect x="97.5060%" y="341" width="0.1157%" height="15" fill="rgb(250,118,49)" fg:x="103643" fg:w="123"/><text x="97.7560%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (244 samples, 0.23%)</title><rect x="97.4495%" y="469" width="0.2296%" height="15" fill="rgb(248,25,38)" fg:x="103583" fg:w="244"/><text x="97.6995%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (244 samples, 0.23%)</title><rect x="97.4495%" y="453" width="0.2296%" height="15" fill="rgb(215,70,14)" fg:x="103583" fg:w="244"/><text x="97.6995%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (242 samples, 0.23%)</title><rect x="97.4514%" y="437" width="0.2277%" height="15" fill="rgb(215,28,15)" fg:x="103585" fg:w="242"/><text x="97.7014%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (48 samples, 0.05%)</title><rect x="97.6339%" y="421" width="0.0452%" height="15" fill="rgb(243,6,28)" fg:x="103779" fg:w="48"/><text x="97.8839%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (48 samples, 0.05%)</title><rect x="97.6339%" y="405" width="0.0452%" height="15" fill="rgb(222,130,1)" fg:x="103779" fg:w="48"/><text x="97.8839%" y="415.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (246 samples, 0.23%)</title><rect x="97.4486%" y="629" width="0.2314%" height="15" fill="rgb(236,166,44)" fg:x="103582" fg:w="246"/><text x="97.6986%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (246 samples, 0.23%)</title><rect x="97.4486%" y="613" width="0.2314%" height="15" fill="rgb(221,108,14)" fg:x="103582" fg:w="246"/><text x="97.6986%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (246 samples, 0.23%)</title><rect x="97.4486%" y="597" width="0.2314%" height="15" fill="rgb(252,3,45)" fg:x="103582" fg:w="246"/><text x="97.6986%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (246 samples, 0.23%)</title><rect x="97.4486%" y="581" width="0.2314%" height="15" fill="rgb(237,68,30)" fg:x="103582" fg:w="246"/><text x="97.6986%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (246 samples, 0.23%)</title><rect x="97.4486%" y="565" width="0.2314%" height="15" fill="rgb(211,79,22)" fg:x="103582" fg:w="246"/><text x="97.6986%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (246 samples, 0.23%)</title><rect x="97.4486%" y="549" width="0.2314%" height="15" fill="rgb(252,185,21)" fg:x="103582" fg:w="246"/><text x="97.6986%" y="559.50"></text></g><g><title>alloc::alloc::alloc (246 samples, 0.23%)</title><rect x="97.4486%" y="533" width="0.2314%" height="15" fill="rgb(225,189,26)" fg:x="103582" fg:w="246"/><text x="97.6986%" y="543.50"></text></g><g><title>__rg_alloc (246 samples, 0.23%)</title><rect x="97.4486%" y="517" width="0.2314%" height="15" fill="rgb(241,30,40)" fg:x="103582" fg:w="246"/><text x="97.6986%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (246 samples, 0.23%)</title><rect x="97.4486%" y="501" width="0.2314%" height="15" fill="rgb(235,215,44)" fg:x="103582" fg:w="246"/><text x="97.6986%" y="511.50"></text></g><g><title>rust_alloc (246 samples, 0.23%)</title><rect x="97.4486%" y="485" width="0.2314%" height="15" fill="rgb(205,8,29)" fg:x="103582" fg:w="246"/><text x="97.6986%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (247 samples, 0.23%)</title><rect x="97.4486%" y="661" width="0.2324%" height="15" fill="rgb(241,137,42)" fg:x="103582" fg:w="247"/><text x="97.6986%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (247 samples, 0.23%)</title><rect x="97.4486%" y="645" width="0.2324%" height="15" fill="rgb(237,155,2)" fg:x="103582" fg:w="247"/><text x="97.6986%" y="655.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (249 samples, 0.23%)</title><rect x="97.4486%" y="677" width="0.2343%" height="15" fill="rgb(245,29,42)" fg:x="103582" fg:w="249"/><text x="97.6986%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (288 samples, 0.27%)</title><rect x="97.4147%" y="709" width="0.2709%" height="15" fill="rgb(234,101,35)" fg:x="103546" fg:w="288"/><text x="97.6647%" y="719.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (278 samples, 0.26%)</title><rect x="97.4241%" y="693" width="0.2615%" height="15" fill="rgb(228,64,37)" fg:x="103556" fg:w="278"/><text x="97.6741%" y="703.50"></text></g><g><title>concurrent_queue::full_fence (13 samples, 0.01%)</title><rect x="97.7045%" y="661" width="0.0122%" height="15" fill="rgb(217,214,36)" fg:x="103854" fg:w="13"/><text x="97.9545%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (12 samples, 0.01%)</title><rect x="97.7054%" y="645" width="0.0113%" height="15" fill="rgb(243,70,3)" fg:x="103855" fg:w="12"/><text x="97.9554%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (12 samples, 0.01%)</title><rect x="97.7054%" y="629" width="0.0113%" height="15" fill="rgb(253,158,52)" fg:x="103855" fg:w="12"/><text x="97.9554%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="97.7054%" y="613" width="0.0113%" height="15" fill="rgb(234,111,54)" fg:x="103855" fg:w="12"/><text x="97.9554%" y="623.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (37 samples, 0.03%)</title><rect x="97.6857%" y="709" width="0.0348%" height="15" fill="rgb(217,70,32)" fg:x="103834" fg:w="37"/><text x="97.9357%" y="719.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (27 samples, 0.03%)</title><rect x="97.6951%" y="693" width="0.0254%" height="15" fill="rgb(234,18,33)" fg:x="103844" fg:w="27"/><text x="97.9451%" y="703.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (26 samples, 0.02%)</title><rect x="97.6960%" y="677" width="0.0245%" height="15" fill="rgb(234,12,49)" fg:x="103845" fg:w="26"/><text x="97.9460%" y="687.50"></text></g><g><title>core::mem::drop (34 samples, 0.03%)</title><rect x="97.7205%" y="709" width="0.0320%" height="15" fill="rgb(236,10,21)" fg:x="103871" fg:w="34"/><text x="97.9705%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (34 samples, 0.03%)</title><rect x="97.7205%" y="693" width="0.0320%" height="15" fill="rgb(248,182,45)" fg:x="103871" fg:w="34"/><text x="97.9705%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="97.7205%" y="677" width="0.0320%" height="15" fill="rgb(217,95,36)" fg:x="103871" fg:w="34"/><text x="97.9705%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (33 samples, 0.03%)</title><rect x="97.7214%" y="661" width="0.0310%" height="15" fill="rgb(212,110,31)" fg:x="103872" fg:w="33"/><text x="97.9714%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (33 samples, 0.03%)</title><rect x="97.7214%" y="645" width="0.0310%" height="15" fill="rgb(206,32,53)" fg:x="103872" fg:w="33"/><text x="97.9714%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (33 samples, 0.03%)</title><rect x="97.7214%" y="629" width="0.0310%" height="15" fill="rgb(246,141,37)" fg:x="103872" fg:w="33"/><text x="97.9714%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.02%)</title><rect x="97.7600%" y="709" width="0.0235%" height="15" fill="rgb(219,16,7)" fg:x="103913" fg:w="25"/><text x="98.0100%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (25 samples, 0.02%)</title><rect x="97.7600%" y="693" width="0.0235%" height="15" fill="rgb(230,205,45)" fg:x="103913" fg:w="25"/><text x="98.0100%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (25 samples, 0.02%)</title><rect x="97.7600%" y="677" width="0.0235%" height="15" fill="rgb(231,43,49)" fg:x="103913" fg:w="25"/><text x="98.0100%" y="687.50"></text></g><g><title>___pthread_mutex_lock (25 samples, 0.02%)</title><rect x="97.7600%" y="661" width="0.0235%" height="15" fill="rgb(212,106,34)" fg:x="103913" fg:w="25"/><text x="98.0100%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (464 samples, 0.44%)</title><rect x="97.3865%" y="725" width="0.4365%" height="15" fill="rgb(206,83,17)" fg:x="103516" fg:w="464"/><text x="97.6365%" y="735.50"></text></g><g><title>std::time::Instant::now (42 samples, 0.04%)</title><rect x="97.7835%" y="709" width="0.0395%" height="15" fill="rgb(244,154,49)" fg:x="103938" fg:w="42"/><text x="98.0335%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (42 samples, 0.04%)</title><rect x="97.7835%" y="693" width="0.0395%" height="15" fill="rgb(244,149,49)" fg:x="103938" fg:w="42"/><text x="98.0335%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (42 samples, 0.04%)</title><rect x="97.7835%" y="677" width="0.0395%" height="15" fill="rgb(227,134,18)" fg:x="103938" fg:w="42"/><text x="98.0335%" y="687.50"></text></g><g><title>__clock_gettime_2 (38 samples, 0.04%)</title><rect x="97.7873%" y="661" width="0.0357%" height="15" fill="rgb(237,116,36)" fg:x="103942" fg:w="38"/><text x="98.0373%" y="671.50"></text></g><g><title>__vdso_clock_gettime (32 samples, 0.03%)</title><rect x="97.7929%" y="645" width="0.0301%" height="15" fill="rgb(205,129,40)" fg:x="103948" fg:w="32"/><text x="98.0429%" y="655.50"></text></g><g><title>[[vdso]] (23 samples, 0.02%)</title><rect x="97.8014%" y="629" width="0.0216%" height="15" fill="rgb(236,178,4)" fg:x="103957" fg:w="23"/><text x="98.0514%" y="639.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (29 samples, 0.03%)</title><rect x="97.8428%" y="645" width="0.0273%" height="15" fill="rgb(251,76,53)" fg:x="104001" fg:w="29"/><text x="98.0928%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (30 samples, 0.03%)</title><rect x="97.8428%" y="709" width="0.0282%" height="15" fill="rgb(242,92,40)" fg:x="104001" fg:w="30"/><text x="98.0928%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="97.8428%" y="693" width="0.0282%" height="15" fill="rgb(209,45,30)" fg:x="104001" fg:w="30"/><text x="98.0928%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.03%)</title><rect x="97.8428%" y="677" width="0.0282%" height="15" fill="rgb(218,157,36)" fg:x="104001" fg:w="30"/><text x="98.0928%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (30 samples, 0.03%)</title><rect x="97.8428%" y="661" width="0.0282%" height="15" fill="rgb(222,186,16)" fg:x="104001" fg:w="30"/><text x="98.0928%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (26 samples, 0.02%)</title><rect x="97.8710%" y="709" width="0.0245%" height="15" fill="rgb(254,72,35)" fg:x="104031" fg:w="26"/><text x="98.1210%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (26 samples, 0.02%)</title><rect x="97.8710%" y="693" width="0.0245%" height="15" fill="rgb(224,25,35)" fg:x="104031" fg:w="26"/><text x="98.1210%" y="703.50"></text></g><g><title>__libc_read (24 samples, 0.02%)</title><rect x="97.9162%" y="693" width="0.0226%" height="15" fill="rgb(206,135,52)" fg:x="104079" fg:w="24"/><text x="98.1662%" y="703.50"></text></g><g><title>epoll_wait (46 samples, 0.04%)</title><rect x="97.9387%" y="693" width="0.0433%" height="15" fill="rgb(229,174,47)" fg:x="104103" fg:w="46"/><text x="98.1887%" y="703.50"></text></g><g><title>polling::epoll::Poller::modify (32 samples, 0.03%)</title><rect x="97.9830%" y="693" width="0.0301%" height="15" fill="rgb(242,184,21)" fg:x="104150" fg:w="32"/><text x="98.2330%" y="703.50"></text></g><g><title>polling::epoll::Poller::ctl (30 samples, 0.03%)</title><rect x="97.9848%" y="677" width="0.0282%" height="15" fill="rgb(213,22,45)" fg:x="104152" fg:w="30"/><text x="98.2348%" y="687.50"></text></g><g><title>__GI_epoll_ctl (28 samples, 0.03%)</title><rect x="97.9867%" y="661" width="0.0263%" height="15" fill="rgb(237,81,54)" fg:x="104154" fg:w="28"/><text x="98.2367%" y="671.50"></text></g><g><title>polling::epoll::Poller::wait (136 samples, 0.13%)</title><rect x="97.8955%" y="709" width="0.1279%" height="15" fill="rgb(248,177,18)" fg:x="104057" fg:w="136"/><text x="98.1455%" y="719.50"></text></g><g><title>syscall (11 samples, 0.01%)</title><rect x="98.0131%" y="693" width="0.0103%" height="15" fill="rgb(254,31,16)" fg:x="104182" fg:w="11"/><text x="98.2631%" y="703.50"></text></g><g><title>async_io::reactor::ReactorLock::react (705 samples, 0.66%)</title><rect x="97.3733%" y="741" width="0.6633%" height="15" fill="rgb(235,20,31)" fg:x="103502" fg:w="705"/><text x="97.6233%" y="751.50"></text></g><g><title>polling::Poller::wait (216 samples, 0.20%)</title><rect x="97.8334%" y="725" width="0.2032%" height="15" fill="rgb(240,56,43)" fg:x="103991" fg:w="216"/><text x="98.0834%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (14 samples, 0.01%)</title><rect x="98.0234%" y="709" width="0.0132%" height="15" fill="rgb(237,197,51)" fg:x="104193" fg:w="14"/><text x="98.2734%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (13 samples, 0.01%)</title><rect x="98.0243%" y="693" width="0.0122%" height="15" fill="rgb(241,162,44)" fg:x="104194" fg:w="13"/><text x="98.2743%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (11 samples, 0.01%)</title><rect x="98.0262%" y="677" width="0.0103%" height="15" fill="rgb(224,23,20)" fg:x="104196" fg:w="11"/><text x="98.2762%" y="687.50"></text></g><g><title>__GI___pthread_mutex_trylock (11 samples, 0.01%)</title><rect x="98.0262%" y="661" width="0.0103%" height="15" fill="rgb(250,109,34)" fg:x="104196" fg:w="11"/><text x="98.2762%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (11 samples, 0.01%)</title><rect x="98.0375%" y="693" width="0.0103%" height="15" fill="rgb(214,175,50)" fg:x="104208" fg:w="11"/><text x="98.2875%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (11 samples, 0.01%)</title><rect x="98.0375%" y="677" width="0.0103%" height="15" fill="rgb(213,182,5)" fg:x="104208" fg:w="11"/><text x="98.2875%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="98.0366%" y="741" width="0.0122%" height="15" fill="rgb(209,199,19)" fg:x="104207" fg:w="13"/><text x="98.2866%" y="751.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="98.0366%" y="725" width="0.0122%" height="15" fill="rgb(236,224,42)" fg:x="104207" fg:w="13"/><text x="98.2866%" y="735.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (13 samples, 0.01%)</title><rect x="98.0366%" y="709" width="0.0122%" height="15" fill="rgb(246,226,29)" fg:x="104207" fg:w="13"/><text x="98.2866%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::reactor::ReactorLock&gt; (14 samples, 0.01%)</title><rect x="98.0488%" y="741" width="0.0132%" height="15" fill="rgb(227,223,11)" fg:x="104220" fg:w="14"/><text x="98.2988%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="98.0488%" y="725" width="0.0132%" height="15" fill="rgb(219,7,51)" fg:x="104220" fg:w="14"/><text x="98.2988%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="98.0488%" y="709" width="0.0132%" height="15" fill="rgb(245,167,10)" fg:x="104220" fg:w="14"/><text x="98.2988%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="98.0488%" y="693" width="0.0132%" height="15" fill="rgb(237,224,16)" fg:x="104220" fg:w="14"/><text x="98.2988%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="98.0488%" y="677" width="0.0132%" height="15" fill="rgb(226,132,13)" fg:x="104220" fg:w="14"/><text x="98.2988%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="98.0488%" y="661" width="0.0132%" height="15" fill="rgb(214,140,3)" fg:x="104220" fg:w="14"/><text x="98.2988%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (13 samples, 0.01%)</title><rect x="98.0629%" y="741" width="0.0122%" height="15" fill="rgb(221,177,4)" fg:x="104235" fg:w="13"/><text x="98.3129%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_store (13 samples, 0.01%)</title><rect x="98.0629%" y="725" width="0.0122%" height="15" fill="rgb(238,139,3)" fg:x="104235" fg:w="13"/><text x="98.3129%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (75 samples, 0.07%)</title><rect x="98.0911%" y="709" width="0.0706%" height="15" fill="rgb(216,17,39)" fg:x="104265" fg:w="75"/><text x="98.3411%" y="719.50"></text></g><g><title>__GI___lll_lock_wake (50 samples, 0.05%)</title><rect x="98.1147%" y="693" width="0.0470%" height="15" fill="rgb(238,120,9)" fg:x="104290" fg:w="50"/><text x="98.3647%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (113 samples, 0.11%)</title><rect x="98.1636%" y="709" width="0.1063%" height="15" fill="rgb(244,92,53)" fg:x="104342" fg:w="113"/><text x="98.4136%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (113 samples, 0.11%)</title><rect x="98.1636%" y="693" width="0.1063%" height="15" fill="rgb(224,148,33)" fg:x="104342" fg:w="113"/><text x="98.4136%" y="703.50"></text></g><g><title>std::sync::poison::Flag::get (14 samples, 0.01%)</title><rect x="98.2699%" y="693" width="0.0132%" height="15" fill="rgb(243,6,36)" fg:x="104455" fg:w="14"/><text x="98.5199%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (14 samples, 0.01%)</title><rect x="98.2699%" y="677" width="0.0132%" height="15" fill="rgb(230,102,11)" fg:x="104455" fg:w="14"/><text x="98.5199%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="98.2699%" y="661" width="0.0132%" height="15" fill="rgb(234,148,36)" fg:x="104455" fg:w="14"/><text x="98.5199%" y="671.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (28 samples, 0.03%)</title><rect x="98.4223%" y="645" width="0.0263%" height="15" fill="rgb(251,153,25)" fg:x="104617" fg:w="28"/><text x="98.6723%" y="655.50"></text></g><g><title>__condvar_confirm_wakeup (27 samples, 0.03%)</title><rect x="98.4486%" y="645" width="0.0254%" height="15" fill="rgb(215,129,8)" fg:x="104645" fg:w="27"/><text x="98.6986%" y="655.50"></text></g><g><title>__condvar_dec_grefs (187 samples, 0.18%)</title><rect x="98.4740%" y="645" width="0.1759%" height="15" fill="rgb(224,128,35)" fg:x="104672" fg:w="187"/><text x="98.7240%" y="655.50"></text></g><g><title>__GI___pthread_disable_asynccancel (35 samples, 0.03%)</title><rect x="98.8297%" y="629" width="0.0329%" height="15" fill="rgb(237,56,52)" fg:x="105050" fg:w="35"/><text x="99.0797%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (231 samples, 0.22%)</title><rect x="98.6500%" y="645" width="0.2173%" height="15" fill="rgb(234,213,19)" fg:x="104859" fg:w="231"/><text x="98.9000%" y="655.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (657 samples, 0.62%)</title><rect x="98.2831%" y="677" width="0.6181%" height="15" fill="rgb(252,82,23)" fg:x="104469" fg:w="657"/><text x="98.5331%" y="687.50"></text></g><g><title>__GI___pthread_cond_wait (657 samples, 0.62%)</title><rect x="98.2831%" y="661" width="0.6181%" height="15" fill="rgb(254,201,21)" fg:x="104469" fg:w="657"/><text x="98.5331%" y="671.50"></text></g><g><title>__pthread_mutex_cond_lock (28 samples, 0.03%)</title><rect x="98.8748%" y="645" width="0.0263%" height="15" fill="rgb(250,186,11)" fg:x="105098" fg:w="28"/><text x="99.1248%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::wait (698 samples, 0.66%)</title><rect x="98.2699%" y="709" width="0.6567%" height="15" fill="rgb(211,174,5)" fg:x="104455" fg:w="698"/><text x="98.5199%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (684 samples, 0.64%)</title><rect x="98.2831%" y="693" width="0.6435%" height="15" fill="rgb(214,121,10)" fg:x="104469" fg:w="684"/><text x="98.5331%" y="703.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (27 samples, 0.03%)</title><rect x="98.9012%" y="677" width="0.0254%" height="15" fill="rgb(241,66,2)" fg:x="105126" fg:w="27"/><text x="99.1512%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (26 samples, 0.02%)</title><rect x="98.9021%" y="661" width="0.0245%" height="15" fill="rgb(220,167,19)" fg:x="105127" fg:w="26"/><text x="99.1521%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.02%)</title><rect x="98.9021%" y="645" width="0.0245%" height="15" fill="rgb(231,54,50)" fg:x="105127" fg:w="26"/><text x="99.1521%" y="655.50"></text></g><g><title>parking::Parker::park (929 samples, 0.87%)</title><rect x="98.0817%" y="741" width="0.8740%" height="15" fill="rgb(239,217,53)" fg:x="104255" fg:w="929"/><text x="98.3317%" y="751.50"></text></g><g><title>parking::Inner::park (927 samples, 0.87%)</title><rect x="98.0836%" y="725" width="0.8721%" height="15" fill="rgb(248,8,0)" fg:x="104257" fg:w="927"/><text x="98.3336%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.03%)</title><rect x="98.9266%" y="709" width="0.0292%" height="15" fill="rgb(229,118,37)" fg:x="105153" fg:w="31"/><text x="99.1766%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.03%)</title><rect x="98.9284%" y="693" width="0.0273%" height="15" fill="rgb(253,223,43)" fg:x="105155" fg:w="29"/><text x="99.1784%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (29 samples, 0.03%)</title><rect x="98.9284%" y="677" width="0.0273%" height="15" fill="rgb(211,77,36)" fg:x="105155" fg:w="29"/><text x="99.1784%" y="687.50"></text></g><g><title>___pthread_mutex_lock (29 samples, 0.03%)</title><rect x="98.9284%" y="661" width="0.0273%" height="15" fill="rgb(219,3,53)" fg:x="105155" fg:w="29"/><text x="99.1784%" y="671.50"></text></g><g><title>parking::Parker::park_timeout (130 samples, 0.12%)</title><rect x="98.9557%" y="741" width="0.1223%" height="15" fill="rgb(244,45,42)" fg:x="105184" fg:w="130"/><text x="99.2057%" y="751.50"></text></g><g><title>parking::Inner::park (124 samples, 0.12%)</title><rect x="98.9614%" y="725" width="0.1167%" height="15" fill="rgb(225,95,27)" fg:x="105190" fg:w="124"/><text x="99.2114%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (115 samples, 0.11%)</title><rect x="98.9698%" y="709" width="0.1082%" height="15" fill="rgb(207,74,8)" fg:x="105199" fg:w="115"/><text x="99.2198%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (115 samples, 0.11%)</title><rect x="98.9698%" y="693" width="0.1082%" height="15" fill="rgb(243,63,36)" fg:x="105199" fg:w="115"/><text x="99.2198%" y="703.50"></text></g><g><title>parking::pair (12 samples, 0.01%)</title><rect x="99.0780%" y="741" width="0.0113%" height="15" fill="rgb(211,180,12)" fg:x="105314" fg:w="12"/><text x="99.3280%" y="751.50"></text></g><g><title>parking::Parker::new (12 samples, 0.01%)</title><rect x="99.0780%" y="725" width="0.0113%" height="15" fill="rgb(254,166,49)" fg:x="105314" fg:w="12"/><text x="99.3280%" y="735.50"></text></g><g><title>std::panic::catch_unwind (8,917 samples, 8.39%)</title><rect x="90.7107%" y="901" width="8.3890%" height="15" fill="rgb(205,19,0)" fg:x="96420" fg:w="8917"/><text x="90.9607%" y="911.50">std::panic::..</text></g><g><title>std::panicking::try (8,917 samples, 8.39%)</title><rect x="90.7107%" y="885" width="8.3890%" height="15" fill="rgb(224,172,32)" fg:x="96420" fg:w="8917"/><text x="90.9607%" y="895.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (8,917 samples, 8.39%)</title><rect x="90.7107%" y="869" width="8.3890%" height="15" fill="rgb(254,136,30)" fg:x="96420" fg:w="8917"/><text x="90.9607%" y="879.50">std::panicki..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (8,917 samples, 8.39%)</title><rect x="90.7107%" y="853" width="8.3890%" height="15" fill="rgb(246,19,35)" fg:x="96420" fg:w="8917"/><text x="90.9607%" y="863.50">async_global..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,917 samples, 8.39%)</title><rect x="90.7107%" y="837" width="8.3890%" height="15" fill="rgb(219,24,36)" fg:x="96420" fg:w="8917"/><text x="90.9607%" y="847.50">std::thread:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,917 samples, 8.39%)</title><rect x="90.7107%" y="821" width="8.3890%" height="15" fill="rgb(251,55,1)" fg:x="96420" fg:w="8917"/><text x="90.9607%" y="831.50">std::thread:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (8,917 samples, 8.39%)</title><rect x="90.7107%" y="805" width="8.3890%" height="15" fill="rgb(218,117,39)" fg:x="96420" fg:w="8917"/><text x="90.9607%" y="815.50">async_global..</text></g><g><title>async_global_executor::reactor::block_on (8,917 samples, 8.39%)</title><rect x="90.7107%" y="789" width="8.3890%" height="15" fill="rgb(248,169,11)" fg:x="96420" fg:w="8917"/><text x="90.9607%" y="799.50">async_global..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (8,917 samples, 8.39%)</title><rect x="90.7107%" y="773" width="8.3890%" height="15" fill="rgb(244,40,44)" fg:x="96420" fg:w="8917"/><text x="90.9607%" y="783.50">async_global..</text></g><g><title>async_io::driver::block_on (8,917 samples, 8.39%)</title><rect x="90.7107%" y="757" width="8.3890%" height="15" fill="rgb(234,62,37)" fg:x="96420" fg:w="8917"/><text x="90.9607%" y="767.50">async_io::dr..</text></g><g><title>std::time::Instant::now (11 samples, 0.01%)</title><rect x="99.0893%" y="741" width="0.0103%" height="15" fill="rgb(207,117,42)" fg:x="105326" fg:w="11"/><text x="99.3393%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (11 samples, 0.01%)</title><rect x="99.0893%" y="725" width="0.0103%" height="15" fill="rgb(213,43,2)" fg:x="105326" fg:w="11"/><text x="99.3393%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (11 samples, 0.01%)</title><rect x="99.0893%" y="709" width="0.0103%" height="15" fill="rgb(244,202,51)" fg:x="105326" fg:w="11"/><text x="99.3393%" y="719.50"></text></g><g><title>std::panic::catch_unwind (8,941 samples, 8.41%)</title><rect x="90.6890%" y="1029" width="8.4116%" height="15" fill="rgb(253,174,46)" fg:x="96397" fg:w="8941"/><text x="90.9390%" y="1039.50">std::panic::..</text></g><g><title>std::panicking::try (8,941 samples, 8.41%)</title><rect x="90.6890%" y="1013" width="8.4116%" height="15" fill="rgb(251,23,1)" fg:x="96397" fg:w="8941"/><text x="90.9390%" y="1023.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (8,941 samples, 8.41%)</title><rect x="90.6890%" y="997" width="8.4116%" height="15" fill="rgb(253,26,1)" fg:x="96397" fg:w="8941"/><text x="90.9390%" y="1007.50">std::panicki..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8,941 samples, 8.41%)</title><rect x="90.6890%" y="981" width="8.4116%" height="15" fill="rgb(216,89,31)" fg:x="96397" fg:w="8941"/><text x="90.9390%" y="991.50">&lt;core::panic..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (8,941 samples, 8.41%)</title><rect x="90.6890%" y="965" width="8.4116%" height="15" fill="rgb(209,109,5)" fg:x="96397" fg:w="8941"/><text x="90.9390%" y="975.50">std::thread:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8,941 samples, 8.41%)</title><rect x="90.6890%" y="949" width="8.4116%" height="15" fill="rgb(229,63,13)" fg:x="96397" fg:w="8941"/><text x="90.9390%" y="959.50">std::sys_com..</text></g><g><title>core::ops::function::FnOnce::call_once (8,941 samples, 8.41%)</title><rect x="90.6890%" y="933" width="8.4116%" height="15" fill="rgb(238,137,54)" fg:x="96397" fg:w="8941"/><text x="90.9390%" y="943.50">core::ops::f..</text></g><g><title>async_global_executor::threading::thread_main_loop (8,941 samples, 8.41%)</title><rect x="90.6890%" y="917" width="8.4116%" height="15" fill="rgb(228,1,9)" fg:x="96397" fg:w="8941"/><text x="90.9390%" y="927.50">async_global..</text></g><g><title>__GI___clone (8,966 samples, 8.44%)</title><rect x="90.6749%" y="1141" width="8.4351%" height="15" fill="rgb(249,120,48)" fg:x="96382" fg:w="8966"/><text x="90.9249%" y="1151.50">__GI___clone</text></g><g><title>start_thread (8,952 samples, 8.42%)</title><rect x="90.6881%" y="1125" width="8.4219%" height="15" fill="rgb(209,72,36)" fg:x="96396" fg:w="8952"/><text x="90.9381%" y="1135.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8,951 samples, 8.42%)</title><rect x="90.6890%" y="1109" width="8.4210%" height="15" fill="rgb(247,98,49)" fg:x="96397" fg:w="8951"/><text x="90.9390%" y="1119.50">std::sys::un..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8,951 samples, 8.42%)</title><rect x="90.6890%" y="1093" width="8.4210%" height="15" fill="rgb(233,75,36)" fg:x="96397" fg:w="8951"/><text x="90.9390%" y="1103.50">&lt;alloc::boxe..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8,951 samples, 8.42%)</title><rect x="90.6890%" y="1077" width="8.4210%" height="15" fill="rgb(225,14,24)" fg:x="96397" fg:w="8951"/><text x="90.9390%" y="1087.50">&lt;alloc::boxe..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (8,951 samples, 8.42%)</title><rect x="90.6890%" y="1061" width="8.4210%" height="15" fill="rgb(237,193,20)" fg:x="96397" fg:w="8951"/><text x="90.9390%" y="1071.50">core::ops::f..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (8,951 samples, 8.42%)</title><rect x="90.6890%" y="1045" width="8.4210%" height="15" fill="rgb(239,122,19)" fg:x="96397" fg:w="8951"/><text x="90.9390%" y="1055.50">std::thread:..</text></g><g><title>abi_stable::std_types::boxed::destroy_box (77 samples, 0.07%)</title><rect x="99.1241%" y="1141" width="0.0724%" height="15" fill="rgb(231,220,10)" fg:x="105363" fg:w="77"/><text x="99.3741%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.01%)</title><rect x="99.1843%" y="1125" width="0.0122%" height="15" fill="rgb(220,66,15)" fg:x="105427" fg:w="13"/><text x="99.4343%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="99.1843%" y="1109" width="0.0122%" height="15" fill="rgb(215,171,52)" fg:x="105427" fg:w="13"/><text x="99.4343%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value,std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.01%)</title><rect x="99.1843%" y="1093" width="0.0122%" height="15" fill="rgb(241,169,50)" fg:x="105427" fg:w="13"/><text x="99.4343%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;&gt;,tremor_value::value::Value)&gt;&gt; (13 samples, 0.01%)</title><rect x="99.1843%" y="1077" width="0.0122%" height="15" fill="rgb(236,189,0)" fg:x="105427" fg:w="13"/><text x="99.4343%" y="1087.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="99.2116%" y="1125" width="0.0160%" height="15" fill="rgb(217,147,20)" fg:x="105456" fg:w="17"/><text x="99.4616%" y="1135.50"></text></g><g><title>anon.23a3371eb37fc94817be509838165768.73.llvm.16328265080049972961 (22 samples, 0.02%)</title><rect x="99.2116%" y="1141" width="0.0207%" height="15" fill="rgb(206,188,39)" fg:x="105456" fg:w="22"/><text x="99.4616%" y="1151.50"></text></g><g><title>anon.23a3371eb37fc94817be509838165768.74.llvm.16328265080049972961 (13 samples, 0.01%)</title><rect x="99.2323%" y="1141" width="0.0122%" height="15" fill="rgb(227,118,25)" fg:x="105478" fg:w="13"/><text x="99.4823%" y="1151.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="99.2323%" y="1125" width="0.0122%" height="15" fill="rgb(248,171,40)" fg:x="105478" fg:w="13"/><text x="99.4823%" y="1135.50"></text></g><g><title>anon.35f0de85e04b0f8bb947972ea9348f1d.14.llvm.4070801126149029742 (20 samples, 0.02%)</title><rect x="99.2483%" y="1141" width="0.0188%" height="15" fill="rgb(251,90,54)" fg:x="105495" fg:w="20"/><text x="99.4983%" y="1151.50"></text></g><g><title>abi_stable::erased_types::iterator::next (13 samples, 0.01%)</title><rect x="99.2671%" y="1125" width="0.0122%" height="15" fill="rgb(234,11,46)" fg:x="105515" fg:w="13"/><text x="99.5171%" y="1135.50"></text></g><g><title>anon.60428f314eac9a34fd6a5f5dd740730b.0.llvm.6682858220796171858 (19 samples, 0.02%)</title><rect x="99.2671%" y="1141" width="0.0179%" height="15" fill="rgb(229,134,13)" fg:x="105515" fg:w="19"/><text x="99.5171%" y="1151.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (15 samples, 0.01%)</title><rect x="99.2991%" y="1125" width="0.0141%" height="15" fill="rgb(223,129,3)" fg:x="105549" fg:w="15"/><text x="99.5491%" y="1135.50"></text></g><g><title>anon.8c5413703f4f186253e43f95062f97a6.113.llvm.12695769662175795486 (25 samples, 0.02%)</title><rect x="99.2925%" y="1141" width="0.0235%" height="15" fill="rgb(221,124,13)" fg:x="105542" fg:w="25"/><text x="99.5425%" y="1151.50"></text></g><g><title>anon.adf543dd20ecce45fc53651bd1207dc5.78.llvm.3254357054457597259 (23 samples, 0.02%)</title><rect x="99.3160%" y="1141" width="0.0216%" height="15" fill="rgb(234,3,18)" fg:x="105567" fg:w="23"/><text x="99.5660%" y="1151.50"></text></g><g><title>rust_alloc (20 samples, 0.02%)</title><rect x="99.3189%" y="1125" width="0.0188%" height="15" fill="rgb(249,199,20)" fg:x="105570" fg:w="20"/><text x="99.5689%" y="1135.50"></text></g><g><title>async_executor::steal (24 samples, 0.02%)</title><rect x="99.3424%" y="1141" width="0.0226%" height="15" fill="rgb(224,134,6)" fg:x="105595" fg:w="24"/><text x="99.5924%" y="1151.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (22 samples, 0.02%)</title><rect x="99.3744%" y="1141" width="0.0207%" height="15" fill="rgb(254,83,26)" fg:x="105629" fg:w="22"/><text x="99.6244%" y="1151.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (14 samples, 0.01%)</title><rect x="99.4007%" y="1141" width="0.0132%" height="15" fill="rgb(217,88,9)" fg:x="105657" fg:w="14"/><text x="99.6507%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="99.4177%" y="1141" width="0.0113%" height="15" fill="rgb(225,73,2)" fg:x="105675" fg:w="12"/><text x="99.6677%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="99.4177%" y="1125" width="0.0113%" height="15" fill="rgb(226,44,39)" fg:x="105675" fg:w="12"/><text x="99.6677%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (23 samples, 0.02%)</title><rect x="99.4393%" y="1093" width="0.0216%" height="15" fill="rgb(228,53,17)" fg:x="105698" fg:w="23"/><text x="99.6893%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (23 samples, 0.02%)</title><rect x="99.4393%" y="1077" width="0.0216%" height="15" fill="rgb(212,27,27)" fg:x="105698" fg:w="23"/><text x="99.6893%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (23 samples, 0.02%)</title><rect x="99.4393%" y="1061" width="0.0216%" height="15" fill="rgb(241,50,6)" fg:x="105698" fg:w="23"/><text x="99.6893%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::option::ROption&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (41 samples, 0.04%)</title><rect x="99.4393%" y="1125" width="0.0386%" height="15" fill="rgb(225,28,51)" fg:x="105698" fg:w="41"/><text x="99.6893%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (41 samples, 0.04%)</title><rect x="99.4393%" y="1109" width="0.0386%" height="15" fill="rgb(215,33,16)" fg:x="105698" fg:w="41"/><text x="99.6893%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (18 samples, 0.02%)</title><rect x="99.4609%" y="1093" width="0.0169%" height="15" fill="rgb(243,40,39)" fg:x="105721" fg:w="18"/><text x="99.7109%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (18 samples, 0.02%)</title><rect x="99.4609%" y="1077" width="0.0169%" height="15" fill="rgb(225,11,42)" fg:x="105721" fg:w="18"/><text x="99.7109%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (41 samples, 0.04%)</title><rect x="99.4779%" y="1125" width="0.0386%" height="15" fill="rgb(241,220,38)" fg:x="105739" fg:w="41"/><text x="99.7279%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (41 samples, 0.04%)</title><rect x="99.4779%" y="1109" width="0.0386%" height="15" fill="rgb(244,52,35)" fg:x="105739" fg:w="41"/><text x="99.7279%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (41 samples, 0.04%)</title><rect x="99.4779%" y="1093" width="0.0386%" height="15" fill="rgb(246,42,46)" fg:x="105739" fg:w="41"/><text x="99.7279%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (123 samples, 0.12%)</title><rect x="99.4299%" y="1141" width="0.1157%" height="15" fill="rgb(205,184,13)" fg:x="105688" fg:w="123"/><text x="99.6799%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (31 samples, 0.03%)</title><rect x="99.5164%" y="1125" width="0.0292%" height="15" fill="rgb(209,48,36)" fg:x="105780" fg:w="31"/><text x="99.7664%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (25 samples, 0.02%)</title><rect x="99.5221%" y="1109" width="0.0235%" height="15" fill="rgb(244,34,51)" fg:x="105786" fg:w="25"/><text x="99.7721%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (25 samples, 0.02%)</title><rect x="99.5221%" y="1093" width="0.0235%" height="15" fill="rgb(221,107,33)" fg:x="105786" fg:w="25"/><text x="99.7721%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (14 samples, 0.01%)</title><rect x="99.5597%" y="1109" width="0.0132%" height="15" fill="rgb(224,203,12)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="1119.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="99.5597%" y="1093" width="0.0132%" height="15" fill="rgb(230,215,18)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="1103.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="99.5597%" y="1077" width="0.0132%" height="15" fill="rgb(206,185,35)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="1087.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (14 samples, 0.01%)</title><rect x="99.5597%" y="1061" width="0.0132%" height="15" fill="rgb(228,140,34)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="1071.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (14 samples, 0.01%)</title><rect x="99.5597%" y="1045" width="0.0132%" height="15" fill="rgb(208,93,13)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="1055.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (14 samples, 0.01%)</title><rect x="99.5597%" y="1029" width="0.0132%" height="15" fill="rgb(221,193,39)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.01%)</title><rect x="99.5597%" y="1013" width="0.0132%" height="15" fill="rgb(241,132,34)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="1023.50"></text></g><g><title>std::panicking::try (14 samples, 0.01%)</title><rect x="99.5597%" y="997" width="0.0132%" height="15" fill="rgb(221,141,10)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.01%)</title><rect x="99.5597%" y="981" width="0.0132%" height="15" fill="rgb(226,90,31)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.01%)</title><rect x="99.5597%" y="965" width="0.0132%" height="15" fill="rgb(243,75,5)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.01%)</title><rect x="99.5597%" y="949" width="0.0132%" height="15" fill="rgb(227,156,21)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="959.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (14 samples, 0.01%)</title><rect x="99.5597%" y="933" width="0.0132%" height="15" fill="rgb(250,195,8)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="943.50"></text></g><g><title>async_ffi::FfiContext::with_context (14 samples, 0.01%)</title><rect x="99.5597%" y="917" width="0.0132%" height="15" fill="rgb(220,134,5)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="927.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (14 samples, 0.01%)</title><rect x="99.5597%" y="901" width="0.0132%" height="15" fill="rgb(246,106,34)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="99.5597%" y="885" width="0.0132%" height="15" fill="rgb(205,1,4)" fg:x="105826" fg:w="14"/><text x="99.8097%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (21 samples, 0.02%)</title><rect x="99.5597%" y="1141" width="0.0198%" height="15" fill="rgb(224,151,29)" fg:x="105826" fg:w="21"/><text x="99.8097%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="99.5597%" y="1125" width="0.0198%" height="15" fill="rgb(251,196,0)" fg:x="105826" fg:w="21"/><text x="99.8097%" y="1135.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (11 samples, 0.01%)</title><rect x="99.5804%" y="1125" width="0.0103%" height="15" fill="rgb(212,127,0)" fg:x="105848" fg:w="11"/><text x="99.8304%" y="1135.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (11 samples, 0.01%)</title><rect x="99.5804%" y="1109" width="0.0103%" height="15" fill="rgb(236,71,53)" fg:x="105848" fg:w="11"/><text x="99.8304%" y="1119.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (11 samples, 0.01%)</title><rect x="99.5804%" y="1093" width="0.0103%" height="15" fill="rgb(227,99,0)" fg:x="105848" fg:w="11"/><text x="99.8304%" y="1103.50"></text></g><g><title>async-std/runti (105,797 samples, 99.53%)</title><rect x="0.0715%" y="1157" width="99.5324%" height="15" fill="rgb(239,89,21)" fg:x="76" fg:w="105797"/><text x="0.3215%" y="1167.50">async-std/runti</text></g><g><title>tremor_runtime::connectors::source::build_event (25 samples, 0.02%)</title><rect x="99.5804%" y="1141" width="0.0235%" height="15" fill="rgb(243,122,19)" fg:x="105848" fg:w="25"/><text x="99.8304%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (14 samples, 0.01%)</title><rect x="99.5908%" y="1125" width="0.0132%" height="15" fill="rgb(229,192,45)" fg:x="105859" fg:w="14"/><text x="99.8408%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (14 samples, 0.01%)</title><rect x="99.5908%" y="1109" width="0.0132%" height="15" fill="rgb(235,165,35)" fg:x="105859" fg:w="14"/><text x="99.8408%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (14 samples, 0.01%)</title><rect x="99.5908%" y="1093" width="0.0132%" height="15" fill="rgb(253,202,0)" fg:x="105859" fg:w="14"/><text x="99.8408%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="99.5908%" y="1077" width="0.0132%" height="15" fill="rgb(235,51,20)" fg:x="105859" fg:w="14"/><text x="99.8408%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="99.5908%" y="1061" width="0.0132%" height="15" fill="rgb(218,95,46)" fg:x="105859" fg:w="14"/><text x="99.8408%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (14 samples, 0.01%)</title><rect x="99.5908%" y="1045" width="0.0132%" height="15" fill="rgb(212,81,10)" fg:x="105859" fg:w="14"/><text x="99.8408%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;abi_stable::std_types::str::RStr,abi_stable::std_types::string::RString&gt;,tremor_value::value::Value&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="99.5908%" y="1029" width="0.0132%" height="15" fill="rgb(240,59,0)" fg:x="105859" fg:w="14"/><text x="99.8408%" y="1039.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="99.5908%" y="1013" width="0.0132%" height="15" fill="rgb(212,191,42)" fg:x="105859" fg:w="14"/><text x="99.8408%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="99.5908%" y="997" width="0.0132%" height="15" fill="rgb(233,140,3)" fg:x="105859" fg:w="14"/><text x="99.8408%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="99.5908%" y="981" width="0.0132%" height="15" fill="rgb(215,69,23)" fg:x="105859" fg:w="14"/><text x="99.8408%" y="991.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="99.5908%" y="965" width="0.0132%" height="15" fill="rgb(240,202,20)" fg:x="105859" fg:w="14"/><text x="99.8408%" y="975.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="99.5908%" y="949" width="0.0132%" height="15" fill="rgb(209,146,50)" fg:x="105859" fg:w="14"/><text x="99.8408%" y="959.50"></text></g><g><title>blocking-1 (18 samples, 0.02%)</title><rect x="99.6039%" y="1157" width="0.0169%" height="15" fill="rgb(253,102,54)" fg:x="105873" fg:w="18"/><text x="99.8539%" y="1167.50"></text></g><g><title>__GI___clone (18 samples, 0.02%)</title><rect x="99.6039%" y="1141" width="0.0169%" height="15" fill="rgb(250,173,47)" fg:x="105873" fg:w="18"/><text x="99.8539%" y="1151.50"></text></g><g><title>start_thread (14 samples, 0.01%)</title><rect x="99.6077%" y="1125" width="0.0132%" height="15" fill="rgb(232,142,7)" fg:x="105877" fg:w="14"/><text x="99.8577%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (13 samples, 0.01%)</title><rect x="99.6086%" y="1109" width="0.0122%" height="15" fill="rgb(230,157,47)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="99.6086%" y="1093" width="0.0122%" height="15" fill="rgb(214,177,35)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="99.6086%" y="1077" width="0.0122%" height="15" fill="rgb(234,119,46)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (13 samples, 0.01%)</title><rect x="99.6086%" y="1061" width="0.0122%" height="15" fill="rgb(241,180,50)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (13 samples, 0.01%)</title><rect x="99.6086%" y="1045" width="0.0122%" height="15" fill="rgb(221,54,25)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.01%)</title><rect x="99.6086%" y="1029" width="0.0122%" height="15" fill="rgb(209,157,44)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="1039.50"></text></g><g><title>std::panicking::try (13 samples, 0.01%)</title><rect x="99.6086%" y="1013" width="0.0122%" height="15" fill="rgb(246,115,41)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.01%)</title><rect x="99.6086%" y="997" width="0.0122%" height="15" fill="rgb(229,86,1)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="99.6086%" y="981" width="0.0122%" height="15" fill="rgb(240,108,53)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="99.6086%" y="965" width="0.0122%" height="15" fill="rgb(227,134,2)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 0.01%)</title><rect x="99.6086%" y="949" width="0.0122%" height="15" fill="rgb(213,129,25)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (13 samples, 0.01%)</title><rect x="99.6086%" y="933" width="0.0122%" height="15" fill="rgb(226,35,21)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (13 samples, 0.01%)</title><rect x="99.6086%" y="917" width="0.0122%" height="15" fill="rgb(208,129,26)" fg:x="105878" fg:w="13"/><text x="99.8586%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (12 samples, 0.01%)</title><rect x="99.6096%" y="901" width="0.0113%" height="15" fill="rgb(224,83,6)" fg:x="105879" fg:w="12"/><text x="99.8596%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (12 samples, 0.01%)</title><rect x="99.6096%" y="885" width="0.0113%" height="15" fill="rgb(227,52,39)" fg:x="105879" fg:w="12"/><text x="99.8596%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (12 samples, 0.01%)</title><rect x="99.6096%" y="869" width="0.0113%" height="15" fill="rgb(241,30,17)" fg:x="105879" fg:w="12"/><text x="99.8596%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (12 samples, 0.01%)</title><rect x="99.6096%" y="853" width="0.0113%" height="15" fill="rgb(246,186,42)" fg:x="105879" fg:w="12"/><text x="99.8596%" y="863.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (26 samples, 0.02%)</title><rect x="99.6284%" y="901" width="0.0245%" height="15" fill="rgb(221,169,15)" fg:x="105899" fg:w="26"/><text x="99.8784%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (26 samples, 0.02%)</title><rect x="99.6284%" y="885" width="0.0245%" height="15" fill="rgb(235,108,21)" fg:x="105899" fg:w="26"/><text x="99.8784%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (26 samples, 0.02%)</title><rect x="99.6284%" y="869" width="0.0245%" height="15" fill="rgb(219,148,30)" fg:x="105899" fg:w="26"/><text x="99.8784%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (26 samples, 0.02%)</title><rect x="99.6284%" y="853" width="0.0245%" height="15" fill="rgb(220,109,5)" fg:x="105899" fg:w="26"/><text x="99.8784%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common (24 samples, 0.02%)</title><rect x="99.6303%" y="837" width="0.0226%" height="15" fill="rgb(213,203,48)" fg:x="105901" fg:w="24"/><text x="99.8803%" y="847.50"></text></g><g><title>blocking-2 (35 samples, 0.03%)</title><rect x="99.6209%" y="1157" width="0.0329%" height="15" fill="rgb(244,71,33)" fg:x="105891" fg:w="35"/><text x="99.8709%" y="1167.50"></text></g><g><title>__GI___clone (33 samples, 0.03%)</title><rect x="99.6227%" y="1141" width="0.0310%" height="15" fill="rgb(209,23,2)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="1151.50"></text></g><g><title>start_thread (33 samples, 0.03%)</title><rect x="99.6227%" y="1125" width="0.0310%" height="15" fill="rgb(219,97,7)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (33 samples, 0.03%)</title><rect x="99.6227%" y="1109" width="0.0310%" height="15" fill="rgb(216,161,23)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (33 samples, 0.03%)</title><rect x="99.6227%" y="1093" width="0.0310%" height="15" fill="rgb(207,45,42)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (33 samples, 0.03%)</title><rect x="99.6227%" y="1077" width="0.0310%" height="15" fill="rgb(241,61,4)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (33 samples, 0.03%)</title><rect x="99.6227%" y="1061" width="0.0310%" height="15" fill="rgb(236,170,1)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (33 samples, 0.03%)</title><rect x="99.6227%" y="1045" width="0.0310%" height="15" fill="rgb(239,72,5)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (33 samples, 0.03%)</title><rect x="99.6227%" y="1029" width="0.0310%" height="15" fill="rgb(214,13,50)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="1039.50"></text></g><g><title>std::panicking::try (33 samples, 0.03%)</title><rect x="99.6227%" y="1013" width="0.0310%" height="15" fill="rgb(224,88,9)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (33 samples, 0.03%)</title><rect x="99.6227%" y="997" width="0.0310%" height="15" fill="rgb(238,192,34)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (33 samples, 0.03%)</title><rect x="99.6227%" y="981" width="0.0310%" height="15" fill="rgb(217,203,50)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (33 samples, 0.03%)</title><rect x="99.6227%" y="965" width="0.0310%" height="15" fill="rgb(241,123,32)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (33 samples, 0.03%)</title><rect x="99.6227%" y="949" width="0.0310%" height="15" fill="rgb(248,151,39)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (33 samples, 0.03%)</title><rect x="99.6227%" y="933" width="0.0310%" height="15" fill="rgb(208,89,6)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (33 samples, 0.03%)</title><rect x="99.6227%" y="917" width="0.0310%" height="15" fill="rgb(254,43,26)" fg:x="105893" fg:w="33"/><text x="99.8727%" y="927.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (84 samples, 0.08%)</title><rect x="99.6688%" y="901" width="0.0790%" height="15" fill="rgb(216,158,13)" fg:x="105942" fg:w="84"/><text x="99.9188%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (84 samples, 0.08%)</title><rect x="99.6688%" y="885" width="0.0790%" height="15" fill="rgb(212,47,37)" fg:x="105942" fg:w="84"/><text x="99.9188%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (84 samples, 0.08%)</title><rect x="99.6688%" y="869" width="0.0790%" height="15" fill="rgb(254,16,10)" fg:x="105942" fg:w="84"/><text x="99.9188%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (84 samples, 0.08%)</title><rect x="99.6688%" y="853" width="0.0790%" height="15" fill="rgb(223,228,16)" fg:x="105942" fg:w="84"/><text x="99.9188%" y="863.50"></text></g><g><title>___pthread_mutex_lock (84 samples, 0.08%)</title><rect x="99.6688%" y="837" width="0.0790%" height="15" fill="rgb(249,108,50)" fg:x="105942" fg:w="84"/><text x="99.9188%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (84 samples, 0.08%)</title><rect x="99.6688%" y="821" width="0.0790%" height="15" fill="rgb(208,220,5)" fg:x="105942" fg:w="84"/><text x="99.9188%" y="831.50"></text></g><g><title>std::panic::catch_unwind (86 samples, 0.08%)</title><rect x="99.6679%" y="1029" width="0.0809%" height="15" fill="rgb(217,89,48)" fg:x="105941" fg:w="86"/><text x="99.9179%" y="1039.50"></text></g><g><title>std::panicking::try (86 samples, 0.08%)</title><rect x="99.6679%" y="1013" width="0.0809%" height="15" fill="rgb(212,113,41)" fg:x="105941" fg:w="86"/><text x="99.9179%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (86 samples, 0.08%)</title><rect x="99.6679%" y="997" width="0.0809%" height="15" fill="rgb(231,127,5)" fg:x="105941" fg:w="86"/><text x="99.9179%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (86 samples, 0.08%)</title><rect x="99.6679%" y="981" width="0.0809%" height="15" fill="rgb(217,141,17)" fg:x="105941" fg:w="86"/><text x="99.9179%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (86 samples, 0.08%)</title><rect x="99.6679%" y="965" width="0.0809%" height="15" fill="rgb(245,125,54)" fg:x="105941" fg:w="86"/><text x="99.9179%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (86 samples, 0.08%)</title><rect x="99.6679%" y="949" width="0.0809%" height="15" fill="rgb(248,125,3)" fg:x="105941" fg:w="86"/><text x="99.9179%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (86 samples, 0.08%)</title><rect x="99.6679%" y="933" width="0.0809%" height="15" fill="rgb(236,119,51)" fg:x="105941" fg:w="86"/><text x="99.9179%" y="943.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (86 samples, 0.08%)</title><rect x="99.6679%" y="917" width="0.0809%" height="15" fill="rgb(239,99,8)" fg:x="105941" fg:w="86"/><text x="99.9179%" y="927.50"></text></g><g><title>tokio-runtime-w (94 samples, 0.09%)</title><rect x="99.6660%" y="1157" width="0.0884%" height="15" fill="rgb(224,228,4)" fg:x="105939" fg:w="94"/><text x="99.9160%" y="1167.50"></text></g><g><title>__GI___clone (92 samples, 0.09%)</title><rect x="99.6679%" y="1141" width="0.0866%" height="15" fill="rgb(220,131,45)" fg:x="105941" fg:w="92"/><text x="99.9179%" y="1151.50"></text></g><g><title>start_thread (92 samples, 0.09%)</title><rect x="99.6679%" y="1125" width="0.0866%" height="15" fill="rgb(215,62,5)" fg:x="105941" fg:w="92"/><text x="99.9179%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (92 samples, 0.09%)</title><rect x="99.6679%" y="1109" width="0.0866%" height="15" fill="rgb(253,12,24)" fg:x="105941" fg:w="92"/><text x="99.9179%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (92 samples, 0.09%)</title><rect x="99.6679%" y="1093" width="0.0866%" height="15" fill="rgb(248,120,50)" fg:x="105941" fg:w="92"/><text x="99.9179%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (92 samples, 0.09%)</title><rect x="99.6679%" y="1077" width="0.0866%" height="15" fill="rgb(245,194,10)" fg:x="105941" fg:w="92"/><text x="99.9179%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (92 samples, 0.09%)</title><rect x="99.6679%" y="1061" width="0.0866%" height="15" fill="rgb(241,149,38)" fg:x="105941" fg:w="92"/><text x="99.9179%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (92 samples, 0.09%)</title><rect x="99.6679%" y="1045" width="0.0866%" height="15" fill="rgb(219,215,7)" fg:x="105941" fg:w="92"/><text x="99.9179%" y="1055.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="99.7554%" y="1141" width="0.0132%" height="15" fill="rgb(208,120,31)" fg:x="106034" fg:w="14"/><text x="100.0054%" y="1151.50"></text></g><g><title>__GI___clone (237 samples, 0.22%)</title><rect x="99.7686%" y="1141" width="0.2230%" height="15" fill="rgb(244,30,8)" fg:x="106048" fg:w="237"/><text x="100.0186%" y="1151.50"></text></g><g><title>start_thread (22 samples, 0.02%)</title><rect x="99.9708%" y="1125" width="0.0207%" height="15" fill="rgb(238,35,44)" fg:x="106263" fg:w="22"/><text x="100.2208%" y="1135.50"></text></g><g><title>all (106,294 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(243,218,37)" fg:x="0" fg:w="106294"/><text x="0.2500%" y="1183.50"></text></g><g><title>tremor-pdk-sing (261 samples, 0.25%)</title><rect x="99.7545%" y="1157" width="0.2455%" height="15" fill="rgb(218,169,10)" fg:x="106033" fg:w="261"/><text x="100.0045%" y="1167.50"></text></g></svg></svg>