<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="105041"><g><title>__x64_sys_futex (11 samples, 0.01%)</title><rect x="0.0133%" y="805" width="0.0105%" height="15" fill="rgb(227,0,7)" fg:x="14" fg:w="11"/><text x="0.2633%" y="815.50"></text></g><g><title>do_futex (11 samples, 0.01%)</title><rect x="0.0133%" y="789" width="0.0105%" height="15" fill="rgb(217,0,24)" fg:x="14" fg:w="11"/><text x="0.2633%" y="799.50"></text></g><g><title>futex_wait (11 samples, 0.01%)</title><rect x="0.0133%" y="773" width="0.0105%" height="15" fill="rgb(221,193,54)" fg:x="14" fg:w="11"/><text x="0.2633%" y="783.50"></text></g><g><title>futex_wait_queue (11 samples, 0.01%)</title><rect x="0.0133%" y="757" width="0.0105%" height="15" fill="rgb(248,212,6)" fg:x="14" fg:w="11"/><text x="0.2633%" y="767.50"></text></g><g><title>schedule (11 samples, 0.01%)</title><rect x="0.0133%" y="741" width="0.0105%" height="15" fill="rgb(208,68,35)" fg:x="14" fg:w="11"/><text x="0.2633%" y="751.50"></text></g><g><title>__schedule (11 samples, 0.01%)</title><rect x="0.0133%" y="725" width="0.0105%" height="15" fill="rgb(232,128,0)" fg:x="14" fg:w="11"/><text x="0.2633%" y="735.50"></text></g><g><title>async_io::reactor::Reactor::lock (14 samples, 0.01%)</title><rect x="0.0133%" y="933" width="0.0133%" height="15" fill="rgb(207,160,47)" fg:x="14" fg:w="14"/><text x="0.2633%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="0.0133%" y="917" width="0.0133%" height="15" fill="rgb(228,23,34)" fg:x="14" fg:w="14"/><text x="0.2633%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="0.0133%" y="901" width="0.0133%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="14"/><text x="0.2633%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="0.0133%" y="885" width="0.0133%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="14"/><text x="0.2633%" y="895.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="0.0133%" y="869" width="0.0133%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="14"/><text x="0.2633%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (14 samples, 0.01%)</title><rect x="0.0133%" y="853" width="0.0133%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="14"/><text x="0.2633%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="0.0133%" y="837" width="0.0133%" height="15" fill="rgb(216,20,37)" fg:x="14" fg:w="14"/><text x="0.2633%" y="847.50"></text></g><g><title>do_syscall_64 (14 samples, 0.01%)</title><rect x="0.0133%" y="821" width="0.0133%" height="15" fill="rgb(206,188,39)" fg:x="14" fg:w="14"/><text x="0.2633%" y="831.50"></text></g><g><title>epoll_wait (11 samples, 0.01%)</title><rect x="0.0314%" y="885" width="0.0105%" height="15" fill="rgb(217,207,13)" fg:x="33" fg:w="11"/><text x="0.2814%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.01%)</title><rect x="0.0314%" y="869" width="0.0105%" height="15" fill="rgb(231,73,38)" fg:x="33" fg:w="11"/><text x="0.2814%" y="879.50"></text></g><g><title>do_syscall_64 (11 samples, 0.01%)</title><rect x="0.0314%" y="853" width="0.0105%" height="15" fill="rgb(225,20,46)" fg:x="33" fg:w="11"/><text x="0.2814%" y="863.50"></text></g><g><title>__x64_sys_epoll_wait (11 samples, 0.01%)</title><rect x="0.0314%" y="837" width="0.0105%" height="15" fill="rgb(210,31,41)" fg:x="33" fg:w="11"/><text x="0.2814%" y="847.50"></text></g><g><title>do_epoll_wait (11 samples, 0.01%)</title><rect x="0.0314%" y="821" width="0.0105%" height="15" fill="rgb(221,200,47)" fg:x="33" fg:w="11"/><text x="0.2814%" y="831.50"></text></g><g><title>schedule_hrtimeout_range_clock (11 samples, 0.01%)</title><rect x="0.0314%" y="805" width="0.0105%" height="15" fill="rgb(226,26,5)" fg:x="33" fg:w="11"/><text x="0.2814%" y="815.50"></text></g><g><title>schedule (11 samples, 0.01%)</title><rect x="0.0314%" y="789" width="0.0105%" height="15" fill="rgb(249,33,26)" fg:x="33" fg:w="11"/><text x="0.2814%" y="799.50"></text></g><g><title>__schedule (11 samples, 0.01%)</title><rect x="0.0314%" y="773" width="0.0105%" height="15" fill="rgb(235,183,28)" fg:x="33" fg:w="11"/><text x="0.2814%" y="783.50"></text></g><g><title>async_io::reactor::ReactorLock::react (16 samples, 0.02%)</title><rect x="0.0276%" y="933" width="0.0152%" height="15" fill="rgb(221,5,38)" fg:x="29" fg:w="16"/><text x="0.2776%" y="943.50"></text></g><g><title>polling::Poller::wait (13 samples, 0.01%)</title><rect x="0.0305%" y="917" width="0.0124%" height="15" fill="rgb(247,18,42)" fg:x="32" fg:w="13"/><text x="0.2805%" y="927.50"></text></g><g><title>polling::epoll::Poller::wait (13 samples, 0.01%)</title><rect x="0.0305%" y="901" width="0.0124%" height="15" fill="rgb(241,131,45)" fg:x="32" fg:w="13"/><text x="0.2805%" y="911.50"></text></g><g><title>finish_task_switch.isra.0 (26 samples, 0.02%)</title><rect x="0.0533%" y="693" width="0.0248%" height="15" fill="rgb(249,31,29)" fg:x="56" fg:w="26"/><text x="0.3033%" y="703.50"></text></g><g><title>__perf_event_task_sched_in (25 samples, 0.02%)</title><rect x="0.0543%" y="677" width="0.0238%" height="15" fill="rgb(225,111,53)" fg:x="57" fg:w="25"/><text x="0.3043%" y="687.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (25 samples, 0.02%)</title><rect x="0.0543%" y="661" width="0.0238%" height="15" fill="rgb(238,160,17)" fg:x="57" fg:w="25"/><text x="0.3043%" y="671.50"></text></g><g><title>native_write_msr (25 samples, 0.02%)</title><rect x="0.0543%" y="645" width="0.0238%" height="15" fill="rgb(214,148,48)" fg:x="57" fg:w="25"/><text x="0.3043%" y="655.50"></text></g><g><title>futex_wait_queue (36 samples, 0.03%)</title><rect x="0.0486%" y="741" width="0.0343%" height="15" fill="rgb(232,36,49)" fg:x="51" fg:w="36"/><text x="0.2986%" y="751.50"></text></g><g><title>schedule (36 samples, 0.03%)</title><rect x="0.0486%" y="725" width="0.0343%" height="15" fill="rgb(209,103,24)" fg:x="51" fg:w="36"/><text x="0.2986%" y="735.50"></text></g><g><title>__schedule (36 samples, 0.03%)</title><rect x="0.0486%" y="709" width="0.0343%" height="15" fill="rgb(229,88,8)" fg:x="51" fg:w="36"/><text x="0.2986%" y="719.50"></text></g><g><title>__x64_sys_futex (38 samples, 0.04%)</title><rect x="0.0476%" y="789" width="0.0362%" height="15" fill="rgb(213,181,19)" fg:x="50" fg:w="38"/><text x="0.2976%" y="799.50"></text></g><g><title>do_futex (37 samples, 0.04%)</title><rect x="0.0486%" y="773" width="0.0352%" height="15" fill="rgb(254,191,54)" fg:x="51" fg:w="37"/><text x="0.2986%" y="783.50"></text></g><g><title>futex_wait (37 samples, 0.04%)</title><rect x="0.0486%" y="757" width="0.0352%" height="15" fill="rgb(241,83,37)" fg:x="51" fg:w="37"/><text x="0.2986%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (40 samples, 0.04%)</title><rect x="0.0476%" y="821" width="0.0381%" height="15" fill="rgb(233,36,39)" fg:x="50" fg:w="40"/><text x="0.2976%" y="831.50"></text></g><g><title>do_syscall_64 (40 samples, 0.04%)</title><rect x="0.0476%" y="805" width="0.0381%" height="15" fill="rgb(226,3,54)" fg:x="50" fg:w="40"/><text x="0.2976%" y="815.50"></text></g><g><title>std::panic::catch_unwind (79 samples, 0.08%)</title><rect x="0.0114%" y="1061" width="0.0752%" height="15" fill="rgb(245,192,40)" fg:x="12" fg:w="79"/><text x="0.2614%" y="1071.50"></text></g><g><title>std::panicking::try (79 samples, 0.08%)</title><rect x="0.0114%" y="1045" width="0.0752%" height="15" fill="rgb(238,167,29)" fg:x="12" fg:w="79"/><text x="0.2614%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (79 samples, 0.08%)</title><rect x="0.0114%" y="1029" width="0.0752%" height="15" fill="rgb(232,182,51)" fg:x="12" fg:w="79"/><text x="0.2614%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (79 samples, 0.08%)</title><rect x="0.0114%" y="1013" width="0.0752%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="79"/><text x="0.2614%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (79 samples, 0.08%)</title><rect x="0.0114%" y="997" width="0.0752%" height="15" fill="rgb(208,69,12)" fg:x="12" fg:w="79"/><text x="0.2614%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (79 samples, 0.08%)</title><rect x="0.0114%" y="981" width="0.0752%" height="15" fill="rgb(235,93,37)" fg:x="12" fg:w="79"/><text x="0.2614%" y="991.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (79 samples, 0.08%)</title><rect x="0.0114%" y="965" width="0.0752%" height="15" fill="rgb(213,116,39)" fg:x="12" fg:w="79"/><text x="0.2614%" y="975.50"></text></g><g><title>async_io::driver::main_loop (79 samples, 0.08%)</title><rect x="0.0114%" y="949" width="0.0752%" height="15" fill="rgb(222,207,29)" fg:x="12" fg:w="79"/><text x="0.2614%" y="959.50"></text></g><g><title>parking::Parker::park_timeout (46 samples, 0.04%)</title><rect x="0.0428%" y="933" width="0.0438%" height="15" fill="rgb(206,96,30)" fg:x="45" fg:w="46"/><text x="0.2928%" y="943.50"></text></g><g><title>parking::Inner::park (46 samples, 0.04%)</title><rect x="0.0428%" y="917" width="0.0438%" height="15" fill="rgb(218,138,4)" fg:x="45" fg:w="46"/><text x="0.2928%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (43 samples, 0.04%)</title><rect x="0.0457%" y="901" width="0.0409%" height="15" fill="rgb(250,191,14)" fg:x="48" fg:w="43"/><text x="0.2957%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (43 samples, 0.04%)</title><rect x="0.0457%" y="885" width="0.0409%" height="15" fill="rgb(239,60,40)" fg:x="48" fg:w="43"/><text x="0.2957%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (43 samples, 0.04%)</title><rect x="0.0457%" y="869" width="0.0409%" height="15" fill="rgb(206,27,48)" fg:x="48" fg:w="43"/><text x="0.2957%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (43 samples, 0.04%)</title><rect x="0.0457%" y="853" width="0.0409%" height="15" fill="rgb(225,35,8)" fg:x="48" fg:w="43"/><text x="0.2957%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common (43 samples, 0.04%)</title><rect x="0.0457%" y="837" width="0.0409%" height="15" fill="rgb(250,213,24)" fg:x="48" fg:w="43"/><text x="0.2957%" y="847.50"></text></g><g><title>__GI___clone (85 samples, 0.08%)</title><rect x="0.0114%" y="1173" width="0.0809%" height="15" fill="rgb(247,123,22)" fg:x="12" fg:w="85"/><text x="0.2614%" y="1183.50"></text></g><g><title>start_thread (85 samples, 0.08%)</title><rect x="0.0114%" y="1157" width="0.0809%" height="15" fill="rgb(231,138,38)" fg:x="12" fg:w="85"/><text x="0.2614%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (85 samples, 0.08%)</title><rect x="0.0114%" y="1141" width="0.0809%" height="15" fill="rgb(231,145,46)" fg:x="12" fg:w="85"/><text x="0.2614%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (85 samples, 0.08%)</title><rect x="0.0114%" y="1125" width="0.0809%" height="15" fill="rgb(251,118,11)" fg:x="12" fg:w="85"/><text x="0.2614%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (85 samples, 0.08%)</title><rect x="0.0114%" y="1109" width="0.0809%" height="15" fill="rgb(217,147,25)" fg:x="12" fg:w="85"/><text x="0.2614%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (85 samples, 0.08%)</title><rect x="0.0114%" y="1093" width="0.0809%" height="15" fill="rgb(247,81,37)" fg:x="12" fg:w="85"/><text x="0.2614%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (85 samples, 0.08%)</title><rect x="0.0114%" y="1077" width="0.0809%" height="15" fill="rgb(209,12,38)" fg:x="12" fg:w="85"/><text x="0.2614%" y="1087.50"></text></g><g><title>async-io (90 samples, 0.09%)</title><rect x="0.0086%" y="1189" width="0.0857%" height="15" fill="rgb(227,1,9)" fg:x="9" fg:w="90"/><text x="0.2586%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="0.5836%" y="1173" width="0.0295%" height="15" fill="rgb(248,47,43)" fg:x="613" fg:w="31"/><text x="0.8336%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="0.6350%" y="1157" width="0.0162%" height="15" fill="rgb(221,10,30)" fg:x="667" fg:w="17"/><text x="0.8850%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (66 samples, 0.06%)</title><rect x="0.6512%" y="1157" width="0.0628%" height="15" fill="rgb(210,229,1)" fg:x="684" fg:w="66"/><text x="0.9012%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (28 samples, 0.03%)</title><rect x="0.6874%" y="1141" width="0.0267%" height="15" fill="rgb(222,148,37)" fg:x="722" fg:w="28"/><text x="0.9374%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="0.7140%" y="1157" width="0.0162%" height="15" fill="rgb(234,67,33)" fg:x="750" fg:w="17"/><text x="0.9640%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (17 samples, 0.02%)</title><rect x="0.8197%" y="1141" width="0.0162%" height="15" fill="rgb(247,98,35)" fg:x="861" fg:w="17"/><text x="1.0697%" y="1151.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (115 samples, 0.11%)</title><rect x="0.7302%" y="1157" width="0.1095%" height="15" fill="rgb(247,138,52)" fg:x="767" fg:w="115"/><text x="0.9802%" y="1167.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (34 samples, 0.03%)</title><rect x="0.9492%" y="1141" width="0.0324%" height="15" fill="rgb(213,79,30)" fg:x="997" fg:w="34"/><text x="1.1992%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (22 samples, 0.02%)</title><rect x="0.9815%" y="1141" width="0.0209%" height="15" fill="rgb(246,177,23)" fg:x="1031" fg:w="22"/><text x="1.2315%" y="1151.50"></text></g><g><title>core::mem::replace (22 samples, 0.02%)</title><rect x="0.9815%" y="1125" width="0.0209%" height="15" fill="rgb(230,62,27)" fg:x="1031" fg:w="22"/><text x="1.2315%" y="1135.50"></text></g><g><title>core::ptr::read (22 samples, 0.02%)</title><rect x="0.9815%" y="1109" width="0.0209%" height="15" fill="rgb(216,154,8)" fg:x="1031" fg:w="22"/><text x="1.2315%" y="1119.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (176 samples, 0.17%)</title><rect x="0.8473%" y="1157" width="0.1676%" height="15" fill="rgb(244,35,45)" fg:x="890" fg:w="176"/><text x="1.0973%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (13 samples, 0.01%)</title><rect x="1.0025%" y="1141" width="0.0124%" height="15" fill="rgb(251,115,12)" fg:x="1053" fg:w="13"/><text x="1.2525%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="1.3204%" y="1125" width="0.0162%" height="15" fill="rgb(240,54,50)" fg:x="1387" fg:w="17"/><text x="1.5704%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (113 samples, 0.11%)</title><rect x="1.2471%" y="1141" width="0.1076%" height="15" fill="rgb(233,84,52)" fg:x="1310" fg:w="113"/><text x="1.4971%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (19 samples, 0.02%)</title><rect x="1.3366%" y="1125" width="0.0181%" height="15" fill="rgb(207,117,47)" fg:x="1404" fg:w="19"/><text x="1.5866%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (13 samples, 0.01%)</title><rect x="1.3547%" y="1141" width="0.0124%" height="15" fill="rgb(249,43,39)" fg:x="1423" fg:w="13"/><text x="1.6047%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="1.3547%" y="1125" width="0.0124%" height="15" fill="rgb(209,38,44)" fg:x="1423" fg:w="13"/><text x="1.6047%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="1.3547%" y="1109" width="0.0124%" height="15" fill="rgb(236,212,23)" fg:x="1423" fg:w="13"/><text x="1.6047%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="1.3547%" y="1093" width="0.0124%" height="15" fill="rgb(242,79,21)" fg:x="1423" fg:w="13"/><text x="1.6047%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (13 samples, 0.01%)</title><rect x="1.3547%" y="1077" width="0.0124%" height="15" fill="rgb(211,96,35)" fg:x="1423" fg:w="13"/><text x="1.6047%" y="1087.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="1.4166%" y="1125" width="0.0105%" height="15" fill="rgb(253,215,40)" fg:x="1488" fg:w="11"/><text x="1.6666%" y="1135.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="1.4166%" y="1109" width="0.0105%" height="15" fill="rgb(211,81,21)" fg:x="1488" fg:w="11"/><text x="1.6666%" y="1119.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (13 samples, 0.01%)</title><rect x="1.4271%" y="1125" width="0.0124%" height="15" fill="rgb(208,190,38)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (13 samples, 0.01%)</title><rect x="1.4271%" y="1109" width="0.0124%" height="15" fill="rgb(235,213,38)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="1119.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (13 samples, 0.01%)</title><rect x="1.4271%" y="1093" width="0.0124%" height="15" fill="rgb(237,122,38)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (13 samples, 0.01%)</title><rect x="1.4271%" y="1077" width="0.0124%" height="15" fill="rgb(244,218,35)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 0.01%)</title><rect x="1.4271%" y="1061" width="0.0124%" height="15" fill="rgb(240,68,47)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="1.4271%" y="1045" width="0.0124%" height="15" fill="rgb(210,16,53)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="1.4271%" y="1029" width="0.0124%" height="15" fill="rgb(235,124,12)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="1.4271%" y="1013" width="0.0124%" height="15" fill="rgb(224,169,11)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="1.4271%" y="997" width="0.0124%" height="15" fill="rgb(250,166,2)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="1.4271%" y="981" width="0.0124%" height="15" fill="rgb(242,216,29)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="1.4271%" y="965" width="0.0124%" height="15" fill="rgb(230,116,27)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="1.4271%" y="949" width="0.0124%" height="15" fill="rgb(228,99,48)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="1.4271%" y="933" width="0.0124%" height="15" fill="rgb(253,11,6)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="943.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="1.4271%" y="917" width="0.0124%" height="15" fill="rgb(247,143,39)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="927.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="1.4271%" y="901" width="0.0124%" height="15" fill="rgb(236,97,10)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="1.4271%" y="885" width="0.0124%" height="15" fill="rgb(233,208,19)" fg:x="1499" fg:w="13"/><text x="1.6771%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="1.4394%" y="1125" width="0.0209%" height="15" fill="rgb(216,164,2)" fg:x="1512" fg:w="22"/><text x="1.6894%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (101 samples, 0.10%)</title><rect x="1.3737%" y="1141" width="0.0962%" height="15" fill="rgb(220,129,5)" fg:x="1443" fg:w="101"/><text x="1.6237%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (31 samples, 0.03%)</title><rect x="1.4699%" y="1141" width="0.0295%" height="15" fill="rgb(242,17,10)" fg:x="1544" fg:w="31"/><text x="1.7199%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (36 samples, 0.03%)</title><rect x="1.4994%" y="1141" width="0.0343%" height="15" fill="rgb(242,107,0)" fg:x="1575" fg:w="36"/><text x="1.7494%" y="1151.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="1.5994%" y="1125" width="0.0124%" height="15" fill="rgb(251,28,31)" fg:x="1680" fg:w="13"/><text x="1.8494%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="1.5994%" y="1109" width="0.0124%" height="15" fill="rgb(233,223,10)" fg:x="1680" fg:w="13"/><text x="1.8494%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (13 samples, 0.01%)</title><rect x="1.5994%" y="1093" width="0.0124%" height="15" fill="rgb(215,21,27)" fg:x="1680" fg:w="13"/><text x="1.8494%" y="1103.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="1.5994%" y="1077" width="0.0124%" height="15" fill="rgb(232,23,21)" fg:x="1680" fg:w="13"/><text x="1.8494%" y="1087.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (17 samples, 0.02%)</title><rect x="1.6118%" y="1125" width="0.0162%" height="15" fill="rgb(244,5,23)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (17 samples, 0.02%)</title><rect x="1.6118%" y="1109" width="0.0162%" height="15" fill="rgb(226,81,46)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="1119.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (17 samples, 0.02%)</title><rect x="1.6118%" y="1093" width="0.0162%" height="15" fill="rgb(247,70,30)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (17 samples, 0.02%)</title><rect x="1.6118%" y="1077" width="0.0162%" height="15" fill="rgb(212,68,19)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 0.02%)</title><rect x="1.6118%" y="1061" width="0.0162%" height="15" fill="rgb(240,187,13)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="1.6118%" y="1045" width="0.0162%" height="15" fill="rgb(223,113,26)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="1.6118%" y="1029" width="0.0162%" height="15" fill="rgb(206,192,2)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="1.6118%" y="1013" width="0.0162%" height="15" fill="rgb(241,108,4)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="1.6118%" y="997" width="0.0162%" height="15" fill="rgb(247,173,49)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="1.6118%" y="981" width="0.0162%" height="15" fill="rgb(224,114,35)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="1.6118%" y="965" width="0.0162%" height="15" fill="rgb(245,159,27)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="1.6118%" y="949" width="0.0162%" height="15" fill="rgb(245,172,44)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="1.6118%" y="933" width="0.0162%" height="15" fill="rgb(236,23,11)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="943.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="1.6118%" y="917" width="0.0162%" height="15" fill="rgb(205,117,38)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="927.50"></text></g><g><title>__rg_alloc (17 samples, 0.02%)</title><rect x="1.6118%" y="901" width="0.0162%" height="15" fill="rgb(237,72,25)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.02%)</title><rect x="1.6118%" y="885" width="0.0162%" height="15" fill="rgb(244,70,9)" fg:x="1693" fg:w="17"/><text x="1.8618%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (667 samples, 0.63%)</title><rect x="1.0148%" y="1157" width="0.6350%" height="15" fill="rgb(217,125,39)" fg:x="1066" fg:w="667"/><text x="1.2648%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (122 samples, 0.12%)</title><rect x="1.5337%" y="1141" width="0.1161%" height="15" fill="rgb(235,36,10)" fg:x="1611" fg:w="122"/><text x="1.7837%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (23 samples, 0.02%)</title><rect x="1.6279%" y="1125" width="0.0219%" height="15" fill="rgb(251,123,47)" fg:x="1710" fg:w="23"/><text x="1.8779%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="1.6279%" y="1109" width="0.0219%" height="15" fill="rgb(221,13,13)" fg:x="1710" fg:w="23"/><text x="1.8779%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (24 samples, 0.02%)</title><rect x="1.7565%" y="1141" width="0.0228%" height="15" fill="rgb(238,131,9)" fg:x="1845" fg:w="24"/><text x="2.0065%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (24 samples, 0.02%)</title><rect x="1.7565%" y="1125" width="0.0228%" height="15" fill="rgb(211,50,8)" fg:x="1845" fg:w="24"/><text x="2.0065%" y="1135.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="1.7565%" y="1109" width="0.0228%" height="15" fill="rgb(245,182,24)" fg:x="1845" fg:w="24"/><text x="2.0065%" y="1119.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (24 samples, 0.02%)</title><rect x="1.7565%" y="1093" width="0.0228%" height="15" fill="rgb(242,14,37)" fg:x="1845" fg:w="24"/><text x="2.0065%" y="1103.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (24 samples, 0.02%)</title><rect x="1.7565%" y="1077" width="0.0228%" height="15" fill="rgb(246,228,12)" fg:x="1845" fg:w="24"/><text x="2.0065%" y="1087.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (160 samples, 0.15%)</title><rect x="1.6498%" y="1157" width="0.1523%" height="15" fill="rgb(213,55,15)" fg:x="1733" fg:w="160"/><text x="1.8998%" y="1167.50"></text></g><g><title>event_listener::Inner::lock (24 samples, 0.02%)</title><rect x="1.7793%" y="1141" width="0.0228%" height="15" fill="rgb(209,9,3)" fg:x="1869" fg:w="24"/><text x="2.0293%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="1.7793%" y="1125" width="0.0228%" height="15" fill="rgb(230,59,30)" fg:x="1869" fg:w="24"/><text x="2.0293%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.02%)</title><rect x="1.7793%" y="1109" width="0.0228%" height="15" fill="rgb(209,121,21)" fg:x="1869" fg:w="24"/><text x="2.0293%" y="1119.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (24 samples, 0.02%)</title><rect x="1.7793%" y="1093" width="0.0228%" height="15" fill="rgb(220,109,13)" fg:x="1869" fg:w="24"/><text x="2.0293%" y="1103.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (15 samples, 0.01%)</title><rect x="1.8193%" y="1125" width="0.0143%" height="15" fill="rgb(232,18,1)" fg:x="1911" fg:w="15"/><text x="2.0693%" y="1135.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="1.8107%" y="1157" width="0.0276%" height="15" fill="rgb(215,41,42)" fg:x="1902" fg:w="29"/><text x="2.0607%" y="1167.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (24 samples, 0.02%)</title><rect x="1.8155%" y="1141" width="0.0228%" height="15" fill="rgb(224,123,36)" fg:x="1907" fg:w="24"/><text x="2.0655%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (55 samples, 0.05%)</title><rect x="1.8383%" y="1157" width="0.0524%" height="15" fill="rgb(240,125,3)" fg:x="1931" fg:w="55"/><text x="2.0883%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (168 samples, 0.16%)</title><rect x="1.8907%" y="1157" width="0.1599%" height="15" fill="rgb(205,98,50)" fg:x="1986" fg:w="168"/><text x="2.1407%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (98 samples, 0.09%)</title><rect x="1.9573%" y="1141" width="0.0933%" height="15" fill="rgb(205,185,37)" fg:x="2056" fg:w="98"/><text x="2.2073%" y="1151.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (82 samples, 0.08%)</title><rect x="1.9726%" y="1125" width="0.0781%" height="15" fill="rgb(238,207,15)" fg:x="2072" fg:w="82"/><text x="2.2226%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (23 samples, 0.02%)</title><rect x="2.0287%" y="1109" width="0.0219%" height="15" fill="rgb(213,199,42)" fg:x="2131" fg:w="23"/><text x="2.2787%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (18 samples, 0.02%)</title><rect x="2.0335%" y="1093" width="0.0171%" height="15" fill="rgb(235,201,11)" fg:x="2136" fg:w="18"/><text x="2.2835%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="2.0335%" y="1077" width="0.0171%" height="15" fill="rgb(207,46,11)" fg:x="2136" fg:w="18"/><text x="2.2835%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (18 samples, 0.02%)</title><rect x="2.0335%" y="1061" width="0.0171%" height="15" fill="rgb(241,35,35)" fg:x="2136" fg:w="18"/><text x="2.2835%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="2.0335%" y="1045" width="0.0171%" height="15" fill="rgb(243,32,47)" fg:x="2136" fg:w="18"/><text x="2.2835%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="2.0335%" y="1029" width="0.0171%" height="15" fill="rgb(247,202,23)" fg:x="2136" fg:w="18"/><text x="2.2835%" y="1039.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="2.0335%" y="1013" width="0.0171%" height="15" fill="rgb(219,102,11)" fg:x="2136" fg:w="18"/><text x="2.2835%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="2.0335%" y="997" width="0.0171%" height="15" fill="rgb(243,110,44)" fg:x="2136" fg:w="18"/><text x="2.2835%" y="1007.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="2.0506%" y="1157" width="0.0209%" height="15" fill="rgb(222,74,54)" fg:x="2154" fg:w="22"/><text x="2.3006%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="2.0573%" y="1141" width="0.0143%" height="15" fill="rgb(216,99,12)" fg:x="2161" fg:w="15"/><text x="2.3073%" y="1151.50"></text></g><g><title>__GI___lll_lock_wake (13 samples, 0.01%)</title><rect x="2.0735%" y="1157" width="0.0124%" height="15" fill="rgb(226,22,26)" fg:x="2178" fg:w="13"/><text x="2.3235%" y="1167.50"></text></g><g><title>___pthread_mutex_lock (24 samples, 0.02%)</title><rect x="2.1087%" y="1157" width="0.0228%" height="15" fill="rgb(217,163,10)" fg:x="2215" fg:w="24"/><text x="2.3587%" y="1167.50"></text></g><g><title>__clock_gettime_2 (31 samples, 0.03%)</title><rect x="2.1354%" y="1157" width="0.0295%" height="15" fill="rgb(213,25,53)" fg:x="2243" fg:w="31"/><text x="2.3854%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (25 samples, 0.02%)</title><rect x="2.1658%" y="1157" width="0.0238%" height="15" fill="rgb(252,105,26)" fg:x="2275" fg:w="25"/><text x="2.4158%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (18 samples, 0.02%)</title><rect x="2.1915%" y="1157" width="0.0171%" height="15" fill="rgb(220,39,43)" fg:x="2302" fg:w="18"/><text x="2.4415%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (68 samples, 0.06%)</title><rect x="2.2087%" y="1157" width="0.0647%" height="15" fill="rgb(229,68,48)" fg:x="2320" fg:w="68"/><text x="2.4587%" y="1167.50"></text></g><g><title>async_executor::steal (30 samples, 0.03%)</title><rect x="2.3067%" y="1157" width="0.0286%" height="15" fill="rgb(252,8,32)" fg:x="2423" fg:w="30"/><text x="2.5567%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (17 samples, 0.02%)</title><rect x="2.3381%" y="1157" width="0.0162%" height="15" fill="rgb(223,20,43)" fg:x="2456" fg:w="17"/><text x="2.5881%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (120 samples, 0.11%)</title><rect x="2.3553%" y="1157" width="0.1142%" height="15" fill="rgb(229,81,49)" fg:x="2474" fg:w="120"/><text x="2.6053%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (54 samples, 0.05%)</title><rect x="2.4695%" y="1157" width="0.0514%" height="15" fill="rgb(236,28,36)" fg:x="2594" fg:w="54"/><text x="2.7195%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (135 samples, 0.13%)</title><rect x="2.5209%" y="1157" width="0.1285%" height="15" fill="rgb(249,185,26)" fg:x="2648" fg:w="135"/><text x="2.7709%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (54 samples, 0.05%)</title><rect x="2.6494%" y="1157" width="0.0514%" height="15" fill="rgb(249,174,33)" fg:x="2783" fg:w="54"/><text x="2.8994%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (67 samples, 0.06%)</title><rect x="2.7056%" y="1157" width="0.0638%" height="15" fill="rgb(233,201,37)" fg:x="2842" fg:w="67"/><text x="2.9556%" y="1167.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="2.7437%" y="1141" width="0.0257%" height="15" fill="rgb(221,78,26)" fg:x="2882" fg:w="27"/><text x="2.9937%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="2.7770%" y="1157" width="0.0114%" height="15" fill="rgb(250,127,30)" fg:x="2917" fg:w="12"/><text x="3.0270%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (67 samples, 0.06%)</title><rect x="2.7884%" y="1157" width="0.0638%" height="15" fill="rgb(230,49,44)" fg:x="2929" fg:w="67"/><text x="3.0384%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (67 samples, 0.06%)</title><rect x="2.7884%" y="1141" width="0.0638%" height="15" fill="rgb(229,67,23)" fg:x="2929" fg:w="67"/><text x="3.0384%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="2.8522%" y="1157" width="0.0228%" height="15" fill="rgb(249,83,47)" fg:x="2996" fg:w="24"/><text x="3.1022%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="2.8636%" y="1141" width="0.0114%" height="15" fill="rgb(215,43,3)" fg:x="3008" fg:w="12"/><text x="3.1136%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="2.8751%" y="1157" width="0.0181%" height="15" fill="rgb(238,154,13)" fg:x="3020" fg:w="19"/><text x="3.1251%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="2.8932%" y="1157" width="0.0114%" height="15" fill="rgb(219,56,2)" fg:x="3039" fg:w="12"/><text x="3.1432%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (44 samples, 0.04%)</title><rect x="2.9046%" y="1157" width="0.0419%" height="15" fill="rgb(233,0,4)" fg:x="3051" fg:w="44"/><text x="3.1546%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="2.9465%" y="1157" width="0.0162%" height="15" fill="rgb(235,30,7)" fg:x="3095" fg:w="17"/><text x="3.1965%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (16 samples, 0.02%)</title><rect x="2.9474%" y="1141" width="0.0152%" height="15" fill="rgb(250,79,13)" fg:x="3096" fg:w="16"/><text x="3.1974%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="2.9627%" y="1157" width="0.0143%" height="15" fill="rgb(211,146,34)" fg:x="3112" fg:w="15"/><text x="3.2127%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (98 samples, 0.09%)</title><rect x="2.9769%" y="1157" width="0.0933%" height="15" fill="rgb(228,22,38)" fg:x="3127" fg:w="98"/><text x="3.2269%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="3.1131%" y="1109" width="0.0133%" height="15" fill="rgb(235,168,5)" fg:x="3270" fg:w="14"/><text x="3.3631%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (14 samples, 0.01%)</title><rect x="3.1131%" y="1093" width="0.0133%" height="15" fill="rgb(221,155,16)" fg:x="3270" fg:w="14"/><text x="3.3631%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="3.1131%" y="1077" width="0.0133%" height="15" fill="rgb(215,215,53)" fg:x="3270" fg:w="14"/><text x="3.3631%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="3.1131%" y="1061" width="0.0133%" height="15" fill="rgb(223,4,10)" fg:x="3270" fg:w="14"/><text x="3.3631%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (27 samples, 0.03%)</title><rect x="3.1131%" y="1125" width="0.0257%" height="15" fill="rgb(234,103,6)" fg:x="3270" fg:w="27"/><text x="3.3631%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="3.1264%" y="1109" width="0.0124%" height="15" fill="rgb(227,97,0)" fg:x="3284" fg:w="13"/><text x="3.3764%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="3.1264%" y="1093" width="0.0124%" height="15" fill="rgb(234,150,53)" fg:x="3284" fg:w="13"/><text x="3.3764%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="3.1264%" y="1077" width="0.0124%" height="15" fill="rgb(228,201,54)" fg:x="3284" fg:w="13"/><text x="3.3764%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="3.1264%" y="1061" width="0.0124%" height="15" fill="rgb(222,22,37)" fg:x="3284" fg:w="13"/><text x="3.3764%" y="1071.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="3.1264%" y="1045" width="0.0124%" height="15" fill="rgb(237,53,32)" fg:x="3284" fg:w="13"/><text x="3.3764%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="3.1264%" y="1029" width="0.0124%" height="15" fill="rgb(233,25,53)" fg:x="3284" fg:w="13"/><text x="3.3764%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (97 samples, 0.09%)</title><rect x="3.0702%" y="1157" width="0.0923%" height="15" fill="rgb(210,40,34)" fg:x="3225" fg:w="97"/><text x="3.3202%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (52 samples, 0.05%)</title><rect x="3.1131%" y="1141" width="0.0495%" height="15" fill="rgb(241,220,44)" fg:x="3270" fg:w="52"/><text x="3.3631%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (25 samples, 0.02%)</title><rect x="3.1388%" y="1125" width="0.0238%" height="15" fill="rgb(235,28,35)" fg:x="3297" fg:w="25"/><text x="3.3888%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (22 samples, 0.02%)</title><rect x="3.2064%" y="1141" width="0.0209%" height="15" fill="rgb(210,56,17)" fg:x="3368" fg:w="22"/><text x="3.4564%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="3.2064%" y="1125" width="0.0209%" height="15" fill="rgb(224,130,29)" fg:x="3368" fg:w="22"/><text x="3.4564%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="3.2064%" y="1109" width="0.0209%" height="15" fill="rgb(235,212,8)" fg:x="3368" fg:w="22"/><text x="3.4564%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="3.2064%" y="1093" width="0.0209%" height="15" fill="rgb(223,33,50)" fg:x="3368" fg:w="22"/><text x="3.4564%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="3.2064%" y="1077" width="0.0209%" height="15" fill="rgb(219,149,13)" fg:x="3368" fg:w="22"/><text x="3.4564%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="3.2064%" y="1061" width="0.0209%" height="15" fill="rgb(250,156,29)" fg:x="3368" fg:w="22"/><text x="3.4564%" y="1071.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="3.2064%" y="1045" width="0.0209%" height="15" fill="rgb(216,193,19)" fg:x="3368" fg:w="22"/><text x="3.4564%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="3.2064%" y="1029" width="0.0209%" height="15" fill="rgb(216,135,14)" fg:x="3368" fg:w="22"/><text x="3.4564%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (75 samples, 0.07%)</title><rect x="3.1626%" y="1157" width="0.0714%" height="15" fill="rgb(241,47,5)" fg:x="3322" fg:w="75"/><text x="3.4126%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (84 samples, 0.08%)</title><rect x="3.2340%" y="1157" width="0.0800%" height="15" fill="rgb(233,42,35)" fg:x="3397" fg:w="84"/><text x="3.4840%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="3.2949%" y="1141" width="0.0190%" height="15" fill="rgb(231,13,6)" fg:x="3461" fg:w="20"/><text x="3.5449%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (20 samples, 0.02%)</title><rect x="3.2949%" y="1125" width="0.0190%" height="15" fill="rgb(207,181,40)" fg:x="3461" fg:w="20"/><text x="3.5449%" y="1135.50"></text></g><g><title>event_listener::Event::notify (249 samples, 0.24%)</title><rect x="3.3225%" y="1157" width="0.2371%" height="15" fill="rgb(254,173,49)" fg:x="3490" fg:w="249"/><text x="3.5725%" y="1167.50"></text></g><g><title>event_listener::full_fence (126 samples, 0.12%)</title><rect x="3.4396%" y="1141" width="0.1200%" height="15" fill="rgb(221,1,38)" fg:x="3613" fg:w="126"/><text x="3.6896%" y="1151.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (62 samples, 0.06%)</title><rect x="3.5691%" y="1157" width="0.0590%" height="15" fill="rgb(206,124,46)" fg:x="3749" fg:w="62"/><text x="3.8191%" y="1167.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (11 samples, 0.01%)</title><rect x="3.6176%" y="1141" width="0.0105%" height="15" fill="rgb(249,21,11)" fg:x="3800" fg:w="11"/><text x="3.8676%" y="1151.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (11 samples, 0.01%)</title><rect x="3.6176%" y="1125" width="0.0105%" height="15" fill="rgb(222,201,40)" fg:x="3800" fg:w="11"/><text x="3.8676%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.01%)</title><rect x="3.6176%" y="1109" width="0.0105%" height="15" fill="rgb(235,61,29)" fg:x="3800" fg:w="11"/><text x="3.8676%" y="1119.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (11 samples, 0.01%)</title><rect x="3.6176%" y="1093" width="0.0105%" height="15" fill="rgb(219,207,3)" fg:x="3800" fg:w="11"/><text x="3.8676%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.01%)</title><rect x="3.6176%" y="1077" width="0.0105%" height="15" fill="rgb(222,56,46)" fg:x="3800" fg:w="11"/><text x="3.8676%" y="1087.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (11 samples, 0.01%)</title><rect x="3.6176%" y="1061" width="0.0105%" height="15" fill="rgb(239,76,54)" fg:x="3800" fg:w="11"/><text x="3.8676%" y="1071.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (11 samples, 0.01%)</title><rect x="3.6176%" y="1045" width="0.0105%" height="15" fill="rgb(231,124,27)" fg:x="3800" fg:w="11"/><text x="3.8676%" y="1055.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (28 samples, 0.03%)</title><rect x="3.6281%" y="1157" width="0.0267%" height="15" fill="rgb(249,195,6)" fg:x="3811" fg:w="28"/><text x="3.8781%" y="1167.50"></text></g><g><title>parking::Inner::park (19 samples, 0.02%)</title><rect x="3.6548%" y="1157" width="0.0181%" height="15" fill="rgb(237,174,47)" fg:x="3839" fg:w="19"/><text x="3.9048%" y="1167.50"></text></g><g><title>rust_alloc (63 samples, 0.06%)</title><rect x="3.6862%" y="1157" width="0.0600%" height="15" fill="rgb(206,201,31)" fg:x="3872" fg:w="63"/><text x="3.9362%" y="1167.50"></text></g><g><title>rust_dealloc (16 samples, 0.02%)</title><rect x="3.7462%" y="1157" width="0.0152%" height="15" fill="rgb(231,57,52)" fg:x="3935" fg:w="16"/><text x="3.9962%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (13 samples, 0.01%)</title><rect x="3.7490%" y="1141" width="0.0124%" height="15" fill="rgb(248,177,22)" fg:x="3938" fg:w="13"/><text x="3.9990%" y="1151.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (13 samples, 0.01%)</title><rect x="3.7490%" y="1125" width="0.0124%" height="15" fill="rgb(215,211,37)" fg:x="3938" fg:w="13"/><text x="3.9990%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (13 samples, 0.01%)</title><rect x="3.7490%" y="1109" width="0.0124%" height="15" fill="rgb(241,128,51)" fg:x="3938" fg:w="13"/><text x="3.9990%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (13 samples, 0.01%)</title><rect x="3.7490%" y="1093" width="0.0124%" height="15" fill="rgb(227,165,31)" fg:x="3938" fg:w="13"/><text x="3.9990%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (13 samples, 0.01%)</title><rect x="3.7490%" y="1077" width="0.0124%" height="15" fill="rgb(228,167,24)" fg:x="3938" fg:w="13"/><text x="3.9990%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="3.7490%" y="1061" width="0.0124%" height="15" fill="rgb(228,143,12)" fg:x="3938" fg:w="13"/><text x="3.9990%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="3.7490%" y="1045" width="0.0124%" height="15" fill="rgb(249,149,8)" fg:x="3938" fg:w="13"/><text x="3.9990%" y="1055.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="3.7490%" y="1029" width="0.0124%" height="15" fill="rgb(243,35,44)" fg:x="3938" fg:w="13"/><text x="3.9990%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (18 samples, 0.02%)</title><rect x="3.7804%" y="1157" width="0.0171%" height="15" fill="rgb(246,89,9)" fg:x="3971" fg:w="18"/><text x="4.0304%" y="1167.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (51 samples, 0.05%)</title><rect x="3.7985%" y="1157" width="0.0486%" height="15" fill="rgb(233,213,13)" fg:x="3990" fg:w="51"/><text x="4.0485%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (21 samples, 0.02%)</title><rect x="3.8471%" y="1157" width="0.0200%" height="15" fill="rgb(233,141,41)" fg:x="4041" fg:w="21"/><text x="4.0971%" y="1167.50"></text></g><g><title>tremor_common::time::nanotime (74 samples, 0.07%)</title><rect x="3.8671%" y="1157" width="0.0704%" height="15" fill="rgb(239,167,4)" fg:x="4062" fg:w="74"/><text x="4.1171%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (73 samples, 0.07%)</title><rect x="3.8680%" y="1141" width="0.0695%" height="15" fill="rgb(209,217,16)" fg:x="4063" fg:w="73"/><text x="4.1180%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (73 samples, 0.07%)</title><rect x="3.8680%" y="1125" width="0.0695%" height="15" fill="rgb(219,88,35)" fg:x="4063" fg:w="73"/><text x="4.1180%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (73 samples, 0.07%)</title><rect x="3.8680%" y="1109" width="0.0695%" height="15" fill="rgb(220,193,23)" fg:x="4063" fg:w="73"/><text x="4.1180%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (29 samples, 0.03%)</title><rect x="3.9375%" y="1157" width="0.0276%" height="15" fill="rgb(230,90,52)" fg:x="4136" fg:w="29"/><text x="4.1875%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="4.0451%" y="1141" width="0.0105%" height="15" fill="rgb(252,106,19)" fg:x="4249" fg:w="11"/><text x="4.2951%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (23 samples, 0.02%)</title><rect x="4.0556%" y="1141" width="0.0219%" height="15" fill="rgb(206,74,20)" fg:x="4260" fg:w="23"/><text x="4.3056%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (23 samples, 0.02%)</title><rect x="4.0556%" y="1125" width="0.0219%" height="15" fill="rgb(230,138,44)" fg:x="4260" fg:w="23"/><text x="4.3056%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="4.0651%" y="1109" width="0.0124%" height="15" fill="rgb(235,182,43)" fg:x="4270" fg:w="13"/><text x="4.3151%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="4.0651%" y="1093" width="0.0124%" height="15" fill="rgb(242,16,51)" fg:x="4270" fg:w="13"/><text x="4.3151%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="4.0651%" y="1077" width="0.0124%" height="15" fill="rgb(248,9,4)" fg:x="4270" fg:w="13"/><text x="4.3151%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="4.0651%" y="1061" width="0.0124%" height="15" fill="rgb(210,31,22)" fg:x="4270" fg:w="13"/><text x="4.3151%" y="1071.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="4.0651%" y="1045" width="0.0124%" height="15" fill="rgb(239,54,39)" fg:x="4270" fg:w="13"/><text x="4.3151%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="4.0651%" y="1029" width="0.0124%" height="15" fill="rgb(230,99,41)" fg:x="4270" fg:w="13"/><text x="4.3151%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="4.0870%" y="1141" width="0.0181%" height="15" fill="rgb(253,106,12)" fg:x="4293" fg:w="19"/><text x="4.3370%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (19 samples, 0.02%)</title><rect x="4.0870%" y="1125" width="0.0181%" height="15" fill="rgb(213,46,41)" fg:x="4293" fg:w="19"/><text x="4.3370%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (168 samples, 0.16%)</title><rect x="3.9651%" y="1157" width="0.1599%" height="15" fill="rgb(215,133,35)" fg:x="4165" fg:w="168"/><text x="4.2151%" y="1167.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (21 samples, 0.02%)</title><rect x="4.1051%" y="1141" width="0.0200%" height="15" fill="rgb(213,28,5)" fg:x="4312" fg:w="21"/><text x="4.3551%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (13 samples, 0.01%)</title><rect x="4.1127%" y="1125" width="0.0124%" height="15" fill="rgb(215,77,49)" fg:x="4320" fg:w="13"/><text x="4.3627%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="4.1127%" y="1109" width="0.0124%" height="15" fill="rgb(248,100,22)" fg:x="4320" fg:w="13"/><text x="4.3627%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="4.1127%" y="1093" width="0.0124%" height="15" fill="rgb(208,67,9)" fg:x="4320" fg:w="13"/><text x="4.3627%" y="1103.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="4.1127%" y="1077" width="0.0124%" height="15" fill="rgb(219,133,21)" fg:x="4320" fg:w="13"/><text x="4.3627%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="4.1127%" y="1061" width="0.0124%" height="15" fill="rgb(246,46,29)" fg:x="4320" fg:w="13"/><text x="4.3627%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (76 samples, 0.07%)</title><rect x="4.1460%" y="1141" width="0.0724%" height="15" fill="rgb(246,185,52)" fg:x="4355" fg:w="76"/><text x="4.3960%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (63 samples, 0.06%)</title><rect x="4.1584%" y="1125" width="0.0600%" height="15" fill="rgb(252,136,11)" fg:x="4368" fg:w="63"/><text x="4.4084%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (15 samples, 0.01%)</title><rect x="4.2041%" y="1109" width="0.0143%" height="15" fill="rgb(219,138,53)" fg:x="4416" fg:w="15"/><text x="4.4541%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.01%)</title><rect x="4.2041%" y="1093" width="0.0143%" height="15" fill="rgb(211,51,23)" fg:x="4416" fg:w="15"/><text x="4.4541%" y="1103.50"></text></g><g><title>value_trait::Builder::object (15 samples, 0.01%)</title><rect x="4.2041%" y="1077" width="0.0143%" height="15" fill="rgb(247,221,28)" fg:x="4416" fg:w="15"/><text x="4.4541%" y="1087.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (15 samples, 0.01%)</title><rect x="4.2041%" y="1061" width="0.0143%" height="15" fill="rgb(251,222,45)" fg:x="4416" fg:w="15"/><text x="4.4541%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="4.2041%" y="1045" width="0.0143%" height="15" fill="rgb(217,162,53)" fg:x="4416" fg:w="15"/><text x="4.4541%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="4.2041%" y="1029" width="0.0143%" height="15" fill="rgb(229,93,14)" fg:x="4416" fg:w="15"/><text x="4.4541%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="4.2041%" y="1013" width="0.0143%" height="15" fill="rgb(209,67,49)" fg:x="4416" fg:w="15"/><text x="4.4541%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="4.2041%" y="997" width="0.0143%" height="15" fill="rgb(213,87,29)" fg:x="4416" fg:w="15"/><text x="4.4541%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="4.2041%" y="981" width="0.0143%" height="15" fill="rgb(205,151,52)" fg:x="4416" fg:w="15"/><text x="4.4541%" y="991.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="4.2041%" y="965" width="0.0143%" height="15" fill="rgb(253,215,39)" fg:x="4416" fg:w="15"/><text x="4.4541%" y="975.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="4.2041%" y="949" width="0.0143%" height="15" fill="rgb(221,220,41)" fg:x="4416" fg:w="15"/><text x="4.4541%" y="959.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="4.2184%" y="1141" width="0.0105%" height="15" fill="rgb(218,133,21)" fg:x="4431" fg:w="11"/><text x="4.4684%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (131 samples, 0.12%)</title><rect x="4.1251%" y="1157" width="0.1247%" height="15" fill="rgb(221,193,43)" fg:x="4333" fg:w="131"/><text x="4.3751%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="4.2374%" y="1141" width="0.0124%" height="15" fill="rgb(240,128,52)" fg:x="4451" fg:w="13"/><text x="4.4874%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (13 samples, 0.01%)</title><rect x="4.2374%" y="1125" width="0.0124%" height="15" fill="rgb(253,114,12)" fg:x="4451" fg:w="13"/><text x="4.4874%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (36 samples, 0.03%)</title><rect x="4.2498%" y="1157" width="0.0343%" height="15" fill="rgb(215,223,47)" fg:x="4464" fg:w="36"/><text x="4.4998%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (11 samples, 0.01%)</title><rect x="4.2926%" y="1157" width="0.0105%" height="15" fill="rgb(248,225,23)" fg:x="4509" fg:w="11"/><text x="4.5426%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (22 samples, 0.02%)</title><rect x="4.3031%" y="1157" width="0.0209%" height="15" fill="rgb(250,108,0)" fg:x="4520" fg:w="22"/><text x="4.5531%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (24 samples, 0.02%)</title><rect x="4.3240%" y="1157" width="0.0228%" height="15" fill="rgb(228,208,7)" fg:x="4542" fg:w="24"/><text x="4.5740%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="4.4154%" y="1141" width="0.0105%" height="15" fill="rgb(244,45,10)" fg:x="4638" fg:w="11"/><text x="4.6654%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.01%)</title><rect x="4.4402%" y="1109" width="0.0133%" height="15" fill="rgb(207,125,25)" fg:x="4664" fg:w="14"/><text x="4.6902%" y="1119.50"></text></g><g><title>core::ptr::write (14 samples, 0.01%)</title><rect x="4.4402%" y="1093" width="0.0133%" height="15" fill="rgb(210,195,18)" fg:x="4664" fg:w="14"/><text x="4.6902%" y="1103.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (12 samples, 0.01%)</title><rect x="4.4535%" y="1109" width="0.0114%" height="15" fill="rgb(249,80,12)" fg:x="4678" fg:w="12"/><text x="4.7035%" y="1119.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (12 samples, 0.01%)</title><rect x="4.4535%" y="1093" width="0.0114%" height="15" fill="rgb(221,65,9)" fg:x="4678" fg:w="12"/><text x="4.7035%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.01%)</title><rect x="4.4535%" y="1077" width="0.0114%" height="15" fill="rgb(235,49,36)" fg:x="4678" fg:w="12"/><text x="4.7035%" y="1087.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (12 samples, 0.01%)</title><rect x="4.4535%" y="1061" width="0.0114%" height="15" fill="rgb(225,32,20)" fg:x="4678" fg:w="12"/><text x="4.7035%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.01%)</title><rect x="4.4535%" y="1045" width="0.0114%" height="15" fill="rgb(215,141,46)" fg:x="4678" fg:w="12"/><text x="4.7035%" y="1055.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (12 samples, 0.01%)</title><rect x="4.4535%" y="1029" width="0.0114%" height="15" fill="rgb(250,160,47)" fg:x="4678" fg:w="12"/><text x="4.7035%" y="1039.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (12 samples, 0.01%)</title><rect x="4.4535%" y="1013" width="0.0114%" height="15" fill="rgb(216,222,40)" fg:x="4678" fg:w="12"/><text x="4.7035%" y="1023.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (126 samples, 0.12%)</title><rect x="4.3469%" y="1157" width="0.1200%" height="15" fill="rgb(234,217,39)" fg:x="4566" fg:w="126"/><text x="4.5969%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.04%)</title><rect x="4.4259%" y="1141" width="0.0409%" height="15" fill="rgb(207,178,40)" fg:x="4649" fg:w="43"/><text x="4.6759%" y="1151.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (43 samples, 0.04%)</title><rect x="4.4259%" y="1125" width="0.0409%" height="15" fill="rgb(221,136,13)" fg:x="4649" fg:w="43"/><text x="4.6759%" y="1135.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (71 samples, 0.07%)</title><rect x="4.4668%" y="1157" width="0.0676%" height="15" fill="rgb(249,199,10)" fg:x="4692" fg:w="71"/><text x="4.7168%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="4.5239%" y="1141" width="0.0105%" height="15" fill="rgb(249,222,13)" fg:x="4752" fg:w="11"/><text x="4.7739%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="4.5239%" y="1125" width="0.0105%" height="15" fill="rgb(244,185,38)" fg:x="4752" fg:w="11"/><text x="4.7739%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="4.5239%" y="1109" width="0.0105%" height="15" fill="rgb(236,202,9)" fg:x="4752" fg:w="11"/><text x="4.7739%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="4.5239%" y="1093" width="0.0105%" height="15" fill="rgb(250,229,37)" fg:x="4752" fg:w="11"/><text x="4.7739%" y="1103.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="4.5239%" y="1077" width="0.0105%" height="15" fill="rgb(206,174,23)" fg:x="4752" fg:w="11"/><text x="4.7739%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="4.5239%" y="1061" width="0.0105%" height="15" fill="rgb(211,33,43)" fg:x="4752" fg:w="11"/><text x="4.7739%" y="1071.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (40 samples, 0.04%)</title><rect x="4.5344%" y="1157" width="0.0381%" height="15" fill="rgb(245,58,50)" fg:x="4763" fg:w="40"/><text x="4.7844%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="4.6087%" y="1141" width="0.0143%" height="15" fill="rgb(244,68,36)" fg:x="4841" fg:w="15"/><text x="4.8587%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="4.6087%" y="1125" width="0.0143%" height="15" fill="rgb(232,229,15)" fg:x="4841" fg:w="15"/><text x="4.8587%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="4.6087%" y="1109" width="0.0143%" height="15" fill="rgb(254,30,23)" fg:x="4841" fg:w="15"/><text x="4.8587%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="4.6087%" y="1093" width="0.0143%" height="15" fill="rgb(235,160,14)" fg:x="4841" fg:w="15"/><text x="4.8587%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="4.6087%" y="1077" width="0.0143%" height="15" fill="rgb(212,155,44)" fg:x="4841" fg:w="15"/><text x="4.8587%" y="1087.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="4.6087%" y="1061" width="0.0143%" height="15" fill="rgb(226,2,50)" fg:x="4841" fg:w="15"/><text x="4.8587%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="4.6087%" y="1045" width="0.0143%" height="15" fill="rgb(234,177,6)" fg:x="4841" fg:w="15"/><text x="4.8587%" y="1055.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (77 samples, 0.07%)</title><rect x="4.5725%" y="1157" width="0.0733%" height="15" fill="rgb(217,24,9)" fg:x="4803" fg:w="77"/><text x="4.8225%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (24 samples, 0.02%)</title><rect x="4.6230%" y="1141" width="0.0228%" height="15" fill="rgb(220,13,46)" fg:x="4856" fg:w="24"/><text x="4.8730%" y="1151.50"></text></g><g><title>[anon] (4,226 samples, 4.02%)</title><rect x="0.6321%" y="1173" width="4.0232%" height="15" fill="rgb(239,221,27)" fg:x="664" fg:w="4226"/><text x="0.8821%" y="1183.50">[ano..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (20 samples, 0.02%)</title><rect x="4.6591%" y="1157" width="0.0190%" height="15" fill="rgb(222,198,25)" fg:x="4894" fg:w="20"/><text x="4.9091%" y="1167.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="4.6553%" y="1173" width="0.0257%" height="15" fill="rgb(211,99,13)" fg:x="4890" fg:w="27"/><text x="4.9053%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (62 samples, 0.06%)</title><rect x="4.6848%" y="1157" width="0.0590%" height="15" fill="rgb(232,111,31)" fg:x="4921" fg:w="62"/><text x="4.9348%" y="1167.50"></text></g><g><title>[tremor-connectors-copy-laptop] (71 samples, 0.07%)</title><rect x="4.6810%" y="1173" width="0.0676%" height="15" fill="rgb(245,82,37)" fg:x="4917" fg:w="71"/><text x="4.9310%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="4.7486%" y="1157" width="0.0314%" height="15" fill="rgb(227,149,46)" fg:x="4988" fg:w="33"/><text x="4.9986%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.02%)</title><rect x="4.8829%" y="1013" width="0.0238%" height="15" fill="rgb(218,36,50)" fg:x="5129" fg:w="25"/><text x="5.1329%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.02%)</title><rect x="4.8829%" y="997" width="0.0238%" height="15" fill="rgb(226,80,48)" fg:x="5129" fg:w="25"/><text x="5.1329%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 0.02%)</title><rect x="4.8829%" y="981" width="0.0238%" height="15" fill="rgb(238,224,15)" fg:x="5129" fg:w="25"/><text x="5.1329%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.02%)</title><rect x="4.8829%" y="965" width="0.0238%" height="15" fill="rgb(241,136,10)" fg:x="5129" fg:w="25"/><text x="5.1329%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.02%)</title><rect x="4.8829%" y="949" width="0.0238%" height="15" fill="rgb(208,32,45)" fg:x="5129" fg:w="25"/><text x="5.1329%" y="959.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.02%)</title><rect x="4.8829%" y="933" width="0.0238%" height="15" fill="rgb(207,135,9)" fg:x="5129" fg:w="25"/><text x="5.1329%" y="943.50"></text></g><g><title>__rg_alloc (25 samples, 0.02%)</title><rect x="4.8829%" y="917" width="0.0238%" height="15" fill="rgb(206,86,44)" fg:x="5129" fg:w="25"/><text x="5.1329%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (25 samples, 0.02%)</title><rect x="4.8829%" y="901" width="0.0238%" height="15" fill="rgb(245,177,15)" fg:x="5129" fg:w="25"/><text x="5.1329%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="4.8829%" y="1093" width="0.0486%" height="15" fill="rgb(206,64,50)" fg:x="5129" fg:w="51"/><text x="5.1329%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="4.8829%" y="1077" width="0.0486%" height="15" fill="rgb(234,36,40)" fg:x="5129" fg:w="51"/><text x="5.1329%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (51 samples, 0.05%)</title><rect x="4.8829%" y="1061" width="0.0486%" height="15" fill="rgb(213,64,8)" fg:x="5129" fg:w="51"/><text x="5.1329%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (51 samples, 0.05%)</title><rect x="4.8829%" y="1045" width="0.0486%" height="15" fill="rgb(210,75,36)" fg:x="5129" fg:w="51"/><text x="5.1329%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (51 samples, 0.05%)</title><rect x="4.8829%" y="1029" width="0.0486%" height="15" fill="rgb(229,88,21)" fg:x="5129" fg:w="51"/><text x="5.1329%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (26 samples, 0.02%)</title><rect x="4.9067%" y="1013" width="0.0248%" height="15" fill="rgb(252,204,47)" fg:x="5154" fg:w="26"/><text x="5.1567%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.02%)</title><rect x="4.9067%" y="997" width="0.0248%" height="15" fill="rgb(208,77,27)" fg:x="5154" fg:w="26"/><text x="5.1567%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (183 samples, 0.17%)</title><rect x="4.7800%" y="1157" width="0.1742%" height="15" fill="rgb(221,76,26)" fg:x="5021" fg:w="183"/><text x="5.0300%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (75 samples, 0.07%)</title><rect x="4.8829%" y="1141" width="0.0714%" height="15" fill="rgb(225,139,18)" fg:x="5129" fg:w="75"/><text x="5.1329%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (75 samples, 0.07%)</title><rect x="4.8829%" y="1125" width="0.0714%" height="15" fill="rgb(230,137,11)" fg:x="5129" fg:w="75"/><text x="5.1329%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (75 samples, 0.07%)</title><rect x="4.8829%" y="1109" width="0.0714%" height="15" fill="rgb(212,28,1)" fg:x="5129" fg:w="75"/><text x="5.1329%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="4.9314%" y="1093" width="0.0228%" height="15" fill="rgb(248,164,17)" fg:x="5180" fg:w="24"/><text x="5.1814%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="4.9314%" y="1077" width="0.0228%" height="15" fill="rgb(222,171,42)" fg:x="5180" fg:w="24"/><text x="5.1814%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.02%)</title><rect x="4.9314%" y="1061" width="0.0228%" height="15" fill="rgb(243,84,45)" fg:x="5180" fg:w="24"/><text x="5.1814%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.02%)</title><rect x="4.9314%" y="1045" width="0.0228%" height="15" fill="rgb(252,49,23)" fg:x="5180" fg:w="24"/><text x="5.1814%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="4.9314%" y="1029" width="0.0228%" height="15" fill="rgb(215,19,7)" fg:x="5180" fg:w="24"/><text x="5.1814%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.02%)</title><rect x="4.9314%" y="1013" width="0.0228%" height="15" fill="rgb(238,81,41)" fg:x="5180" fg:w="24"/><text x="5.1814%" y="1023.50"></text></g><g><title>__rg_alloc (24 samples, 0.02%)</title><rect x="4.9314%" y="997" width="0.0228%" height="15" fill="rgb(210,199,37)" fg:x="5180" fg:w="24"/><text x="5.1814%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (24 samples, 0.02%)</title><rect x="4.9314%" y="981" width="0.0228%" height="15" fill="rgb(244,192,49)" fg:x="5180" fg:w="24"/><text x="5.1814%" y="991.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="4.9543%" y="1157" width="0.0133%" height="15" fill="rgb(226,211,11)" fg:x="5204" fg:w="14"/><text x="5.2043%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (14 samples, 0.01%)</title><rect x="4.9543%" y="1141" width="0.0133%" height="15" fill="rgb(236,162,54)" fg:x="5204" fg:w="14"/><text x="5.2043%" y="1151.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="4.9543%" y="1125" width="0.0133%" height="15" fill="rgb(220,229,9)" fg:x="5204" fg:w="14"/><text x="5.2043%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (14 samples, 0.01%)</title><rect x="4.9543%" y="1109" width="0.0133%" height="15" fill="rgb(250,87,22)" fg:x="5204" fg:w="14"/><text x="5.2043%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="4.9543%" y="1093" width="0.0133%" height="15" fill="rgb(239,43,17)" fg:x="5204" fg:w="14"/><text x="5.2043%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="4.9543%" y="1077" width="0.0133%" height="15" fill="rgb(231,177,25)" fg:x="5204" fg:w="14"/><text x="5.2043%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="4.9543%" y="1061" width="0.0133%" height="15" fill="rgb(219,179,1)" fg:x="5204" fg:w="14"/><text x="5.2043%" y="1071.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="4.9543%" y="1045" width="0.0133%" height="15" fill="rgb(238,219,53)" fg:x="5204" fg:w="14"/><text x="5.2043%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="4.9543%" y="1029" width="0.0133%" height="15" fill="rgb(232,167,36)" fg:x="5204" fg:w="14"/><text x="5.2043%" y="1039.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (171 samples, 0.16%)</title><rect x="4.9676%" y="1157" width="0.1628%" height="15" fill="rgb(244,19,51)" fg:x="5218" fg:w="171"/><text x="5.2176%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (19 samples, 0.02%)</title><rect x="5.1123%" y="1141" width="0.0181%" height="15" fill="rgb(224,6,22)" fg:x="5370" fg:w="19"/><text x="5.3623%" y="1151.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="5.1304%" y="1157" width="0.0219%" height="15" fill="rgb(224,145,5)" fg:x="5389" fg:w="23"/><text x="5.3804%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.02%)</title><rect x="5.3408%" y="1029" width="0.0152%" height="15" fill="rgb(234,130,49)" fg:x="5610" fg:w="16"/><text x="5.5908%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.02%)</title><rect x="5.3408%" y="1013" width="0.0152%" height="15" fill="rgb(254,6,2)" fg:x="5610" fg:w="16"/><text x="5.5908%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.02%)</title><rect x="5.3408%" y="997" width="0.0152%" height="15" fill="rgb(208,96,46)" fg:x="5610" fg:w="16"/><text x="5.5908%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="5.3408%" y="981" width="0.0152%" height="15" fill="rgb(239,3,39)" fg:x="5610" fg:w="16"/><text x="5.5908%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="5.3408%" y="965" width="0.0152%" height="15" fill="rgb(233,210,1)" fg:x="5610" fg:w="16"/><text x="5.5908%" y="975.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="5.3408%" y="949" width="0.0152%" height="15" fill="rgb(244,137,37)" fg:x="5610" fg:w="16"/><text x="5.5908%" y="959.50"></text></g><g><title>__rg_alloc (16 samples, 0.02%)</title><rect x="5.3408%" y="933" width="0.0152%" height="15" fill="rgb(240,136,2)" fg:x="5610" fg:w="16"/><text x="5.5908%" y="943.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.02%)</title><rect x="5.3408%" y="917" width="0.0152%" height="15" fill="rgb(239,18,37)" fg:x="5610" fg:w="16"/><text x="5.5908%" y="927.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (58 samples, 0.06%)</title><rect x="5.3265%" y="1125" width="0.0552%" height="15" fill="rgb(218,185,22)" fg:x="5595" fg:w="58"/><text x="5.5765%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="5.3408%" y="1109" width="0.0409%" height="15" fill="rgb(225,218,4)" fg:x="5610" fg:w="43"/><text x="5.5908%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="5.3408%" y="1093" width="0.0409%" height="15" fill="rgb(230,182,32)" fg:x="5610" fg:w="43"/><text x="5.5908%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43 samples, 0.04%)</title><rect x="5.3408%" y="1077" width="0.0409%" height="15" fill="rgb(242,56,43)" fg:x="5610" fg:w="43"/><text x="5.5908%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (43 samples, 0.04%)</title><rect x="5.3408%" y="1061" width="0.0409%" height="15" fill="rgb(233,99,24)" fg:x="5610" fg:w="43"/><text x="5.5908%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43 samples, 0.04%)</title><rect x="5.3408%" y="1045" width="0.0409%" height="15" fill="rgb(234,209,42)" fg:x="5610" fg:w="43"/><text x="5.5908%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (27 samples, 0.03%)</title><rect x="5.3560%" y="1029" width="0.0257%" height="15" fill="rgb(227,7,12)" fg:x="5626" fg:w="27"/><text x="5.6060%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.03%)</title><rect x="5.3560%" y="1013" width="0.0257%" height="15" fill="rgb(245,203,43)" fg:x="5626" fg:w="27"/><text x="5.6060%" y="1023.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (73 samples, 0.07%)</title><rect x="5.3265%" y="1141" width="0.0695%" height="15" fill="rgb(238,205,33)" fg:x="5595" fg:w="73"/><text x="5.5765%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (15 samples, 0.01%)</title><rect x="5.3817%" y="1125" width="0.0143%" height="15" fill="rgb(231,56,7)" fg:x="5653" fg:w="15"/><text x="5.6317%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="5.3817%" y="1109" width="0.0143%" height="15" fill="rgb(244,186,29)" fg:x="5653" fg:w="15"/><text x="5.6317%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.01%)</title><rect x="5.3817%" y="1093" width="0.0143%" height="15" fill="rgb(234,111,31)" fg:x="5653" fg:w="15"/><text x="5.6317%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.01%)</title><rect x="5.3817%" y="1077" width="0.0143%" height="15" fill="rgb(241,149,10)" fg:x="5653" fg:w="15"/><text x="5.6317%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.01%)</title><rect x="5.3817%" y="1061" width="0.0143%" height="15" fill="rgb(249,206,44)" fg:x="5653" fg:w="15"/><text x="5.6317%" y="1071.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (33 samples, 0.03%)</title><rect x="5.3960%" y="1141" width="0.0314%" height="15" fill="rgb(251,153,30)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3960%" y="1125" width="0.0314%" height="15" fill="rgb(239,152,38)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3960%" y="1109" width="0.0314%" height="15" fill="rgb(249,139,47)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (33 samples, 0.03%)</title><rect x="5.3960%" y="1093" width="0.0314%" height="15" fill="rgb(244,64,35)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (33 samples, 0.03%)</title><rect x="5.3960%" y="1077" width="0.0314%" height="15" fill="rgb(216,46,15)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (33 samples, 0.03%)</title><rect x="5.3960%" y="1061" width="0.0314%" height="15" fill="rgb(250,74,19)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3960%" y="1045" width="0.0314%" height="15" fill="rgb(249,42,33)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3960%" y="1029" width="0.0314%" height="15" fill="rgb(242,149,17)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="1039.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (33 samples, 0.03%)</title><rect x="5.3960%" y="1013" width="0.0314%" height="15" fill="rgb(244,29,21)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3960%" y="997" width="0.0314%" height="15" fill="rgb(220,130,37)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="1007.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (33 samples, 0.03%)</title><rect x="5.3960%" y="981" width="0.0314%" height="15" fill="rgb(211,67,2)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.03%)</title><rect x="5.3960%" y="965" width="0.0314%" height="15" fill="rgb(235,68,52)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.03%)</title><rect x="5.3960%" y="949" width="0.0314%" height="15" fill="rgb(246,142,3)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="959.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (33 samples, 0.03%)</title><rect x="5.3960%" y="933" width="0.0314%" height="15" fill="rgb(241,25,7)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (33 samples, 0.03%)</title><rect x="5.3960%" y="917" width="0.0314%" height="15" fill="rgb(242,119,39)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3960%" y="901" width="0.0314%" height="15" fill="rgb(241,98,45)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (33 samples, 0.03%)</title><rect x="5.3960%" y="885" width="0.0314%" height="15" fill="rgb(254,28,30)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3960%" y="869" width="0.0314%" height="15" fill="rgb(241,142,54)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="879.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (33 samples, 0.03%)</title><rect x="5.3960%" y="853" width="0.0314%" height="15" fill="rgb(222,85,15)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (33 samples, 0.03%)</title><rect x="5.3960%" y="837" width="0.0314%" height="15" fill="rgb(210,85,47)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="847.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="5.3960%" y="821" width="0.0314%" height="15" fill="rgb(224,206,25)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (33 samples, 0.03%)</title><rect x="5.3960%" y="805" width="0.0314%" height="15" fill="rgb(243,201,19)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="5.3960%" y="789" width="0.0314%" height="15" fill="rgb(236,59,4)" fg:x="5668" fg:w="33"/><text x="5.6460%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (435 samples, 0.41%)</title><rect x="5.4712%" y="949" width="0.4141%" height="15" fill="rgb(254,179,45)" fg:x="5747" fg:w="435"/><text x="5.7212%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.02%)</title><rect x="6.0167%" y="933" width="0.0152%" height="15" fill="rgb(226,14,10)" fg:x="6320" fg:w="16"/><text x="6.2667%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (920 samples, 0.88%)</title><rect x="6.0319%" y="933" width="0.8758%" height="15" fill="rgb(244,27,41)" fg:x="6336" fg:w="920"/><text x="6.2819%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (15 samples, 0.01%)</title><rect x="6.9078%" y="917" width="0.0143%" height="15" fill="rgb(235,35,32)" fg:x="7256" fg:w="15"/><text x="7.1578%" y="927.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,584 samples, 1.51%)</title><rect x="5.4274%" y="1141" width="1.5080%" height="15" fill="rgb(218,68,31)" fg:x="5701" fg:w="1584"/><text x="5.6774%" y="1151.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,584 samples, 1.51%)</title><rect x="5.4274%" y="1125" width="1.5080%" height="15" fill="rgb(207,120,37)" fg:x="5701" fg:w="1584"/><text x="5.6774%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,584 samples, 1.51%)</title><rect x="5.4274%" y="1109" width="1.5080%" height="15" fill="rgb(227,98,0)" fg:x="5701" fg:w="1584"/><text x="5.6774%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,584 samples, 1.51%)</title><rect x="5.4274%" y="1093" width="1.5080%" height="15" fill="rgb(207,7,3)" fg:x="5701" fg:w="1584"/><text x="5.6774%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,584 samples, 1.51%)</title><rect x="5.4274%" y="1077" width="1.5080%" height="15" fill="rgb(206,98,19)" fg:x="5701" fg:w="1584"/><text x="5.6774%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,584 samples, 1.51%)</title><rect x="5.4274%" y="1061" width="1.5080%" height="15" fill="rgb(217,5,26)" fg:x="5701" fg:w="1584"/><text x="5.6774%" y="1071.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,584 samples, 1.51%)</title><rect x="5.4274%" y="1045" width="1.5080%" height="15" fill="rgb(235,190,38)" fg:x="5701" fg:w="1584"/><text x="5.6774%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,584 samples, 1.51%)</title><rect x="5.4274%" y="1029" width="1.5080%" height="15" fill="rgb(247,86,24)" fg:x="5701" fg:w="1584"/><text x="5.6774%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,584 samples, 1.51%)</title><rect x="5.4274%" y="1013" width="1.5080%" height="15" fill="rgb(205,101,16)" fg:x="5701" fg:w="1584"/><text x="5.6774%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,584 samples, 1.51%)</title><rect x="5.4274%" y="997" width="1.5080%" height="15" fill="rgb(246,168,33)" fg:x="5701" fg:w="1584"/><text x="5.6774%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,584 samples, 1.51%)</title><rect x="5.4274%" y="981" width="1.5080%" height="15" fill="rgb(231,114,1)" fg:x="5701" fg:w="1584"/><text x="5.6774%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,584 samples, 1.51%)</title><rect x="5.4274%" y="965" width="1.5080%" height="15" fill="rgb(207,184,53)" fg:x="5701" fg:w="1584"/><text x="5.6774%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,103 samples, 1.05%)</title><rect x="5.8853%" y="949" width="1.0501%" height="15" fill="rgb(224,95,51)" fg:x="6182" fg:w="1103"/><text x="6.1353%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (29 samples, 0.03%)</title><rect x="6.9078%" y="933" width="0.0276%" height="15" fill="rgb(212,188,45)" fg:x="7256" fg:w="29"/><text x="7.1578%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (14 samples, 0.01%)</title><rect x="6.9221%" y="917" width="0.0133%" height="15" fill="rgb(223,154,38)" fg:x="7271" fg:w="14"/><text x="7.1721%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,874 samples, 1.78%)</title><rect x="5.1523%" y="1157" width="1.7841%" height="15" fill="rgb(251,22,52)" fg:x="5412" fg:w="1874"/><text x="5.4023%" y="1167.50">&lt;..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="6.9363%" y="1157" width="0.0181%" height="15" fill="rgb(229,209,22)" fg:x="7286" fg:w="19"/><text x="7.1863%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (14 samples, 0.01%)</title><rect x="6.9563%" y="1157" width="0.0133%" height="15" fill="rgb(234,138,34)" fg:x="7307" fg:w="14"/><text x="7.2063%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (66 samples, 0.06%)</title><rect x="6.9697%" y="1157" width="0.0628%" height="15" fill="rgb(212,95,11)" fg:x="7321" fg:w="66"/><text x="7.2197%" y="1167.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="7.0325%" y="1157" width="0.0248%" height="15" fill="rgb(240,179,47)" fg:x="7387" fg:w="26"/><text x="7.2825%" y="1167.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="7.0572%" y="1157" width="0.0200%" height="15" fill="rgb(240,163,11)" fg:x="7413" fg:w="21"/><text x="7.3072%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (21 samples, 0.02%)</title><rect x="7.0572%" y="1141" width="0.0200%" height="15" fill="rgb(236,37,12)" fg:x="7413" fg:w="21"/><text x="7.3072%" y="1151.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="7.0963%" y="1157" width="0.0286%" height="15" fill="rgb(232,164,16)" fg:x="7454" fg:w="30"/><text x="7.3463%" y="1167.50"></text></g><g><title>__clock_gettime_2 (83 samples, 0.08%)</title><rect x="7.1248%" y="1157" width="0.0790%" height="15" fill="rgb(244,205,15)" fg:x="7484" fg:w="83"/><text x="7.3748%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (97 samples, 0.09%)</title><rect x="7.2067%" y="1157" width="0.0923%" height="15" fill="rgb(223,117,47)" fg:x="7570" fg:w="97"/><text x="7.4567%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (50 samples, 0.05%)</title><rect x="7.3000%" y="1157" width="0.0476%" height="15" fill="rgb(244,107,35)" fg:x="7668" fg:w="50"/><text x="7.5500%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (30 samples, 0.03%)</title><rect x="7.3190%" y="1141" width="0.0286%" height="15" fill="rgb(205,140,8)" fg:x="7688" fg:w="30"/><text x="7.5690%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (48 samples, 0.05%)</title><rect x="7.3476%" y="1157" width="0.0457%" height="15" fill="rgb(228,84,46)" fg:x="7718" fg:w="48"/><text x="7.5976%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (112 samples, 0.11%)</title><rect x="7.3933%" y="1157" width="0.1066%" height="15" fill="rgb(254,188,9)" fg:x="7766" fg:w="112"/><text x="7.6433%" y="1167.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (17 samples, 0.02%)</title><rect x="7.5542%" y="725" width="0.0162%" height="15" fill="rgb(206,112,54)" fg:x="7935" fg:w="17"/><text x="7.8042%" y="735.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.02%)</title><rect x="7.6037%" y="549" width="0.0162%" height="15" fill="rgb(216,84,49)" fg:x="7987" fg:w="17"/><text x="7.8537%" y="559.50"></text></g><g><title>do_futex (14 samples, 0.01%)</title><rect x="7.6066%" y="533" width="0.0133%" height="15" fill="rgb(214,194,35)" fg:x="7990" fg:w="14"/><text x="7.8566%" y="543.50"></text></g><g><title>futex_wake (13 samples, 0.01%)</title><rect x="7.6075%" y="517" width="0.0124%" height="15" fill="rgb(249,28,3)" fg:x="7991" fg:w="13"/><text x="7.8575%" y="527.50"></text></g><g><title>syscall_exit_to_user_mode (28 samples, 0.03%)</title><rect x="7.6199%" y="549" width="0.0267%" height="15" fill="rgb(222,56,52)" fg:x="8004" fg:w="28"/><text x="7.8699%" y="559.50"></text></g><g><title>core::mem::drop (66 samples, 0.06%)</title><rect x="7.5875%" y="709" width="0.0628%" height="15" fill="rgb(245,217,50)" fg:x="7970" fg:w="66"/><text x="7.8375%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (66 samples, 0.06%)</title><rect x="7.5875%" y="693" width="0.0628%" height="15" fill="rgb(213,201,24)" fg:x="7970" fg:w="66"/><text x="7.8375%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (66 samples, 0.06%)</title><rect x="7.5875%" y="677" width="0.0628%" height="15" fill="rgb(248,116,28)" fg:x="7970" fg:w="66"/><text x="7.8375%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.06%)</title><rect x="7.5875%" y="661" width="0.0628%" height="15" fill="rgb(219,72,43)" fg:x="7970" fg:w="66"/><text x="7.8375%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (66 samples, 0.06%)</title><rect x="7.5875%" y="645" width="0.0628%" height="15" fill="rgb(209,138,14)" fg:x="7970" fg:w="66"/><text x="7.8375%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (66 samples, 0.06%)</title><rect x="7.5875%" y="629" width="0.0628%" height="15" fill="rgb(222,18,33)" fg:x="7970" fg:w="66"/><text x="7.8375%" y="639.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (66 samples, 0.06%)</title><rect x="7.5875%" y="613" width="0.0628%" height="15" fill="rgb(213,199,7)" fg:x="7970" fg:w="66"/><text x="7.8375%" y="623.50"></text></g><g><title>__GI___lll_lock_wake (58 samples, 0.06%)</title><rect x="7.5951%" y="597" width="0.0552%" height="15" fill="rgb(250,110,10)" fg:x="7978" fg:w="58"/><text x="7.8451%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (51 samples, 0.05%)</title><rect x="7.6018%" y="581" width="0.0486%" height="15" fill="rgb(248,123,6)" fg:x="7985" fg:w="51"/><text x="7.8518%" y="591.50"></text></g><g><title>do_syscall_64 (51 samples, 0.05%)</title><rect x="7.6018%" y="565" width="0.0486%" height="15" fill="rgb(206,91,31)" fg:x="7985" fg:w="51"/><text x="7.8518%" y="575.50"></text></g><g><title>update_curr (21 samples, 0.02%)</title><rect x="7.8065%" y="453" width="0.0200%" height="15" fill="rgb(211,154,13)" fg:x="8200" fg:w="21"/><text x="8.0565%" y="463.50"></text></g><g><title>dequeue_task_fair (49 samples, 0.05%)</title><rect x="7.7884%" y="485" width="0.0466%" height="15" fill="rgb(225,148,7)" fg:x="8181" fg:w="49"/><text x="8.0384%" y="495.50"></text></g><g><title>dequeue_entity (44 samples, 0.04%)</title><rect x="7.7931%" y="469" width="0.0419%" height="15" fill="rgb(220,160,43)" fg:x="8186" fg:w="44"/><text x="8.0431%" y="479.50"></text></g><g><title>finish_task_switch.isra.0 (18 samples, 0.02%)</title><rect x="7.8350%" y="485" width="0.0171%" height="15" fill="rgb(213,52,39)" fg:x="8230" fg:w="18"/><text x="8.0850%" y="495.50"></text></g><g><title>psi_group_change (17 samples, 0.02%)</title><rect x="7.8588%" y="469" width="0.0162%" height="15" fill="rgb(243,137,7)" fg:x="8255" fg:w="17"/><text x="8.1088%" y="479.50"></text></g><g><title>psi_task_switch (21 samples, 0.02%)</title><rect x="7.8569%" y="485" width="0.0200%" height="15" fill="rgb(230,79,13)" fg:x="8253" fg:w="21"/><text x="8.1069%" y="495.50"></text></g><g><title>futex_wait_queue (125 samples, 0.12%)</title><rect x="7.7703%" y="533" width="0.1190%" height="15" fill="rgb(247,105,23)" fg:x="8162" fg:w="125"/><text x="8.0203%" y="543.50"></text></g><g><title>schedule (118 samples, 0.11%)</title><rect x="7.7770%" y="517" width="0.1123%" height="15" fill="rgb(223,179,41)" fg:x="8169" fg:w="118"/><text x="8.0270%" y="527.50"></text></g><g><title>__schedule (117 samples, 0.11%)</title><rect x="7.7779%" y="501" width="0.1114%" height="15" fill="rgb(218,9,34)" fg:x="8170" fg:w="117"/><text x="8.0279%" y="511.50"></text></g><g><title>update_rq_clock (11 samples, 0.01%)</title><rect x="7.8788%" y="485" width="0.0105%" height="15" fill="rgb(222,106,8)" fg:x="8276" fg:w="11"/><text x="8.1288%" y="495.50"></text></g><g><title>futex_q_lock (12 samples, 0.01%)</title><rect x="7.8941%" y="517" width="0.0114%" height="15" fill="rgb(211,220,0)" fg:x="8292" fg:w="12"/><text x="8.1441%" y="527.50"></text></g><g><title>__x64_sys_futex (159 samples, 0.15%)</title><rect x="7.7570%" y="581" width="0.1514%" height="15" fill="rgb(229,52,16)" fg:x="8148" fg:w="159"/><text x="8.0070%" y="591.50"></text></g><g><title>do_futex (154 samples, 0.15%)</title><rect x="7.7617%" y="565" width="0.1466%" height="15" fill="rgb(212,155,18)" fg:x="8153" fg:w="154"/><text x="8.0117%" y="575.50"></text></g><g><title>futex_wait (153 samples, 0.15%)</title><rect x="7.7627%" y="549" width="0.1457%" height="15" fill="rgb(242,21,14)" fg:x="8154" fg:w="153"/><text x="8.0127%" y="559.50"></text></g><g><title>futex_wait_setup (20 samples, 0.02%)</title><rect x="7.8893%" y="533" width="0.0190%" height="15" fill="rgb(222,19,48)" fg:x="8287" fg:w="20"/><text x="8.1393%" y="543.50"></text></g><g><title>__rseq_handle_notify_resume (12 samples, 0.01%)</title><rect x="7.9445%" y="549" width="0.0114%" height="15" fill="rgb(232,45,27)" fg:x="8345" fg:w="12"/><text x="8.1945%" y="559.50"></text></g><g><title>exit_to_user_mode_prepare (26 samples, 0.02%)</title><rect x="7.9369%" y="565" width="0.0248%" height="15" fill="rgb(249,103,42)" fg:x="8337" fg:w="26"/><text x="8.1869%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (55 samples, 0.05%)</title><rect x="7.9112%" y="581" width="0.0524%" height="15" fill="rgb(246,81,33)" fg:x="8310" fg:w="55"/><text x="8.1612%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (225 samples, 0.21%)</title><rect x="7.7513%" y="613" width="0.2142%" height="15" fill="rgb(252,33,42)" fg:x="8142" fg:w="225"/><text x="8.0013%" y="623.50"></text></g><g><title>do_syscall_64 (223 samples, 0.21%)</title><rect x="7.7532%" y="597" width="0.2123%" height="15" fill="rgb(209,212,41)" fg:x="8144" fg:w="223"/><text x="8.0032%" y="607.50"></text></g><g><title>event_listener::Inner::lock (320 samples, 0.30%)</title><rect x="7.6618%" y="709" width="0.3046%" height="15" fill="rgb(207,154,6)" fg:x="8048" fg:w="320"/><text x="7.9118%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (320 samples, 0.30%)</title><rect x="7.6618%" y="693" width="0.3046%" height="15" fill="rgb(223,64,47)" fg:x="8048" fg:w="320"/><text x="7.9118%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (316 samples, 0.30%)</title><rect x="7.6656%" y="677" width="0.3008%" height="15" fill="rgb(211,161,38)" fg:x="8052" fg:w="316"/><text x="7.9156%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (296 samples, 0.28%)</title><rect x="7.6846%" y="661" width="0.2818%" height="15" fill="rgb(219,138,40)" fg:x="8072" fg:w="296"/><text x="7.9346%" y="671.50"></text></g><g><title>___pthread_mutex_lock (296 samples, 0.28%)</title><rect x="7.6846%" y="645" width="0.2818%" height="15" fill="rgb(241,228,46)" fg:x="8072" fg:w="296"/><text x="7.9346%" y="655.50"></text></g><g><title>__GI___lll_lock_wait (237 samples, 0.23%)</title><rect x="7.7408%" y="629" width="0.2256%" height="15" fill="rgb(223,209,38)" fg:x="8131" fg:w="237"/><text x="7.9908%" y="639.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (437 samples, 0.42%)</title><rect x="7.5704%" y="725" width="0.4160%" height="15" fill="rgb(236,164,45)" fg:x="7952" fg:w="437"/><text x="7.8204%" y="735.50"></text></g><g><title>event_listener::List::remove (21 samples, 0.02%)</title><rect x="7.9664%" y="709" width="0.0200%" height="15" fill="rgb(231,15,5)" fg:x="8368" fg:w="21"/><text x="8.2164%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18 samples, 0.02%)</title><rect x="7.9693%" y="693" width="0.0171%" height="15" fill="rgb(252,35,15)" fg:x="8371" fg:w="18"/><text x="8.2193%" y="703.50"></text></g><g><title>core::mem::replace (18 samples, 0.02%)</title><rect x="7.9693%" y="677" width="0.0171%" height="15" fill="rgb(248,181,18)" fg:x="8371" fg:w="18"/><text x="8.2193%" y="687.50"></text></g><g><title>core::ptr::read (18 samples, 0.02%)</title><rect x="7.9693%" y="661" width="0.0171%" height="15" fill="rgb(233,39,42)" fg:x="8371" fg:w="18"/><text x="8.2193%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (707 samples, 0.67%)</title><rect x="7.9864%" y="725" width="0.6731%" height="15" fill="rgb(238,110,33)" fg:x="8389" fg:w="707"/><text x="8.2364%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (679 samples, 0.65%)</title><rect x="8.6957%" y="709" width="0.6464%" height="15" fill="rgb(233,195,10)" fg:x="9134" fg:w="679"/><text x="8.9457%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (370 samples, 0.35%)</title><rect x="9.5734%" y="677" width="0.3522%" height="15" fill="rgb(254,105,3)" fg:x="10056" fg:w="370"/><text x="9.8234%" y="687.50"></text></g><g><title>concurrent_queue::full_fence (47 samples, 0.04%)</title><rect x="9.9285%" y="677" width="0.0447%" height="15" fill="rgb(221,225,9)" fg:x="10429" fg:w="47"/><text x="10.1785%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (44 samples, 0.04%)</title><rect x="9.9314%" y="661" width="0.0419%" height="15" fill="rgb(224,227,45)" fg:x="10432" fg:w="44"/><text x="10.1814%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (44 samples, 0.04%)</title><rect x="9.9314%" y="645" width="0.0419%" height="15" fill="rgb(229,198,43)" fg:x="10432" fg:w="44"/><text x="10.1814%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (44 samples, 0.04%)</title><rect x="9.9314%" y="629" width="0.0419%" height="15" fill="rgb(206,209,35)" fg:x="10432" fg:w="44"/><text x="10.1814%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (433 samples, 0.41%)</title><rect x="9.9761%" y="677" width="0.4122%" height="15" fill="rgb(245,195,53)" fg:x="10479" fg:w="433"/><text x="10.2261%" y="687.50"></text></g><g><title>core::ptr::read (433 samples, 0.41%)</title><rect x="9.9761%" y="661" width="0.4122%" height="15" fill="rgb(240,92,26)" fg:x="10479" fg:w="433"/><text x="10.2261%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (433 samples, 0.41%)</title><rect x="9.9761%" y="645" width="0.4122%" height="15" fill="rgb(207,40,23)" fg:x="10479" fg:w="433"/><text x="10.2261%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (902 samples, 0.86%)</title><rect x="10.3883%" y="677" width="0.8587%" height="15" fill="rgb(223,111,35)" fg:x="10912" fg:w="902"/><text x="10.6383%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (902 samples, 0.86%)</title><rect x="10.3883%" y="661" width="0.8587%" height="15" fill="rgb(229,147,28)" fg:x="10912" fg:w="902"/><text x="10.6383%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (194 samples, 0.18%)</title><rect x="11.2470%" y="677" width="0.1847%" height="15" fill="rgb(211,29,28)" fg:x="11814" fg:w="194"/><text x="11.4970%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (185 samples, 0.18%)</title><rect x="11.2556%" y="661" width="0.1761%" height="15" fill="rgb(228,72,33)" fg:x="11823" fg:w="185"/><text x="11.5056%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,199 samples, 2.09%)</title><rect x="9.3421%" y="709" width="2.0935%" height="15" fill="rgb(205,214,31)" fg:x="9813" fg:w="2199"/><text x="9.5921%" y="719.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,146 samples, 2.04%)</title><rect x="9.3925%" y="693" width="2.0430%" height="15" fill="rgb(224,111,15)" fg:x="9866" fg:w="2146"/><text x="9.6425%" y="703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (15 samples, 0.01%)</title><rect x="11.4441%" y="693" width="0.0143%" height="15" fill="rgb(253,21,26)" fg:x="12021" fg:w="15"/><text x="11.6941%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (15 samples, 0.01%)</title><rect x="11.4441%" y="677" width="0.0143%" height="15" fill="rgb(245,139,43)" fg:x="12021" fg:w="15"/><text x="11.6941%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="11.4441%" y="661" width="0.0143%" height="15" fill="rgb(252,170,7)" fg:x="12021" fg:w="15"/><text x="11.6941%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="11.4441%" y="645" width="0.0143%" height="15" fill="rgb(231,118,14)" fg:x="12021" fg:w="15"/><text x="11.6941%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="11.4441%" y="629" width="0.0143%" height="15" fill="rgb(238,83,0)" fg:x="12021" fg:w="15"/><text x="11.6941%" y="639.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (15 samples, 0.01%)</title><rect x="11.4441%" y="613" width="0.0143%" height="15" fill="rgb(221,39,39)" fg:x="12021" fg:w="15"/><text x="11.6941%" y="623.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.01%)</title><rect x="11.4727%" y="421" width="0.0133%" height="15" fill="rgb(222,119,46)" fg:x="12051" fg:w="14"/><text x="11.7227%" y="431.50"></text></g><g><title>do_futex (14 samples, 0.01%)</title><rect x="11.4727%" y="405" width="0.0133%" height="15" fill="rgb(222,165,49)" fg:x="12051" fg:w="14"/><text x="11.7227%" y="415.50"></text></g><g><title>futex_wake (14 samples, 0.01%)</title><rect x="11.4727%" y="389" width="0.0133%" height="15" fill="rgb(219,113,52)" fg:x="12051" fg:w="14"/><text x="11.7227%" y="399.50"></text></g><g><title>wake_up_q (11 samples, 0.01%)</title><rect x="11.4755%" y="373" width="0.0105%" height="15" fill="rgb(214,7,15)" fg:x="12054" fg:w="11"/><text x="11.7255%" y="383.50"></text></g><g><title>try_to_wake_up (11 samples, 0.01%)</title><rect x="11.4755%" y="357" width="0.0105%" height="15" fill="rgb(235,32,4)" fg:x="12054" fg:w="11"/><text x="11.7255%" y="367.50"></text></g><g><title>core::task::wake::Waker::wake (23 samples, 0.02%)</title><rect x="11.4660%" y="597" width="0.0219%" height="15" fill="rgb(238,90,54)" fg:x="12044" fg:w="23"/><text x="11.7160%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (23 samples, 0.02%)</title><rect x="11.4660%" y="581" width="0.0219%" height="15" fill="rgb(213,208,19)" fg:x="12044" fg:w="23"/><text x="11.7160%" y="591.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (23 samples, 0.02%)</title><rect x="11.4660%" y="565" width="0.0219%" height="15" fill="rgb(233,156,4)" fg:x="12044" fg:w="23"/><text x="11.7160%" y="575.50"></text></g><g><title>parking::Unparker::unpark (17 samples, 0.02%)</title><rect x="11.4717%" y="549" width="0.0162%" height="15" fill="rgb(207,194,5)" fg:x="12050" fg:w="17"/><text x="11.7217%" y="559.50"></text></g><g><title>parking::Inner::unpark (17 samples, 0.02%)</title><rect x="11.4717%" y="533" width="0.0162%" height="15" fill="rgb(206,111,30)" fg:x="12050" fg:w="17"/><text x="11.7217%" y="543.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (16 samples, 0.02%)</title><rect x="11.4727%" y="517" width="0.0152%" height="15" fill="rgb(243,70,54)" fg:x="12051" fg:w="16"/><text x="11.7227%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (16 samples, 0.02%)</title><rect x="11.4727%" y="501" width="0.0152%" height="15" fill="rgb(242,28,8)" fg:x="12051" fg:w="16"/><text x="11.7227%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (16 samples, 0.02%)</title><rect x="11.4727%" y="485" width="0.0152%" height="15" fill="rgb(219,106,18)" fg:x="12051" fg:w="16"/><text x="11.7227%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (16 samples, 0.02%)</title><rect x="11.4727%" y="469" width="0.0152%" height="15" fill="rgb(244,222,10)" fg:x="12051" fg:w="16"/><text x="11.7227%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.02%)</title><rect x="11.4727%" y="453" width="0.0152%" height="15" fill="rgb(236,179,52)" fg:x="12051" fg:w="16"/><text x="11.7227%" y="463.50"></text></g><g><title>do_syscall_64 (16 samples, 0.02%)</title><rect x="11.4727%" y="437" width="0.0152%" height="15" fill="rgb(213,23,39)" fg:x="12051" fg:w="16"/><text x="11.7227%" y="447.50"></text></g><g><title>async_executor::State::notify (29 samples, 0.03%)</title><rect x="11.4641%" y="613" width="0.0276%" height="15" fill="rgb(238,48,10)" fg:x="12042" fg:w="29"/><text x="11.7141%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (30 samples, 0.03%)</title><rect x="11.4641%" y="629" width="0.0286%" height="15" fill="rgb(251,196,23)" fg:x="12042" fg:w="30"/><text x="11.7141%" y="639.50"></text></g><g><title>event_listener::List::notify (31 samples, 0.03%)</title><rect x="11.4641%" y="693" width="0.0295%" height="15" fill="rgb(250,152,24)" fg:x="12042" fg:w="31"/><text x="11.7141%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (31 samples, 0.03%)</title><rect x="11.4641%" y="677" width="0.0295%" height="15" fill="rgb(209,150,17)" fg:x="12042" fg:w="31"/><text x="11.7141%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (31 samples, 0.03%)</title><rect x="11.4641%" y="661" width="0.0295%" height="15" fill="rgb(234,202,34)" fg:x="12042" fg:w="31"/><text x="11.7141%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (31 samples, 0.03%)</title><rect x="11.4641%" y="645" width="0.0295%" height="15" fill="rgb(253,148,53)" fg:x="12042" fg:w="31"/><text x="11.7141%" y="655.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3,318 samples, 3.16%)</title><rect x="8.6595%" y="725" width="3.1588%" height="15" fill="rgb(218,129,16)" fg:x="9096" fg:w="3318"/><text x="8.9095%" y="735.50">asy..</text></g><g><title>event_listener::Event::notify (402 samples, 0.38%)</title><rect x="11.4355%" y="709" width="0.3827%" height="15" fill="rgb(216,85,19)" fg:x="12012" fg:w="402"/><text x="11.6855%" y="719.50"></text></g><g><title>event_listener::full_fence (341 samples, 0.32%)</title><rect x="11.4936%" y="693" width="0.3246%" height="15" fill="rgb(235,228,7)" fg:x="12073" fg:w="341"/><text x="11.7436%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (334 samples, 0.32%)</title><rect x="11.5003%" y="677" width="0.3180%" height="15" fill="rgb(245,175,0)" fg:x="12080" fg:w="334"/><text x="11.7503%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (334 samples, 0.32%)</title><rect x="11.5003%" y="661" width="0.3180%" height="15" fill="rgb(208,168,36)" fg:x="12080" fg:w="334"/><text x="11.7503%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (334 samples, 0.32%)</title><rect x="11.5003%" y="645" width="0.3180%" height="15" fill="rgb(246,171,24)" fg:x="12080" fg:w="334"/><text x="11.7503%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (29 samples, 0.03%)</title><rect x="11.8182%" y="725" width="0.0276%" height="15" fill="rgb(215,142,24)" fg:x="12414" fg:w="29"/><text x="12.0682%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (15 samples, 0.01%)</title><rect x="11.8639%" y="677" width="0.0143%" height="15" fill="rgb(250,187,7)" fg:x="12462" fg:w="15"/><text x="12.1139%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (15 samples, 0.01%)</title><rect x="11.8639%" y="661" width="0.0143%" height="15" fill="rgb(228,66,33)" fg:x="12462" fg:w="15"/><text x="12.1139%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="11.8639%" y="645" width="0.0143%" height="15" fill="rgb(234,215,21)" fg:x="12462" fg:w="15"/><text x="12.1139%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="11.8639%" y="629" width="0.0143%" height="15" fill="rgb(222,191,20)" fg:x="12462" fg:w="15"/><text x="12.1139%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="11.8639%" y="613" width="0.0143%" height="15" fill="rgb(245,79,54)" fg:x="12462" fg:w="15"/><text x="12.1139%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (15 samples, 0.01%)</title><rect x="11.8639%" y="597" width="0.0143%" height="15" fill="rgb(240,10,37)" fg:x="12462" fg:w="15"/><text x="12.1139%" y="607.50"></text></g><g><title>event_listener::Inner::lock (13 samples, 0.01%)</title><rect x="11.8782%" y="677" width="0.0124%" height="15" fill="rgb(214,192,32)" fg:x="12477" fg:w="13"/><text x="12.1282%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="11.8782%" y="661" width="0.0124%" height="15" fill="rgb(209,36,54)" fg:x="12477" fg:w="13"/><text x="12.1282%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="11.8782%" y="645" width="0.0124%" height="15" fill="rgb(220,10,11)" fg:x="12477" fg:w="13"/><text x="12.1282%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="11.8792%" y="629" width="0.0114%" height="15" fill="rgb(221,106,17)" fg:x="12478" fg:w="12"/><text x="12.1292%" y="639.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="11.8792%" y="613" width="0.0114%" height="15" fill="rgb(251,142,44)" fg:x="12478" fg:w="12"/><text x="12.1292%" y="623.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="11.8630%" y="693" width="0.0286%" height="15" fill="rgb(238,13,15)" fg:x="12461" fg:w="30"/><text x="12.1130%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (66 samples, 0.06%)</title><rect x="11.8459%" y="725" width="0.0628%" height="15" fill="rgb(208,107,27)" fg:x="12443" fg:w="66"/><text x="12.0959%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (48 samples, 0.05%)</title><rect x="11.8630%" y="709" width="0.0457%" height="15" fill="rgb(205,136,37)" fg:x="12461" fg:w="48"/><text x="12.1130%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (18 samples, 0.02%)</title><rect x="11.8915%" y="693" width="0.0171%" height="15" fill="rgb(250,205,27)" fg:x="12491" fg:w="18"/><text x="12.1415%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="11.8915%" y="677" width="0.0171%" height="15" fill="rgb(210,80,43)" fg:x="12491" fg:w="18"/><text x="12.1415%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.02%)</title><rect x="11.8915%" y="661" width="0.0171%" height="15" fill="rgb(247,160,36)" fg:x="12491" fg:w="18"/><text x="12.1415%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (18 samples, 0.02%)</title><rect x="11.8915%" y="645" width="0.0171%" height="15" fill="rgb(234,13,49)" fg:x="12491" fg:w="18"/><text x="12.1415%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="11.9096%" y="709" width="0.0152%" height="15" fill="rgb(234,122,0)" fg:x="12510" fg:w="16"/><text x="12.1596%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.02%)</title><rect x="11.9096%" y="693" width="0.0152%" height="15" fill="rgb(207,146,38)" fg:x="12510" fg:w="16"/><text x="12.1596%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.02%)</title><rect x="11.9096%" y="677" width="0.0152%" height="15" fill="rgb(207,177,25)" fg:x="12510" fg:w="16"/><text x="12.1596%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="11.9249%" y="709" width="0.0124%" height="15" fill="rgb(211,178,42)" fg:x="12526" fg:w="13"/><text x="12.1749%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (12 samples, 0.01%)</title><rect x="11.9258%" y="693" width="0.0114%" height="15" fill="rgb(230,69,54)" fg:x="12527" fg:w="12"/><text x="12.1758%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="11.9258%" y="677" width="0.0114%" height="15" fill="rgb(214,135,41)" fg:x="12527" fg:w="12"/><text x="12.1758%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="11.9258%" y="661" width="0.0114%" height="15" fill="rgb(237,67,25)" fg:x="12527" fg:w="12"/><text x="12.1758%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="11.9258%" y="645" width="0.0114%" height="15" fill="rgb(222,189,50)" fg:x="12527" fg:w="12"/><text x="12.1758%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="11.9258%" y="629" width="0.0114%" height="15" fill="rgb(245,148,34)" fg:x="12527" fg:w="12"/><text x="12.1758%" y="639.50"></text></g><g><title>event_listener::Inner::lock (29 samples, 0.03%)</title><rect x="11.9372%" y="709" width="0.0276%" height="15" fill="rgb(222,29,6)" fg:x="12539" fg:w="29"/><text x="12.1872%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.03%)</title><rect x="11.9372%" y="693" width="0.0276%" height="15" fill="rgb(221,189,43)" fg:x="12539" fg:w="29"/><text x="12.1872%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.03%)</title><rect x="11.9372%" y="677" width="0.0276%" height="15" fill="rgb(207,36,27)" fg:x="12539" fg:w="29"/><text x="12.1872%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (29 samples, 0.03%)</title><rect x="11.9372%" y="661" width="0.0276%" height="15" fill="rgb(217,90,24)" fg:x="12539" fg:w="29"/><text x="12.1872%" y="671.50"></text></g><g><title>___pthread_mutex_lock (28 samples, 0.03%)</title><rect x="11.9382%" y="645" width="0.0267%" height="15" fill="rgb(224,66,35)" fg:x="12540" fg:w="28"/><text x="12.1882%" y="655.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,696 samples, 4.47%)</title><rect x="7.5037%" y="805" width="4.4706%" height="15" fill="rgb(221,13,50)" fg:x="7882" fg:w="4696"/><text x="7.7537%" y="815.50">&lt;asyn..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (4,696 samples, 4.47%)</title><rect x="7.5037%" y="789" width="4.4706%" height="15" fill="rgb(236,68,49)" fg:x="7882" fg:w="4696"/><text x="7.7537%" y="799.50">&lt;trem..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,696 samples, 4.47%)</title><rect x="7.5037%" y="773" width="4.4706%" height="15" fill="rgb(229,146,28)" fg:x="7882" fg:w="4696"/><text x="7.7537%" y="783.50">&lt;asyn..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,696 samples, 4.47%)</title><rect x="7.5037%" y="757" width="4.4706%" height="15" fill="rgb(225,31,38)" fg:x="7882" fg:w="4696"/><text x="7.7537%" y="767.50">&lt;asyn..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,696 samples, 4.47%)</title><rect x="7.5037%" y="741" width="4.4706%" height="15" fill="rgb(250,208,3)" fg:x="7882" fg:w="4696"/><text x="7.7537%" y="751.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (69 samples, 0.07%)</title><rect x="11.9087%" y="725" width="0.0657%" height="15" fill="rgb(246,54,23)" fg:x="12509" fg:w="69"/><text x="12.1587%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,181 samples, 1.12%)</title><rect x="12.0220%" y="709" width="1.1243%" height="15" fill="rgb(243,76,11)" fg:x="12628" fg:w="1181"/><text x="12.2720%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 0.02%)</title><rect x="13.1463%" y="709" width="0.0152%" height="15" fill="rgb(245,21,50)" fg:x="13809" fg:w="16"/><text x="13.3963%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.02%)</title><rect x="13.1463%" y="693" width="0.0152%" height="15" fill="rgb(228,9,43)" fg:x="13809" fg:w="16"/><text x="13.3963%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.02%)</title><rect x="13.1463%" y="677" width="0.0152%" height="15" fill="rgb(208,100,47)" fg:x="13809" fg:w="16"/><text x="13.3963%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.02%)</title><rect x="13.1463%" y="661" width="0.0152%" height="15" fill="rgb(232,26,8)" fg:x="13809" fg:w="16"/><text x="13.3963%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.02%)</title><rect x="13.1463%" y="645" width="0.0152%" height="15" fill="rgb(216,166,38)" fg:x="13809" fg:w="16"/><text x="13.3963%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.02%)</title><rect x="13.1463%" y="629" width="0.0152%" height="15" fill="rgb(251,202,51)" fg:x="13809" fg:w="16"/><text x="13.3963%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.02%)</title><rect x="13.1463%" y="613" width="0.0152%" height="15" fill="rgb(254,216,34)" fg:x="13809" fg:w="16"/><text x="13.3963%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="13.1463%" y="597" width="0.0152%" height="15" fill="rgb(251,32,27)" fg:x="13809" fg:w="16"/><text x="13.3963%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="13.1463%" y="581" width="0.0152%" height="15" fill="rgb(208,127,28)" fg:x="13809" fg:w="16"/><text x="13.3963%" y="591.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="13.1615%" y="693" width="0.0114%" height="15" fill="rgb(224,137,22)" fg:x="13825" fg:w="12"/><text x="13.4115%" y="703.50"></text></g><g><title>size_to_sizeclass (22 samples, 0.02%)</title><rect x="13.1730%" y="661" width="0.0209%" height="15" fill="rgb(254,70,32)" fg:x="13837" fg:w="22"/><text x="13.4230%" y="671.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="13.1815%" y="645" width="0.0124%" height="15" fill="rgb(229,75,37)" fg:x="13846" fg:w="13"/><text x="13.4315%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (14 samples, 0.01%)</title><rect x="13.2034%" y="645" width="0.0133%" height="15" fill="rgb(252,64,23)" fg:x="13869" fg:w="14"/><text x="13.4534%" y="655.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (14 samples, 0.01%)</title><rect x="13.2034%" y="629" width="0.0133%" height="15" fill="rgb(232,162,48)" fg:x="13869" fg:w="14"/><text x="13.4534%" y="639.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="13.2034%" y="613" width="0.0133%" height="15" fill="rgb(246,160,12)" fg:x="13869" fg:w="14"/><text x="13.4534%" y="623.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="13.2034%" y="597" width="0.0133%" height="15" fill="rgb(247,166,0)" fg:x="13869" fg:w="14"/><text x="13.4534%" y="607.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="13.2034%" y="581" width="0.0133%" height="15" fill="rgb(249,219,21)" fg:x="13869" fg:w="14"/><text x="13.4534%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="13.2329%" y="533" width="0.0181%" height="15" fill="rgb(205,209,3)" fg:x="13900" fg:w="19"/><text x="13.4829%" y="543.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="13.2329%" y="517" width="0.0181%" height="15" fill="rgb(243,44,1)" fg:x="13900" fg:w="19"/><text x="13.4829%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="13.2244%" y="581" width="0.0381%" height="15" fill="rgb(206,159,16)" fg:x="13891" fg:w="40"/><text x="13.4744%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="13.2244%" y="565" width="0.0381%" height="15" fill="rgb(244,77,30)" fg:x="13891" fg:w="40"/><text x="13.4744%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (36 samples, 0.03%)</title><rect x="13.2282%" y="549" width="0.0343%" height="15" fill="rgb(218,69,12)" fg:x="13895" fg:w="36"/><text x="13.4782%" y="559.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="13.2510%" y="533" width="0.0114%" height="15" fill="rgb(212,87,7)" fg:x="13919" fg:w="12"/><text x="13.5010%" y="543.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="13.2510%" y="517" width="0.0114%" height="15" fill="rgb(245,114,25)" fg:x="13919" fg:w="12"/><text x="13.5010%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (49 samples, 0.05%)</title><rect x="13.2244%" y="597" width="0.0466%" height="15" fill="rgb(210,61,42)" fg:x="13891" fg:w="49"/><text x="13.4744%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (70 samples, 0.07%)</title><rect x="13.2167%" y="613" width="0.0666%" height="15" fill="rgb(211,52,33)" fg:x="13883" fg:w="70"/><text x="13.4667%" y="623.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (26 samples, 0.02%)</title><rect x="13.3015%" y="597" width="0.0248%" height="15" fill="rgb(234,58,33)" fg:x="13972" fg:w="26"/><text x="13.5515%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (313 samples, 0.30%)</title><rect x="13.2167%" y="645" width="0.2980%" height="15" fill="rgb(220,115,36)" fg:x="13883" fg:w="313"/><text x="13.4667%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (313 samples, 0.30%)</title><rect x="13.2167%" y="629" width="0.2980%" height="15" fill="rgb(243,153,54)" fg:x="13883" fg:w="313"/><text x="13.4667%" y="639.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (243 samples, 0.23%)</title><rect x="13.2834%" y="613" width="0.2313%" height="15" fill="rgb(251,47,18)" fg:x="13953" fg:w="243"/><text x="13.5334%" y="623.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (198 samples, 0.19%)</title><rect x="13.3262%" y="597" width="0.1885%" height="15" fill="rgb(242,102,42)" fg:x="13998" fg:w="198"/><text x="13.5762%" y="607.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (198 samples, 0.19%)</title><rect x="13.3262%" y="581" width="0.1885%" height="15" fill="rgb(234,31,38)" fg:x="13998" fg:w="198"/><text x="13.5762%" y="591.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (198 samples, 0.19%)</title><rect x="13.3262%" y="565" width="0.1885%" height="15" fill="rgb(221,117,51)" fg:x="13998" fg:w="198"/><text x="13.5762%" y="575.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (35 samples, 0.03%)</title><rect x="13.5204%" y="613" width="0.0333%" height="15" fill="rgb(212,20,18)" fg:x="14202" fg:w="35"/><text x="13.7704%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (32 samples, 0.03%)</title><rect x="13.5233%" y="597" width="0.0305%" height="15" fill="rgb(245,133,36)" fg:x="14205" fg:w="32"/><text x="13.7733%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (32 samples, 0.03%)</title><rect x="13.5233%" y="581" width="0.0305%" height="15" fill="rgb(212,6,19)" fg:x="14205" fg:w="32"/><text x="13.7733%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (15 samples, 0.01%)</title><rect x="13.5538%" y="613" width="0.0143%" height="15" fill="rgb(218,1,36)" fg:x="14237" fg:w="15"/><text x="13.8038%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (15 samples, 0.01%)</title><rect x="13.5538%" y="597" width="0.0143%" height="15" fill="rgb(246,84,54)" fg:x="14237" fg:w="15"/><text x="13.8038%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (64 samples, 0.06%)</title><rect x="13.5147%" y="645" width="0.0609%" height="15" fill="rgb(242,110,6)" fg:x="14196" fg:w="64"/><text x="13.7647%" y="655.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (59 samples, 0.06%)</title><rect x="13.5195%" y="629" width="0.0562%" height="15" fill="rgb(214,47,5)" fg:x="14201" fg:w="59"/><text x="13.7695%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (17 samples, 0.02%)</title><rect x="13.5871%" y="597" width="0.0162%" height="15" fill="rgb(218,159,25)" fg:x="14272" fg:w="17"/><text x="13.8371%" y="607.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (15 samples, 0.01%)</title><rect x="13.5890%" y="581" width="0.0143%" height="15" fill="rgb(215,211,28)" fg:x="14274" fg:w="15"/><text x="13.8390%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (13 samples, 0.01%)</title><rect x="13.6099%" y="565" width="0.0124%" height="15" fill="rgb(238,59,32)" fg:x="14296" fg:w="13"/><text x="13.8599%" y="575.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="13.6099%" y="549" width="0.0124%" height="15" fill="rgb(226,82,3)" fg:x="14296" fg:w="13"/><text x="13.8599%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="13.6033%" y="597" width="0.0209%" height="15" fill="rgb(240,164,32)" fg:x="14289" fg:w="22"/><text x="13.8533%" y="607.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (21 samples, 0.02%)</title><rect x="13.6042%" y="581" width="0.0200%" height="15" fill="rgb(232,46,7)" fg:x="14290" fg:w="21"/><text x="13.8542%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (52 samples, 0.05%)</title><rect x="13.5757%" y="645" width="0.0495%" height="15" fill="rgb(229,129,53)" fg:x="14260" fg:w="52"/><text x="13.8257%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.05%)</title><rect x="13.5785%" y="629" width="0.0466%" height="15" fill="rgb(234,188,29)" fg:x="14263" fg:w="49"/><text x="13.8285%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (46 samples, 0.04%)</title><rect x="13.5814%" y="613" width="0.0438%" height="15" fill="rgb(246,141,4)" fg:x="14266" fg:w="46"/><text x="13.8314%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::empty (21 samples, 0.02%)</title><rect x="13.6252%" y="645" width="0.0200%" height="15" fill="rgb(229,23,39)" fg:x="14312" fg:w="21"/><text x="13.8752%" y="655.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (21 samples, 0.02%)</title><rect x="13.6252%" y="629" width="0.0200%" height="15" fill="rgb(206,12,3)" fg:x="14312" fg:w="21"/><text x="13.8752%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (743 samples, 0.71%)</title><rect x="13.1730%" y="693" width="0.7073%" height="15" fill="rgb(252,226,20)" fg:x="13837" fg:w="743"/><text x="13.4230%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (743 samples, 0.71%)</title><rect x="13.1730%" y="677" width="0.7073%" height="15" fill="rgb(216,123,35)" fg:x="13837" fg:w="743"/><text x="13.4230%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (721 samples, 0.69%)</title><rect x="13.1939%" y="661" width="0.6864%" height="15" fill="rgb(212,68,40)" fg:x="13859" fg:w="721"/><text x="13.4439%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (247 samples, 0.24%)</title><rect x="13.6451%" y="645" width="0.2351%" height="15" fill="rgb(254,125,32)" fg:x="14333" fg:w="247"/><text x="13.8951%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (247 samples, 0.24%)</title><rect x="13.6451%" y="629" width="0.2351%" height="15" fill="rgb(253,97,22)" fg:x="14333" fg:w="247"/><text x="13.8951%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (2,020 samples, 1.92%)</title><rect x="11.9744%" y="725" width="1.9231%" height="15" fill="rgb(241,101,14)" fg:x="12578" fg:w="2020"/><text x="12.2244%" y="735.50">&lt;..</text></g><g><title>rust_alloc (773 samples, 0.74%)</title><rect x="13.1615%" y="709" width="0.7359%" height="15" fill="rgb(238,103,29)" fg:x="13825" fg:w="773"/><text x="13.4115%" y="719.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (18 samples, 0.02%)</title><rect x="13.8803%" y="693" width="0.0171%" height="15" fill="rgb(233,195,47)" fg:x="14580" fg:w="18"/><text x="14.1303%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="14.1373%" y="549" width="0.0200%" height="15" fill="rgb(246,218,30)" fg:x="14850" fg:w="21"/><text x="14.3873%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (21 samples, 0.02%)</title><rect x="14.1373%" y="533" width="0.0200%" height="15" fill="rgb(219,145,47)" fg:x="14850" fg:w="21"/><text x="14.3873%" y="543.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (18 samples, 0.02%)</title><rect x="14.1402%" y="517" width="0.0171%" height="15" fill="rgb(243,12,26)" fg:x="14853" fg:w="18"/><text x="14.3902%" y="527.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="14.1440%" y="501" width="0.0133%" height="15" fill="rgb(214,87,16)" fg:x="14857" fg:w="14"/><text x="14.3940%" y="511.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="14.1440%" y="485" width="0.0133%" height="15" fill="rgb(208,99,42)" fg:x="14857" fg:w="14"/><text x="14.3940%" y="495.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="14.1440%" y="469" width="0.0133%" height="15" fill="rgb(253,99,2)" fg:x="14857" fg:w="14"/><text x="14.3940%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (23 samples, 0.02%)</title><rect x="14.1621%" y="549" width="0.0219%" height="15" fill="rgb(220,168,23)" fg:x="14876" fg:w="23"/><text x="14.4121%" y="559.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (23 samples, 0.02%)</title><rect x="14.1621%" y="533" width="0.0219%" height="15" fill="rgb(242,38,24)" fg:x="14876" fg:w="23"/><text x="14.4121%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (373 samples, 0.36%)</title><rect x="14.1231%" y="597" width="0.3551%" height="15" fill="rgb(225,182,9)" fg:x="14835" fg:w="373"/><text x="14.3731%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (373 samples, 0.36%)</title><rect x="14.1231%" y="581" width="0.3551%" height="15" fill="rgb(243,178,37)" fg:x="14835" fg:w="373"/><text x="14.3731%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (364 samples, 0.35%)</title><rect x="14.1316%" y="565" width="0.3465%" height="15" fill="rgb(232,139,19)" fg:x="14844" fg:w="364"/><text x="14.3816%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (309 samples, 0.29%)</title><rect x="14.1840%" y="549" width="0.2942%" height="15" fill="rgb(225,201,24)" fg:x="14899" fg:w="309"/><text x="14.4340%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (309 samples, 0.29%)</title><rect x="14.1840%" y="533" width="0.2942%" height="15" fill="rgb(221,47,46)" fg:x="14899" fg:w="309"/><text x="14.4340%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (385 samples, 0.37%)</title><rect x="14.1164%" y="709" width="0.3665%" height="15" fill="rgb(249,23,13)" fg:x="14828" fg:w="385"/><text x="14.3664%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (385 samples, 0.37%)</title><rect x="14.1164%" y="693" width="0.3665%" height="15" fill="rgb(219,9,5)" fg:x="14828" fg:w="385"/><text x="14.3664%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (385 samples, 0.37%)</title><rect x="14.1164%" y="677" width="0.3665%" height="15" fill="rgb(254,171,16)" fg:x="14828" fg:w="385"/><text x="14.3664%" y="687.50"></text></g><g><title>alloc::alloc::alloc (384 samples, 0.37%)</title><rect x="14.1173%" y="661" width="0.3656%" height="15" fill="rgb(230,171,20)" fg:x="14829" fg:w="384"/><text x="14.3673%" y="671.50"></text></g><g><title>__rg_alloc (384 samples, 0.37%)</title><rect x="14.1173%" y="645" width="0.3656%" height="15" fill="rgb(210,71,41)" fg:x="14829" fg:w="384"/><text x="14.3673%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (384 samples, 0.37%)</title><rect x="14.1173%" y="629" width="0.3656%" height="15" fill="rgb(206,173,20)" fg:x="14829" fg:w="384"/><text x="14.3673%" y="639.50"></text></g><g><title>rust_alloc (384 samples, 0.37%)</title><rect x="14.1173%" y="613" width="0.3656%" height="15" fill="rgb(233,88,34)" fg:x="14829" fg:w="384"/><text x="14.3673%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="14.4924%" y="709" width="0.0114%" height="15" fill="rgb(223,209,46)" fg:x="15223" fg:w="12"/><text x="14.7424%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="14.5048%" y="709" width="0.0124%" height="15" fill="rgb(250,43,18)" fg:x="15236" fg:w="13"/><text x="14.7548%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="14.5048%" y="693" width="0.0124%" height="15" fill="rgb(208,13,10)" fg:x="15236" fg:w="13"/><text x="14.7548%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="14.5048%" y="677" width="0.0124%" height="15" fill="rgb(212,200,36)" fg:x="15236" fg:w="13"/><text x="14.7548%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="14.5048%" y="661" width="0.0124%" height="15" fill="rgb(225,90,30)" fg:x="15236" fg:w="13"/><text x="14.7548%" y="671.50"></text></g><g><title>core::time::Duration::as_nanos (11 samples, 0.01%)</title><rect x="14.5448%" y="693" width="0.0105%" height="15" fill="rgb(236,182,39)" fg:x="15278" fg:w="11"/><text x="14.7948%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (59 samples, 0.06%)</title><rect x="14.6048%" y="645" width="0.0562%" height="15" fill="rgb(212,144,35)" fg:x="15341" fg:w="59"/><text x="14.8548%" y="655.50"></text></g><g><title>core::cmp::PartialOrd::ge (59 samples, 0.06%)</title><rect x="14.6048%" y="629" width="0.0562%" height="15" fill="rgb(228,63,44)" fg:x="15341" fg:w="59"/><text x="14.8548%" y="639.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (56 samples, 0.05%)</title><rect x="14.6076%" y="613" width="0.0533%" height="15" fill="rgb(228,109,6)" fg:x="15344" fg:w="56"/><text x="14.8576%" y="623.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (56 samples, 0.05%)</title><rect x="14.6076%" y="597" width="0.0533%" height="15" fill="rgb(238,117,24)" fg:x="15344" fg:w="56"/><text x="14.8576%" y="607.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (56 samples, 0.05%)</title><rect x="14.6076%" y="581" width="0.0533%" height="15" fill="rgb(242,26,26)" fg:x="15344" fg:w="56"/><text x="14.8576%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (24 samples, 0.02%)</title><rect x="14.6381%" y="565" width="0.0228%" height="15" fill="rgb(221,92,48)" fg:x="15376" fg:w="24"/><text x="14.8881%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (137 samples, 0.13%)</title><rect x="14.5553%" y="677" width="0.1304%" height="15" fill="rgb(209,209,32)" fg:x="15289" fg:w="137"/><text x="14.8053%" y="687.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (137 samples, 0.13%)</title><rect x="14.5553%" y="661" width="0.1304%" height="15" fill="rgb(221,70,22)" fg:x="15289" fg:w="137"/><text x="14.8053%" y="671.50"></text></g><g><title>core::time::Duration::new (26 samples, 0.02%)</title><rect x="14.6609%" y="645" width="0.0248%" height="15" fill="rgb(248,145,5)" fg:x="15400" fg:w="26"/><text x="14.9109%" y="655.50"></text></g><g><title>std::time::SystemTime::duration_since (145 samples, 0.14%)</title><rect x="14.5553%" y="693" width="0.1380%" height="15" fill="rgb(226,116,26)" fg:x="15289" fg:w="145"/><text x="14.8053%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,261 samples, 7.86%)</title><rect x="7.5037%" y="821" width="7.8645%" height="15" fill="rgb(244,5,17)" fg:x="7882" fg:w="8261"/><text x="7.7537%" y="831.50">tremor_runt..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,565 samples, 3.39%)</title><rect x="11.9744%" y="805" width="3.3939%" height="15" fill="rgb(252,159,33)" fg:x="12578" fg:w="3565"/><text x="12.2244%" y="815.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,565 samples, 3.39%)</title><rect x="11.9744%" y="789" width="3.3939%" height="15" fill="rgb(206,71,0)" fg:x="12578" fg:w="3565"/><text x="12.2244%" y="799.50">&lt;co..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (3,565 samples, 3.39%)</title><rect x="11.9744%" y="773" width="3.3939%" height="15" fill="rgb(233,118,54)" fg:x="12578" fg:w="3565"/><text x="12.2244%" y="783.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (3,565 samples, 3.39%)</title><rect x="11.9744%" y="757" width="3.3939%" height="15" fill="rgb(234,83,48)" fg:x="12578" fg:w="3565"/><text x="12.2244%" y="767.50">tre..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (3,565 samples, 3.39%)</title><rect x="11.9744%" y="741" width="3.3939%" height="15" fill="rgb(228,3,54)" fg:x="12578" fg:w="3565"/><text x="12.2244%" y="751.50">tre..</text></g><g><title>tremor_runtime::postprocessor::postprocess (1,545 samples, 1.47%)</title><rect x="13.8974%" y="725" width="1.4709%" height="15" fill="rgb(226,155,13)" fg:x="14598" fg:w="1545"/><text x="14.1474%" y="735.50"></text></g><g><title>tremor_common::time::nanotime (887 samples, 0.84%)</title><rect x="14.5239%" y="709" width="0.8444%" height="15" fill="rgb(241,28,37)" fg:x="15256" fg:w="887"/><text x="14.7739%" y="719.50"></text></g><g><title>std::time::SystemTime::now (709 samples, 0.67%)</title><rect x="14.6933%" y="693" width="0.6750%" height="15" fill="rgb(233,93,10)" fg:x="15434" fg:w="709"/><text x="14.9433%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (709 samples, 0.67%)</title><rect x="14.6933%" y="677" width="0.6750%" height="15" fill="rgb(225,113,19)" fg:x="15434" fg:w="709"/><text x="14.9433%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::now (709 samples, 0.67%)</title><rect x="14.6933%" y="661" width="0.6750%" height="15" fill="rgb(241,2,18)" fg:x="15434" fg:w="709"/><text x="14.9433%" y="671.50"></text></g><g><title>__clock_gettime_2 (576 samples, 0.55%)</title><rect x="14.8199%" y="645" width="0.5484%" height="15" fill="rgb(228,207,21)" fg:x="15567" fg:w="576"/><text x="15.0699%" y="655.50"></text></g><g><title>__vdso_clock_gettime (552 samples, 0.53%)</title><rect x="14.8428%" y="629" width="0.5255%" height="15" fill="rgb(213,211,35)" fg:x="15591" fg:w="552"/><text x="15.0928%" y="639.50"></text></g><g><title>[[vdso]] (381 samples, 0.36%)</title><rect x="15.0056%" y="613" width="0.3627%" height="15" fill="rgb(209,83,10)" fg:x="15762" fg:w="381"/><text x="15.2556%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.01%)</title><rect x="15.6653%" y="741" width="0.0133%" height="15" fill="rgb(209,164,1)" fg:x="16455" fg:w="14"/><text x="15.9153%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (14 samples, 0.01%)</title><rect x="15.6653%" y="725" width="0.0133%" height="15" fill="rgb(213,184,43)" fg:x="16455" fg:w="14"/><text x="15.9153%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.01%)</title><rect x="15.6653%" y="709" width="0.0133%" height="15" fill="rgb(231,61,34)" fg:x="16455" fg:w="14"/><text x="15.9153%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (359 samples, 0.34%)</title><rect x="15.6844%" y="741" width="0.3418%" height="15" fill="rgb(235,75,3)" fg:x="16475" fg:w="359"/><text x="15.9344%" y="751.50"></text></g><g><title>core::ptr::read (329 samples, 0.31%)</title><rect x="15.7129%" y="725" width="0.3132%" height="15" fill="rgb(220,106,47)" fg:x="16505" fg:w="329"/><text x="15.9629%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (316 samples, 0.30%)</title><rect x="15.7253%" y="709" width="0.3008%" height="15" fill="rgb(210,196,33)" fg:x="16518" fg:w="316"/><text x="15.9753%" y="719.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="16.0261%" y="741" width="0.0105%" height="15" fill="rgb(229,154,42)" fg:x="16834" fg:w="11"/><text x="16.2761%" y="751.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (11 samples, 0.01%)</title><rect x="16.0261%" y="725" width="0.0105%" height="15" fill="rgb(228,114,26)" fg:x="16834" fg:w="11"/><text x="16.2761%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (159 samples, 0.15%)</title><rect x="16.0956%" y="725" width="0.1514%" height="15" fill="rgb(208,144,1)" fg:x="16907" fg:w="159"/><text x="16.3456%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (48 samples, 0.05%)</title><rect x="16.4269%" y="677" width="0.0457%" height="15" fill="rgb(239,112,37)" fg:x="17255" fg:w="48"/><text x="16.6769%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (443 samples, 0.42%)</title><rect x="16.5669%" y="661" width="0.4217%" height="15" fill="rgb(210,96,50)" fg:x="17402" fg:w="443"/><text x="16.8169%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (443 samples, 0.42%)</title><rect x="16.5669%" y="645" width="0.4217%" height="15" fill="rgb(222,178,2)" fg:x="17402" fg:w="443"/><text x="16.8169%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (464 samples, 0.44%)</title><rect x="16.9886%" y="661" width="0.4417%" height="15" fill="rgb(226,74,18)" fg:x="17845" fg:w="464"/><text x="17.2386%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (459 samples, 0.44%)</title><rect x="16.9934%" y="645" width="0.4370%" height="15" fill="rgb(225,67,54)" fg:x="17850" fg:w="459"/><text x="17.2434%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,013 samples, 0.96%)</title><rect x="16.4726%" y="677" width="0.9644%" height="15" fill="rgb(251,92,32)" fg:x="17303" fg:w="1013"/><text x="16.7226%" y="687.50"></text></g><g><title>_raw_spin_lock (23 samples, 0.02%)</title><rect x="17.5827%" y="469" width="0.0219%" height="15" fill="rgb(228,149,22)" fg:x="18469" fg:w="23"/><text x="17.8327%" y="479.50"></text></g><g><title>futex_wake_mark (39 samples, 0.04%)</title><rect x="17.6103%" y="469" width="0.0371%" height="15" fill="rgb(243,54,13)" fg:x="18498" fg:w="39"/><text x="17.8603%" y="479.50"></text></g><g><title>__futex_unqueue (15 samples, 0.01%)</title><rect x="17.6331%" y="453" width="0.0143%" height="15" fill="rgb(243,180,28)" fg:x="18522" fg:w="15"/><text x="17.8831%" y="463.50"></text></g><g><title>ttwu_do_activate (17 samples, 0.02%)</title><rect x="17.6940%" y="437" width="0.0162%" height="15" fill="rgb(208,167,24)" fg:x="18586" fg:w="17"/><text x="17.9440%" y="447.50"></text></g><g><title>enqueue_task (17 samples, 0.02%)</title><rect x="17.6940%" y="421" width="0.0162%" height="15" fill="rgb(245,73,45)" fg:x="18586" fg:w="17"/><text x="17.9440%" y="431.50"></text></g><g><title>__smp_call_single_queue (15 samples, 0.01%)</title><rect x="17.7331%" y="421" width="0.0143%" height="15" fill="rgb(237,203,48)" fg:x="18627" fg:w="15"/><text x="17.9831%" y="431.50"></text></g><g><title>llist_add_batch (14 samples, 0.01%)</title><rect x="17.7340%" y="405" width="0.0133%" height="15" fill="rgb(211,197,16)" fg:x="18628" fg:w="14"/><text x="17.9840%" y="415.50"></text></g><g><title>__x2apic_send_IPI_dest (14 samples, 0.01%)</title><rect x="17.7474%" y="421" width="0.0133%" height="15" fill="rgb(243,99,51)" fg:x="18642" fg:w="14"/><text x="17.9974%" y="431.50"></text></g><g><title>native_write_msr (14 samples, 0.01%)</title><rect x="17.7474%" y="405" width="0.0133%" height="15" fill="rgb(215,123,29)" fg:x="18642" fg:w="14"/><text x="17.9974%" y="415.50"></text></g><g><title>ttwu_queue_wakelist (72 samples, 0.07%)</title><rect x="17.7140%" y="437" width="0.0685%" height="15" fill="rgb(239,186,37)" fg:x="18607" fg:w="72"/><text x="17.9640%" y="447.50"></text></g><g><title>x2apic_send_IPI (13 samples, 0.01%)</title><rect x="17.7702%" y="421" width="0.0124%" height="15" fill="rgb(252,136,39)" fg:x="18666" fg:w="13"/><text x="18.0202%" y="431.50"></text></g><g><title>__x64_sys_futex (273 samples, 0.26%)</title><rect x="17.5265%" y="517" width="0.2599%" height="15" fill="rgb(223,213,32)" fg:x="18410" fg:w="273"/><text x="17.7765%" y="527.50"></text></g><g><title>do_futex (261 samples, 0.25%)</title><rect x="17.5379%" y="501" width="0.2485%" height="15" fill="rgb(233,115,5)" fg:x="18422" fg:w="261"/><text x="17.7879%" y="511.50"></text></g><g><title>futex_wake (257 samples, 0.24%)</title><rect x="17.5417%" y="485" width="0.2447%" height="15" fill="rgb(207,226,44)" fg:x="18426" fg:w="257"/><text x="17.7917%" y="495.50"></text></g><g><title>wake_up_q (134 samples, 0.13%)</title><rect x="17.6588%" y="469" width="0.1276%" height="15" fill="rgb(208,126,0)" fg:x="18549" fg:w="134"/><text x="17.9088%" y="479.50"></text></g><g><title>try_to_wake_up (121 samples, 0.12%)</title><rect x="17.6712%" y="453" width="0.1152%" height="15" fill="rgb(244,66,21)" fg:x="18562" fg:w="121"/><text x="17.9212%" y="463.50"></text></g><g><title>syscall_exit_to_user_mode (126 samples, 0.12%)</title><rect x="17.7883%" y="517" width="0.1200%" height="15" fill="rgb(222,97,12)" fg:x="18685" fg:w="126"/><text x="18.0383%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (419 samples, 0.40%)</title><rect x="17.5132%" y="549" width="0.3989%" height="15" fill="rgb(219,213,19)" fg:x="18396" fg:w="419"/><text x="17.7632%" y="559.50"></text></g><g><title>do_syscall_64 (413 samples, 0.39%)</title><rect x="17.5189%" y="533" width="0.3932%" height="15" fill="rgb(252,169,30)" fg:x="18402" fg:w="413"/><text x="17.7689%" y="543.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (479 samples, 0.46%)</title><rect x="17.4608%" y="581" width="0.4560%" height="15" fill="rgb(206,32,51)" fg:x="18341" fg:w="479"/><text x="17.7108%" y="591.50"></text></g><g><title>__GI___lll_lock_wake (438 samples, 0.42%)</title><rect x="17.4998%" y="565" width="0.4170%" height="15" fill="rgb(250,172,42)" fg:x="18382" fg:w="438"/><text x="17.7498%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (487 samples, 0.46%)</title><rect x="17.4541%" y="661" width="0.4636%" height="15" fill="rgb(209,34,43)" fg:x="18334" fg:w="487"/><text x="17.7041%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (482 samples, 0.46%)</title><rect x="17.4589%" y="645" width="0.4589%" height="15" fill="rgb(223,11,35)" fg:x="18339" fg:w="482"/><text x="17.7089%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (482 samples, 0.46%)</title><rect x="17.4589%" y="629" width="0.4589%" height="15" fill="rgb(251,219,26)" fg:x="18339" fg:w="482"/><text x="17.7089%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (481 samples, 0.46%)</title><rect x="17.4598%" y="613" width="0.4579%" height="15" fill="rgb(231,119,3)" fg:x="18340" fg:w="481"/><text x="17.7098%" y="623.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (480 samples, 0.46%)</title><rect x="17.4608%" y="597" width="0.4570%" height="15" fill="rgb(216,97,11)" fg:x="18341" fg:w="480"/><text x="17.7108%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (39 samples, 0.04%)</title><rect x="17.9178%" y="661" width="0.0371%" height="15" fill="rgb(223,59,9)" fg:x="18821" fg:w="39"/><text x="18.1678%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (39 samples, 0.04%)</title><rect x="17.9178%" y="645" width="0.0371%" height="15" fill="rgb(233,93,31)" fg:x="18821" fg:w="39"/><text x="18.1678%" y="655.50"></text></g><g><title>__x64_sys_futex (30 samples, 0.03%)</title><rect x="18.0986%" y="533" width="0.0286%" height="15" fill="rgb(239,81,33)" fg:x="19011" fg:w="30"/><text x="18.3486%" y="543.50"></text></g><g><title>do_futex (27 samples, 0.03%)</title><rect x="18.1015%" y="517" width="0.0257%" height="15" fill="rgb(213,120,34)" fg:x="19014" fg:w="27"/><text x="18.3515%" y="527.50"></text></g><g><title>futex_wait (27 samples, 0.03%)</title><rect x="18.1015%" y="501" width="0.0257%" height="15" fill="rgb(243,49,53)" fg:x="19014" fg:w="27"/><text x="18.3515%" y="511.50"></text></g><g><title>futex_wait_setup (20 samples, 0.02%)</title><rect x="18.1082%" y="485" width="0.0190%" height="15" fill="rgb(247,216,33)" fg:x="19021" fg:w="20"/><text x="18.3582%" y="495.50"></text></g><g><title>syscall_exit_to_user_mode (17 samples, 0.02%)</title><rect x="18.1282%" y="533" width="0.0162%" height="15" fill="rgb(226,26,14)" fg:x="19042" fg:w="17"/><text x="18.3782%" y="543.50"></text></g><g><title>event_listener::Inner::lock (198 samples, 0.19%)</title><rect x="17.9616%" y="661" width="0.1885%" height="15" fill="rgb(215,49,53)" fg:x="18867" fg:w="198"/><text x="18.2116%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (196 samples, 0.19%)</title><rect x="17.9635%" y="645" width="0.1866%" height="15" fill="rgb(245,162,40)" fg:x="18869" fg:w="196"/><text x="18.2135%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (186 samples, 0.18%)</title><rect x="17.9730%" y="629" width="0.1771%" height="15" fill="rgb(229,68,17)" fg:x="18879" fg:w="186"/><text x="18.2230%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (175 samples, 0.17%)</title><rect x="17.9835%" y="613" width="0.1666%" height="15" fill="rgb(213,182,10)" fg:x="18890" fg:w="175"/><text x="18.2335%" y="623.50"></text></g><g><title>___pthread_mutex_lock (175 samples, 0.17%)</title><rect x="17.9835%" y="597" width="0.1666%" height="15" fill="rgb(245,125,30)" fg:x="18890" fg:w="175"/><text x="18.2335%" y="607.50"></text></g><g><title>__GI___lll_lock_wait (80 samples, 0.08%)</title><rect x="18.0739%" y="581" width="0.0762%" height="15" fill="rgb(232,202,2)" fg:x="18985" fg:w="80"/><text x="18.3239%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (56 samples, 0.05%)</title><rect x="18.0967%" y="565" width="0.0533%" height="15" fill="rgb(237,140,51)" fg:x="19009" fg:w="56"/><text x="18.3467%" y="575.50"></text></g><g><title>do_syscall_64 (55 samples, 0.05%)</title><rect x="18.0977%" y="549" width="0.0524%" height="15" fill="rgb(236,157,25)" fg:x="19010" fg:w="55"/><text x="18.3477%" y="559.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,691 samples, 2.56%)</title><rect x="16.3926%" y="693" width="2.5619%" height="15" fill="rgb(219,209,0)" fg:x="17219" fg:w="2691"/><text x="16.6426%" y="703.50">as..</text></g><g><title>event_listener::Event::notify (1,594 samples, 1.52%)</title><rect x="17.4370%" y="677" width="1.5175%" height="15" fill="rgb(240,116,54)" fg:x="18316" fg:w="1594"/><text x="17.6870%" y="687.50"></text></g><g><title>event_listener::full_fence (845 samples, 0.80%)</title><rect x="18.1501%" y="661" width="0.8044%" height="15" fill="rgb(216,10,36)" fg:x="19065" fg:w="845"/><text x="18.4001%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (824 samples, 0.78%)</title><rect x="18.1700%" y="645" width="0.7845%" height="15" fill="rgb(222,72,44)" fg:x="19086" fg:w="824"/><text x="18.4200%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (824 samples, 0.78%)</title><rect x="18.1700%" y="629" width="0.7845%" height="15" fill="rgb(232,159,9)" fg:x="19086" fg:w="824"/><text x="18.4200%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (824 samples, 0.78%)</title><rect x="18.1700%" y="613" width="0.7845%" height="15" fill="rgb(210,39,32)" fg:x="19086" fg:w="824"/><text x="18.4200%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (28 samples, 0.03%)</title><rect x="18.9545%" y="693" width="0.0267%" height="15" fill="rgb(216,194,45)" fg:x="19910" fg:w="28"/><text x="19.2045%" y="703.50"></text></g><g><title>__x64_sys_futex (12 samples, 0.01%)</title><rect x="18.9983%" y="533" width="0.0114%" height="15" fill="rgb(218,18,35)" fg:x="19956" fg:w="12"/><text x="19.2483%" y="543.50"></text></g><g><title>do_futex (12 samples, 0.01%)</title><rect x="18.9983%" y="517" width="0.0114%" height="15" fill="rgb(207,83,51)" fg:x="19956" fg:w="12"/><text x="19.2483%" y="527.50"></text></g><g><title>syscall_exit_to_user_mode (19 samples, 0.02%)</title><rect x="19.0107%" y="533" width="0.0181%" height="15" fill="rgb(225,63,43)" fg:x="19969" fg:w="19"/><text x="19.2607%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.03%)</title><rect x="18.9983%" y="565" width="0.0314%" height="15" fill="rgb(207,57,36)" fg:x="19956" fg:w="33"/><text x="19.2483%" y="575.50"></text></g><g><title>do_syscall_64 (33 samples, 0.03%)</title><rect x="18.9983%" y="549" width="0.0314%" height="15" fill="rgb(216,99,33)" fg:x="19956" fg:w="33"/><text x="19.2483%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (40 samples, 0.04%)</title><rect x="18.9926%" y="677" width="0.0381%" height="15" fill="rgb(225,42,16)" fg:x="19950" fg:w="40"/><text x="19.2426%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (40 samples, 0.04%)</title><rect x="18.9926%" y="661" width="0.0381%" height="15" fill="rgb(220,201,45)" fg:x="19950" fg:w="40"/><text x="19.2426%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="18.9926%" y="645" width="0.0381%" height="15" fill="rgb(225,33,4)" fg:x="19950" fg:w="40"/><text x="19.2426%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.04%)</title><rect x="18.9926%" y="629" width="0.0381%" height="15" fill="rgb(224,33,50)" fg:x="19950" fg:w="40"/><text x="19.2426%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (40 samples, 0.04%)</title><rect x="18.9926%" y="613" width="0.0381%" height="15" fill="rgb(246,198,51)" fg:x="19950" fg:w="40"/><text x="19.2426%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (40 samples, 0.04%)</title><rect x="18.9926%" y="597" width="0.0381%" height="15" fill="rgb(205,22,4)" fg:x="19950" fg:w="40"/><text x="19.2426%" y="607.50"></text></g><g><title>__GI___lll_lock_wake (36 samples, 0.03%)</title><rect x="18.9964%" y="581" width="0.0343%" height="15" fill="rgb(206,3,8)" fg:x="19954" fg:w="36"/><text x="19.2464%" y="591.50"></text></g><g><title>dequeue_entity (12 samples, 0.01%)</title><rect x="19.0621%" y="437" width="0.0114%" height="15" fill="rgb(251,23,15)" fg:x="20023" fg:w="12"/><text x="19.3121%" y="447.50"></text></g><g><title>dequeue_task_fair (16 samples, 0.02%)</title><rect x="19.0592%" y="453" width="0.0152%" height="15" fill="rgb(252,88,28)" fg:x="20020" fg:w="16"/><text x="19.3092%" y="463.50"></text></g><g><title>futex_wait_queue (53 samples, 0.05%)</title><rect x="19.0497%" y="501" width="0.0505%" height="15" fill="rgb(212,127,14)" fg:x="20010" fg:w="53"/><text x="19.2997%" y="511.50"></text></g><g><title>schedule (48 samples, 0.05%)</title><rect x="19.0545%" y="485" width="0.0457%" height="15" fill="rgb(247,145,37)" fg:x="20015" fg:w="48"/><text x="19.3045%" y="495.50"></text></g><g><title>__schedule (48 samples, 0.05%)</title><rect x="19.0545%" y="469" width="0.0457%" height="15" fill="rgb(209,117,53)" fg:x="20015" fg:w="48"/><text x="19.3045%" y="479.50"></text></g><g><title>__x64_sys_futex (73 samples, 0.07%)</title><rect x="19.0411%" y="549" width="0.0695%" height="15" fill="rgb(212,90,42)" fg:x="20001" fg:w="73"/><text x="19.2911%" y="559.50"></text></g><g><title>do_futex (72 samples, 0.07%)</title><rect x="19.0421%" y="533" width="0.0685%" height="15" fill="rgb(218,164,37)" fg:x="20002" fg:w="72"/><text x="19.2921%" y="543.50"></text></g><g><title>futex_wait (69 samples, 0.07%)</title><rect x="19.0449%" y="517" width="0.0657%" height="15" fill="rgb(246,65,34)" fg:x="20005" fg:w="69"/><text x="19.2949%" y="527.50"></text></g><g><title>futex_wait_setup (11 samples, 0.01%)</title><rect x="19.1002%" y="501" width="0.0105%" height="15" fill="rgb(231,100,33)" fg:x="20063" fg:w="11"/><text x="19.3502%" y="511.50"></text></g><g><title>syscall_exit_to_user_mode (17 samples, 0.02%)</title><rect x="19.1106%" y="549" width="0.0162%" height="15" fill="rgb(228,126,14)" fg:x="20074" fg:w="17"/><text x="19.3606%" y="559.50"></text></g><g><title>event_listener::Inner::lock (100 samples, 0.10%)</title><rect x="19.0335%" y="677" width="0.0952%" height="15" fill="rgb(215,173,21)" fg:x="19993" fg:w="100"/><text x="19.2835%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (100 samples, 0.10%)</title><rect x="19.0335%" y="661" width="0.0952%" height="15" fill="rgb(210,6,40)" fg:x="19993" fg:w="100"/><text x="19.2835%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (99 samples, 0.09%)</title><rect x="19.0345%" y="645" width="0.0942%" height="15" fill="rgb(212,48,18)" fg:x="19994" fg:w="99"/><text x="19.2845%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (99 samples, 0.09%)</title><rect x="19.0345%" y="629" width="0.0942%" height="15" fill="rgb(230,214,11)" fg:x="19994" fg:w="99"/><text x="19.2845%" y="639.50"></text></g><g><title>___pthread_mutex_lock (99 samples, 0.09%)</title><rect x="19.0345%" y="613" width="0.0942%" height="15" fill="rgb(254,105,39)" fg:x="19994" fg:w="99"/><text x="19.2845%" y="623.50"></text></g><g><title>__GI___lll_lock_wait (95 samples, 0.09%)</title><rect x="19.0383%" y="597" width="0.0904%" height="15" fill="rgb(245,158,5)" fg:x="19998" fg:w="95"/><text x="19.2883%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (93 samples, 0.09%)</title><rect x="19.0402%" y="581" width="0.0885%" height="15" fill="rgb(249,208,11)" fg:x="20000" fg:w="93"/><text x="19.2902%" y="591.50"></text></g><g><title>do_syscall_64 (93 samples, 0.09%)</title><rect x="19.0402%" y="565" width="0.0885%" height="15" fill="rgb(210,39,28)" fg:x="20000" fg:w="93"/><text x="19.2902%" y="575.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (3,184 samples, 3.03%)</title><rect x="16.3251%" y="709" width="3.0312%" height="15" fill="rgb(211,56,53)" fg:x="17148" fg:w="3184"/><text x="16.5751%" y="719.50">&lt;as..</text></g><g><title>event_listener::Event::notify (392 samples, 0.37%)</title><rect x="18.9831%" y="693" width="0.3732%" height="15" fill="rgb(226,201,30)" fg:x="19940" fg:w="392"/><text x="19.2331%" y="703.50"></text></g><g><title>event_listener::full_fence (239 samples, 0.23%)</title><rect x="19.1287%" y="677" width="0.2275%" height="15" fill="rgb(239,101,34)" fg:x="20093" fg:w="239"/><text x="19.3787%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (230 samples, 0.22%)</title><rect x="19.1373%" y="661" width="0.2190%" height="15" fill="rgb(226,209,5)" fg:x="20102" fg:w="230"/><text x="19.3873%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (230 samples, 0.22%)</title><rect x="19.1373%" y="645" width="0.2190%" height="15" fill="rgb(250,105,47)" fg:x="20102" fg:w="230"/><text x="19.3873%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (230 samples, 0.22%)</title><rect x="19.1373%" y="629" width="0.2190%" height="15" fill="rgb(230,72,3)" fg:x="20102" fg:w="230"/><text x="19.3873%" y="639.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="19.3639%" y="661" width="0.0124%" height="15" fill="rgb(232,218,39)" fg:x="20340" fg:w="13"/><text x="19.6139%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,510 samples, 3.34%)</title><rect x="16.0366%" y="741" width="3.3416%" height="15" fill="rgb(248,166,6)" fg:x="16845" fg:w="3510"/><text x="16.2866%" y="751.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (3,289 samples, 3.13%)</title><rect x="16.2470%" y="725" width="3.1312%" height="15" fill="rgb(247,89,20)" fg:x="17066" fg:w="3289"/><text x="16.4970%" y="735.50">tre..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="19.3563%" y="709" width="0.0219%" height="15" fill="rgb(248,130,54)" fg:x="20332" fg:w="23"/><text x="19.6063%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (15 samples, 0.01%)</title><rect x="19.3639%" y="693" width="0.0143%" height="15" fill="rgb(234,196,4)" fg:x="20340" fg:w="15"/><text x="19.6139%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (15 samples, 0.01%)</title><rect x="19.3639%" y="677" width="0.0143%" height="15" fill="rgb(250,143,31)" fg:x="20340" fg:w="15"/><text x="19.6139%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="19.3877%" y="581" width="0.0124%" height="15" fill="rgb(211,110,34)" fg:x="20365" fg:w="13"/><text x="19.6377%" y="591.50"></text></g><g><title>size_to_sizeclass (54 samples, 0.05%)</title><rect x="19.4315%" y="437" width="0.0514%" height="15" fill="rgb(215,124,48)" fg:x="20411" fg:w="54"/><text x="19.6815%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="19.4933%" y="421" width="0.0419%" height="15" fill="rgb(216,46,13)" fg:x="20476" fg:w="44"/><text x="19.7433%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (44 samples, 0.04%)</title><rect x="19.4933%" y="405" width="0.0419%" height="15" fill="rgb(205,184,25)" fg:x="20476" fg:w="44"/><text x="19.7433%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (40 samples, 0.04%)</title><rect x="19.4971%" y="389" width="0.0381%" height="15" fill="rgb(228,1,10)" fg:x="20480" fg:w="40"/><text x="19.7471%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (33 samples, 0.03%)</title><rect x="19.5038%" y="373" width="0.0314%" height="15" fill="rgb(213,116,27)" fg:x="20487" fg:w="33"/><text x="19.7538%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (33 samples, 0.03%)</title><rect x="19.5038%" y="357" width="0.0314%" height="15" fill="rgb(241,95,50)" fg:x="20487" fg:w="33"/><text x="19.7538%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (33 samples, 0.03%)</title><rect x="19.5038%" y="341" width="0.0314%" height="15" fill="rgb(238,48,32)" fg:x="20487" fg:w="33"/><text x="19.7538%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (116 samples, 0.11%)</title><rect x="19.5381%" y="421" width="0.1104%" height="15" fill="rgb(235,113,49)" fg:x="20523" fg:w="116"/><text x="19.7881%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (116 samples, 0.11%)</title><rect x="19.5381%" y="405" width="0.1104%" height="15" fill="rgb(205,127,43)" fg:x="20523" fg:w="116"/><text x="19.7881%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (575 samples, 0.55%)</title><rect x="19.4305%" y="469" width="0.5474%" height="15" fill="rgb(250,162,2)" fg:x="20410" fg:w="575"/><text x="19.6805%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (574 samples, 0.55%)</title><rect x="19.4315%" y="453" width="0.5465%" height="15" fill="rgb(220,13,41)" fg:x="20411" fg:w="574"/><text x="19.6815%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (520 samples, 0.50%)</title><rect x="19.4829%" y="437" width="0.4950%" height="15" fill="rgb(249,221,25)" fg:x="20465" fg:w="520"/><text x="19.7329%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (346 samples, 0.33%)</title><rect x="19.6485%" y="421" width="0.3294%" height="15" fill="rgb(215,208,19)" fg:x="20639" fg:w="346"/><text x="19.8985%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (346 samples, 0.33%)</title><rect x="19.6485%" y="405" width="0.3294%" height="15" fill="rgb(236,175,2)" fg:x="20639" fg:w="346"/><text x="19.8985%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (626 samples, 0.60%)</title><rect x="19.3877%" y="613" width="0.5960%" height="15" fill="rgb(241,52,2)" fg:x="20365" fg:w="626"/><text x="19.6377%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (626 samples, 0.60%)</title><rect x="19.3877%" y="597" width="0.5960%" height="15" fill="rgb(248,140,14)" fg:x="20365" fg:w="626"/><text x="19.6377%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (613 samples, 0.58%)</title><rect x="19.4000%" y="581" width="0.5836%" height="15" fill="rgb(253,22,42)" fg:x="20378" fg:w="613"/><text x="19.6500%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (613 samples, 0.58%)</title><rect x="19.4000%" y="565" width="0.5836%" height="15" fill="rgb(234,61,47)" fg:x="20378" fg:w="613"/><text x="19.6500%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (613 samples, 0.58%)</title><rect x="19.4000%" y="549" width="0.5836%" height="15" fill="rgb(208,226,15)" fg:x="20378" fg:w="613"/><text x="19.6500%" y="559.50"></text></g><g><title>alloc::alloc::alloc (591 samples, 0.56%)</title><rect x="19.4210%" y="533" width="0.5626%" height="15" fill="rgb(217,221,4)" fg:x="20400" fg:w="591"/><text x="19.6710%" y="543.50"></text></g><g><title>__rg_alloc (591 samples, 0.56%)</title><rect x="19.4210%" y="517" width="0.5626%" height="15" fill="rgb(212,174,34)" fg:x="20400" fg:w="591"/><text x="19.6710%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (591 samples, 0.56%)</title><rect x="19.4210%" y="501" width="0.5626%" height="15" fill="rgb(253,83,4)" fg:x="20400" fg:w="591"/><text x="19.6710%" y="511.50"></text></g><g><title>rust_alloc (591 samples, 0.56%)</title><rect x="19.4210%" y="485" width="0.5626%" height="15" fill="rgb(250,195,49)" fg:x="20400" fg:w="591"/><text x="19.6710%" y="495.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (678 samples, 0.65%)</title><rect x="19.3877%" y="741" width="0.6455%" height="15" fill="rgb(241,192,25)" fg:x="20365" fg:w="678"/><text x="19.6377%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (678 samples, 0.65%)</title><rect x="19.3877%" y="725" width="0.6455%" height="15" fill="rgb(208,124,10)" fg:x="20365" fg:w="678"/><text x="19.6377%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (678 samples, 0.65%)</title><rect x="19.3877%" y="709" width="0.6455%" height="15" fill="rgb(222,33,0)" fg:x="20365" fg:w="678"/><text x="19.6377%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (678 samples, 0.65%)</title><rect x="19.3877%" y="693" width="0.6455%" height="15" fill="rgb(234,209,28)" fg:x="20365" fg:w="678"/><text x="19.6377%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (678 samples, 0.65%)</title><rect x="19.3877%" y="677" width="0.6455%" height="15" fill="rgb(224,11,23)" fg:x="20365" fg:w="678"/><text x="19.6377%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (678 samples, 0.65%)</title><rect x="19.3877%" y="661" width="0.6455%" height="15" fill="rgb(232,99,1)" fg:x="20365" fg:w="678"/><text x="19.6377%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (678 samples, 0.65%)</title><rect x="19.3877%" y="645" width="0.6455%" height="15" fill="rgb(237,95,45)" fg:x="20365" fg:w="678"/><text x="19.6377%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (678 samples, 0.65%)</title><rect x="19.3877%" y="629" width="0.6455%" height="15" fill="rgb(208,109,11)" fg:x="20365" fg:w="678"/><text x="19.6377%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (52 samples, 0.05%)</title><rect x="19.9836%" y="613" width="0.0495%" height="15" fill="rgb(216,190,48)" fg:x="20991" fg:w="52"/><text x="20.2336%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (52 samples, 0.05%)</title><rect x="19.9836%" y="597" width="0.0495%" height="15" fill="rgb(251,171,36)" fg:x="20991" fg:w="52"/><text x="20.2336%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (41 samples, 0.04%)</title><rect x="19.9941%" y="581" width="0.0390%" height="15" fill="rgb(230,62,22)" fg:x="21002" fg:w="41"/><text x="20.2441%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (837 samples, 0.80%)</title><rect x="20.0331%" y="741" width="0.7968%" height="15" fill="rgb(225,114,35)" fg:x="21043" fg:w="837"/><text x="20.2831%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (463 samples, 0.44%)</title><rect x="20.8452%" y="725" width="0.4408%" height="15" fill="rgb(215,118,42)" fg:x="21896" fg:w="463"/><text x="21.0952%" y="735.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="21.3050%" y="613" width="0.0133%" height="15" fill="rgb(243,119,21)" fg:x="22379" fg:w="14"/><text x="21.5550%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="21.3498%" y="453" width="0.0181%" height="15" fill="rgb(252,177,53)" fg:x="22426" fg:w="19"/><text x="21.5998%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="21.3498%" y="437" width="0.0181%" height="15" fill="rgb(237,209,29)" fg:x="22426" fg:w="19"/><text x="21.5998%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (39 samples, 0.04%)</title><rect x="21.3402%" y="501" width="0.0371%" height="15" fill="rgb(212,65,23)" fg:x="22416" fg:w="39"/><text x="21.5902%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (39 samples, 0.04%)</title><rect x="21.3402%" y="485" width="0.0371%" height="15" fill="rgb(230,222,46)" fg:x="22416" fg:w="39"/><text x="21.5902%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (33 samples, 0.03%)</title><rect x="21.3460%" y="469" width="0.0314%" height="15" fill="rgb(215,135,32)" fg:x="22422" fg:w="33"/><text x="21.5960%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (52 samples, 0.05%)</title><rect x="21.3402%" y="517" width="0.0495%" height="15" fill="rgb(246,101,22)" fg:x="22416" fg:w="52"/><text x="21.5902%" y="527.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="21.3774%" y="501" width="0.0124%" height="15" fill="rgb(206,107,13)" fg:x="22455" fg:w="13"/><text x="21.6274%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="21.3774%" y="485" width="0.0124%" height="15" fill="rgb(250,100,44)" fg:x="22455" fg:w="13"/><text x="21.6274%" y="495.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="21.3774%" y="469" width="0.0124%" height="15" fill="rgb(231,147,38)" fg:x="22455" fg:w="13"/><text x="21.6274%" y="479.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="21.3774%" y="453" width="0.0124%" height="15" fill="rgb(229,8,40)" fg:x="22455" fg:w="13"/><text x="21.6274%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (74 samples, 0.07%)</title><rect x="21.3326%" y="533" width="0.0704%" height="15" fill="rgb(221,135,30)" fg:x="22408" fg:w="74"/><text x="21.5826%" y="543.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="21.3916%" y="517" width="0.0114%" height="15" fill="rgb(249,193,18)" fg:x="22470" fg:w="12"/><text x="21.6416%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="21.3916%" y="501" width="0.0114%" height="15" fill="rgb(209,133,39)" fg:x="22470" fg:w="12"/><text x="21.6416%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="21.3916%" y="485" width="0.0114%" height="15" fill="rgb(232,100,14)" fg:x="22470" fg:w="12"/><text x="21.6416%" y="495.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="21.3916%" y="469" width="0.0114%" height="15" fill="rgb(224,185,1)" fg:x="22470" fg:w="12"/><text x="21.6416%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (45 samples, 0.04%)</title><rect x="21.4278%" y="517" width="0.0428%" height="15" fill="rgb(223,139,8)" fg:x="22508" fg:w="45"/><text x="21.6778%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (406 samples, 0.39%)</title><rect x="21.3326%" y="565" width="0.3865%" height="15" fill="rgb(232,213,38)" fg:x="22408" fg:w="406"/><text x="21.5826%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (406 samples, 0.39%)</title><rect x="21.3326%" y="549" width="0.3865%" height="15" fill="rgb(207,94,22)" fg:x="22408" fg:w="406"/><text x="21.5826%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (332 samples, 0.32%)</title><rect x="21.4031%" y="533" width="0.3161%" height="15" fill="rgb(219,183,54)" fg:x="22482" fg:w="332"/><text x="21.6531%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (261 samples, 0.25%)</title><rect x="21.4707%" y="517" width="0.2485%" height="15" fill="rgb(216,185,54)" fg:x="22553" fg:w="261"/><text x="21.7207%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (261 samples, 0.25%)</title><rect x="21.4707%" y="501" width="0.2485%" height="15" fill="rgb(254,217,39)" fg:x="22553" fg:w="261"/><text x="21.7207%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (261 samples, 0.25%)</title><rect x="21.4707%" y="485" width="0.2485%" height="15" fill="rgb(240,178,23)" fg:x="22553" fg:w="261"/><text x="21.7207%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (22 samples, 0.02%)</title><rect x="21.7353%" y="517" width="0.0209%" height="15" fill="rgb(218,11,47)" fg:x="22831" fg:w="22"/><text x="21.9853%" y="527.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (19 samples, 0.02%)</title><rect x="21.7382%" y="501" width="0.0181%" height="15" fill="rgb(218,51,51)" fg:x="22834" fg:w="19"/><text x="21.9882%" y="511.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (17 samples, 0.02%)</title><rect x="21.7401%" y="485" width="0.0162%" height="15" fill="rgb(238,126,27)" fg:x="22836" fg:w="17"/><text x="21.9901%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (20 samples, 0.02%)</title><rect x="21.7563%" y="501" width="0.0190%" height="15" fill="rgb(249,202,22)" fg:x="22853" fg:w="20"/><text x="22.0063%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (20 samples, 0.02%)</title><rect x="21.7563%" y="485" width="0.0190%" height="15" fill="rgb(254,195,49)" fg:x="22853" fg:w="20"/><text x="22.0063%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (11 samples, 0.01%)</title><rect x="21.7886%" y="485" width="0.0105%" height="15" fill="rgb(208,123,14)" fg:x="22887" fg:w="11"/><text x="22.0386%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="21.7886%" y="469" width="0.0105%" height="15" fill="rgb(224,200,8)" fg:x="22887" fg:w="11"/><text x="22.0386%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (78 samples, 0.07%)</title><rect x="21.7277%" y="565" width="0.0743%" height="15" fill="rgb(217,61,36)" fg:x="22823" fg:w="78"/><text x="21.9777%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="21.7296%" y="549" width="0.0724%" height="15" fill="rgb(206,35,45)" fg:x="22825" fg:w="76"/><text x="21.9796%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (73 samples, 0.07%)</title><rect x="21.7325%" y="533" width="0.0695%" height="15" fill="rgb(217,65,33)" fg:x="22828" fg:w="73"/><text x="21.9825%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.05%)</title><rect x="21.7563%" y="517" width="0.0457%" height="15" fill="rgb(222,158,48)" fg:x="22853" fg:w="48"/><text x="22.0063%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (28 samples, 0.03%)</title><rect x="21.7753%" y="501" width="0.0267%" height="15" fill="rgb(254,2,54)" fg:x="22873" fg:w="28"/><text x="22.0253%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (609 samples, 0.58%)</title><rect x="21.3183%" y="613" width="0.5798%" height="15" fill="rgb(250,143,38)" fg:x="22393" fg:w="609"/><text x="21.5683%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (609 samples, 0.58%)</title><rect x="21.3183%" y="597" width="0.5798%" height="15" fill="rgb(248,25,0)" fg:x="22393" fg:w="609"/><text x="21.5683%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (600 samples, 0.57%)</title><rect x="21.3269%" y="581" width="0.5712%" height="15" fill="rgb(206,152,27)" fg:x="22402" fg:w="600"/><text x="21.5769%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (96 samples, 0.09%)</title><rect x="21.8067%" y="565" width="0.0914%" height="15" fill="rgb(240,77,30)" fg:x="22906" fg:w="96"/><text x="22.0567%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (96 samples, 0.09%)</title><rect x="21.8067%" y="549" width="0.0914%" height="15" fill="rgb(231,5,3)" fg:x="22906" fg:w="96"/><text x="22.0567%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,127 samples, 1.07%)</title><rect x="20.8300%" y="741" width="1.0729%" height="15" fill="rgb(207,226,32)" fg:x="21880" fg:w="1127"/><text x="21.0800%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (648 samples, 0.62%)</title><rect x="21.2860%" y="725" width="0.6169%" height="15" fill="rgb(222,207,47)" fg:x="22359" fg:w="648"/><text x="21.5360%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (648 samples, 0.62%)</title><rect x="21.2860%" y="709" width="0.6169%" height="15" fill="rgb(229,115,45)" fg:x="22359" fg:w="648"/><text x="21.5360%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (648 samples, 0.62%)</title><rect x="21.2860%" y="693" width="0.6169%" height="15" fill="rgb(224,191,6)" fg:x="22359" fg:w="648"/><text x="21.5360%" y="703.50"></text></g><g><title>alloc::alloc::alloc (648 samples, 0.62%)</title><rect x="21.2860%" y="677" width="0.6169%" height="15" fill="rgb(230,227,24)" fg:x="22359" fg:w="648"/><text x="21.5360%" y="687.50"></text></g><g><title>__rg_alloc (648 samples, 0.62%)</title><rect x="21.2860%" y="661" width="0.6169%" height="15" fill="rgb(228,80,19)" fg:x="22359" fg:w="648"/><text x="21.5360%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (648 samples, 0.62%)</title><rect x="21.2860%" y="645" width="0.6169%" height="15" fill="rgb(247,229,0)" fg:x="22359" fg:w="648"/><text x="21.5360%" y="655.50"></text></g><g><title>rust_alloc (638 samples, 0.61%)</title><rect x="21.2955%" y="629" width="0.6074%" height="15" fill="rgb(237,194,15)" fg:x="22369" fg:w="638"/><text x="21.5455%" y="639.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (13 samples, 0.01%)</title><rect x="21.9095%" y="709" width="0.0124%" height="15" fill="rgb(219,203,20)" fg:x="23014" fg:w="13"/><text x="22.1595%" y="719.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (12 samples, 0.01%)</title><rect x="21.9105%" y="693" width="0.0114%" height="15" fill="rgb(234,128,8)" fg:x="23015" fg:w="12"/><text x="22.1605%" y="703.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (12 samples, 0.01%)</title><rect x="21.9105%" y="677" width="0.0114%" height="15" fill="rgb(248,202,8)" fg:x="23015" fg:w="12"/><text x="22.1605%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="21.9105%" y="661" width="0.0114%" height="15" fill="rgb(206,104,37)" fg:x="23015" fg:w="12"/><text x="22.1605%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (11 samples, 0.01%)</title><rect x="21.9114%" y="645" width="0.0105%" height="15" fill="rgb(223,8,27)" fg:x="23016" fg:w="11"/><text x="22.1614%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="21.9229%" y="645" width="0.0114%" height="15" fill="rgb(216,217,28)" fg:x="23028" fg:w="12"/><text x="22.1729%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="21.9238%" y="629" width="0.0105%" height="15" fill="rgb(249,199,1)" fg:x="23029" fg:w="11"/><text x="22.1738%" y="639.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="21.9238%" y="613" width="0.0105%" height="15" fill="rgb(240,85,17)" fg:x="23029" fg:w="11"/><text x="22.1738%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="21.9238%" y="597" width="0.0105%" height="15" fill="rgb(206,108,45)" fg:x="23029" fg:w="11"/><text x="22.1738%" y="607.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="21.9219%" y="693" width="0.0190%" height="15" fill="rgb(245,210,41)" fg:x="23027" fg:w="20"/><text x="22.1719%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (19 samples, 0.02%)</title><rect x="21.9229%" y="677" width="0.0181%" height="15" fill="rgb(206,13,37)" fg:x="23028" fg:w="19"/><text x="22.1729%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="21.9229%" y="661" width="0.0181%" height="15" fill="rgb(250,61,18)" fg:x="23028" fg:w="19"/><text x="22.1729%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (21 samples, 0.02%)</title><rect x="21.9219%" y="709" width="0.0200%" height="15" fill="rgb(235,172,48)" fg:x="23027" fg:w="21"/><text x="22.1719%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="21.9029%" y="725" width="0.0486%" height="15" fill="rgb(249,201,17)" fg:x="23007" fg:w="51"/><text x="22.1529%" y="735.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="21.9533%" y="709" width="0.0124%" height="15" fill="rgb(219,208,6)" fg:x="23060" fg:w="13"/><text x="22.2033%" y="719.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="21.9686%" y="693" width="0.0133%" height="15" fill="rgb(248,31,23)" fg:x="23076" fg:w="14"/><text x="22.2186%" y="703.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="21.9705%" y="677" width="0.0114%" height="15" fill="rgb(245,15,42)" fg:x="23078" fg:w="12"/><text x="22.2205%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="22.0190%" y="581" width="0.0143%" height="15" fill="rgb(222,217,39)" fg:x="23129" fg:w="15"/><text x="22.2690%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="22.0200%" y="565" width="0.0133%" height="15" fill="rgb(210,219,27)" fg:x="23130" fg:w="14"/><text x="22.2700%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (56 samples, 0.05%)</title><rect x="21.9943%" y="629" width="0.0533%" height="15" fill="rgb(252,166,36)" fg:x="23103" fg:w="56"/><text x="22.2443%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (56 samples, 0.05%)</title><rect x="21.9943%" y="613" width="0.0533%" height="15" fill="rgb(245,132,34)" fg:x="23103" fg:w="56"/><text x="22.2443%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (52 samples, 0.05%)</title><rect x="21.9981%" y="597" width="0.0495%" height="15" fill="rgb(236,54,3)" fg:x="23107" fg:w="52"/><text x="22.2481%" y="607.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="22.0333%" y="581" width="0.0143%" height="15" fill="rgb(241,173,43)" fg:x="23144" fg:w="15"/><text x="22.2833%" y="591.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="22.0333%" y="565" width="0.0143%" height="15" fill="rgb(215,190,9)" fg:x="23144" fg:w="15"/><text x="22.2833%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (87 samples, 0.08%)</title><rect x="21.9819%" y="661" width="0.0828%" height="15" fill="rgb(242,101,16)" fg:x="23090" fg:w="87"/><text x="22.2319%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (87 samples, 0.08%)</title><rect x="21.9819%" y="645" width="0.0828%" height="15" fill="rgb(223,190,21)" fg:x="23090" fg:w="87"/><text x="22.2319%" y="655.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="22.0476%" y="629" width="0.0171%" height="15" fill="rgb(215,228,25)" fg:x="23159" fg:w="18"/><text x="22.2976%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (88 samples, 0.08%)</title><rect x="21.9819%" y="693" width="0.0838%" height="15" fill="rgb(225,36,22)" fg:x="23090" fg:w="88"/><text x="22.2319%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (88 samples, 0.08%)</title><rect x="21.9819%" y="677" width="0.0838%" height="15" fill="rgb(251,106,46)" fg:x="23090" fg:w="88"/><text x="22.2319%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (120 samples, 0.11%)</title><rect x="21.9657%" y="709" width="0.1142%" height="15" fill="rgb(208,90,1)" fg:x="23073" fg:w="120"/><text x="22.2157%" y="719.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="22.0657%" y="693" width="0.0143%" height="15" fill="rgb(243,10,4)" fg:x="23178" fg:w="15"/><text x="22.3157%" y="703.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="22.0657%" y="677" width="0.0143%" height="15" fill="rgb(212,137,27)" fg:x="23178" fg:w="15"/><text x="22.3157%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="22.0657%" y="661" width="0.0143%" height="15" fill="rgb(231,220,49)" fg:x="23178" fg:w="15"/><text x="22.3157%" y="671.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="22.0657%" y="645" width="0.0143%" height="15" fill="rgb(237,96,20)" fg:x="23178" fg:w="15"/><text x="22.3157%" y="655.50"></text></g><g><title>rust_dealloc (144 samples, 0.14%)</title><rect x="21.9514%" y="725" width="0.1371%" height="15" fill="rgb(239,229,30)" fg:x="23058" fg:w="144"/><text x="22.2014%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (210 samples, 0.20%)</title><rect x="21.9029%" y="741" width="0.1999%" height="15" fill="rgb(219,65,33)" fg:x="23007" fg:w="210"/><text x="22.1529%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (15 samples, 0.01%)</title><rect x="22.0885%" y="725" width="0.0143%" height="15" fill="rgb(243,134,7)" fg:x="23202" fg:w="15"/><text x="22.3385%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="22.1104%" y="741" width="0.0124%" height="15" fill="rgb(216,177,54)" fg:x="23225" fg:w="13"/><text x="22.3604%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt; (13 samples, 0.01%)</title><rect x="22.1104%" y="725" width="0.0124%" height="15" fill="rgb(211,160,20)" fg:x="23225" fg:w="13"/><text x="22.3604%" y="735.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (55 samples, 0.05%)</title><rect x="22.1304%" y="741" width="0.0524%" height="15" fill="rgb(239,85,39)" fg:x="23246" fg:w="55"/><text x="22.3804%" y="751.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (55 samples, 0.05%)</title><rect x="22.1304%" y="725" width="0.0524%" height="15" fill="rgb(232,125,22)" fg:x="23246" fg:w="55"/><text x="22.3804%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (55 samples, 0.05%)</title><rect x="22.1304%" y="709" width="0.0524%" height="15" fill="rgb(244,57,34)" fg:x="23246" fg:w="55"/><text x="22.3804%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (55 samples, 0.05%)</title><rect x="22.1304%" y="693" width="0.0524%" height="15" fill="rgb(214,203,32)" fg:x="23246" fg:w="55"/><text x="22.3804%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (37 samples, 0.04%)</title><rect x="22.1475%" y="677" width="0.0352%" height="15" fill="rgb(207,58,43)" fg:x="23264" fg:w="37"/><text x="22.3975%" y="687.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (37 samples, 0.04%)</title><rect x="22.1475%" y="661" width="0.0352%" height="15" fill="rgb(215,193,15)" fg:x="23264" fg:w="37"/><text x="22.3975%" y="671.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (37 samples, 0.04%)</title><rect x="22.1475%" y="645" width="0.0352%" height="15" fill="rgb(232,15,44)" fg:x="23264" fg:w="37"/><text x="22.3975%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (37 samples, 0.04%)</title><rect x="22.1475%" y="629" width="0.0352%" height="15" fill="rgb(212,3,48)" fg:x="23264" fg:w="37"/><text x="22.3975%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (24 samples, 0.02%)</title><rect x="22.1599%" y="613" width="0.0228%" height="15" fill="rgb(218,128,7)" fg:x="23277" fg:w="24"/><text x="22.4099%" y="623.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (14 samples, 0.01%)</title><rect x="22.1847%" y="741" width="0.0133%" height="15" fill="rgb(226,216,39)" fg:x="23303" fg:w="14"/><text x="22.4347%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,288 samples, 6.94%)</title><rect x="15.3683%" y="773" width="6.9382%" height="15" fill="rgb(243,47,51)" fg:x="16143" fg:w="7288"/><text x="15.6183%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (7,275 samples, 6.93%)</title><rect x="15.3807%" y="757" width="6.9259%" height="15" fill="rgb(241,183,40)" fg:x="16156" fg:w="7275"/><text x="15.6307%" y="767.50">tremor_ru..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (114 samples, 0.11%)</title><rect x="22.1980%" y="741" width="0.1085%" height="15" fill="rgb(231,217,32)" fg:x="23317" fg:w="114"/><text x="22.4480%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (114 samples, 0.11%)</title><rect x="22.1980%" y="725" width="0.1085%" height="15" fill="rgb(229,61,38)" fg:x="23317" fg:w="114"/><text x="22.4480%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (114 samples, 0.11%)</title><rect x="22.1980%" y="709" width="0.1085%" height="15" fill="rgb(225,210,5)" fg:x="23317" fg:w="114"/><text x="22.4480%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (63 samples, 0.06%)</title><rect x="22.2466%" y="693" width="0.0600%" height="15" fill="rgb(231,79,45)" fg:x="23368" fg:w="63"/><text x="22.4966%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.01%)</title><rect x="23.4128%" y="757" width="0.0143%" height="15" fill="rgb(224,100,7)" fg:x="24593" fg:w="15"/><text x="23.6628%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.02%)</title><rect x="23.4270%" y="757" width="0.0238%" height="15" fill="rgb(241,198,18)" fg:x="24608" fg:w="25"/><text x="23.6770%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="23.4508%" y="757" width="0.0133%" height="15" fill="rgb(252,97,53)" fg:x="24633" fg:w="14"/><text x="23.7008%" y="767.50"></text></g><g><title>aligned_size (20 samples, 0.02%)</title><rect x="23.8478%" y="517" width="0.0190%" height="15" fill="rgb(220,88,7)" fg:x="25050" fg:w="20"/><text x="24.0978%" y="527.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="23.8669%" y="517" width="0.0114%" height="15" fill="rgb(213,176,14)" fg:x="25070" fg:w="12"/><text x="24.1169%" y="527.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="23.8850%" y="485" width="0.0133%" height="15" fill="rgb(246,73,7)" fg:x="25089" fg:w="14"/><text x="24.1350%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (227 samples, 0.22%)</title><rect x="23.8117%" y="661" width="0.2161%" height="15" fill="rgb(245,64,36)" fg:x="25012" fg:w="227"/><text x="24.0617%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (227 samples, 0.22%)</title><rect x="23.8117%" y="645" width="0.2161%" height="15" fill="rgb(245,80,10)" fg:x="25012" fg:w="227"/><text x="24.0617%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (227 samples, 0.22%)</title><rect x="23.8117%" y="629" width="0.2161%" height="15" fill="rgb(232,107,50)" fg:x="25012" fg:w="227"/><text x="24.0617%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (209 samples, 0.20%)</title><rect x="23.8288%" y="613" width="0.1990%" height="15" fill="rgb(253,3,0)" fg:x="25030" fg:w="209"/><text x="24.0788%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (209 samples, 0.20%)</title><rect x="23.8288%" y="597" width="0.1990%" height="15" fill="rgb(212,99,53)" fg:x="25030" fg:w="209"/><text x="24.0788%" y="607.50"></text></g><g><title>alloc::alloc::alloc (209 samples, 0.20%)</title><rect x="23.8288%" y="581" width="0.1990%" height="15" fill="rgb(249,111,54)" fg:x="25030" fg:w="209"/><text x="24.0788%" y="591.50"></text></g><g><title>__rg_alloc (209 samples, 0.20%)</title><rect x="23.8288%" y="565" width="0.1990%" height="15" fill="rgb(249,55,30)" fg:x="25030" fg:w="209"/><text x="24.0788%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (209 samples, 0.20%)</title><rect x="23.8288%" y="549" width="0.1990%" height="15" fill="rgb(237,47,42)" fg:x="25030" fg:w="209"/><text x="24.0788%" y="559.50"></text></g><g><title>rust_alloc (189 samples, 0.18%)</title><rect x="23.8478%" y="533" width="0.1799%" height="15" fill="rgb(211,20,18)" fg:x="25050" fg:w="189"/><text x="24.0978%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (157 samples, 0.15%)</title><rect x="23.8783%" y="517" width="0.1495%" height="15" fill="rgb(231,203,46)" fg:x="25082" fg:w="157"/><text x="24.1283%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (157 samples, 0.15%)</title><rect x="23.8783%" y="501" width="0.1495%" height="15" fill="rgb(237,142,3)" fg:x="25082" fg:w="157"/><text x="24.1283%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (136 samples, 0.13%)</title><rect x="23.8983%" y="485" width="0.1295%" height="15" fill="rgb(241,107,1)" fg:x="25103" fg:w="136"/><text x="24.1483%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (114 samples, 0.11%)</title><rect x="23.9192%" y="469" width="0.1085%" height="15" fill="rgb(229,83,13)" fg:x="25125" fg:w="114"/><text x="24.1692%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (114 samples, 0.11%)</title><rect x="23.9192%" y="453" width="0.1085%" height="15" fill="rgb(241,91,40)" fg:x="25125" fg:w="114"/><text x="24.1692%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (318 samples, 0.30%)</title><rect x="23.7802%" y="741" width="0.3027%" height="15" fill="rgb(225,3,45)" fg:x="24979" fg:w="318"/><text x="24.0302%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (285 samples, 0.27%)</title><rect x="23.8117%" y="725" width="0.2713%" height="15" fill="rgb(244,223,14)" fg:x="25012" fg:w="285"/><text x="24.0617%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (285 samples, 0.27%)</title><rect x="23.8117%" y="709" width="0.2713%" height="15" fill="rgb(224,124,37)" fg:x="25012" fg:w="285"/><text x="24.0617%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (285 samples, 0.27%)</title><rect x="23.8117%" y="693" width="0.2713%" height="15" fill="rgb(251,171,30)" fg:x="25012" fg:w="285"/><text x="24.0617%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (285 samples, 0.27%)</title><rect x="23.8117%" y="677" width="0.2713%" height="15" fill="rgb(236,46,54)" fg:x="25012" fg:w="285"/><text x="24.0617%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (58 samples, 0.06%)</title><rect x="24.0278%" y="661" width="0.0552%" height="15" fill="rgb(245,213,5)" fg:x="25239" fg:w="58"/><text x="24.2778%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (58 samples, 0.06%)</title><rect x="24.0278%" y="645" width="0.0552%" height="15" fill="rgb(230,144,27)" fg:x="25239" fg:w="58"/><text x="24.2778%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (43 samples, 0.04%)</title><rect x="24.0420%" y="629" width="0.0409%" height="15" fill="rgb(220,86,6)" fg:x="25254" fg:w="43"/><text x="24.2920%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (79 samples, 0.08%)</title><rect x="24.1325%" y="453" width="0.0752%" height="15" fill="rgb(240,20,13)" fg:x="25349" fg:w="79"/><text x="24.3825%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (79 samples, 0.08%)</title><rect x="24.1325%" y="437" width="0.0752%" height="15" fill="rgb(217,89,34)" fg:x="25349" fg:w="79"/><text x="24.3825%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (69 samples, 0.07%)</title><rect x="24.1420%" y="421" width="0.0657%" height="15" fill="rgb(229,13,5)" fg:x="25359" fg:w="69"/><text x="24.3920%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (59 samples, 0.06%)</title><rect x="24.1515%" y="405" width="0.0562%" height="15" fill="rgb(244,67,35)" fg:x="25369" fg:w="59"/><text x="24.4015%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (59 samples, 0.06%)</title><rect x="24.1515%" y="389" width="0.0562%" height="15" fill="rgb(221,40,2)" fg:x="25369" fg:w="59"/><text x="24.4015%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (120 samples, 0.11%)</title><rect x="24.1011%" y="597" width="0.1142%" height="15" fill="rgb(237,157,21)" fg:x="25316" fg:w="120"/><text x="24.3511%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (120 samples, 0.11%)</title><rect x="24.1011%" y="581" width="0.1142%" height="15" fill="rgb(222,94,11)" fg:x="25316" fg:w="120"/><text x="24.3511%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (120 samples, 0.11%)</title><rect x="24.1011%" y="565" width="0.1142%" height="15" fill="rgb(249,113,6)" fg:x="25316" fg:w="120"/><text x="24.3511%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (117 samples, 0.11%)</title><rect x="24.1039%" y="549" width="0.1114%" height="15" fill="rgb(238,137,36)" fg:x="25319" fg:w="117"/><text x="24.3539%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (117 samples, 0.11%)</title><rect x="24.1039%" y="533" width="0.1114%" height="15" fill="rgb(210,102,26)" fg:x="25319" fg:w="117"/><text x="24.3539%" y="543.50"></text></g><g><title>alloc::alloc::alloc (108 samples, 0.10%)</title><rect x="24.1125%" y="517" width="0.1028%" height="15" fill="rgb(218,30,30)" fg:x="25328" fg:w="108"/><text x="24.3625%" y="527.50"></text></g><g><title>__rg_alloc (108 samples, 0.10%)</title><rect x="24.1125%" y="501" width="0.1028%" height="15" fill="rgb(214,67,26)" fg:x="25328" fg:w="108"/><text x="24.3625%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (108 samples, 0.10%)</title><rect x="24.1125%" y="485" width="0.1028%" height="15" fill="rgb(251,9,53)" fg:x="25328" fg:w="108"/><text x="24.3625%" y="495.50"></text></g><g><title>rust_alloc (100 samples, 0.10%)</title><rect x="24.1201%" y="469" width="0.0952%" height="15" fill="rgb(228,204,25)" fg:x="25336" fg:w="100"/><text x="24.3701%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (205 samples, 0.20%)</title><rect x="24.0973%" y="677" width="0.1952%" height="15" fill="rgb(207,153,8)" fg:x="25312" fg:w="205"/><text x="24.3473%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (201 samples, 0.19%)</title><rect x="24.1011%" y="661" width="0.1914%" height="15" fill="rgb(242,9,16)" fg:x="25316" fg:w="201"/><text x="24.3511%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (201 samples, 0.19%)</title><rect x="24.1011%" y="645" width="0.1914%" height="15" fill="rgb(217,211,10)" fg:x="25316" fg:w="201"/><text x="24.3511%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (201 samples, 0.19%)</title><rect x="24.1011%" y="629" width="0.1914%" height="15" fill="rgb(219,228,52)" fg:x="25316" fg:w="201"/><text x="24.3511%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (201 samples, 0.19%)</title><rect x="24.1011%" y="613" width="0.1914%" height="15" fill="rgb(231,92,29)" fg:x="25316" fg:w="201"/><text x="24.3511%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (81 samples, 0.08%)</title><rect x="24.2153%" y="597" width="0.0771%" height="15" fill="rgb(232,8,23)" fg:x="25436" fg:w="81"/><text x="24.4653%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (81 samples, 0.08%)</title><rect x="24.2153%" y="581" width="0.0771%" height="15" fill="rgb(216,211,34)" fg:x="25436" fg:w="81"/><text x="24.4653%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (58 samples, 0.06%)</title><rect x="24.2372%" y="565" width="0.0552%" height="15" fill="rgb(236,151,0)" fg:x="25459" fg:w="58"/><text x="24.4872%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="24.2924%" y="677" width="0.0143%" height="15" fill="rgb(209,168,3)" fg:x="25517" fg:w="15"/><text x="24.5424%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (98 samples, 0.09%)</title><rect x="24.3400%" y="533" width="0.0933%" height="15" fill="rgb(208,129,28)" fg:x="25567" fg:w="98"/><text x="24.5900%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (98 samples, 0.09%)</title><rect x="24.3400%" y="517" width="0.0933%" height="15" fill="rgb(229,78,22)" fg:x="25567" fg:w="98"/><text x="24.5900%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="24.3486%" y="501" width="0.0847%" height="15" fill="rgb(228,187,13)" fg:x="25576" fg:w="89"/><text x="24.5986%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (81 samples, 0.08%)</title><rect x="24.3562%" y="485" width="0.0771%" height="15" fill="rgb(240,119,24)" fg:x="25584" fg:w="81"/><text x="24.6062%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (81 samples, 0.08%)</title><rect x="24.3562%" y="469" width="0.0771%" height="15" fill="rgb(209,194,42)" fg:x="25584" fg:w="81"/><text x="24.6062%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (126 samples, 0.12%)</title><rect x="24.3210%" y="629" width="0.1200%" height="15" fill="rgb(247,200,46)" fg:x="25547" fg:w="126"/><text x="24.5710%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (126 samples, 0.12%)</title><rect x="24.3210%" y="613" width="0.1200%" height="15" fill="rgb(218,76,16)" fg:x="25547" fg:w="126"/><text x="24.5710%" y="623.50"></text></g><g><title>alloc::alloc::alloc (113 samples, 0.11%)</title><rect x="24.3334%" y="597" width="0.1076%" height="15" fill="rgb(225,21,48)" fg:x="25560" fg:w="113"/><text x="24.5834%" y="607.50"></text></g><g><title>__rg_alloc (113 samples, 0.11%)</title><rect x="24.3334%" y="581" width="0.1076%" height="15" fill="rgb(239,223,50)" fg:x="25560" fg:w="113"/><text x="24.5834%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (113 samples, 0.11%)</title><rect x="24.3334%" y="565" width="0.1076%" height="15" fill="rgb(244,45,21)" fg:x="25560" fg:w="113"/><text x="24.5834%" y="575.50"></text></g><g><title>rust_alloc (110 samples, 0.10%)</title><rect x="24.3362%" y="549" width="0.1047%" height="15" fill="rgb(232,33,43)" fg:x="25563" fg:w="110"/><text x="24.5862%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (11 samples, 0.01%)</title><rect x="24.4409%" y="629" width="0.0105%" height="15" fill="rgb(209,8,3)" fg:x="25673" fg:w="11"/><text x="24.6909%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (158 samples, 0.15%)</title><rect x="24.3096%" y="677" width="0.1504%" height="15" fill="rgb(214,25,53)" fg:x="25535" fg:w="158"/><text x="24.5596%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (146 samples, 0.14%)</title><rect x="24.3210%" y="661" width="0.1390%" height="15" fill="rgb(254,186,54)" fg:x="25547" fg:w="146"/><text x="24.5710%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (146 samples, 0.14%)</title><rect x="24.3210%" y="645" width="0.1390%" height="15" fill="rgb(208,174,49)" fg:x="25547" fg:w="146"/><text x="24.5710%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (403 samples, 0.38%)</title><rect x="24.0963%" y="693" width="0.3837%" height="15" fill="rgb(233,191,51)" fg:x="25311" fg:w="403"/><text x="24.3463%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (20 samples, 0.02%)</title><rect x="24.4609%" y="677" width="0.0190%" height="15" fill="rgb(222,134,10)" fg:x="25694" fg:w="20"/><text x="24.7109%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (422 samples, 0.40%)</title><rect x="24.0830%" y="741" width="0.4017%" height="15" fill="rgb(230,226,20)" fg:x="25297" fg:w="422"/><text x="24.3330%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (408 samples, 0.39%)</title><rect x="24.0963%" y="725" width="0.3884%" height="15" fill="rgb(251,111,25)" fg:x="25311" fg:w="408"/><text x="24.3463%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (408 samples, 0.39%)</title><rect x="24.0963%" y="709" width="0.3884%" height="15" fill="rgb(224,40,46)" fg:x="25311" fg:w="408"/><text x="24.3463%" y="719.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,081 samples, 1.03%)</title><rect x="23.4642%" y="757" width="1.0291%" height="15" fill="rgb(236,108,47)" fg:x="24647" fg:w="1081"/><text x="23.7142%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (171 samples, 0.16%)</title><rect x="24.4933%" y="757" width="0.1628%" height="15" fill="rgb(234,93,0)" fg:x="25728" fg:w="171"/><text x="24.7433%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (11 samples, 0.01%)</title><rect x="24.6561%" y="757" width="0.0105%" height="15" fill="rgb(224,213,32)" fg:x="25899" fg:w="11"/><text x="24.9061%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (11 samples, 0.01%)</title><rect x="24.6561%" y="741" width="0.0105%" height="15" fill="rgb(251,11,48)" fg:x="25899" fg:w="11"/><text x="24.9061%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (401 samples, 0.38%)</title><rect x="24.6666%" y="757" width="0.3818%" height="15" fill="rgb(236,173,5)" fg:x="25910" fg:w="401"/><text x="24.9166%" y="767.50"></text></g><g><title>core::ptr::write (372 samples, 0.35%)</title><rect x="24.6942%" y="741" width="0.3541%" height="15" fill="rgb(230,95,12)" fg:x="25939" fg:w="372"/><text x="24.9442%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (370 samples, 0.35%)</title><rect x="24.6961%" y="725" width="0.3522%" height="15" fill="rgb(232,209,1)" fg:x="25941" fg:w="370"/><text x="24.9461%" y="735.50"></text></g><g><title>size_to_sizeclass (17 samples, 0.02%)</title><rect x="25.0950%" y="565" width="0.0162%" height="15" fill="rgb(232,6,1)" fg:x="26360" fg:w="17"/><text x="25.3450%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="25.1188%" y="549" width="0.0105%" height="15" fill="rgb(210,224,50)" fg:x="26385" fg:w="11"/><text x="25.3688%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="25.1188%" y="533" width="0.0105%" height="15" fill="rgb(228,127,35)" fg:x="26385" fg:w="11"/><text x="25.3688%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (113 samples, 0.11%)</title><rect x="25.0607%" y="693" width="0.1076%" height="15" fill="rgb(245,102,45)" fg:x="26324" fg:w="113"/><text x="25.3107%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (113 samples, 0.11%)</title><rect x="25.0607%" y="677" width="0.1076%" height="15" fill="rgb(214,1,49)" fg:x="26324" fg:w="113"/><text x="25.3107%" y="687.50"></text></g><g><title>alloc::alloc::alloc (107 samples, 0.10%)</title><rect x="25.0664%" y="661" width="0.1019%" height="15" fill="rgb(226,163,40)" fg:x="26330" fg:w="107"/><text x="25.3164%" y="671.50"></text></g><g><title>__rg_alloc (107 samples, 0.10%)</title><rect x="25.0664%" y="645" width="0.1019%" height="15" fill="rgb(239,212,28)" fg:x="26330" fg:w="107"/><text x="25.3164%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (107 samples, 0.10%)</title><rect x="25.0664%" y="629" width="0.1019%" height="15" fill="rgb(220,20,13)" fg:x="26330" fg:w="107"/><text x="25.3164%" y="639.50"></text></g><g><title>rust_alloc (95 samples, 0.09%)</title><rect x="25.0778%" y="613" width="0.0904%" height="15" fill="rgb(210,164,35)" fg:x="26342" fg:w="95"/><text x="25.3278%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (77 samples, 0.07%)</title><rect x="25.0950%" y="597" width="0.0733%" height="15" fill="rgb(248,109,41)" fg:x="26360" fg:w="77"/><text x="25.3450%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (77 samples, 0.07%)</title><rect x="25.0950%" y="581" width="0.0733%" height="15" fill="rgb(238,23,50)" fg:x="26360" fg:w="77"/><text x="25.3450%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.06%)</title><rect x="25.1111%" y="565" width="0.0571%" height="15" fill="rgb(211,48,49)" fg:x="26377" fg:w="60"/><text x="25.3611%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (37 samples, 0.04%)</title><rect x="25.1330%" y="549" width="0.0352%" height="15" fill="rgb(223,36,21)" fg:x="26400" fg:w="37"/><text x="25.3830%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (37 samples, 0.04%)</title><rect x="25.1330%" y="533" width="0.0352%" height="15" fill="rgb(207,123,46)" fg:x="26400" fg:w="37"/><text x="25.3830%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (12 samples, 0.01%)</title><rect x="25.1683%" y="693" width="0.0114%" height="15" fill="rgb(240,218,32)" fg:x="26437" fg:w="12"/><text x="25.4183%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (143 samples, 0.14%)</title><rect x="25.0483%" y="757" width="0.1361%" height="15" fill="rgb(252,5,43)" fg:x="26311" fg:w="143"/><text x="25.2983%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (143 samples, 0.14%)</title><rect x="25.0483%" y="741" width="0.1361%" height="15" fill="rgb(252,84,19)" fg:x="26311" fg:w="143"/><text x="25.2983%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (130 samples, 0.12%)</title><rect x="25.0607%" y="725" width="0.1238%" height="15" fill="rgb(243,152,39)" fg:x="26324" fg:w="130"/><text x="25.3107%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (130 samples, 0.12%)</title><rect x="25.0607%" y="709" width="0.1238%" height="15" fill="rgb(234,160,15)" fg:x="26324" fg:w="130"/><text x="25.3107%" y="719.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (37 samples, 0.04%)</title><rect x="25.2492%" y="453" width="0.0352%" height="15" fill="rgb(237,34,20)" fg:x="26522" fg:w="37"/><text x="25.4992%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (35 samples, 0.03%)</title><rect x="25.2511%" y="437" width="0.0333%" height="15" fill="rgb(229,97,13)" fg:x="26524" fg:w="35"/><text x="25.5011%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (77 samples, 0.07%)</title><rect x="25.2206%" y="501" width="0.0733%" height="15" fill="rgb(234,71,50)" fg:x="26492" fg:w="77"/><text x="25.4706%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (77 samples, 0.07%)</title><rect x="25.2206%" y="485" width="0.0733%" height="15" fill="rgb(253,155,4)" fg:x="26492" fg:w="77"/><text x="25.4706%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (76 samples, 0.07%)</title><rect x="25.2216%" y="469" width="0.0724%" height="15" fill="rgb(222,185,37)" fg:x="26493" fg:w="76"/><text x="25.4716%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (97 samples, 0.09%)</title><rect x="25.2140%" y="533" width="0.0923%" height="15" fill="rgb(251,177,13)" fg:x="26485" fg:w="97"/><text x="25.4640%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (97 samples, 0.09%)</title><rect x="25.2140%" y="517" width="0.0923%" height="15" fill="rgb(250,179,40)" fg:x="26485" fg:w="97"/><text x="25.4640%" y="527.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="25.2939%" y="501" width="0.0124%" height="15" fill="rgb(242,44,2)" fg:x="26569" fg:w="13"/><text x="25.5439%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (99 samples, 0.09%)</title><rect x="25.2140%" y="565" width="0.0942%" height="15" fill="rgb(216,177,13)" fg:x="26485" fg:w="99"/><text x="25.4640%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (99 samples, 0.09%)</title><rect x="25.2140%" y="549" width="0.0942%" height="15" fill="rgb(216,106,43)" fg:x="26485" fg:w="99"/><text x="25.4640%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (115 samples, 0.11%)</title><rect x="25.2025%" y="581" width="0.1095%" height="15" fill="rgb(216,183,2)" fg:x="26473" fg:w="115"/><text x="25.4525%" y="591.50"></text></g><g><title>rust_dealloc (134 samples, 0.13%)</title><rect x="25.1940%" y="597" width="0.1276%" height="15" fill="rgb(249,75,3)" fg:x="26464" fg:w="134"/><text x="25.4440%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (141 samples, 0.13%)</title><rect x="25.1883%" y="661" width="0.1342%" height="15" fill="rgb(219,67,39)" fg:x="26458" fg:w="141"/><text x="25.4383%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (141 samples, 0.13%)</title><rect x="25.1883%" y="645" width="0.1342%" height="15" fill="rgb(253,228,2)" fg:x="26458" fg:w="141"/><text x="25.4383%" y="655.50"></text></g><g><title>__rg_dealloc (141 samples, 0.13%)</title><rect x="25.1883%" y="629" width="0.1342%" height="15" fill="rgb(235,138,27)" fg:x="26458" fg:w="141"/><text x="25.4383%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (141 samples, 0.13%)</title><rect x="25.1883%" y="613" width="0.1342%" height="15" fill="rgb(236,97,51)" fg:x="26458" fg:w="141"/><text x="25.4383%" y="623.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (156 samples, 0.15%)</title><rect x="25.1864%" y="709" width="0.1485%" height="15" fill="rgb(240,80,30)" fg:x="26456" fg:w="156"/><text x="25.4364%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (154 samples, 0.15%)</title><rect x="25.1883%" y="693" width="0.1466%" height="15" fill="rgb(230,178,19)" fg:x="26458" fg:w="154"/><text x="25.4383%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (154 samples, 0.15%)</title><rect x="25.1883%" y="677" width="0.1466%" height="15" fill="rgb(210,190,27)" fg:x="26458" fg:w="154"/><text x="25.4383%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="25.3225%" y="661" width="0.0124%" height="15" fill="rgb(222,107,31)" fg:x="26599" fg:w="13"/><text x="25.5725%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (157 samples, 0.15%)</title><rect x="25.1864%" y="725" width="0.1495%" height="15" fill="rgb(216,127,34)" fg:x="26456" fg:w="157"/><text x="25.4364%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 0.15%)</title><rect x="25.1854%" y="741" width="0.1523%" height="15" fill="rgb(234,116,52)" fg:x="26455" fg:w="160"/><text x="25.4354%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (165 samples, 0.16%)</title><rect x="25.1854%" y="757" width="0.1571%" height="15" fill="rgb(222,124,15)" fg:x="26455" fg:w="165"/><text x="25.4354%" y="767.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="25.3596%" y="597" width="0.0114%" height="15" fill="rgb(231,179,28)" fg:x="26638" fg:w="12"/><text x="25.6096%" y="607.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="25.3710%" y="597" width="0.0114%" height="15" fill="rgb(226,93,45)" fg:x="26650" fg:w="12"/><text x="25.6210%" y="607.50"></text></g><g><title>sizeclass_to_size (12 samples, 0.01%)</title><rect x="25.4101%" y="517" width="0.0114%" height="15" fill="rgb(215,8,51)" fg:x="26691" fg:w="12"/><text x="25.6601%" y="527.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (12 samples, 0.01%)</title><rect x="25.4101%" y="501" width="0.0114%" height="15" fill="rgb(223,106,5)" fg:x="26691" fg:w="12"/><text x="25.6601%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (24 samples, 0.02%)</title><rect x="25.4653%" y="469" width="0.0228%" height="15" fill="rgb(250,191,5)" fg:x="26749" fg:w="24"/><text x="25.7153%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (22 samples, 0.02%)</title><rect x="25.4672%" y="453" width="0.0209%" height="15" fill="rgb(242,132,44)" fg:x="26751" fg:w="22"/><text x="25.7172%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (88 samples, 0.08%)</title><rect x="25.4282%" y="517" width="0.0838%" height="15" fill="rgb(251,152,29)" fg:x="26710" fg:w="88"/><text x="25.6782%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (88 samples, 0.08%)</title><rect x="25.4282%" y="501" width="0.0838%" height="15" fill="rgb(218,179,5)" fg:x="26710" fg:w="88"/><text x="25.6782%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (88 samples, 0.08%)</title><rect x="25.4282%" y="485" width="0.0838%" height="15" fill="rgb(227,67,19)" fg:x="26710" fg:w="88"/><text x="25.6782%" y="495.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (25 samples, 0.02%)</title><rect x="25.4881%" y="469" width="0.0238%" height="15" fill="rgb(233,119,31)" fg:x="26773" fg:w="25"/><text x="25.7381%" y="479.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (25 samples, 0.02%)</title><rect x="25.4881%" y="453" width="0.0238%" height="15" fill="rgb(241,120,22)" fg:x="26773" fg:w="25"/><text x="25.7381%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (129 samples, 0.12%)</title><rect x="25.3996%" y="549" width="0.1228%" height="15" fill="rgb(224,102,30)" fg:x="26680" fg:w="129"/><text x="25.6496%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (129 samples, 0.12%)</title><rect x="25.3996%" y="533" width="0.1228%" height="15" fill="rgb(210,164,37)" fg:x="26680" fg:w="129"/><text x="25.6496%" y="543.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="25.5119%" y="517" width="0.0105%" height="15" fill="rgb(226,191,16)" fg:x="26798" fg:w="11"/><text x="25.7619%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (141 samples, 0.13%)</title><rect x="25.3996%" y="581" width="0.1342%" height="15" fill="rgb(214,40,45)" fg:x="26680" fg:w="141"/><text x="25.6496%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (141 samples, 0.13%)</title><rect x="25.3996%" y="565" width="0.1342%" height="15" fill="rgb(244,29,26)" fg:x="26680" fg:w="141"/><text x="25.6496%" y="575.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="25.5224%" y="549" width="0.0114%" height="15" fill="rgb(216,16,5)" fg:x="26809" fg:w="12"/><text x="25.7724%" y="559.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="25.5224%" y="533" width="0.0114%" height="15" fill="rgb(249,76,35)" fg:x="26809" fg:w="12"/><text x="25.7724%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="25.5224%" y="517" width="0.0114%" height="15" fill="rgb(207,11,44)" fg:x="26809" fg:w="12"/><text x="25.7724%" y="527.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="25.5224%" y="501" width="0.0114%" height="15" fill="rgb(228,190,49)" fg:x="26809" fg:w="12"/><text x="25.7724%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (168 samples, 0.16%)</title><rect x="25.3825%" y="597" width="0.1599%" height="15" fill="rgb(214,173,12)" fg:x="26662" fg:w="168"/><text x="25.6325%" y="607.50"></text></g><g><title>rust_dealloc (209 samples, 0.20%)</title><rect x="25.3549%" y="613" width="0.1990%" height="15" fill="rgb(218,26,35)" fg:x="26633" fg:w="209"/><text x="25.6049%" y="623.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="25.5424%" y="597" width="0.0114%" height="15" fill="rgb(220,200,19)" fg:x="26830" fg:w="12"/><text x="25.7924%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (217 samples, 0.21%)</title><rect x="25.3511%" y="677" width="0.2066%" height="15" fill="rgb(239,95,49)" fg:x="26629" fg:w="217"/><text x="25.6011%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (217 samples, 0.21%)</title><rect x="25.3511%" y="661" width="0.2066%" height="15" fill="rgb(235,85,53)" fg:x="26629" fg:w="217"/><text x="25.6011%" y="671.50"></text></g><g><title>__rg_dealloc (217 samples, 0.21%)</title><rect x="25.3511%" y="645" width="0.2066%" height="15" fill="rgb(233,133,31)" fg:x="26629" fg:w="217"/><text x="25.6011%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (217 samples, 0.21%)</title><rect x="25.3511%" y="629" width="0.2066%" height="15" fill="rgb(218,25,20)" fg:x="26629" fg:w="217"/><text x="25.6011%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (228 samples, 0.22%)</title><rect x="25.3444%" y="741" width="0.2171%" height="15" fill="rgb(252,210,38)" fg:x="26622" fg:w="228"/><text x="25.5944%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (228 samples, 0.22%)</title><rect x="25.3444%" y="725" width="0.2171%" height="15" fill="rgb(242,134,21)" fg:x="26622" fg:w="228"/><text x="25.5944%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (228 samples, 0.22%)</title><rect x="25.3444%" y="709" width="0.2171%" height="15" fill="rgb(213,28,48)" fg:x="26622" fg:w="228"/><text x="25.5944%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (228 samples, 0.22%)</title><rect x="25.3444%" y="693" width="0.2171%" height="15" fill="rgb(250,196,2)" fg:x="26622" fg:w="228"/><text x="25.5944%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (41 samples, 0.04%)</title><rect x="25.6290%" y="469" width="0.0390%" height="15" fill="rgb(227,5,17)" fg:x="26921" fg:w="41"/><text x="25.8790%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (41 samples, 0.04%)</title><rect x="25.6290%" y="453" width="0.0390%" height="15" fill="rgb(221,226,24)" fg:x="26921" fg:w="41"/><text x="25.8790%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (39 samples, 0.04%)</title><rect x="25.6309%" y="437" width="0.0371%" height="15" fill="rgb(211,5,48)" fg:x="26923" fg:w="39"/><text x="25.8809%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (61 samples, 0.06%)</title><rect x="25.6138%" y="501" width="0.0581%" height="15" fill="rgb(219,150,6)" fg:x="26905" fg:w="61"/><text x="25.8638%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (61 samples, 0.06%)</title><rect x="25.6138%" y="485" width="0.0581%" height="15" fill="rgb(251,46,16)" fg:x="26905" fg:w="61"/><text x="25.8638%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (66 samples, 0.06%)</title><rect x="25.6138%" y="533" width="0.0628%" height="15" fill="rgb(220,204,40)" fg:x="26905" fg:w="66"/><text x="25.8638%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (66 samples, 0.06%)</title><rect x="25.6138%" y="517" width="0.0628%" height="15" fill="rgb(211,85,2)" fg:x="26905" fg:w="66"/><text x="25.8638%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (82 samples, 0.08%)</title><rect x="25.6062%" y="549" width="0.0781%" height="15" fill="rgb(229,17,7)" fg:x="26897" fg:w="82"/><text x="25.8562%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (117 samples, 0.11%)</title><rect x="25.5805%" y="581" width="0.1114%" height="15" fill="rgb(239,72,28)" fg:x="26870" fg:w="117"/><text x="25.8305%" y="591.50"></text></g><g><title>rust_dealloc (105 samples, 0.10%)</title><rect x="25.5919%" y="565" width="0.1000%" height="15" fill="rgb(230,47,54)" fg:x="26882" fg:w="105"/><text x="25.8419%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (124 samples, 0.12%)</title><rect x="25.5805%" y="629" width="0.1180%" height="15" fill="rgb(214,50,8)" fg:x="26870" fg:w="124"/><text x="25.8305%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (124 samples, 0.12%)</title><rect x="25.5805%" y="613" width="0.1180%" height="15" fill="rgb(216,198,43)" fg:x="26870" fg:w="124"/><text x="25.8305%" y="623.50"></text></g><g><title>__rg_dealloc (124 samples, 0.12%)</title><rect x="25.5805%" y="597" width="0.1180%" height="15" fill="rgb(234,20,35)" fg:x="26870" fg:w="124"/><text x="25.8305%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (165 samples, 0.16%)</title><rect x="25.5614%" y="725" width="0.1571%" height="15" fill="rgb(254,45,19)" fg:x="26850" fg:w="165"/><text x="25.8114%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (162 samples, 0.15%)</title><rect x="25.5643%" y="709" width="0.1542%" height="15" fill="rgb(219,14,44)" fg:x="26853" fg:w="162"/><text x="25.8143%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (154 samples, 0.15%)</title><rect x="25.5719%" y="693" width="0.1466%" height="15" fill="rgb(217,220,26)" fg:x="26861" fg:w="154"/><text x="25.8219%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (154 samples, 0.15%)</title><rect x="25.5719%" y="677" width="0.1466%" height="15" fill="rgb(213,158,28)" fg:x="26861" fg:w="154"/><text x="25.8219%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (154 samples, 0.15%)</title><rect x="25.5719%" y="661" width="0.1466%" height="15" fill="rgb(252,51,52)" fg:x="26861" fg:w="154"/><text x="25.8219%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (154 samples, 0.15%)</title><rect x="25.5719%" y="645" width="0.1466%" height="15" fill="rgb(246,89,16)" fg:x="26861" fg:w="154"/><text x="25.8219%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (21 samples, 0.02%)</title><rect x="25.6985%" y="629" width="0.0200%" height="15" fill="rgb(216,158,49)" fg:x="26994" fg:w="21"/><text x="25.9485%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (15 samples, 0.01%)</title><rect x="25.7185%" y="725" width="0.0143%" height="15" fill="rgb(236,107,19)" fg:x="27015" fg:w="15"/><text x="25.9685%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="25.7185%" y="709" width="0.0143%" height="15" fill="rgb(228,185,30)" fg:x="27015" fg:w="15"/><text x="25.9685%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="25.7214%" y="693" width="0.0114%" height="15" fill="rgb(246,134,8)" fg:x="27018" fg:w="12"/><text x="25.9714%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (411 samples, 0.39%)</title><rect x="25.3425%" y="757" width="0.3913%" height="15" fill="rgb(214,143,50)" fg:x="26620" fg:w="411"/><text x="25.5925%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (181 samples, 0.17%)</title><rect x="25.5614%" y="741" width="0.1723%" height="15" fill="rgb(228,75,8)" fg:x="26850" fg:w="181"/><text x="25.8114%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="25.7680%" y="613" width="0.0133%" height="15" fill="rgb(207,175,4)" fg:x="27067" fg:w="14"/><text x="26.0180%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (42 samples, 0.04%)</title><rect x="25.7509%" y="661" width="0.0400%" height="15" fill="rgb(205,108,24)" fg:x="27049" fg:w="42"/><text x="26.0009%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (42 samples, 0.04%)</title><rect x="25.7509%" y="645" width="0.0400%" height="15" fill="rgb(244,120,49)" fg:x="27049" fg:w="42"/><text x="26.0009%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (41 samples, 0.04%)</title><rect x="25.7518%" y="629" width="0.0390%" height="15" fill="rgb(223,47,38)" fg:x="27050" fg:w="41"/><text x="26.0018%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (54 samples, 0.05%)</title><rect x="25.7433%" y="693" width="0.0514%" height="15" fill="rgb(229,179,11)" fg:x="27041" fg:w="54"/><text x="25.9933%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (54 samples, 0.05%)</title><rect x="25.7433%" y="677" width="0.0514%" height="15" fill="rgb(231,122,1)" fg:x="27041" fg:w="54"/><text x="25.9933%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (66 samples, 0.06%)</title><rect x="25.7433%" y="725" width="0.0628%" height="15" fill="rgb(245,119,9)" fg:x="27041" fg:w="66"/><text x="25.9933%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (66 samples, 0.06%)</title><rect x="25.7433%" y="709" width="0.0628%" height="15" fill="rgb(241,163,25)" fg:x="27041" fg:w="66"/><text x="25.9933%" y="719.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="25.7947%" y="693" width="0.0114%" height="15" fill="rgb(217,214,3)" fg:x="27095" fg:w="12"/><text x="26.0447%" y="703.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="25.7947%" y="677" width="0.0114%" height="15" fill="rgb(240,86,28)" fg:x="27095" fg:w="12"/><text x="26.0447%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="25.7947%" y="661" width="0.0114%" height="15" fill="rgb(215,47,9)" fg:x="27095" fg:w="12"/><text x="26.0447%" y="671.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="25.7947%" y="645" width="0.0114%" height="15" fill="rgb(252,25,45)" fg:x="27095" fg:w="12"/><text x="26.0447%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (79 samples, 0.08%)</title><rect x="25.7433%" y="741" width="0.0752%" height="15" fill="rgb(251,164,9)" fg:x="27041" fg:w="79"/><text x="25.9933%" y="751.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="25.8061%" y="725" width="0.0124%" height="15" fill="rgb(233,194,0)" fg:x="27107" fg:w="13"/><text x="26.0561%" y="735.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="25.8061%" y="709" width="0.0124%" height="15" fill="rgb(249,111,24)" fg:x="27107" fg:w="13"/><text x="26.0561%" y="719.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="25.8061%" y="693" width="0.0124%" height="15" fill="rgb(250,223,3)" fg:x="27107" fg:w="13"/><text x="26.0561%" y="703.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="25.8061%" y="677" width="0.0124%" height="15" fill="rgb(236,178,37)" fg:x="27107" fg:w="13"/><text x="26.0561%" y="687.50"></text></g><g><title>rust_dealloc (94 samples, 0.09%)</title><rect x="25.7338%" y="757" width="0.0895%" height="15" fill="rgb(241,158,50)" fg:x="27031" fg:w="94"/><text x="25.9838%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (58 samples, 0.06%)</title><rect x="25.8280%" y="757" width="0.0552%" height="15" fill="rgb(213,121,41)" fg:x="27130" fg:w="58"/><text x="26.0780%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,058 samples, 10.53%)</title><rect x="15.3683%" y="805" width="10.5273%" height="15" fill="rgb(240,92,3)" fg:x="16143" fg:w="11058"/><text x="15.6183%" y="815.50">&lt;core::future::..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (11,058 samples, 10.53%)</title><rect x="15.3683%" y="789" width="10.5273%" height="15" fill="rgb(205,123,3)" fg:x="16143" fg:w="11058"/><text x="15.6183%" y="799.50">tremor_runtime:..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,770 samples, 3.59%)</title><rect x="22.3065%" y="773" width="3.5891%" height="15" fill="rgb(205,97,47)" fg:x="23431" fg:w="3770"/><text x="22.5565%" y="783.50">trem..</text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="25.8956%" y="437" width="0.0143%" height="15" fill="rgb(247,152,14)" fg:x="27201" fg:w="15"/><text x="26.1456%" y="447.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="25.9156%" y="421" width="0.0114%" height="15" fill="rgb(248,195,53)" fg:x="27222" fg:w="12"/><text x="26.1656%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (97 samples, 0.09%)</title><rect x="25.8956%" y="469" width="0.0923%" height="15" fill="rgb(226,201,16)" fg:x="27201" fg:w="97"/><text x="26.1456%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (97 samples, 0.09%)</title><rect x="25.8956%" y="453" width="0.0923%" height="15" fill="rgb(205,98,0)" fg:x="27201" fg:w="97"/><text x="26.1456%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (82 samples, 0.08%)</title><rect x="25.9099%" y="437" width="0.0781%" height="15" fill="rgb(214,191,48)" fg:x="27216" fg:w="82"/><text x="26.1599%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (64 samples, 0.06%)</title><rect x="25.9270%" y="421" width="0.0609%" height="15" fill="rgb(237,112,39)" fg:x="27234" fg:w="64"/><text x="26.1770%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (64 samples, 0.06%)</title><rect x="25.9270%" y="405" width="0.0609%" height="15" fill="rgb(247,203,27)" fg:x="27234" fg:w="64"/><text x="26.1770%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (64 samples, 0.06%)</title><rect x="25.9270%" y="389" width="0.0609%" height="15" fill="rgb(235,124,28)" fg:x="27234" fg:w="64"/><text x="26.1770%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (101 samples, 0.10%)</title><rect x="25.8956%" y="741" width="0.0962%" height="15" fill="rgb(208,207,46)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (101 samples, 0.10%)</title><rect x="25.8956%" y="725" width="0.0962%" height="15" fill="rgb(234,176,4)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (101 samples, 0.10%)</title><rect x="25.8956%" y="709" width="0.0962%" height="15" fill="rgb(230,133,28)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (101 samples, 0.10%)</title><rect x="25.8956%" y="693" width="0.0962%" height="15" fill="rgb(211,137,40)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (101 samples, 0.10%)</title><rect x="25.8956%" y="677" width="0.0962%" height="15" fill="rgb(254,35,13)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (101 samples, 0.10%)</title><rect x="25.8956%" y="661" width="0.0962%" height="15" fill="rgb(225,49,51)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (101 samples, 0.10%)</title><rect x="25.8956%" y="645" width="0.0962%" height="15" fill="rgb(251,10,15)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (101 samples, 0.10%)</title><rect x="25.8956%" y="629" width="0.0962%" height="15" fill="rgb(228,207,15)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (101 samples, 0.10%)</title><rect x="25.8956%" y="613" width="0.0962%" height="15" fill="rgb(241,99,19)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (101 samples, 0.10%)</title><rect x="25.8956%" y="597" width="0.0962%" height="15" fill="rgb(207,104,49)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="607.50"></text></g><g><title>alloc::alloc::alloc (101 samples, 0.10%)</title><rect x="25.8956%" y="581" width="0.0962%" height="15" fill="rgb(234,99,18)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="591.50"></text></g><g><title>__rg_alloc (101 samples, 0.10%)</title><rect x="25.8956%" y="565" width="0.0962%" height="15" fill="rgb(213,191,49)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (101 samples, 0.10%)</title><rect x="25.8956%" y="549" width="0.0962%" height="15" fill="rgb(210,226,19)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="559.50"></text></g><g><title>rust_alloc (101 samples, 0.10%)</title><rect x="25.8956%" y="533" width="0.0962%" height="15" fill="rgb(229,97,18)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="25.8956%" y="517" width="0.0962%" height="15" fill="rgb(211,167,15)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="25.8956%" y="501" width="0.0962%" height="15" fill="rgb(210,169,34)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="25.8956%" y="485" width="0.0962%" height="15" fill="rgb(241,121,31)" fg:x="27201" fg:w="101"/><text x="26.1456%" y="495.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="26.0517%" y="453" width="0.0114%" height="15" fill="rgb(232,40,11)" fg:x="27365" fg:w="12"/><text x="26.3017%" y="463.50"></text></g><g><title>size_to_sizeclass (17 samples, 0.02%)</title><rect x="26.0679%" y="421" width="0.0162%" height="15" fill="rgb(205,86,26)" fg:x="27382" fg:w="17"/><text x="26.3179%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (15 samples, 0.01%)</title><rect x="26.0927%" y="341" width="0.0143%" height="15" fill="rgb(231,126,28)" fg:x="27408" fg:w="15"/><text x="26.3427%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (15 samples, 0.01%)</title><rect x="26.0927%" y="325" width="0.0143%" height="15" fill="rgb(219,221,18)" fg:x="27408" fg:w="15"/><text x="26.3427%" y="335.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="26.0946%" y="309" width="0.0124%" height="15" fill="rgb(211,40,0)" fg:x="27410" fg:w="13"/><text x="26.3446%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (17 samples, 0.02%)</title><rect x="26.0927%" y="357" width="0.0162%" height="15" fill="rgb(239,85,43)" fg:x="27408" fg:w="17"/><text x="26.3427%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (26 samples, 0.02%)</title><rect x="26.0879%" y="373" width="0.0248%" height="15" fill="rgb(231,55,21)" fg:x="27403" fg:w="26"/><text x="26.3379%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (15 samples, 0.01%)</title><rect x="26.1250%" y="357" width="0.0143%" height="15" fill="rgb(225,184,43)" fg:x="27442" fg:w="15"/><text x="26.3750%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (141 samples, 0.13%)</title><rect x="26.0879%" y="405" width="0.1342%" height="15" fill="rgb(251,158,41)" fg:x="27403" fg:w="141"/><text x="26.3379%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (141 samples, 0.13%)</title><rect x="26.0879%" y="389" width="0.1342%" height="15" fill="rgb(234,159,37)" fg:x="27403" fg:w="141"/><text x="26.3379%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (115 samples, 0.11%)</title><rect x="26.1127%" y="373" width="0.1095%" height="15" fill="rgb(216,204,22)" fg:x="27429" fg:w="115"/><text x="26.3627%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (87 samples, 0.08%)</title><rect x="26.1393%" y="357" width="0.0828%" height="15" fill="rgb(214,17,3)" fg:x="27457" fg:w="87"/><text x="26.3893%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (87 samples, 0.08%)</title><rect x="26.1393%" y="341" width="0.0828%" height="15" fill="rgb(212,111,17)" fg:x="27457" fg:w="87"/><text x="26.3893%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (87 samples, 0.08%)</title><rect x="26.1393%" y="325" width="0.0828%" height="15" fill="rgb(221,157,24)" fg:x="27457" fg:w="87"/><text x="26.3893%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (275 samples, 0.26%)</title><rect x="26.0670%" y="453" width="0.2618%" height="15" fill="rgb(252,16,13)" fg:x="27381" fg:w="275"/><text x="26.3170%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (274 samples, 0.26%)</title><rect x="26.0679%" y="437" width="0.2609%" height="15" fill="rgb(221,62,2)" fg:x="27382" fg:w="274"/><text x="26.3179%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (257 samples, 0.24%)</title><rect x="26.0841%" y="421" width="0.2447%" height="15" fill="rgb(247,87,22)" fg:x="27399" fg:w="257"/><text x="26.3341%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (101 samples, 0.10%)</title><rect x="26.2326%" y="405" width="0.0962%" height="15" fill="rgb(215,73,9)" fg:x="27555" fg:w="101"/><text x="26.4826%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (101 samples, 0.10%)</title><rect x="26.2326%" y="389" width="0.0962%" height="15" fill="rgb(207,175,33)" fg:x="27555" fg:w="101"/><text x="26.4826%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (317 samples, 0.30%)</title><rect x="26.0317%" y="597" width="0.3018%" height="15" fill="rgb(243,129,54)" fg:x="27344" fg:w="317"/><text x="26.2817%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (317 samples, 0.30%)</title><rect x="26.0317%" y="581" width="0.3018%" height="15" fill="rgb(227,119,45)" fg:x="27344" fg:w="317"/><text x="26.2817%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (317 samples, 0.30%)</title><rect x="26.0317%" y="565" width="0.3018%" height="15" fill="rgb(205,109,36)" fg:x="27344" fg:w="317"/><text x="26.2817%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (310 samples, 0.30%)</title><rect x="26.0384%" y="549" width="0.2951%" height="15" fill="rgb(205,6,39)" fg:x="27351" fg:w="310"/><text x="26.2884%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (310 samples, 0.30%)</title><rect x="26.0384%" y="533" width="0.2951%" height="15" fill="rgb(221,32,16)" fg:x="27351" fg:w="310"/><text x="26.2884%" y="543.50"></text></g><g><title>alloc::alloc::alloc (302 samples, 0.29%)</title><rect x="26.0460%" y="517" width="0.2875%" height="15" fill="rgb(228,144,50)" fg:x="27359" fg:w="302"/><text x="26.2960%" y="527.50"></text></g><g><title>__rg_alloc (302 samples, 0.29%)</title><rect x="26.0460%" y="501" width="0.2875%" height="15" fill="rgb(229,201,53)" fg:x="27359" fg:w="302"/><text x="26.2960%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (302 samples, 0.29%)</title><rect x="26.0460%" y="485" width="0.2875%" height="15" fill="rgb(249,153,27)" fg:x="27359" fg:w="302"/><text x="26.2960%" y="495.50"></text></g><g><title>rust_alloc (296 samples, 0.28%)</title><rect x="26.0517%" y="469" width="0.2818%" height="15" fill="rgb(227,106,25)" fg:x="27365" fg:w="296"/><text x="26.3017%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (394 samples, 0.38%)</title><rect x="26.0232%" y="677" width="0.3751%" height="15" fill="rgb(230,65,29)" fg:x="27335" fg:w="394"/><text x="26.2732%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (385 samples, 0.37%)</title><rect x="26.0317%" y="661" width="0.3665%" height="15" fill="rgb(221,57,46)" fg:x="27344" fg:w="385"/><text x="26.2817%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (385 samples, 0.37%)</title><rect x="26.0317%" y="645" width="0.3665%" height="15" fill="rgb(229,161,17)" fg:x="27344" fg:w="385"/><text x="26.2817%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (385 samples, 0.37%)</title><rect x="26.0317%" y="629" width="0.3665%" height="15" fill="rgb(222,213,11)" fg:x="27344" fg:w="385"/><text x="26.2817%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (385 samples, 0.37%)</title><rect x="26.0317%" y="613" width="0.3665%" height="15" fill="rgb(235,35,13)" fg:x="27344" fg:w="385"/><text x="26.2817%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (68 samples, 0.06%)</title><rect x="26.3335%" y="597" width="0.0647%" height="15" fill="rgb(233,158,34)" fg:x="27661" fg:w="68"/><text x="26.5835%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (68 samples, 0.06%)</title><rect x="26.3335%" y="581" width="0.0647%" height="15" fill="rgb(215,151,48)" fg:x="27661" fg:w="68"/><text x="26.5835%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (49 samples, 0.05%)</title><rect x="26.3516%" y="565" width="0.0466%" height="15" fill="rgb(229,84,14)" fg:x="27680" fg:w="49"/><text x="26.6016%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="26.3983%" y="677" width="0.0181%" height="15" fill="rgb(229,68,14)" fg:x="27729" fg:w="19"/><text x="26.6483%" y="687.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="26.4573%" y="501" width="0.0114%" height="15" fill="rgb(243,106,26)" fg:x="27791" fg:w="12"/><text x="26.7073%" y="511.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="26.4573%" y="485" width="0.0114%" height="15" fill="rgb(206,45,38)" fg:x="27791" fg:w="12"/><text x="26.7073%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (14 samples, 0.01%)</title><rect x="26.4697%" y="453" width="0.0133%" height="15" fill="rgb(226,6,15)" fg:x="27804" fg:w="14"/><text x="26.7197%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (13 samples, 0.01%)</title><rect x="26.4925%" y="437" width="0.0124%" height="15" fill="rgb(232,22,54)" fg:x="27828" fg:w="13"/><text x="26.7425%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.09%)</title><rect x="26.4697%" y="485" width="0.0866%" height="15" fill="rgb(229,222,32)" fg:x="27804" fg:w="91"/><text x="26.7197%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (91 samples, 0.09%)</title><rect x="26.4697%" y="469" width="0.0866%" height="15" fill="rgb(228,62,29)" fg:x="27804" fg:w="91"/><text x="26.7197%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (77 samples, 0.07%)</title><rect x="26.4830%" y="453" width="0.0733%" height="15" fill="rgb(251,103,34)" fg:x="27818" fg:w="77"/><text x="26.7330%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (54 samples, 0.05%)</title><rect x="26.5049%" y="437" width="0.0514%" height="15" fill="rgb(233,12,30)" fg:x="27841" fg:w="54"/><text x="26.7549%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (54 samples, 0.05%)</title><rect x="26.5049%" y="421" width="0.0514%" height="15" fill="rgb(238,52,0)" fg:x="27841" fg:w="54"/><text x="26.7549%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (54 samples, 0.05%)</title><rect x="26.5049%" y="405" width="0.0514%" height="15" fill="rgb(223,98,5)" fg:x="27841" fg:w="54"/><text x="26.7549%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (222 samples, 0.21%)</title><rect x="26.4573%" y="533" width="0.2113%" height="15" fill="rgb(228,75,37)" fg:x="27791" fg:w="222"/><text x="26.7073%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (222 samples, 0.21%)</title><rect x="26.4573%" y="517" width="0.2113%" height="15" fill="rgb(205,115,49)" fg:x="27791" fg:w="222"/><text x="26.7073%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (210 samples, 0.20%)</title><rect x="26.4687%" y="501" width="0.1999%" height="15" fill="rgb(250,154,43)" fg:x="27803" fg:w="210"/><text x="26.7187%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (112 samples, 0.11%)</title><rect x="26.5620%" y="485" width="0.1066%" height="15" fill="rgb(226,43,29)" fg:x="27901" fg:w="112"/><text x="26.8120%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (112 samples, 0.11%)</title><rect x="26.5620%" y="469" width="0.1066%" height="15" fill="rgb(249,228,39)" fg:x="27901" fg:w="112"/><text x="26.8120%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (260 samples, 0.25%)</title><rect x="26.4354%" y="629" width="0.2475%" height="15" fill="rgb(216,79,43)" fg:x="27768" fg:w="260"/><text x="26.6854%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (260 samples, 0.25%)</title><rect x="26.4354%" y="613" width="0.2475%" height="15" fill="rgb(228,95,12)" fg:x="27768" fg:w="260"/><text x="26.6854%" y="623.50"></text></g><g><title>alloc::alloc::alloc (251 samples, 0.24%)</title><rect x="26.4440%" y="597" width="0.2390%" height="15" fill="rgb(249,221,15)" fg:x="27777" fg:w="251"/><text x="26.6940%" y="607.50"></text></g><g><title>__rg_alloc (251 samples, 0.24%)</title><rect x="26.4440%" y="581" width="0.2390%" height="15" fill="rgb(233,34,13)" fg:x="27777" fg:w="251"/><text x="26.6940%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (251 samples, 0.24%)</title><rect x="26.4440%" y="565" width="0.2390%" height="15" fill="rgb(214,103,39)" fg:x="27777" fg:w="251"/><text x="26.6940%" y="575.50"></text></g><g><title>rust_alloc (241 samples, 0.23%)</title><rect x="26.4535%" y="549" width="0.2294%" height="15" fill="rgb(251,126,39)" fg:x="27787" fg:w="241"/><text x="26.7035%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="26.6686%" y="533" width="0.0143%" height="15" fill="rgb(214,216,36)" fg:x="28013" fg:w="15"/><text x="26.9186%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (13 samples, 0.01%)</title><rect x="26.6829%" y="629" width="0.0124%" height="15" fill="rgb(220,221,8)" fg:x="28028" fg:w="13"/><text x="26.9329%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (302 samples, 0.29%)</title><rect x="26.4183%" y="677" width="0.2875%" height="15" fill="rgb(240,216,3)" fg:x="27750" fg:w="302"/><text x="26.6683%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (285 samples, 0.27%)</title><rect x="26.4344%" y="661" width="0.2713%" height="15" fill="rgb(232,218,17)" fg:x="27767" fg:w="285"/><text x="26.6844%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (284 samples, 0.27%)</title><rect x="26.4354%" y="645" width="0.2704%" height="15" fill="rgb(229,163,45)" fg:x="27768" fg:w="284"/><text x="26.6854%" y="655.50"></text></g><g><title>core::alloc::layout::Layout::array (11 samples, 0.01%)</title><rect x="26.6953%" y="629" width="0.0105%" height="15" fill="rgb(231,110,42)" fg:x="28041" fg:w="11"/><text x="26.9453%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (11 samples, 0.01%)</title><rect x="26.6953%" y="613" width="0.0105%" height="15" fill="rgb(208,170,48)" fg:x="28041" fg:w="11"/><text x="26.9453%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (11 samples, 0.01%)</title><rect x="26.6953%" y="597" width="0.0105%" height="15" fill="rgb(239,116,25)" fg:x="28041" fg:w="11"/><text x="26.9453%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (741 samples, 0.71%)</title><rect x="26.0137%" y="693" width="0.7054%" height="15" fill="rgb(219,200,50)" fg:x="27325" fg:w="741"/><text x="26.2637%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 0.01%)</title><rect x="26.7058%" y="677" width="0.0133%" height="15" fill="rgb(245,200,0)" fg:x="28052" fg:w="14"/><text x="26.9558%" y="687.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (880 samples, 0.84%)</title><rect x="25.8956%" y="757" width="0.8378%" height="15" fill="rgb(245,119,33)" fg:x="27201" fg:w="880"/><text x="26.1456%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (779 samples, 0.74%)</title><rect x="25.9918%" y="741" width="0.7416%" height="15" fill="rgb(231,125,12)" fg:x="27302" fg:w="779"/><text x="26.2418%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (756 samples, 0.72%)</title><rect x="26.0137%" y="725" width="0.7197%" height="15" fill="rgb(216,96,41)" fg:x="27325" fg:w="756"/><text x="26.2637%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (756 samples, 0.72%)</title><rect x="26.0137%" y="709" width="0.7197%" height="15" fill="rgb(248,43,45)" fg:x="27325" fg:w="756"/><text x="26.2637%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="26.7191%" y="693" width="0.0143%" height="15" fill="rgb(217,222,7)" fg:x="28066" fg:w="15"/><text x="26.9691%" y="703.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (12 samples, 0.01%)</title><rect x="26.7562%" y="373" width="0.0114%" height="15" fill="rgb(233,28,6)" fg:x="28105" fg:w="12"/><text x="27.0062%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (14 samples, 0.01%)</title><rect x="26.7553%" y="389" width="0.0133%" height="15" fill="rgb(231,218,15)" fg:x="28104" fg:w="14"/><text x="27.0053%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (31 samples, 0.03%)</title><rect x="26.7734%" y="373" width="0.0295%" height="15" fill="rgb(226,171,48)" fg:x="28123" fg:w="31"/><text x="27.0234%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (30 samples, 0.03%)</title><rect x="26.7743%" y="357" width="0.0286%" height="15" fill="rgb(235,201,9)" fg:x="28124" fg:w="30"/><text x="27.0243%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (71 samples, 0.07%)</title><rect x="26.7543%" y="421" width="0.0676%" height="15" fill="rgb(217,80,15)" fg:x="28103" fg:w="71"/><text x="27.0043%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (71 samples, 0.07%)</title><rect x="26.7543%" y="405" width="0.0676%" height="15" fill="rgb(219,152,8)" fg:x="28103" fg:w="71"/><text x="27.0043%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (56 samples, 0.05%)</title><rect x="26.7686%" y="389" width="0.0533%" height="15" fill="rgb(243,107,38)" fg:x="28118" fg:w="56"/><text x="27.0186%" y="399.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (20 samples, 0.02%)</title><rect x="26.8029%" y="373" width="0.0190%" height="15" fill="rgb(231,17,5)" fg:x="28154" fg:w="20"/><text x="27.0529%" y="383.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (20 samples, 0.02%)</title><rect x="26.8029%" y="357" width="0.0190%" height="15" fill="rgb(209,25,54)" fg:x="28154" fg:w="20"/><text x="27.0529%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (113 samples, 0.11%)</title><rect x="26.7543%" y="437" width="0.1076%" height="15" fill="rgb(219,0,2)" fg:x="28103" fg:w="113"/><text x="27.0043%" y="447.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (42 samples, 0.04%)</title><rect x="26.8219%" y="421" width="0.0400%" height="15" fill="rgb(246,9,5)" fg:x="28174" fg:w="42"/><text x="27.0719%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (42 samples, 0.04%)</title><rect x="26.8219%" y="405" width="0.0400%" height="15" fill="rgb(226,159,4)" fg:x="28174" fg:w="42"/><text x="27.0719%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (42 samples, 0.04%)</title><rect x="26.8219%" y="389" width="0.0400%" height="15" fill="rgb(219,175,34)" fg:x="28174" fg:w="42"/><text x="27.0719%" y="399.50"></text></g><g><title>snmalloc::bits::align_down (42 samples, 0.04%)</title><rect x="26.8219%" y="373" width="0.0400%" height="15" fill="rgb(236,10,46)" fg:x="28174" fg:w="42"/><text x="27.0719%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (164 samples, 0.16%)</title><rect x="26.7343%" y="453" width="0.1561%" height="15" fill="rgb(240,211,16)" fg:x="28082" fg:w="164"/><text x="26.9843%" y="463.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (27 samples, 0.03%)</title><rect x="26.8647%" y="437" width="0.0257%" height="15" fill="rgb(205,3,43)" fg:x="28219" fg:w="27"/><text x="27.1147%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (27 samples, 0.03%)</title><rect x="26.8647%" y="421" width="0.0257%" height="15" fill="rgb(245,7,22)" fg:x="28219" fg:w="27"/><text x="27.1147%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (27 samples, 0.03%)</title><rect x="26.8647%" y="405" width="0.0257%" height="15" fill="rgb(239,132,32)" fg:x="28219" fg:w="27"/><text x="27.1147%" y="415.50"></text></g><g><title>snmalloc::bits::align_down (27 samples, 0.03%)</title><rect x="26.8647%" y="389" width="0.0257%" height="15" fill="rgb(228,202,34)" fg:x="28219" fg:w="27"/><text x="27.1147%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (99 samples, 0.09%)</title><rect x="26.9466%" y="437" width="0.0942%" height="15" fill="rgb(254,200,22)" fg:x="28305" fg:w="99"/><text x="27.1966%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (910 samples, 0.87%)</title><rect x="26.7334%" y="485" width="0.8663%" height="15" fill="rgb(219,10,39)" fg:x="28081" fg:w="910"/><text x="26.9834%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (910 samples, 0.87%)</title><rect x="26.7334%" y="469" width="0.8663%" height="15" fill="rgb(226,210,39)" fg:x="28081" fg:w="910"/><text x="26.9834%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (745 samples, 0.71%)</title><rect x="26.8905%" y="453" width="0.7092%" height="15" fill="rgb(208,219,16)" fg:x="28246" fg:w="745"/><text x="27.1405%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (587 samples, 0.56%)</title><rect x="27.0409%" y="437" width="0.5588%" height="15" fill="rgb(216,158,51)" fg:x="28404" fg:w="587"/><text x="27.2909%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (587 samples, 0.56%)</title><rect x="27.0409%" y="421" width="0.5588%" height="15" fill="rgb(233,14,44)" fg:x="28404" fg:w="587"/><text x="27.2909%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (587 samples, 0.56%)</title><rect x="27.0409%" y="405" width="0.5588%" height="15" fill="rgb(237,97,39)" fg:x="28404" fg:w="587"/><text x="27.2909%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (13 samples, 0.01%)</title><rect x="27.5997%" y="437" width="0.0124%" height="15" fill="rgb(218,198,43)" fg:x="28991" fg:w="13"/><text x="27.8497%" y="447.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (13 samples, 0.01%)</title><rect x="27.5997%" y="421" width="0.0124%" height="15" fill="rgb(231,104,20)" fg:x="28991" fg:w="13"/><text x="27.8497%" y="431.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (11 samples, 0.01%)</title><rect x="27.6016%" y="405" width="0.0105%" height="15" fill="rgb(254,36,13)" fg:x="28993" fg:w="11"/><text x="27.8516%" y="415.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (12,893 samples, 12.27%)</title><rect x="15.3683%" y="821" width="12.2743%" height="15" fill="rgb(248,14,50)" fg:x="16143" fg:w="12893"/><text x="15.6183%" y="831.50">tremor_runtime::co..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,835 samples, 1.75%)</title><rect x="25.8956%" y="805" width="1.7469%" height="15" fill="rgb(217,107,29)" fg:x="27201" fg:w="1835"/><text x="26.1456%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,835 samples, 1.75%)</title><rect x="25.8956%" y="789" width="1.7469%" height="15" fill="rgb(251,169,33)" fg:x="27201" fg:w="1835"/><text x="26.1456%" y="799.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (1,835 samples, 1.75%)</title><rect x="25.8956%" y="773" width="1.7469%" height="15" fill="rgb(217,108,32)" fg:x="27201" fg:w="1835"/><text x="26.1456%" y="783.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (955 samples, 0.91%)</title><rect x="26.7334%" y="757" width="0.9092%" height="15" fill="rgb(219,66,42)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (955 samples, 0.91%)</title><rect x="26.7334%" y="741" width="0.9092%" height="15" fill="rgb(206,180,7)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (955 samples, 0.91%)</title><rect x="26.7334%" y="725" width="0.9092%" height="15" fill="rgb(208,226,31)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (955 samples, 0.91%)</title><rect x="26.7334%" y="709" width="0.9092%" height="15" fill="rgb(218,26,49)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (955 samples, 0.91%)</title><rect x="26.7334%" y="693" width="0.9092%" height="15" fill="rgb(233,197,48)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (955 samples, 0.91%)</title><rect x="26.7334%" y="677" width="0.9092%" height="15" fill="rgb(252,181,51)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (955 samples, 0.91%)</title><rect x="26.7334%" y="661" width="0.9092%" height="15" fill="rgb(253,90,19)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (955 samples, 0.91%)</title><rect x="26.7334%" y="645" width="0.9092%" height="15" fill="rgb(215,171,30)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (955 samples, 0.91%)</title><rect x="26.7334%" y="629" width="0.9092%" height="15" fill="rgb(214,222,9)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (955 samples, 0.91%)</title><rect x="26.7334%" y="613" width="0.9092%" height="15" fill="rgb(223,3,22)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="623.50"></text></g><g><title>alloc::alloc::alloc (955 samples, 0.91%)</title><rect x="26.7334%" y="597" width="0.9092%" height="15" fill="rgb(225,196,46)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="607.50"></text></g><g><title>__rg_alloc (955 samples, 0.91%)</title><rect x="26.7334%" y="581" width="0.9092%" height="15" fill="rgb(209,110,37)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (955 samples, 0.91%)</title><rect x="26.7334%" y="565" width="0.9092%" height="15" fill="rgb(249,89,12)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="575.50"></text></g><g><title>rust_alloc (955 samples, 0.91%)</title><rect x="26.7334%" y="549" width="0.9092%" height="15" fill="rgb(226,27,33)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (955 samples, 0.91%)</title><rect x="26.7334%" y="533" width="0.9092%" height="15" fill="rgb(213,82,22)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (955 samples, 0.91%)</title><rect x="26.7334%" y="517" width="0.9092%" height="15" fill="rgb(248,140,0)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (955 samples, 0.91%)</title><rect x="26.7334%" y="501" width="0.9092%" height="15" fill="rgb(228,106,3)" fg:x="28081" fg:w="955"/><text x="26.9834%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (45 samples, 0.04%)</title><rect x="27.5997%" y="485" width="0.0428%" height="15" fill="rgb(209,23,37)" fg:x="28991" fg:w="45"/><text x="27.8497%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (45 samples, 0.04%)</title><rect x="27.5997%" y="469" width="0.0428%" height="15" fill="rgb(241,93,50)" fg:x="28991" fg:w="45"/><text x="27.8497%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (45 samples, 0.04%)</title><rect x="27.5997%" y="453" width="0.0428%" height="15" fill="rgb(253,46,43)" fg:x="28991" fg:w="45"/><text x="27.8497%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="27.6121%" y="437" width="0.0305%" height="15" fill="rgb(226,206,43)" fg:x="29004" fg:w="32"/><text x="27.8621%" y="447.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (31 samples, 0.03%)</title><rect x="27.6130%" y="421" width="0.0295%" height="15" fill="rgb(217,54,7)" fg:x="29005" fg:w="31"/><text x="27.8630%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::close (12 samples, 0.01%)</title><rect x="27.6311%" y="405" width="0.0114%" height="15" fill="rgb(223,5,52)" fg:x="29024" fg:w="12"/><text x="27.8811%" y="415.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::terminate (12 samples, 0.01%)</title><rect x="27.6311%" y="389" width="0.0114%" height="15" fill="rgb(206,52,46)" fg:x="29024" fg:w="12"/><text x="27.8811%" y="399.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::read (12 samples, 0.01%)</title><rect x="27.6311%" y="373" width="0.0114%" height="15" fill="rgb(253,136,11)" fg:x="29024" fg:w="12"/><text x="27.8811%" y="383.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="27.7520%" y="773" width="0.0114%" height="15" fill="rgb(208,106,33)" fg:x="29151" fg:w="12"/><text x="28.0020%" y="783.50"></text></g><g><title>rust_dealloc (29 samples, 0.03%)</title><rect x="27.7749%" y="709" width="0.0276%" height="15" fill="rgb(206,54,4)" fg:x="29175" fg:w="29"/><text x="28.0249%" y="719.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="27.8025%" y="709" width="0.0105%" height="15" fill="rgb(213,3,15)" fg:x="29204" fg:w="11"/><text x="28.0525%" y="719.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="27.8025%" y="693" width="0.0105%" height="15" fill="rgb(252,211,39)" fg:x="29204" fg:w="11"/><text x="28.0525%" y="703.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (26 samples, 0.02%)</title><rect x="27.8805%" y="677" width="0.0248%" height="15" fill="rgb(223,6,36)" fg:x="29286" fg:w="26"/><text x="28.1305%" y="687.50"></text></g><g><title> (26 samples, 0.02%)</title><rect x="27.8805%" y="661" width="0.0248%" height="15" fill="rgb(252,169,45)" fg:x="29286" fg:w="26"/><text x="28.1305%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (105 samples, 0.10%)</title><rect x="27.8149%" y="709" width="0.1000%" height="15" fill="rgb(212,48,26)" fg:x="29217" fg:w="105"/><text x="28.0649%" y="719.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (83 samples, 0.08%)</title><rect x="27.8358%" y="693" width="0.0790%" height="15" fill="rgb(251,102,48)" fg:x="29239" fg:w="83"/><text x="28.0858%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (182 samples, 0.17%)</title><rect x="27.7692%" y="741" width="0.1733%" height="15" fill="rgb(243,208,16)" fg:x="29169" fg:w="182"/><text x="28.0192%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (182 samples, 0.17%)</title><rect x="27.7692%" y="725" width="0.1733%" height="15" fill="rgb(219,96,24)" fg:x="29169" fg:w="182"/><text x="28.0192%" y="735.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (29 samples, 0.03%)</title><rect x="27.9148%" y="709" width="0.0276%" height="15" fill="rgb(219,33,29)" fg:x="29322" fg:w="29"/><text x="28.1648%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (183 samples, 0.17%)</title><rect x="27.7692%" y="773" width="0.1742%" height="15" fill="rgb(223,176,5)" fg:x="29169" fg:w="183"/><text x="28.0192%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (183 samples, 0.17%)</title><rect x="27.7692%" y="757" width="0.1742%" height="15" fill="rgb(228,140,14)" fg:x="29169" fg:w="183"/><text x="28.0192%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (206 samples, 0.20%)</title><rect x="27.7520%" y="789" width="0.1961%" height="15" fill="rgb(217,179,31)" fg:x="29151" fg:w="206"/><text x="28.0020%" y="799.50"></text></g><g><title>rust_dealloc (231 samples, 0.22%)</title><rect x="27.7387%" y="805" width="0.2199%" height="15" fill="rgb(230,9,30)" fg:x="29137" fg:w="231"/><text x="27.9887%" y="815.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="27.9481%" y="789" width="0.0105%" height="15" fill="rgb(230,136,20)" fg:x="29357" fg:w="11"/><text x="28.1981%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (22 samples, 0.02%)</title><rect x="27.9615%" y="757" width="0.0209%" height="15" fill="rgb(215,210,22)" fg:x="29371" fg:w="22"/><text x="28.2115%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (20 samples, 0.02%)</title><rect x="27.9634%" y="741" width="0.0190%" height="15" fill="rgb(218,43,5)" fg:x="29373" fg:w="20"/><text x="28.2134%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (20 samples, 0.02%)</title><rect x="27.9634%" y="725" width="0.0190%" height="15" fill="rgb(216,11,5)" fg:x="29373" fg:w="20"/><text x="28.2134%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (20 samples, 0.02%)</title><rect x="27.9634%" y="709" width="0.0190%" height="15" fill="rgb(209,82,29)" fg:x="29373" fg:w="20"/><text x="28.2134%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (27 samples, 0.03%)</title><rect x="27.9586%" y="789" width="0.0257%" height="15" fill="rgb(244,115,12)" fg:x="29368" fg:w="27"/><text x="28.2086%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (27 samples, 0.03%)</title><rect x="27.9586%" y="773" width="0.0257%" height="15" fill="rgb(222,82,18)" fg:x="29368" fg:w="27"/><text x="28.2086%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (362 samples, 0.34%)</title><rect x="27.6425%" y="821" width="0.3446%" height="15" fill="rgb(249,227,8)" fg:x="29036" fg:w="362"/><text x="27.8925%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (30 samples, 0.03%)</title><rect x="27.9586%" y="805" width="0.0286%" height="15" fill="rgb(253,141,45)" fg:x="29368" fg:w="30"/><text x="28.2086%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="28.6774%" y="805" width="0.0286%" height="15" fill="rgb(234,184,4)" fg:x="30123" fg:w="30"/><text x="28.9274%" y="815.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.02%)</title><rect x="28.6907%" y="789" width="0.0152%" height="15" fill="rgb(218,194,23)" fg:x="30137" fg:w="16"/><text x="28.9407%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="28.8497%" y="789" width="0.0114%" height="15" fill="rgb(235,66,41)" fg:x="30304" fg:w="12"/><text x="29.0997%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (518 samples, 0.49%)</title><rect x="29.1001%" y="773" width="0.4931%" height="15" fill="rgb(245,217,1)" fg:x="30567" fg:w="518"/><text x="29.3501%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (443 samples, 0.42%)</title><rect x="29.5932%" y="773" width="0.4217%" height="15" fill="rgb(229,91,1)" fg:x="31085" fg:w="443"/><text x="29.8432%" y="783.50"></text></g><g><title>core::ptr::write (400 samples, 0.38%)</title><rect x="29.6341%" y="757" width="0.3808%" height="15" fill="rgb(207,101,30)" fg:x="31128" fg:w="400"/><text x="29.8841%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (400 samples, 0.38%)</title><rect x="29.6341%" y="741" width="0.3808%" height="15" fill="rgb(223,82,49)" fg:x="31128" fg:w="400"/><text x="29.8841%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (57 samples, 0.05%)</title><rect x="30.0149%" y="773" width="0.0543%" height="15" fill="rgb(218,167,17)" fg:x="31528" fg:w="57"/><text x="30.2649%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (985 samples, 0.94%)</title><rect x="30.0902%" y="677" width="0.9377%" height="15" fill="rgb(208,103,14)" fg:x="31607" fg:w="985"/><text x="30.3402%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (918 samples, 0.87%)</title><rect x="30.1539%" y="661" width="0.8739%" height="15" fill="rgb(238,20,8)" fg:x="31674" fg:w="918"/><text x="30.4039%" y="671.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (995 samples, 0.95%)</title><rect x="30.0816%" y="757" width="0.9472%" height="15" fill="rgb(218,80,54)" fg:x="31598" fg:w="995"/><text x="30.3316%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (986 samples, 0.94%)</title><rect x="30.0902%" y="741" width="0.9387%" height="15" fill="rgb(240,144,17)" fg:x="31607" fg:w="986"/><text x="30.3402%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (986 samples, 0.94%)</title><rect x="30.0902%" y="725" width="0.9387%" height="15" fill="rgb(245,27,50)" fg:x="31607" fg:w="986"/><text x="30.3402%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (986 samples, 0.94%)</title><rect x="30.0902%" y="709" width="0.9387%" height="15" fill="rgb(251,51,7)" fg:x="31607" fg:w="986"/><text x="30.3402%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (986 samples, 0.94%)</title><rect x="30.0902%" y="693" width="0.9387%" height="15" fill="rgb(245,217,29)" fg:x="31607" fg:w="986"/><text x="30.3402%" y="703.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (1,011 samples, 0.96%)</title><rect x="30.0692%" y="773" width="0.9625%" height="15" fill="rgb(221,176,29)" fg:x="31585" fg:w="1011"/><text x="30.3192%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (12 samples, 0.01%)</title><rect x="31.0412%" y="757" width="0.0114%" height="15" fill="rgb(212,180,24)" fg:x="32606" fg:w="12"/><text x="31.2912%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse::revswap (12 samples, 0.01%)</title><rect x="31.0412%" y="741" width="0.0114%" height="15" fill="rgb(254,24,2)" fg:x="32606" fg:w="12"/><text x="31.2912%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12 samples, 0.01%)</title><rect x="31.0412%" y="725" width="0.0114%" height="15" fill="rgb(230,100,2)" fg:x="32606" fg:w="12"/><text x="31.2912%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12 samples, 0.01%)</title><rect x="31.0412%" y="709" width="0.0114%" height="15" fill="rgb(219,142,25)" fg:x="32606" fg:w="12"/><text x="31.2912%" y="719.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="31.7238%" y="741" width="0.0219%" height="15" fill="rgb(240,73,43)" fg:x="33323" fg:w="23"/><text x="31.9738%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (35 samples, 0.03%)</title><rect x="31.7514%" y="741" width="0.0333%" height="15" fill="rgb(214,114,15)" fg:x="33352" fg:w="35"/><text x="32.0014%" y="751.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="31.7733%" y="725" width="0.0114%" height="15" fill="rgb(207,130,4)" fg:x="33375" fg:w="12"/><text x="32.0233%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (465 samples, 0.44%)</title><rect x="31.7847%" y="741" width="0.4427%" height="15" fill="rgb(221,25,40)" fg:x="33387" fg:w="465"/><text x="32.0347%" y="751.50"></text></g><g><title>core::ptr::write (457 samples, 0.44%)</title><rect x="31.7923%" y="725" width="0.4351%" height="15" fill="rgb(241,184,7)" fg:x="33395" fg:w="457"/><text x="32.0423%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (429 samples, 0.41%)</title><rect x="31.8190%" y="709" width="0.4084%" height="15" fill="rgb(235,159,4)" fg:x="33423" fg:w="429"/><text x="32.0690%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,236 samples, 1.18%)</title><rect x="31.0526%" y="757" width="1.1767%" height="15" fill="rgb(214,87,48)" fg:x="32618" fg:w="1236"/><text x="31.3026%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,270 samples, 1.21%)</title><rect x="31.0317%" y="773" width="1.2091%" height="15" fill="rgb(246,198,24)" fg:x="32596" fg:w="1270"/><text x="31.2817%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (12 samples, 0.01%)</title><rect x="32.2293%" y="757" width="0.0114%" height="15" fill="rgb(209,66,40)" fg:x="33854" fg:w="12"/><text x="32.4793%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,557 samples, 3.39%)</title><rect x="28.8611%" y="789" width="3.3863%" height="15" fill="rgb(233,147,39)" fg:x="30316" fg:w="3557"/><text x="29.1111%" y="799.50">tre..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (81 samples, 0.08%)</title><rect x="32.2474%" y="789" width="0.0771%" height="15" fill="rgb(231,145,52)" fg:x="33873" fg:w="81"/><text x="32.4974%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,839 samples, 3.65%)</title><rect x="28.7107%" y="805" width="3.6548%" height="15" fill="rgb(206,20,26)" fg:x="30158" fg:w="3839"/><text x="28.9607%" y="815.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (43 samples, 0.04%)</title><rect x="32.3245%" y="789" width="0.0409%" height="15" fill="rgb(238,220,4)" fg:x="33954" fg:w="43"/><text x="32.5745%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,578 samples, 1.50%)</title><rect x="32.3655%" y="805" width="1.5023%" height="15" fill="rgb(252,195,42)" fg:x="33997" fg:w="1578"/><text x="32.6155%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="33.8696%" y="789" width="0.0133%" height="15" fill="rgb(209,10,6)" fg:x="35577" fg:w="14"/><text x="34.1196%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (27 samples, 0.03%)</title><rect x="33.8696%" y="805" width="0.0257%" height="15" fill="rgb(229,3,52)" fg:x="35577" fg:w="27"/><text x="34.1196%" y="815.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (13 samples, 0.01%)</title><rect x="33.8830%" y="789" width="0.0124%" height="15" fill="rgb(253,49,37)" fg:x="35591" fg:w="13"/><text x="34.1330%" y="799.50"></text></g><g><title>async_global_executor::reactor::block_on (27,752 samples, 26.42%)</title><rect x="7.5037%" y="1157" width="26.4202%" height="15" fill="rgb(240,103,49)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="1167.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (27,752 samples, 26.42%)</title><rect x="7.5037%" y="1141" width="26.4202%" height="15" fill="rgb(250,182,30)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="1151.50">async_global_executor::reactor::block_on::..</text></g><g><title>async_io::driver::block_on (27,752 samples, 26.42%)</title><rect x="7.5037%" y="1125" width="26.4202%" height="15" fill="rgb(248,8,30)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="1135.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (27,752 samples, 26.42%)</title><rect x="7.5037%" y="1109" width="26.4202%" height="15" fill="rgb(237,120,30)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="1119.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,752 samples, 26.42%)</title><rect x="7.5037%" y="1093" width="26.4202%" height="15" fill="rgb(221,146,34)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="1103.50">&lt;core::future::from_generator::GenFuture&lt;T..</text></g><g><title>async_executor::Executor::run::{{closure}} (27,752 samples, 26.42%)</title><rect x="7.5037%" y="1077" width="26.4202%" height="15" fill="rgb(242,55,13)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="1087.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (27,752 samples, 26.42%)</title><rect x="7.5037%" y="1061" width="26.4202%" height="15" fill="rgb(242,112,31)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="1071.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,752 samples, 26.42%)</title><rect x="7.5037%" y="1045" width="26.4202%" height="15" fill="rgb(249,192,27)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="1055.50">&lt;core::future::from_generator::GenFuture&lt;T..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (27,752 samples, 26.42%)</title><rect x="7.5037%" y="1029" width="26.4202%" height="15" fill="rgb(208,204,44)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="1039.50">async_executor::Executor::run::{{closure}}..</text></g><g><title>async_task::runnable::Runnable::run (27,752 samples, 26.42%)</title><rect x="7.5037%" y="1013" width="26.4202%" height="15" fill="rgb(208,93,54)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="1023.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (27,752 samples, 26.42%)</title><rect x="7.5037%" y="997" width="26.4202%" height="15" fill="rgb(242,1,31)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="1007.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27,752 samples, 26.42%)</title><rect x="7.5037%" y="981" width="26.4202%" height="15" fill="rgb(241,83,25)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,752 samples, 26.42%)</title><rect x="7.5037%" y="965" width="26.4202%" height="15" fill="rgb(205,169,50)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="975.50">&lt;core::future::from_generator::GenFuture&lt;T..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (27,752 samples, 26.42%)</title><rect x="7.5037%" y="949" width="26.4202%" height="15" fill="rgb(239,186,37)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="959.50">async_executor::Executor::spawn::{{closure..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (27,752 samples, 26.42%)</title><rect x="7.5037%" y="933" width="26.4202%" height="15" fill="rgb(205,221,10)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="943.50">&lt;async_std::task::builder::SupportTaskLoca..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (27,752 samples, 26.42%)</title><rect x="7.5037%" y="917" width="26.4202%" height="15" fill="rgb(218,196,15)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="927.50">async_std::task::task_locals_wrapper::Task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27,752 samples, 26.42%)</title><rect x="7.5037%" y="901" width="26.4202%" height="15" fill="rgb(218,196,35)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="911.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27,752 samples, 26.42%)</title><rect x="7.5037%" y="885" width="26.4202%" height="15" fill="rgb(233,63,24)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="895.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (27,752 samples, 26.42%)</title><rect x="7.5037%" y="869" width="26.4202%" height="15" fill="rgb(225,8,4)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="879.50">async_std::task::task_locals_wrapper::Task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (27,752 samples, 26.42%)</title><rect x="7.5037%" y="853" width="26.4202%" height="15" fill="rgb(234,105,35)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="863.50">&lt;async_std::task::builder::SupportTaskLoca..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,752 samples, 26.42%)</title><rect x="7.5037%" y="837" width="26.4202%" height="15" fill="rgb(236,21,32)" fg:x="7882" fg:w="27752"/><text x="7.7537%" y="847.50">&lt;core::future::from_generator::GenFuture&lt;T..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,236 samples, 5.94%)</title><rect x="27.9872%" y="821" width="5.9367%" height="15" fill="rgb(228,109,6)" fg:x="29398" fg:w="6236"/><text x="28.2372%" y="831.50">tremor_r..</text></g><g><title>tremor_runtime::pipeline::maybe_send (16 samples, 0.02%)</title><rect x="33.9087%" y="805" width="0.0152%" height="15" fill="rgb(229,215,31)" fg:x="35618" fg:w="16"/><text x="34.1587%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (719 samples, 0.68%)</title><rect x="33.9715%" y="597" width="0.6845%" height="15" fill="rgb(221,52,54)" fg:x="35684" fg:w="719"/><text x="34.2215%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (771 samples, 0.73%)</title><rect x="33.9239%" y="693" width="0.7340%" height="15" fill="rgb(252,129,43)" fg:x="35634" fg:w="771"/><text x="34.1739%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (771 samples, 0.73%)</title><rect x="33.9239%" y="677" width="0.7340%" height="15" fill="rgb(248,183,27)" fg:x="35634" fg:w="771"/><text x="34.1739%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (771 samples, 0.73%)</title><rect x="33.9239%" y="661" width="0.7340%" height="15" fill="rgb(250,0,22)" fg:x="35634" fg:w="771"/><text x="34.1739%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (771 samples, 0.73%)</title><rect x="33.9239%" y="645" width="0.7340%" height="15" fill="rgb(213,166,10)" fg:x="35634" fg:w="771"/><text x="34.1739%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (765 samples, 0.73%)</title><rect x="33.9296%" y="629" width="0.7283%" height="15" fill="rgb(207,163,36)" fg:x="35640" fg:w="765"/><text x="34.1796%" y="639.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (765 samples, 0.73%)</title><rect x="33.9296%" y="613" width="0.7283%" height="15" fill="rgb(208,122,22)" fg:x="35640" fg:w="765"/><text x="34.1796%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="34.6760%" y="341" width="0.0114%" height="15" fill="rgb(207,104,49)" fg:x="36424" fg:w="12"/><text x="34.9260%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="34.6760%" y="325" width="0.0114%" height="15" fill="rgb(248,211,50)" fg:x="36424" fg:w="12"/><text x="34.9260%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (16 samples, 0.02%)</title><rect x="34.6760%" y="357" width="0.0152%" height="15" fill="rgb(217,13,45)" fg:x="36424" fg:w="16"/><text x="34.9260%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (27 samples, 0.03%)</title><rect x="34.6712%" y="373" width="0.0257%" height="15" fill="rgb(211,216,49)" fg:x="36419" fg:w="27"/><text x="34.9212%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="34.7036%" y="357" width="0.0105%" height="15" fill="rgb(221,58,53)" fg:x="36453" fg:w="11"/><text x="34.9536%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (147 samples, 0.14%)</title><rect x="34.6712%" y="405" width="0.1399%" height="15" fill="rgb(220,112,41)" fg:x="36419" fg:w="147"/><text x="34.9212%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (147 samples, 0.14%)</title><rect x="34.6712%" y="389" width="0.1399%" height="15" fill="rgb(236,38,28)" fg:x="36419" fg:w="147"/><text x="34.9212%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (120 samples, 0.11%)</title><rect x="34.6969%" y="373" width="0.1142%" height="15" fill="rgb(227,195,22)" fg:x="36446" fg:w="120"/><text x="34.9469%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (102 samples, 0.10%)</title><rect x="34.7141%" y="357" width="0.0971%" height="15" fill="rgb(214,55,33)" fg:x="36464" fg:w="102"/><text x="34.9641%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (102 samples, 0.10%)</title><rect x="34.7141%" y="341" width="0.0971%" height="15" fill="rgb(248,80,13)" fg:x="36464" fg:w="102"/><text x="34.9641%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (102 samples, 0.10%)</title><rect x="34.7141%" y="325" width="0.0971%" height="15" fill="rgb(238,52,6)" fg:x="36464" fg:w="102"/><text x="34.9641%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (148 samples, 0.14%)</title><rect x="34.6712%" y="645" width="0.1409%" height="15" fill="rgb(224,198,47)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (148 samples, 0.14%)</title><rect x="34.6712%" y="629" width="0.1409%" height="15" fill="rgb(233,171,20)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="639.50"></text></g><g><title>value_trait::Builder::object (148 samples, 0.14%)</title><rect x="34.6712%" y="613" width="0.1409%" height="15" fill="rgb(241,30,25)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="623.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (148 samples, 0.14%)</title><rect x="34.6712%" y="597" width="0.1409%" height="15" fill="rgb(207,171,38)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (148 samples, 0.14%)</title><rect x="34.6712%" y="581" width="0.1409%" height="15" fill="rgb(234,70,1)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (148 samples, 0.14%)</title><rect x="34.6712%" y="565" width="0.1409%" height="15" fill="rgb(232,178,18)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (148 samples, 0.14%)</title><rect x="34.6712%" y="549" width="0.1409%" height="15" fill="rgb(241,78,40)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (148 samples, 0.14%)</title><rect x="34.6712%" y="533" width="0.1409%" height="15" fill="rgb(222,35,25)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="543.50"></text></g><g><title>alloc::alloc::alloc (148 samples, 0.14%)</title><rect x="34.6712%" y="517" width="0.1409%" height="15" fill="rgb(207,92,16)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="527.50"></text></g><g><title>__rg_alloc (148 samples, 0.14%)</title><rect x="34.6712%" y="501" width="0.1409%" height="15" fill="rgb(216,59,51)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (148 samples, 0.14%)</title><rect x="34.6712%" y="485" width="0.1409%" height="15" fill="rgb(213,80,28)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="495.50"></text></g><g><title>rust_alloc (148 samples, 0.14%)</title><rect x="34.6712%" y="469" width="0.1409%" height="15" fill="rgb(220,93,7)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (148 samples, 0.14%)</title><rect x="34.6712%" y="453" width="0.1409%" height="15" fill="rgb(225,24,44)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (148 samples, 0.14%)</title><rect x="34.6712%" y="437" width="0.1409%" height="15" fill="rgb(243,74,40)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (148 samples, 0.14%)</title><rect x="34.6712%" y="421" width="0.1409%" height="15" fill="rgb(228,39,7)" fg:x="36419" fg:w="148"/><text x="34.9212%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="34.8121%" y="645" width="0.0190%" height="15" fill="rgb(227,79,8)" fg:x="36567" fg:w="20"/><text x="35.0621%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt; (20 samples, 0.02%)</title><rect x="34.8121%" y="629" width="0.0190%" height="15" fill="rgb(236,58,11)" fg:x="36567" fg:w="20"/><text x="35.0621%" y="639.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="34.8635%" y="613" width="0.0105%" height="15" fill="rgb(249,63,35)" fg:x="36621" fg:w="11"/><text x="35.1135%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="34.8635%" y="597" width="0.0105%" height="15" fill="rgb(252,114,16)" fg:x="36621" fg:w="11"/><text x="35.1135%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="34.8635%" y="581" width="0.0105%" height="15" fill="rgb(254,151,24)" fg:x="36621" fg:w="11"/><text x="35.1135%" y="591.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="34.8635%" y="565" width="0.0105%" height="15" fill="rgb(253,54,39)" fg:x="36621" fg:w="11"/><text x="35.1135%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="34.8635%" y="549" width="0.0105%" height="15" fill="rgb(243,25,45)" fg:x="36621" fg:w="11"/><text x="35.1135%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="34.8911%" y="549" width="0.0190%" height="15" fill="rgb(234,134,9)" fg:x="36650" fg:w="20"/><text x="35.1411%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (20 samples, 0.02%)</title><rect x="34.8911%" y="533" width="0.0190%" height="15" fill="rgb(227,166,31)" fg:x="36650" fg:w="20"/><text x="35.1411%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (93 samples, 0.09%)</title><rect x="34.8312%" y="645" width="0.0885%" height="15" fill="rgb(245,143,41)" fg:x="36587" fg:w="93"/><text x="35.0812%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (61 samples, 0.06%)</title><rect x="34.8616%" y="629" width="0.0581%" height="15" fill="rgb(238,181,32)" fg:x="36619" fg:w="61"/><text x="35.1116%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (48 samples, 0.05%)</title><rect x="34.8740%" y="613" width="0.0457%" height="15" fill="rgb(224,113,18)" fg:x="36632" fg:w="48"/><text x="35.1240%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (48 samples, 0.05%)</title><rect x="34.8740%" y="597" width="0.0457%" height="15" fill="rgb(240,229,28)" fg:x="36632" fg:w="48"/><text x="35.1240%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (30 samples, 0.03%)</title><rect x="34.8911%" y="581" width="0.0286%" height="15" fill="rgb(250,185,3)" fg:x="36650" fg:w="30"/><text x="35.1411%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (30 samples, 0.03%)</title><rect x="34.8911%" y="565" width="0.0286%" height="15" fill="rgb(212,59,25)" fg:x="36650" fg:w="30"/><text x="35.1411%" y="575.50"></text></g><g><title>core::time::Duration::as_nanos (11 samples, 0.01%)</title><rect x="34.9568%" y="629" width="0.0105%" height="15" fill="rgb(221,87,20)" fg:x="36719" fg:w="11"/><text x="35.2068%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (82 samples, 0.08%)</title><rect x="35.0301%" y="581" width="0.0781%" height="15" fill="rgb(213,74,28)" fg:x="36796" fg:w="82"/><text x="35.2801%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (82 samples, 0.08%)</title><rect x="35.0301%" y="565" width="0.0781%" height="15" fill="rgb(224,132,34)" fg:x="36796" fg:w="82"/><text x="35.2801%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (82 samples, 0.08%)</title><rect x="35.0301%" y="549" width="0.0781%" height="15" fill="rgb(222,101,24)" fg:x="36796" fg:w="82"/><text x="35.2801%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (82 samples, 0.08%)</title><rect x="35.0301%" y="533" width="0.0781%" height="15" fill="rgb(254,142,4)" fg:x="36796" fg:w="82"/><text x="35.2801%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (82 samples, 0.08%)</title><rect x="35.0301%" y="517" width="0.0781%" height="15" fill="rgb(230,229,49)" fg:x="36796" fg:w="82"/><text x="35.2801%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (37 samples, 0.04%)</title><rect x="35.0730%" y="501" width="0.0352%" height="15" fill="rgb(238,70,47)" fg:x="36841" fg:w="37"/><text x="35.3230%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (180 samples, 0.17%)</title><rect x="34.9673%" y="613" width="0.1714%" height="15" fill="rgb(231,160,17)" fg:x="36730" fg:w="180"/><text x="35.2173%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (180 samples, 0.17%)</title><rect x="34.9673%" y="597" width="0.1714%" height="15" fill="rgb(218,68,53)" fg:x="36730" fg:w="180"/><text x="35.2173%" y="607.50"></text></g><g><title>core::time::Duration::new (32 samples, 0.03%)</title><rect x="35.1082%" y="581" width="0.0305%" height="15" fill="rgb(236,111,10)" fg:x="36878" fg:w="32"/><text x="35.3582%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (187 samples, 0.18%)</title><rect x="34.9673%" y="629" width="0.1780%" height="15" fill="rgb(224,34,41)" fg:x="36730" fg:w="187"/><text x="35.2173%" y="639.50"></text></g><g><title>[[vdso]] (317 samples, 0.30%)</title><rect x="35.4547%" y="549" width="0.3018%" height="15" fill="rgb(241,118,19)" fg:x="37242" fg:w="317"/><text x="35.7047%" y="559.50"></text></g><g><title>tremor_common::time::nanotime (873 samples, 0.83%)</title><rect x="34.9264%" y="645" width="0.8311%" height="15" fill="rgb(238,129,25)" fg:x="36687" fg:w="873"/><text x="35.1764%" y="655.50"></text></g><g><title>std::time::SystemTime::now (643 samples, 0.61%)</title><rect x="35.1453%" y="629" width="0.6121%" height="15" fill="rgb(238,22,31)" fg:x="36917" fg:w="643"/><text x="35.3953%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (643 samples, 0.61%)</title><rect x="35.1453%" y="613" width="0.6121%" height="15" fill="rgb(222,174,48)" fg:x="36917" fg:w="643"/><text x="35.3953%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (643 samples, 0.61%)</title><rect x="35.1453%" y="597" width="0.6121%" height="15" fill="rgb(206,152,40)" fg:x="36917" fg:w="643"/><text x="35.3953%" y="607.50"></text></g><g><title>__clock_gettime_2 (513 samples, 0.49%)</title><rect x="35.2691%" y="581" width="0.4884%" height="15" fill="rgb(218,99,54)" fg:x="37047" fg:w="513"/><text x="35.5191%" y="591.50"></text></g><g><title>__vdso_clock_gettime (493 samples, 0.47%)</title><rect x="35.2881%" y="565" width="0.4693%" height="15" fill="rgb(220,174,26)" fg:x="37067" fg:w="493"/><text x="35.5381%" y="575.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (18 samples, 0.02%)</title><rect x="35.8184%" y="565" width="0.0171%" height="15" fill="rgb(245,116,9)" fg:x="37624" fg:w="18"/><text x="36.0684%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (74 samples, 0.07%)</title><rect x="35.7822%" y="629" width="0.0704%" height="15" fill="rgb(209,72,35)" fg:x="37586" fg:w="74"/><text x="36.0322%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (55 samples, 0.05%)</title><rect x="35.8003%" y="613" width="0.0524%" height="15" fill="rgb(226,126,21)" fg:x="37605" fg:w="55"/><text x="36.0503%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (55 samples, 0.05%)</title><rect x="35.8003%" y="597" width="0.0524%" height="15" fill="rgb(227,192,1)" fg:x="37605" fg:w="55"/><text x="36.0503%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (55 samples, 0.05%)</title><rect x="35.8003%" y="581" width="0.0524%" height="15" fill="rgb(237,180,29)" fg:x="37605" fg:w="55"/><text x="36.0503%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (18 samples, 0.02%)</title><rect x="35.8355%" y="565" width="0.0171%" height="15" fill="rgb(230,197,35)" fg:x="37642" fg:w="18"/><text x="36.0855%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,256 samples, 1.20%)</title><rect x="34.6579%" y="677" width="1.1957%" height="15" fill="rgb(246,193,31)" fg:x="36405" fg:w="1256"/><text x="34.9079%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,256 samples, 1.20%)</title><rect x="34.6579%" y="661" width="1.1957%" height="15" fill="rgb(241,36,4)" fg:x="36405" fg:w="1256"/><text x="34.9079%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (101 samples, 0.10%)</title><rect x="35.7575%" y="645" width="0.0962%" height="15" fill="rgb(241,130,17)" fg:x="37560" fg:w="101"/><text x="36.0075%" y="655.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="37.6653%" y="389" width="0.0105%" height="15" fill="rgb(206,137,32)" fg:x="39564" fg:w="11"/><text x="37.9153%" y="399.50"></text></g><g><title>size_to_sizeclass (30 samples, 0.03%)</title><rect x="37.6805%" y="357" width="0.0286%" height="15" fill="rgb(237,228,51)" fg:x="39580" fg:w="30"/><text x="37.9305%" y="367.50"></text></g><g><title>rust_alloc (16 samples, 0.02%)</title><rect x="37.6939%" y="341" width="0.0152%" height="15" fill="rgb(243,6,42)" fg:x="39594" fg:w="16"/><text x="37.9439%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (44 samples, 0.04%)</title><rect x="37.7215%" y="341" width="0.0419%" height="15" fill="rgb(251,74,28)" fg:x="39623" fg:w="44"/><text x="37.9715%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (44 samples, 0.04%)</title><rect x="37.7215%" y="325" width="0.0419%" height="15" fill="rgb(218,20,49)" fg:x="39623" fg:w="44"/><text x="37.9715%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (694 samples, 0.66%)</title><rect x="37.6805%" y="389" width="0.6607%" height="15" fill="rgb(238,28,14)" fg:x="39580" fg:w="694"/><text x="37.9305%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (694 samples, 0.66%)</title><rect x="37.6805%" y="373" width="0.6607%" height="15" fill="rgb(229,40,46)" fg:x="39580" fg:w="694"/><text x="37.9305%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (664 samples, 0.63%)</title><rect x="37.7091%" y="357" width="0.6321%" height="15" fill="rgb(244,195,20)" fg:x="39610" fg:w="664"/><text x="37.9591%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (607 samples, 0.58%)</title><rect x="37.7633%" y="341" width="0.5779%" height="15" fill="rgb(253,56,35)" fg:x="39667" fg:w="607"/><text x="38.0133%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (607 samples, 0.58%)</title><rect x="37.7633%" y="325" width="0.5779%" height="15" fill="rgb(210,149,44)" fg:x="39667" fg:w="607"/><text x="38.0133%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (758 samples, 0.72%)</title><rect x="37.6329%" y="533" width="0.7216%" height="15" fill="rgb(240,135,12)" fg:x="39530" fg:w="758"/><text x="37.8829%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (758 samples, 0.72%)</title><rect x="37.6329%" y="517" width="0.7216%" height="15" fill="rgb(251,24,50)" fg:x="39530" fg:w="758"/><text x="37.8829%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (758 samples, 0.72%)</title><rect x="37.6329%" y="501" width="0.7216%" height="15" fill="rgb(243,200,47)" fg:x="39530" fg:w="758"/><text x="37.8829%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (745 samples, 0.71%)</title><rect x="37.6453%" y="485" width="0.7092%" height="15" fill="rgb(224,166,26)" fg:x="39543" fg:w="745"/><text x="37.8953%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (745 samples, 0.71%)</title><rect x="37.6453%" y="469" width="0.7092%" height="15" fill="rgb(233,0,47)" fg:x="39543" fg:w="745"/><text x="37.8953%" y="479.50"></text></g><g><title>alloc::alloc::alloc (731 samples, 0.70%)</title><rect x="37.6586%" y="453" width="0.6959%" height="15" fill="rgb(253,80,5)" fg:x="39557" fg:w="731"/><text x="37.9086%" y="463.50"></text></g><g><title>__rg_alloc (731 samples, 0.70%)</title><rect x="37.6586%" y="437" width="0.6959%" height="15" fill="rgb(214,133,25)" fg:x="39557" fg:w="731"/><text x="37.9086%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (731 samples, 0.70%)</title><rect x="37.6586%" y="421" width="0.6959%" height="15" fill="rgb(209,27,14)" fg:x="39557" fg:w="731"/><text x="37.9086%" y="431.50"></text></g><g><title>rust_alloc (724 samples, 0.69%)</title><rect x="37.6653%" y="405" width="0.6893%" height="15" fill="rgb(219,102,51)" fg:x="39564" fg:w="724"/><text x="37.9153%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="38.3412%" y="389" width="0.0133%" height="15" fill="rgb(237,18,16)" fg:x="40274" fg:w="14"/><text x="38.5912%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (839 samples, 0.80%)</title><rect x="37.6025%" y="613" width="0.7987%" height="15" fill="rgb(241,85,17)" fg:x="39498" fg:w="839"/><text x="37.8525%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (807 samples, 0.77%)</title><rect x="37.6329%" y="597" width="0.7683%" height="15" fill="rgb(236,90,42)" fg:x="39530" fg:w="807"/><text x="37.8829%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (807 samples, 0.77%)</title><rect x="37.6329%" y="581" width="0.7683%" height="15" fill="rgb(249,57,21)" fg:x="39530" fg:w="807"/><text x="37.8829%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (807 samples, 0.77%)</title><rect x="37.6329%" y="565" width="0.7683%" height="15" fill="rgb(243,12,36)" fg:x="39530" fg:w="807"/><text x="37.8829%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (807 samples, 0.77%)</title><rect x="37.6329%" y="549" width="0.7683%" height="15" fill="rgb(253,128,47)" fg:x="39530" fg:w="807"/><text x="37.8829%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (49 samples, 0.05%)</title><rect x="38.3545%" y="533" width="0.0466%" height="15" fill="rgb(207,33,20)" fg:x="40288" fg:w="49"/><text x="38.6045%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.05%)</title><rect x="38.3545%" y="517" width="0.0466%" height="15" fill="rgb(233,215,35)" fg:x="40288" fg:w="49"/><text x="38.6045%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (45 samples, 0.04%)</title><rect x="38.3584%" y="501" width="0.0428%" height="15" fill="rgb(249,188,52)" fg:x="40292" fg:w="45"/><text x="38.6084%" y="511.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,190 samples, 1.13%)</title><rect x="37.2759%" y="629" width="1.1329%" height="15" fill="rgb(225,12,32)" fg:x="39155" fg:w="1190"/><text x="37.5259%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (79 samples, 0.08%)</title><rect x="38.5459%" y="597" width="0.0752%" height="15" fill="rgb(247,98,14)" fg:x="40489" fg:w="79"/><text x="38.7959%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (50 samples, 0.05%)</title><rect x="38.5735%" y="581" width="0.0476%" height="15" fill="rgb(247,219,48)" fg:x="40518" fg:w="50"/><text x="38.8235%" y="591.50"></text></g><g><title>size_to_sizeclass (62 samples, 0.06%)</title><rect x="38.6506%" y="373" width="0.0590%" height="15" fill="rgb(253,60,48)" fg:x="40599" fg:w="62"/><text x="38.9006%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (12 samples, 0.01%)</title><rect x="38.7154%" y="357" width="0.0114%" height="15" fill="rgb(245,15,52)" fg:x="40667" fg:w="12"/><text x="38.9654%" y="367.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (12 samples, 0.01%)</title><rect x="38.7154%" y="341" width="0.0114%" height="15" fill="rgb(220,133,28)" fg:x="40667" fg:w="12"/><text x="38.9654%" y="351.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (12 samples, 0.01%)</title><rect x="38.7154%" y="325" width="0.0114%" height="15" fill="rgb(217,180,4)" fg:x="40667" fg:w="12"/><text x="38.9654%" y="335.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="38.7154%" y="309" width="0.0114%" height="15" fill="rgb(251,24,1)" fg:x="40667" fg:w="12"/><text x="38.9654%" y="319.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="38.7154%" y="293" width="0.0114%" height="15" fill="rgb(212,185,49)" fg:x="40667" fg:w="12"/><text x="38.9654%" y="303.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (13 samples, 0.01%)</title><rect x="38.7334%" y="325" width="0.0124%" height="15" fill="rgb(215,175,22)" fg:x="40686" fg:w="13"/><text x="38.9834%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (13 samples, 0.01%)</title><rect x="38.7334%" y="309" width="0.0124%" height="15" fill="rgb(250,205,14)" fg:x="40686" fg:w="13"/><text x="38.9834%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="38.7334%" y="293" width="0.0124%" height="15" fill="rgb(225,211,22)" fg:x="40686" fg:w="13"/><text x="38.9834%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (12 samples, 0.01%)</title><rect x="38.7458%" y="325" width="0.0114%" height="15" fill="rgb(251,179,42)" fg:x="40699" fg:w="12"/><text x="38.9958%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (12 samples, 0.01%)</title><rect x="38.7458%" y="309" width="0.0114%" height="15" fill="rgb(208,216,51)" fg:x="40699" fg:w="12"/><text x="38.9958%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="38.7268%" y="357" width="0.0324%" height="15" fill="rgb(235,36,11)" fg:x="40679" fg:w="34"/><text x="38.9768%" y="367.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (28 samples, 0.03%)</title><rect x="38.7325%" y="341" width="0.0267%" height="15" fill="rgb(213,189,28)" fg:x="40685" fg:w="28"/><text x="38.9825%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (64 samples, 0.06%)</title><rect x="38.7620%" y="357" width="0.0609%" height="15" fill="rgb(227,203,42)" fg:x="40716" fg:w="64"/><text x="39.0120%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (64 samples, 0.06%)</title><rect x="38.7620%" y="341" width="0.0609%" height="15" fill="rgb(244,72,36)" fg:x="40716" fg:w="64"/><text x="39.0120%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (376 samples, 0.36%)</title><rect x="38.6430%" y="405" width="0.3580%" height="15" fill="rgb(213,53,17)" fg:x="40591" fg:w="376"/><text x="38.8930%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (374 samples, 0.36%)</title><rect x="38.6449%" y="389" width="0.3561%" height="15" fill="rgb(207,167,3)" fg:x="40593" fg:w="374"/><text x="38.8949%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (306 samples, 0.29%)</title><rect x="38.7096%" y="373" width="0.2913%" height="15" fill="rgb(216,98,30)" fg:x="40661" fg:w="306"/><text x="38.9596%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (187 samples, 0.18%)</title><rect x="38.8229%" y="357" width="0.1780%" height="15" fill="rgb(236,123,15)" fg:x="40780" fg:w="187"/><text x="39.0729%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (187 samples, 0.18%)</title><rect x="38.8229%" y="341" width="0.1780%" height="15" fill="rgb(248,81,50)" fg:x="40780" fg:w="187"/><text x="39.0729%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (401 samples, 0.38%)</title><rect x="38.6211%" y="549" width="0.3818%" height="15" fill="rgb(214,120,4)" fg:x="40568" fg:w="401"/><text x="38.8711%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (401 samples, 0.38%)</title><rect x="38.6211%" y="533" width="0.3818%" height="15" fill="rgb(208,179,34)" fg:x="40568" fg:w="401"/><text x="38.8711%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (397 samples, 0.38%)</title><rect x="38.6249%" y="517" width="0.3779%" height="15" fill="rgb(227,140,7)" fg:x="40572" fg:w="397"/><text x="38.8749%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (397 samples, 0.38%)</title><rect x="38.6249%" y="501" width="0.3779%" height="15" fill="rgb(214,22,6)" fg:x="40572" fg:w="397"/><text x="38.8749%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (397 samples, 0.38%)</title><rect x="38.6249%" y="485" width="0.3779%" height="15" fill="rgb(207,137,27)" fg:x="40572" fg:w="397"/><text x="38.8749%" y="495.50"></text></g><g><title>alloc::alloc::alloc (388 samples, 0.37%)</title><rect x="38.6335%" y="469" width="0.3694%" height="15" fill="rgb(210,8,46)" fg:x="40581" fg:w="388"/><text x="38.8835%" y="479.50"></text></g><g><title>__rg_alloc (388 samples, 0.37%)</title><rect x="38.6335%" y="453" width="0.3694%" height="15" fill="rgb(240,16,54)" fg:x="40581" fg:w="388"/><text x="38.8835%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (388 samples, 0.37%)</title><rect x="38.6335%" y="437" width="0.3694%" height="15" fill="rgb(211,209,29)" fg:x="40581" fg:w="388"/><text x="38.8835%" y="447.50"></text></g><g><title>rust_alloc (387 samples, 0.37%)</title><rect x="38.6344%" y="421" width="0.3684%" height="15" fill="rgb(226,228,24)" fg:x="40582" fg:w="387"/><text x="38.8844%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (857 samples, 0.82%)</title><rect x="38.6211%" y="565" width="0.8159%" height="15" fill="rgb(222,84,9)" fg:x="40568" fg:w="857"/><text x="38.8711%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (456 samples, 0.43%)</title><rect x="39.0029%" y="549" width="0.4341%" height="15" fill="rgb(234,203,30)" fg:x="40969" fg:w="456"/><text x="39.2529%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (456 samples, 0.43%)</title><rect x="39.0029%" y="533" width="0.4341%" height="15" fill="rgb(238,109,14)" fg:x="40969" fg:w="456"/><text x="39.2529%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (451 samples, 0.43%)</title><rect x="39.0076%" y="517" width="0.4294%" height="15" fill="rgb(233,206,34)" fg:x="40974" fg:w="451"/><text x="39.2576%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (938 samples, 0.89%)</title><rect x="38.5459%" y="613" width="0.8930%" height="15" fill="rgb(220,167,47)" fg:x="40489" fg:w="938"/><text x="38.7959%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (859 samples, 0.82%)</title><rect x="38.6211%" y="597" width="0.8178%" height="15" fill="rgb(238,105,10)" fg:x="40568" fg:w="859"/><text x="38.8711%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (859 samples, 0.82%)</title><rect x="38.6211%" y="581" width="0.8178%" height="15" fill="rgb(213,227,17)" fg:x="40568" fg:w="859"/><text x="38.8711%" y="591.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (3,527 samples, 3.36%)</title><rect x="36.0840%" y="645" width="3.3577%" height="15" fill="rgb(217,132,38)" fg:x="37903" fg:w="3527"/><text x="36.3340%" y="655.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,083 samples, 1.03%)</title><rect x="38.4107%" y="629" width="1.0310%" height="15" fill="rgb(242,146,4)" fg:x="40347" fg:w="1083"/><text x="38.6607%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,770 samples, 3.59%)</title><rect x="35.8536%" y="677" width="3.5891%" height="15" fill="rgb(212,61,9)" fg:x="37661" fg:w="3770"/><text x="36.1036%" y="687.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,770 samples, 3.59%)</title><rect x="35.8536%" y="661" width="3.5891%" height="15" fill="rgb(247,126,22)" fg:x="37661" fg:w="3770"/><text x="36.1036%" y="671.50">&lt;cor..</text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (18 samples, 0.02%)</title><rect x="39.4465%" y="437" width="0.0171%" height="15" fill="rgb(220,196,2)" fg:x="41435" fg:w="18"/><text x="39.6965%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (26 samples, 0.02%)</title><rect x="39.4427%" y="453" width="0.0248%" height="15" fill="rgb(208,46,4)" fg:x="41431" fg:w="26"/><text x="39.6927%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (23 samples, 0.02%)</title><rect x="39.4808%" y="437" width="0.0219%" height="15" fill="rgb(252,104,46)" fg:x="41471" fg:w="23"/><text x="39.7308%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (182 samples, 0.17%)</title><rect x="39.4427%" y="485" width="0.1733%" height="15" fill="rgb(237,152,48)" fg:x="41431" fg:w="182"/><text x="39.6927%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (182 samples, 0.17%)</title><rect x="39.4427%" y="469" width="0.1733%" height="15" fill="rgb(221,59,37)" fg:x="41431" fg:w="182"/><text x="39.6927%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (156 samples, 0.15%)</title><rect x="39.4674%" y="453" width="0.1485%" height="15" fill="rgb(209,202,51)" fg:x="41457" fg:w="156"/><text x="39.7174%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (119 samples, 0.11%)</title><rect x="39.5027%" y="437" width="0.1133%" height="15" fill="rgb(228,81,30)" fg:x="41494" fg:w="119"/><text x="39.7527%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (119 samples, 0.11%)</title><rect x="39.5027%" y="421" width="0.1133%" height="15" fill="rgb(227,42,39)" fg:x="41494" fg:w="119"/><text x="39.7527%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (119 samples, 0.11%)</title><rect x="39.5027%" y="405" width="0.1133%" height="15" fill="rgb(221,26,2)" fg:x="41494" fg:w="119"/><text x="39.7527%" y="415.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (207 samples, 0.20%)</title><rect x="39.4427%" y="677" width="0.1971%" height="15" fill="rgb(254,61,31)" fg:x="41431" fg:w="207"/><text x="39.6927%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (207 samples, 0.20%)</title><rect x="39.4427%" y="661" width="0.1971%" height="15" fill="rgb(222,173,38)" fg:x="41431" fg:w="207"/><text x="39.6927%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (207 samples, 0.20%)</title><rect x="39.4427%" y="645" width="0.1971%" height="15" fill="rgb(218,50,12)" fg:x="41431" fg:w="207"/><text x="39.6927%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (207 samples, 0.20%)</title><rect x="39.4427%" y="629" width="0.1971%" height="15" fill="rgb(223,88,40)" fg:x="41431" fg:w="207"/><text x="39.6927%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (207 samples, 0.20%)</title><rect x="39.4427%" y="613" width="0.1971%" height="15" fill="rgb(237,54,19)" fg:x="41431" fg:w="207"/><text x="39.6927%" y="623.50"></text></g><g><title>alloc::alloc::alloc (207 samples, 0.20%)</title><rect x="39.4427%" y="597" width="0.1971%" height="15" fill="rgb(251,129,25)" fg:x="41431" fg:w="207"/><text x="39.6927%" y="607.50"></text></g><g><title>__rg_alloc (207 samples, 0.20%)</title><rect x="39.4427%" y="581" width="0.1971%" height="15" fill="rgb(238,97,19)" fg:x="41431" fg:w="207"/><text x="39.6927%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (207 samples, 0.20%)</title><rect x="39.4427%" y="565" width="0.1971%" height="15" fill="rgb(240,169,18)" fg:x="41431" fg:w="207"/><text x="39.6927%" y="575.50"></text></g><g><title>rust_alloc (207 samples, 0.20%)</title><rect x="39.4427%" y="549" width="0.1971%" height="15" fill="rgb(230,187,49)" fg:x="41431" fg:w="207"/><text x="39.6927%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (207 samples, 0.20%)</title><rect x="39.4427%" y="533" width="0.1971%" height="15" fill="rgb(209,44,26)" fg:x="41431" fg:w="207"/><text x="39.6927%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (207 samples, 0.20%)</title><rect x="39.4427%" y="517" width="0.1971%" height="15" fill="rgb(244,0,6)" fg:x="41431" fg:w="207"/><text x="39.6927%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (207 samples, 0.20%)</title><rect x="39.4427%" y="501" width="0.1971%" height="15" fill="rgb(248,18,21)" fg:x="41431" fg:w="207"/><text x="39.6927%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="39.6160%" y="485" width="0.0238%" height="15" fill="rgb(245,180,19)" fg:x="41613" fg:w="25"/><text x="39.8660%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="39.6160%" y="469" width="0.0238%" height="15" fill="rgb(252,118,36)" fg:x="41613" fg:w="25"/><text x="39.8660%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="39.6160%" y="453" width="0.0238%" height="15" fill="rgb(210,224,19)" fg:x="41613" fg:w="25"/><text x="39.8660%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="39.6207%" y="437" width="0.0190%" height="15" fill="rgb(218,30,24)" fg:x="41618" fg:w="20"/><text x="39.8707%" y="447.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (19 samples, 0.02%)</title><rect x="39.6217%" y="421" width="0.0181%" height="15" fill="rgb(219,75,50)" fg:x="41619" fg:w="19"/><text x="39.8717%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="39.6398%" y="661" width="0.0200%" height="15" fill="rgb(234,72,50)" fg:x="41638" fg:w="21"/><text x="39.8898%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="39.6398%" y="677" width="0.0219%" height="15" fill="rgb(219,100,48)" fg:x="41638" fg:w="23"/><text x="39.8898%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (5,271 samples, 5.02%)</title><rect x="34.6579%" y="693" width="5.0180%" height="15" fill="rgb(253,5,41)" fg:x="36405" fg:w="5271"/><text x="34.9079%" y="703.50">tremor..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="39.6617%" y="677" width="0.0143%" height="15" fill="rgb(247,181,11)" fg:x="41661" fg:w="15"/><text x="39.9117%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (15 samples, 0.01%)</title><rect x="39.6617%" y="661" width="0.0143%" height="15" fill="rgb(222,223,25)" fg:x="41661" fg:w="15"/><text x="39.9117%" y="671.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (6,043 samples, 5.75%)</title><rect x="33.9239%" y="1157" width="5.7530%" height="15" fill="rgb(214,198,28)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="1167.50">async_g..</text></g><g><title>std::panic::catch_unwind (6,043 samples, 5.75%)</title><rect x="33.9239%" y="1141" width="5.7530%" height="15" fill="rgb(230,46,43)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="1151.50">std::pa..</text></g><g><title>std::panicking::try (6,043 samples, 5.75%)</title><rect x="33.9239%" y="1125" width="5.7530%" height="15" fill="rgb(233,65,53)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="1135.50">std::pa..</text></g><g><title>std::panicking::try::do_call (6,043 samples, 5.75%)</title><rect x="33.9239%" y="1109" width="5.7530%" height="15" fill="rgb(221,121,27)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="1119.50">std::pa..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (6,043 samples, 5.75%)</title><rect x="33.9239%" y="1093" width="5.7530%" height="15" fill="rgb(247,70,47)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="1103.50">async_g..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,043 samples, 5.75%)</title><rect x="33.9239%" y="1077" width="5.7530%" height="15" fill="rgb(228,85,35)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="1087.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,043 samples, 5.75%)</title><rect x="33.9239%" y="1061" width="5.7530%" height="15" fill="rgb(209,50,18)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="1071.50">std::th..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (6,043 samples, 5.75%)</title><rect x="33.9239%" y="1045" width="5.7530%" height="15" fill="rgb(250,19,35)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="1055.50">async_g..</text></g><g><title>async_global_executor::reactor::block_on (6,043 samples, 5.75%)</title><rect x="33.9239%" y="1029" width="5.7530%" height="15" fill="rgb(253,107,29)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="1039.50">async_g..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (6,043 samples, 5.75%)</title><rect x="33.9239%" y="1013" width="5.7530%" height="15" fill="rgb(252,179,29)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="1023.50">async_g..</text></g><g><title>async_io::driver::block_on (6,043 samples, 5.75%)</title><rect x="33.9239%" y="997" width="5.7530%" height="15" fill="rgb(238,194,6)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="1007.50">async_i..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,043 samples, 5.75%)</title><rect x="33.9239%" y="981" width="5.7530%" height="15" fill="rgb(238,164,29)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="991.50">&lt;future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,043 samples, 5.75%)</title><rect x="33.9239%" y="965" width="5.7530%" height="15" fill="rgb(224,25,9)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="975.50">&lt;core::..</text></g><g><title>async_executor::Executor::run::{{closure}} (6,043 samples, 5.75%)</title><rect x="33.9239%" y="949" width="5.7530%" height="15" fill="rgb(244,153,23)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="959.50">async_e..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,043 samples, 5.75%)</title><rect x="33.9239%" y="933" width="5.7530%" height="15" fill="rgb(212,203,14)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="943.50">&lt;future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,043 samples, 5.75%)</title><rect x="33.9239%" y="917" width="5.7530%" height="15" fill="rgb(220,164,20)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="927.50">&lt;core::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (6,043 samples, 5.75%)</title><rect x="33.9239%" y="901" width="5.7530%" height="15" fill="rgb(222,203,48)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="911.50">async_e..</text></g><g><title>async_task::runnable::Runnable::run (6,043 samples, 5.75%)</title><rect x="33.9239%" y="885" width="5.7530%" height="15" fill="rgb(215,159,22)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="895.50">async_t..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (6,043 samples, 5.75%)</title><rect x="33.9239%" y="869" width="5.7530%" height="15" fill="rgb(216,183,47)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="879.50">async_t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6,043 samples, 5.75%)</title><rect x="33.9239%" y="853" width="5.7530%" height="15" fill="rgb(229,195,25)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="863.50">&lt;core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,043 samples, 5.75%)</title><rect x="33.9239%" y="837" width="5.7530%" height="15" fill="rgb(224,132,51)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="847.50">&lt;core::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,043 samples, 5.75%)</title><rect x="33.9239%" y="821" width="5.7530%" height="15" fill="rgb(240,63,7)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="831.50">async_e..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,043 samples, 5.75%)</title><rect x="33.9239%" y="805" width="5.7530%" height="15" fill="rgb(249,182,41)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="815.50">&lt;async_..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,043 samples, 5.75%)</title><rect x="33.9239%" y="789" width="5.7530%" height="15" fill="rgb(243,47,26)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="799.50">async_s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,043 samples, 5.75%)</title><rect x="33.9239%" y="773" width="5.7530%" height="15" fill="rgb(233,48,2)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="783.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,043 samples, 5.75%)</title><rect x="33.9239%" y="757" width="5.7530%" height="15" fill="rgb(244,165,34)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="767.50">std::th..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,043 samples, 5.75%)</title><rect x="33.9239%" y="741" width="5.7530%" height="15" fill="rgb(207,89,7)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="751.50">async_s..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,043 samples, 5.75%)</title><rect x="33.9239%" y="725" width="5.7530%" height="15" fill="rgb(244,117,36)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="735.50">&lt;async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,043 samples, 5.75%)</title><rect x="33.9239%" y="709" width="5.7530%" height="15" fill="rgb(226,144,34)" fg:x="35634" fg:w="6043"/><text x="34.1739%" y="719.50">&lt;core::..</text></g><g><title>syscall_exit_to_user_mode (22 samples, 0.02%)</title><rect x="39.7321%" y="469" width="0.0209%" height="15" fill="rgb(213,23,19)" fg:x="41735" fg:w="22"/><text x="39.9821%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (55 samples, 0.05%)</title><rect x="39.7016%" y="533" width="0.0524%" height="15" fill="rgb(217,75,12)" fg:x="41703" fg:w="55"/><text x="39.9516%" y="543.50"></text></g><g><title>__GI___lll_lock_wake (35 samples, 0.03%)</title><rect x="39.7207%" y="517" width="0.0333%" height="15" fill="rgb(224,159,17)" fg:x="41723" fg:w="35"/><text x="39.9707%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.03%)</title><rect x="39.7226%" y="501" width="0.0314%" height="15" fill="rgb(217,118,1)" fg:x="41725" fg:w="33"/><text x="39.9726%" y="511.50"></text></g><g><title>do_syscall_64 (33 samples, 0.03%)</title><rect x="39.7226%" y="485" width="0.0314%" height="15" fill="rgb(232,180,48)" fg:x="41725" fg:w="33"/><text x="39.9726%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (57 samples, 0.05%)</title><rect x="39.7007%" y="597" width="0.0543%" height="15" fill="rgb(230,27,33)" fg:x="41702" fg:w="57"/><text x="39.9507%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="39.7007%" y="581" width="0.0543%" height="15" fill="rgb(205,31,21)" fg:x="41702" fg:w="57"/><text x="39.9507%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (56 samples, 0.05%)</title><rect x="39.7016%" y="565" width="0.0533%" height="15" fill="rgb(253,59,4)" fg:x="41703" fg:w="56"/><text x="39.9516%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (56 samples, 0.05%)</title><rect x="39.7016%" y="549" width="0.0533%" height="15" fill="rgb(224,201,9)" fg:x="41703" fg:w="56"/><text x="39.9516%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (19 samples, 0.02%)</title><rect x="39.7550%" y="597" width="0.0181%" height="15" fill="rgb(229,206,30)" fg:x="41759" fg:w="19"/><text x="40.0050%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="39.7550%" y="581" width="0.0181%" height="15" fill="rgb(212,67,47)" fg:x="41759" fg:w="19"/><text x="40.0050%" y="591.50"></text></g><g><title>enqueue_task_fair (32 samples, 0.03%)</title><rect x="39.8225%" y="277" width="0.0305%" height="15" fill="rgb(211,96,50)" fg:x="41830" fg:w="32"/><text x="40.0725%" y="287.50"></text></g><g><title>enqueue_entity (13 samples, 0.01%)</title><rect x="39.8406%" y="261" width="0.0124%" height="15" fill="rgb(252,114,18)" fg:x="41849" fg:w="13"/><text x="40.0906%" y="271.50"></text></g><g><title>ttwu_do_activate (69 samples, 0.07%)</title><rect x="39.8206%" y="309" width="0.0657%" height="15" fill="rgb(223,58,37)" fg:x="41828" fg:w="69"/><text x="40.0706%" y="319.50"></text></g><g><title>enqueue_task (68 samples, 0.06%)</title><rect x="39.8216%" y="293" width="0.0647%" height="15" fill="rgb(237,70,4)" fg:x="41829" fg:w="68"/><text x="40.0716%" y="303.50"></text></g><g><title>psi_task_change (31 samples, 0.03%)</title><rect x="39.8568%" y="277" width="0.0295%" height="15" fill="rgb(244,85,46)" fg:x="41866" fg:w="31"/><text x="40.1068%" y="287.50"></text></g><g><title>psi_group_change (22 samples, 0.02%)</title><rect x="39.8654%" y="261" width="0.0209%" height="15" fill="rgb(223,39,52)" fg:x="41875" fg:w="22"/><text x="40.1154%" y="271.50"></text></g><g><title>__wake_up_common (110 samples, 0.10%)</title><rect x="39.7968%" y="357" width="0.1047%" height="15" fill="rgb(218,200,14)" fg:x="41803" fg:w="110"/><text x="40.0468%" y="367.50"></text></g><g><title>autoremove_wake_function (105 samples, 0.10%)</title><rect x="39.8016%" y="341" width="0.1000%" height="15" fill="rgb(208,171,16)" fg:x="41808" fg:w="105"/><text x="40.0516%" y="351.50"></text></g><g><title>try_to_wake_up (103 samples, 0.10%)</title><rect x="39.8035%" y="325" width="0.0981%" height="15" fill="rgb(234,200,18)" fg:x="41810" fg:w="103"/><text x="40.0535%" y="335.50"></text></g><g><title>__wake_up_common_lock (113 samples, 0.11%)</title><rect x="39.7968%" y="373" width="0.1076%" height="15" fill="rgb(228,45,11)" fg:x="41803" fg:w="113"/><text x="40.0468%" y="383.50"></text></g><g><title>__wake_up_common (127 samples, 0.12%)</title><rect x="39.7911%" y="405" width="0.1209%" height="15" fill="rgb(237,182,11)" fg:x="41797" fg:w="127"/><text x="40.0411%" y="415.50"></text></g><g><title>ep_poll_callback (125 samples, 0.12%)</title><rect x="39.7930%" y="389" width="0.1190%" height="15" fill="rgb(241,175,49)" fg:x="41799" fg:w="125"/><text x="40.0430%" y="399.50"></text></g><g><title>ksys_write (147 samples, 0.14%)</title><rect x="39.7788%" y="453" width="0.1399%" height="15" fill="rgb(247,38,35)" fg:x="41784" fg:w="147"/><text x="40.0288%" y="463.50"></text></g><g><title>vfs_write (137 samples, 0.13%)</title><rect x="39.7883%" y="437" width="0.1304%" height="15" fill="rgb(228,39,49)" fg:x="41794" fg:w="137"/><text x="40.0383%" y="447.50"></text></g><g><title>eventfd_write (137 samples, 0.13%)</title><rect x="39.7883%" y="421" width="0.1304%" height="15" fill="rgb(226,101,26)" fg:x="41794" fg:w="137"/><text x="40.0383%" y="431.50"></text></g><g><title>syscall_exit_to_user_mode (21 samples, 0.02%)</title><rect x="39.9187%" y="453" width="0.0200%" height="15" fill="rgb(206,141,19)" fg:x="41931" fg:w="21"/><text x="40.1687%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (172 samples, 0.16%)</title><rect x="39.7768%" y="485" width="0.1637%" height="15" fill="rgb(211,200,13)" fg:x="41782" fg:w="172"/><text x="40.0268%" y="495.50"></text></g><g><title>do_syscall_64 (172 samples, 0.16%)</title><rect x="39.7768%" y="469" width="0.1637%" height="15" fill="rgb(241,121,6)" fg:x="41782" fg:w="172"/><text x="40.0268%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::notify (178 samples, 0.17%)</title><rect x="39.7749%" y="549" width="0.1695%" height="15" fill="rgb(234,221,29)" fg:x="41780" fg:w="178"/><text x="40.0249%" y="559.50"></text></g><g><title>polling::Poller::notify (178 samples, 0.17%)</title><rect x="39.7749%" y="533" width="0.1695%" height="15" fill="rgb(229,136,5)" fg:x="41780" fg:w="178"/><text x="40.0249%" y="543.50"></text></g><g><title>polling::epoll::Poller::notify (178 samples, 0.17%)</title><rect x="39.7749%" y="517" width="0.1695%" height="15" fill="rgb(238,36,11)" fg:x="41780" fg:w="178"/><text x="40.0249%" y="527.50"></text></g><g><title>__GI___write (178 samples, 0.17%)</title><rect x="39.7749%" y="501" width="0.1695%" height="15" fill="rgb(251,55,41)" fg:x="41780" fg:w="178"/><text x="40.0249%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (11 samples, 0.01%)</title><rect x="39.9596%" y="517" width="0.0105%" height="15" fill="rgb(242,34,40)" fg:x="41974" fg:w="11"/><text x="40.2096%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (11 samples, 0.01%)</title><rect x="39.9596%" y="501" width="0.0105%" height="15" fill="rgb(215,42,17)" fg:x="41974" fg:w="11"/><text x="40.2096%" y="511.50"></text></g><g><title>_raw_spin_lock (11 samples, 0.01%)</title><rect x="40.0263%" y="373" width="0.0105%" height="15" fill="rgb(207,44,46)" fg:x="42044" fg:w="11"/><text x="40.2763%" y="383.50"></text></g><g><title>futex_wake_mark (27 samples, 0.03%)</title><rect x="40.0406%" y="373" width="0.0257%" height="15" fill="rgb(211,206,28)" fg:x="42059" fg:w="27"/><text x="40.2906%" y="383.50"></text></g><g><title>__futex_unqueue (17 samples, 0.02%)</title><rect x="40.0501%" y="357" width="0.0162%" height="15" fill="rgb(237,167,16)" fg:x="42069" fg:w="17"/><text x="40.3001%" y="367.50"></text></g><g><title>select_task_rq_fair (35 samples, 0.03%)</title><rect x="40.1015%" y="341" width="0.0333%" height="15" fill="rgb(233,66,6)" fg:x="42123" fg:w="35"/><text x="40.3515%" y="351.50"></text></g><g><title>available_idle_cpu (13 samples, 0.01%)</title><rect x="40.1224%" y="325" width="0.0124%" height="15" fill="rgb(246,123,29)" fg:x="42145" fg:w="13"/><text x="40.3724%" y="335.50"></text></g><g><title>enqueue_task_fair (82 samples, 0.08%)</title><rect x="40.1462%" y="309" width="0.0781%" height="15" fill="rgb(209,62,40)" fg:x="42170" fg:w="82"/><text x="40.3962%" y="319.50"></text></g><g><title>enqueue_entity (56 samples, 0.05%)</title><rect x="40.1710%" y="293" width="0.0533%" height="15" fill="rgb(218,4,25)" fg:x="42196" fg:w="56"/><text x="40.4210%" y="303.50"></text></g><g><title>update_load_avg (19 samples, 0.02%)</title><rect x="40.2062%" y="277" width="0.0181%" height="15" fill="rgb(253,91,49)" fg:x="42233" fg:w="19"/><text x="40.4562%" y="287.50"></text></g><g><title>psi_group_change (48 samples, 0.05%)</title><rect x="40.2471%" y="293" width="0.0457%" height="15" fill="rgb(228,155,29)" fg:x="42276" fg:w="48"/><text x="40.4971%" y="303.50"></text></g><g><title>ttwu_do_activate (168 samples, 0.16%)</title><rect x="40.1348%" y="341" width="0.1599%" height="15" fill="rgb(243,57,37)" fg:x="42158" fg:w="168"/><text x="40.3848%" y="351.50"></text></g><g><title>enqueue_task (157 samples, 0.15%)</title><rect x="40.1453%" y="325" width="0.1495%" height="15" fill="rgb(244,167,17)" fg:x="42169" fg:w="157"/><text x="40.3953%" y="335.50"></text></g><g><title>psi_task_change (66 samples, 0.06%)</title><rect x="40.2319%" y="309" width="0.0628%" height="15" fill="rgb(207,181,38)" fg:x="42260" fg:w="66"/><text x="40.4819%" y="319.50"></text></g><g><title>ttwu_do_wakeup (11 samples, 0.01%)</title><rect x="40.2947%" y="341" width="0.0105%" height="15" fill="rgb(211,8,23)" fg:x="42326" fg:w="11"/><text x="40.5447%" y="351.50"></text></g><g><title>check_preempt_curr (11 samples, 0.01%)</title><rect x="40.2947%" y="325" width="0.0105%" height="15" fill="rgb(235,11,44)" fg:x="42326" fg:w="11"/><text x="40.5447%" y="335.50"></text></g><g><title>ttwu_queue_wakelist (13 samples, 0.01%)</title><rect x="40.3052%" y="341" width="0.0124%" height="15" fill="rgb(248,18,52)" fg:x="42337" fg:w="13"/><text x="40.5552%" y="351.50"></text></g><g><title>__x64_sys_futex (358 samples, 0.34%)</title><rect x="39.9939%" y="421" width="0.3408%" height="15" fill="rgb(208,4,7)" fg:x="42010" fg:w="358"/><text x="40.2439%" y="431.50"></text></g><g><title>do_futex (351 samples, 0.33%)</title><rect x="40.0006%" y="405" width="0.3342%" height="15" fill="rgb(240,17,39)" fg:x="42017" fg:w="351"/><text x="40.2506%" y="415.50"></text></g><g><title>futex_wake (349 samples, 0.33%)</title><rect x="40.0025%" y="389" width="0.3323%" height="15" fill="rgb(207,170,3)" fg:x="42019" fg:w="349"/><text x="40.2525%" y="399.50"></text></g><g><title>wake_up_q (279 samples, 0.27%)</title><rect x="40.0691%" y="373" width="0.2656%" height="15" fill="rgb(236,100,52)" fg:x="42089" fg:w="279"/><text x="40.3191%" y="383.50"></text></g><g><title>try_to_wake_up (271 samples, 0.26%)</title><rect x="40.0767%" y="357" width="0.2580%" height="15" fill="rgb(246,78,51)" fg:x="42097" fg:w="271"/><text x="40.3267%" y="367.50"></text></g><g><title>update_rq_clock (18 samples, 0.02%)</title><rect x="40.3176%" y="341" width="0.0171%" height="15" fill="rgb(211,17,15)" fg:x="42350" fg:w="18"/><text x="40.5676%" y="351.50"></text></g><g><title>syscall_exit_to_user_mode (49 samples, 0.05%)</title><rect x="40.3347%" y="421" width="0.0466%" height="15" fill="rgb(209,59,46)" fg:x="42368" fg:w="49"/><text x="40.5847%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (418 samples, 0.40%)</title><rect x="39.9920%" y="453" width="0.3979%" height="15" fill="rgb(210,92,25)" fg:x="42008" fg:w="418"/><text x="40.2420%" y="463.50"></text></g><g><title>do_syscall_64 (418 samples, 0.40%)</title><rect x="39.9920%" y="437" width="0.3979%" height="15" fill="rgb(238,174,52)" fg:x="42008" fg:w="418"/><text x="40.2420%" y="447.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (447 samples, 0.43%)</title><rect x="39.9701%" y="517" width="0.4255%" height="15" fill="rgb(230,73,7)" fg:x="41985" fg:w="447"/><text x="40.2201%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (447 samples, 0.43%)</title><rect x="39.9701%" y="501" width="0.4255%" height="15" fill="rgb(243,124,40)" fg:x="41985" fg:w="447"/><text x="40.2201%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (447 samples, 0.43%)</title><rect x="39.9701%" y="485" width="0.4255%" height="15" fill="rgb(244,170,11)" fg:x="41985" fg:w="447"/><text x="40.2201%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (447 samples, 0.43%)</title><rect x="39.9701%" y="469" width="0.4255%" height="15" fill="rgb(207,114,54)" fg:x="41985" fg:w="447"/><text x="40.2201%" y="479.50"></text></g><g><title>parking::Unparker::unpark (485 samples, 0.46%)</title><rect x="39.9492%" y="549" width="0.4617%" height="15" fill="rgb(205,42,20)" fg:x="41963" fg:w="485"/><text x="40.1992%" y="559.50"></text></g><g><title>parking::Inner::unpark (481 samples, 0.46%)</title><rect x="39.9530%" y="533" width="0.4579%" height="15" fill="rgb(230,30,28)" fg:x="41967" fg:w="481"/><text x="40.2030%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.02%)</title><rect x="40.3957%" y="517" width="0.0152%" height="15" fill="rgb(205,73,54)" fg:x="42432" fg:w="16"/><text x="40.6457%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.02%)</title><rect x="40.3957%" y="501" width="0.0152%" height="15" fill="rgb(254,227,23)" fg:x="42432" fg:w="16"/><text x="40.6457%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="40.3966%" y="485" width="0.0143%" height="15" fill="rgb(228,202,34)" fg:x="42433" fg:w="15"/><text x="40.6466%" y="495.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="40.3966%" y="469" width="0.0143%" height="15" fill="rgb(222,225,37)" fg:x="42433" fg:w="15"/><text x="40.6466%" y="479.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (673 samples, 0.64%)</title><rect x="39.7730%" y="565" width="0.6407%" height="15" fill="rgb(221,14,54)" fg:x="41778" fg:w="673"/><text x="40.0230%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (705 samples, 0.67%)</title><rect x="39.7730%" y="597" width="0.6712%" height="15" fill="rgb(254,102,2)" fg:x="41778" fg:w="705"/><text x="40.0230%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (705 samples, 0.67%)</title><rect x="39.7730%" y="581" width="0.6712%" height="15" fill="rgb(232,104,17)" fg:x="41778" fg:w="705"/><text x="40.0230%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (32 samples, 0.03%)</title><rect x="40.4137%" y="565" width="0.0305%" height="15" fill="rgb(250,220,14)" fg:x="42451" fg:w="32"/><text x="40.6637%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="40.4137%" y="549" width="0.0305%" height="15" fill="rgb(241,158,9)" fg:x="42451" fg:w="32"/><text x="40.6637%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (31 samples, 0.03%)</title><rect x="40.4147%" y="533" width="0.0295%" height="15" fill="rgb(246,9,43)" fg:x="42452" fg:w="31"/><text x="40.6647%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (31 samples, 0.03%)</title><rect x="40.4147%" y="517" width="0.0295%" height="15" fill="rgb(206,73,33)" fg:x="42452" fg:w="31"/><text x="40.6647%" y="527.50"></text></g><g><title>__x64_sys_futex (16 samples, 0.02%)</title><rect x="40.4775%" y="485" width="0.0152%" height="15" fill="rgb(222,79,8)" fg:x="42518" fg:w="16"/><text x="40.7275%" y="495.50"></text></g><g><title>do_futex (15 samples, 0.01%)</title><rect x="40.4785%" y="469" width="0.0143%" height="15" fill="rgb(234,8,54)" fg:x="42519" fg:w="15"/><text x="40.7285%" y="479.50"></text></g><g><title>futex_wait (15 samples, 0.01%)</title><rect x="40.4785%" y="453" width="0.0143%" height="15" fill="rgb(209,134,38)" fg:x="42519" fg:w="15"/><text x="40.7285%" y="463.50"></text></g><g><title>futex_wait_setup (12 samples, 0.01%)</title><rect x="40.4813%" y="437" width="0.0114%" height="15" fill="rgb(230,127,29)" fg:x="42522" fg:w="12"/><text x="40.7313%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.02%)</title><rect x="40.4766%" y="517" width="0.0238%" height="15" fill="rgb(242,44,41)" fg:x="42517" fg:w="25"/><text x="40.7266%" y="527.50"></text></g><g><title>do_syscall_64 (25 samples, 0.02%)</title><rect x="40.4766%" y="501" width="0.0238%" height="15" fill="rgb(222,56,43)" fg:x="42517" fg:w="25"/><text x="40.7266%" y="511.50"></text></g><g><title>async_executor::State::notify (842 samples, 0.80%)</title><rect x="39.6997%" y="613" width="0.8016%" height="15" fill="rgb(238,39,47)" fg:x="41701" fg:w="842"/><text x="39.9497%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (60 samples, 0.06%)</title><rect x="40.4442%" y="597" width="0.0571%" height="15" fill="rgb(226,79,43)" fg:x="42483" fg:w="60"/><text x="40.6942%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (60 samples, 0.06%)</title><rect x="40.4442%" y="581" width="0.0571%" height="15" fill="rgb(242,105,53)" fg:x="42483" fg:w="60"/><text x="40.6942%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (58 samples, 0.06%)</title><rect x="40.4461%" y="565" width="0.0552%" height="15" fill="rgb(251,132,46)" fg:x="42485" fg:w="58"/><text x="40.6961%" y="575.50"></text></g><g><title>___pthread_mutex_lock (58 samples, 0.06%)</title><rect x="40.4461%" y="549" width="0.0552%" height="15" fill="rgb(231,77,14)" fg:x="42485" fg:w="58"/><text x="40.6961%" y="559.50"></text></g><g><title>__GI___lll_lock_wait (32 samples, 0.03%)</title><rect x="40.4709%" y="533" width="0.0305%" height="15" fill="rgb(240,135,9)" fg:x="42511" fg:w="32"/><text x="40.7209%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (33 samples, 0.03%)</title><rect x="40.5070%" y="581" width="0.0314%" height="15" fill="rgb(248,109,14)" fg:x="42549" fg:w="33"/><text x="40.7570%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (33 samples, 0.03%)</title><rect x="40.5070%" y="565" width="0.0314%" height="15" fill="rgb(227,146,52)" fg:x="42549" fg:w="33"/><text x="40.7570%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (12 samples, 0.01%)</title><rect x="40.5385%" y="581" width="0.0114%" height="15" fill="rgb(232,54,3)" fg:x="42582" fg:w="12"/><text x="40.7885%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (12 samples, 0.01%)</title><rect x="40.5385%" y="565" width="0.0114%" height="15" fill="rgb(229,201,43)" fg:x="42582" fg:w="12"/><text x="40.7885%" y="575.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (898 samples, 0.85%)</title><rect x="39.6988%" y="629" width="0.8549%" height="15" fill="rgb(252,161,33)" fg:x="41700" fg:w="898"/><text x="39.9488%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (55 samples, 0.05%)</title><rect x="40.5013%" y="613" width="0.0524%" height="15" fill="rgb(226,146,40)" fg:x="42543" fg:w="55"/><text x="40.7513%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (50 samples, 0.05%)</title><rect x="40.5061%" y="597" width="0.0476%" height="15" fill="rgb(219,47,25)" fg:x="42548" fg:w="50"/><text x="40.7561%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (25 samples, 0.02%)</title><rect x="40.5537%" y="629" width="0.0238%" height="15" fill="rgb(250,135,13)" fg:x="42598" fg:w="25"/><text x="40.8037%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 0.02%)</title><rect x="40.5537%" y="613" width="0.0238%" height="15" fill="rgb(219,229,18)" fg:x="42598" fg:w="25"/><text x="40.8037%" y="623.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (944 samples, 0.90%)</title><rect x="39.6816%" y="725" width="0.8987%" height="15" fill="rgb(217,152,27)" fg:x="41682" fg:w="944"/><text x="39.9316%" y="735.50"></text></g><g><title>event_listener::Event::notify (944 samples, 0.90%)</title><rect x="39.6816%" y="709" width="0.8987%" height="15" fill="rgb(225,71,47)" fg:x="41682" fg:w="944"/><text x="39.9316%" y="719.50"></text></g><g><title>event_listener::List::notify (943 samples, 0.90%)</title><rect x="39.6826%" y="693" width="0.8977%" height="15" fill="rgb(220,139,14)" fg:x="41683" fg:w="943"/><text x="39.9326%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (935 samples, 0.89%)</title><rect x="39.6902%" y="677" width="0.8901%" height="15" fill="rgb(247,54,32)" fg:x="41691" fg:w="935"/><text x="39.9402%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (935 samples, 0.89%)</title><rect x="39.6902%" y="661" width="0.8901%" height="15" fill="rgb(252,131,39)" fg:x="41691" fg:w="935"/><text x="39.9402%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (926 samples, 0.88%)</title><rect x="39.6988%" y="645" width="0.8816%" height="15" fill="rgb(210,108,39)" fg:x="41700" fg:w="926"/><text x="39.9488%" y="655.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (957 samples, 0.91%)</title><rect x="39.6788%" y="741" width="0.9111%" height="15" fill="rgb(205,23,29)" fg:x="41679" fg:w="957"/><text x="39.9288%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (958 samples, 0.91%)</title><rect x="39.6788%" y="805" width="0.9120%" height="15" fill="rgb(246,139,46)" fg:x="41679" fg:w="958"/><text x="39.9288%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (958 samples, 0.91%)</title><rect x="39.6788%" y="789" width="0.9120%" height="15" fill="rgb(250,81,26)" fg:x="41679" fg:w="958"/><text x="39.9288%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (958 samples, 0.91%)</title><rect x="39.6788%" y="773" width="0.9120%" height="15" fill="rgb(214,104,7)" fg:x="41679" fg:w="958"/><text x="39.9288%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (958 samples, 0.91%)</title><rect x="39.6788%" y="757" width="0.9120%" height="15" fill="rgb(233,189,8)" fg:x="41679" fg:w="958"/><text x="39.9288%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (11 samples, 0.01%)</title><rect x="40.5918%" y="453" width="0.0105%" height="15" fill="rgb(228,141,17)" fg:x="42638" fg:w="11"/><text x="40.8418%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (16 samples, 0.02%)</title><rect x="40.5908%" y="469" width="0.0152%" height="15" fill="rgb(247,157,1)" fg:x="42637" fg:w="16"/><text x="40.8408%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (87 samples, 0.08%)</title><rect x="40.5908%" y="773" width="0.0828%" height="15" fill="rgb(249,225,5)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (87 samples, 0.08%)</title><rect x="40.5908%" y="757" width="0.0828%" height="15" fill="rgb(242,55,13)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (87 samples, 0.08%)</title><rect x="40.5908%" y="741" width="0.0828%" height="15" fill="rgb(230,49,50)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (87 samples, 0.08%)</title><rect x="40.5908%" y="725" width="0.0828%" height="15" fill="rgb(241,111,38)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (87 samples, 0.08%)</title><rect x="40.5908%" y="709" width="0.0828%" height="15" fill="rgb(252,155,4)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (87 samples, 0.08%)</title><rect x="40.5908%" y="693" width="0.0828%" height="15" fill="rgb(212,69,32)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (87 samples, 0.08%)</title><rect x="40.5908%" y="677" width="0.0828%" height="15" fill="rgb(243,107,47)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (87 samples, 0.08%)</title><rect x="40.5908%" y="661" width="0.0828%" height="15" fill="rgb(247,130,12)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.08%)</title><rect x="40.5908%" y="645" width="0.0828%" height="15" fill="rgb(233,74,16)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.08%)</title><rect x="40.5908%" y="629" width="0.0828%" height="15" fill="rgb(208,58,18)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="639.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.08%)</title><rect x="40.5908%" y="613" width="0.0828%" height="15" fill="rgb(242,225,1)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="623.50"></text></g><g><title>__rg_alloc (87 samples, 0.08%)</title><rect x="40.5908%" y="597" width="0.0828%" height="15" fill="rgb(249,39,40)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (87 samples, 0.08%)</title><rect x="40.5908%" y="581" width="0.0828%" height="15" fill="rgb(207,72,44)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="591.50"></text></g><g><title>rust_alloc (87 samples, 0.08%)</title><rect x="40.5908%" y="565" width="0.0828%" height="15" fill="rgb(215,193,12)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="40.5908%" y="549" width="0.0828%" height="15" fill="rgb(248,41,39)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="40.5908%" y="533" width="0.0828%" height="15" fill="rgb(253,85,4)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="40.5908%" y="517" width="0.0828%" height="15" fill="rgb(243,70,31)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="40.5908%" y="501" width="0.0828%" height="15" fill="rgb(253,195,26)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (87 samples, 0.08%)</title><rect x="40.5908%" y="485" width="0.0828%" height="15" fill="rgb(243,42,11)" fg:x="42637" fg:w="87"/><text x="40.8408%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (71 samples, 0.07%)</title><rect x="40.6060%" y="469" width="0.0676%" height="15" fill="rgb(239,66,17)" fg:x="42653" fg:w="71"/><text x="40.8560%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (57 samples, 0.05%)</title><rect x="40.6194%" y="453" width="0.0543%" height="15" fill="rgb(217,132,21)" fg:x="42667" fg:w="57"/><text x="40.8694%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (57 samples, 0.05%)</title><rect x="40.6194%" y="437" width="0.0543%" height="15" fill="rgb(252,202,21)" fg:x="42667" fg:w="57"/><text x="40.8694%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (57 samples, 0.05%)</title><rect x="40.6194%" y="421" width="0.0543%" height="15" fill="rgb(233,98,36)" fg:x="42667" fg:w="57"/><text x="40.8694%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="40.6736%" y="389" width="0.0124%" height="15" fill="rgb(216,153,54)" fg:x="42724" fg:w="13"/><text x="40.9236%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="40.6736%" y="405" width="0.0143%" height="15" fill="rgb(250,99,7)" fg:x="42724" fg:w="15"/><text x="40.9236%" y="415.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="40.6936%" y="389" width="0.0133%" height="15" fill="rgb(207,56,50)" fg:x="42745" fg:w="14"/><text x="40.9436%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (99 samples, 0.09%)</title><rect x="40.6736%" y="437" width="0.0942%" height="15" fill="rgb(244,61,34)" fg:x="42724" fg:w="99"/><text x="40.9236%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (99 samples, 0.09%)</title><rect x="40.6736%" y="421" width="0.0942%" height="15" fill="rgb(241,50,38)" fg:x="42724" fg:w="99"/><text x="40.9236%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (84 samples, 0.08%)</title><rect x="40.6879%" y="405" width="0.0800%" height="15" fill="rgb(212,166,30)" fg:x="42739" fg:w="84"/><text x="40.9379%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (64 samples, 0.06%)</title><rect x="40.7070%" y="389" width="0.0609%" height="15" fill="rgb(249,127,32)" fg:x="42759" fg:w="64"/><text x="40.9570%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (64 samples, 0.06%)</title><rect x="40.7070%" y="373" width="0.0609%" height="15" fill="rgb(209,103,0)" fg:x="42759" fg:w="64"/><text x="40.9570%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (64 samples, 0.06%)</title><rect x="40.7070%" y="357" width="0.0609%" height="15" fill="rgb(238,209,51)" fg:x="42759" fg:w="64"/><text x="40.9570%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (135 samples, 0.13%)</title><rect x="40.6736%" y="709" width="0.1285%" height="15" fill="rgb(237,56,23)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (135 samples, 0.13%)</title><rect x="40.6736%" y="693" width="0.1285%" height="15" fill="rgb(215,153,46)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (135 samples, 0.13%)</title><rect x="40.6736%" y="677" width="0.1285%" height="15" fill="rgb(224,49,31)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (135 samples, 0.13%)</title><rect x="40.6736%" y="661" width="0.1285%" height="15" fill="rgb(250,18,42)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (135 samples, 0.13%)</title><rect x="40.6736%" y="645" width="0.1285%" height="15" fill="rgb(215,176,39)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (135 samples, 0.13%)</title><rect x="40.6736%" y="629" width="0.1285%" height="15" fill="rgb(223,77,29)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (135 samples, 0.13%)</title><rect x="40.6736%" y="613" width="0.1285%" height="15" fill="rgb(234,94,52)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (135 samples, 0.13%)</title><rect x="40.6736%" y="597" width="0.1285%" height="15" fill="rgb(220,154,50)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (135 samples, 0.13%)</title><rect x="40.6736%" y="581" width="0.1285%" height="15" fill="rgb(212,11,10)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (135 samples, 0.13%)</title><rect x="40.6736%" y="565" width="0.1285%" height="15" fill="rgb(205,166,19)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="575.50"></text></g><g><title>alloc::alloc::alloc (135 samples, 0.13%)</title><rect x="40.6736%" y="549" width="0.1285%" height="15" fill="rgb(244,198,16)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="559.50"></text></g><g><title>__rg_alloc (135 samples, 0.13%)</title><rect x="40.6736%" y="533" width="0.1285%" height="15" fill="rgb(219,69,12)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (135 samples, 0.13%)</title><rect x="40.6736%" y="517" width="0.1285%" height="15" fill="rgb(245,30,7)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="527.50"></text></g><g><title>rust_alloc (135 samples, 0.13%)</title><rect x="40.6736%" y="501" width="0.1285%" height="15" fill="rgb(218,221,48)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (135 samples, 0.13%)</title><rect x="40.6736%" y="485" width="0.1285%" height="15" fill="rgb(216,66,15)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (135 samples, 0.13%)</title><rect x="40.6736%" y="469" width="0.1285%" height="15" fill="rgb(226,122,50)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (135 samples, 0.13%)</title><rect x="40.6736%" y="453" width="0.1285%" height="15" fill="rgb(239,156,16)" fg:x="42724" fg:w="135"/><text x="40.9236%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="40.7679%" y="437" width="0.0343%" height="15" fill="rgb(224,27,38)" fg:x="42823" fg:w="36"/><text x="41.0179%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="40.7679%" y="421" width="0.0343%" height="15" fill="rgb(224,39,27)" fg:x="42823" fg:w="36"/><text x="41.0179%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="40.7679%" y="405" width="0.0343%" height="15" fill="rgb(215,92,29)" fg:x="42823" fg:w="36"/><text x="41.0179%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="40.7698%" y="389" width="0.0324%" height="15" fill="rgb(207,159,16)" fg:x="42825" fg:w="34"/><text x="41.0198%" y="399.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (33 samples, 0.03%)</title><rect x="40.7707%" y="373" width="0.0314%" height="15" fill="rgb(238,163,47)" fg:x="42826" fg:w="33"/><text x="41.0207%" y="383.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (18 samples, 0.02%)</title><rect x="40.7850%" y="357" width="0.0171%" height="15" fill="rgb(219,91,49)" fg:x="42841" fg:w="18"/><text x="41.0350%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="40.7850%" y="341" width="0.0171%" height="15" fill="rgb(227,167,31)" fg:x="42841" fg:w="18"/><text x="41.0350%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="40.8031%" y="469" width="0.0124%" height="15" fill="rgb(234,80,54)" fg:x="42860" fg:w="13"/><text x="41.0531%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (16 samples, 0.02%)</title><rect x="40.8022%" y="485" width="0.0152%" height="15" fill="rgb(212,114,2)" fg:x="42859" fg:w="16"/><text x="41.0522%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (15 samples, 0.01%)</title><rect x="40.8250%" y="469" width="0.0143%" height="15" fill="rgb(234,50,24)" fg:x="42883" fg:w="15"/><text x="41.0750%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (100 samples, 0.10%)</title><rect x="40.8022%" y="517" width="0.0952%" height="15" fill="rgb(221,68,8)" fg:x="42859" fg:w="100"/><text x="41.0522%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (100 samples, 0.10%)</title><rect x="40.8022%" y="501" width="0.0952%" height="15" fill="rgb(254,180,31)" fg:x="42859" fg:w="100"/><text x="41.0522%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (84 samples, 0.08%)</title><rect x="40.8174%" y="485" width="0.0800%" height="15" fill="rgb(247,130,50)" fg:x="42875" fg:w="84"/><text x="41.0674%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (61 samples, 0.06%)</title><rect x="40.8393%" y="469" width="0.0581%" height="15" fill="rgb(211,109,4)" fg:x="42898" fg:w="61"/><text x="41.0893%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (61 samples, 0.06%)</title><rect x="40.8393%" y="453" width="0.0581%" height="15" fill="rgb(238,50,21)" fg:x="42898" fg:w="61"/><text x="41.0893%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (61 samples, 0.06%)</title><rect x="40.8393%" y="437" width="0.0581%" height="15" fill="rgb(225,57,45)" fg:x="42898" fg:w="61"/><text x="41.0893%" y="447.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (326 samples, 0.31%)</title><rect x="40.5908%" y="789" width="0.3104%" height="15" fill="rgb(209,196,50)" fg:x="42637" fg:w="326"/><text x="40.8408%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (239 samples, 0.23%)</title><rect x="40.6736%" y="773" width="0.2275%" height="15" fill="rgb(242,140,13)" fg:x="42724" fg:w="239"/><text x="40.9236%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (239 samples, 0.23%)</title><rect x="40.6736%" y="757" width="0.2275%" height="15" fill="rgb(217,111,7)" fg:x="42724" fg:w="239"/><text x="40.9236%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (239 samples, 0.23%)</title><rect x="40.6736%" y="741" width="0.2275%" height="15" fill="rgb(253,193,51)" fg:x="42724" fg:w="239"/><text x="40.9236%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (239 samples, 0.23%)</title><rect x="40.6736%" y="725" width="0.2275%" height="15" fill="rgb(252,70,29)" fg:x="42724" fg:w="239"/><text x="40.9236%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (104 samples, 0.10%)</title><rect x="40.8022%" y="709" width="0.0990%" height="15" fill="rgb(232,127,12)" fg:x="42859" fg:w="104"/><text x="41.0522%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (104 samples, 0.10%)</title><rect x="40.8022%" y="693" width="0.0990%" height="15" fill="rgb(211,180,21)" fg:x="42859" fg:w="104"/><text x="41.0522%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (104 samples, 0.10%)</title><rect x="40.8022%" y="677" width="0.0990%" height="15" fill="rgb(229,72,13)" fg:x="42859" fg:w="104"/><text x="41.0522%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (104 samples, 0.10%)</title><rect x="40.8022%" y="661" width="0.0990%" height="15" fill="rgb(240,211,49)" fg:x="42859" fg:w="104"/><text x="41.0522%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (104 samples, 0.10%)</title><rect x="40.8022%" y="645" width="0.0990%" height="15" fill="rgb(219,149,40)" fg:x="42859" fg:w="104"/><text x="41.0522%" y="655.50"></text></g><g><title>alloc::alloc::alloc (104 samples, 0.10%)</title><rect x="40.8022%" y="629" width="0.0990%" height="15" fill="rgb(210,127,46)" fg:x="42859" fg:w="104"/><text x="41.0522%" y="639.50"></text></g><g><title>__rg_alloc (104 samples, 0.10%)</title><rect x="40.8022%" y="613" width="0.0990%" height="15" fill="rgb(220,106,7)" fg:x="42859" fg:w="104"/><text x="41.0522%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (104 samples, 0.10%)</title><rect x="40.8022%" y="597" width="0.0990%" height="15" fill="rgb(249,31,22)" fg:x="42859" fg:w="104"/><text x="41.0522%" y="607.50"></text></g><g><title>rust_alloc (104 samples, 0.10%)</title><rect x="40.8022%" y="581" width="0.0990%" height="15" fill="rgb(253,1,49)" fg:x="42859" fg:w="104"/><text x="41.0522%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (104 samples, 0.10%)</title><rect x="40.8022%" y="565" width="0.0990%" height="15" fill="rgb(227,144,33)" fg:x="42859" fg:w="104"/><text x="41.0522%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (104 samples, 0.10%)</title><rect x="40.8022%" y="549" width="0.0990%" height="15" fill="rgb(249,163,44)" fg:x="42859" fg:w="104"/><text x="41.0522%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (104 samples, 0.10%)</title><rect x="40.8022%" y="533" width="0.0990%" height="15" fill="rgb(234,15,39)" fg:x="42859" fg:w="104"/><text x="41.0522%" y="543.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="40.9135%" y="469" width="0.0143%" height="15" fill="rgb(207,66,16)" fg:x="42976" fg:w="15"/><text x="41.1635%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="40.9135%" y="453" width="0.0143%" height="15" fill="rgb(233,112,24)" fg:x="42976" fg:w="15"/><text x="41.1635%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (23 samples, 0.02%)</title><rect x="40.9116%" y="517" width="0.0219%" height="15" fill="rgb(230,90,22)" fg:x="42974" fg:w="23"/><text x="41.1616%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (23 samples, 0.02%)</title><rect x="40.9116%" y="501" width="0.0219%" height="15" fill="rgb(229,61,13)" fg:x="42974" fg:w="23"/><text x="41.1616%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (22 samples, 0.02%)</title><rect x="40.9126%" y="485" width="0.0209%" height="15" fill="rgb(225,57,24)" fg:x="42975" fg:w="22"/><text x="41.1626%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (29 samples, 0.03%)</title><rect x="40.9116%" y="533" width="0.0276%" height="15" fill="rgb(208,169,48)" fg:x="42974" fg:w="29"/><text x="41.1616%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (48 samples, 0.05%)</title><rect x="40.9012%" y="549" width="0.0457%" height="15" fill="rgb(244,218,51)" fg:x="42963" fg:w="48"/><text x="41.1512%" y="559.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (38 samples, 0.04%)</title><rect x="40.9688%" y="533" width="0.0362%" height="15" fill="rgb(214,148,10)" fg:x="43034" fg:w="38"/><text x="41.2188%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (285 samples, 0.27%)</title><rect x="40.9012%" y="581" width="0.2713%" height="15" fill="rgb(225,174,27)" fg:x="42963" fg:w="285"/><text x="41.1512%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (285 samples, 0.27%)</title><rect x="40.9012%" y="565" width="0.2713%" height="15" fill="rgb(230,96,26)" fg:x="42963" fg:w="285"/><text x="41.1512%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (237 samples, 0.23%)</title><rect x="40.9469%" y="549" width="0.2256%" height="15" fill="rgb(232,10,30)" fg:x="43011" fg:w="237"/><text x="41.1969%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (176 samples, 0.17%)</title><rect x="41.0049%" y="533" width="0.1676%" height="15" fill="rgb(222,8,50)" fg:x="43072" fg:w="176"/><text x="41.2549%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (176 samples, 0.17%)</title><rect x="41.0049%" y="517" width="0.1676%" height="15" fill="rgb(213,81,27)" fg:x="43072" fg:w="176"/><text x="41.2549%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (176 samples, 0.17%)</title><rect x="41.0049%" y="501" width="0.1676%" height="15" fill="rgb(245,50,10)" fg:x="43072" fg:w="176"/><text x="41.2549%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (290 samples, 0.28%)</title><rect x="40.9012%" y="789" width="0.2761%" height="15" fill="rgb(216,100,18)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (290 samples, 0.28%)</title><rect x="40.9012%" y="773" width="0.2761%" height="15" fill="rgb(236,147,54)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (290 samples, 0.28%)</title><rect x="40.9012%" y="757" width="0.2761%" height="15" fill="rgb(205,143,26)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (290 samples, 0.28%)</title><rect x="40.9012%" y="741" width="0.2761%" height="15" fill="rgb(236,26,9)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (290 samples, 0.28%)</title><rect x="40.9012%" y="725" width="0.2761%" height="15" fill="rgb(221,165,53)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (290 samples, 0.28%)</title><rect x="40.9012%" y="709" width="0.2761%" height="15" fill="rgb(214,110,17)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="719.50"></text></g><g><title>alloc::alloc::alloc (290 samples, 0.28%)</title><rect x="40.9012%" y="693" width="0.2761%" height="15" fill="rgb(237,197,12)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="703.50"></text></g><g><title>__rg_alloc (290 samples, 0.28%)</title><rect x="40.9012%" y="677" width="0.2761%" height="15" fill="rgb(205,84,17)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (290 samples, 0.28%)</title><rect x="40.9012%" y="661" width="0.2761%" height="15" fill="rgb(237,18,45)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="671.50"></text></g><g><title>rust_alloc (290 samples, 0.28%)</title><rect x="40.9012%" y="645" width="0.2761%" height="15" fill="rgb(221,87,14)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (290 samples, 0.28%)</title><rect x="40.9012%" y="629" width="0.2761%" height="15" fill="rgb(238,186,15)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (290 samples, 0.28%)</title><rect x="40.9012%" y="613" width="0.2761%" height="15" fill="rgb(208,115,11)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (290 samples, 0.28%)</title><rect x="40.9012%" y="597" width="0.2761%" height="15" fill="rgb(254,175,0)" fg:x="42963" fg:w="290"/><text x="41.1512%" y="607.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (602 samples, 0.57%)</title><rect x="41.3600%" y="757" width="0.5731%" height="15" fill="rgb(227,24,42)" fg:x="43445" fg:w="602"/><text x="41.6100%" y="767.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="41.9922%" y="565" width="0.0133%" height="15" fill="rgb(223,211,37)" fg:x="44109" fg:w="14"/><text x="42.2422%" y="575.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="42.0141%" y="533" width="0.0114%" height="15" fill="rgb(235,49,27)" fg:x="44132" fg:w="12"/><text x="42.2641%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (21 samples, 0.02%)</title><rect x="42.0426%" y="453" width="0.0200%" height="15" fill="rgb(254,97,51)" fg:x="44162" fg:w="21"/><text x="42.2926%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (21 samples, 0.02%)</title><rect x="42.0426%" y="437" width="0.0200%" height="15" fill="rgb(249,51,40)" fg:x="44162" fg:w="21"/><text x="42.2926%" y="447.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (18 samples, 0.02%)</title><rect x="42.0455%" y="421" width="0.0171%" height="15" fill="rgb(210,128,45)" fg:x="44165" fg:w="18"/><text x="42.2955%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (27 samples, 0.03%)</title><rect x="42.0426%" y="469" width="0.0257%" height="15" fill="rgb(224,137,50)" fg:x="44162" fg:w="27"/><text x="42.2926%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (44 samples, 0.04%)</title><rect x="42.0360%" y="485" width="0.0419%" height="15" fill="rgb(242,15,9)" fg:x="44155" fg:w="44"/><text x="42.2860%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (25 samples, 0.02%)</title><rect x="42.0959%" y="469" width="0.0238%" height="15" fill="rgb(233,187,41)" fg:x="44218" fg:w="25"/><text x="42.3459%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (218 samples, 0.21%)</title><rect x="42.0360%" y="517" width="0.2075%" height="15" fill="rgb(227,2,29)" fg:x="44155" fg:w="218"/><text x="42.2860%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (218 samples, 0.21%)</title><rect x="42.0360%" y="501" width="0.2075%" height="15" fill="rgb(222,70,3)" fg:x="44155" fg:w="218"/><text x="42.2860%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (174 samples, 0.17%)</title><rect x="42.0779%" y="485" width="0.1656%" height="15" fill="rgb(213,11,42)" fg:x="44199" fg:w="174"/><text x="42.3279%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (130 samples, 0.12%)</title><rect x="42.1197%" y="469" width="0.1238%" height="15" fill="rgb(225,150,9)" fg:x="44243" fg:w="130"/><text x="42.3697%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (130 samples, 0.12%)</title><rect x="42.1197%" y="453" width="0.1238%" height="15" fill="rgb(230,162,45)" fg:x="44243" fg:w="130"/><text x="42.3697%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (130 samples, 0.12%)</title><rect x="42.1197%" y="437" width="0.1238%" height="15" fill="rgb(222,14,52)" fg:x="44243" fg:w="130"/><text x="42.3697%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::empty (22 samples, 0.02%)</title><rect x="42.2530%" y="517" width="0.0209%" height="15" fill="rgb(254,198,14)" fg:x="44383" fg:w="22"/><text x="42.5030%" y="527.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (22 samples, 0.02%)</title><rect x="42.2530%" y="501" width="0.0209%" height="15" fill="rgb(220,217,30)" fg:x="44383" fg:w="22"/><text x="42.5030%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (573 samples, 0.55%)</title><rect x="42.0084%" y="565" width="0.5455%" height="15" fill="rgb(215,146,41)" fg:x="44126" fg:w="573"/><text x="42.2584%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (571 samples, 0.54%)</title><rect x="42.0103%" y="549" width="0.5436%" height="15" fill="rgb(217,27,36)" fg:x="44128" fg:w="571"/><text x="42.2603%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (555 samples, 0.53%)</title><rect x="42.0255%" y="533" width="0.5284%" height="15" fill="rgb(219,218,39)" fg:x="44144" fg:w="555"/><text x="42.2755%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (294 samples, 0.28%)</title><rect x="42.2740%" y="517" width="0.2799%" height="15" fill="rgb(219,4,42)" fg:x="44405" fg:w="294"/><text x="42.5240%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (294 samples, 0.28%)</title><rect x="42.2740%" y="501" width="0.2799%" height="15" fill="rgb(249,119,36)" fg:x="44405" fg:w="294"/><text x="42.5240%" y="511.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,312 samples, 1.25%)</title><rect x="41.3220%" y="773" width="1.2490%" height="15" fill="rgb(209,23,33)" fg:x="43405" fg:w="1312"/><text x="41.5720%" y="783.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (670 samples, 0.64%)</title><rect x="41.9331%" y="757" width="0.6378%" height="15" fill="rgb(211,10,0)" fg:x="44047" fg:w="670"/><text x="42.1831%" y="767.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (666 samples, 0.63%)</title><rect x="41.9370%" y="741" width="0.6340%" height="15" fill="rgb(208,99,37)" fg:x="44051" fg:w="666"/><text x="42.1870%" y="751.50"></text></g><g><title>value_trait::Builder::object (666 samples, 0.63%)</title><rect x="41.9370%" y="725" width="0.6340%" height="15" fill="rgb(213,132,31)" fg:x="44051" fg:w="666"/><text x="42.1870%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (666 samples, 0.63%)</title><rect x="41.9370%" y="709" width="0.6340%" height="15" fill="rgb(243,129,40)" fg:x="44051" fg:w="666"/><text x="42.1870%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (666 samples, 0.63%)</title><rect x="41.9370%" y="693" width="0.6340%" height="15" fill="rgb(210,66,33)" fg:x="44051" fg:w="666"/><text x="42.1870%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (647 samples, 0.62%)</title><rect x="41.9550%" y="677" width="0.6159%" height="15" fill="rgb(209,189,4)" fg:x="44070" fg:w="647"/><text x="42.2050%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (647 samples, 0.62%)</title><rect x="41.9550%" y="661" width="0.6159%" height="15" fill="rgb(214,107,37)" fg:x="44070" fg:w="647"/><text x="42.2050%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (647 samples, 0.62%)</title><rect x="41.9550%" y="645" width="0.6159%" height="15" fill="rgb(245,88,54)" fg:x="44070" fg:w="647"/><text x="42.2050%" y="655.50"></text></g><g><title>alloc::alloc::alloc (639 samples, 0.61%)</title><rect x="41.9627%" y="629" width="0.6083%" height="15" fill="rgb(205,146,20)" fg:x="44078" fg:w="639"/><text x="42.2127%" y="639.50"></text></g><g><title>__rg_alloc (639 samples, 0.61%)</title><rect x="41.9627%" y="613" width="0.6083%" height="15" fill="rgb(220,161,25)" fg:x="44078" fg:w="639"/><text x="42.2127%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (639 samples, 0.61%)</title><rect x="41.9627%" y="597" width="0.6083%" height="15" fill="rgb(215,152,15)" fg:x="44078" fg:w="639"/><text x="42.2127%" y="607.50"></text></g><g><title>rust_alloc (608 samples, 0.58%)</title><rect x="41.9922%" y="581" width="0.5788%" height="15" fill="rgb(233,192,44)" fg:x="44109" fg:w="608"/><text x="42.2422%" y="591.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (18 samples, 0.02%)</title><rect x="42.5539%" y="565" width="0.0171%" height="15" fill="rgb(240,170,46)" fg:x="44699" fg:w="18"/><text x="42.8039%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="42.5862%" y="757" width="0.0152%" height="15" fill="rgb(207,104,33)" fg:x="44733" fg:w="16"/><text x="42.8362%" y="767.50"></text></g><g><title>alloc::alloc::box_free (22 samples, 0.02%)</title><rect x="42.7119%" y="709" width="0.0209%" height="15" fill="rgb(219,21,39)" fg:x="44865" fg:w="22"/><text x="42.9619%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="42.7119%" y="693" width="0.0209%" height="15" fill="rgb(214,133,29)" fg:x="44865" fg:w="22"/><text x="42.9619%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="42.7119%" y="677" width="0.0209%" height="15" fill="rgb(226,93,6)" fg:x="44865" fg:w="22"/><text x="42.9619%" y="687.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="42.7119%" y="661" width="0.0209%" height="15" fill="rgb(252,222,34)" fg:x="44865" fg:w="22"/><text x="42.9619%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="42.7119%" y="645" width="0.0209%" height="15" fill="rgb(252,92,48)" fg:x="44865" fg:w="22"/><text x="42.9619%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="42.7604%" y="645" width="0.0371%" height="15" fill="rgb(245,223,24)" fg:x="44916" fg:w="39"/><text x="43.0104%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (39 samples, 0.04%)</title><rect x="42.7604%" y="629" width="0.0371%" height="15" fill="rgb(205,176,3)" fg:x="44916" fg:w="39"/><text x="43.0104%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (203 samples, 0.19%)</title><rect x="42.6281%" y="741" width="0.1933%" height="15" fill="rgb(235,151,15)" fg:x="44777" fg:w="203"/><text x="42.8781%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (138 samples, 0.13%)</title><rect x="42.6900%" y="725" width="0.1314%" height="15" fill="rgb(237,209,11)" fg:x="44842" fg:w="138"/><text x="42.9400%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (93 samples, 0.09%)</title><rect x="42.7328%" y="709" width="0.0885%" height="15" fill="rgb(243,227,24)" fg:x="44887" fg:w="93"/><text x="42.9828%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (93 samples, 0.09%)</title><rect x="42.7328%" y="693" width="0.0885%" height="15" fill="rgb(239,193,16)" fg:x="44887" fg:w="93"/><text x="42.9828%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (64 samples, 0.06%)</title><rect x="42.7604%" y="677" width="0.0609%" height="15" fill="rgb(231,27,9)" fg:x="44916" fg:w="64"/><text x="43.0104%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (64 samples, 0.06%)</title><rect x="42.7604%" y="661" width="0.0609%" height="15" fill="rgb(219,169,10)" fg:x="44916" fg:w="64"/><text x="43.0104%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (25 samples, 0.02%)</title><rect x="42.7976%" y="645" width="0.0238%" height="15" fill="rgb(244,229,43)" fg:x="44955" fg:w="25"/><text x="43.0476%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="42.7976%" y="629" width="0.0238%" height="15" fill="rgb(254,38,20)" fg:x="44955" fg:w="25"/><text x="43.0476%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (25 samples, 0.02%)</title><rect x="42.7976%" y="613" width="0.0238%" height="15" fill="rgb(250,47,30)" fg:x="44955" fg:w="25"/><text x="43.0476%" y="623.50"></text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="42.8404%" y="709" width="0.0162%" height="15" fill="rgb(224,124,36)" fg:x="45000" fg:w="17"/><text x="43.0904%" y="719.50"></text></g><g><title>size_to_sizeclass (22 samples, 0.02%)</title><rect x="42.8566%" y="709" width="0.0209%" height="15" fill="rgb(246,68,51)" fg:x="45017" fg:w="22"/><text x="43.1066%" y="719.50"></text></g><g><title>sizeclass_to_size (15 samples, 0.01%)</title><rect x="42.9042%" y="645" width="0.0143%" height="15" fill="rgb(253,43,49)" fg:x="45067" fg:w="15"/><text x="43.1542%" y="655.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (15 samples, 0.01%)</title><rect x="42.9042%" y="629" width="0.0143%" height="15" fill="rgb(219,54,36)" fg:x="45067" fg:w="15"/><text x="43.1542%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (40 samples, 0.04%)</title><rect x="42.9470%" y="597" width="0.0381%" height="15" fill="rgb(227,133,34)" fg:x="45112" fg:w="40"/><text x="43.1970%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (39 samples, 0.04%)</title><rect x="42.9480%" y="581" width="0.0371%" height="15" fill="rgb(247,227,15)" fg:x="45113" fg:w="39"/><text x="43.1980%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (85 samples, 0.08%)</title><rect x="42.9185%" y="645" width="0.0809%" height="15" fill="rgb(229,96,14)" fg:x="45082" fg:w="85"/><text x="43.1685%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (85 samples, 0.08%)</title><rect x="42.9185%" y="629" width="0.0809%" height="15" fill="rgb(220,79,17)" fg:x="45082" fg:w="85"/><text x="43.1685%" y="639.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (80 samples, 0.08%)</title><rect x="42.9232%" y="613" width="0.0762%" height="15" fill="rgb(205,131,53)" fg:x="45087" fg:w="80"/><text x="43.1732%" y="623.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="42.9851%" y="597" width="0.0143%" height="15" fill="rgb(209,50,29)" fg:x="45152" fg:w="15"/><text x="43.2351%" y="607.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="42.9851%" y="581" width="0.0143%" height="15" fill="rgb(245,86,46)" fg:x="45152" fg:w="15"/><text x="43.2351%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (139 samples, 0.13%)</title><rect x="42.8775%" y="677" width="0.1323%" height="15" fill="rgb(235,66,46)" fg:x="45039" fg:w="139"/><text x="43.1275%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (139 samples, 0.13%)</title><rect x="42.8775%" y="661" width="0.1323%" height="15" fill="rgb(232,148,31)" fg:x="45039" fg:w="139"/><text x="43.1275%" y="671.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="42.9994%" y="645" width="0.0105%" height="15" fill="rgb(217,149,8)" fg:x="45167" fg:w="11"/><text x="43.2494%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (141 samples, 0.13%)</title><rect x="42.8775%" y="709" width="0.1342%" height="15" fill="rgb(209,183,11)" fg:x="45039" fg:w="141"/><text x="43.1275%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (141 samples, 0.13%)</title><rect x="42.8775%" y="693" width="0.1342%" height="15" fill="rgb(208,55,20)" fg:x="45039" fg:w="141"/><text x="43.1275%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (181 samples, 0.17%)</title><rect x="42.8404%" y="725" width="0.1723%" height="15" fill="rgb(218,39,14)" fg:x="45000" fg:w="181"/><text x="43.0904%" y="735.50"></text></g><g><title>rust_dealloc (203 samples, 0.19%)</title><rect x="42.8214%" y="741" width="0.1933%" height="15" fill="rgb(216,169,33)" fg:x="44980" fg:w="203"/><text x="43.0714%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (466 samples, 0.44%)</title><rect x="42.5862%" y="773" width="0.4436%" height="15" fill="rgb(233,80,24)" fg:x="44733" fg:w="466"/><text x="42.8362%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (450 samples, 0.43%)</title><rect x="42.6015%" y="757" width="0.4284%" height="15" fill="rgb(213,179,31)" fg:x="44749" fg:w="450"/><text x="42.8515%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (16 samples, 0.02%)</title><rect x="43.0146%" y="741" width="0.0152%" height="15" fill="rgb(209,19,5)" fg:x="45183" fg:w="16"/><text x="43.2646%" y="751.50"></text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (31 samples, 0.03%)</title><rect x="43.0299%" y="773" width="0.0295%" height="15" fill="rgb(219,18,35)" fg:x="45199" fg:w="31"/><text x="43.2799%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,563 samples, 3.39%)</title><rect x="39.6788%" y="853" width="3.3920%" height="15" fill="rgb(209,169,16)" fg:x="41679" fg:w="3563"/><text x="39.9288%" y="863.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,563 samples, 3.39%)</title><rect x="39.6788%" y="837" width="3.3920%" height="15" fill="rgb(245,90,51)" fg:x="41679" fg:w="3563"/><text x="39.9288%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,563 samples, 3.39%)</title><rect x="39.6788%" y="821" width="3.3920%" height="15" fill="rgb(220,99,45)" fg:x="41679" fg:w="3563"/><text x="39.9288%" y="831.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (2,605 samples, 2.48%)</title><rect x="40.5908%" y="805" width="2.4800%" height="15" fill="rgb(249,89,25)" fg:x="42637" fg:w="2605"/><text x="40.8408%" y="815.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_event (1,982 samples, 1.89%)</title><rect x="41.1839%" y="789" width="1.8869%" height="15" fill="rgb(239,193,0)" fg:x="43260" fg:w="1982"/><text x="41.4339%" y="799.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_event (12 samples, 0.01%)</title><rect x="43.0594%" y="773" width="0.0114%" height="15" fill="rgb(231,126,1)" fg:x="45230" fg:w="12"/><text x="43.3094%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (32 samples, 0.03%)</title><rect x="43.1869%" y="789" width="0.0305%" height="15" fill="rgb(243,166,3)" fg:x="45364" fg:w="32"/><text x="43.4369%" y="799.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.01%)</title><rect x="43.2174%" y="789" width="0.0114%" height="15" fill="rgb(223,22,34)" fg:x="45396" fg:w="12"/><text x="43.4674%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (923 samples, 0.88%)</title><rect x="43.0927%" y="805" width="0.8787%" height="15" fill="rgb(251,52,51)" fg:x="45265" fg:w="923"/><text x="43.3427%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (780 samples, 0.74%)</title><rect x="43.2288%" y="789" width="0.7426%" height="15" fill="rgb(221,165,28)" fg:x="45408" fg:w="780"/><text x="43.4788%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,411 samples, 1.34%)</title><rect x="43.0708%" y="837" width="1.3433%" height="15" fill="rgb(218,121,47)" fg:x="45242" fg:w="1411"/><text x="43.3208%" y="847.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,411 samples, 1.34%)</title><rect x="43.0708%" y="821" width="1.3433%" height="15" fill="rgb(209,120,9)" fg:x="45242" fg:w="1411"/><text x="43.3208%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (465 samples, 0.44%)</title><rect x="43.9714%" y="805" width="0.4427%" height="15" fill="rgb(236,68,12)" fg:x="46188" fg:w="465"/><text x="44.2214%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (406 samples, 0.39%)</title><rect x="44.4626%" y="821" width="0.3865%" height="15" fill="rgb(225,194,26)" fg:x="46704" fg:w="406"/><text x="44.7126%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (25 samples, 0.02%)</title><rect x="45.0805%" y="805" width="0.0238%" height="15" fill="rgb(231,84,39)" fg:x="47353" fg:w="25"/><text x="45.3305%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="45.1062%" y="789" width="0.0314%" height="15" fill="rgb(210,11,45)" fg:x="47380" fg:w="33"/><text x="45.3562%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (312 samples, 0.30%)</title><rect x="45.1062%" y="805" width="0.2970%" height="15" fill="rgb(224,54,52)" fg:x="47380" fg:w="312"/><text x="45.3562%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (279 samples, 0.27%)</title><rect x="45.1376%" y="789" width="0.2656%" height="15" fill="rgb(238,102,14)" fg:x="47413" fg:w="279"/><text x="45.3876%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (275 samples, 0.26%)</title><rect x="45.1414%" y="773" width="0.2618%" height="15" fill="rgb(243,160,52)" fg:x="47417" fg:w="275"/><text x="45.3914%" y="783.50"></text></g><g><title>core::ptr::read (275 samples, 0.26%)</title><rect x="45.1414%" y="757" width="0.2618%" height="15" fill="rgb(216,114,19)" fg:x="47417" fg:w="275"/><text x="45.3914%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (273 samples, 0.26%)</title><rect x="45.1433%" y="741" width="0.2599%" height="15" fill="rgb(244,166,37)" fg:x="47419" fg:w="273"/><text x="45.3933%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="45.4108%" y="645" width="0.0105%" height="15" fill="rgb(246,29,44)" fg:x="47700" fg:w="11"/><text x="45.6608%" y="655.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="45.4289%" y="533" width="0.0114%" height="15" fill="rgb(215,56,53)" fg:x="47719" fg:w="12"/><text x="45.6789%" y="543.50"></text></g><g><title>size_to_sizeclass (23 samples, 0.02%)</title><rect x="45.4423%" y="501" width="0.0219%" height="15" fill="rgb(217,60,2)" fg:x="47733" fg:w="23"/><text x="45.6923%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (23 samples, 0.02%)</title><rect x="45.4765%" y="421" width="0.0219%" height="15" fill="rgb(207,26,24)" fg:x="47769" fg:w="23"/><text x="45.7265%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (23 samples, 0.02%)</title><rect x="45.4765%" y="405" width="0.0219%" height="15" fill="rgb(252,210,15)" fg:x="47769" fg:w="23"/><text x="45.7265%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (21 samples, 0.02%)</title><rect x="45.4784%" y="389" width="0.0200%" height="15" fill="rgb(253,209,26)" fg:x="47771" fg:w="21"/><text x="45.7284%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (28 samples, 0.03%)</title><rect x="45.4765%" y="437" width="0.0267%" height="15" fill="rgb(238,170,14)" fg:x="47769" fg:w="28"/><text x="45.7265%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (39 samples, 0.04%)</title><rect x="45.4727%" y="453" width="0.0371%" height="15" fill="rgb(216,178,15)" fg:x="47765" fg:w="39"/><text x="45.7227%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (13 samples, 0.01%)</title><rect x="45.5194%" y="437" width="0.0124%" height="15" fill="rgb(250,197,2)" fg:x="47814" fg:w="13"/><text x="45.7694%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (165 samples, 0.16%)</title><rect x="45.4727%" y="485" width="0.1571%" height="15" fill="rgb(212,70,42)" fg:x="47765" fg:w="165"/><text x="45.7227%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (165 samples, 0.16%)</title><rect x="45.4727%" y="469" width="0.1571%" height="15" fill="rgb(227,213,9)" fg:x="47765" fg:w="165"/><text x="45.7227%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (126 samples, 0.12%)</title><rect x="45.5098%" y="453" width="0.1200%" height="15" fill="rgb(245,99,25)" fg:x="47804" fg:w="126"/><text x="45.7598%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (103 samples, 0.10%)</title><rect x="45.5317%" y="437" width="0.0981%" height="15" fill="rgb(250,82,29)" fg:x="47827" fg:w="103"/><text x="45.7817%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (103 samples, 0.10%)</title><rect x="45.5317%" y="421" width="0.0981%" height="15" fill="rgb(241,226,54)" fg:x="47827" fg:w="103"/><text x="45.7817%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (103 samples, 0.10%)</title><rect x="45.5317%" y="405" width="0.0981%" height="15" fill="rgb(221,99,41)" fg:x="47827" fg:w="103"/><text x="45.7817%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (55 samples, 0.05%)</title><rect x="45.6346%" y="485" width="0.0524%" height="15" fill="rgb(213,90,21)" fg:x="47935" fg:w="55"/><text x="45.8846%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (55 samples, 0.05%)</title><rect x="45.6346%" y="469" width="0.0524%" height="15" fill="rgb(205,208,24)" fg:x="47935" fg:w="55"/><text x="45.8846%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (786 samples, 0.75%)</title><rect x="45.4404%" y="533" width="0.7483%" height="15" fill="rgb(246,31,12)" fg:x="47731" fg:w="786"/><text x="45.6904%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (786 samples, 0.75%)</title><rect x="45.4404%" y="517" width="0.7483%" height="15" fill="rgb(213,154,6)" fg:x="47731" fg:w="786"/><text x="45.6904%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (761 samples, 0.72%)</title><rect x="45.4642%" y="501" width="0.7245%" height="15" fill="rgb(222,163,29)" fg:x="47756" fg:w="761"/><text x="45.7142%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (527 samples, 0.50%)</title><rect x="45.6869%" y="485" width="0.5017%" height="15" fill="rgb(227,201,8)" fg:x="47990" fg:w="527"/><text x="45.9369%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (527 samples, 0.50%)</title><rect x="45.6869%" y="469" width="0.5017%" height="15" fill="rgb(233,9,32)" fg:x="47990" fg:w="527"/><text x="45.9369%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (830 samples, 0.79%)</title><rect x="45.4108%" y="677" width="0.7902%" height="15" fill="rgb(217,54,24)" fg:x="47700" fg:w="830"/><text x="45.6608%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (830 samples, 0.79%)</title><rect x="45.4108%" y="661" width="0.7902%" height="15" fill="rgb(235,192,0)" fg:x="47700" fg:w="830"/><text x="45.6608%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (819 samples, 0.78%)</title><rect x="45.4213%" y="645" width="0.7797%" height="15" fill="rgb(235,45,9)" fg:x="47711" fg:w="819"/><text x="45.6713%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (819 samples, 0.78%)</title><rect x="45.4213%" y="629" width="0.7797%" height="15" fill="rgb(246,42,40)" fg:x="47711" fg:w="819"/><text x="45.6713%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (819 samples, 0.78%)</title><rect x="45.4213%" y="613" width="0.7797%" height="15" fill="rgb(248,111,24)" fg:x="47711" fg:w="819"/><text x="45.6713%" y="623.50"></text></g><g><title>alloc::alloc::alloc (811 samples, 0.77%)</title><rect x="45.4289%" y="597" width="0.7721%" height="15" fill="rgb(249,65,22)" fg:x="47719" fg:w="811"/><text x="45.6789%" y="607.50"></text></g><g><title>__rg_alloc (811 samples, 0.77%)</title><rect x="45.4289%" y="581" width="0.7721%" height="15" fill="rgb(238,111,51)" fg:x="47719" fg:w="811"/><text x="45.6789%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (811 samples, 0.77%)</title><rect x="45.4289%" y="565" width="0.7721%" height="15" fill="rgb(250,118,22)" fg:x="47719" fg:w="811"/><text x="45.6789%" y="575.50"></text></g><g><title>rust_alloc (811 samples, 0.77%)</title><rect x="45.4289%" y="549" width="0.7721%" height="15" fill="rgb(234,84,26)" fg:x="47719" fg:w="811"/><text x="45.6789%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="46.1886%" y="533" width="0.0124%" height="15" fill="rgb(243,172,12)" fg:x="48517" fg:w="13"/><text x="46.4386%" y="543.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (885 samples, 0.84%)</title><rect x="45.4108%" y="805" width="0.8425%" height="15" fill="rgb(236,150,49)" fg:x="47700" fg:w="885"/><text x="45.6608%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (885 samples, 0.84%)</title><rect x="45.4108%" y="789" width="0.8425%" height="15" fill="rgb(225,197,26)" fg:x="47700" fg:w="885"/><text x="45.6608%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (885 samples, 0.84%)</title><rect x="45.4108%" y="773" width="0.8425%" height="15" fill="rgb(214,17,42)" fg:x="47700" fg:w="885"/><text x="45.6608%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (885 samples, 0.84%)</title><rect x="45.4108%" y="757" width="0.8425%" height="15" fill="rgb(224,165,40)" fg:x="47700" fg:w="885"/><text x="45.6608%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (885 samples, 0.84%)</title><rect x="45.4108%" y="741" width="0.8425%" height="15" fill="rgb(246,100,4)" fg:x="47700" fg:w="885"/><text x="45.6608%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (885 samples, 0.84%)</title><rect x="45.4108%" y="725" width="0.8425%" height="15" fill="rgb(222,103,0)" fg:x="47700" fg:w="885"/><text x="45.6608%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (885 samples, 0.84%)</title><rect x="45.4108%" y="709" width="0.8425%" height="15" fill="rgb(227,189,26)" fg:x="47700" fg:w="885"/><text x="45.6608%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (885 samples, 0.84%)</title><rect x="45.4108%" y="693" width="0.8425%" height="15" fill="rgb(214,202,17)" fg:x="47700" fg:w="885"/><text x="45.6608%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (55 samples, 0.05%)</title><rect x="46.2010%" y="677" width="0.0524%" height="15" fill="rgb(229,111,3)" fg:x="48530" fg:w="55"/><text x="46.4510%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (55 samples, 0.05%)</title><rect x="46.2010%" y="661" width="0.0524%" height="15" fill="rgb(229,172,15)" fg:x="48530" fg:w="55"/><text x="46.4510%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (43 samples, 0.04%)</title><rect x="46.2124%" y="645" width="0.0409%" height="15" fill="rgb(230,224,35)" fg:x="48542" fg:w="43"/><text x="46.4624%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,268 samples, 1.21%)</title><rect x="46.2534%" y="805" width="1.2071%" height="15" fill="rgb(251,141,6)" fg:x="48585" fg:w="1268"/><text x="46.5034%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (20 samples, 0.02%)</title><rect x="47.4672%" y="789" width="0.0190%" height="15" fill="rgb(225,208,6)" fg:x="49860" fg:w="20"/><text x="47.7172%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (33 samples, 0.03%)</title><rect x="47.4605%" y="805" width="0.0314%" height="15" fill="rgb(246,181,16)" fg:x="49853" fg:w="33"/><text x="47.7105%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (18 samples, 0.02%)</title><rect x="47.4929%" y="805" width="0.0171%" height="15" fill="rgb(227,129,36)" fg:x="49887" fg:w="18"/><text x="47.7429%" y="815.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="47.4929%" y="789" width="0.0171%" height="15" fill="rgb(248,117,24)" fg:x="49887" fg:w="18"/><text x="47.7429%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (31 samples, 0.03%)</title><rect x="47.5272%" y="805" width="0.0295%" height="15" fill="rgb(214,185,35)" fg:x="49923" fg:w="31"/><text x="47.7772%" y="815.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (14 samples, 0.01%)</title><rect x="47.5729%" y="789" width="0.0133%" height="15" fill="rgb(236,150,34)" fg:x="49971" fg:w="14"/><text x="47.8229%" y="799.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (19 samples, 0.02%)</title><rect x="47.5881%" y="757" width="0.0181%" height="15" fill="rgb(243,228,27)" fg:x="49987" fg:w="19"/><text x="47.8381%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (235 samples, 0.22%)</title><rect x="47.5881%" y="773" width="0.2237%" height="15" fill="rgb(245,77,44)" fg:x="49987" fg:w="235"/><text x="47.8381%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (216 samples, 0.21%)</title><rect x="47.6062%" y="757" width="0.2056%" height="15" fill="rgb(235,214,42)" fg:x="50006" fg:w="216"/><text x="47.8562%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (216 samples, 0.21%)</title><rect x="47.6062%" y="741" width="0.2056%" height="15" fill="rgb(221,74,3)" fg:x="50006" fg:w="216"/><text x="47.8562%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (216 samples, 0.21%)</title><rect x="47.6062%" y="725" width="0.2056%" height="15" fill="rgb(206,121,29)" fg:x="50006" fg:w="216"/><text x="47.8562%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (216 samples, 0.21%)</title><rect x="47.6062%" y="709" width="0.2056%" height="15" fill="rgb(249,131,53)" fg:x="50006" fg:w="216"/><text x="47.8562%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (216 samples, 0.21%)</title><rect x="47.6062%" y="693" width="0.2056%" height="15" fill="rgb(236,170,29)" fg:x="50006" fg:w="216"/><text x="47.8562%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (160 samples, 0.15%)</title><rect x="47.6595%" y="677" width="0.1523%" height="15" fill="rgb(247,96,15)" fg:x="50062" fg:w="160"/><text x="47.9095%" y="687.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (272 samples, 0.26%)</title><rect x="47.5567%" y="805" width="0.2589%" height="15" fill="rgb(211,210,7)" fg:x="49954" fg:w="272"/><text x="47.8067%" y="815.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (241 samples, 0.23%)</title><rect x="47.5862%" y="789" width="0.2294%" height="15" fill="rgb(240,88,50)" fg:x="49985" fg:w="241"/><text x="47.8362%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,580 samples, 8.17%)</title><rect x="39.6769%" y="1141" width="8.1682%" height="15" fill="rgb(209,229,26)" fg:x="41677" fg:w="8580"/><text x="39.9269%" y="1151.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,578 samples, 8.17%)</title><rect x="39.6788%" y="1125" width="8.1663%" height="15" fill="rgb(210,68,23)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="1135.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::run::{{closure}} (8,578 samples, 8.17%)</title><rect x="39.6788%" y="1109" width="8.1663%" height="15" fill="rgb(229,180,13)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="1119.50">async_execu..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,578 samples, 8.17%)</title><rect x="39.6788%" y="1093" width="8.1663%" height="15" fill="rgb(236,53,44)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="1103.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,578 samples, 8.17%)</title><rect x="39.6788%" y="1077" width="8.1663%" height="15" fill="rgb(244,214,29)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="1087.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,578 samples, 8.17%)</title><rect x="39.6788%" y="1061" width="8.1663%" height="15" fill="rgb(220,75,29)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="1071.50">async_execu..</text></g><g><title>async_task::runnable::Runnable::run (8,578 samples, 8.17%)</title><rect x="39.6788%" y="1045" width="8.1663%" height="15" fill="rgb(214,183,37)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="1055.50">async_task:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,578 samples, 8.17%)</title><rect x="39.6788%" y="1029" width="8.1663%" height="15" fill="rgb(239,117,29)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="1039.50">async_task:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,578 samples, 8.17%)</title><rect x="39.6788%" y="1013" width="8.1663%" height="15" fill="rgb(237,171,35)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="1023.50">&lt;core::pin:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,578 samples, 8.17%)</title><rect x="39.6788%" y="997" width="8.1663%" height="15" fill="rgb(229,178,53)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="1007.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,578 samples, 8.17%)</title><rect x="39.6788%" y="981" width="8.1663%" height="15" fill="rgb(210,102,19)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="991.50">async_execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,578 samples, 8.17%)</title><rect x="39.6788%" y="965" width="8.1663%" height="15" fill="rgb(235,127,22)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="975.50">&lt;async_std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,578 samples, 8.17%)</title><rect x="39.6788%" y="949" width="8.1663%" height="15" fill="rgb(244,31,31)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="959.50">async_std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,578 samples, 8.17%)</title><rect x="39.6788%" y="933" width="8.1663%" height="15" fill="rgb(231,43,21)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="943.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,578 samples, 8.17%)</title><rect x="39.6788%" y="917" width="8.1663%" height="15" fill="rgb(217,131,35)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="927.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,578 samples, 8.17%)</title><rect x="39.6788%" y="901" width="8.1663%" height="15" fill="rgb(221,149,4)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="911.50">async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,578 samples, 8.17%)</title><rect x="39.6788%" y="885" width="8.1663%" height="15" fill="rgb(232,170,28)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="895.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,578 samples, 8.17%)</title><rect x="39.6788%" y="869" width="8.1663%" height="15" fill="rgb(238,56,10)" fg:x="41679" fg:w="8578"/><text x="39.9288%" y="879.50">&lt;core::futu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,015 samples, 4.77%)</title><rect x="43.0708%" y="853" width="4.7743%" height="15" fill="rgb(235,196,14)" fg:x="45242" fg:w="5015"/><text x="43.3208%" y="863.50">tremor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,604 samples, 3.43%)</title><rect x="44.4141%" y="837" width="3.4310%" height="15" fill="rgb(216,45,48)" fg:x="46653" fg:w="3604"/><text x="44.6641%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,147 samples, 3.00%)</title><rect x="44.8492%" y="821" width="2.9960%" height="15" fill="rgb(238,213,17)" fg:x="47110" fg:w="3147"/><text x="45.0992%" y="831.50">tre..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (31 samples, 0.03%)</title><rect x="47.8156%" y="805" width="0.0295%" height="15" fill="rgb(212,13,2)" fg:x="50226" fg:w="31"/><text x="48.0656%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (31 samples, 0.03%)</title><rect x="47.8156%" y="789" width="0.0295%" height="15" fill="rgb(240,114,20)" fg:x="50226" fg:w="31"/><text x="48.0656%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (31 samples, 0.03%)</title><rect x="47.8156%" y="773" width="0.0295%" height="15" fill="rgb(228,41,40)" fg:x="50226" fg:w="31"/><text x="48.0656%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (17 samples, 0.02%)</title><rect x="47.8289%" y="757" width="0.0162%" height="15" fill="rgb(244,132,35)" fg:x="50240" fg:w="17"/><text x="48.0789%" y="767.50"></text></g><g><title>async_io::driver::block_on (8,583 samples, 8.17%)</title><rect x="39.6769%" y="1157" width="8.1711%" height="15" fill="rgb(253,189,4)" fg:x="41677" fg:w="8583"/><text x="39.9269%" y="1167.50">async_io::d..</text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="48.4715%" y="757" width="0.0133%" height="15" fill="rgb(224,37,19)" fg:x="50915" fg:w="14"/><text x="48.7215%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="48.4944%" y="693" width="0.0114%" height="15" fill="rgb(235,223,18)" fg:x="50939" fg:w="12"/><text x="48.7444%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (18 samples, 0.02%)</title><rect x="48.4906%" y="709" width="0.0171%" height="15" fill="rgb(235,163,25)" fg:x="50935" fg:w="18"/><text x="48.7406%" y="719.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="48.5115%" y="693" width="0.0114%" height="15" fill="rgb(217,145,28)" fg:x="50957" fg:w="12"/><text x="48.7615%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="48.4906%" y="741" width="0.0819%" height="15" fill="rgb(223,223,32)" fg:x="50935" fg:w="86"/><text x="48.7406%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (86 samples, 0.08%)</title><rect x="48.4906%" y="725" width="0.0819%" height="15" fill="rgb(227,189,39)" fg:x="50935" fg:w="86"/><text x="48.7406%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (68 samples, 0.06%)</title><rect x="48.5077%" y="709" width="0.0647%" height="15" fill="rgb(248,10,22)" fg:x="50953" fg:w="68"/><text x="48.7577%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (52 samples, 0.05%)</title><rect x="48.5230%" y="693" width="0.0495%" height="15" fill="rgb(248,46,39)" fg:x="50969" fg:w="52"/><text x="48.7730%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (52 samples, 0.05%)</title><rect x="48.5230%" y="677" width="0.0495%" height="15" fill="rgb(248,113,48)" fg:x="50969" fg:w="52"/><text x="48.7730%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (52 samples, 0.05%)</title><rect x="48.5230%" y="661" width="0.0495%" height="15" fill="rgb(245,16,25)" fg:x="50969" fg:w="52"/><text x="48.7730%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (353 samples, 0.34%)</title><rect x="48.4668%" y="789" width="0.3361%" height="15" fill="rgb(249,152,16)" fg:x="50910" fg:w="353"/><text x="48.7168%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (352 samples, 0.34%)</title><rect x="48.4677%" y="773" width="0.3351%" height="15" fill="rgb(250,16,1)" fg:x="50911" fg:w="352"/><text x="48.7177%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (334 samples, 0.32%)</title><rect x="48.4849%" y="757" width="0.3180%" height="15" fill="rgb(249,138,3)" fg:x="50929" fg:w="334"/><text x="48.7349%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (225 samples, 0.21%)</title><rect x="48.5886%" y="741" width="0.2142%" height="15" fill="rgb(227,71,41)" fg:x="51038" fg:w="225"/><text x="48.8386%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (225 samples, 0.21%)</title><rect x="48.5886%" y="725" width="0.2142%" height="15" fill="rgb(209,184,23)" fg:x="51038" fg:w="225"/><text x="48.8386%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (375 samples, 0.36%)</title><rect x="48.4506%" y="901" width="0.3570%" height="15" fill="rgb(223,215,31)" fg:x="50893" fg:w="375"/><text x="48.7006%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (375 samples, 0.36%)</title><rect x="48.4506%" y="885" width="0.3570%" height="15" fill="rgb(210,146,28)" fg:x="50893" fg:w="375"/><text x="48.7006%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (375 samples, 0.36%)</title><rect x="48.4506%" y="869" width="0.3570%" height="15" fill="rgb(209,183,41)" fg:x="50893" fg:w="375"/><text x="48.7006%" y="879.50"></text></g><g><title>alloc::alloc::alloc (374 samples, 0.36%)</title><rect x="48.4516%" y="853" width="0.3561%" height="15" fill="rgb(209,224,45)" fg:x="50894" fg:w="374"/><text x="48.7016%" y="863.50"></text></g><g><title>__rg_alloc (374 samples, 0.36%)</title><rect x="48.4516%" y="837" width="0.3561%" height="15" fill="rgb(224,209,51)" fg:x="50894" fg:w="374"/><text x="48.7016%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (374 samples, 0.36%)</title><rect x="48.4516%" y="821" width="0.3561%" height="15" fill="rgb(223,17,39)" fg:x="50894" fg:w="374"/><text x="48.7016%" y="831.50"></text></g><g><title>rust_alloc (372 samples, 0.35%)</title><rect x="48.4535%" y="805" width="0.3541%" height="15" fill="rgb(234,204,37)" fg:x="50896" fg:w="372"/><text x="48.7035%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (15 samples, 0.01%)</title><rect x="48.8076%" y="901" width="0.0143%" height="15" fill="rgb(236,120,5)" fg:x="51268" fg:w="15"/><text x="49.0576%" y="911.50"></text></g><g><title>alloc::slice::hack::into_vec (15 samples, 0.01%)</title><rect x="48.8076%" y="885" width="0.0143%" height="15" fill="rgb(248,97,27)" fg:x="51268" fg:w="15"/><text x="49.0576%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (15 samples, 0.01%)</title><rect x="48.8076%" y="869" width="0.0143%" height="15" fill="rgb(240,66,17)" fg:x="51268" fg:w="15"/><text x="49.0576%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="48.8314%" y="901" width="0.0133%" height="15" fill="rgb(210,79,3)" fg:x="51293" fg:w="14"/><text x="49.0814%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="48.8314%" y="885" width="0.0133%" height="15" fill="rgb(214,176,27)" fg:x="51293" fg:w="14"/><text x="49.0814%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="48.8314%" y="869" width="0.0133%" height="15" fill="rgb(235,185,3)" fg:x="51293" fg:w="14"/><text x="49.0814%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="48.8314%" y="853" width="0.0133%" height="15" fill="rgb(227,24,12)" fg:x="51293" fg:w="14"/><text x="49.0814%" y="863.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (1,050 samples, 1.00%)</title><rect x="47.8508%" y="917" width="0.9996%" height="15" fill="rgb(252,169,48)" fg:x="50263" fg:w="1050"/><text x="48.1008%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (165 samples, 0.16%)</title><rect x="49.2750%" y="901" width="0.1571%" height="15" fill="rgb(212,65,1)" fg:x="51759" fg:w="165"/><text x="49.5250%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="49.4616%" y="741" width="0.0419%" height="15" fill="rgb(242,39,24)" fg:x="51955" fg:w="44"/><text x="49.7116%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (44 samples, 0.04%)</title><rect x="49.4616%" y="725" width="0.0419%" height="15" fill="rgb(249,32,23)" fg:x="51955" fg:w="44"/><text x="49.7116%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (38 samples, 0.04%)</title><rect x="49.4674%" y="709" width="0.0362%" height="15" fill="rgb(251,195,23)" fg:x="51961" fg:w="38"/><text x="49.7174%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (26 samples, 0.02%)</title><rect x="49.4788%" y="693" width="0.0248%" height="15" fill="rgb(236,174,8)" fg:x="51973" fg:w="26"/><text x="49.7288%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="49.4788%" y="677" width="0.0248%" height="15" fill="rgb(220,197,8)" fg:x="51973" fg:w="26"/><text x="49.7288%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="49.4788%" y="661" width="0.0248%" height="15" fill="rgb(240,108,37)" fg:x="51973" fg:w="26"/><text x="49.7288%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::empty (15 samples, 0.01%)</title><rect x="49.5102%" y="741" width="0.0143%" height="15" fill="rgb(232,176,24)" fg:x="52006" fg:w="15"/><text x="49.7602%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (15 samples, 0.01%)</title><rect x="49.5102%" y="725" width="0.0143%" height="15" fill="rgb(243,35,29)" fg:x="52006" fg:w="15"/><text x="49.7602%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (205 samples, 0.20%)</title><rect x="49.4512%" y="789" width="0.1952%" height="15" fill="rgb(210,37,18)" fg:x="51944" fg:w="205"/><text x="49.7012%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (197 samples, 0.19%)</title><rect x="49.4588%" y="773" width="0.1875%" height="15" fill="rgb(224,184,40)" fg:x="51952" fg:w="197"/><text x="49.7088%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (195 samples, 0.19%)</title><rect x="49.4607%" y="757" width="0.1856%" height="15" fill="rgb(236,39,29)" fg:x="51954" fg:w="195"/><text x="49.7107%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (128 samples, 0.12%)</title><rect x="49.5245%" y="741" width="0.1219%" height="15" fill="rgb(232,48,39)" fg:x="52021" fg:w="128"/><text x="49.7745%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (128 samples, 0.12%)</title><rect x="49.5245%" y="725" width="0.1219%" height="15" fill="rgb(236,34,42)" fg:x="52021" fg:w="128"/><text x="49.7745%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (234 samples, 0.22%)</title><rect x="49.4321%" y="901" width="0.2228%" height="15" fill="rgb(243,106,37)" fg:x="51924" fg:w="234"/><text x="49.6821%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (234 samples, 0.22%)</title><rect x="49.4321%" y="885" width="0.2228%" height="15" fill="rgb(218,96,6)" fg:x="51924" fg:w="234"/><text x="49.6821%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (234 samples, 0.22%)</title><rect x="49.4321%" y="869" width="0.2228%" height="15" fill="rgb(235,130,12)" fg:x="51924" fg:w="234"/><text x="49.6821%" y="879.50"></text></g><g><title>alloc::alloc::alloc (234 samples, 0.22%)</title><rect x="49.4321%" y="853" width="0.2228%" height="15" fill="rgb(231,95,0)" fg:x="51924" fg:w="234"/><text x="49.6821%" y="863.50"></text></g><g><title>__rg_alloc (234 samples, 0.22%)</title><rect x="49.4321%" y="837" width="0.2228%" height="15" fill="rgb(228,12,23)" fg:x="51924" fg:w="234"/><text x="49.6821%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (234 samples, 0.22%)</title><rect x="49.4321%" y="821" width="0.2228%" height="15" fill="rgb(216,12,1)" fg:x="51924" fg:w="234"/><text x="49.6821%" y="831.50"></text></g><g><title>rust_alloc (216 samples, 0.21%)</title><rect x="49.4493%" y="805" width="0.2056%" height="15" fill="rgb(219,59,3)" fg:x="51942" fg:w="216"/><text x="49.6993%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (14 samples, 0.01%)</title><rect x="49.6892%" y="693" width="0.0133%" height="15" fill="rgb(215,208,46)" fg:x="52194" fg:w="14"/><text x="49.9392%" y="703.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (13 samples, 0.01%)</title><rect x="49.7054%" y="677" width="0.0124%" height="15" fill="rgb(254,224,29)" fg:x="52211" fg:w="13"/><text x="49.9554%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (90 samples, 0.09%)</title><rect x="49.6892%" y="725" width="0.0857%" height="15" fill="rgb(232,14,29)" fg:x="52194" fg:w="90"/><text x="49.9392%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (90 samples, 0.09%)</title><rect x="49.6892%" y="709" width="0.0857%" height="15" fill="rgb(208,45,52)" fg:x="52194" fg:w="90"/><text x="49.9392%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (76 samples, 0.07%)</title><rect x="49.7025%" y="693" width="0.0724%" height="15" fill="rgb(234,191,28)" fg:x="52208" fg:w="76"/><text x="49.9525%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (60 samples, 0.06%)</title><rect x="49.7177%" y="677" width="0.0571%" height="15" fill="rgb(244,67,43)" fg:x="52224" fg:w="60"/><text x="49.9677%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (60 samples, 0.06%)</title><rect x="49.7177%" y="661" width="0.0571%" height="15" fill="rgb(236,189,24)" fg:x="52224" fg:w="60"/><text x="49.9677%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (60 samples, 0.06%)</title><rect x="49.7177%" y="645" width="0.0571%" height="15" fill="rgb(239,214,33)" fg:x="52224" fg:w="60"/><text x="49.9677%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="49.7806%" y="725" width="0.0238%" height="15" fill="rgb(226,176,41)" fg:x="52290" fg:w="25"/><text x="50.0306%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="49.7806%" y="709" width="0.0238%" height="15" fill="rgb(248,47,8)" fg:x="52290" fg:w="25"/><text x="50.0306%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="49.7806%" y="693" width="0.0238%" height="15" fill="rgb(218,81,44)" fg:x="52290" fg:w="25"/><text x="50.0306%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="49.7815%" y="677" width="0.0228%" height="15" fill="rgb(213,98,6)" fg:x="52291" fg:w="24"/><text x="50.0315%" y="687.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (23 samples, 0.02%)</title><rect x="49.7825%" y="661" width="0.0219%" height="15" fill="rgb(222,85,22)" fg:x="52292" fg:w="23"/><text x="50.0325%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (12 samples, 0.01%)</title><rect x="49.7929%" y="645" width="0.0114%" height="15" fill="rgb(239,46,39)" fg:x="52303" fg:w="12"/><text x="50.0429%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="49.7929%" y="629" width="0.0114%" height="15" fill="rgb(237,12,29)" fg:x="52303" fg:w="12"/><text x="50.0429%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (172 samples, 0.16%)</title><rect x="49.6825%" y="773" width="0.1637%" height="15" fill="rgb(214,77,8)" fg:x="52187" fg:w="172"/><text x="49.9325%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (167 samples, 0.16%)</title><rect x="49.6873%" y="757" width="0.1590%" height="15" fill="rgb(217,168,37)" fg:x="52192" fg:w="167"/><text x="49.9373%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (166 samples, 0.16%)</title><rect x="49.6882%" y="741" width="0.1580%" height="15" fill="rgb(221,217,23)" fg:x="52193" fg:w="166"/><text x="49.9382%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::take (44 samples, 0.04%)</title><rect x="49.8044%" y="725" width="0.0419%" height="15" fill="rgb(243,229,36)" fg:x="52315" fg:w="44"/><text x="50.0544%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (44 samples, 0.04%)</title><rect x="49.8044%" y="709" width="0.0419%" height="15" fill="rgb(251,163,40)" fg:x="52315" fg:w="44"/><text x="50.0544%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (206 samples, 0.20%)</title><rect x="49.6549%" y="901" width="0.1961%" height="15" fill="rgb(237,222,12)" fg:x="52158" fg:w="206"/><text x="49.9049%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (188 samples, 0.18%)</title><rect x="49.6720%" y="885" width="0.1790%" height="15" fill="rgb(248,132,6)" fg:x="52176" fg:w="188"/><text x="49.9220%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (188 samples, 0.18%)</title><rect x="49.6720%" y="869" width="0.1790%" height="15" fill="rgb(227,167,50)" fg:x="52176" fg:w="188"/><text x="49.9220%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (188 samples, 0.18%)</title><rect x="49.6720%" y="853" width="0.1790%" height="15" fill="rgb(242,84,37)" fg:x="52176" fg:w="188"/><text x="49.9220%" y="863.50"></text></g><g><title>alloc::alloc::alloc (187 samples, 0.18%)</title><rect x="49.6730%" y="837" width="0.1780%" height="15" fill="rgb(212,4,50)" fg:x="52177" fg:w="187"/><text x="49.9230%" y="847.50"></text></g><g><title>__rg_alloc (187 samples, 0.18%)</title><rect x="49.6730%" y="821" width="0.1780%" height="15" fill="rgb(230,228,32)" fg:x="52177" fg:w="187"/><text x="49.9230%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (187 samples, 0.18%)</title><rect x="49.6730%" y="805" width="0.1780%" height="15" fill="rgb(248,217,23)" fg:x="52177" fg:w="187"/><text x="49.9230%" y="815.50"></text></g><g><title>rust_alloc (184 samples, 0.18%)</title><rect x="49.6758%" y="789" width="0.1752%" height="15" fill="rgb(238,197,32)" fg:x="52180" fg:w="184"/><text x="49.9258%" y="799.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (23 samples, 0.02%)</title><rect x="49.8510%" y="901" width="0.0219%" height="15" fill="rgb(236,106,1)" fg:x="52364" fg:w="23"/><text x="50.1010%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (23 samples, 0.02%)</title><rect x="49.8510%" y="885" width="0.0219%" height="15" fill="rgb(219,228,13)" fg:x="52364" fg:w="23"/><text x="50.1010%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (23 samples, 0.02%)</title><rect x="49.8510%" y="869" width="0.0219%" height="15" fill="rgb(238,30,35)" fg:x="52364" fg:w="23"/><text x="50.1010%" y="879.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (19 samples, 0.02%)</title><rect x="50.1652%" y="885" width="0.0181%" height="15" fill="rgb(236,70,23)" fg:x="52694" fg:w="19"/><text x="50.4152%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="50.4765%" y="693" width="0.0105%" height="15" fill="rgb(249,104,48)" fg:x="53021" fg:w="11"/><text x="50.7265%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (15 samples, 0.01%)</title><rect x="50.4870%" y="677" width="0.0143%" height="15" fill="rgb(254,117,50)" fg:x="53032" fg:w="15"/><text x="50.7370%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (66 samples, 0.06%)</title><rect x="50.4508%" y="741" width="0.0628%" height="15" fill="rgb(223,152,4)" fg:x="52994" fg:w="66"/><text x="50.7008%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (48 samples, 0.05%)</title><rect x="50.4679%" y="725" width="0.0457%" height="15" fill="rgb(245,6,2)" fg:x="53012" fg:w="48"/><text x="50.7179%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (39 samples, 0.04%)</title><rect x="50.4765%" y="709" width="0.0371%" height="15" fill="rgb(249,150,24)" fg:x="53021" fg:w="39"/><text x="50.7265%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.03%)</title><rect x="50.4870%" y="693" width="0.0267%" height="15" fill="rgb(228,185,42)" fg:x="53032" fg:w="28"/><text x="50.7370%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::array (13 samples, 0.01%)</title><rect x="50.5012%" y="677" width="0.0124%" height="15" fill="rgb(226,39,33)" fg:x="53047" fg:w="13"/><text x="50.7512%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (13 samples, 0.01%)</title><rect x="50.5012%" y="661" width="0.0124%" height="15" fill="rgb(221,166,19)" fg:x="53047" fg:w="13"/><text x="50.7512%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (13 samples, 0.01%)</title><rect x="50.5012%" y="645" width="0.0124%" height="15" fill="rgb(209,109,2)" fg:x="53047" fg:w="13"/><text x="50.7512%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (81 samples, 0.08%)</title><rect x="50.4508%" y="773" width="0.0771%" height="15" fill="rgb(252,216,26)" fg:x="52994" fg:w="81"/><text x="50.7008%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (81 samples, 0.08%)</title><rect x="50.4508%" y="757" width="0.0771%" height="15" fill="rgb(227,173,36)" fg:x="52994" fg:w="81"/><text x="50.7008%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="50.5136%" y="741" width="0.0143%" height="15" fill="rgb(209,90,7)" fg:x="53060" fg:w="15"/><text x="50.7636%" y="751.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (339 samples, 0.32%)</title><rect x="50.2061%" y="837" width="0.3227%" height="15" fill="rgb(250,194,11)" fg:x="52737" fg:w="339"/><text x="50.4561%" y="847.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (285 samples, 0.27%)</title><rect x="50.2575%" y="821" width="0.2713%" height="15" fill="rgb(220,72,50)" fg:x="52791" fg:w="285"/><text x="50.5075%" y="831.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (270 samples, 0.26%)</title><rect x="50.2718%" y="805" width="0.2570%" height="15" fill="rgb(222,106,48)" fg:x="52806" fg:w="270"/><text x="50.5218%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (105 samples, 0.10%)</title><rect x="50.4289%" y="789" width="0.1000%" height="15" fill="rgb(216,220,45)" fg:x="52971" fg:w="105"/><text x="50.6789%" y="799.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (394 samples, 0.38%)</title><rect x="50.2061%" y="853" width="0.3751%" height="15" fill="rgb(234,112,18)" fg:x="52737" fg:w="394"/><text x="50.4561%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (55 samples, 0.05%)</title><rect x="50.5288%" y="837" width="0.0524%" height="15" fill="rgb(206,179,9)" fg:x="53076" fg:w="55"/><text x="50.7788%" y="847.50"></text></g><g><title>core::ptr::write (55 samples, 0.05%)</title><rect x="50.5288%" y="821" width="0.0524%" height="15" fill="rgb(215,115,40)" fg:x="53076" fg:w="55"/><text x="50.7788%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="50.6107%" y="613" width="0.0114%" height="15" fill="rgb(222,69,34)" fg:x="53162" fg:w="12"/><text x="50.8607%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="50.6107%" y="597" width="0.0114%" height="15" fill="rgb(209,161,10)" fg:x="53162" fg:w="12"/><text x="50.8607%" y="607.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="50.6117%" y="581" width="0.0105%" height="15" fill="rgb(217,6,38)" fg:x="53163" fg:w="11"/><text x="50.8617%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (15 samples, 0.01%)</title><rect x="50.6107%" y="629" width="0.0143%" height="15" fill="rgb(229,229,48)" fg:x="53162" fg:w="15"/><text x="50.8607%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (24 samples, 0.02%)</title><rect x="50.6088%" y="645" width="0.0228%" height="15" fill="rgb(225,21,28)" fg:x="53160" fg:w="24"/><text x="50.8588%" y="655.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (17 samples, 0.02%)</title><rect x="50.6393%" y="629" width="0.0162%" height="15" fill="rgb(206,33,13)" fg:x="53192" fg:w="17"/><text x="50.8893%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (146 samples, 0.14%)</title><rect x="50.6088%" y="677" width="0.1390%" height="15" fill="rgb(242,178,17)" fg:x="53160" fg:w="146"/><text x="50.8588%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (146 samples, 0.14%)</title><rect x="50.6088%" y="661" width="0.1390%" height="15" fill="rgb(220,162,5)" fg:x="53160" fg:w="146"/><text x="50.8588%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (122 samples, 0.12%)</title><rect x="50.6317%" y="645" width="0.1161%" height="15" fill="rgb(210,33,43)" fg:x="53184" fg:w="122"/><text x="50.8817%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (97 samples, 0.09%)</title><rect x="50.6555%" y="629" width="0.0923%" height="15" fill="rgb(216,116,54)" fg:x="53209" fg:w="97"/><text x="50.9055%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (97 samples, 0.09%)</title><rect x="50.6555%" y="613" width="0.0923%" height="15" fill="rgb(249,92,24)" fg:x="53209" fg:w="97"/><text x="50.9055%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (97 samples, 0.09%)</title><rect x="50.6555%" y="597" width="0.0923%" height="15" fill="rgb(231,189,14)" fg:x="53209" fg:w="97"/><text x="50.9055%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="50.7507%" y="677" width="0.0162%" height="15" fill="rgb(230,8,41)" fg:x="53309" fg:w="17"/><text x="51.0007%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="50.7507%" y="661" width="0.0162%" height="15" fill="rgb(249,7,27)" fg:x="53309" fg:w="17"/><text x="51.0007%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="50.7507%" y="645" width="0.0162%" height="15" fill="rgb(232,86,5)" fg:x="53309" fg:w="17"/><text x="51.0007%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="50.7507%" y="629" width="0.0162%" height="15" fill="rgb(224,175,18)" fg:x="53309" fg:w="17"/><text x="51.0007%" y="639.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (17 samples, 0.02%)</title><rect x="50.7507%" y="613" width="0.0162%" height="15" fill="rgb(220,129,12)" fg:x="53309" fg:w="17"/><text x="51.0007%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (662 samples, 0.63%)</title><rect x="50.2004%" y="869" width="0.6302%" height="15" fill="rgb(210,19,36)" fg:x="52731" fg:w="662"/><text x="50.4504%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (262 samples, 0.25%)</title><rect x="50.5812%" y="853" width="0.2494%" height="15" fill="rgb(219,96,14)" fg:x="53131" fg:w="262"/><text x="50.8312%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (262 samples, 0.25%)</title><rect x="50.5812%" y="837" width="0.2494%" height="15" fill="rgb(249,106,1)" fg:x="53131" fg:w="262"/><text x="50.8312%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (262 samples, 0.25%)</title><rect x="50.5812%" y="821" width="0.2494%" height="15" fill="rgb(249,155,20)" fg:x="53131" fg:w="262"/><text x="50.8312%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (262 samples, 0.25%)</title><rect x="50.5812%" y="805" width="0.2494%" height="15" fill="rgb(244,168,9)" fg:x="53131" fg:w="262"/><text x="50.8312%" y="815.50"></text></g><g><title>alloc::alloc::alloc (262 samples, 0.25%)</title><rect x="50.5812%" y="789" width="0.2494%" height="15" fill="rgb(216,23,50)" fg:x="53131" fg:w="262"/><text x="50.8312%" y="799.50"></text></g><g><title>__rg_alloc (262 samples, 0.25%)</title><rect x="50.5812%" y="773" width="0.2494%" height="15" fill="rgb(224,219,20)" fg:x="53131" fg:w="262"/><text x="50.8312%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (262 samples, 0.25%)</title><rect x="50.5812%" y="757" width="0.2494%" height="15" fill="rgb(222,156,15)" fg:x="53131" fg:w="262"/><text x="50.8312%" y="767.50"></text></g><g><title>rust_alloc (262 samples, 0.25%)</title><rect x="50.5812%" y="741" width="0.2494%" height="15" fill="rgb(231,97,17)" fg:x="53131" fg:w="262"/><text x="50.8312%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (254 samples, 0.24%)</title><rect x="50.5888%" y="725" width="0.2418%" height="15" fill="rgb(218,70,48)" fg:x="53139" fg:w="254"/><text x="50.8388%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (254 samples, 0.24%)</title><rect x="50.5888%" y="709" width="0.2418%" height="15" fill="rgb(212,196,52)" fg:x="53139" fg:w="254"/><text x="50.8388%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (244 samples, 0.23%)</title><rect x="50.5983%" y="693" width="0.2323%" height="15" fill="rgb(243,203,18)" fg:x="53149" fg:w="244"/><text x="50.8483%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (67 samples, 0.06%)</title><rect x="50.7668%" y="677" width="0.0638%" height="15" fill="rgb(252,125,41)" fg:x="53326" fg:w="67"/><text x="51.0168%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (67 samples, 0.06%)</title><rect x="50.7668%" y="661" width="0.0638%" height="15" fill="rgb(223,180,33)" fg:x="53326" fg:w="67"/><text x="51.0168%" y="671.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (686 samples, 0.65%)</title><rect x="50.1833%" y="885" width="0.6531%" height="15" fill="rgb(254,159,46)" fg:x="52713" fg:w="686"/><text x="50.4333%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,464 samples, 3.30%)</title><rect x="47.8508%" y="981" width="3.2978%" height="15" fill="rgb(254,38,10)" fg:x="50263" fg:w="3464"/><text x="48.1008%" y="991.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,464 samples, 3.30%)</title><rect x="47.8508%" y="965" width="3.2978%" height="15" fill="rgb(208,217,32)" fg:x="50263" fg:w="3464"/><text x="48.1008%" y="975.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,464 samples, 3.30%)</title><rect x="47.8508%" y="949" width="3.2978%" height="15" fill="rgb(221,120,13)" fg:x="50263" fg:w="3464"/><text x="48.1008%" y="959.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,464 samples, 3.30%)</title><rect x="47.8508%" y="933" width="3.2978%" height="15" fill="rgb(246,54,52)" fg:x="50263" fg:w="3464"/><text x="48.1008%" y="943.50">tre..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,414 samples, 2.30%)</title><rect x="48.8504%" y="917" width="2.2982%" height="15" fill="rgb(242,34,25)" fg:x="51313" fg:w="2414"/><text x="49.1004%" y="927.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,340 samples, 1.28%)</title><rect x="49.8729%" y="901" width="1.2757%" height="15" fill="rgb(247,209,9)" fg:x="52387" fg:w="1340"/><text x="50.1229%" y="911.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (328 samples, 0.31%)</title><rect x="50.8363%" y="885" width="0.3123%" height="15" fill="rgb(228,71,26)" fg:x="53399" fg:w="328"/><text x="51.0863%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="51.2714%" y="869" width="0.0171%" height="15" fill="rgb(222,145,49)" fg:x="53856" fg:w="18"/><text x="51.5214%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (177 samples, 0.17%)</title><rect x="51.3542%" y="853" width="0.1685%" height="15" fill="rgb(218,121,17)" fg:x="53943" fg:w="177"/><text x="51.6042%" y="863.50"></text></g><g><title>core::mem::replace (177 samples, 0.17%)</title><rect x="51.3542%" y="837" width="0.1685%" height="15" fill="rgb(244,50,7)" fg:x="53943" fg:w="177"/><text x="51.6042%" y="847.50"></text></g><g><title>core::ptr::read (175 samples, 0.17%)</title><rect x="51.3561%" y="821" width="0.1666%" height="15" fill="rgb(246,229,37)" fg:x="53945" fg:w="175"/><text x="51.6061%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (289 samples, 0.28%)</title><rect x="51.2971%" y="869" width="0.2751%" height="15" fill="rgb(225,18,5)" fg:x="53883" fg:w="289"/><text x="51.5471%" y="879.50"></text></g><g><title>core::mem::drop (52 samples, 0.05%)</title><rect x="51.5227%" y="853" width="0.0495%" height="15" fill="rgb(213,204,8)" fg:x="54120" fg:w="52"/><text x="51.7727%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (52 samples, 0.05%)</title><rect x="51.5227%" y="837" width="0.0495%" height="15" fill="rgb(238,103,6)" fg:x="54120" fg:w="52"/><text x="51.7727%" y="847.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="51.5722%" y="853" width="0.0152%" height="15" fill="rgb(222,25,35)" fg:x="54172" fg:w="16"/><text x="51.8222%" y="863.50"></text></g><g><title>std::sync::poison::Flag::done (12 samples, 0.01%)</title><rect x="51.5999%" y="821" width="0.0114%" height="15" fill="rgb(213,203,35)" fg:x="54201" fg:w="12"/><text x="51.8499%" y="831.50"></text></g><g><title>std::thread::panicking (11 samples, 0.01%)</title><rect x="51.6008%" y="805" width="0.0105%" height="15" fill="rgb(221,79,53)" fg:x="54202" fg:w="11"/><text x="51.8508%" y="815.50"></text></g><g><title>std::panicking::panicking (11 samples, 0.01%)</title><rect x="51.6008%" y="789" width="0.0105%" height="15" fill="rgb(243,200,35)" fg:x="54202" fg:w="11"/><text x="51.8508%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (11 samples, 0.01%)</title><rect x="51.6008%" y="773" width="0.0105%" height="15" fill="rgb(248,60,25)" fg:x="54202" fg:w="11"/><text x="51.8508%" y="783.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="51.6113%" y="805" width="0.0114%" height="15" fill="rgb(227,53,46)" fg:x="54213" fg:w="12"/><text x="51.8613%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (288 samples, 0.27%)</title><rect x="51.6227%" y="789" width="0.2742%" height="15" fill="rgb(216,120,32)" fg:x="54225" fg:w="288"/><text x="51.8727%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (354 samples, 0.34%)</title><rect x="51.5722%" y="869" width="0.3370%" height="15" fill="rgb(220,134,1)" fg:x="54172" fg:w="354"/><text x="51.8222%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (338 samples, 0.32%)</title><rect x="51.5875%" y="853" width="0.3218%" height="15" fill="rgb(237,168,5)" fg:x="54188" fg:w="338"/><text x="51.8375%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (338 samples, 0.32%)</title><rect x="51.5875%" y="837" width="0.3218%" height="15" fill="rgb(231,100,33)" fg:x="54188" fg:w="338"/><text x="51.8375%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (313 samples, 0.30%)</title><rect x="51.6113%" y="821" width="0.2980%" height="15" fill="rgb(236,177,47)" fg:x="54213" fg:w="313"/><text x="51.8613%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (301 samples, 0.29%)</title><rect x="51.6227%" y="805" width="0.2866%" height="15" fill="rgb(235,7,49)" fg:x="54225" fg:w="301"/><text x="51.8727%" y="815.50"></text></g><g><title>___pthread_mutex_unlock (13 samples, 0.01%)</title><rect x="51.8969%" y="789" width="0.0124%" height="15" fill="rgb(232,119,22)" fg:x="54513" fg:w="13"/><text x="52.1469%" y="799.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (19 samples, 0.02%)</title><rect x="51.9254%" y="821" width="0.0181%" height="15" fill="rgb(254,73,53)" fg:x="54543" fg:w="19"/><text x="52.1754%" y="831.50"></text></g><g><title>core::task::wake::Waker::will_wake (42 samples, 0.04%)</title><rect x="51.9093%" y="869" width="0.0400%" height="15" fill="rgb(251,35,20)" fg:x="54526" fg:w="42"/><text x="52.1593%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (42 samples, 0.04%)</title><rect x="51.9093%" y="853" width="0.0400%" height="15" fill="rgb(241,119,20)" fg:x="54526" fg:w="42"/><text x="52.1593%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.02%)</title><rect x="51.9254%" y="837" width="0.0238%" height="15" fill="rgb(207,102,14)" fg:x="54543" fg:w="25"/><text x="52.1754%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,890 samples, 1.80%)</title><rect x="51.1753%" y="885" width="1.7993%" height="15" fill="rgb(248,201,50)" fg:x="53755" fg:w="1890"/><text x="51.4253%" y="895.50">&lt;..</text></g><g><title>event_listener::Inner::lock (1,077 samples, 1.03%)</title><rect x="51.9492%" y="869" width="1.0253%" height="15" fill="rgb(222,185,44)" fg:x="54568" fg:w="1077"/><text x="52.1992%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,061 samples, 1.01%)</title><rect x="51.9645%" y="853" width="1.0101%" height="15" fill="rgb(218,107,18)" fg:x="54584" fg:w="1061"/><text x="52.2145%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,051 samples, 1.00%)</title><rect x="51.9740%" y="837" width="1.0006%" height="15" fill="rgb(237,177,39)" fg:x="54594" fg:w="1051"/><text x="52.2240%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1,015 samples, 0.97%)</title><rect x="52.0083%" y="821" width="0.9663%" height="15" fill="rgb(246,69,6)" fg:x="54630" fg:w="1015"/><text x="52.2583%" y="831.50"></text></g><g><title>___pthread_mutex_lock (1,015 samples, 0.97%)</title><rect x="52.0083%" y="805" width="0.9663%" height="15" fill="rgb(234,208,37)" fg:x="54630" fg:w="1015"/><text x="52.2583%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (5,404 samples, 5.14%)</title><rect x="47.8508%" y="1157" width="5.1447%" height="15" fill="rgb(225,4,6)" fg:x="50263" fg:w="5404"/><text x="48.1008%" y="1167.50">async_..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,404 samples, 5.14%)</title><rect x="47.8508%" y="1141" width="5.1447%" height="15" fill="rgb(233,45,0)" fg:x="50263" fg:w="5404"/><text x="48.1008%" y="1151.50">&lt;core:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,404 samples, 5.14%)</title><rect x="47.8508%" y="1125" width="5.1447%" height="15" fill="rgb(226,136,5)" fg:x="50263" fg:w="5404"/><text x="48.1008%" y="1135.50">&lt;core:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,404 samples, 5.14%)</title><rect x="47.8508%" y="1109" width="5.1447%" height="15" fill="rgb(211,91,47)" fg:x="50263" fg:w="5404"/><text x="48.1008%" y="1119.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5,404 samples, 5.14%)</title><rect x="47.8508%" y="1093" width="5.1447%" height="15" fill="rgb(242,88,51)" fg:x="50263" fg:w="5404"/><text x="48.1008%" y="1103.50">&lt;async..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5,404 samples, 5.14%)</title><rect x="47.8508%" y="1077" width="5.1447%" height="15" fill="rgb(230,91,28)" fg:x="50263" fg:w="5404"/><text x="48.1008%" y="1087.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,404 samples, 5.14%)</title><rect x="47.8508%" y="1061" width="5.1447%" height="15" fill="rgb(254,186,29)" fg:x="50263" fg:w="5404"/><text x="48.1008%" y="1071.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,404 samples, 5.14%)</title><rect x="47.8508%" y="1045" width="5.1447%" height="15" fill="rgb(238,6,4)" fg:x="50263" fg:w="5404"/><text x="48.1008%" y="1055.50">std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,404 samples, 5.14%)</title><rect x="47.8508%" y="1029" width="5.1447%" height="15" fill="rgb(221,151,16)" fg:x="50263" fg:w="5404"/><text x="48.1008%" y="1039.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,404 samples, 5.14%)</title><rect x="47.8508%" y="1013" width="5.1447%" height="15" fill="rgb(251,143,52)" fg:x="50263" fg:w="5404"/><text x="48.1008%" y="1023.50">&lt;async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,404 samples, 5.14%)</title><rect x="47.8508%" y="997" width="5.1447%" height="15" fill="rgb(206,90,15)" fg:x="50263" fg:w="5404"/><text x="48.1008%" y="1007.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,940 samples, 1.85%)</title><rect x="51.1486%" y="981" width="1.8469%" height="15" fill="rgb(218,35,8)" fg:x="53727" fg:w="1940"/><text x="51.3986%" y="991.50">t..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,940 samples, 1.85%)</title><rect x="51.1486%" y="965" width="1.8469%" height="15" fill="rgb(239,215,6)" fg:x="53727" fg:w="1940"/><text x="51.3986%" y="975.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,940 samples, 1.85%)</title><rect x="51.1486%" y="949" width="1.8469%" height="15" fill="rgb(245,116,39)" fg:x="53727" fg:w="1940"/><text x="51.3986%" y="959.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,940 samples, 1.85%)</title><rect x="51.1486%" y="933" width="1.8469%" height="15" fill="rgb(242,65,28)" fg:x="53727" fg:w="1940"/><text x="51.3986%" y="943.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,940 samples, 1.85%)</title><rect x="51.1486%" y="917" width="1.8469%" height="15" fill="rgb(252,132,53)" fg:x="53727" fg:w="1940"/><text x="51.3986%" y="927.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,940 samples, 1.85%)</title><rect x="51.1486%" y="901" width="1.8469%" height="15" fill="rgb(224,159,50)" fg:x="53727" fg:w="1940"/><text x="51.3986%" y="911.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (22 samples, 0.02%)</title><rect x="52.9746%" y="885" width="0.0209%" height="15" fill="rgb(224,93,4)" fg:x="55645" fg:w="22"/><text x="53.2246%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (34 samples, 0.03%)</title><rect x="53.0022%" y="1157" width="0.0324%" height="15" fill="rgb(208,81,34)" fg:x="55674" fg:w="34"/><text x="53.2522%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (12 samples, 0.01%)</title><rect x="53.0345%" y="1157" width="0.0114%" height="15" fill="rgb(233,92,54)" fg:x="55708" fg:w="12"/><text x="53.2845%" y="1167.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="53.0678%" y="293" width="0.0133%" height="15" fill="rgb(237,21,14)" fg:x="55743" fg:w="14"/><text x="53.3178%" y="303.50"></text></g><g><title>sizeclass_to_size (14 samples, 0.01%)</title><rect x="53.1193%" y="213" width="0.0133%" height="15" fill="rgb(249,128,51)" fg:x="55797" fg:w="14"/><text x="53.3693%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (14 samples, 0.01%)</title><rect x="53.1193%" y="197" width="0.0133%" height="15" fill="rgb(223,129,24)" fg:x="55797" fg:w="14"/><text x="53.3693%" y="207.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (20 samples, 0.02%)</title><rect x="53.2230%" y="181" width="0.0190%" height="15" fill="rgb(231,168,25)" fg:x="55906" fg:w="20"/><text x="53.4730%" y="191.50"></text></g><g><title> (20 samples, 0.02%)</title><rect x="53.2230%" y="165" width="0.0190%" height="15" fill="rgb(224,39,20)" fg:x="55906" fg:w="20"/><text x="53.4730%" y="175.50"></text></g><g><title>snmalloc::Remote::set_info (32 samples, 0.03%)</title><rect x="53.2421%" y="181" width="0.0305%" height="15" fill="rgb(225,152,53)" fg:x="55926" fg:w="32"/><text x="53.4921%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (157 samples, 0.15%)</title><rect x="53.1412%" y="213" width="0.1495%" height="15" fill="rgb(252,17,24)" fg:x="55820" fg:w="157"/><text x="53.3912%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (130 samples, 0.12%)</title><rect x="53.1669%" y="197" width="0.1238%" height="15" fill="rgb(250,114,30)" fg:x="55847" fg:w="130"/><text x="53.4169%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (19 samples, 0.02%)</title><rect x="53.2725%" y="181" width="0.0181%" height="15" fill="rgb(229,5,4)" fg:x="55958" fg:w="19"/><text x="53.5225%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (208 samples, 0.20%)</title><rect x="53.1088%" y="245" width="0.1980%" height="15" fill="rgb(225,176,49)" fg:x="55786" fg:w="208"/><text x="53.3588%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (208 samples, 0.20%)</title><rect x="53.1088%" y="229" width="0.1980%" height="15" fill="rgb(224,221,49)" fg:x="55786" fg:w="208"/><text x="53.3588%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.02%)</title><rect x="53.2916%" y="213" width="0.0152%" height="15" fill="rgb(253,169,27)" fg:x="55978" fg:w="16"/><text x="53.5416%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (219 samples, 0.21%)</title><rect x="53.1088%" y="277" width="0.2085%" height="15" fill="rgb(211,206,16)" fg:x="55786" fg:w="219"/><text x="53.3588%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (219 samples, 0.21%)</title><rect x="53.1088%" y="261" width="0.2085%" height="15" fill="rgb(244,87,35)" fg:x="55786" fg:w="219"/><text x="53.3588%" y="271.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="53.3068%" y="245" width="0.0105%" height="15" fill="rgb(246,28,10)" fg:x="55994" fg:w="11"/><text x="53.5568%" y="255.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="53.3068%" y="229" width="0.0105%" height="15" fill="rgb(229,12,44)" fg:x="55994" fg:w="11"/><text x="53.5568%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="53.3068%" y="213" width="0.0105%" height="15" fill="rgb(210,145,37)" fg:x="55994" fg:w="11"/><text x="53.5568%" y="223.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="53.3068%" y="197" width="0.0105%" height="15" fill="rgb(227,112,52)" fg:x="55994" fg:w="11"/><text x="53.5568%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (256 samples, 0.24%)</title><rect x="53.0812%" y="293" width="0.2437%" height="15" fill="rgb(238,155,34)" fg:x="55757" fg:w="256"/><text x="53.3312%" y="303.50"></text></g><g><title>rust_dealloc (283 samples, 0.27%)</title><rect x="53.0678%" y="309" width="0.2694%" height="15" fill="rgb(239,226,36)" fg:x="55743" fg:w="283"/><text x="53.3178%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="53.3249%" y="293" width="0.0124%" height="15" fill="rgb(230,16,23)" fg:x="56013" fg:w="13"/><text x="53.5749%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (296 samples, 0.28%)</title><rect x="53.0564%" y="373" width="0.2818%" height="15" fill="rgb(236,171,36)" fg:x="55731" fg:w="296"/><text x="53.3064%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (296 samples, 0.28%)</title><rect x="53.0564%" y="357" width="0.2818%" height="15" fill="rgb(221,22,14)" fg:x="55731" fg:w="296"/><text x="53.3064%" y="367.50"></text></g><g><title>__rg_dealloc (296 samples, 0.28%)</title><rect x="53.0564%" y="341" width="0.2818%" height="15" fill="rgb(242,43,11)" fg:x="55731" fg:w="296"/><text x="53.3064%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (296 samples, 0.28%)</title><rect x="53.0564%" y="325" width="0.2818%" height="15" fill="rgb(232,69,23)" fg:x="55731" fg:w="296"/><text x="53.3064%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (308 samples, 0.29%)</title><rect x="53.0545%" y="437" width="0.2932%" height="15" fill="rgb(216,180,54)" fg:x="55729" fg:w="308"/><text x="53.3045%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (308 samples, 0.29%)</title><rect x="53.0545%" y="421" width="0.2932%" height="15" fill="rgb(216,5,24)" fg:x="55729" fg:w="308"/><text x="53.3045%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (308 samples, 0.29%)</title><rect x="53.0545%" y="405" width="0.2932%" height="15" fill="rgb(225,89,9)" fg:x="55729" fg:w="308"/><text x="53.3045%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (308 samples, 0.29%)</title><rect x="53.0545%" y="389" width="0.2932%" height="15" fill="rgb(243,75,33)" fg:x="55729" fg:w="308"/><text x="53.3045%" y="399.50"></text></g><g><title>rust_dealloc (31 samples, 0.03%)</title><rect x="53.9932%" y="229" width="0.0295%" height="15" fill="rgb(247,141,45)" fg:x="56715" fg:w="31"/><text x="54.2432%" y="239.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="54.0227%" y="229" width="0.0114%" height="15" fill="rgb(232,177,36)" fg:x="56746" fg:w="12"/><text x="54.2727%" y="239.50"></text></g><g><title>rust_dealloc (42 samples, 0.04%)</title><rect x="54.0341%" y="165" width="0.0400%" height="15" fill="rgb(219,125,36)" fg:x="56758" fg:w="42"/><text x="54.2841%" y="175.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (20 samples, 0.02%)</title><rect x="54.1741%" y="133" width="0.0190%" height="15" fill="rgb(227,94,9)" fg:x="56905" fg:w="20"/><text x="54.4241%" y="143.50"></text></g><g><title> (20 samples, 0.02%)</title><rect x="54.1741%" y="117" width="0.0190%" height="15" fill="rgb(240,34,52)" fg:x="56905" fg:w="20"/><text x="54.4241%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (132 samples, 0.13%)</title><rect x="54.0827%" y="165" width="0.1257%" height="15" fill="rgb(216,45,12)" fg:x="56809" fg:w="132"/><text x="54.3327%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (119 samples, 0.11%)</title><rect x="54.0951%" y="149" width="0.1133%" height="15" fill="rgb(246,21,19)" fg:x="56822" fg:w="119"/><text x="54.3451%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (195 samples, 0.19%)</title><rect x="54.0341%" y="229" width="0.1856%" height="15" fill="rgb(213,98,42)" fg:x="56758" fg:w="195"/><text x="54.2841%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (195 samples, 0.19%)</title><rect x="54.0341%" y="213" width="0.1856%" height="15" fill="rgb(250,136,47)" fg:x="56758" fg:w="195"/><text x="54.2841%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (195 samples, 0.19%)</title><rect x="54.0341%" y="197" width="0.1856%" height="15" fill="rgb(251,124,27)" fg:x="56758" fg:w="195"/><text x="54.2841%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (195 samples, 0.19%)</title><rect x="54.0341%" y="181" width="0.1856%" height="15" fill="rgb(229,180,14)" fg:x="56758" fg:w="195"/><text x="54.2841%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="54.2084%" y="165" width="0.0114%" height="15" fill="rgb(245,216,25)" fg:x="56941" fg:w="12"/><text x="54.4584%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (240 samples, 0.23%)</title><rect x="53.9923%" y="245" width="0.2285%" height="15" fill="rgb(251,43,5)" fg:x="56714" fg:w="240"/><text x="54.2423%" y="255.50"></text></g><g><title>rust_dealloc (259 samples, 0.25%)</title><rect x="53.9846%" y="261" width="0.2466%" height="15" fill="rgb(250,128,24)" fg:x="56706" fg:w="259"/><text x="54.2346%" y="271.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="54.2207%" y="245" width="0.0105%" height="15" fill="rgb(217,117,27)" fg:x="56954" fg:w="11"/><text x="54.4707%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (260 samples, 0.25%)</title><rect x="53.9846%" y="277" width="0.2475%" height="15" fill="rgb(245,147,4)" fg:x="56706" fg:w="260"/><text x="54.2346%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (272 samples, 0.26%)</title><rect x="53.9846%" y="325" width="0.2589%" height="15" fill="rgb(242,201,35)" fg:x="56706" fg:w="272"/><text x="54.2346%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (272 samples, 0.26%)</title><rect x="53.9846%" y="309" width="0.2589%" height="15" fill="rgb(218,181,1)" fg:x="56706" fg:w="272"/><text x="54.2346%" y="319.50"></text></g><g><title>__rg_dealloc (272 samples, 0.26%)</title><rect x="53.9846%" y="293" width="0.2589%" height="15" fill="rgb(222,6,29)" fg:x="56706" fg:w="272"/><text x="54.2346%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (12 samples, 0.01%)</title><rect x="54.2322%" y="277" width="0.0114%" height="15" fill="rgb(208,186,3)" fg:x="56966" fg:w="12"/><text x="54.4822%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (969 samples, 0.92%)</title><rect x="53.3477%" y="421" width="0.9225%" height="15" fill="rgb(216,36,26)" fg:x="56037" fg:w="969"/><text x="53.5977%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (966 samples, 0.92%)</title><rect x="53.3506%" y="405" width="0.9196%" height="15" fill="rgb(248,201,23)" fg:x="56040" fg:w="966"/><text x="53.6006%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (952 samples, 0.91%)</title><rect x="53.3639%" y="389" width="0.9063%" height="15" fill="rgb(251,170,31)" fg:x="56054" fg:w="952"/><text x="53.6139%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (952 samples, 0.91%)</title><rect x="53.3639%" y="373" width="0.9063%" height="15" fill="rgb(207,110,25)" fg:x="56054" fg:w="952"/><text x="53.6139%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (952 samples, 0.91%)</title><rect x="53.3639%" y="357" width="0.9063%" height="15" fill="rgb(250,54,15)" fg:x="56054" fg:w="952"/><text x="53.6139%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (952 samples, 0.91%)</title><rect x="53.3639%" y="341" width="0.9063%" height="15" fill="rgb(227,68,33)" fg:x="56054" fg:w="952"/><text x="53.6139%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (28 samples, 0.03%)</title><rect x="54.2436%" y="325" width="0.0267%" height="15" fill="rgb(238,34,41)" fg:x="56978" fg:w="28"/><text x="54.4936%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (19 samples, 0.02%)</title><rect x="54.2702%" y="421" width="0.0181%" height="15" fill="rgb(220,11,15)" fg:x="57006" fg:w="19"/><text x="54.5202%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="54.2702%" y="405" width="0.0181%" height="15" fill="rgb(246,111,35)" fg:x="57006" fg:w="19"/><text x="54.5202%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.02%)</title><rect x="54.2712%" y="389" width="0.0171%" height="15" fill="rgb(209,88,53)" fg:x="57007" fg:w="18"/><text x="54.5212%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,311 samples, 1.25%)</title><rect x="53.0460%" y="469" width="1.2481%" height="15" fill="rgb(231,185,47)" fg:x="55720" fg:w="1311"/><text x="53.2960%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,311 samples, 1.25%)</title><rect x="53.0460%" y="453" width="1.2481%" height="15" fill="rgb(233,154,1)" fg:x="55720" fg:w="1311"/><text x="53.2960%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (994 samples, 0.95%)</title><rect x="53.3477%" y="437" width="0.9463%" height="15" fill="rgb(225,15,46)" fg:x="56037" fg:w="994"/><text x="53.5977%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.01%)</title><rect x="54.3026%" y="325" width="0.0133%" height="15" fill="rgb(211,135,41)" fg:x="57040" fg:w="14"/><text x="54.5526%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (37 samples, 0.04%)</title><rect x="54.2940%" y="469" width="0.0352%" height="15" fill="rgb(208,54,0)" fg:x="57031" fg:w="37"/><text x="54.5440%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (37 samples, 0.04%)</title><rect x="54.2940%" y="453" width="0.0352%" height="15" fill="rgb(244,136,14)" fg:x="57031" fg:w="37"/><text x="54.5440%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="54.2940%" y="437" width="0.0352%" height="15" fill="rgb(241,56,14)" fg:x="57031" fg:w="37"/><text x="54.5440%" y="447.50"></text></g><g><title>core::mem::drop (37 samples, 0.04%)</title><rect x="54.2940%" y="421" width="0.0352%" height="15" fill="rgb(205,80,24)" fg:x="57031" fg:w="37"/><text x="54.5440%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (37 samples, 0.04%)</title><rect x="54.2940%" y="405" width="0.0352%" height="15" fill="rgb(220,57,4)" fg:x="57031" fg:w="37"/><text x="54.5440%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="54.2940%" y="389" width="0.0352%" height="15" fill="rgb(226,193,50)" fg:x="57031" fg:w="37"/><text x="54.5440%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (37 samples, 0.04%)</title><rect x="54.2940%" y="373" width="0.0352%" height="15" fill="rgb(231,168,22)" fg:x="57031" fg:w="37"/><text x="54.5440%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (28 samples, 0.03%)</title><rect x="54.3026%" y="357" width="0.0267%" height="15" fill="rgb(254,215,14)" fg:x="57040" fg:w="28"/><text x="54.5526%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (28 samples, 0.03%)</title><rect x="54.3026%" y="341" width="0.0267%" height="15" fill="rgb(211,115,16)" fg:x="57040" fg:w="28"/><text x="54.5526%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (14 samples, 0.01%)</title><rect x="54.3159%" y="325" width="0.0133%" height="15" fill="rgb(236,210,16)" fg:x="57054" fg:w="14"/><text x="54.5659%" y="335.50"></text></g><g><title>core::mem::replace (14 samples, 0.01%)</title><rect x="54.3159%" y="309" width="0.0133%" height="15" fill="rgb(221,94,12)" fg:x="57054" fg:w="14"/><text x="54.5659%" y="319.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="54.3188%" y="293" width="0.0105%" height="15" fill="rgb(235,218,49)" fg:x="57057" fg:w="11"/><text x="54.5688%" y="303.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,447 samples, 1.38%)</title><rect x="53.0460%" y="549" width="1.3776%" height="15" fill="rgb(217,114,14)" fg:x="55720" fg:w="1447"/><text x="53.2960%" y="559.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,447 samples, 1.38%)</title><rect x="53.0460%" y="533" width="1.3776%" height="15" fill="rgb(216,145,22)" fg:x="55720" fg:w="1447"/><text x="53.2960%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,447 samples, 1.38%)</title><rect x="53.0460%" y="517" width="1.3776%" height="15" fill="rgb(217,112,39)" fg:x="55720" fg:w="1447"/><text x="53.2960%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (1,447 samples, 1.38%)</title><rect x="53.0460%" y="501" width="1.3776%" height="15" fill="rgb(225,85,32)" fg:x="55720" fg:w="1447"/><text x="53.2960%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (1,447 samples, 1.38%)</title><rect x="53.0460%" y="485" width="1.3776%" height="15" fill="rgb(245,209,47)" fg:x="55720" fg:w="1447"/><text x="53.2960%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (99 samples, 0.09%)</title><rect x="54.3293%" y="469" width="0.0942%" height="15" fill="rgb(218,220,15)" fg:x="57068" fg:w="99"/><text x="54.5793%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (91 samples, 0.09%)</title><rect x="54.3369%" y="453" width="0.0866%" height="15" fill="rgb(222,202,31)" fg:x="57076" fg:w="91"/><text x="54.5869%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (91 samples, 0.09%)</title><rect x="54.3369%" y="437" width="0.0866%" height="15" fill="rgb(243,203,4)" fg:x="57076" fg:w="91"/><text x="54.5869%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="54.4130%" y="421" width="0.0105%" height="15" fill="rgb(237,92,17)" fg:x="57156" fg:w="11"/><text x="54.6630%" y="431.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (33 samples, 0.03%)</title><rect x="54.4235%" y="549" width="0.0314%" height="15" fill="rgb(231,119,7)" fg:x="57167" fg:w="33"/><text x="54.6735%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (317 samples, 0.30%)</title><rect x="54.5387%" y="517" width="0.3018%" height="15" fill="rgb(237,82,41)" fg:x="57288" fg:w="317"/><text x="54.7887%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (190 samples, 0.18%)</title><rect x="54.8671%" y="501" width="0.1809%" height="15" fill="rgb(226,81,48)" fg:x="57633" fg:w="190"/><text x="55.1171%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::control_plane::{{closure}} (374 samples, 0.36%)</title><rect x="54.8405%" y="517" width="0.3561%" height="15" fill="rgb(234,70,51)" fg:x="57605" fg:w="374"/><text x="55.0905%" y="527.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::needs_control_plane_msg (156 samples, 0.15%)</title><rect x="55.0480%" y="501" width="0.1485%" height="15" fill="rgb(251,86,4)" fg:x="57823" fg:w="156"/><text x="55.2980%" y="511.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (140 samples, 0.13%)</title><rect x="55.0633%" y="485" width="0.1333%" height="15" fill="rgb(244,144,28)" fg:x="57839" fg:w="140"/><text x="55.3133%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (139 samples, 0.13%)</title><rect x="55.0642%" y="469" width="0.1323%" height="15" fill="rgb(232,161,39)" fg:x="57840" fg:w="139"/><text x="55.3142%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (93 samples, 0.09%)</title><rect x="55.1080%" y="453" width="0.0885%" height="15" fill="rgb(247,34,51)" fg:x="57886" fg:w="93"/><text x="55.3580%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (79 samples, 0.08%)</title><rect x="55.1213%" y="437" width="0.0752%" height="15" fill="rgb(225,132,2)" fg:x="57900" fg:w="79"/><text x="55.3713%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (79 samples, 0.08%)</title><rect x="55.1213%" y="421" width="0.0752%" height="15" fill="rgb(209,159,44)" fg:x="57900" fg:w="79"/><text x="55.3713%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (487 samples, 0.46%)</title><rect x="56.1238%" y="501" width="0.4636%" height="15" fill="rgb(251,214,1)" fg:x="58953" fg:w="487"/><text x="56.3738%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="56.6017%" y="437" width="0.0181%" height="15" fill="rgb(247,84,47)" fg:x="59455" fg:w="19"/><text x="56.8517%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (34 samples, 0.03%)</title><rect x="56.5960%" y="501" width="0.0324%" height="15" fill="rgb(240,111,43)" fg:x="59449" fg:w="34"/><text x="56.8460%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (28 samples, 0.03%)</title><rect x="56.6017%" y="485" width="0.0267%" height="15" fill="rgb(215,214,35)" fg:x="59455" fg:w="28"/><text x="56.8517%" y="495.50"></text></g><g><title>value_trait::Builder::object (28 samples, 0.03%)</title><rect x="56.6017%" y="469" width="0.0267%" height="15" fill="rgb(248,207,23)" fg:x="59455" fg:w="28"/><text x="56.8517%" y="479.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (28 samples, 0.03%)</title><rect x="56.6017%" y="453" width="0.0267%" height="15" fill="rgb(214,186,4)" fg:x="59455" fg:w="28"/><text x="56.8517%" y="463.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="56.6484%" y="469" width="0.0114%" height="15" fill="rgb(220,133,22)" fg:x="59504" fg:w="12"/><text x="56.8984%" y="479.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="56.6760%" y="405" width="0.0114%" height="15" fill="rgb(239,134,19)" fg:x="59533" fg:w="12"/><text x="56.9260%" y="415.50"></text></g><g><title>sizeclass_to_size (16 samples, 0.02%)</title><rect x="56.6874%" y="405" width="0.0152%" height="15" fill="rgb(250,140,9)" fg:x="59545" fg:w="16"/><text x="56.9374%" y="415.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (16 samples, 0.02%)</title><rect x="56.6874%" y="389" width="0.0152%" height="15" fill="rgb(225,59,14)" fg:x="59545" fg:w="16"/><text x="56.9374%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="56.7217%" y="357" width="0.0305%" height="15" fill="rgb(214,152,51)" fg:x="59581" fg:w="32"/><text x="56.9717%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (32 samples, 0.03%)</title><rect x="56.7217%" y="341" width="0.0305%" height="15" fill="rgb(251,227,43)" fg:x="59581" fg:w="32"/><text x="56.9717%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (65 samples, 0.06%)</title><rect x="56.7026%" y="405" width="0.0619%" height="15" fill="rgb(241,96,17)" fg:x="59561" fg:w="65"/><text x="56.9526%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (65 samples, 0.06%)</title><rect x="56.7026%" y="389" width="0.0619%" height="15" fill="rgb(234,198,43)" fg:x="59561" fg:w="65"/><text x="56.9526%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (64 samples, 0.06%)</title><rect x="56.7036%" y="373" width="0.0609%" height="15" fill="rgb(220,108,29)" fg:x="59562" fg:w="64"/><text x="56.9536%" y="383.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="56.7521%" y="357" width="0.0124%" height="15" fill="rgb(226,163,33)" fg:x="59613" fg:w="13"/><text x="57.0021%" y="367.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="56.7521%" y="341" width="0.0124%" height="15" fill="rgb(205,194,45)" fg:x="59613" fg:w="13"/><text x="57.0021%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (102 samples, 0.10%)</title><rect x="56.6693%" y="437" width="0.0971%" height="15" fill="rgb(206,143,44)" fg:x="59526" fg:w="102"/><text x="56.9193%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (102 samples, 0.10%)</title><rect x="56.6693%" y="421" width="0.0971%" height="15" fill="rgb(236,136,36)" fg:x="59526" fg:w="102"/><text x="56.9193%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (125 samples, 0.12%)</title><rect x="56.6484%" y="485" width="0.1190%" height="15" fill="rgb(249,172,42)" fg:x="59504" fg:w="125"/><text x="56.8984%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (103 samples, 0.10%)</title><rect x="56.6693%" y="469" width="0.0981%" height="15" fill="rgb(216,139,23)" fg:x="59526" fg:w="103"/><text x="56.9193%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (103 samples, 0.10%)</title><rect x="56.6693%" y="453" width="0.0981%" height="15" fill="rgb(207,166,20)" fg:x="59526" fg:w="103"/><text x="56.9193%" y="463.50"></text></g><g><title>rust_dealloc (136 samples, 0.13%)</title><rect x="56.6426%" y="501" width="0.1295%" height="15" fill="rgb(210,209,22)" fg:x="59498" fg:w="136"/><text x="56.8926%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,664 samples, 1.58%)</title><rect x="55.1965%" y="517" width="1.5841%" height="15" fill="rgb(232,118,20)" fg:x="57979" fg:w="1664"/><text x="55.4465%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,437 samples, 2.32%)</title><rect x="54.5378%" y="533" width="2.3200%" height="15" fill="rgb(238,113,42)" fg:x="57287" fg:w="2437"/><text x="54.7878%" y="543.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (81 samples, 0.08%)</title><rect x="56.7807%" y="517" width="0.0771%" height="15" fill="rgb(231,42,5)" fg:x="59643" fg:w="81"/><text x="57.0307%" y="527.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="56.8578%" y="533" width="0.0133%" height="15" fill="rgb(243,166,24)" fg:x="59724" fg:w="14"/><text x="57.1078%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="56.8578%" y="517" width="0.0133%" height="15" fill="rgb(237,226,12)" fg:x="59724" fg:w="14"/><text x="57.1078%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (17 samples, 0.02%)</title><rect x="56.8787%" y="533" width="0.0162%" height="15" fill="rgb(229,133,24)" fg:x="59746" fg:w="17"/><text x="57.1287%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (17 samples, 0.02%)</title><rect x="56.8787%" y="517" width="0.0162%" height="15" fill="rgb(238,33,43)" fg:x="59746" fg:w="17"/><text x="57.1287%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (560 samples, 0.53%)</title><rect x="56.8949%" y="533" width="0.5331%" height="15" fill="rgb(227,59,38)" fg:x="59763" fg:w="560"/><text x="57.1449%" y="543.50"></text></g><g><title>rust_dealloc (19 samples, 0.02%)</title><rect x="57.4614%" y="325" width="0.0181%" height="15" fill="rgb(230,97,0)" fg:x="60358" fg:w="19"/><text x="57.7114%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="57.4966%" y="277" width="0.0171%" height="15" fill="rgb(250,173,50)" fg:x="60395" fg:w="18"/><text x="57.7466%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="57.4804%" y="325" width="0.0381%" height="15" fill="rgb(240,15,50)" fg:x="60378" fg:w="40"/><text x="57.7304%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="57.4804%" y="309" width="0.0381%" height="15" fill="rgb(221,93,22)" fg:x="60378" fg:w="40"/><text x="57.7304%" y="319.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (39 samples, 0.04%)</title><rect x="57.4814%" y="293" width="0.0371%" height="15" fill="rgb(245,180,53)" fg:x="60379" fg:w="39"/><text x="57.7314%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (66 samples, 0.06%)</title><rect x="57.4614%" y="357" width="0.0628%" height="15" fill="rgb(231,88,51)" fg:x="60358" fg:w="66"/><text x="57.7114%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (66 samples, 0.06%)</title><rect x="57.4614%" y="341" width="0.0628%" height="15" fill="rgb(240,58,21)" fg:x="60358" fg:w="66"/><text x="57.7114%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (70 samples, 0.07%)</title><rect x="57.4614%" y="389" width="0.0666%" height="15" fill="rgb(237,21,10)" fg:x="60358" fg:w="70"/><text x="57.7114%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (70 samples, 0.07%)</title><rect x="57.4614%" y="373" width="0.0666%" height="15" fill="rgb(218,43,11)" fg:x="60358" fg:w="70"/><text x="57.7114%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (86 samples, 0.08%)</title><rect x="57.4538%" y="405" width="0.0819%" height="15" fill="rgb(218,221,29)" fg:x="60350" fg:w="86"/><text x="57.7038%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (112 samples, 0.11%)</title><rect x="57.4357%" y="517" width="0.1066%" height="15" fill="rgb(214,118,42)" fg:x="60331" fg:w="112"/><text x="57.6857%" y="527.50"></text></g><g><title>alloc::alloc::box_free (112 samples, 0.11%)</title><rect x="57.4357%" y="501" width="0.1066%" height="15" fill="rgb(251,200,26)" fg:x="60331" fg:w="112"/><text x="57.6857%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (104 samples, 0.10%)</title><rect x="57.4433%" y="485" width="0.0990%" height="15" fill="rgb(237,101,39)" fg:x="60339" fg:w="104"/><text x="57.6933%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (103 samples, 0.10%)</title><rect x="57.4442%" y="469" width="0.0981%" height="15" fill="rgb(251,117,11)" fg:x="60340" fg:w="103"/><text x="57.6942%" y="479.50"></text></g><g><title>__rg_dealloc (103 samples, 0.10%)</title><rect x="57.4442%" y="453" width="0.0981%" height="15" fill="rgb(216,223,23)" fg:x="60340" fg:w="103"/><text x="57.6942%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (103 samples, 0.10%)</title><rect x="57.4442%" y="437" width="0.0981%" height="15" fill="rgb(251,54,12)" fg:x="60340" fg:w="103"/><text x="57.6942%" y="447.50"></text></g><g><title>rust_dealloc (103 samples, 0.10%)</title><rect x="57.4442%" y="421" width="0.0981%" height="15" fill="rgb(254,176,54)" fg:x="60340" fg:w="103"/><text x="57.6942%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (113 samples, 0.11%)</title><rect x="57.4357%" y="533" width="0.1076%" height="15" fill="rgb(210,32,8)" fg:x="60331" fg:w="113"/><text x="57.6857%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,785 samples, 4.56%)</title><rect x="53.0460%" y="1157" width="4.5554%" height="15" fill="rgb(235,52,38)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="1167.50">core:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (4,785 samples, 4.56%)</title><rect x="53.0460%" y="1141" width="4.5554%" height="15" fill="rgb(231,4,44)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="1151.50">std::..</text></g><g><title>std::panic::catch_unwind (4,785 samples, 4.56%)</title><rect x="53.0460%" y="1125" width="4.5554%" height="15" fill="rgb(249,2,32)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="1135.50">std::..</text></g><g><title>std::panicking::try (4,785 samples, 4.56%)</title><rect x="53.0460%" y="1109" width="4.5554%" height="15" fill="rgb(224,65,26)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="1119.50">std::..</text></g><g><title>std::panicking::try::do_call (4,785 samples, 4.56%)</title><rect x="53.0460%" y="1093" width="4.5554%" height="15" fill="rgb(250,73,40)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="1103.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,785 samples, 4.56%)</title><rect x="53.0460%" y="1077" width="4.5554%" height="15" fill="rgb(253,177,16)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="1087.50">&lt;core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (4,785 samples, 4.56%)</title><rect x="53.0460%" y="1061" width="4.5554%" height="15" fill="rgb(217,32,34)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="1071.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,785 samples, 4.56%)</title><rect x="53.0460%" y="1045" width="4.5554%" height="15" fill="rgb(212,7,10)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="1055.50">std::..</text></g><g><title>core::ops::function::FnOnce::call_once (4,785 samples, 4.56%)</title><rect x="53.0460%" y="1029" width="4.5554%" height="15" fill="rgb(245,89,8)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="1039.50">core:..</text></g><g><title>async_global_executor::threading::thread_main_loop (4,785 samples, 4.56%)</title><rect x="53.0460%" y="1013" width="4.5554%" height="15" fill="rgb(237,16,53)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="1023.50">async..</text></g><g><title>std::panic::catch_unwind (4,785 samples, 4.56%)</title><rect x="53.0460%" y="997" width="4.5554%" height="15" fill="rgb(250,204,30)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="1007.50">std::..</text></g><g><title>std::panicking::try (4,785 samples, 4.56%)</title><rect x="53.0460%" y="981" width="4.5554%" height="15" fill="rgb(208,77,27)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="991.50">std::..</text></g><g><title>std::panicking::try::do_call (4,785 samples, 4.56%)</title><rect x="53.0460%" y="965" width="4.5554%" height="15" fill="rgb(250,204,28)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="975.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (4,785 samples, 4.56%)</title><rect x="53.0460%" y="949" width="4.5554%" height="15" fill="rgb(244,63,21)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="959.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,785 samples, 4.56%)</title><rect x="53.0460%" y="933" width="4.5554%" height="15" fill="rgb(236,85,44)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="943.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,785 samples, 4.56%)</title><rect x="53.0460%" y="917" width="4.5554%" height="15" fill="rgb(215,98,4)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="927.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4,785 samples, 4.56%)</title><rect x="53.0460%" y="901" width="4.5554%" height="15" fill="rgb(235,38,11)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="911.50">async..</text></g><g><title>async_global_executor::reactor::block_on (4,785 samples, 4.56%)</title><rect x="53.0460%" y="885" width="4.5554%" height="15" fill="rgb(254,186,25)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="895.50">async..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,785 samples, 4.56%)</title><rect x="53.0460%" y="869" width="4.5554%" height="15" fill="rgb(225,55,31)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="879.50">async..</text></g><g><title>async_io::driver::block_on (4,785 samples, 4.56%)</title><rect x="53.0460%" y="853" width="4.5554%" height="15" fill="rgb(211,15,21)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="863.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,785 samples, 4.56%)</title><rect x="53.0460%" y="837" width="4.5554%" height="15" fill="rgb(215,187,41)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="847.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,785 samples, 4.56%)</title><rect x="53.0460%" y="821" width="4.5554%" height="15" fill="rgb(248,69,32)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="831.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}} (4,785 samples, 4.56%)</title><rect x="53.0460%" y="805" width="4.5554%" height="15" fill="rgb(252,102,52)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="815.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,785 samples, 4.56%)</title><rect x="53.0460%" y="789" width="4.5554%" height="15" fill="rgb(253,140,32)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="799.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,785 samples, 4.56%)</title><rect x="53.0460%" y="773" width="4.5554%" height="15" fill="rgb(216,56,42)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="783.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,785 samples, 4.56%)</title><rect x="53.0460%" y="757" width="4.5554%" height="15" fill="rgb(216,184,14)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="767.50">async..</text></g><g><title>async_task::runnable::Runnable::run (4,785 samples, 4.56%)</title><rect x="53.0460%" y="741" width="4.5554%" height="15" fill="rgb(237,187,27)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="751.50">async..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,785 samples, 4.56%)</title><rect x="53.0460%" y="725" width="4.5554%" height="15" fill="rgb(219,65,3)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="735.50">async..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,785 samples, 4.56%)</title><rect x="53.0460%" y="709" width="4.5554%" height="15" fill="rgb(245,83,25)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="719.50">&lt;core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,785 samples, 4.56%)</title><rect x="53.0460%" y="693" width="4.5554%" height="15" fill="rgb(214,205,45)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="703.50">&lt;core..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,785 samples, 4.56%)</title><rect x="53.0460%" y="677" width="4.5554%" height="15" fill="rgb(241,20,18)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="687.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,785 samples, 4.56%)</title><rect x="53.0460%" y="661" width="4.5554%" height="15" fill="rgb(232,163,23)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="671.50">&lt;asyn..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,785 samples, 4.56%)</title><rect x="53.0460%" y="645" width="4.5554%" height="15" fill="rgb(214,5,46)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="655.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,785 samples, 4.56%)</title><rect x="53.0460%" y="629" width="4.5554%" height="15" fill="rgb(229,78,17)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="639.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,785 samples, 4.56%)</title><rect x="53.0460%" y="613" width="4.5554%" height="15" fill="rgb(248,89,10)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="623.50">std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,785 samples, 4.56%)</title><rect x="53.0460%" y="597" width="4.5554%" height="15" fill="rgb(248,54,15)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="607.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,785 samples, 4.56%)</title><rect x="53.0460%" y="581" width="4.5554%" height="15" fill="rgb(223,116,6)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="591.50">&lt;asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,785 samples, 4.56%)</title><rect x="53.0460%" y="565" width="4.5554%" height="15" fill="rgb(205,125,38)" fg:x="55720" fg:w="4785"/><text x="53.2960%" y="575.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,305 samples, 3.15%)</title><rect x="54.4549%" y="549" width="3.1464%" height="15" fill="rgb(251,78,38)" fg:x="57200" fg:w="3305"/><text x="54.7049%" y="559.50">tre..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::should_pull_data (61 samples, 0.06%)</title><rect x="57.5432%" y="533" width="0.0581%" height="15" fill="rgb(253,78,28)" fg:x="60444" fg:w="61"/><text x="57.7932%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (17 samples, 0.02%)</title><rect x="57.5851%" y="517" width="0.0162%" height="15" fill="rgb(209,120,3)" fg:x="60488" fg:w="17"/><text x="57.8351%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="57.6146%" y="1157" width="0.0105%" height="15" fill="rgb(238,229,9)" fg:x="60519" fg:w="11"/><text x="57.8646%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (75 samples, 0.07%)</title><rect x="57.6251%" y="1157" width="0.0714%" height="15" fill="rgb(253,159,18)" fg:x="60530" fg:w="75"/><text x="57.8751%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (22 samples, 0.02%)</title><rect x="57.6965%" y="1157" width="0.0209%" height="15" fill="rgb(244,42,34)" fg:x="60605" fg:w="22"/><text x="57.9465%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (22 samples, 0.02%)</title><rect x="57.6965%" y="1141" width="0.0209%" height="15" fill="rgb(224,8,7)" fg:x="60605" fg:w="22"/><text x="57.9465%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (22 samples, 0.02%)</title><rect x="57.6965%" y="1125" width="0.0209%" height="15" fill="rgb(210,201,45)" fg:x="60605" fg:w="22"/><text x="57.9465%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="57.6965%" y="1109" width="0.0209%" height="15" fill="rgb(252,185,21)" fg:x="60605" fg:w="22"/><text x="57.9465%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="57.6965%" y="1093" width="0.0209%" height="15" fill="rgb(223,131,1)" fg:x="60605" fg:w="22"/><text x="57.9465%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="57.6965%" y="1077" width="0.0209%" height="15" fill="rgb(245,141,16)" fg:x="60605" fg:w="22"/><text x="57.9465%" y="1087.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="57.6965%" y="1061" width="0.0209%" height="15" fill="rgb(229,55,45)" fg:x="60605" fg:w="22"/><text x="57.9465%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="57.6965%" y="1045" width="0.0209%" height="15" fill="rgb(208,92,15)" fg:x="60605" fg:w="22"/><text x="57.9465%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (61 samples, 0.06%)</title><rect x="57.7175%" y="1157" width="0.0581%" height="15" fill="rgb(234,185,47)" fg:x="60627" fg:w="61"/><text x="57.9675%" y="1167.50"></text></g><g><title>event_listener::Event::notify (21 samples, 0.02%)</title><rect x="57.7765%" y="1157" width="0.0200%" height="15" fill="rgb(253,104,50)" fg:x="60689" fg:w="21"/><text x="58.0265%" y="1167.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (18 samples, 0.02%)</title><rect x="57.8060%" y="1157" width="0.0171%" height="15" fill="rgb(205,70,7)" fg:x="60720" fg:w="18"/><text x="58.0560%" y="1167.50"></text></g><g><title>rust_alloc (79 samples, 0.08%)</title><rect x="57.8327%" y="1157" width="0.0752%" height="15" fill="rgb(240,178,43)" fg:x="60748" fg:w="79"/><text x="58.0827%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (84 samples, 0.08%)</title><rect x="59.5339%" y="437" width="0.0800%" height="15" fill="rgb(214,112,2)" fg:x="62535" fg:w="84"/><text x="59.7839%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.04%)</title><rect x="59.8319%" y="421" width="0.0419%" height="15" fill="rgb(206,46,17)" fg:x="62848" fg:w="44"/><text x="60.0819%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (721 samples, 0.69%)</title><rect x="59.8738%" y="421" width="0.6864%" height="15" fill="rgb(225,220,16)" fg:x="62892" fg:w="721"/><text x="60.1238%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="60.5659%" y="357" width="0.0400%" height="15" fill="rgb(238,65,40)" fg:x="63619" fg:w="42"/><text x="60.8159%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (54 samples, 0.05%)</title><rect x="60.5659%" y="421" width="0.0514%" height="15" fill="rgb(230,151,21)" fg:x="63619" fg:w="54"/><text x="60.8159%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (54 samples, 0.05%)</title><rect x="60.5659%" y="405" width="0.0514%" height="15" fill="rgb(218,58,49)" fg:x="63619" fg:w="54"/><text x="60.8159%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (54 samples, 0.05%)</title><rect x="60.5659%" y="389" width="0.0514%" height="15" fill="rgb(219,179,14)" fg:x="63619" fg:w="54"/><text x="60.8159%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (54 samples, 0.05%)</title><rect x="60.5659%" y="373" width="0.0514%" height="15" fill="rgb(223,72,1)" fg:x="63619" fg:w="54"/><text x="60.8159%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (12 samples, 0.01%)</title><rect x="60.6059%" y="357" width="0.0114%" height="15" fill="rgb(238,126,10)" fg:x="63661" fg:w="12"/><text x="60.8559%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (12 samples, 0.01%)</title><rect x="60.6059%" y="341" width="0.0114%" height="15" fill="rgb(224,206,38)" fg:x="63661" fg:w="12"/><text x="60.8559%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="60.6173%" y="389" width="0.0105%" height="15" fill="rgb(212,201,54)" fg:x="63673" fg:w="11"/><text x="60.8673%" y="399.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="60.6639%" y="229" width="0.0114%" height="15" fill="rgb(218,154,48)" fg:x="63722" fg:w="12"/><text x="60.9139%" y="239.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="60.6754%" y="229" width="0.0105%" height="15" fill="rgb(232,93,24)" fg:x="63734" fg:w="11"/><text x="60.9254%" y="239.50"></text></g><g><title>rust_dealloc (28 samples, 0.03%)</title><rect x="60.6868%" y="165" width="0.0267%" height="15" fill="rgb(245,30,21)" fg:x="63746" fg:w="28"/><text x="60.9368%" y="175.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (54 samples, 0.05%)</title><rect x="60.7810%" y="117" width="0.0514%" height="15" fill="rgb(242,148,29)" fg:x="63845" fg:w="54"/><text x="61.0310%" y="127.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (54 samples, 0.05%)</title><rect x="60.7810%" y="101" width="0.0514%" height="15" fill="rgb(244,153,54)" fg:x="63845" fg:w="54"/><text x="61.0310%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (125 samples, 0.12%)</title><rect x="60.7211%" y="165" width="0.1190%" height="15" fill="rgb(252,87,22)" fg:x="63782" fg:w="125"/><text x="60.9711%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (125 samples, 0.12%)</title><rect x="60.7211%" y="149" width="0.1190%" height="15" fill="rgb(210,51,29)" fg:x="63782" fg:w="125"/><text x="60.9711%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (107 samples, 0.10%)</title><rect x="60.7382%" y="133" width="0.1019%" height="15" fill="rgb(242,136,47)" fg:x="63800" fg:w="107"/><text x="60.9882%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (248 samples, 0.24%)</title><rect x="60.6858%" y="197" width="0.2361%" height="15" fill="rgb(238,68,4)" fg:x="63745" fg:w="248"/><text x="60.9358%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (248 samples, 0.24%)</title><rect x="60.6858%" y="181" width="0.2361%" height="15" fill="rgb(242,161,30)" fg:x="63745" fg:w="248"/><text x="60.9358%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (86 samples, 0.08%)</title><rect x="60.8401%" y="165" width="0.0819%" height="15" fill="rgb(218,58,44)" fg:x="63907" fg:w="86"/><text x="61.0901%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (273 samples, 0.26%)</title><rect x="60.6639%" y="245" width="0.2599%" height="15" fill="rgb(252,125,32)" fg:x="63722" fg:w="273"/><text x="60.9139%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (250 samples, 0.24%)</title><rect x="60.6858%" y="229" width="0.2380%" height="15" fill="rgb(219,178,0)" fg:x="63745" fg:w="250"/><text x="60.9358%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (250 samples, 0.24%)</title><rect x="60.6858%" y="213" width="0.2380%" height="15" fill="rgb(213,152,7)" fg:x="63745" fg:w="250"/><text x="60.9358%" y="223.50"></text></g><g><title>rust_dealloc (283 samples, 0.27%)</title><rect x="60.6554%" y="261" width="0.2694%" height="15" fill="rgb(249,109,34)" fg:x="63713" fg:w="283"/><text x="60.9054%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (35 samples, 0.03%)</title><rect x="60.9362%" y="245" width="0.0333%" height="15" fill="rgb(232,96,21)" fg:x="64008" fg:w="35"/><text x="61.1862%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (377 samples, 0.36%)</title><rect x="60.6173%" y="405" width="0.3589%" height="15" fill="rgb(228,27,39)" fg:x="63673" fg:w="377"/><text x="60.8673%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (366 samples, 0.35%)</title><rect x="60.6278%" y="389" width="0.3484%" height="15" fill="rgb(211,182,52)" fg:x="63684" fg:w="366"/><text x="60.8778%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (361 samples, 0.34%)</title><rect x="60.6325%" y="373" width="0.3437%" height="15" fill="rgb(234,178,38)" fg:x="63689" fg:w="361"/><text x="60.8825%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (361 samples, 0.34%)</title><rect x="60.6325%" y="357" width="0.3437%" height="15" fill="rgb(221,111,3)" fg:x="63689" fg:w="361"/><text x="60.8825%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (361 samples, 0.34%)</title><rect x="60.6325%" y="341" width="0.3437%" height="15" fill="rgb(228,175,21)" fg:x="63689" fg:w="361"/><text x="60.8825%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (341 samples, 0.32%)</title><rect x="60.6516%" y="325" width="0.3246%" height="15" fill="rgb(228,174,43)" fg:x="63709" fg:w="341"/><text x="60.9016%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (341 samples, 0.32%)</title><rect x="60.6516%" y="309" width="0.3246%" height="15" fill="rgb(211,191,0)" fg:x="63709" fg:w="341"/><text x="60.9016%" y="319.50"></text></g><g><title>__rg_dealloc (341 samples, 0.32%)</title><rect x="60.6516%" y="293" width="0.3246%" height="15" fill="rgb(253,117,3)" fg:x="63709" fg:w="341"/><text x="60.9016%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (337 samples, 0.32%)</title><rect x="60.6554%" y="277" width="0.3208%" height="15" fill="rgb(241,127,19)" fg:x="63713" fg:w="337"/><text x="60.9054%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (54 samples, 0.05%)</title><rect x="60.9248%" y="261" width="0.0514%" height="15" fill="rgb(218,103,12)" fg:x="63996" fg:w="54"/><text x="61.1748%" y="271.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="60.9857%" y="293" width="0.0114%" height="15" fill="rgb(236,214,43)" fg:x="64060" fg:w="12"/><text x="61.2357%" y="303.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="61.0381%" y="165" width="0.0181%" height="15" fill="rgb(244,144,19)" fg:x="64115" fg:w="19"/><text x="61.2881%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="61.0390%" y="149" width="0.0171%" height="15" fill="rgb(246,188,10)" fg:x="64116" fg:w="18"/><text x="61.2890%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (45 samples, 0.04%)</title><rect x="61.0228%" y="213" width="0.0428%" height="15" fill="rgb(212,193,33)" fg:x="64099" fg:w="45"/><text x="61.2728%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (45 samples, 0.04%)</title><rect x="61.0228%" y="197" width="0.0428%" height="15" fill="rgb(241,51,29)" fg:x="64099" fg:w="45"/><text x="61.2728%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (45 samples, 0.04%)</title><rect x="61.0228%" y="181" width="0.0428%" height="15" fill="rgb(211,58,19)" fg:x="64099" fg:w="45"/><text x="61.2728%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (74 samples, 0.07%)</title><rect x="61.0076%" y="245" width="0.0704%" height="15" fill="rgb(229,111,26)" fg:x="64083" fg:w="74"/><text x="61.2576%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (74 samples, 0.07%)</title><rect x="61.0076%" y="229" width="0.0704%" height="15" fill="rgb(213,115,40)" fg:x="64083" fg:w="74"/><text x="61.2576%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="61.0657%" y="213" width="0.0124%" height="15" fill="rgb(209,56,44)" fg:x="64144" fg:w="13"/><text x="61.3157%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (93 samples, 0.09%)</title><rect x="60.9971%" y="293" width="0.0885%" height="15" fill="rgb(230,108,32)" fg:x="64072" fg:w="93"/><text x="61.2471%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (82 samples, 0.08%)</title><rect x="61.0076%" y="277" width="0.0781%" height="15" fill="rgb(216,165,31)" fg:x="64083" fg:w="82"/><text x="61.2576%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (82 samples, 0.08%)</title><rect x="61.0076%" y="261" width="0.0781%" height="15" fill="rgb(218,122,21)" fg:x="64083" fg:w="82"/><text x="61.2576%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (495 samples, 0.47%)</title><rect x="60.6173%" y="421" width="0.4712%" height="15" fill="rgb(223,224,47)" fg:x="63673" fg:w="495"/><text x="60.8673%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (118 samples, 0.11%)</title><rect x="60.9762%" y="405" width="0.1123%" height="15" fill="rgb(238,102,44)" fg:x="64050" fg:w="118"/><text x="61.2262%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (118 samples, 0.11%)</title><rect x="60.9762%" y="389" width="0.1123%" height="15" fill="rgb(236,46,40)" fg:x="64050" fg:w="118"/><text x="61.2262%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (118 samples, 0.11%)</title><rect x="60.9762%" y="373" width="0.1123%" height="15" fill="rgb(247,202,50)" fg:x="64050" fg:w="118"/><text x="61.2262%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (108 samples, 0.10%)</title><rect x="60.9857%" y="357" width="0.1028%" height="15" fill="rgb(209,99,20)" fg:x="64060" fg:w="108"/><text x="61.2357%" y="367.50"></text></g><g><title>__rg_dealloc (108 samples, 0.10%)</title><rect x="60.9857%" y="341" width="0.1028%" height="15" fill="rgb(252,27,34)" fg:x="64060" fg:w="108"/><text x="61.2357%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (108 samples, 0.10%)</title><rect x="60.9857%" y="325" width="0.1028%" height="15" fill="rgb(215,206,23)" fg:x="64060" fg:w="108"/><text x="61.2357%" y="335.50"></text></g><g><title>rust_dealloc (108 samples, 0.10%)</title><rect x="60.9857%" y="309" width="0.1028%" height="15" fill="rgb(212,135,36)" fg:x="64060" fg:w="108"/><text x="61.2357%" y="319.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (14 samples, 0.01%)</title><rect x="61.1609%" y="373" width="0.0133%" height="15" fill="rgb(240,189,1)" fg:x="64244" fg:w="14"/><text x="61.4109%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (14 samples, 0.01%)</title><rect x="61.1609%" y="357" width="0.0133%" height="15" fill="rgb(242,56,20)" fg:x="64244" fg:w="14"/><text x="61.4109%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (21 samples, 0.02%)</title><rect x="61.2094%" y="341" width="0.0200%" height="15" fill="rgb(247,132,33)" fg:x="64295" fg:w="21"/><text x="61.4594%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (53 samples, 0.05%)</title><rect x="61.1866%" y="357" width="0.0505%" height="15" fill="rgb(208,149,11)" fg:x="64271" fg:w="53"/><text x="61.4366%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (63 samples, 0.06%)</title><rect x="61.1780%" y="373" width="0.0600%" height="15" fill="rgb(211,33,11)" fg:x="64262" fg:w="63"/><text x="61.4280%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (11 samples, 0.01%)</title><rect x="61.2380%" y="373" width="0.0105%" height="15" fill="rgb(221,29,38)" fg:x="64325" fg:w="11"/><text x="61.4880%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (176 samples, 0.17%)</title><rect x="61.0885%" y="421" width="0.1676%" height="15" fill="rgb(206,182,49)" fg:x="64168" fg:w="176"/><text x="61.3385%" y="431.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (165 samples, 0.16%)</title><rect x="61.0990%" y="405" width="0.1571%" height="15" fill="rgb(216,140,1)" fg:x="64179" fg:w="165"/><text x="61.3490%" y="415.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (164 samples, 0.16%)</title><rect x="61.1000%" y="389" width="0.1561%" height="15" fill="rgb(232,57,40)" fg:x="64180" fg:w="164"/><text x="61.3500%" y="399.50"></text></g><g><title>core::time::Duration::as_nanos (21 samples, 0.02%)</title><rect x="61.2980%" y="405" width="0.0200%" height="15" fill="rgb(224,186,18)" fg:x="64388" fg:w="21"/><text x="61.5480%" y="415.50"></text></g><g><title>__clock_gettime_2 (38 samples, 0.04%)</title><rect x="61.4884%" y="357" width="0.0362%" height="15" fill="rgb(215,121,11)" fg:x="64588" fg:w="38"/><text x="61.7384%" y="367.50"></text></g><g><title>__vdso_clock_gettime (18 samples, 0.02%)</title><rect x="61.5074%" y="341" width="0.0171%" height="15" fill="rgb(245,147,10)" fg:x="64608" fg:w="18"/><text x="61.7574%" y="351.50"></text></g><g><title>tremor_common::time::nanotime (283 samples, 0.27%)</title><rect x="61.2561%" y="421" width="0.2694%" height="15" fill="rgb(238,153,13)" fg:x="64344" fg:w="283"/><text x="61.5061%" y="431.50"></text></g><g><title>std::time::SystemTime::now (208 samples, 0.20%)</title><rect x="61.3275%" y="405" width="0.1980%" height="15" fill="rgb(233,108,0)" fg:x="64419" fg:w="208"/><text x="61.5775%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (208 samples, 0.20%)</title><rect x="61.3275%" y="389" width="0.1980%" height="15" fill="rgb(212,157,17)" fg:x="64419" fg:w="208"/><text x="61.5775%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::now (208 samples, 0.20%)</title><rect x="61.3275%" y="373" width="0.1980%" height="15" fill="rgb(225,213,38)" fg:x="64419" fg:w="208"/><text x="61.5775%" y="383.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (2,024 samples, 1.93%)</title><rect x="59.6139%" y="437" width="1.9269%" height="15" fill="rgb(248,16,11)" fg:x="62619" fg:w="2024"/><text x="59.8639%" y="447.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (16 samples, 0.02%)</title><rect x="61.5255%" y="421" width="0.0152%" height="15" fill="rgb(241,33,4)" fg:x="64627" fg:w="16"/><text x="61.7755%" y="431.50"></text></g><g><title>start_thread (3,792 samples, 3.61%)</title><rect x="57.9336%" y="1157" width="3.6100%" height="15" fill="rgb(222,26,43)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="1167.50">star..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,792 samples, 3.61%)</title><rect x="57.9336%" y="1141" width="3.6100%" height="15" fill="rgb(243,29,36)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="1151.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,792 samples, 3.61%)</title><rect x="57.9336%" y="1125" width="3.6100%" height="15" fill="rgb(241,9,27)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="1135.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,792 samples, 3.61%)</title><rect x="57.9336%" y="1109" width="3.6100%" height="15" fill="rgb(205,117,26)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="1119.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,792 samples, 3.61%)</title><rect x="57.9336%" y="1093" width="3.6100%" height="15" fill="rgb(209,80,39)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="1103.50">core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3,792 samples, 3.61%)</title><rect x="57.9336%" y="1077" width="3.6100%" height="15" fill="rgb(239,155,6)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="1087.50">std:..</text></g><g><title>std::panic::catch_unwind (3,792 samples, 3.61%)</title><rect x="57.9336%" y="1061" width="3.6100%" height="15" fill="rgb(212,104,12)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="1071.50">std:..</text></g><g><title>std::panicking::try (3,792 samples, 3.61%)</title><rect x="57.9336%" y="1045" width="3.6100%" height="15" fill="rgb(234,204,3)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="1055.50">std:..</text></g><g><title>std::panicking::try::do_call (3,792 samples, 3.61%)</title><rect x="57.9336%" y="1029" width="3.6100%" height="15" fill="rgb(251,218,7)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="1039.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,792 samples, 3.61%)</title><rect x="57.9336%" y="1013" width="3.6100%" height="15" fill="rgb(221,81,32)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="1023.50">&lt;cor..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3,792 samples, 3.61%)</title><rect x="57.9336%" y="997" width="3.6100%" height="15" fill="rgb(214,152,26)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="1007.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,792 samples, 3.61%)</title><rect x="57.9336%" y="981" width="3.6100%" height="15" fill="rgb(223,22,3)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="991.50">std:..</text></g><g><title>core::ops::function::FnOnce::call_once (3,792 samples, 3.61%)</title><rect x="57.9336%" y="965" width="3.6100%" height="15" fill="rgb(207,174,7)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="975.50">core..</text></g><g><title>async_global_executor::threading::thread_main_loop (3,792 samples, 3.61%)</title><rect x="57.9336%" y="949" width="3.6100%" height="15" fill="rgb(224,19,52)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="959.50">asyn..</text></g><g><title>std::panic::catch_unwind (3,792 samples, 3.61%)</title><rect x="57.9336%" y="933" width="3.6100%" height="15" fill="rgb(228,24,14)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="943.50">std:..</text></g><g><title>std::panicking::try (3,792 samples, 3.61%)</title><rect x="57.9336%" y="917" width="3.6100%" height="15" fill="rgb(230,153,43)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="927.50">std:..</text></g><g><title>std::panicking::try::do_call (3,792 samples, 3.61%)</title><rect x="57.9336%" y="901" width="3.6100%" height="15" fill="rgb(231,106,12)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="911.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (3,792 samples, 3.61%)</title><rect x="57.9336%" y="885" width="3.6100%" height="15" fill="rgb(215,92,2)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="895.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,792 samples, 3.61%)</title><rect x="57.9336%" y="869" width="3.6100%" height="15" fill="rgb(249,143,25)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="879.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,792 samples, 3.61%)</title><rect x="57.9336%" y="853" width="3.6100%" height="15" fill="rgb(252,7,35)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="863.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (3,792 samples, 3.61%)</title><rect x="57.9336%" y="837" width="3.6100%" height="15" fill="rgb(216,69,40)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="847.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on (3,792 samples, 3.61%)</title><rect x="57.9336%" y="821" width="3.6100%" height="15" fill="rgb(240,36,33)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="831.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (3,792 samples, 3.61%)</title><rect x="57.9336%" y="805" width="3.6100%" height="15" fill="rgb(231,128,14)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="815.50">asyn..</text></g><g><title>async_io::driver::block_on (3,792 samples, 3.61%)</title><rect x="57.9336%" y="789" width="3.6100%" height="15" fill="rgb(245,143,14)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="799.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,792 samples, 3.61%)</title><rect x="57.9336%" y="773" width="3.6100%" height="15" fill="rgb(222,130,28)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="783.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,792 samples, 3.61%)</title><rect x="57.9336%" y="757" width="3.6100%" height="15" fill="rgb(212,10,48)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="767.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}} (3,792 samples, 3.61%)</title><rect x="57.9336%" y="741" width="3.6100%" height="15" fill="rgb(254,118,45)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="751.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,792 samples, 3.61%)</title><rect x="57.9336%" y="725" width="3.6100%" height="15" fill="rgb(228,6,45)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="735.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,792 samples, 3.61%)</title><rect x="57.9336%" y="709" width="3.6100%" height="15" fill="rgb(241,18,35)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="719.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3,792 samples, 3.61%)</title><rect x="57.9336%" y="693" width="3.6100%" height="15" fill="rgb(227,214,53)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="703.50">asyn..</text></g><g><title>async_task::runnable::Runnable::run (3,792 samples, 3.61%)</title><rect x="57.9336%" y="677" width="3.6100%" height="15" fill="rgb(224,107,51)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="687.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,792 samples, 3.61%)</title><rect x="57.9336%" y="661" width="3.6100%" height="15" fill="rgb(248,60,28)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="671.50">asyn..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,792 samples, 3.61%)</title><rect x="57.9336%" y="645" width="3.6100%" height="15" fill="rgb(249,101,23)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="655.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,792 samples, 3.61%)</title><rect x="57.9336%" y="629" width="3.6100%" height="15" fill="rgb(228,51,19)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="639.50">&lt;cor..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,792 samples, 3.61%)</title><rect x="57.9336%" y="613" width="3.6100%" height="15" fill="rgb(213,20,6)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="623.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (3,792 samples, 3.61%)</title><rect x="57.9336%" y="597" width="3.6100%" height="15" fill="rgb(212,124,10)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="607.50">&lt;asy..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,792 samples, 3.61%)</title><rect x="57.9336%" y="581" width="3.6100%" height="15" fill="rgb(248,3,40)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="591.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,792 samples, 3.61%)</title><rect x="57.9336%" y="565" width="3.6100%" height="15" fill="rgb(223,178,23)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="575.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,792 samples, 3.61%)</title><rect x="57.9336%" y="549" width="3.6100%" height="15" fill="rgb(240,132,45)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="559.50">std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,792 samples, 3.61%)</title><rect x="57.9336%" y="533" width="3.6100%" height="15" fill="rgb(245,164,36)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="543.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,792 samples, 3.61%)</title><rect x="57.9336%" y="517" width="3.6100%" height="15" fill="rgb(231,188,53)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="527.50">&lt;asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,792 samples, 3.61%)</title><rect x="57.9336%" y="501" width="3.6100%" height="15" fill="rgb(237,198,39)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="511.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,792 samples, 3.61%)</title><rect x="57.9336%" y="485" width="3.6100%" height="15" fill="rgb(223,120,35)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="495.50">trem..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,792 samples, 3.61%)</title><rect x="57.9336%" y="469" width="3.6100%" height="15" fill="rgb(253,107,49)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="479.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,792 samples, 3.61%)</title><rect x="57.9336%" y="453" width="3.6100%" height="15" fill="rgb(216,44,31)" fg:x="60854" fg:w="3792"/><text x="58.1836%" y="463.50">&lt;cor..</text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="61.5731%" y="389" width="0.0114%" height="15" fill="rgb(253,87,21)" fg:x="64677" fg:w="12"/><text x="61.8231%" y="399.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (22 samples, 0.02%)</title><rect x="61.6359%" y="277" width="0.0209%" height="15" fill="rgb(226,18,2)" fg:x="64743" fg:w="22"/><text x="61.8859%" y="287.50"></text></g><g><title> (22 samples, 0.02%)</title><rect x="61.6359%" y="261" width="0.0209%" height="15" fill="rgb(216,8,46)" fg:x="64743" fg:w="22"/><text x="61.8859%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (77 samples, 0.07%)</title><rect x="61.5940%" y="309" width="0.0733%" height="15" fill="rgb(226,140,39)" fg:x="64699" fg:w="77"/><text x="61.8440%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (63 samples, 0.06%)</title><rect x="61.6074%" y="293" width="0.0600%" height="15" fill="rgb(221,194,54)" fg:x="64713" fg:w="63"/><text x="61.8574%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="61.6569%" y="277" width="0.0105%" height="15" fill="rgb(213,92,11)" fg:x="64765" fg:w="11"/><text x="61.9069%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (88 samples, 0.08%)</title><rect x="61.5874%" y="341" width="0.0838%" height="15" fill="rgb(229,162,46)" fg:x="64692" fg:w="88"/><text x="61.8374%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (88 samples, 0.08%)</title><rect x="61.5874%" y="325" width="0.0838%" height="15" fill="rgb(214,111,36)" fg:x="64692" fg:w="88"/><text x="61.8374%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (103 samples, 0.10%)</title><rect x="61.5874%" y="373" width="0.0981%" height="15" fill="rgb(207,6,21)" fg:x="64692" fg:w="103"/><text x="61.8374%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (103 samples, 0.10%)</title><rect x="61.5874%" y="357" width="0.0981%" height="15" fill="rgb(213,127,38)" fg:x="64692" fg:w="103"/><text x="61.8374%" y="367.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="61.6712%" y="341" width="0.0143%" height="15" fill="rgb(238,118,32)" fg:x="64780" fg:w="15"/><text x="61.9212%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="61.6712%" y="325" width="0.0143%" height="15" fill="rgb(240,139,39)" fg:x="64780" fg:w="15"/><text x="61.9212%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (15 samples, 0.01%)</title><rect x="61.6712%" y="309" width="0.0143%" height="15" fill="rgb(235,10,37)" fg:x="64780" fg:w="15"/><text x="61.9212%" y="319.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="61.6712%" y="293" width="0.0143%" height="15" fill="rgb(249,171,38)" fg:x="64780" fg:w="15"/><text x="61.9212%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (117 samples, 0.11%)</title><rect x="61.5845%" y="389" width="0.1114%" height="15" fill="rgb(242,144,32)" fg:x="64689" fg:w="117"/><text x="61.8345%" y="399.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="61.6854%" y="373" width="0.0105%" height="15" fill="rgb(217,117,21)" fg:x="64795" fg:w="11"/><text x="61.9354%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="61.6854%" y="357" width="0.0105%" height="15" fill="rgb(249,87,1)" fg:x="64795" fg:w="11"/><text x="61.9354%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="61.6854%" y="341" width="0.0105%" height="15" fill="rgb(248,196,48)" fg:x="64795" fg:w="11"/><text x="61.9354%" y="351.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="61.6854%" y="325" width="0.0105%" height="15" fill="rgb(251,206,33)" fg:x="64795" fg:w="11"/><text x="61.9354%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (151 samples, 0.14%)</title><rect x="61.5721%" y="421" width="0.1438%" height="15" fill="rgb(232,141,28)" fg:x="64676" fg:w="151"/><text x="61.8221%" y="431.50"></text></g><g><title>rust_dealloc (150 samples, 0.14%)</title><rect x="61.5731%" y="405" width="0.1428%" height="15" fill="rgb(209,167,14)" fg:x="64677" fg:w="150"/><text x="61.8231%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (21 samples, 0.02%)</title><rect x="61.6959%" y="389" width="0.0200%" height="15" fill="rgb(225,11,50)" fg:x="64806" fg:w="21"/><text x="61.9459%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (27 samples, 0.03%)</title><rect x="61.7169%" y="373" width="0.0257%" height="15" fill="rgb(209,50,20)" fg:x="64828" fg:w="27"/><text x="61.9669%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (14 samples, 0.01%)</title><rect x="61.7292%" y="357" width="0.0133%" height="15" fill="rgb(212,17,46)" fg:x="64841" fg:w="14"/><text x="61.9792%" y="367.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="61.7426%" y="373" width="0.0114%" height="15" fill="rgb(216,101,39)" fg:x="64855" fg:w="12"/><text x="61.9926%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (12 samples, 0.01%)</title><rect x="61.7426%" y="357" width="0.0114%" height="15" fill="rgb(212,228,48)" fg:x="64855" fg:w="12"/><text x="61.9926%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="61.7426%" y="341" width="0.0114%" height="15" fill="rgb(250,6,50)" fg:x="64855" fg:w="12"/><text x="61.9926%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (53 samples, 0.05%)</title><rect x="61.7169%" y="421" width="0.0505%" height="15" fill="rgb(250,160,48)" fg:x="64828" fg:w="53"/><text x="61.9669%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (53 samples, 0.05%)</title><rect x="61.7169%" y="405" width="0.0505%" height="15" fill="rgb(244,216,33)" fg:x="64828" fg:w="53"/><text x="61.9669%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.05%)</title><rect x="61.7169%" y="389" width="0.0505%" height="15" fill="rgb(207,157,5)" fg:x="64828" fg:w="53"/><text x="61.9669%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (14 samples, 0.01%)</title><rect x="61.7540%" y="373" width="0.0133%" height="15" fill="rgb(228,199,8)" fg:x="64867" fg:w="14"/><text x="62.0040%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.02%)</title><rect x="62.2957%" y="261" width="0.0228%" height="15" fill="rgb(227,80,20)" fg:x="65436" fg:w="24"/><text x="62.5457%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.02%)</title><rect x="62.2957%" y="245" width="0.0228%" height="15" fill="rgb(222,9,33)" fg:x="65436" fg:w="24"/><text x="62.5457%" y="255.50"></text></g><g><title>__rg_dealloc (24 samples, 0.02%)</title><rect x="62.2957%" y="229" width="0.0228%" height="15" fill="rgb(239,44,28)" fg:x="65436" fg:w="24"/><text x="62.5457%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (24 samples, 0.02%)</title><rect x="62.2957%" y="213" width="0.0228%" height="15" fill="rgb(249,187,43)" fg:x="65436" fg:w="24"/><text x="62.5457%" y="223.50"></text></g><g><title>core::mem::drop (744 samples, 0.71%)</title><rect x="62.2957%" y="309" width="0.7083%" height="15" fill="rgb(216,141,28)" fg:x="65436" fg:w="744"/><text x="62.5457%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (744 samples, 0.71%)</title><rect x="62.2957%" y="293" width="0.7083%" height="15" fill="rgb(230,154,53)" fg:x="65436" fg:w="744"/><text x="62.5457%" y="303.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (744 samples, 0.71%)</title><rect x="62.2957%" y="277" width="0.7083%" height="15" fill="rgb(227,82,4)" fg:x="65436" fg:w="744"/><text x="62.5457%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (715 samples, 0.68%)</title><rect x="62.3233%" y="261" width="0.6807%" height="15" fill="rgb(220,107,16)" fg:x="65465" fg:w="715"/><text x="62.5733%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_sub (715 samples, 0.68%)</title><rect x="62.3233%" y="245" width="0.6807%" height="15" fill="rgb(207,187,2)" fg:x="65465" fg:w="715"/><text x="62.5733%" y="255.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="63.0268%" y="165" width="0.0114%" height="15" fill="rgb(210,162,52)" fg:x="66204" fg:w="12"/><text x="63.2768%" y="175.50"></text></g><g><title>rust_dealloc (19 samples, 0.02%)</title><rect x="63.0421%" y="85" width="0.0181%" height="15" fill="rgb(217,216,49)" fg:x="66220" fg:w="19"/><text x="63.2921%" y="95.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (26 samples, 0.02%)</title><rect x="63.1287%" y="53" width="0.0248%" height="15" fill="rgb(218,146,49)" fg:x="66311" fg:w="26"/><text x="63.3787%" y="63.50"></text></g><g><title> (26 samples, 0.02%)</title><rect x="63.1287%" y="37" width="0.0248%" height="15" fill="rgb(216,55,40)" fg:x="66311" fg:w="26"/><text x="63.3787%" y="47.50"></text></g><g><title>snmalloc::Remote::set_info (13 samples, 0.01%)</title><rect x="63.1534%" y="53" width="0.0124%" height="15" fill="rgb(208,196,21)" fg:x="66337" fg:w="13"/><text x="63.4034%" y="63.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (123 samples, 0.12%)</title><rect x="63.0611%" y="85" width="0.1171%" height="15" fill="rgb(242,117,42)" fg:x="66240" fg:w="123"/><text x="63.3111%" y="95.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (107 samples, 0.10%)</title><rect x="63.0763%" y="69" width="0.1019%" height="15" fill="rgb(210,11,23)" fg:x="66256" fg:w="107"/><text x="63.3263%" y="79.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (13 samples, 0.01%)</title><rect x="63.1658%" y="53" width="0.0124%" height="15" fill="rgb(217,110,2)" fg:x="66350" fg:w="13"/><text x="63.4158%" y="63.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (167 samples, 0.16%)</title><rect x="63.0421%" y="117" width="0.1590%" height="15" fill="rgb(229,77,54)" fg:x="66220" fg:w="167"/><text x="63.2921%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (167 samples, 0.16%)</title><rect x="63.0421%" y="101" width="0.1590%" height="15" fill="rgb(218,53,16)" fg:x="66220" fg:w="167"/><text x="63.2921%" y="111.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (23 samples, 0.02%)</title><rect x="63.1791%" y="85" width="0.0219%" height="15" fill="rgb(215,38,13)" fg:x="66364" fg:w="23"/><text x="63.4291%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (177 samples, 0.17%)</title><rect x="63.0421%" y="149" width="0.1685%" height="15" fill="rgb(235,42,18)" fg:x="66220" fg:w="177"/><text x="63.2921%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (177 samples, 0.17%)</title><rect x="63.0421%" y="133" width="0.1685%" height="15" fill="rgb(219,66,54)" fg:x="66220" fg:w="177"/><text x="63.2921%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (194 samples, 0.18%)</title><rect x="63.0382%" y="165" width="0.1847%" height="15" fill="rgb(222,205,4)" fg:x="66216" fg:w="194"/><text x="63.2882%" y="175.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="63.2106%" y="149" width="0.0124%" height="15" fill="rgb(227,213,46)" fg:x="66397" fg:w="13"/><text x="63.4606%" y="159.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="63.2106%" y="133" width="0.0124%" height="15" fill="rgb(250,145,42)" fg:x="66397" fg:w="13"/><text x="63.4606%" y="143.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="63.2106%" y="117" width="0.0124%" height="15" fill="rgb(219,15,2)" fg:x="66397" fg:w="13"/><text x="63.4606%" y="127.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="63.2106%" y="101" width="0.0124%" height="15" fill="rgb(231,181,52)" fg:x="66397" fg:w="13"/><text x="63.4606%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (220 samples, 0.21%)</title><rect x="63.0268%" y="245" width="0.2094%" height="15" fill="rgb(235,1,42)" fg:x="66204" fg:w="220"/><text x="63.2768%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (220 samples, 0.21%)</title><rect x="63.0268%" y="229" width="0.2094%" height="15" fill="rgb(249,88,27)" fg:x="66204" fg:w="220"/><text x="63.2768%" y="239.50"></text></g><g><title>__rg_dealloc (220 samples, 0.21%)</title><rect x="63.0268%" y="213" width="0.2094%" height="15" fill="rgb(235,145,16)" fg:x="66204" fg:w="220"/><text x="63.2768%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (220 samples, 0.21%)</title><rect x="63.0268%" y="197" width="0.2094%" height="15" fill="rgb(237,114,19)" fg:x="66204" fg:w="220"/><text x="63.2768%" y="207.50"></text></g><g><title>rust_dealloc (220 samples, 0.21%)</title><rect x="63.0268%" y="181" width="0.2094%" height="15" fill="rgb(238,51,50)" fg:x="66204" fg:w="220"/><text x="63.2768%" y="191.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="63.2229%" y="165" width="0.0133%" height="15" fill="rgb(205,194,25)" fg:x="66410" fg:w="14"/><text x="63.4729%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (994 samples, 0.95%)</title><rect x="62.2909%" y="325" width="0.9463%" height="15" fill="rgb(215,203,17)" fg:x="65431" fg:w="994"/><text x="62.5409%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (245 samples, 0.23%)</title><rect x="63.0040%" y="309" width="0.2332%" height="15" fill="rgb(233,112,49)" fg:x="66180" fg:w="245"/><text x="63.2540%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (245 samples, 0.23%)</title><rect x="63.0040%" y="293" width="0.2332%" height="15" fill="rgb(241,130,26)" fg:x="66180" fg:w="245"/><text x="63.2540%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (245 samples, 0.23%)</title><rect x="63.0040%" y="277" width="0.2332%" height="15" fill="rgb(252,223,19)" fg:x="66180" fg:w="245"/><text x="63.2540%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (245 samples, 0.23%)</title><rect x="63.0040%" y="261" width="0.2332%" height="15" fill="rgb(211,95,25)" fg:x="66180" fg:w="245"/><text x="63.2540%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,215 samples, 1.16%)</title><rect x="63.2410%" y="325" width="1.1567%" height="15" fill="rgb(251,182,27)" fg:x="66429" fg:w="1215"/><text x="63.4910%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,215 samples, 1.16%)</title><rect x="63.2410%" y="309" width="1.1567%" height="15" fill="rgb(238,24,4)" fg:x="66429" fg:w="1215"/><text x="63.4910%" y="319.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="64.4053%" y="293" width="0.0114%" height="15" fill="rgb(224,220,25)" fg:x="67652" fg:w="12"/><text x="64.6553%" y="303.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="64.4168%" y="293" width="0.0124%" height="15" fill="rgb(239,133,26)" fg:x="67664" fg:w="13"/><text x="64.6668%" y="303.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="64.4348%" y="229" width="0.0105%" height="15" fill="rgb(211,94,48)" fg:x="67683" fg:w="11"/><text x="64.6848%" y="239.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="64.4348%" y="213" width="0.0105%" height="15" fill="rgb(239,87,6)" fg:x="67683" fg:w="11"/><text x="64.6848%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (24 samples, 0.02%)</title><rect x="64.4720%" y="197" width="0.0228%" height="15" fill="rgb(227,62,0)" fg:x="67722" fg:w="24"/><text x="64.7220%" y="207.50"></text></g><g><title> (24 samples, 0.02%)</title><rect x="64.4720%" y="181" width="0.0228%" height="15" fill="rgb(211,226,4)" fg:x="67722" fg:w="24"/><text x="64.7220%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (59 samples, 0.06%)</title><rect x="64.4453%" y="229" width="0.0562%" height="15" fill="rgb(253,38,52)" fg:x="67694" fg:w="59"/><text x="64.6953%" y="239.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (45 samples, 0.04%)</title><rect x="64.4586%" y="213" width="0.0428%" height="15" fill="rgb(229,126,40)" fg:x="67708" fg:w="45"/><text x="64.7086%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,875 samples, 2.74%)</title><rect x="61.7673%" y="389" width="2.7370%" height="15" fill="rgb(229,165,44)" fg:x="64881" fg:w="2875"/><text x="62.0173%" y="399.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (2,865 samples, 2.73%)</title><rect x="61.7768%" y="373" width="2.7275%" height="15" fill="rgb(247,95,47)" fg:x="64891" fg:w="2865"/><text x="62.0268%" y="383.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (2,854 samples, 2.72%)</title><rect x="61.7873%" y="357" width="2.7170%" height="15" fill="rgb(216,140,30)" fg:x="64902" fg:w="2854"/><text x="62.0373%" y="367.50">co..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,854 samples, 2.72%)</title><rect x="61.7873%" y="341" width="2.7170%" height="15" fill="rgb(246,214,8)" fg:x="64902" fg:w="2854"/><text x="62.0373%" y="351.50">&lt;a..</text></g><g><title>rust_dealloc (112 samples, 0.11%)</title><rect x="64.3977%" y="325" width="0.1066%" height="15" fill="rgb(227,224,15)" fg:x="67644" fg:w="112"/><text x="64.6477%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (104 samples, 0.10%)</title><rect x="64.4053%" y="309" width="0.0990%" height="15" fill="rgb(233,175,4)" fg:x="67652" fg:w="104"/><text x="64.6553%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (79 samples, 0.08%)</title><rect x="64.4291%" y="293" width="0.0752%" height="15" fill="rgb(221,66,45)" fg:x="67677" fg:w="79"/><text x="64.6791%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (79 samples, 0.08%)</title><rect x="64.4291%" y="277" width="0.0752%" height="15" fill="rgb(221,178,18)" fg:x="67677" fg:w="79"/><text x="64.6791%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (79 samples, 0.08%)</title><rect x="64.4291%" y="261" width="0.0752%" height="15" fill="rgb(213,81,29)" fg:x="67677" fg:w="79"/><text x="64.6791%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (79 samples, 0.08%)</title><rect x="64.4291%" y="245" width="0.0752%" height="15" fill="rgb(220,89,49)" fg:x="67677" fg:w="79"/><text x="64.6791%" y="255.50"></text></g><g><title>aligned_size (16 samples, 0.02%)</title><rect x="64.5186%" y="277" width="0.0152%" height="15" fill="rgb(227,60,33)" fg:x="67771" fg:w="16"/><text x="64.7686%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (14 samples, 0.01%)</title><rect x="64.5957%" y="165" width="0.0133%" height="15" fill="rgb(205,113,12)" fg:x="67852" fg:w="14"/><text x="64.8457%" y="175.50"></text></g><g><title> (14 samples, 0.01%)</title><rect x="64.5957%" y="149" width="0.0133%" height="15" fill="rgb(211,32,1)" fg:x="67852" fg:w="14"/><text x="64.8457%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (68 samples, 0.06%)</title><rect x="64.5586%" y="197" width="0.0647%" height="15" fill="rgb(246,2,12)" fg:x="67813" fg:w="68"/><text x="64.8086%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (54 samples, 0.05%)</title><rect x="64.5719%" y="181" width="0.0514%" height="15" fill="rgb(243,37,27)" fg:x="67827" fg:w="54"/><text x="64.8219%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (15 samples, 0.01%)</title><rect x="64.6091%" y="165" width="0.0143%" height="15" fill="rgb(248,211,31)" fg:x="67866" fg:w="15"/><text x="64.8591%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (96 samples, 0.09%)</title><rect x="64.5472%" y="229" width="0.0914%" height="15" fill="rgb(242,146,47)" fg:x="67801" fg:w="96"/><text x="64.7972%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (96 samples, 0.09%)</title><rect x="64.5472%" y="213" width="0.0914%" height="15" fill="rgb(206,70,20)" fg:x="67801" fg:w="96"/><text x="64.7972%" y="223.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.02%)</title><rect x="64.6233%" y="197" width="0.0152%" height="15" fill="rgb(215,10,51)" fg:x="67881" fg:w="16"/><text x="64.8733%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (111 samples, 0.11%)</title><rect x="64.5472%" y="261" width="0.1057%" height="15" fill="rgb(243,178,53)" fg:x="67801" fg:w="111"/><text x="64.7972%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (111 samples, 0.11%)</title><rect x="64.5472%" y="245" width="0.1057%" height="15" fill="rgb(233,221,20)" fg:x="67801" fg:w="111"/><text x="64.7972%" y="255.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="64.6386%" y="229" width="0.0143%" height="15" fill="rgb(218,95,35)" fg:x="67897" fg:w="15"/><text x="64.8886%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="64.6386%" y="213" width="0.0143%" height="15" fill="rgb(229,13,5)" fg:x="67897" fg:w="15"/><text x="64.8886%" y="223.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (15 samples, 0.01%)</title><rect x="64.6386%" y="197" width="0.0143%" height="15" fill="rgb(252,164,30)" fg:x="67897" fg:w="15"/><text x="64.8886%" y="207.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="64.6386%" y="181" width="0.0143%" height="15" fill="rgb(232,68,36)" fg:x="67897" fg:w="15"/><text x="64.8886%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (125 samples, 0.12%)</title><rect x="64.5348%" y="277" width="0.1190%" height="15" fill="rgb(219,59,54)" fg:x="67788" fg:w="125"/><text x="64.7848%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (3,033 samples, 2.89%)</title><rect x="61.7673%" y="405" width="2.8874%" height="15" fill="rgb(250,92,33)" fg:x="64881" fg:w="3033"/><text x="62.0173%" y="415.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (158 samples, 0.15%)</title><rect x="64.5043%" y="389" width="0.1504%" height="15" fill="rgb(229,162,54)" fg:x="67756" fg:w="158"/><text x="64.7543%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (158 samples, 0.15%)</title><rect x="64.5043%" y="373" width="0.1504%" height="15" fill="rgb(244,114,52)" fg:x="67756" fg:w="158"/><text x="64.7543%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (157 samples, 0.15%)</title><rect x="64.5053%" y="357" width="0.1495%" height="15" fill="rgb(212,211,43)" fg:x="67757" fg:w="157"/><text x="64.7553%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (143 samples, 0.14%)</title><rect x="64.5186%" y="341" width="0.1361%" height="15" fill="rgb(226,147,8)" fg:x="67771" fg:w="143"/><text x="64.7686%" y="351.50"></text></g><g><title>__rg_dealloc (143 samples, 0.14%)</title><rect x="64.5186%" y="325" width="0.1361%" height="15" fill="rgb(226,23,13)" fg:x="67771" fg:w="143"/><text x="64.7686%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (143 samples, 0.14%)</title><rect x="64.5186%" y="309" width="0.1361%" height="15" fill="rgb(240,63,4)" fg:x="67771" fg:w="143"/><text x="64.7686%" y="319.50"></text></g><g><title>rust_dealloc (143 samples, 0.14%)</title><rect x="64.5186%" y="293" width="0.1361%" height="15" fill="rgb(221,1,32)" fg:x="67771" fg:w="143"/><text x="64.7686%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (12 samples, 0.01%)</title><rect x="64.6548%" y="389" width="0.0114%" height="15" fill="rgb(242,117,10)" fg:x="67914" fg:w="12"/><text x="64.9048%" y="399.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="64.6776%" y="357" width="0.0133%" height="15" fill="rgb(249,172,44)" fg:x="67938" fg:w="14"/><text x="64.9276%" y="367.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="64.6909%" y="357" width="0.0133%" height="15" fill="rgb(244,46,45)" fg:x="67952" fg:w="14"/><text x="64.9409%" y="367.50"></text></g><g><title>sizeclass_to_size (16 samples, 0.02%)</title><rect x="64.7119%" y="293" width="0.0152%" height="15" fill="rgb(206,43,17)" fg:x="67974" fg:w="16"/><text x="64.9619%" y="303.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (16 samples, 0.02%)</title><rect x="64.7119%" y="277" width="0.0152%" height="15" fill="rgb(239,218,39)" fg:x="67974" fg:w="16"/><text x="64.9619%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (16 samples, 0.02%)</title><rect x="64.7652%" y="261" width="0.0152%" height="15" fill="rgb(208,169,54)" fg:x="68030" fg:w="16"/><text x="65.0152%" y="271.50"></text></g><g><title> (16 samples, 0.02%)</title><rect x="64.7652%" y="245" width="0.0152%" height="15" fill="rgb(247,25,42)" fg:x="68030" fg:w="16"/><text x="65.0152%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (73 samples, 0.07%)</title><rect x="64.7271%" y="293" width="0.0695%" height="15" fill="rgb(226,23,31)" fg:x="67990" fg:w="73"/><text x="64.9771%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (58 samples, 0.06%)</title><rect x="64.7414%" y="277" width="0.0552%" height="15" fill="rgb(247,16,28)" fg:x="68005" fg:w="58"/><text x="64.9914%" y="287.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (16 samples, 0.02%)</title><rect x="64.7814%" y="261" width="0.0152%" height="15" fill="rgb(231,147,38)" fg:x="68047" fg:w="16"/><text x="65.0314%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (99 samples, 0.09%)</title><rect x="64.7043%" y="325" width="0.0942%" height="15" fill="rgb(253,81,48)" fg:x="67966" fg:w="99"/><text x="64.9543%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (99 samples, 0.09%)</title><rect x="64.7043%" y="309" width="0.0942%" height="15" fill="rgb(249,222,43)" fg:x="67966" fg:w="99"/><text x="64.9543%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (128 samples, 0.12%)</title><rect x="64.6776%" y="373" width="0.1219%" height="15" fill="rgb(221,3,27)" fg:x="67938" fg:w="128"/><text x="64.9276%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (100 samples, 0.10%)</title><rect x="64.7043%" y="357" width="0.0952%" height="15" fill="rgb(228,180,5)" fg:x="67966" fg:w="100"/><text x="64.9543%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (100 samples, 0.10%)</title><rect x="64.7043%" y="341" width="0.0952%" height="15" fill="rgb(227,131,42)" fg:x="67966" fg:w="100"/><text x="64.9543%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (3,422 samples, 3.26%)</title><rect x="61.5436%" y="437" width="3.2578%" height="15" fill="rgb(212,3,39)" fg:x="64646" fg:w="3422"/><text x="61.7936%" y="447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (3,187 samples, 3.03%)</title><rect x="61.7673%" y="421" width="3.0341%" height="15" fill="rgb(226,45,5)" fg:x="64881" fg:w="3187"/><text x="62.0173%" y="431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (154 samples, 0.15%)</title><rect x="64.6548%" y="405" width="0.1466%" height="15" fill="rgb(215,167,45)" fg:x="67914" fg:w="154"/><text x="64.9048%" y="415.50"></text></g><g><title>rust_dealloc (142 samples, 0.14%)</title><rect x="64.6662%" y="389" width="0.1352%" height="15" fill="rgb(250,218,53)" fg:x="67926" fg:w="142"/><text x="64.9162%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (81 samples, 0.08%)</title><rect x="64.8623%" y="373" width="0.0771%" height="15" fill="rgb(207,140,0)" fg:x="68132" fg:w="81"/><text x="65.1123%" y="383.50"></text></g><g><title>core::cmp::PartialOrd::ge (81 samples, 0.08%)</title><rect x="64.8623%" y="357" width="0.0771%" height="15" fill="rgb(238,133,51)" fg:x="68132" fg:w="81"/><text x="65.1123%" y="367.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (78 samples, 0.07%)</title><rect x="64.8651%" y="341" width="0.0743%" height="15" fill="rgb(218,203,53)" fg:x="68135" fg:w="78"/><text x="65.1151%" y="351.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (78 samples, 0.07%)</title><rect x="64.8651%" y="325" width="0.0743%" height="15" fill="rgb(226,184,25)" fg:x="68135" fg:w="78"/><text x="65.1151%" y="335.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (78 samples, 0.07%)</title><rect x="64.8651%" y="309" width="0.0743%" height="15" fill="rgb(231,121,21)" fg:x="68135" fg:w="78"/><text x="65.1151%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (39 samples, 0.04%)</title><rect x="64.9023%" y="293" width="0.0371%" height="15" fill="rgb(251,14,34)" fg:x="68174" fg:w="39"/><text x="65.1523%" y="303.50"></text></g><g><title>std::time::SystemTime::duration_since (167 samples, 0.16%)</title><rect x="64.8014%" y="421" width="0.1590%" height="15" fill="rgb(249,193,11)" fg:x="68068" fg:w="167"/><text x="65.0514%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (167 samples, 0.16%)</title><rect x="64.8014%" y="405" width="0.1590%" height="15" fill="rgb(220,172,37)" fg:x="68068" fg:w="167"/><text x="65.0514%" y="415.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (167 samples, 0.16%)</title><rect x="64.8014%" y="389" width="0.1590%" height="15" fill="rgb(231,229,43)" fg:x="68068" fg:w="167"/><text x="65.0514%" y="399.50"></text></g><g><title>core::time::Duration::new (22 samples, 0.02%)</title><rect x="64.9394%" y="373" width="0.0209%" height="15" fill="rgb(250,161,5)" fg:x="68213" fg:w="22"/><text x="65.1894%" y="383.50"></text></g><g><title>[[vdso]] (417 samples, 0.40%)</title><rect x="65.1774%" y="341" width="0.3970%" height="15" fill="rgb(218,225,18)" fg:x="68463" fg:w="417"/><text x="65.4274%" y="351.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,236 samples, 4.03%)</title><rect x="61.5436%" y="1157" width="4.0327%" height="15" fill="rgb(245,45,42)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="1167.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,236 samples, 4.03%)</title><rect x="61.5436%" y="1141" width="4.0327%" height="15" fill="rgb(211,115,1)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="1151.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,236 samples, 4.03%)</title><rect x="61.5436%" y="1125" width="4.0327%" height="15" fill="rgb(248,133,52)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="1135.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="1109" width="4.0327%" height="15" fill="rgb(238,100,21)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="1119.50">core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="1093" width="4.0327%" height="15" fill="rgb(247,144,11)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="1103.50">std:..</text></g><g><title>std::panic::catch_unwind (4,236 samples, 4.03%)</title><rect x="61.5436%" y="1077" width="4.0327%" height="15" fill="rgb(206,164,16)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="1087.50">std:..</text></g><g><title>std::panicking::try (4,236 samples, 4.03%)</title><rect x="61.5436%" y="1061" width="4.0327%" height="15" fill="rgb(222,34,3)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="1071.50">std:..</text></g><g><title>std::panicking::try::do_call (4,236 samples, 4.03%)</title><rect x="61.5436%" y="1045" width="4.0327%" height="15" fill="rgb(248,82,4)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="1055.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,236 samples, 4.03%)</title><rect x="61.5436%" y="1029" width="4.0327%" height="15" fill="rgb(228,81,46)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="1039.50">&lt;cor..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="1013" width="4.0327%" height="15" fill="rgb(227,67,47)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="1023.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,236 samples, 4.03%)</title><rect x="61.5436%" y="997" width="4.0327%" height="15" fill="rgb(215,93,53)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="1007.50">std:..</text></g><g><title>core::ops::function::FnOnce::call_once (4,236 samples, 4.03%)</title><rect x="61.5436%" y="981" width="4.0327%" height="15" fill="rgb(248,194,39)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="991.50">core..</text></g><g><title>async_global_executor::threading::thread_main_loop (4,236 samples, 4.03%)</title><rect x="61.5436%" y="965" width="4.0327%" height="15" fill="rgb(215,5,19)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="975.50">asyn..</text></g><g><title>std::panic::catch_unwind (4,236 samples, 4.03%)</title><rect x="61.5436%" y="949" width="4.0327%" height="15" fill="rgb(226,215,51)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="959.50">std:..</text></g><g><title>std::panicking::try (4,236 samples, 4.03%)</title><rect x="61.5436%" y="933" width="4.0327%" height="15" fill="rgb(225,56,26)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="943.50">std:..</text></g><g><title>std::panicking::try::do_call (4,236 samples, 4.03%)</title><rect x="61.5436%" y="917" width="4.0327%" height="15" fill="rgb(222,75,29)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="927.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="901" width="4.0327%" height="15" fill="rgb(236,139,6)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="911.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,236 samples, 4.03%)</title><rect x="61.5436%" y="885" width="4.0327%" height="15" fill="rgb(223,137,36)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="895.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,236 samples, 4.03%)</title><rect x="61.5436%" y="869" width="4.0327%" height="15" fill="rgb(226,99,2)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="879.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="853" width="4.0327%" height="15" fill="rgb(206,133,23)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="863.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on (4,236 samples, 4.03%)</title><rect x="61.5436%" y="837" width="4.0327%" height="15" fill="rgb(243,173,15)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="847.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="821" width="4.0327%" height="15" fill="rgb(228,69,28)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="831.50">asyn..</text></g><g><title>async_io::driver::block_on (4,236 samples, 4.03%)</title><rect x="61.5436%" y="805" width="4.0327%" height="15" fill="rgb(212,51,22)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="815.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,236 samples, 4.03%)</title><rect x="61.5436%" y="789" width="4.0327%" height="15" fill="rgb(227,113,0)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="799.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,236 samples, 4.03%)</title><rect x="61.5436%" y="773" width="4.0327%" height="15" fill="rgb(252,84,27)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="783.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="757" width="4.0327%" height="15" fill="rgb(223,145,39)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="767.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,236 samples, 4.03%)</title><rect x="61.5436%" y="741" width="4.0327%" height="15" fill="rgb(239,219,30)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="751.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,236 samples, 4.03%)</title><rect x="61.5436%" y="725" width="4.0327%" height="15" fill="rgb(224,196,39)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="735.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="709" width="4.0327%" height="15" fill="rgb(205,35,43)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="719.50">asyn..</text></g><g><title>async_task::runnable::Runnable::run (4,236 samples, 4.03%)</title><rect x="61.5436%" y="693" width="4.0327%" height="15" fill="rgb(228,201,21)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="703.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,236 samples, 4.03%)</title><rect x="61.5436%" y="677" width="4.0327%" height="15" fill="rgb(237,118,16)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="687.50">asyn..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,236 samples, 4.03%)</title><rect x="61.5436%" y="661" width="4.0327%" height="15" fill="rgb(241,17,19)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="671.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,236 samples, 4.03%)</title><rect x="61.5436%" y="645" width="4.0327%" height="15" fill="rgb(214,10,25)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="655.50">&lt;cor..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="629" width="4.0327%" height="15" fill="rgb(238,37,29)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="639.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,236 samples, 4.03%)</title><rect x="61.5436%" y="613" width="4.0327%" height="15" fill="rgb(253,83,25)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="623.50">&lt;asy..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,236 samples, 4.03%)</title><rect x="61.5436%" y="597" width="4.0327%" height="15" fill="rgb(234,192,12)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="607.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,236 samples, 4.03%)</title><rect x="61.5436%" y="581" width="4.0327%" height="15" fill="rgb(241,216,45)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="591.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,236 samples, 4.03%)</title><rect x="61.5436%" y="565" width="4.0327%" height="15" fill="rgb(242,22,33)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="575.50">std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="549" width="4.0327%" height="15" fill="rgb(231,105,49)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="559.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="533" width="4.0327%" height="15" fill="rgb(218,204,15)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="543.50">&lt;asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,236 samples, 4.03%)</title><rect x="61.5436%" y="517" width="4.0327%" height="15" fill="rgb(235,138,41)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="527.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="501" width="4.0327%" height="15" fill="rgb(246,0,9)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="511.50">trem..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,236 samples, 4.03%)</title><rect x="61.5436%" y="485" width="4.0327%" height="15" fill="rgb(210,74,4)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="495.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,236 samples, 4.03%)</title><rect x="61.5436%" y="469" width="4.0327%" height="15" fill="rgb(250,60,41)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="479.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (4,236 samples, 4.03%)</title><rect x="61.5436%" y="453" width="4.0327%" height="15" fill="rgb(220,115,12)" fg:x="64646" fg:w="4236"/><text x="61.7936%" y="463.50">&lt;tre..</text></g><g><title>tremor_common::time::nanotime (814 samples, 0.77%)</title><rect x="64.8014%" y="437" width="0.7749%" height="15" fill="rgb(237,100,13)" fg:x="68068" fg:w="814"/><text x="65.0514%" y="447.50"></text></g><g><title>std::time::SystemTime::now (647 samples, 0.62%)</title><rect x="64.9603%" y="421" width="0.6159%" height="15" fill="rgb(213,55,26)" fg:x="68235" fg:w="647"/><text x="65.2103%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (647 samples, 0.62%)</title><rect x="64.9603%" y="405" width="0.6159%" height="15" fill="rgb(216,17,4)" fg:x="68235" fg:w="647"/><text x="65.2103%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::now (647 samples, 0.62%)</title><rect x="64.9603%" y="389" width="0.6159%" height="15" fill="rgb(220,153,47)" fg:x="68235" fg:w="647"/><text x="65.2103%" y="399.50"></text></g><g><title>__clock_gettime_2 (647 samples, 0.62%)</title><rect x="64.9603%" y="373" width="0.6159%" height="15" fill="rgb(215,131,9)" fg:x="68235" fg:w="647"/><text x="65.2103%" y="383.50"></text></g><g><title>__vdso_clock_gettime (647 samples, 0.62%)</title><rect x="64.9603%" y="357" width="0.6159%" height="15" fill="rgb(233,46,42)" fg:x="68235" fg:w="647"/><text x="65.2103%" y="367.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (58 samples, 0.06%)</title><rect x="65.5763%" y="1157" width="0.0552%" height="15" fill="rgb(226,86,7)" fg:x="68882" fg:w="58"/><text x="65.8263%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (834 samples, 0.79%)</title><rect x="65.7248%" y="581" width="0.7940%" height="15" fill="rgb(239,226,21)" fg:x="69038" fg:w="834"/><text x="65.9748%" y="591.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (886 samples, 0.84%)</title><rect x="65.6810%" y="597" width="0.8435%" height="15" fill="rgb(244,137,22)" fg:x="68992" fg:w="886"/><text x="65.9310%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (430 samples, 0.41%)</title><rect x="66.5245%" y="597" width="0.4094%" height="15" fill="rgb(211,139,35)" fg:x="69878" fg:w="430"/><text x="66.7745%" y="607.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,350 samples, 1.29%)</title><rect x="65.6496%" y="613" width="1.2852%" height="15" fill="rgb(214,62,50)" fg:x="68959" fg:w="1350"/><text x="65.8996%" y="623.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,389 samples, 1.32%)</title><rect x="65.6315%" y="645" width="1.3223%" height="15" fill="rgb(212,113,44)" fg:x="68940" fg:w="1389"/><text x="65.8815%" y="655.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,389 samples, 1.32%)</title><rect x="65.6315%" y="629" width="1.3223%" height="15" fill="rgb(226,150,43)" fg:x="68940" fg:w="1389"/><text x="65.8815%" y="639.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 0.02%)</title><rect x="66.9348%" y="613" width="0.0190%" height="15" fill="rgb(250,71,37)" fg:x="70309" fg:w="20"/><text x="67.1848%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="67.0662%" y="453" width="0.0257%" height="15" fill="rgb(219,76,19)" fg:x="70447" fg:w="27"/><text x="67.3162%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (25 samples, 0.02%)</title><rect x="67.0681%" y="437" width="0.0238%" height="15" fill="rgb(250,39,11)" fg:x="70449" fg:w="25"/><text x="67.3181%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,554 samples, 1.48%)</title><rect x="65.6315%" y="661" width="1.4794%" height="15" fill="rgb(230,64,31)" fg:x="68940" fg:w="1554"/><text x="65.8815%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (165 samples, 0.16%)</title><rect x="66.9539%" y="645" width="0.1571%" height="15" fill="rgb(208,222,23)" fg:x="70329" fg:w="165"/><text x="67.2039%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (165 samples, 0.16%)</title><rect x="66.9539%" y="629" width="0.1571%" height="15" fill="rgb(227,125,18)" fg:x="70329" fg:w="165"/><text x="67.2039%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (165 samples, 0.16%)</title><rect x="66.9539%" y="613" width="0.1571%" height="15" fill="rgb(234,210,9)" fg:x="70329" fg:w="165"/><text x="67.2039%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (165 samples, 0.16%)</title><rect x="66.9539%" y="597" width="0.1571%" height="15" fill="rgb(217,127,24)" fg:x="70329" fg:w="165"/><text x="67.2039%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (165 samples, 0.16%)</title><rect x="66.9539%" y="581" width="0.1571%" height="15" fill="rgb(239,141,48)" fg:x="70329" fg:w="165"/><text x="67.2039%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (164 samples, 0.16%)</title><rect x="66.9548%" y="565" width="0.1561%" height="15" fill="rgb(227,109,8)" fg:x="70330" fg:w="164"/><text x="67.2048%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (164 samples, 0.16%)</title><rect x="66.9548%" y="549" width="0.1561%" height="15" fill="rgb(235,184,23)" fg:x="70330" fg:w="164"/><text x="67.2048%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (164 samples, 0.16%)</title><rect x="66.9548%" y="533" width="0.1561%" height="15" fill="rgb(227,226,48)" fg:x="70330" fg:w="164"/><text x="67.2048%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (164 samples, 0.16%)</title><rect x="66.9548%" y="517" width="0.1561%" height="15" fill="rgb(206,150,11)" fg:x="70330" fg:w="164"/><text x="67.2048%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (164 samples, 0.16%)</title><rect x="66.9548%" y="501" width="0.1561%" height="15" fill="rgb(254,2,33)" fg:x="70330" fg:w="164"/><text x="67.2048%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (47 samples, 0.04%)</title><rect x="67.0662%" y="485" width="0.0447%" height="15" fill="rgb(243,160,20)" fg:x="70447" fg:w="47"/><text x="67.3162%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (47 samples, 0.04%)</title><rect x="67.0662%" y="469" width="0.0447%" height="15" fill="rgb(218,208,30)" fg:x="70447" fg:w="47"/><text x="67.3162%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (20 samples, 0.02%)</title><rect x="67.0919%" y="453" width="0.0190%" height="15" fill="rgb(224,120,49)" fg:x="70474" fg:w="20"/><text x="67.3419%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="67.0919%" y="437" width="0.0190%" height="15" fill="rgb(246,12,2)" fg:x="70474" fg:w="20"/><text x="67.3419%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (17 samples, 0.02%)</title><rect x="67.0948%" y="421" width="0.0162%" height="15" fill="rgb(236,117,3)" fg:x="70477" fg:w="17"/><text x="67.3448%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::empty (11 samples, 0.01%)</title><rect x="67.1385%" y="373" width="0.0105%" height="15" fill="rgb(216,128,52)" fg:x="70523" fg:w="11"/><text x="67.3885%" y="383.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (11 samples, 0.01%)</title><rect x="67.1385%" y="357" width="0.0105%" height="15" fill="rgb(246,145,19)" fg:x="70523" fg:w="11"/><text x="67.3885%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (206 samples, 0.20%)</title><rect x="67.1186%" y="421" width="0.1961%" height="15" fill="rgb(222,11,46)" fg:x="70502" fg:w="206"/><text x="67.3686%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (206 samples, 0.20%)</title><rect x="67.1186%" y="405" width="0.1961%" height="15" fill="rgb(245,82,36)" fg:x="70502" fg:w="206"/><text x="67.3686%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (199 samples, 0.19%)</title><rect x="67.1252%" y="389" width="0.1894%" height="15" fill="rgb(250,73,51)" fg:x="70509" fg:w="199"/><text x="67.3752%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (174 samples, 0.17%)</title><rect x="67.1490%" y="373" width="0.1656%" height="15" fill="rgb(221,189,23)" fg:x="70534" fg:w="174"/><text x="67.3990%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (174 samples, 0.17%)</title><rect x="67.1490%" y="357" width="0.1656%" height="15" fill="rgb(210,33,7)" fg:x="70534" fg:w="174"/><text x="67.3990%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (218 samples, 0.21%)</title><rect x="67.1109%" y="645" width="0.2075%" height="15" fill="rgb(210,107,22)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (218 samples, 0.21%)</title><rect x="67.1109%" y="629" width="0.2075%" height="15" fill="rgb(222,116,37)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (218 samples, 0.21%)</title><rect x="67.1109%" y="613" width="0.2075%" height="15" fill="rgb(254,17,48)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (218 samples, 0.21%)</title><rect x="67.1109%" y="597" width="0.2075%" height="15" fill="rgb(224,36,32)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="607.50"></text></g><g><title>value_trait::Builder::object (218 samples, 0.21%)</title><rect x="67.1109%" y="581" width="0.2075%" height="15" fill="rgb(232,90,46)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (218 samples, 0.21%)</title><rect x="67.1109%" y="565" width="0.2075%" height="15" fill="rgb(241,66,40)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (218 samples, 0.21%)</title><rect x="67.1109%" y="549" width="0.2075%" height="15" fill="rgb(249,184,29)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (218 samples, 0.21%)</title><rect x="67.1109%" y="533" width="0.2075%" height="15" fill="rgb(231,181,1)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (218 samples, 0.21%)</title><rect x="67.1109%" y="517" width="0.2075%" height="15" fill="rgb(224,94,2)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (218 samples, 0.21%)</title><rect x="67.1109%" y="501" width="0.2075%" height="15" fill="rgb(229,170,15)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="511.50"></text></g><g><title>alloc::alloc::alloc (218 samples, 0.21%)</title><rect x="67.1109%" y="485" width="0.2075%" height="15" fill="rgb(240,127,35)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="495.50"></text></g><g><title>__rg_alloc (218 samples, 0.21%)</title><rect x="67.1109%" y="469" width="0.2075%" height="15" fill="rgb(248,196,34)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (218 samples, 0.21%)</title><rect x="67.1109%" y="453" width="0.2075%" height="15" fill="rgb(236,137,7)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="463.50"></text></g><g><title>rust_alloc (218 samples, 0.21%)</title><rect x="67.1109%" y="437" width="0.2075%" height="15" fill="rgb(235,127,16)" fg:x="70494" fg:w="218"/><text x="67.3609%" y="447.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="67.3185%" y="501" width="0.0105%" height="15" fill="rgb(250,192,54)" fg:x="70712" fg:w="11"/><text x="67.5685%" y="511.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="67.3366%" y="469" width="0.0133%" height="15" fill="rgb(218,98,20)" fg:x="70731" fg:w="14"/><text x="67.5866%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (12 samples, 0.01%)</title><rect x="67.3642%" y="453" width="0.0114%" height="15" fill="rgb(230,176,47)" fg:x="70760" fg:w="12"/><text x="67.6142%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (12 samples, 0.01%)</title><rect x="67.3642%" y="437" width="0.0114%" height="15" fill="rgb(244,2,33)" fg:x="70760" fg:w="12"/><text x="67.6142%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.09%)</title><rect x="67.3356%" y="501" width="0.0866%" height="15" fill="rgb(231,100,17)" fg:x="70730" fg:w="91"/><text x="67.5856%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.09%)</title><rect x="67.3356%" y="485" width="0.0866%" height="15" fill="rgb(245,23,12)" fg:x="70730" fg:w="91"/><text x="67.5856%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="67.3499%" y="469" width="0.0724%" height="15" fill="rgb(249,55,22)" fg:x="70745" fg:w="76"/><text x="67.5999%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (49 samples, 0.05%)</title><rect x="67.3756%" y="453" width="0.0466%" height="15" fill="rgb(207,134,9)" fg:x="70772" fg:w="49"/><text x="67.6256%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (49 samples, 0.05%)</title><rect x="67.3756%" y="437" width="0.0466%" height="15" fill="rgb(218,134,0)" fg:x="70772" fg:w="49"/><text x="67.6256%" y="447.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,886 samples, 1.80%)</title><rect x="65.6315%" y="1157" width="1.7955%" height="15" fill="rgb(213,212,33)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="1167.50">s..</text></g><g><title>core::ops::function::FnOnce::call_once (1,886 samples, 1.80%)</title><rect x="65.6315%" y="1141" width="1.7955%" height="15" fill="rgb(252,106,18)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="1151.50">c..</text></g><g><title>async_global_executor::threading::thread_main_loop (1,886 samples, 1.80%)</title><rect x="65.6315%" y="1125" width="1.7955%" height="15" fill="rgb(208,126,42)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="1135.50">a..</text></g><g><title>std::panic::catch_unwind (1,886 samples, 1.80%)</title><rect x="65.6315%" y="1109" width="1.7955%" height="15" fill="rgb(246,175,29)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="1119.50">s..</text></g><g><title>std::panicking::try (1,886 samples, 1.80%)</title><rect x="65.6315%" y="1093" width="1.7955%" height="15" fill="rgb(215,13,50)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="1103.50">s..</text></g><g><title>std::panicking::try::do_call (1,886 samples, 1.80%)</title><rect x="65.6315%" y="1077" width="1.7955%" height="15" fill="rgb(216,172,15)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="1087.50">s..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (1,886 samples, 1.80%)</title><rect x="65.6315%" y="1061" width="1.7955%" height="15" fill="rgb(212,103,13)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="1071.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,886 samples, 1.80%)</title><rect x="65.6315%" y="1045" width="1.7955%" height="15" fill="rgb(231,171,36)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="1055.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,886 samples, 1.80%)</title><rect x="65.6315%" y="1029" width="1.7955%" height="15" fill="rgb(250,123,20)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="1039.50">s..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (1,886 samples, 1.80%)</title><rect x="65.6315%" y="1013" width="1.7955%" height="15" fill="rgb(212,53,50)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="1023.50">a..</text></g><g><title>async_global_executor::reactor::block_on (1,886 samples, 1.80%)</title><rect x="65.6315%" y="997" width="1.7955%" height="15" fill="rgb(243,54,12)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="1007.50">a..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,886 samples, 1.80%)</title><rect x="65.6315%" y="981" width="1.7955%" height="15" fill="rgb(234,101,34)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="991.50">a..</text></g><g><title>async_io::driver::block_on (1,886 samples, 1.80%)</title><rect x="65.6315%" y="965" width="1.7955%" height="15" fill="rgb(254,67,22)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="975.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,886 samples, 1.80%)</title><rect x="65.6315%" y="949" width="1.7955%" height="15" fill="rgb(250,35,47)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="959.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,886 samples, 1.80%)</title><rect x="65.6315%" y="933" width="1.7955%" height="15" fill="rgb(226,126,38)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="943.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}} (1,886 samples, 1.80%)</title><rect x="65.6315%" y="917" width="1.7955%" height="15" fill="rgb(216,138,53)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="927.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,886 samples, 1.80%)</title><rect x="65.6315%" y="901" width="1.7955%" height="15" fill="rgb(246,199,43)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="911.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,886 samples, 1.80%)</title><rect x="65.6315%" y="885" width="1.7955%" height="15" fill="rgb(232,125,11)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="895.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,886 samples, 1.80%)</title><rect x="65.6315%" y="869" width="1.7955%" height="15" fill="rgb(218,219,45)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="879.50">a..</text></g><g><title>async_task::runnable::Runnable::run (1,886 samples, 1.80%)</title><rect x="65.6315%" y="853" width="1.7955%" height="15" fill="rgb(216,102,54)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="863.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,886 samples, 1.80%)</title><rect x="65.6315%" y="837" width="1.7955%" height="15" fill="rgb(250,228,7)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="847.50">a..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,886 samples, 1.80%)</title><rect x="65.6315%" y="821" width="1.7955%" height="15" fill="rgb(226,125,25)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="831.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,886 samples, 1.80%)</title><rect x="65.6315%" y="805" width="1.7955%" height="15" fill="rgb(224,165,27)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="815.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,886 samples, 1.80%)</title><rect x="65.6315%" y="789" width="1.7955%" height="15" fill="rgb(233,86,3)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="799.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,886 samples, 1.80%)</title><rect x="65.6315%" y="773" width="1.7955%" height="15" fill="rgb(228,116,20)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="783.50">&lt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,886 samples, 1.80%)</title><rect x="65.6315%" y="757" width="1.7955%" height="15" fill="rgb(209,192,17)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="767.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,886 samples, 1.80%)</title><rect x="65.6315%" y="741" width="1.7955%" height="15" fill="rgb(224,88,34)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="751.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,886 samples, 1.80%)</title><rect x="65.6315%" y="725" width="1.7955%" height="15" fill="rgb(233,38,6)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="735.50">s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,886 samples, 1.80%)</title><rect x="65.6315%" y="709" width="1.7955%" height="15" fill="rgb(212,59,30)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="719.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,886 samples, 1.80%)</title><rect x="65.6315%" y="693" width="1.7955%" height="15" fill="rgb(213,80,3)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="703.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,886 samples, 1.80%)</title><rect x="65.6315%" y="677" width="1.7955%" height="15" fill="rgb(251,178,7)" fg:x="68940" fg:w="1886"/><text x="65.8815%" y="687.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (332 samples, 0.32%)</title><rect x="67.1109%" y="661" width="0.3161%" height="15" fill="rgb(213,154,26)" fg:x="70494" fg:w="332"/><text x="67.3609%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (114 samples, 0.11%)</title><rect x="67.3185%" y="645" width="0.1085%" height="15" fill="rgb(238,165,49)" fg:x="70712" fg:w="114"/><text x="67.5685%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (114 samples, 0.11%)</title><rect x="67.3185%" y="629" width="0.1085%" height="15" fill="rgb(248,91,46)" fg:x="70712" fg:w="114"/><text x="67.5685%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (114 samples, 0.11%)</title><rect x="67.3185%" y="613" width="0.1085%" height="15" fill="rgb(244,21,52)" fg:x="70712" fg:w="114"/><text x="67.5685%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (114 samples, 0.11%)</title><rect x="67.3185%" y="597" width="0.1085%" height="15" fill="rgb(247,122,20)" fg:x="70712" fg:w="114"/><text x="67.5685%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (114 samples, 0.11%)</title><rect x="67.3185%" y="581" width="0.1085%" height="15" fill="rgb(218,27,9)" fg:x="70712" fg:w="114"/><text x="67.5685%" y="591.50"></text></g><g><title>alloc::alloc::alloc (114 samples, 0.11%)</title><rect x="67.3185%" y="565" width="0.1085%" height="15" fill="rgb(246,7,6)" fg:x="70712" fg:w="114"/><text x="67.5685%" y="575.50"></text></g><g><title>__rg_alloc (114 samples, 0.11%)</title><rect x="67.3185%" y="549" width="0.1085%" height="15" fill="rgb(227,135,54)" fg:x="70712" fg:w="114"/><text x="67.5685%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (114 samples, 0.11%)</title><rect x="67.3185%" y="533" width="0.1085%" height="15" fill="rgb(247,14,11)" fg:x="70712" fg:w="114"/><text x="67.5685%" y="543.50"></text></g><g><title>rust_alloc (114 samples, 0.11%)</title><rect x="67.3185%" y="517" width="0.1085%" height="15" fill="rgb(206,149,34)" fg:x="70712" fg:w="114"/><text x="67.5685%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="67.5984%" y="933" width="0.0162%" height="15" fill="rgb(227,228,4)" fg:x="71006" fg:w="17"/><text x="67.8484%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (17 samples, 0.02%)</title><rect x="67.5984%" y="917" width="0.0162%" height="15" fill="rgb(238,218,28)" fg:x="71006" fg:w="17"/><text x="67.8484%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.02%)</title><rect x="67.5984%" y="901" width="0.0162%" height="15" fill="rgb(252,86,40)" fg:x="71006" fg:w="17"/><text x="67.8484%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.02%)</title><rect x="67.5984%" y="885" width="0.0162%" height="15" fill="rgb(251,225,11)" fg:x="71006" fg:w="17"/><text x="67.8484%" y="895.50"></text></g><g><title>__x64_sys_futex (48 samples, 0.05%)</title><rect x="67.6660%" y="773" width="0.0457%" height="15" fill="rgb(206,46,49)" fg:x="71077" fg:w="48"/><text x="67.9160%" y="783.50"></text></g><g><title>do_futex (37 samples, 0.04%)</title><rect x="67.6764%" y="757" width="0.0352%" height="15" fill="rgb(245,128,24)" fg:x="71088" fg:w="37"/><text x="67.9264%" y="767.50"></text></g><g><title>futex_wake (36 samples, 0.03%)</title><rect x="67.6774%" y="741" width="0.0343%" height="15" fill="rgb(219,177,34)" fg:x="71089" fg:w="36"/><text x="67.9274%" y="751.50"></text></g><g><title>syscall_exit_to_user_mode (64 samples, 0.06%)</title><rect x="67.7136%" y="773" width="0.0609%" height="15" fill="rgb(218,60,48)" fg:x="71127" fg:w="64"/><text x="67.9636%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (130 samples, 0.12%)</title><rect x="67.6574%" y="805" width="0.1238%" height="15" fill="rgb(221,11,5)" fg:x="71068" fg:w="130"/><text x="67.9074%" y="815.50"></text></g><g><title>do_syscall_64 (127 samples, 0.12%)</title><rect x="67.6602%" y="789" width="0.1209%" height="15" fill="rgb(220,148,13)" fg:x="71071" fg:w="127"/><text x="67.9102%" y="799.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (169 samples, 0.16%)</title><rect x="67.6241%" y="837" width="0.1609%" height="15" fill="rgb(210,16,3)" fg:x="71033" fg:w="169"/><text x="67.8741%" y="847.50"></text></g><g><title>__GI___lll_lock_wake (147 samples, 0.14%)</title><rect x="67.6450%" y="821" width="0.1399%" height="15" fill="rgb(236,80,2)" fg:x="71055" fg:w="147"/><text x="67.8950%" y="831.50"></text></g><g><title>core::mem::drop (172 samples, 0.16%)</title><rect x="67.6222%" y="933" width="0.1637%" height="15" fill="rgb(239,129,19)" fg:x="71031" fg:w="172"/><text x="67.8722%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (172 samples, 0.16%)</title><rect x="67.6222%" y="917" width="0.1637%" height="15" fill="rgb(220,106,35)" fg:x="71031" fg:w="172"/><text x="67.8722%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (172 samples, 0.16%)</title><rect x="67.6222%" y="901" width="0.1637%" height="15" fill="rgb(252,139,45)" fg:x="71031" fg:w="172"/><text x="67.8722%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (172 samples, 0.16%)</title><rect x="67.6222%" y="885" width="0.1637%" height="15" fill="rgb(229,8,36)" fg:x="71031" fg:w="172"/><text x="67.8722%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (170 samples, 0.16%)</title><rect x="67.6241%" y="869" width="0.1618%" height="15" fill="rgb(230,126,33)" fg:x="71033" fg:w="170"/><text x="67.8741%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (170 samples, 0.16%)</title><rect x="67.6241%" y="853" width="0.1618%" height="15" fill="rgb(239,140,21)" fg:x="71033" fg:w="170"/><text x="67.8741%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (18 samples, 0.02%)</title><rect x="67.7859%" y="933" width="0.0171%" height="15" fill="rgb(254,104,9)" fg:x="71203" fg:w="18"/><text x="68.0359%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (18 samples, 0.02%)</title><rect x="67.7859%" y="917" width="0.0171%" height="15" fill="rgb(239,52,14)" fg:x="71203" fg:w="18"/><text x="68.0359%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="67.7859%" y="901" width="0.0171%" height="15" fill="rgb(208,227,44)" fg:x="71203" fg:w="18"/><text x="68.0359%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.02%)</title><rect x="67.7859%" y="885" width="0.0171%" height="15" fill="rgb(246,18,19)" fg:x="71203" fg:w="18"/><text x="68.0359%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (18 samples, 0.02%)</title><rect x="67.7859%" y="869" width="0.0171%" height="15" fill="rgb(235,228,25)" fg:x="71203" fg:w="18"/><text x="68.0359%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="67.7859%" y="853" width="0.0171%" height="15" fill="rgb(240,156,20)" fg:x="71203" fg:w="18"/><text x="68.0359%" y="863.50"></text></g><g><title>__perf_event_task_sched_out (26 samples, 0.02%)</title><rect x="68.0125%" y="709" width="0.0248%" height="15" fill="rgb(224,8,20)" fg:x="71441" fg:w="26"/><text x="68.2625%" y="719.50"></text></g><g><title>update_cfs_group (13 samples, 0.01%)</title><rect x="68.0925%" y="677" width="0.0124%" height="15" fill="rgb(214,12,52)" fg:x="71525" fg:w="13"/><text x="68.3425%" y="687.50"></text></g><g><title>__calc_delta (11 samples, 0.01%)</title><rect x="68.1210%" y="661" width="0.0105%" height="15" fill="rgb(211,220,47)" fg:x="71555" fg:w="11"/><text x="68.3710%" y="671.50"></text></g><g><title>cpuacct_charge (18 samples, 0.02%)</title><rect x="68.1372%" y="661" width="0.0171%" height="15" fill="rgb(250,173,5)" fg:x="71572" fg:w="18"/><text x="68.3872%" y="671.50"></text></g><g><title>update_curr (58 samples, 0.06%)</title><rect x="68.1048%" y="677" width="0.0552%" height="15" fill="rgb(250,125,52)" fg:x="71538" fg:w="58"/><text x="68.3548%" y="687.50"></text></g><g><title>__update_load_avg_cfs_rq (11 samples, 0.01%)</title><rect x="68.1658%" y="661" width="0.0105%" height="15" fill="rgb(209,133,18)" fg:x="71602" fg:w="11"/><text x="68.4158%" y="671.50"></text></g><g><title>dequeue_entity (118 samples, 0.11%)</title><rect x="68.0696%" y="693" width="0.1123%" height="15" fill="rgb(216,173,22)" fg:x="71501" fg:w="118"/><text x="68.3196%" y="703.50"></text></g><g><title>update_load_avg (23 samples, 0.02%)</title><rect x="68.1601%" y="677" width="0.0219%" height="15" fill="rgb(205,3,22)" fg:x="71596" fg:w="23"/><text x="68.4101%" y="687.50"></text></g><g><title>dequeue_task_fair (155 samples, 0.15%)</title><rect x="68.0391%" y="709" width="0.1476%" height="15" fill="rgb(248,22,20)" fg:x="71469" fg:w="155"/><text x="68.2891%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (31 samples, 0.03%)</title><rect x="68.2181%" y="677" width="0.0295%" height="15" fill="rgb(233,6,29)" fg:x="71657" fg:w="31"/><text x="68.4681%" y="687.50"></text></g><g><title>native_write_msr (30 samples, 0.03%)</title><rect x="68.2191%" y="661" width="0.0286%" height="15" fill="rgb(240,22,54)" fg:x="71658" fg:w="30"/><text x="68.4691%" y="671.50"></text></g><g><title>__perf_event_task_sched_in (38 samples, 0.04%)</title><rect x="68.2162%" y="693" width="0.0362%" height="15" fill="rgb(231,133,32)" fg:x="71655" fg:w="38"/><text x="68.4662%" y="703.50"></text></g><g><title>finish_task_switch.isra.0 (71 samples, 0.07%)</title><rect x="68.1867%" y="709" width="0.0676%" height="15" fill="rgb(248,193,4)" fg:x="71624" fg:w="71"/><text x="68.4367%" y="719.50"></text></g><g><title>pick_next_task_fair (13 samples, 0.01%)</title><rect x="68.2543%" y="709" width="0.0124%" height="15" fill="rgb(211,178,46)" fg:x="71695" fg:w="13"/><text x="68.5043%" y="719.50"></text></g><g><title>iterate_groups (15 samples, 0.01%)</title><rect x="68.2791%" y="693" width="0.0143%" height="15" fill="rgb(224,5,42)" fg:x="71721" fg:w="15"/><text x="68.5291%" y="703.50"></text></g><g><title>psi_group_change (49 samples, 0.05%)</title><rect x="68.2943%" y="693" width="0.0466%" height="15" fill="rgb(239,176,25)" fg:x="71737" fg:w="49"/><text x="68.5443%" y="703.50"></text></g><g><title>psi_task_switch (77 samples, 0.07%)</title><rect x="68.2733%" y="709" width="0.0733%" height="15" fill="rgb(245,187,50)" fg:x="71715" fg:w="77"/><text x="68.5233%" y="719.50"></text></g><g><title>put_prev_task_fair (15 samples, 0.01%)</title><rect x="68.3466%" y="709" width="0.0143%" height="15" fill="rgb(248,24,15)" fg:x="71792" fg:w="15"/><text x="68.5966%" y="719.50"></text></g><g><title>sched_clock_cpu (11 samples, 0.01%)</title><rect x="68.3714%" y="693" width="0.0105%" height="15" fill="rgb(205,166,13)" fg:x="71818" fg:w="11"/><text x="68.6214%" y="703.50"></text></g><g><title>futex_wait_queue (448 samples, 0.43%)</title><rect x="67.9630%" y="757" width="0.4265%" height="15" fill="rgb(208,114,23)" fg:x="71389" fg:w="448"/><text x="68.2130%" y="767.50"></text></g><g><title>schedule (436 samples, 0.42%)</title><rect x="67.9744%" y="741" width="0.4151%" height="15" fill="rgb(239,127,18)" fg:x="71401" fg:w="436"/><text x="68.2244%" y="751.50"></text></g><g><title>__schedule (430 samples, 0.41%)</title><rect x="67.9801%" y="725" width="0.4094%" height="15" fill="rgb(219,154,28)" fg:x="71407" fg:w="430"/><text x="68.2301%" y="735.50"></text></g><g><title>update_rq_clock (26 samples, 0.02%)</title><rect x="68.3647%" y="709" width="0.0248%" height="15" fill="rgb(225,157,23)" fg:x="71811" fg:w="26"/><text x="68.6147%" y="719.50"></text></g><g><title>futex_get_value_locked (14 samples, 0.01%)</title><rect x="68.3971%" y="741" width="0.0133%" height="15" fill="rgb(219,8,6)" fg:x="71845" fg:w="14"/><text x="68.6471%" y="751.50"></text></g><g><title>__get_user_nocheck_4 (12 samples, 0.01%)</title><rect x="68.3990%" y="725" width="0.0114%" height="15" fill="rgb(212,47,6)" fg:x="71847" fg:w="12"/><text x="68.6490%" y="735.50"></text></g><g><title>futex_q_lock (31 samples, 0.03%)</title><rect x="68.4104%" y="741" width="0.0295%" height="15" fill="rgb(224,190,4)" fg:x="71859" fg:w="31"/><text x="68.6604%" y="751.50"></text></g><g><title>__x64_sys_futex (555 samples, 0.53%)</title><rect x="67.9182%" y="805" width="0.5284%" height="15" fill="rgb(239,183,29)" fg:x="71342" fg:w="555"/><text x="68.1682%" y="815.50"></text></g><g><title>do_futex (546 samples, 0.52%)</title><rect x="67.9268%" y="789" width="0.5198%" height="15" fill="rgb(213,57,7)" fg:x="71351" fg:w="546"/><text x="68.1768%" y="799.50"></text></g><g><title>futex_wait (542 samples, 0.52%)</title><rect x="67.9306%" y="773" width="0.5160%" height="15" fill="rgb(216,148,1)" fg:x="71355" fg:w="542"/><text x="68.1806%" y="783.50"></text></g><g><title>futex_wait_setup (60 samples, 0.06%)</title><rect x="68.3895%" y="757" width="0.0571%" height="15" fill="rgb(236,182,29)" fg:x="71837" fg:w="60"/><text x="68.6395%" y="767.50"></text></g><g><title>__get_user_8 (11 samples, 0.01%)</title><rect x="68.5428%" y="757" width="0.0105%" height="15" fill="rgb(244,120,48)" fg:x="71998" fg:w="11"/><text x="68.7928%" y="767.50"></text></g><g><title>__rseq_handle_notify_resume (39 samples, 0.04%)</title><rect x="68.5199%" y="773" width="0.0371%" height="15" fill="rgb(206,71,34)" fg:x="71974" fg:w="39"/><text x="68.7699%" y="783.50"></text></g><g><title>exit_to_user_mode_prepare (55 samples, 0.05%)</title><rect x="68.5113%" y="789" width="0.0524%" height="15" fill="rgb(242,32,6)" fg:x="71965" fg:w="55"/><text x="68.7613%" y="799.50"></text></g><g><title>syscall_exit_to_user_mode (135 samples, 0.13%)</title><rect x="68.4495%" y="805" width="0.1285%" height="15" fill="rgb(241,35,3)" fg:x="71900" fg:w="135"/><text x="68.6995%" y="815.50"></text></g><g><title>syscall_exit_work (15 samples, 0.01%)</title><rect x="68.5637%" y="789" width="0.0143%" height="15" fill="rgb(222,62,19)" fg:x="72020" fg:w="15"/><text x="68.8137%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (705 samples, 0.67%)</title><rect x="67.9078%" y="837" width="0.6712%" height="15" fill="rgb(223,110,41)" fg:x="71331" fg:w="705"/><text x="68.1578%" y="847.50"></text></g><g><title>do_syscall_64 (701 samples, 0.67%)</title><rect x="67.9116%" y="821" width="0.6674%" height="15" fill="rgb(208,224,4)" fg:x="71335" fg:w="701"/><text x="68.1616%" y="831.50"></text></g><g><title>event_listener::Inner::lock (820 samples, 0.78%)</title><rect x="67.8030%" y="933" width="0.7806%" height="15" fill="rgb(241,137,19)" fg:x="71221" fg:w="820"/><text x="68.0530%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (819 samples, 0.78%)</title><rect x="67.8040%" y="917" width="0.7797%" height="15" fill="rgb(244,24,17)" fg:x="71222" fg:w="819"/><text x="68.0540%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (817 samples, 0.78%)</title><rect x="67.8059%" y="901" width="0.7778%" height="15" fill="rgb(245,178,49)" fg:x="71224" fg:w="817"/><text x="68.0559%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (814 samples, 0.77%)</title><rect x="67.8088%" y="885" width="0.7749%" height="15" fill="rgb(219,160,38)" fg:x="71227" fg:w="814"/><text x="68.0588%" y="895.50"></text></g><g><title>___pthread_mutex_lock (814 samples, 0.77%)</title><rect x="67.8088%" y="869" width="0.7749%" height="15" fill="rgb(228,137,14)" fg:x="71227" fg:w="814"/><text x="68.0588%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (747 samples, 0.71%)</title><rect x="67.8725%" y="853" width="0.7112%" height="15" fill="rgb(237,134,11)" fg:x="71294" fg:w="747"/><text x="68.1225%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,067 samples, 1.02%)</title><rect x="67.5860%" y="949" width="1.0158%" height="15" fill="rgb(211,126,44)" fg:x="70993" fg:w="1067"/><text x="67.8360%" y="959.50"></text></g><g><title>event_listener::List::remove (19 samples, 0.02%)</title><rect x="68.5837%" y="933" width="0.0181%" height="15" fill="rgb(226,171,33)" fg:x="72041" fg:w="19"/><text x="68.8337%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (13 samples, 0.01%)</title><rect x="68.5894%" y="917" width="0.0124%" height="15" fill="rgb(253,99,13)" fg:x="72047" fg:w="13"/><text x="68.8394%" y="927.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="68.5894%" y="901" width="0.0124%" height="15" fill="rgb(244,48,7)" fg:x="72047" fg:w="13"/><text x="68.8394%" y="911.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="68.5894%" y="885" width="0.0124%" height="15" fill="rgb(244,217,54)" fg:x="72047" fg:w="13"/><text x="68.8394%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (40 samples, 0.04%)</title><rect x="68.6361%" y="933" width="0.0381%" height="15" fill="rgb(224,15,18)" fg:x="72096" fg:w="40"/><text x="68.8861%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (61 samples, 0.06%)</title><rect x="68.7817%" y="917" width="0.0581%" height="15" fill="rgb(244,99,12)" fg:x="72249" fg:w="61"/><text x="69.0317%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (59 samples, 0.06%)</title><rect x="68.7836%" y="901" width="0.0562%" height="15" fill="rgb(233,226,8)" fg:x="72251" fg:w="59"/><text x="69.0336%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (59 samples, 0.06%)</title><rect x="68.7836%" y="885" width="0.0562%" height="15" fill="rgb(229,211,3)" fg:x="72251" fg:w="59"/><text x="69.0336%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (59 samples, 0.06%)</title><rect x="68.7836%" y="869" width="0.0562%" height="15" fill="rgb(216,140,21)" fg:x="72251" fg:w="59"/><text x="69.0336%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (224 samples, 0.21%)</title><rect x="68.8455%" y="917" width="0.2133%" height="15" fill="rgb(234,122,30)" fg:x="72316" fg:w="224"/><text x="69.0955%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (224 samples, 0.21%)</title><rect x="68.8455%" y="901" width="0.2133%" height="15" fill="rgb(236,25,46)" fg:x="72316" fg:w="224"/><text x="69.0955%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (404 samples, 0.38%)</title><rect x="69.0587%" y="917" width="0.3846%" height="15" fill="rgb(217,52,54)" fg:x="72540" fg:w="404"/><text x="69.3087%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (403 samples, 0.38%)</title><rect x="69.0597%" y="901" width="0.3837%" height="15" fill="rgb(222,29,26)" fg:x="72541" fg:w="403"/><text x="69.3097%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (824 samples, 0.78%)</title><rect x="68.6741%" y="933" width="0.7845%" height="15" fill="rgb(216,177,29)" fg:x="72136" fg:w="824"/><text x="68.9241%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (16 samples, 0.02%)</title><rect x="69.4434%" y="917" width="0.0152%" height="15" fill="rgb(247,136,51)" fg:x="72944" fg:w="16"/><text x="69.6934%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_store (16 samples, 0.02%)</title><rect x="69.4434%" y="901" width="0.0152%" height="15" fill="rgb(231,47,47)" fg:x="72944" fg:w="16"/><text x="69.6934%" y="911.50"></text></g><g><title>__x64_sys_futex (51 samples, 0.05%)</title><rect x="69.4767%" y="773" width="0.0486%" height="15" fill="rgb(211,192,36)" fg:x="72979" fg:w="51"/><text x="69.7267%" y="783.50"></text></g><g><title>do_futex (49 samples, 0.05%)</title><rect x="69.4786%" y="757" width="0.0466%" height="15" fill="rgb(229,156,32)" fg:x="72981" fg:w="49"/><text x="69.7286%" y="767.50"></text></g><g><title>futex_wake (48 samples, 0.05%)</title><rect x="69.4795%" y="741" width="0.0457%" height="15" fill="rgb(248,213,20)" fg:x="72982" fg:w="48"/><text x="69.7295%" y="751.50"></text></g><g><title>wake_up_q (32 samples, 0.03%)</title><rect x="69.4948%" y="725" width="0.0305%" height="15" fill="rgb(217,64,7)" fg:x="72998" fg:w="32"/><text x="69.7448%" y="735.50"></text></g><g><title>try_to_wake_up (31 samples, 0.03%)</title><rect x="69.4957%" y="709" width="0.0295%" height="15" fill="rgb(232,142,8)" fg:x="72999" fg:w="31"/><text x="69.7457%" y="719.50"></text></g><g><title>syscall_exit_to_user_mode (20 samples, 0.02%)</title><rect x="69.5252%" y="773" width="0.0190%" height="15" fill="rgb(224,92,44)" fg:x="73030" fg:w="20"/><text x="69.7752%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (78 samples, 0.07%)</title><rect x="69.4710%" y="917" width="0.0743%" height="15" fill="rgb(214,169,17)" fg:x="72973" fg:w="78"/><text x="69.7210%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (78 samples, 0.07%)</title><rect x="69.4710%" y="901" width="0.0743%" height="15" fill="rgb(210,59,37)" fg:x="72973" fg:w="78"/><text x="69.7210%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.07%)</title><rect x="69.4710%" y="885" width="0.0743%" height="15" fill="rgb(214,116,48)" fg:x="72973" fg:w="78"/><text x="69.7210%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (78 samples, 0.07%)</title><rect x="69.4710%" y="869" width="0.0743%" height="15" fill="rgb(244,191,6)" fg:x="72973" fg:w="78"/><text x="69.7210%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (78 samples, 0.07%)</title><rect x="69.4710%" y="853" width="0.0743%" height="15" fill="rgb(241,50,52)" fg:x="72973" fg:w="78"/><text x="69.7210%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (78 samples, 0.07%)</title><rect x="69.4710%" y="837" width="0.0743%" height="15" fill="rgb(236,75,39)" fg:x="72973" fg:w="78"/><text x="69.7210%" y="847.50"></text></g><g><title>__GI___lll_lock_wake (74 samples, 0.07%)</title><rect x="69.4748%" y="821" width="0.0704%" height="15" fill="rgb(236,99,0)" fg:x="72977" fg:w="74"/><text x="69.7248%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (73 samples, 0.07%)</title><rect x="69.4757%" y="805" width="0.0695%" height="15" fill="rgb(207,202,15)" fg:x="72978" fg:w="73"/><text x="69.7257%" y="815.50"></text></g><g><title>do_syscall_64 (72 samples, 0.07%)</title><rect x="69.4767%" y="789" width="0.0685%" height="15" fill="rgb(233,207,14)" fg:x="72979" fg:w="72"/><text x="69.7267%" y="799.50"></text></g><g><title>event_listener::Inner::lock (14 samples, 0.01%)</title><rect x="69.5538%" y="917" width="0.0133%" height="15" fill="rgb(226,27,51)" fg:x="73060" fg:w="14"/><text x="69.8038%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="69.5538%" y="901" width="0.0133%" height="15" fill="rgb(206,104,42)" fg:x="73060" fg:w="14"/><text x="69.8038%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="69.5538%" y="885" width="0.0133%" height="15" fill="rgb(212,225,4)" fg:x="73060" fg:w="14"/><text x="69.8038%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="69.5538%" y="869" width="0.0133%" height="15" fill="rgb(233,96,42)" fg:x="73060" fg:w="14"/><text x="69.8038%" y="879.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="69.5538%" y="853" width="0.0133%" height="15" fill="rgb(229,21,32)" fg:x="73060" fg:w="14"/><text x="69.8038%" y="863.50"></text></g><g><title>enqueue_task_fair (20 samples, 0.02%)</title><rect x="69.6052%" y="533" width="0.0190%" height="15" fill="rgb(226,216,24)" fg:x="73114" fg:w="20"/><text x="69.8552%" y="543.50"></text></g><g><title>enqueue_entity (17 samples, 0.02%)</title><rect x="69.6081%" y="517" width="0.0162%" height="15" fill="rgb(221,163,17)" fg:x="73117" fg:w="17"/><text x="69.8581%" y="527.50"></text></g><g><title>ttwu_do_activate (33 samples, 0.03%)</title><rect x="69.6052%" y="565" width="0.0314%" height="15" fill="rgb(216,216,42)" fg:x="73114" fg:w="33"/><text x="69.8552%" y="575.50"></text></g><g><title>enqueue_task (33 samples, 0.03%)</title><rect x="69.6052%" y="549" width="0.0314%" height="15" fill="rgb(240,118,7)" fg:x="73114" fg:w="33"/><text x="69.8552%" y="559.50"></text></g><g><title>psi_task_change (12 samples, 0.01%)</title><rect x="69.6252%" y="533" width="0.0114%" height="15" fill="rgb(221,67,37)" fg:x="73135" fg:w="12"/><text x="69.8752%" y="543.50"></text></g><g><title>__x64_sys_futex (61 samples, 0.06%)</title><rect x="69.5843%" y="645" width="0.0581%" height="15" fill="rgb(241,32,44)" fg:x="73092" fg:w="61"/><text x="69.8343%" y="655.50"></text></g><g><title>do_futex (60 samples, 0.06%)</title><rect x="69.5852%" y="629" width="0.0571%" height="15" fill="rgb(235,204,43)" fg:x="73093" fg:w="60"/><text x="69.8352%" y="639.50"></text></g><g><title>futex_wake (59 samples, 0.06%)</title><rect x="69.5862%" y="613" width="0.0562%" height="15" fill="rgb(213,116,10)" fg:x="73094" fg:w="59"/><text x="69.8362%" y="623.50"></text></g><g><title>wake_up_q (50 samples, 0.05%)</title><rect x="69.5947%" y="597" width="0.0476%" height="15" fill="rgb(239,15,48)" fg:x="73103" fg:w="50"/><text x="69.8447%" y="607.50"></text></g><g><title>try_to_wake_up (49 samples, 0.05%)</title><rect x="69.5957%" y="581" width="0.0466%" height="15" fill="rgb(207,123,36)" fg:x="73104" fg:w="49"/><text x="69.8457%" y="591.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (78 samples, 0.07%)</title><rect x="69.5785%" y="741" width="0.0743%" height="15" fill="rgb(209,103,30)" fg:x="73086" fg:w="78"/><text x="69.8285%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (78 samples, 0.07%)</title><rect x="69.5785%" y="725" width="0.0743%" height="15" fill="rgb(238,100,19)" fg:x="73086" fg:w="78"/><text x="69.8285%" y="735.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (78 samples, 0.07%)</title><rect x="69.5785%" y="709" width="0.0743%" height="15" fill="rgb(244,30,14)" fg:x="73086" fg:w="78"/><text x="69.8285%" y="719.50"></text></g><g><title>__GI___pthread_cond_signal (78 samples, 0.07%)</title><rect x="69.5785%" y="693" width="0.0743%" height="15" fill="rgb(249,174,6)" fg:x="73086" fg:w="78"/><text x="69.8285%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (72 samples, 0.07%)</title><rect x="69.5843%" y="677" width="0.0685%" height="15" fill="rgb(235,213,41)" fg:x="73092" fg:w="72"/><text x="69.8343%" y="687.50"></text></g><g><title>do_syscall_64 (72 samples, 0.07%)</title><rect x="69.5843%" y="661" width="0.0685%" height="15" fill="rgb(213,118,6)" fg:x="73092" fg:w="72"/><text x="69.8343%" y="671.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (86 samples, 0.08%)</title><rect x="69.5728%" y="789" width="0.0819%" height="15" fill="rgb(235,44,51)" fg:x="73080" fg:w="86"/><text x="69.8228%" y="799.50"></text></g><g><title>parking::Unparker::unpark (84 samples, 0.08%)</title><rect x="69.5747%" y="773" width="0.0800%" height="15" fill="rgb(217,9,53)" fg:x="73082" fg:w="84"/><text x="69.8247%" y="783.50"></text></g><g><title>parking::Inner::unpark (84 samples, 0.08%)</title><rect x="69.5747%" y="757" width="0.0800%" height="15" fill="rgb(237,172,34)" fg:x="73082" fg:w="84"/><text x="69.8247%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (88 samples, 0.08%)</title><rect x="69.5728%" y="821" width="0.0838%" height="15" fill="rgb(206,206,11)" fg:x="73080" fg:w="88"/><text x="69.8228%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (88 samples, 0.08%)</title><rect x="69.5728%" y="805" width="0.0838%" height="15" fill="rgb(214,149,29)" fg:x="73080" fg:w="88"/><text x="69.8228%" y="815.50"></text></g><g><title>async_executor::State::notify (97 samples, 0.09%)</title><rect x="69.5700%" y="837" width="0.0923%" height="15" fill="rgb(208,123,3)" fg:x="73077" fg:w="97"/><text x="69.8200%" y="847.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (101 samples, 0.10%)</title><rect x="69.5700%" y="853" width="0.0962%" height="15" fill="rgb(229,126,4)" fg:x="73077" fg:w="101"/><text x="69.8200%" y="863.50"></text></g><g><title>event_listener::List::notify (108 samples, 0.10%)</title><rect x="69.5671%" y="917" width="0.1028%" height="15" fill="rgb(222,92,36)" fg:x="73074" fg:w="108"/><text x="69.8171%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (106 samples, 0.10%)</title><rect x="69.5690%" y="901" width="0.1009%" height="15" fill="rgb(216,39,41)" fg:x="73076" fg:w="106"/><text x="69.8190%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (106 samples, 0.10%)</title><rect x="69.5690%" y="885" width="0.1009%" height="15" fill="rgb(253,127,28)" fg:x="73076" fg:w="106"/><text x="69.8190%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (105 samples, 0.10%)</title><rect x="69.5700%" y="869" width="0.1000%" height="15" fill="rgb(249,152,51)" fg:x="73077" fg:w="105"/><text x="69.8200%" y="879.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,008 samples, 1.91%)</title><rect x="68.6018%" y="949" width="1.9116%" height="15" fill="rgb(209,123,42)" fg:x="72060" fg:w="2008"/><text x="68.8518%" y="959.50">a..</text></g><g><title>event_listener::Event::notify (1,108 samples, 1.05%)</title><rect x="69.4586%" y="933" width="1.0548%" height="15" fill="rgb(241,118,22)" fg:x="72960" fg:w="1108"/><text x="69.7086%" y="943.50"></text></g><g><title>event_listener::full_fence (886 samples, 0.84%)</title><rect x="69.6699%" y="917" width="0.8435%" height="15" fill="rgb(208,25,7)" fg:x="73182" fg:w="886"/><text x="69.9199%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (882 samples, 0.84%)</title><rect x="69.6737%" y="901" width="0.8397%" height="15" fill="rgb(243,144,39)" fg:x="73186" fg:w="882"/><text x="69.9237%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (882 samples, 0.84%)</title><rect x="69.6737%" y="885" width="0.8397%" height="15" fill="rgb(250,50,5)" fg:x="73186" fg:w="882"/><text x="69.9237%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (882 samples, 0.84%)</title><rect x="69.6737%" y="869" width="0.8397%" height="15" fill="rgb(207,67,11)" fg:x="73186" fg:w="882"/><text x="69.9237%" y="879.50"></text></g><g><title>__x64_sys_futex (44 samples, 0.04%)</title><rect x="70.6086%" y="757" width="0.0419%" height="15" fill="rgb(245,204,40)" fg:x="74168" fg:w="44"/><text x="70.8586%" y="767.50"></text></g><g><title>do_futex (39 samples, 0.04%)</title><rect x="70.6134%" y="741" width="0.0371%" height="15" fill="rgb(238,228,24)" fg:x="74173" fg:w="39"/><text x="70.8634%" y="751.50"></text></g><g><title>futex_wake (37 samples, 0.04%)</title><rect x="70.6153%" y="725" width="0.0352%" height="15" fill="rgb(217,116,22)" fg:x="74175" fg:w="37"/><text x="70.8653%" y="735.50"></text></g><g><title>syscall_exit_to_user_mode (84 samples, 0.08%)</title><rect x="70.6524%" y="757" width="0.0800%" height="15" fill="rgb(234,98,12)" fg:x="74214" fg:w="84"/><text x="70.9024%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (151 samples, 0.14%)</title><rect x="70.5981%" y="789" width="0.1438%" height="15" fill="rgb(242,170,50)" fg:x="74157" fg:w="151"/><text x="70.8481%" y="799.50"></text></g><g><title>do_syscall_64 (144 samples, 0.14%)</title><rect x="70.6048%" y="773" width="0.1371%" height="15" fill="rgb(235,7,5)" fg:x="74164" fg:w="144"/><text x="70.8548%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (220 samples, 0.21%)</title><rect x="70.5363%" y="901" width="0.2094%" height="15" fill="rgb(241,114,28)" fg:x="74092" fg:w="220"/><text x="70.7863%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (220 samples, 0.21%)</title><rect x="70.5363%" y="885" width="0.2094%" height="15" fill="rgb(246,112,42)" fg:x="74092" fg:w="220"/><text x="70.7863%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (220 samples, 0.21%)</title><rect x="70.5363%" y="869" width="0.2094%" height="15" fill="rgb(248,228,14)" fg:x="74092" fg:w="220"/><text x="70.7863%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (219 samples, 0.21%)</title><rect x="70.5372%" y="853" width="0.2085%" height="15" fill="rgb(208,133,18)" fg:x="74093" fg:w="219"/><text x="70.7872%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (217 samples, 0.21%)</title><rect x="70.5391%" y="837" width="0.2066%" height="15" fill="rgb(207,35,49)" fg:x="74095" fg:w="217"/><text x="70.7891%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (217 samples, 0.21%)</title><rect x="70.5391%" y="821" width="0.2066%" height="15" fill="rgb(205,68,36)" fg:x="74095" fg:w="217"/><text x="70.7891%" y="831.50"></text></g><g><title>__GI___lll_lock_wake (173 samples, 0.16%)</title><rect x="70.5810%" y="805" width="0.1647%" height="15" fill="rgb(245,62,40)" fg:x="74139" fg:w="173"/><text x="70.8310%" y="815.50"></text></g><g><title>futex_get_value_locked (12 samples, 0.01%)</title><rect x="70.8580%" y="709" width="0.0114%" height="15" fill="rgb(228,27,24)" fg:x="74430" fg:w="12"/><text x="71.1080%" y="719.50"></text></g><g><title>__get_user_nocheck_4 (12 samples, 0.01%)</title><rect x="70.8580%" y="693" width="0.0114%" height="15" fill="rgb(253,19,12)" fg:x="74430" fg:w="12"/><text x="71.1080%" y="703.50"></text></g><g><title>futex_q_lock (12 samples, 0.01%)</title><rect x="70.8695%" y="709" width="0.0114%" height="15" fill="rgb(232,28,20)" fg:x="74442" fg:w="12"/><text x="71.1195%" y="719.50"></text></g><g><title>__x64_sys_futex (44 samples, 0.04%)</title><rect x="70.8476%" y="773" width="0.0419%" height="15" fill="rgb(218,35,51)" fg:x="74419" fg:w="44"/><text x="71.0976%" y="783.50"></text></g><g><title>do_futex (39 samples, 0.04%)</title><rect x="70.8523%" y="757" width="0.0371%" height="15" fill="rgb(212,90,40)" fg:x="74424" fg:w="39"/><text x="71.1023%" y="767.50"></text></g><g><title>futex_wait (39 samples, 0.04%)</title><rect x="70.8523%" y="741" width="0.0371%" height="15" fill="rgb(220,172,12)" fg:x="74424" fg:w="39"/><text x="71.1023%" y="751.50"></text></g><g><title>futex_wait_setup (35 samples, 0.03%)</title><rect x="70.8561%" y="725" width="0.0333%" height="15" fill="rgb(226,159,20)" fg:x="74428" fg:w="35"/><text x="71.1061%" y="735.50"></text></g><g><title>syscall_exit_to_user_mode (44 samples, 0.04%)</title><rect x="70.8895%" y="773" width="0.0419%" height="15" fill="rgb(234,205,16)" fg:x="74463" fg:w="44"/><text x="71.1395%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (95 samples, 0.09%)</title><rect x="70.8447%" y="805" width="0.0904%" height="15" fill="rgb(207,9,39)" fg:x="74416" fg:w="95"/><text x="71.0947%" y="815.50"></text></g><g><title>do_syscall_64 (94 samples, 0.09%)</title><rect x="70.8457%" y="789" width="0.0895%" height="15" fill="rgb(249,143,15)" fg:x="74417" fg:w="94"/><text x="71.0957%" y="799.50"></text></g><g><title>event_listener::Inner::lock (200 samples, 0.19%)</title><rect x="70.7457%" y="901" width="0.1904%" height="15" fill="rgb(253,133,29)" fg:x="74312" fg:w="200"/><text x="70.9957%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (199 samples, 0.19%)</title><rect x="70.7467%" y="885" width="0.1894%" height="15" fill="rgb(221,187,0)" fg:x="74313" fg:w="199"/><text x="70.9967%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (189 samples, 0.18%)</title><rect x="70.7562%" y="869" width="0.1799%" height="15" fill="rgb(205,204,26)" fg:x="74323" fg:w="189"/><text x="71.0062%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (183 samples, 0.17%)</title><rect x="70.7619%" y="853" width="0.1742%" height="15" fill="rgb(224,68,54)" fg:x="74329" fg:w="183"/><text x="71.0119%" y="863.50"></text></g><g><title>___pthread_mutex_lock (183 samples, 0.17%)</title><rect x="70.7619%" y="837" width="0.1742%" height="15" fill="rgb(209,67,4)" fg:x="74329" fg:w="183"/><text x="71.0119%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (131 samples, 0.12%)</title><rect x="70.8114%" y="821" width="0.1247%" height="15" fill="rgb(228,229,18)" fg:x="74381" fg:w="131"/><text x="71.0614%" y="831.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (430 samples, 0.41%)</title><rect x="70.5344%" y="917" width="0.4094%" height="15" fill="rgb(231,89,13)" fg:x="74090" fg:w="430"/><text x="70.7844%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (470 samples, 0.45%)</title><rect x="70.5163%" y="949" width="0.4474%" height="15" fill="rgb(210,182,18)" fg:x="74071" fg:w="470"/><text x="70.7663%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (452 samples, 0.43%)</title><rect x="70.5334%" y="933" width="0.4303%" height="15" fill="rgb(240,105,2)" fg:x="74089" fg:w="452"/><text x="70.7834%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (21 samples, 0.02%)</title><rect x="70.9437%" y="917" width="0.0200%" height="15" fill="rgb(207,170,50)" fg:x="74520" fg:w="21"/><text x="71.1937%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="70.9437%" y="901" width="0.0200%" height="15" fill="rgb(232,133,24)" fg:x="74520" fg:w="21"/><text x="71.1937%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (21 samples, 0.02%)</title><rect x="70.9437%" y="885" width="0.0200%" height="15" fill="rgb(235,166,27)" fg:x="74520" fg:w="21"/><text x="71.1937%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (21 samples, 0.02%)</title><rect x="70.9437%" y="869" width="0.0200%" height="15" fill="rgb(209,19,13)" fg:x="74520" fg:w="21"/><text x="71.1937%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="70.9685%" y="933" width="0.0248%" height="15" fill="rgb(226,79,39)" fg:x="74546" fg:w="26"/><text x="71.2185%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (26 samples, 0.02%)</title><rect x="70.9685%" y="917" width="0.0248%" height="15" fill="rgb(222,163,10)" fg:x="74546" fg:w="26"/><text x="71.2185%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (26 samples, 0.02%)</title><rect x="70.9685%" y="901" width="0.0248%" height="15" fill="rgb(214,44,19)" fg:x="74546" fg:w="26"/><text x="71.2185%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (22 samples, 0.02%)</title><rect x="70.9942%" y="853" width="0.0209%" height="15" fill="rgb(210,217,13)" fg:x="74573" fg:w="22"/><text x="71.2442%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (24 samples, 0.02%)</title><rect x="70.9932%" y="933" width="0.0228%" height="15" fill="rgb(237,61,54)" fg:x="74572" fg:w="24"/><text x="71.2432%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (24 samples, 0.02%)</title><rect x="70.9932%" y="917" width="0.0228%" height="15" fill="rgb(226,184,24)" fg:x="74572" fg:w="24"/><text x="71.2432%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="70.9932%" y="901" width="0.0228%" height="15" fill="rgb(223,226,4)" fg:x="74572" fg:w="24"/><text x="71.2432%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (23 samples, 0.02%)</title><rect x="70.9942%" y="885" width="0.0219%" height="15" fill="rgb(210,26,41)" fg:x="74573" fg:w="23"/><text x="71.2442%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (23 samples, 0.02%)</title><rect x="70.9942%" y="869" width="0.0219%" height="15" fill="rgb(220,221,6)" fg:x="74573" fg:w="23"/><text x="71.2442%" y="879.50"></text></g><g><title>event_listener::Inner::lock (35 samples, 0.03%)</title><rect x="71.0170%" y="933" width="0.0333%" height="15" fill="rgb(225,89,49)" fg:x="74597" fg:w="35"/><text x="71.2670%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (35 samples, 0.03%)</title><rect x="71.0170%" y="917" width="0.0333%" height="15" fill="rgb(218,70,45)" fg:x="74597" fg:w="35"/><text x="71.2670%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (34 samples, 0.03%)</title><rect x="71.0180%" y="901" width="0.0324%" height="15" fill="rgb(238,166,21)" fg:x="74598" fg:w="34"/><text x="71.2680%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (34 samples, 0.03%)</title><rect x="71.0180%" y="885" width="0.0324%" height="15" fill="rgb(224,141,44)" fg:x="74598" fg:w="34"/><text x="71.2680%" y="895.50"></text></g><g><title>___pthread_mutex_lock (33 samples, 0.03%)</title><rect x="71.0189%" y="869" width="0.0314%" height="15" fill="rgb(230,12,49)" fg:x="74599" fg:w="33"/><text x="71.2689%" y="879.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,705 samples, 3.53%)</title><rect x="67.5460%" y="965" width="3.5272%" height="15" fill="rgb(212,174,12)" fg:x="70951" fg:w="3705"/><text x="67.7960%" y="975.50">&lt;as..</text></g><g><title>event_listener::Event::listen (115 samples, 0.11%)</title><rect x="70.9637%" y="949" width="0.1095%" height="15" fill="rgb(246,67,9)" fg:x="74541" fg:w="115"/><text x="71.2137%" y="959.50"></text></g><g><title>event_listener::full_fence (21 samples, 0.02%)</title><rect x="71.0532%" y="933" width="0.0200%" height="15" fill="rgb(239,35,23)" fg:x="74635" fg:w="21"/><text x="71.3032%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (18 samples, 0.02%)</title><rect x="71.0561%" y="917" width="0.0171%" height="15" fill="rgb(211,167,0)" fg:x="74638" fg:w="18"/><text x="71.3061%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.02%)</title><rect x="71.0561%" y="901" width="0.0171%" height="15" fill="rgb(225,119,45)" fg:x="74638" fg:w="18"/><text x="71.3061%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="71.0561%" y="885" width="0.0171%" height="15" fill="rgb(210,162,6)" fg:x="74638" fg:w="18"/><text x="71.3061%" y="895.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 0.02%)</title><rect x="71.0732%" y="965" width="0.0200%" height="15" fill="rgb(208,118,35)" fg:x="74656" fg:w="21"/><text x="71.3232%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (920 samples, 0.88%)</title><rect x="71.0932%" y="965" width="0.8758%" height="15" fill="rgb(239,4,53)" fg:x="74677" fg:w="920"/><text x="71.3432%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (225 samples, 0.21%)</title><rect x="71.9786%" y="949" width="0.2142%" height="15" fill="rgb(213,130,21)" fg:x="75607" fg:w="225"/><text x="72.2286%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (639 samples, 0.61%)</title><rect x="72.1975%" y="917" width="0.6083%" height="15" fill="rgb(235,148,0)" fg:x="75837" fg:w="639"/><text x="72.4475%" y="927.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="72.8220%" y="821" width="0.0105%" height="15" fill="rgb(244,224,18)" fg:x="76493" fg:w="11"/><text x="73.0720%" y="831.50"></text></g><g><title>rust_dealloc (16 samples, 0.02%)</title><rect x="72.8554%" y="741" width="0.0152%" height="15" fill="rgb(211,214,4)" fg:x="76528" fg:w="16"/><text x="73.1054%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (20 samples, 0.02%)</title><rect x="72.9334%" y="709" width="0.0190%" height="15" fill="rgb(206,119,25)" fg:x="76610" fg:w="20"/><text x="73.1834%" y="719.50"></text></g><g><title> (20 samples, 0.02%)</title><rect x="72.9334%" y="693" width="0.0190%" height="15" fill="rgb(243,93,47)" fg:x="76610" fg:w="20"/><text x="73.1834%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (84 samples, 0.08%)</title><rect x="72.8811%" y="741" width="0.0800%" height="15" fill="rgb(224,194,6)" fg:x="76555" fg:w="84"/><text x="73.1311%" y="751.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (67 samples, 0.06%)</title><rect x="72.8972%" y="725" width="0.0638%" height="15" fill="rgb(243,229,6)" fg:x="76572" fg:w="67"/><text x="73.1472%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (140 samples, 0.13%)</title><rect x="72.8544%" y="773" width="0.1333%" height="15" fill="rgb(207,23,50)" fg:x="76527" fg:w="140"/><text x="73.1044%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (140 samples, 0.13%)</title><rect x="72.8544%" y="757" width="0.1333%" height="15" fill="rgb(253,192,32)" fg:x="76527" fg:w="140"/><text x="73.1044%" y="767.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (28 samples, 0.03%)</title><rect x="72.9610%" y="741" width="0.0267%" height="15" fill="rgb(213,21,6)" fg:x="76639" fg:w="28"/><text x="73.2110%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (147 samples, 0.14%)</title><rect x="72.8544%" y="805" width="0.1399%" height="15" fill="rgb(243,151,13)" fg:x="76527" fg:w="147"/><text x="73.1044%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (147 samples, 0.14%)</title><rect x="72.8544%" y="789" width="0.1399%" height="15" fill="rgb(233,165,41)" fg:x="76527" fg:w="147"/><text x="73.1044%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (172 samples, 0.16%)</title><rect x="72.8335%" y="821" width="0.1637%" height="15" fill="rgb(246,176,45)" fg:x="76505" fg:w="172"/><text x="73.0835%" y="831.50"></text></g><g><title>rust_dealloc (197 samples, 0.19%)</title><rect x="72.8173%" y="837" width="0.1875%" height="15" fill="rgb(217,170,52)" fg:x="76488" fg:w="197"/><text x="73.0673%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,766 samples, 5.49%)</title><rect x="67.5165%" y="981" width="5.4893%" height="15" fill="rgb(214,203,54)" fg:x="70920" fg:w="5766"/><text x="67.7665%" y="991.50">&lt;async_..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,089 samples, 1.04%)</title><rect x="71.9690%" y="965" width="1.0367%" height="15" fill="rgb(248,215,49)" fg:x="75597" fg:w="1089"/><text x="72.2190%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (854 samples, 0.81%)</title><rect x="72.1928%" y="949" width="0.8130%" height="15" fill="rgb(208,46,10)" fg:x="75832" fg:w="854"/><text x="72.4428%" y="959.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (854 samples, 0.81%)</title><rect x="72.1928%" y="933" width="0.8130%" height="15" fill="rgb(254,5,31)" fg:x="75832" fg:w="854"/><text x="72.4428%" y="943.50"></text></g><g><title>alloc::alloc::box_free (210 samples, 0.20%)</title><rect x="72.8059%" y="917" width="0.1999%" height="15" fill="rgb(222,104,33)" fg:x="76476" fg:w="210"/><text x="73.0559%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (210 samples, 0.20%)</title><rect x="72.8059%" y="901" width="0.1999%" height="15" fill="rgb(248,49,16)" fg:x="76476" fg:w="210"/><text x="73.0559%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (210 samples, 0.20%)</title><rect x="72.8059%" y="885" width="0.1999%" height="15" fill="rgb(232,198,41)" fg:x="76476" fg:w="210"/><text x="73.0559%" y="895.50"></text></g><g><title>__rg_dealloc (210 samples, 0.20%)</title><rect x="72.8059%" y="869" width="0.1999%" height="15" fill="rgb(214,125,3)" fg:x="76476" fg:w="210"/><text x="73.0559%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (210 samples, 0.20%)</title><rect x="72.8059%" y="853" width="0.1999%" height="15" fill="rgb(229,220,28)" fg:x="76476" fg:w="210"/><text x="73.0559%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,205 samples, 5.91%)</title><rect x="67.4737%" y="997" width="5.9072%" height="15" fill="rgb(222,64,37)" fg:x="70875" fg:w="6205"/><text x="67.7237%" y="1007.50">&lt;async_s..</text></g><g><title>__memcpy_avx_unaligned_erms (394 samples, 0.38%)</title><rect x="73.0058%" y="981" width="0.3751%" height="15" fill="rgb(249,184,13)" fg:x="76686" fg:w="394"/><text x="73.2558%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (441 samples, 0.42%)</title><rect x="73.3809%" y="997" width="0.4198%" height="15" fill="rgb(252,176,6)" fg:x="77080" fg:w="441"/><text x="73.6309%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,696 samples, 6.37%)</title><rect x="67.4270%" y="1157" width="6.3747%" height="15" fill="rgb(228,153,7)" fg:x="70826" fg:w="6696"/><text x="67.6770%" y="1167.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,694 samples, 6.37%)</title><rect x="67.4289%" y="1141" width="6.3727%" height="15" fill="rgb(242,193,5)" fg:x="70828" fg:w="6694"/><text x="67.6789%" y="1151.50">std::thr..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,694 samples, 6.37%)</title><rect x="67.4289%" y="1125" width="6.3727%" height="15" fill="rgb(232,140,9)" fg:x="70828" fg:w="6694"/><text x="67.6789%" y="1135.50">async_st..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,694 samples, 6.37%)</title><rect x="67.4289%" y="1109" width="6.3727%" height="15" fill="rgb(213,222,16)" fg:x="70828" fg:w="6694"/><text x="67.6789%" y="1119.50">&lt;async_s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,694 samples, 6.37%)</title><rect x="67.4289%" y="1093" width="6.3727%" height="15" fill="rgb(222,75,50)" fg:x="70828" fg:w="6694"/><text x="67.6789%" y="1103.50">&lt;core::f..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,694 samples, 6.37%)</title><rect x="67.4289%" y="1077" width="6.3727%" height="15" fill="rgb(205,180,2)" fg:x="70828" fg:w="6694"/><text x="67.6789%" y="1087.50">tremor_r..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,694 samples, 6.37%)</title><rect x="67.4289%" y="1061" width="6.3727%" height="15" fill="rgb(216,34,7)" fg:x="70828" fg:w="6694"/><text x="67.6789%" y="1071.50">&lt;async_s..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,694 samples, 6.37%)</title><rect x="67.4289%" y="1045" width="6.3727%" height="15" fill="rgb(253,16,32)" fg:x="70828" fg:w="6694"/><text x="67.6789%" y="1055.50">&lt;tremor_..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,694 samples, 6.37%)</title><rect x="67.4289%" y="1029" width="6.3727%" height="15" fill="rgb(208,97,28)" fg:x="70828" fg:w="6694"/><text x="67.6789%" y="1039.50">&lt;async_s..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,694 samples, 6.37%)</title><rect x="67.4289%" y="1013" width="6.3727%" height="15" fill="rgb(225,92,11)" fg:x="70828" fg:w="6694"/><text x="67.6789%" y="1023.50">&lt;tremor_..</text></g><g><title>tremor_common::time::nanotime (19 samples, 0.02%)</title><rect x="73.8017%" y="1157" width="0.0181%" height="15" fill="rgb(243,38,12)" fg:x="77522" fg:w="19"/><text x="74.0517%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (18 samples, 0.02%)</title><rect x="73.8026%" y="1141" width="0.0171%" height="15" fill="rgb(208,139,16)" fg:x="77523" fg:w="18"/><text x="74.0526%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (18 samples, 0.02%)</title><rect x="73.8026%" y="1125" width="0.0171%" height="15" fill="rgb(227,24,9)" fg:x="77523" fg:w="18"/><text x="74.0526%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (18 samples, 0.02%)</title><rect x="73.8026%" y="1109" width="0.0171%" height="15" fill="rgb(206,62,11)" fg:x="77523" fg:w="18"/><text x="74.0526%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (51 samples, 0.05%)</title><rect x="73.8197%" y="1157" width="0.0486%" height="15" fill="rgb(228,134,27)" fg:x="77541" fg:w="51"/><text x="74.0697%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.03%)</title><rect x="73.9464%" y="1045" width="0.0305%" height="15" fill="rgb(205,55,33)" fg:x="77674" fg:w="32"/><text x="74.1964%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.03%)</title><rect x="73.9464%" y="1029" width="0.0305%" height="15" fill="rgb(243,75,43)" fg:x="77674" fg:w="32"/><text x="74.1964%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (32 samples, 0.03%)</title><rect x="73.9464%" y="1013" width="0.0305%" height="15" fill="rgb(223,27,42)" fg:x="77674" fg:w="32"/><text x="74.1964%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.03%)</title><rect x="73.9464%" y="997" width="0.0305%" height="15" fill="rgb(232,189,33)" fg:x="77674" fg:w="32"/><text x="74.1964%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.03%)</title><rect x="73.9464%" y="981" width="0.0305%" height="15" fill="rgb(210,9,39)" fg:x="77674" fg:w="32"/><text x="74.1964%" y="991.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.03%)</title><rect x="73.9464%" y="965" width="0.0305%" height="15" fill="rgb(242,85,26)" fg:x="77674" fg:w="32"/><text x="74.1964%" y="975.50"></text></g><g><title>__rg_alloc (32 samples, 0.03%)</title><rect x="73.9464%" y="949" width="0.0305%" height="15" fill="rgb(248,44,4)" fg:x="77674" fg:w="32"/><text x="74.1964%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (32 samples, 0.03%)</title><rect x="73.9464%" y="933" width="0.0305%" height="15" fill="rgb(250,96,46)" fg:x="77674" fg:w="32"/><text x="74.1964%" y="943.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (68 samples, 0.06%)</title><rect x="73.9378%" y="1141" width="0.0647%" height="15" fill="rgb(229,116,26)" fg:x="77665" fg:w="68"/><text x="74.1878%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (59 samples, 0.06%)</title><rect x="73.9464%" y="1125" width="0.0562%" height="15" fill="rgb(246,94,34)" fg:x="77674" fg:w="59"/><text x="74.1964%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59 samples, 0.06%)</title><rect x="73.9464%" y="1109" width="0.0562%" height="15" fill="rgb(251,73,21)" fg:x="77674" fg:w="59"/><text x="74.1964%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59 samples, 0.06%)</title><rect x="73.9464%" y="1093" width="0.0562%" height="15" fill="rgb(254,121,25)" fg:x="77674" fg:w="59"/><text x="74.1964%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (59 samples, 0.06%)</title><rect x="73.9464%" y="1077" width="0.0562%" height="15" fill="rgb(215,161,49)" fg:x="77674" fg:w="59"/><text x="74.1964%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59 samples, 0.06%)</title><rect x="73.9464%" y="1061" width="0.0562%" height="15" fill="rgb(221,43,13)" fg:x="77674" fg:w="59"/><text x="74.1964%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (27 samples, 0.03%)</title><rect x="73.9768%" y="1045" width="0.0257%" height="15" fill="rgb(249,5,37)" fg:x="77706" fg:w="27"/><text x="74.2268%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.03%)</title><rect x="73.9768%" y="1029" width="0.0257%" height="15" fill="rgb(226,25,44)" fg:x="77706" fg:w="27"/><text x="74.2268%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="74.0101%" y="1141" width="0.0105%" height="15" fill="rgb(238,189,16)" fg:x="77741" fg:w="11"/><text x="74.2601%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="74.0101%" y="1125" width="0.0105%" height="15" fill="rgb(251,186,8)" fg:x="77741" fg:w="11"/><text x="74.2601%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="74.0101%" y="1109" width="0.0105%" height="15" fill="rgb(254,34,31)" fg:x="77741" fg:w="11"/><text x="74.2601%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="74.0101%" y="1093" width="0.0105%" height="15" fill="rgb(225,215,27)" fg:x="77741" fg:w="11"/><text x="74.2601%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="74.0101%" y="1077" width="0.0105%" height="15" fill="rgb(221,192,48)" fg:x="77741" fg:w="11"/><text x="74.2601%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="74.0101%" y="1061" width="0.0105%" height="15" fill="rgb(219,137,20)" fg:x="77741" fg:w="11"/><text x="74.2601%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="74.0101%" y="1045" width="0.0105%" height="15" fill="rgb(219,84,11)" fg:x="77741" fg:w="11"/><text x="74.2601%" y="1055.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="74.0101%" y="1029" width="0.0105%" height="15" fill="rgb(224,10,23)" fg:x="77741" fg:w="11"/><text x="74.2601%" y="1039.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="74.0101%" y="1013" width="0.0105%" height="15" fill="rgb(248,22,39)" fg:x="77741" fg:w="11"/><text x="74.2601%" y="1023.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (146 samples, 0.14%)</title><rect x="73.8864%" y="1157" width="0.1390%" height="15" fill="rgb(212,154,20)" fg:x="77611" fg:w="146"/><text x="74.1364%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (20 samples, 0.02%)</title><rect x="74.0254%" y="1157" width="0.0190%" height="15" fill="rgb(236,199,50)" fg:x="77757" fg:w="20"/><text x="74.2754%" y="1167.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="74.1815%" y="1013" width="0.0133%" height="15" fill="rgb(211,9,17)" fg:x="77921" fg:w="14"/><text x="74.4315%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (15 samples, 0.01%)</title><rect x="74.1948%" y="1013" width="0.0143%" height="15" fill="rgb(243,216,36)" fg:x="77935" fg:w="15"/><text x="74.4448%" y="1023.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="74.1948%" y="997" width="0.0143%" height="15" fill="rgb(250,2,10)" fg:x="77935" fg:w="15"/><text x="74.4448%" y="1007.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="74.1958%" y="981" width="0.0133%" height="15" fill="rgb(226,50,48)" fg:x="77936" fg:w="14"/><text x="74.4458%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (197 samples, 0.19%)</title><rect x="74.2777%" y="997" width="0.1875%" height="15" fill="rgb(243,81,16)" fg:x="78022" fg:w="197"/><text x="74.5277%" y="1007.50"></text></g><g><title>core::mem::replace (197 samples, 0.19%)</title><rect x="74.2777%" y="981" width="0.1875%" height="15" fill="rgb(250,14,2)" fg:x="78022" fg:w="197"/><text x="74.5277%" y="991.50"></text></g><g><title>core::ptr::read (196 samples, 0.19%)</title><rect x="74.2786%" y="965" width="0.1866%" height="15" fill="rgb(233,135,29)" fg:x="78023" fg:w="196"/><text x="74.5286%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (336 samples, 0.32%)</title><rect x="74.2091%" y="1013" width="0.3199%" height="15" fill="rgb(224,64,43)" fg:x="77950" fg:w="336"/><text x="74.4591%" y="1023.50"></text></g><g><title>core::mem::drop (67 samples, 0.06%)</title><rect x="74.4652%" y="997" width="0.0638%" height="15" fill="rgb(238,84,13)" fg:x="78219" fg:w="67"/><text x="74.7152%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (67 samples, 0.06%)</title><rect x="74.4652%" y="981" width="0.0638%" height="15" fill="rgb(253,48,26)" fg:x="78219" fg:w="67"/><text x="74.7152%" y="991.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="74.5290%" y="997" width="0.0114%" height="15" fill="rgb(205,223,31)" fg:x="78286" fg:w="12"/><text x="74.7790%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::done (17 samples, 0.02%)</title><rect x="74.5490%" y="965" width="0.0162%" height="15" fill="rgb(221,41,32)" fg:x="78307" fg:w="17"/><text x="74.7990%" y="975.50"></text></g><g><title>std::thread::panicking (17 samples, 0.02%)</title><rect x="74.5490%" y="949" width="0.0162%" height="15" fill="rgb(213,158,31)" fg:x="78307" fg:w="17"/><text x="74.7990%" y="959.50"></text></g><g><title>std::panicking::panicking (17 samples, 0.02%)</title><rect x="74.5490%" y="933" width="0.0162%" height="15" fill="rgb(245,126,43)" fg:x="78307" fg:w="17"/><text x="74.7990%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (17 samples, 0.02%)</title><rect x="74.5490%" y="917" width="0.0162%" height="15" fill="rgb(227,7,22)" fg:x="78307" fg:w="17"/><text x="74.7990%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="74.5652%" y="949" width="0.0133%" height="15" fill="rgb(252,90,44)" fg:x="78324" fg:w="14"/><text x="74.8152%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (300 samples, 0.29%)</title><rect x="74.5785%" y="933" width="0.2856%" height="15" fill="rgb(253,91,0)" fg:x="78338" fg:w="300"/><text x="74.8285%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (362 samples, 0.34%)</title><rect x="74.5290%" y="1013" width="0.3446%" height="15" fill="rgb(252,175,49)" fg:x="78286" fg:w="362"/><text x="74.7790%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (350 samples, 0.33%)</title><rect x="74.5404%" y="997" width="0.3332%" height="15" fill="rgb(246,150,1)" fg:x="78298" fg:w="350"/><text x="74.7904%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (350 samples, 0.33%)</title><rect x="74.5404%" y="981" width="0.3332%" height="15" fill="rgb(241,192,25)" fg:x="78298" fg:w="350"/><text x="74.7904%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (324 samples, 0.31%)</title><rect x="74.5652%" y="965" width="0.3085%" height="15" fill="rgb(239,187,11)" fg:x="78324" fg:w="324"/><text x="74.8152%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (310 samples, 0.30%)</title><rect x="74.5785%" y="949" width="0.2951%" height="15" fill="rgb(218,202,51)" fg:x="78338" fg:w="310"/><text x="74.8285%" y="959.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="74.8879%" y="965" width="0.0124%" height="15" fill="rgb(225,176,8)" fg:x="78663" fg:w="13"/><text x="75.1379%" y="975.50"></text></g><g><title>core::task::wake::Waker::will_wake (42 samples, 0.04%)</title><rect x="74.8736%" y="1013" width="0.0400%" height="15" fill="rgb(219,122,41)" fg:x="78648" fg:w="42"/><text x="75.1236%" y="1023.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (42 samples, 0.04%)</title><rect x="74.8736%" y="997" width="0.0400%" height="15" fill="rgb(248,140,20)" fg:x="78648" fg:w="42"/><text x="75.1236%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (27 samples, 0.03%)</title><rect x="74.8879%" y="981" width="0.0257%" height="15" fill="rgb(245,41,37)" fg:x="78663" fg:w="27"/><text x="75.1379%" y="991.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="74.9003%" y="965" width="0.0133%" height="15" fill="rgb(235,82,39)" fg:x="78676" fg:w="14"/><text x="75.1503%" y="975.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="74.9260%" y="981" width="0.0200%" height="15" fill="rgb(230,108,42)" fg:x="78703" fg:w="21"/><text x="75.1760%" y="991.50"></text></g><g><title>std::sync::poison::Flag::borrow (21 samples, 0.02%)</title><rect x="74.9260%" y="965" width="0.0200%" height="15" fill="rgb(215,150,50)" fg:x="78703" fg:w="21"/><text x="75.1760%" y="975.50"></text></g><g><title>std::thread::panicking (21 samples, 0.02%)</title><rect x="74.9260%" y="949" width="0.0200%" height="15" fill="rgb(233,212,5)" fg:x="78703" fg:w="21"/><text x="75.1760%" y="959.50"></text></g><g><title>std::panicking::panicking (21 samples, 0.02%)</title><rect x="74.9260%" y="933" width="0.0200%" height="15" fill="rgb(245,80,22)" fg:x="78703" fg:w="21"/><text x="75.1760%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (21 samples, 0.02%)</title><rect x="74.9260%" y="917" width="0.0200%" height="15" fill="rgb(238,129,16)" fg:x="78703" fg:w="21"/><text x="75.1760%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="74.9260%" y="901" width="0.0200%" height="15" fill="rgb(240,19,0)" fg:x="78703" fg:w="21"/><text x="75.1760%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="74.9260%" y="885" width="0.0200%" height="15" fill="rgb(232,42,35)" fg:x="78703" fg:w="21"/><text x="75.1760%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,316 samples, 1.25%)</title><rect x="74.1006%" y="1029" width="1.2528%" height="15" fill="rgb(223,130,24)" fg:x="77836" fg:w="1316"/><text x="74.3506%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (462 samples, 0.44%)</title><rect x="74.9136%" y="1013" width="0.4398%" height="15" fill="rgb(237,16,22)" fg:x="78690" fg:w="462"/><text x="75.1636%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (449 samples, 0.43%)</title><rect x="74.9260%" y="997" width="0.4275%" height="15" fill="rgb(248,192,20)" fg:x="78703" fg:w="449"/><text x="75.1760%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (428 samples, 0.41%)</title><rect x="74.9460%" y="981" width="0.4075%" height="15" fill="rgb(233,167,2)" fg:x="78724" fg:w="428"/><text x="75.1960%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (425 samples, 0.40%)</title><rect x="74.9488%" y="965" width="0.4046%" height="15" fill="rgb(252,71,44)" fg:x="78727" fg:w="425"/><text x="75.1988%" y="975.50"></text></g><g><title>___pthread_mutex_lock (425 samples, 0.40%)</title><rect x="74.9488%" y="949" width="0.4046%" height="15" fill="rgb(238,37,47)" fg:x="78727" fg:w="425"/><text x="75.1988%" y="959.50"></text></g><g><title>__wake_up_common (11 samples, 0.01%)</title><rect x="75.3572%" y="661" width="0.0105%" height="15" fill="rgb(214,202,54)" fg:x="79156" fg:w="11"/><text x="75.6072%" y="671.50"></text></g><g><title>autoremove_wake_function (11 samples, 0.01%)</title><rect x="75.3572%" y="645" width="0.0105%" height="15" fill="rgb(254,165,40)" fg:x="79156" fg:w="11"/><text x="75.6072%" y="655.50"></text></g><g><title>try_to_wake_up (11 samples, 0.01%)</title><rect x="75.3572%" y="629" width="0.0105%" height="15" fill="rgb(246,173,38)" fg:x="79156" fg:w="11"/><text x="75.6072%" y="639.50"></text></g><g><title>__wake_up_common_lock (15 samples, 0.01%)</title><rect x="75.3572%" y="677" width="0.0143%" height="15" fill="rgb(215,3,27)" fg:x="79156" fg:w="15"/><text x="75.6072%" y="687.50"></text></g><g><title>ksys_write (19 samples, 0.02%)</title><rect x="75.3553%" y="757" width="0.0181%" height="15" fill="rgb(239,169,51)" fg:x="79154" fg:w="19"/><text x="75.6053%" y="767.50"></text></g><g><title>vfs_write (19 samples, 0.02%)</title><rect x="75.3553%" y="741" width="0.0181%" height="15" fill="rgb(212,5,25)" fg:x="79154" fg:w="19"/><text x="75.6053%" y="751.50"></text></g><g><title>eventfd_write (18 samples, 0.02%)</title><rect x="75.3563%" y="725" width="0.0171%" height="15" fill="rgb(243,45,17)" fg:x="79155" fg:w="18"/><text x="75.6063%" y="735.50"></text></g><g><title>__wake_up_common (17 samples, 0.02%)</title><rect x="75.3572%" y="709" width="0.0162%" height="15" fill="rgb(242,97,9)" fg:x="79156" fg:w="17"/><text x="75.6072%" y="719.50"></text></g><g><title>ep_poll_callback (17 samples, 0.02%)</title><rect x="75.3572%" y="693" width="0.0162%" height="15" fill="rgb(228,71,31)" fg:x="79156" fg:w="17"/><text x="75.6072%" y="703.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (22 samples, 0.02%)</title><rect x="75.3534%" y="1029" width="0.0209%" height="15" fill="rgb(252,184,16)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="1039.50"></text></g><g><title>event_listener::Event::notify (22 samples, 0.02%)</title><rect x="75.3534%" y="1013" width="0.0209%" height="15" fill="rgb(236,169,46)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="1023.50"></text></g><g><title>event_listener::List::notify (22 samples, 0.02%)</title><rect x="75.3534%" y="997" width="0.0209%" height="15" fill="rgb(207,17,47)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (22 samples, 0.02%)</title><rect x="75.3534%" y="981" width="0.0209%" height="15" fill="rgb(206,201,28)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (22 samples, 0.02%)</title><rect x="75.3534%" y="965" width="0.0209%" height="15" fill="rgb(224,184,23)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (22 samples, 0.02%)</title><rect x="75.3534%" y="949" width="0.0209%" height="15" fill="rgb(208,139,48)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="959.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (22 samples, 0.02%)</title><rect x="75.3534%" y="933" width="0.0209%" height="15" fill="rgb(208,130,10)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="943.50"></text></g><g><title>async_executor::State::notify (22 samples, 0.02%)</title><rect x="75.3534%" y="917" width="0.0209%" height="15" fill="rgb(211,213,45)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (22 samples, 0.02%)</title><rect x="75.3534%" y="901" width="0.0209%" height="15" fill="rgb(235,100,30)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (22 samples, 0.02%)</title><rect x="75.3534%" y="885" width="0.0209%" height="15" fill="rgb(206,144,31)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="895.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (22 samples, 0.02%)</title><rect x="75.3534%" y="869" width="0.0209%" height="15" fill="rgb(224,200,26)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="879.50"></text></g><g><title>async_io::reactor::Reactor::notify (22 samples, 0.02%)</title><rect x="75.3534%" y="853" width="0.0209%" height="15" fill="rgb(247,104,53)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="863.50"></text></g><g><title>polling::Poller::notify (22 samples, 0.02%)</title><rect x="75.3534%" y="837" width="0.0209%" height="15" fill="rgb(220,14,17)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="847.50"></text></g><g><title>polling::epoll::Poller::notify (22 samples, 0.02%)</title><rect x="75.3534%" y="821" width="0.0209%" height="15" fill="rgb(230,140,40)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="831.50"></text></g><g><title>__GI___write (22 samples, 0.02%)</title><rect x="75.3534%" y="805" width="0.0209%" height="15" fill="rgb(229,2,41)" fg:x="79152" fg:w="22"/><text x="75.6034%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="75.3544%" y="789" width="0.0200%" height="15" fill="rgb(232,89,16)" fg:x="79153" fg:w="21"/><text x="75.6044%" y="799.50"></text></g><g><title>do_syscall_64 (21 samples, 0.02%)</title><rect x="75.3544%" y="773" width="0.0200%" height="15" fill="rgb(247,59,52)" fg:x="79153" fg:w="21"/><text x="75.6044%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,410 samples, 1.34%)</title><rect x="74.0444%" y="1141" width="1.3423%" height="15" fill="rgb(226,110,21)" fg:x="77777" fg:w="1410"/><text x="74.2944%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,406 samples, 1.34%)</title><rect x="74.0482%" y="1125" width="1.3385%" height="15" fill="rgb(224,176,43)" fg:x="77781" fg:w="1406"/><text x="74.2982%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,406 samples, 1.34%)</title><rect x="74.0482%" y="1109" width="1.3385%" height="15" fill="rgb(221,73,6)" fg:x="77781" fg:w="1406"/><text x="74.2982%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,406 samples, 1.34%)</title><rect x="74.0482%" y="1093" width="1.3385%" height="15" fill="rgb(232,78,19)" fg:x="77781" fg:w="1406"/><text x="74.2982%" y="1103.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,406 samples, 1.34%)</title><rect x="74.0482%" y="1077" width="1.3385%" height="15" fill="rgb(233,112,48)" fg:x="77781" fg:w="1406"/><text x="74.2982%" y="1087.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,406 samples, 1.34%)</title><rect x="74.0482%" y="1061" width="1.3385%" height="15" fill="rgb(243,131,47)" fg:x="77781" fg:w="1406"/><text x="74.2982%" y="1071.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,406 samples, 1.34%)</title><rect x="74.0482%" y="1045" width="1.3385%" height="15" fill="rgb(226,51,1)" fg:x="77781" fg:w="1406"/><text x="74.2982%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (13 samples, 0.01%)</title><rect x="75.3744%" y="1029" width="0.0124%" height="15" fill="rgb(247,58,7)" fg:x="79174" fg:w="13"/><text x="75.6244%" y="1039.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="75.4382%" y="1061" width="0.0324%" height="15" fill="rgb(209,7,32)" fg:x="79241" fg:w="34"/><text x="75.6882%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (402 samples, 0.38%)</title><rect x="75.5476%" y="1045" width="0.3827%" height="15" fill="rgb(209,39,41)" fg:x="79356" fg:w="402"/><text x="75.7976%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (773 samples, 0.74%)</title><rect x="75.9751%" y="1029" width="0.7359%" height="15" fill="rgb(226,182,46)" fg:x="79805" fg:w="773"/><text x="76.2251%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (242 samples, 0.23%)</title><rect x="76.7986%" y="1013" width="0.2304%" height="15" fill="rgb(230,219,10)" fg:x="80670" fg:w="242"/><text x="77.0486%" y="1023.50"></text></g><g><title>core::ptr::write (242 samples, 0.23%)</title><rect x="76.7986%" y="997" width="0.2304%" height="15" fill="rgb(227,175,30)" fg:x="80670" fg:w="242"/><text x="77.0486%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (230 samples, 0.22%)</title><rect x="76.8100%" y="981" width="0.2190%" height="15" fill="rgb(217,2,50)" fg:x="80682" fg:w="230"/><text x="77.0600%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (322 samples, 0.31%)</title><rect x="77.0290%" y="1013" width="0.3065%" height="15" fill="rgb(229,160,0)" fg:x="80912" fg:w="322"/><text x="77.2790%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (322 samples, 0.31%)</title><rect x="77.0290%" y="997" width="0.3065%" height="15" fill="rgb(207,78,37)" fg:x="80912" fg:w="322"/><text x="77.2790%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (44 samples, 0.04%)</title><rect x="77.3355%" y="1013" width="0.0419%" height="15" fill="rgb(225,57,0)" fg:x="81234" fg:w="44"/><text x="77.5855%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (44 samples, 0.04%)</title><rect x="77.3355%" y="997" width="0.0419%" height="15" fill="rgb(232,154,2)" fg:x="81234" fg:w="44"/><text x="77.5855%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,533 samples, 1.46%)</title><rect x="75.9304%" y="1045" width="1.4594%" height="15" fill="rgb(241,212,25)" fg:x="79758" fg:w="1533"/><text x="76.1804%" y="1055.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (713 samples, 0.68%)</title><rect x="76.7110%" y="1029" width="0.6788%" height="15" fill="rgb(226,69,20)" fg:x="80578" fg:w="713"/><text x="76.9610%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (13 samples, 0.01%)</title><rect x="77.3774%" y="1013" width="0.0124%" height="15" fill="rgb(247,184,54)" fg:x="81278" fg:w="13"/><text x="77.6274%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_store (13 samples, 0.01%)</title><rect x="77.3774%" y="997" width="0.0124%" height="15" fill="rgb(210,145,0)" fg:x="81278" fg:w="13"/><text x="77.6274%" y="1007.50"></text></g><g><title>_raw_spin_lock (13 samples, 0.01%)</title><rect x="77.4536%" y="837" width="0.0124%" height="15" fill="rgb(253,82,12)" fg:x="81358" fg:w="13"/><text x="77.7036%" y="847.50"></text></g><g><title>enqueue_task_fair (27 samples, 0.03%)</title><rect x="77.4974%" y="773" width="0.0257%" height="15" fill="rgb(245,42,11)" fg:x="81404" fg:w="27"/><text x="77.7474%" y="783.50"></text></g><g><title>enqueue_entity (20 samples, 0.02%)</title><rect x="77.5040%" y="757" width="0.0190%" height="15" fill="rgb(219,147,32)" fg:x="81411" fg:w="20"/><text x="77.7540%" y="767.50"></text></g><g><title>psi_group_change (12 samples, 0.01%)</title><rect x="77.5231%" y="773" width="0.0114%" height="15" fill="rgb(246,12,7)" fg:x="81431" fg:w="12"/><text x="77.7731%" y="783.50"></text></g><g><title>ttwu_do_activate (60 samples, 0.06%)</title><rect x="77.4964%" y="805" width="0.0571%" height="15" fill="rgb(243,50,9)" fg:x="81403" fg:w="60"/><text x="77.7464%" y="815.50"></text></g><g><title>enqueue_task (60 samples, 0.06%)</title><rect x="77.4964%" y="789" width="0.0571%" height="15" fill="rgb(219,149,6)" fg:x="81403" fg:w="60"/><text x="77.7464%" y="799.50"></text></g><g><title>psi_task_change (20 samples, 0.02%)</title><rect x="77.5345%" y="773" width="0.0190%" height="15" fill="rgb(241,51,42)" fg:x="81443" fg:w="20"/><text x="77.7845%" y="783.50"></text></g><g><title>psi_group_change (11 samples, 0.01%)</title><rect x="77.5431%" y="757" width="0.0105%" height="15" fill="rgb(226,128,27)" fg:x="81452" fg:w="11"/><text x="77.7931%" y="767.50"></text></g><g><title>ttwu_queue_wakelist (13 samples, 0.01%)</title><rect x="77.5602%" y="805" width="0.0124%" height="15" fill="rgb(244,144,4)" fg:x="81470" fg:w="13"/><text x="77.8102%" y="815.50"></text></g><g><title>__x64_sys_futex (150 samples, 0.14%)</title><rect x="77.4345%" y="885" width="0.1428%" height="15" fill="rgb(221,4,13)" fg:x="81338" fg:w="150"/><text x="77.6845%" y="895.50"></text></g><g><title>do_futex (147 samples, 0.14%)</title><rect x="77.4374%" y="869" width="0.1399%" height="15" fill="rgb(208,170,28)" fg:x="81341" fg:w="147"/><text x="77.6874%" y="879.50"></text></g><g><title>futex_wake (145 samples, 0.14%)</title><rect x="77.4393%" y="853" width="0.1380%" height="15" fill="rgb(226,131,13)" fg:x="81343" fg:w="145"/><text x="77.6893%" y="863.50"></text></g><g><title>wake_up_q (101 samples, 0.10%)</title><rect x="77.4812%" y="837" width="0.0962%" height="15" fill="rgb(215,72,41)" fg:x="81387" fg:w="101"/><text x="77.7312%" y="847.50"></text></g><g><title>try_to_wake_up (100 samples, 0.10%)</title><rect x="77.4821%" y="821" width="0.0952%" height="15" fill="rgb(243,108,20)" fg:x="81388" fg:w="100"/><text x="77.7321%" y="831.50"></text></g><g><title>syscall_exit_to_user_mode (22 samples, 0.02%)</title><rect x="77.5811%" y="885" width="0.0209%" height="15" fill="rgb(230,189,17)" fg:x="81492" fg:w="22"/><text x="77.8311%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (200 samples, 0.19%)</title><rect x="77.4126%" y="949" width="0.1904%" height="15" fill="rgb(220,50,17)" fg:x="81315" fg:w="200"/><text x="77.6626%" y="959.50"></text></g><g><title>__GI___lll_lock_wake (180 samples, 0.17%)</title><rect x="77.4317%" y="933" width="0.1714%" height="15" fill="rgb(248,152,48)" fg:x="81335" fg:w="180"/><text x="77.6817%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (178 samples, 0.17%)</title><rect x="77.4336%" y="917" width="0.1695%" height="15" fill="rgb(244,91,11)" fg:x="81337" fg:w="178"/><text x="77.6836%" y="927.50"></text></g><g><title>do_syscall_64 (178 samples, 0.17%)</title><rect x="77.4336%" y="901" width="0.1695%" height="15" fill="rgb(220,157,5)" fg:x="81337" fg:w="178"/><text x="77.6836%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (204 samples, 0.19%)</title><rect x="77.4107%" y="1029" width="0.1942%" height="15" fill="rgb(253,137,8)" fg:x="81313" fg:w="204"/><text x="77.6607%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (202 samples, 0.19%)</title><rect x="77.4126%" y="1013" width="0.1923%" height="15" fill="rgb(217,137,51)" fg:x="81315" fg:w="202"/><text x="77.6626%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (202 samples, 0.19%)</title><rect x="77.4126%" y="997" width="0.1923%" height="15" fill="rgb(218,209,53)" fg:x="81315" fg:w="202"/><text x="77.6626%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (202 samples, 0.19%)</title><rect x="77.4126%" y="981" width="0.1923%" height="15" fill="rgb(249,137,25)" fg:x="81315" fg:w="202"/><text x="77.6626%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (202 samples, 0.19%)</title><rect x="77.4126%" y="965" width="0.1923%" height="15" fill="rgb(239,155,26)" fg:x="81315" fg:w="202"/><text x="77.6626%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="77.6049%" y="1029" width="0.0114%" height="15" fill="rgb(227,85,46)" fg:x="81517" fg:w="12"/><text x="77.8549%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="77.6049%" y="1013" width="0.0114%" height="15" fill="rgb(251,107,43)" fg:x="81517" fg:w="12"/><text x="77.8549%" y="1023.50"></text></g><g><title>event_listener::Inner::lock (66 samples, 0.06%)</title><rect x="77.6202%" y="1029" width="0.0628%" height="15" fill="rgb(234,170,33)" fg:x="81533" fg:w="66"/><text x="77.8702%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (66 samples, 0.06%)</title><rect x="77.6202%" y="1013" width="0.0628%" height="15" fill="rgb(206,29,35)" fg:x="81533" fg:w="66"/><text x="77.8702%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (66 samples, 0.06%)</title><rect x="77.6202%" y="997" width="0.0628%" height="15" fill="rgb(227,138,25)" fg:x="81533" fg:w="66"/><text x="77.8702%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (62 samples, 0.06%)</title><rect x="77.6240%" y="981" width="0.0590%" height="15" fill="rgb(249,131,35)" fg:x="81537" fg:w="62"/><text x="77.8740%" y="991.50"></text></g><g><title>___pthread_mutex_lock (62 samples, 0.06%)</title><rect x="77.6240%" y="965" width="0.0590%" height="15" fill="rgb(239,6,40)" fg:x="81537" fg:w="62"/><text x="77.8740%" y="975.50"></text></g><g><title>syscall_exit_to_user_mode (21 samples, 0.02%)</title><rect x="77.7335%" y="805" width="0.0200%" height="15" fill="rgb(246,136,47)" fg:x="81652" fg:w="21"/><text x="77.9835%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (65 samples, 0.06%)</title><rect x="77.6944%" y="933" width="0.0619%" height="15" fill="rgb(253,58,26)" fg:x="81611" fg:w="65"/><text x="77.9444%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.06%)</title><rect x="77.6944%" y="917" width="0.0619%" height="15" fill="rgb(237,141,10)" fg:x="81611" fg:w="65"/><text x="77.9444%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (64 samples, 0.06%)</title><rect x="77.6954%" y="901" width="0.0609%" height="15" fill="rgb(234,156,12)" fg:x="81612" fg:w="64"/><text x="77.9454%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (64 samples, 0.06%)</title><rect x="77.6954%" y="885" width="0.0609%" height="15" fill="rgb(243,224,36)" fg:x="81612" fg:w="64"/><text x="77.9454%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (64 samples, 0.06%)</title><rect x="77.6954%" y="869" width="0.0609%" height="15" fill="rgb(205,229,51)" fg:x="81612" fg:w="64"/><text x="77.9454%" y="879.50"></text></g><g><title>__GI___lll_lock_wake (37 samples, 0.04%)</title><rect x="77.7211%" y="853" width="0.0352%" height="15" fill="rgb(223,189,4)" fg:x="81639" fg:w="37"/><text x="77.9711%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.03%)</title><rect x="77.7249%" y="837" width="0.0314%" height="15" fill="rgb(249,167,54)" fg:x="81643" fg:w="33"/><text x="77.9749%" y="847.50"></text></g><g><title>do_syscall_64 (33 samples, 0.03%)</title><rect x="77.7249%" y="821" width="0.0314%" height="15" fill="rgb(218,34,28)" fg:x="81643" fg:w="33"/><text x="77.9749%" y="831.50"></text></g><g><title>enqueue_task_fair (13 samples, 0.01%)</title><rect x="77.8010%" y="613" width="0.0124%" height="15" fill="rgb(232,109,42)" fg:x="81723" fg:w="13"/><text x="78.0510%" y="623.50"></text></g><g><title>ttwu_do_activate (27 samples, 0.03%)</title><rect x="77.8010%" y="645" width="0.0257%" height="15" fill="rgb(248,214,46)" fg:x="81723" fg:w="27"/><text x="78.0510%" y="655.50"></text></g><g><title>enqueue_task (27 samples, 0.03%)</title><rect x="77.8010%" y="629" width="0.0257%" height="15" fill="rgb(244,216,40)" fg:x="81723" fg:w="27"/><text x="78.0510%" y="639.50"></text></g><g><title>__wake_up_common (46 samples, 0.04%)</title><rect x="77.7906%" y="693" width="0.0438%" height="15" fill="rgb(231,226,31)" fg:x="81712" fg:w="46"/><text x="78.0406%" y="703.50"></text></g><g><title>autoremove_wake_function (43 samples, 0.04%)</title><rect x="77.7934%" y="677" width="0.0409%" height="15" fill="rgb(238,38,43)" fg:x="81715" fg:w="43"/><text x="78.0434%" y="687.50"></text></g><g><title>try_to_wake_up (43 samples, 0.04%)</title><rect x="77.7934%" y="661" width="0.0409%" height="15" fill="rgb(208,88,43)" fg:x="81715" fg:w="43"/><text x="78.0434%" y="671.50"></text></g><g><title>__wake_up_common_lock (47 samples, 0.04%)</title><rect x="77.7906%" y="709" width="0.0447%" height="15" fill="rgb(205,136,37)" fg:x="81712" fg:w="47"/><text x="78.0406%" y="719.50"></text></g><g><title>__wake_up_common (58 samples, 0.06%)</title><rect x="77.7858%" y="741" width="0.0552%" height="15" fill="rgb(237,34,14)" fg:x="81707" fg:w="58"/><text x="78.0358%" y="751.50"></text></g><g><title>ep_poll_callback (57 samples, 0.05%)</title><rect x="77.7868%" y="725" width="0.0543%" height="15" fill="rgb(236,193,44)" fg:x="81708" fg:w="57"/><text x="78.0368%" y="735.50"></text></g><g><title>eventfd_write (71 samples, 0.07%)</title><rect x="77.7811%" y="757" width="0.0676%" height="15" fill="rgb(231,48,10)" fg:x="81702" fg:w="71"/><text x="78.0311%" y="767.50"></text></g><g><title>ksys_write (84 samples, 0.08%)</title><rect x="77.7706%" y="789" width="0.0800%" height="15" fill="rgb(213,141,34)" fg:x="81691" fg:w="84"/><text x="78.0206%" y="799.50"></text></g><g><title>vfs_write (74 samples, 0.07%)</title><rect x="77.7801%" y="773" width="0.0704%" height="15" fill="rgb(249,130,34)" fg:x="81701" fg:w="74"/><text x="78.0301%" y="783.50"></text></g><g><title>syscall_exit_to_user_mode (18 samples, 0.02%)</title><rect x="77.8515%" y="789" width="0.0171%" height="15" fill="rgb(219,42,41)" fg:x="81776" fg:w="18"/><text x="78.1015%" y="799.50"></text></g><g><title>async_io::reactor::Reactor::notify (109 samples, 0.10%)</title><rect x="77.7668%" y="885" width="0.1038%" height="15" fill="rgb(224,100,54)" fg:x="81687" fg:w="109"/><text x="78.0168%" y="895.50"></text></g><g><title>polling::Poller::notify (109 samples, 0.10%)</title><rect x="77.7668%" y="869" width="0.1038%" height="15" fill="rgb(229,200,27)" fg:x="81687" fg:w="109"/><text x="78.0168%" y="879.50"></text></g><g><title>polling::epoll::Poller::notify (108 samples, 0.10%)</title><rect x="77.7677%" y="853" width="0.1028%" height="15" fill="rgb(217,118,10)" fg:x="81688" fg:w="108"/><text x="78.0177%" y="863.50"></text></g><g><title>__GI___write (108 samples, 0.10%)</title><rect x="77.7677%" y="837" width="0.1028%" height="15" fill="rgb(206,22,3)" fg:x="81688" fg:w="108"/><text x="78.0177%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (105 samples, 0.10%)</title><rect x="77.7706%" y="821" width="0.1000%" height="15" fill="rgb(232,163,46)" fg:x="81691" fg:w="105"/><text x="78.0206%" y="831.50"></text></g><g><title>do_syscall_64 (105 samples, 0.10%)</title><rect x="77.7706%" y="805" width="0.1000%" height="15" fill="rgb(206,95,13)" fg:x="81691" fg:w="105"/><text x="78.0206%" y="815.50"></text></g><g><title>_raw_spin_lock (14 samples, 0.01%)</title><rect x="77.9486%" y="709" width="0.0133%" height="15" fill="rgb(253,154,18)" fg:x="81878" fg:w="14"/><text x="78.1986%" y="719.50"></text></g><g><title>futex_wake_mark (26 samples, 0.02%)</title><rect x="77.9638%" y="709" width="0.0248%" height="15" fill="rgb(219,32,23)" fg:x="81894" fg:w="26"/><text x="78.2138%" y="719.50"></text></g><g><title>select_task_rq_fair (29 samples, 0.03%)</title><rect x="78.0181%" y="677" width="0.0276%" height="15" fill="rgb(230,191,45)" fg:x="81951" fg:w="29"/><text x="78.2681%" y="687.50"></text></g><g><title>enqueue_task_fair (69 samples, 0.07%)</title><rect x="78.0505%" y="645" width="0.0657%" height="15" fill="rgb(229,64,36)" fg:x="81985" fg:w="69"/><text x="78.3005%" y="655.50"></text></g><g><title>enqueue_entity (47 samples, 0.04%)</title><rect x="78.0714%" y="629" width="0.0447%" height="15" fill="rgb(205,129,25)" fg:x="82007" fg:w="47"/><text x="78.3214%" y="639.50"></text></g><g><title>update_load_avg (16 samples, 0.02%)</title><rect x="78.1009%" y="613" width="0.0152%" height="15" fill="rgb(254,112,7)" fg:x="82038" fg:w="16"/><text x="78.3509%" y="623.50"></text></g><g><title>psi_group_change (21 samples, 0.02%)</title><rect x="78.1162%" y="645" width="0.0200%" height="15" fill="rgb(226,53,48)" fg:x="82054" fg:w="21"/><text x="78.3662%" y="655.50"></text></g><g><title>psi_group_change (44 samples, 0.04%)</title><rect x="78.1447%" y="629" width="0.0419%" height="15" fill="rgb(214,153,38)" fg:x="82084" fg:w="44"/><text x="78.3947%" y="639.50"></text></g><g><title>ttwu_do_activate (150 samples, 0.14%)</title><rect x="78.0457%" y="677" width="0.1428%" height="15" fill="rgb(243,101,7)" fg:x="81980" fg:w="150"/><text x="78.2957%" y="687.50"></text></g><g><title>enqueue_task (146 samples, 0.14%)</title><rect x="78.0495%" y="661" width="0.1390%" height="15" fill="rgb(240,140,22)" fg:x="81984" fg:w="146"/><text x="78.2995%" y="671.50"></text></g><g><title>psi_task_change (55 samples, 0.05%)</title><rect x="78.1362%" y="645" width="0.0524%" height="15" fill="rgb(235,114,2)" fg:x="82075" fg:w="55"/><text x="78.3862%" y="655.50"></text></g><g><title>ttwu_do_wakeup (12 samples, 0.01%)</title><rect x="78.1885%" y="677" width="0.0114%" height="15" fill="rgb(242,59,12)" fg:x="82130" fg:w="12"/><text x="78.4385%" y="687.50"></text></g><g><title>ttwu_queue_wakelist (18 samples, 0.02%)</title><rect x="78.1999%" y="677" width="0.0171%" height="15" fill="rgb(252,134,9)" fg:x="82142" fg:w="18"/><text x="78.4499%" y="687.50"></text></g><g><title>__x64_sys_futex (321 samples, 0.31%)</title><rect x="77.9239%" y="757" width="0.3056%" height="15" fill="rgb(236,4,44)" fg:x="81852" fg:w="321"/><text x="78.1739%" y="767.50"></text></g><g><title>do_futex (317 samples, 0.30%)</title><rect x="77.9277%" y="741" width="0.3018%" height="15" fill="rgb(254,172,41)" fg:x="81856" fg:w="317"/><text x="78.1777%" y="751.50"></text></g><g><title>futex_wake (316 samples, 0.30%)</title><rect x="77.9286%" y="725" width="0.3008%" height="15" fill="rgb(244,63,20)" fg:x="81857" fg:w="316"/><text x="78.1786%" y="735.50"></text></g><g><title>wake_up_q (244 samples, 0.23%)</title><rect x="77.9972%" y="709" width="0.2323%" height="15" fill="rgb(250,73,31)" fg:x="81929" fg:w="244"/><text x="78.2472%" y="719.50"></text></g><g><title>try_to_wake_up (238 samples, 0.23%)</title><rect x="78.0029%" y="693" width="0.2266%" height="15" fill="rgb(241,38,36)" fg:x="81935" fg:w="238"/><text x="78.2529%" y="703.50"></text></g><g><title>update_rq_clock (13 samples, 0.01%)</title><rect x="78.2171%" y="677" width="0.0124%" height="15" fill="rgb(245,211,2)" fg:x="82160" fg:w="13"/><text x="78.4671%" y="687.50"></text></g><g><title>syscall_exit_to_user_mode (61 samples, 0.06%)</title><rect x="78.2314%" y="757" width="0.0581%" height="15" fill="rgb(206,120,28)" fg:x="82175" fg:w="61"/><text x="78.4814%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (397 samples, 0.38%)</title><rect x="77.9201%" y="789" width="0.3779%" height="15" fill="rgb(211,59,34)" fg:x="81848" fg:w="397"/><text x="78.1701%" y="799.50"></text></g><g><title>do_syscall_64 (395 samples, 0.38%)</title><rect x="77.9220%" y="773" width="0.3760%" height="15" fill="rgb(233,168,5)" fg:x="81850" fg:w="395"/><text x="78.1720%" y="783.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (427 samples, 0.41%)</title><rect x="77.8934%" y="853" width="0.4065%" height="15" fill="rgb(234,33,13)" fg:x="81820" fg:w="427"/><text x="78.1434%" y="863.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (427 samples, 0.41%)</title><rect x="77.8934%" y="837" width="0.4065%" height="15" fill="rgb(231,150,26)" fg:x="81820" fg:w="427"/><text x="78.1434%" y="847.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (427 samples, 0.41%)</title><rect x="77.8934%" y="821" width="0.4065%" height="15" fill="rgb(217,191,4)" fg:x="81820" fg:w="427"/><text x="78.1434%" y="831.50"></text></g><g><title>__GI___pthread_cond_signal (427 samples, 0.41%)</title><rect x="77.8934%" y="805" width="0.4065%" height="15" fill="rgb(246,198,38)" fg:x="81820" fg:w="427"/><text x="78.1434%" y="815.50"></text></g><g><title>parking::Unparker::unpark (459 samples, 0.44%)</title><rect x="77.8744%" y="885" width="0.4370%" height="15" fill="rgb(245,64,37)" fg:x="81800" fg:w="459"/><text x="78.1244%" y="895.50"></text></g><g><title>parking::Inner::unpark (453 samples, 0.43%)</title><rect x="77.8801%" y="869" width="0.4313%" height="15" fill="rgb(250,30,36)" fg:x="81806" fg:w="453"/><text x="78.1301%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.01%)</title><rect x="78.2999%" y="853" width="0.0114%" height="15" fill="rgb(217,86,53)" fg:x="82247" fg:w="12"/><text x="78.5499%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="78.2999%" y="837" width="0.0114%" height="15" fill="rgb(228,157,16)" fg:x="82247" fg:w="12"/><text x="78.5499%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="78.2999%" y="821" width="0.0114%" height="15" fill="rgb(217,59,31)" fg:x="82247" fg:w="12"/><text x="78.5499%" y="831.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="78.2999%" y="805" width="0.0114%" height="15" fill="rgb(237,138,41)" fg:x="82247" fg:w="12"/><text x="78.5499%" y="815.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (580 samples, 0.55%)</title><rect x="77.7639%" y="901" width="0.5522%" height="15" fill="rgb(227,91,49)" fg:x="81684" fg:w="580"/><text x="78.0139%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (595 samples, 0.57%)</title><rect x="77.7630%" y="933" width="0.5664%" height="15" fill="rgb(247,21,44)" fg:x="81683" fg:w="595"/><text x="78.0130%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (594 samples, 0.57%)</title><rect x="77.7639%" y="917" width="0.5655%" height="15" fill="rgb(219,210,51)" fg:x="81684" fg:w="594"/><text x="78.0139%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="78.3161%" y="901" width="0.0133%" height="15" fill="rgb(209,140,6)" fg:x="82264" fg:w="14"/><text x="78.5661%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="78.3161%" y="885" width="0.0133%" height="15" fill="rgb(221,188,24)" fg:x="82264" fg:w="14"/><text x="78.5661%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.01%)</title><rect x="78.3161%" y="869" width="0.0133%" height="15" fill="rgb(232,154,20)" fg:x="82264" fg:w="14"/><text x="78.5661%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.01%)</title><rect x="78.3161%" y="853" width="0.0133%" height="15" fill="rgb(244,137,50)" fg:x="82264" fg:w="14"/><text x="78.5661%" y="863.50"></text></g><g><title>__x64_sys_futex (12 samples, 0.01%)</title><rect x="78.3513%" y="821" width="0.0114%" height="15" fill="rgb(225,185,43)" fg:x="82301" fg:w="12"/><text x="78.6013%" y="831.50"></text></g><g><title>async_executor::State::notify (718 samples, 0.68%)</title><rect x="77.6897%" y="949" width="0.6835%" height="15" fill="rgb(213,205,38)" fg:x="81606" fg:w="718"/><text x="77.9397%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (46 samples, 0.04%)</title><rect x="78.3294%" y="933" width="0.0438%" height="15" fill="rgb(236,73,12)" fg:x="82278" fg:w="46"/><text x="78.5794%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (45 samples, 0.04%)</title><rect x="78.3304%" y="917" width="0.0428%" height="15" fill="rgb(235,219,13)" fg:x="82279" fg:w="45"/><text x="78.5804%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (42 samples, 0.04%)</title><rect x="78.3332%" y="901" width="0.0400%" height="15" fill="rgb(218,59,36)" fg:x="82282" fg:w="42"/><text x="78.5832%" y="911.50"></text></g><g><title>___pthread_mutex_lock (42 samples, 0.04%)</title><rect x="78.3332%" y="885" width="0.0400%" height="15" fill="rgb(205,110,39)" fg:x="82282" fg:w="42"/><text x="78.5832%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (28 samples, 0.03%)</title><rect x="78.3466%" y="869" width="0.0267%" height="15" fill="rgb(218,206,42)" fg:x="82296" fg:w="28"/><text x="78.5966%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (23 samples, 0.02%)</title><rect x="78.3513%" y="853" width="0.0219%" height="15" fill="rgb(248,125,24)" fg:x="82301" fg:w="23"/><text x="78.6013%" y="863.50"></text></g><g><title>do_syscall_64 (23 samples, 0.02%)</title><rect x="78.3513%" y="837" width="0.0219%" height="15" fill="rgb(242,28,27)" fg:x="82301" fg:w="23"/><text x="78.6013%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (27 samples, 0.03%)</title><rect x="78.3808%" y="917" width="0.0257%" height="15" fill="rgb(216,228,15)" fg:x="82332" fg:w="27"/><text x="78.6308%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (27 samples, 0.03%)</title><rect x="78.3808%" y="901" width="0.0257%" height="15" fill="rgb(235,116,46)" fg:x="82332" fg:w="27"/><text x="78.6308%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (762 samples, 0.73%)</title><rect x="77.6897%" y="965" width="0.7254%" height="15" fill="rgb(224,18,32)" fg:x="81606" fg:w="762"/><text x="77.9397%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (44 samples, 0.04%)</title><rect x="78.3732%" y="949" width="0.0419%" height="15" fill="rgb(252,5,12)" fg:x="82324" fg:w="44"/><text x="78.6232%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (40 samples, 0.04%)</title><rect x="78.3770%" y="933" width="0.0381%" height="15" fill="rgb(251,36,5)" fg:x="82328" fg:w="40"/><text x="78.6270%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (35 samples, 0.03%)</title><rect x="78.4151%" y="965" width="0.0333%" height="15" fill="rgb(217,53,14)" fg:x="82368" fg:w="35"/><text x="78.6651%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (35 samples, 0.03%)</title><rect x="78.4151%" y="949" width="0.0333%" height="15" fill="rgb(215,86,45)" fg:x="82368" fg:w="35"/><text x="78.6651%" y="959.50"></text></g><g><title>event_listener::List::notify (807 samples, 0.77%)</title><rect x="77.6830%" y="1029" width="0.7683%" height="15" fill="rgb(242,169,11)" fg:x="81599" fg:w="807"/><text x="77.9330%" y="1039.50"></text></g><g><title>core::task::wake::Waker::wake (803 samples, 0.76%)</title><rect x="77.6868%" y="1013" width="0.7645%" height="15" fill="rgb(211,213,45)" fg:x="81603" fg:w="803"/><text x="77.9368%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (803 samples, 0.76%)</title><rect x="77.6868%" y="997" width="0.7645%" height="15" fill="rgb(205,88,11)" fg:x="81603" fg:w="803"/><text x="77.9368%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (801 samples, 0.76%)</title><rect x="77.6887%" y="981" width="0.7626%" height="15" fill="rgb(252,69,26)" fg:x="81605" fg:w="801"/><text x="77.9387%" y="991.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (4,251 samples, 4.05%)</title><rect x="75.4753%" y="1061" width="4.0470%" height="15" fill="rgb(246,123,37)" fg:x="79280" fg:w="4251"/><text x="75.7253%" y="1071.50">asyn..</text></g><g><title>event_listener::Event::notify (2,240 samples, 2.13%)</title><rect x="77.3898%" y="1045" width="2.1325%" height="15" fill="rgb(212,205,5)" fg:x="81291" fg:w="2240"/><text x="77.6398%" y="1055.50">e..</text></g><g><title>event_listener::full_fence (1,125 samples, 1.07%)</title><rect x="78.4513%" y="1029" width="1.0710%" height="15" fill="rgb(253,148,0)" fg:x="82406" fg:w="1125"/><text x="78.7013%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1,097 samples, 1.04%)</title><rect x="78.4779%" y="1013" width="1.0444%" height="15" fill="rgb(239,22,4)" fg:x="82434" fg:w="1097"/><text x="78.7279%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,097 samples, 1.04%)</title><rect x="78.4779%" y="997" width="1.0444%" height="15" fill="rgb(226,26,53)" fg:x="82434" fg:w="1097"/><text x="78.7279%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,097 samples, 1.04%)</title><rect x="78.4779%" y="981" width="1.0444%" height="15" fill="rgb(225,229,45)" fg:x="82434" fg:w="1097"/><text x="78.7279%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (23 samples, 0.02%)</title><rect x="79.5223%" y="1061" width="0.0219%" height="15" fill="rgb(220,60,37)" fg:x="83531" fg:w="23"/><text x="79.7723%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (396 samples, 0.38%)</title><rect x="79.5442%" y="1061" width="0.3770%" height="15" fill="rgb(217,180,35)" fg:x="83554" fg:w="396"/><text x="79.7942%" y="1071.50"></text></g><g><title>core::mem::replace (396 samples, 0.38%)</title><rect x="79.5442%" y="1045" width="0.3770%" height="15" fill="rgb(229,7,53)" fg:x="83554" fg:w="396"/><text x="79.7942%" y="1055.50"></text></g><g><title>core::ptr::read (382 samples, 0.36%)</title><rect x="79.5575%" y="1029" width="0.3637%" height="15" fill="rgb(254,137,3)" fg:x="83568" fg:w="382"/><text x="79.8075%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (358 samples, 0.34%)</title><rect x="79.5804%" y="1013" width="0.3408%" height="15" fill="rgb(215,140,41)" fg:x="83592" fg:w="358"/><text x="79.8304%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (451 samples, 0.43%)</title><rect x="79.9212%" y="1061" width="0.4294%" height="15" fill="rgb(250,80,15)" fg:x="83950" fg:w="451"/><text x="80.1712%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (441 samples, 0.42%)</title><rect x="79.9307%" y="1045" width="0.4198%" height="15" fill="rgb(252,191,6)" fg:x="83960" fg:w="441"/><text x="80.1807%" y="1055.50"></text></g><g><title>event_listener::Inner::lock (15 samples, 0.01%)</title><rect x="80.3715%" y="1045" width="0.0143%" height="15" fill="rgb(246,217,18)" fg:x="84423" fg:w="15"/><text x="80.6215%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="80.3715%" y="1029" width="0.0143%" height="15" fill="rgb(223,93,7)" fg:x="84423" fg:w="15"/><text x="80.6215%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="80.3734%" y="1013" width="0.0124%" height="15" fill="rgb(225,55,52)" fg:x="84425" fg:w="13"/><text x="80.6234%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="80.3734%" y="997" width="0.0124%" height="15" fill="rgb(240,31,24)" fg:x="84425" fg:w="13"/><text x="80.6234%" y="1007.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="80.3734%" y="981" width="0.0124%" height="15" fill="rgb(205,56,52)" fg:x="84425" fg:w="13"/><text x="80.6234%" y="991.50"></text></g><g><title>__GI___lll_lock_wait (11 samples, 0.01%)</title><rect x="80.3753%" y="965" width="0.0105%" height="15" fill="rgb(246,146,12)" fg:x="84427" fg:w="11"/><text x="80.6253%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,960 samples, 6.63%)</title><rect x="74.0444%" y="1157" width="6.6260%" height="15" fill="rgb(239,84,36)" fg:x="77777" fg:w="6960"/><text x="74.2944%" y="1167.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,550 samples, 5.28%)</title><rect x="75.3868%" y="1141" width="5.2837%" height="15" fill="rgb(207,41,40)" fg:x="79187" fg:w="5550"/><text x="75.6368%" y="1151.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (5,550 samples, 5.28%)</title><rect x="75.3868%" y="1125" width="5.2837%" height="15" fill="rgb(241,179,25)" fg:x="79187" fg:w="5550"/><text x="75.6368%" y="1135.50">tremor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,550 samples, 5.28%)</title><rect x="75.3868%" y="1109" width="5.2837%" height="15" fill="rgb(210,0,34)" fg:x="79187" fg:w="5550"/><text x="75.6368%" y="1119.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (5,550 samples, 5.28%)</title><rect x="75.3868%" y="1093" width="5.2837%" height="15" fill="rgb(225,217,29)" fg:x="79187" fg:w="5550"/><text x="75.6368%" y="1103.50">tremor..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (5,550 samples, 5.28%)</title><rect x="75.3868%" y="1077" width="5.2837%" height="15" fill="rgb(216,191,38)" fg:x="79187" fg:w="5550"/><text x="75.6368%" y="1087.50">&lt;async..</text></g><g><title>event_listener::Event::notify (332 samples, 0.32%)</title><rect x="80.3543%" y="1061" width="0.3161%" height="15" fill="rgb(232,140,52)" fg:x="84405" fg:w="332"/><text x="80.6043%" y="1071.50"></text></g><g><title>event_listener::full_fence (299 samples, 0.28%)</title><rect x="80.3858%" y="1045" width="0.2847%" height="15" fill="rgb(223,158,51)" fg:x="84438" fg:w="299"/><text x="80.6358%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (287 samples, 0.27%)</title><rect x="80.3972%" y="1029" width="0.2732%" height="15" fill="rgb(235,29,51)" fg:x="84450" fg:w="287"/><text x="80.6472%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (287 samples, 0.27%)</title><rect x="80.3972%" y="1013" width="0.2732%" height="15" fill="rgb(215,181,18)" fg:x="84450" fg:w="287"/><text x="80.6472%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (287 samples, 0.27%)</title><rect x="80.3972%" y="997" width="0.2732%" height="15" fill="rgb(227,125,34)" fg:x="84450" fg:w="287"/><text x="80.6472%" y="1007.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (24 samples, 0.02%)</title><rect x="80.6704%" y="1157" width="0.0228%" height="15" fill="rgb(230,197,49)" fg:x="84737" fg:w="24"/><text x="80.9204%" y="1167.50"></text></g><g><title>[unknown] (79,791 samples, 75.96%)</title><rect x="4.7486%" y="1173" width="75.9618%" height="15" fill="rgb(239,141,16)" fg:x="4988" fg:w="79791"/><text x="4.9986%" y="1183.50">[unknown]</text></g><g><title>tremor_script::srs::EventPayload::try_new (17 samples, 0.02%)</title><rect x="80.6942%" y="1157" width="0.0162%" height="15" fill="rgb(225,105,43)" fg:x="84762" fg:w="17"/><text x="80.9442%" y="1167.50"></text></g><g><title>__perf_event_task_sched_in (14 samples, 0.01%)</title><rect x="80.7104%" y="1109" width="0.0133%" height="15" fill="rgb(214,131,14)" fg:x="84779" fg:w="14"/><text x="80.9604%" y="1119.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (14 samples, 0.01%)</title><rect x="80.7104%" y="1093" width="0.0133%" height="15" fill="rgb(229,177,11)" fg:x="84779" fg:w="14"/><text x="80.9604%" y="1103.50"></text></g><g><title>native_write_msr (14 samples, 0.01%)</title><rect x="80.7104%" y="1077" width="0.0133%" height="15" fill="rgb(231,180,14)" fg:x="84779" fg:w="14"/><text x="80.9604%" y="1087.50"></text></g><g><title>ret_from_fork (15 samples, 0.01%)</title><rect x="80.7104%" y="1157" width="0.0143%" height="15" fill="rgb(232,88,2)" fg:x="84779" fg:w="15"/><text x="80.9604%" y="1167.50"></text></g><g><title>schedule_tail (15 samples, 0.01%)</title><rect x="80.7104%" y="1141" width="0.0143%" height="15" fill="rgb(205,220,8)" fg:x="84779" fg:w="15"/><text x="80.9604%" y="1151.50"></text></g><g><title>finish_task_switch.isra.0 (15 samples, 0.01%)</title><rect x="80.7104%" y="1125" width="0.0143%" height="15" fill="rgb(225,23,53)" fg:x="84779" fg:w="15"/><text x="80.9604%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (20 samples, 0.02%)</title><rect x="80.8913%" y="469" width="0.0190%" height="15" fill="rgb(213,62,29)" fg:x="84969" fg:w="20"/><text x="81.1413%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (18 samples, 0.02%)</title><rect x="80.8932%" y="453" width="0.0171%" height="15" fill="rgb(227,75,7)" fg:x="84971" fg:w="18"/><text x="81.1432%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.01%)</title><rect x="80.8979%" y="437" width="0.0124%" height="15" fill="rgb(207,105,14)" fg:x="84976" fg:w="13"/><text x="81.1479%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="80.9103%" y="469" width="0.0162%" height="15" fill="rgb(245,62,29)" fg:x="84989" fg:w="17"/><text x="81.1603%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (106 samples, 0.10%)</title><rect x="80.8370%" y="533" width="0.1009%" height="15" fill="rgb(236,202,4)" fg:x="84912" fg:w="106"/><text x="81.0870%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89 samples, 0.08%)</title><rect x="80.8532%" y="517" width="0.0847%" height="15" fill="rgb(250,67,1)" fg:x="84929" fg:w="89"/><text x="81.1032%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (73 samples, 0.07%)</title><rect x="80.8684%" y="501" width="0.0695%" height="15" fill="rgb(253,115,44)" fg:x="84945" fg:w="73"/><text x="81.1184%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (51 samples, 0.05%)</title><rect x="80.8894%" y="485" width="0.0486%" height="15" fill="rgb(251,139,18)" fg:x="84967" fg:w="51"/><text x="81.1394%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.10%)</title><rect x="80.8370%" y="565" width="0.1047%" height="15" fill="rgb(218,22,32)" fg:x="84912" fg:w="110"/><text x="81.0870%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (110 samples, 0.10%)</title><rect x="80.8370%" y="549" width="0.1047%" height="15" fill="rgb(243,53,5)" fg:x="84912" fg:w="110"/><text x="81.0870%" y="559.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (247 samples, 0.24%)</title><rect x="81.0360%" y="533" width="0.2351%" height="15" fill="rgb(227,56,16)" fg:x="85121" fg:w="247"/><text x="81.2860%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (181 samples, 0.17%)</title><rect x="81.0988%" y="517" width="0.1723%" height="15" fill="rgb(245,53,0)" fg:x="85187" fg:w="181"/><text x="81.3488%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (181 samples, 0.17%)</title><rect x="81.0988%" y="501" width="0.1723%" height="15" fill="rgb(216,170,35)" fg:x="85187" fg:w="181"/><text x="81.3488%" y="511.50"></text></g><g><title>async_executor::steal (350 samples, 0.33%)</title><rect x="80.9417%" y="565" width="0.3332%" height="15" fill="rgb(211,200,8)" fg:x="85022" fg:w="350"/><text x="81.1917%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (336 samples, 0.32%)</title><rect x="80.9551%" y="549" width="0.3199%" height="15" fill="rgb(228,204,44)" fg:x="85036" fg:w="336"/><text x="81.2051%" y="559.50"></text></g><g><title>concurrent_queue::full_fence (424 samples, 0.40%)</title><rect x="81.5110%" y="533" width="0.4037%" height="15" fill="rgb(214,121,17)" fg:x="85620" fg:w="424"/><text x="81.7610%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (422 samples, 0.40%)</title><rect x="81.5129%" y="517" width="0.4017%" height="15" fill="rgb(233,64,38)" fg:x="85622" fg:w="422"/><text x="81.7629%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (422 samples, 0.40%)</title><rect x="81.5129%" y="501" width="0.4017%" height="15" fill="rgb(253,54,19)" fg:x="85622" fg:w="422"/><text x="81.7629%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (422 samples, 0.40%)</title><rect x="81.5129%" y="485" width="0.4017%" height="15" fill="rgb(253,94,18)" fg:x="85622" fg:w="422"/><text x="81.7629%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (608 samples, 0.58%)</title><rect x="81.3720%" y="549" width="0.5788%" height="15" fill="rgb(227,57,52)" fg:x="85474" fg:w="608"/><text x="81.6220%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (38 samples, 0.04%)</title><rect x="81.9147%" y="533" width="0.0362%" height="15" fill="rgb(230,228,50)" fg:x="86044" fg:w="38"/><text x="82.1647%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (34 samples, 0.03%)</title><rect x="81.9185%" y="517" width="0.0324%" height="15" fill="rgb(217,205,27)" fg:x="86048" fg:w="34"/><text x="82.1685%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (123 samples, 0.12%)</title><rect x="81.9718%" y="533" width="0.1171%" height="15" fill="rgb(252,71,50)" fg:x="86104" fg:w="123"/><text x="82.2218%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (121 samples, 0.12%)</title><rect x="81.9737%" y="517" width="0.1152%" height="15" fill="rgb(209,86,4)" fg:x="86106" fg:w="121"/><text x="82.2237%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (121 samples, 0.12%)</title><rect x="81.9737%" y="501" width="0.1152%" height="15" fill="rgb(229,94,0)" fg:x="86106" fg:w="121"/><text x="82.2237%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (121 samples, 0.12%)</title><rect x="81.9737%" y="485" width="0.1152%" height="15" fill="rgb(252,223,21)" fg:x="86106" fg:w="121"/><text x="82.2237%" y="495.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (12 samples, 0.01%)</title><rect x="82.0927%" y="533" width="0.0114%" height="15" fill="rgb(230,210,4)" fg:x="86231" fg:w="12"/><text x="82.3427%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (42 samples, 0.04%)</title><rect x="82.1146%" y="533" width="0.0400%" height="15" fill="rgb(240,149,38)" fg:x="86254" fg:w="42"/><text x="82.3646%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (42 samples, 0.04%)</title><rect x="82.1146%" y="517" width="0.0400%" height="15" fill="rgb(254,105,20)" fg:x="86254" fg:w="42"/><text x="82.3646%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (46 samples, 0.04%)</title><rect x="82.1546%" y="533" width="0.0438%" height="15" fill="rgb(253,87,46)" fg:x="86296" fg:w="46"/><text x="82.4046%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_or (46 samples, 0.04%)</title><rect x="82.1546%" y="517" width="0.0438%" height="15" fill="rgb(253,116,33)" fg:x="86296" fg:w="46"/><text x="82.4046%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,063 samples, 1.01%)</title><rect x="81.2749%" y="565" width="1.0120%" height="15" fill="rgb(229,198,5)" fg:x="85372" fg:w="1063"/><text x="81.5249%" y="575.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (353 samples, 0.34%)</title><rect x="81.9509%" y="549" width="0.3361%" height="15" fill="rgb(242,38,37)" fg:x="86082" fg:w="353"/><text x="82.2009%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (93 samples, 0.09%)</title><rect x="82.1984%" y="533" width="0.0885%" height="15" fill="rgb(242,69,53)" fg:x="86342" fg:w="93"/><text x="82.4484%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (93 samples, 0.09%)</title><rect x="82.1984%" y="517" width="0.0885%" height="15" fill="rgb(249,80,16)" fg:x="86342" fg:w="93"/><text x="82.4484%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (78 samples, 0.07%)</title><rect x="82.2955%" y="501" width="0.0743%" height="15" fill="rgb(206,128,11)" fg:x="86444" fg:w="78"/><text x="82.5455%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (78 samples, 0.07%)</title><rect x="82.2955%" y="485" width="0.0743%" height="15" fill="rgb(212,35,20)" fg:x="86444" fg:w="78"/><text x="82.5455%" y="495.50"></text></g><g><title>___pthread_rwlock_unlock (78 samples, 0.07%)</title><rect x="82.3697%" y="485" width="0.0743%" height="15" fill="rgb(236,79,13)" fg:x="86522" fg:w="78"/><text x="82.6197%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (166 samples, 0.16%)</title><rect x="82.2869%" y="565" width="0.1580%" height="15" fill="rgb(233,123,3)" fg:x="86435" fg:w="166"/><text x="82.5369%" y="575.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (166 samples, 0.16%)</title><rect x="82.2869%" y="549" width="0.1580%" height="15" fill="rgb(214,93,52)" fg:x="86435" fg:w="166"/><text x="82.5369%" y="559.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (163 samples, 0.16%)</title><rect x="82.2898%" y="533" width="0.1552%" height="15" fill="rgb(251,37,40)" fg:x="86438" fg:w="163"/><text x="82.5398%" y="543.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (161 samples, 0.15%)</title><rect x="82.2917%" y="517" width="0.1533%" height="15" fill="rgb(227,80,54)" fg:x="86440" fg:w="161"/><text x="82.5417%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (79 samples, 0.08%)</title><rect x="82.3697%" y="501" width="0.0752%" height="15" fill="rgb(254,48,11)" fg:x="86522" fg:w="79"/><text x="82.6197%" y="511.50"></text></g><g><title>fastrand::usize (16 samples, 0.02%)</title><rect x="82.4459%" y="565" width="0.0152%" height="15" fill="rgb(235,193,26)" fg:x="86602" fg:w="16"/><text x="82.6959%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.01%)</title><rect x="82.4488%" y="549" width="0.0124%" height="15" fill="rgb(229,99,21)" fg:x="86605" fg:w="13"/><text x="82.6988%" y="559.50"></text></g><g><title>___pthread_rwlock_rdlock (96 samples, 0.09%)</title><rect x="82.4678%" y="517" width="0.0914%" height="15" fill="rgb(211,140,41)" fg:x="86625" fg:w="96"/><text x="82.7178%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1,882 samples, 1.79%)</title><rect x="80.7980%" y="581" width="1.7917%" height="15" fill="rgb(240,227,30)" fg:x="84871" fg:w="1882"/><text x="81.0480%" y="591.50">a..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (135 samples, 0.13%)</title><rect x="82.4611%" y="565" width="0.1285%" height="15" fill="rgb(215,224,45)" fg:x="86618" fg:w="135"/><text x="82.7111%" y="575.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (131 samples, 0.12%)</title><rect x="82.4649%" y="549" width="0.1247%" height="15" fill="rgb(206,123,31)" fg:x="86622" fg:w="131"/><text x="82.7149%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (130 samples, 0.12%)</title><rect x="82.4659%" y="533" width="0.1238%" height="15" fill="rgb(210,138,16)" fg:x="86623" fg:w="130"/><text x="82.7159%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (32 samples, 0.03%)</title><rect x="82.5592%" y="517" width="0.0305%" height="15" fill="rgb(228,57,28)" fg:x="86721" fg:w="32"/><text x="82.8092%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (32 samples, 0.03%)</title><rect x="82.5592%" y="501" width="0.0305%" height="15" fill="rgb(242,170,10)" fg:x="86721" fg:w="32"/><text x="82.8092%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (24 samples, 0.02%)</title><rect x="82.5935%" y="565" width="0.0228%" height="15" fill="rgb(228,214,39)" fg:x="86757" fg:w="24"/><text x="82.8435%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="82.5935%" y="549" width="0.0228%" height="15" fill="rgb(218,179,33)" fg:x="86757" fg:w="24"/><text x="82.8435%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (23 samples, 0.02%)</title><rect x="82.5944%" y="533" width="0.0219%" height="15" fill="rgb(235,193,39)" fg:x="86758" fg:w="23"/><text x="82.8444%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (22 samples, 0.02%)</title><rect x="82.5954%" y="517" width="0.0209%" height="15" fill="rgb(219,221,36)" fg:x="86759" fg:w="22"/><text x="82.8454%" y="527.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (22 samples, 0.02%)</title><rect x="82.5954%" y="501" width="0.0209%" height="15" fill="rgb(248,218,19)" fg:x="86759" fg:w="22"/><text x="82.8454%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (29 samples, 0.03%)</title><rect x="82.6163%" y="565" width="0.0276%" height="15" fill="rgb(205,50,9)" fg:x="86781" fg:w="29"/><text x="82.8663%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.03%)</title><rect x="82.6163%" y="549" width="0.0276%" height="15" fill="rgb(238,81,28)" fg:x="86781" fg:w="29"/><text x="82.8663%" y="559.50"></text></g><g><title>__fdget_pos (17 samples, 0.02%)</title><rect x="82.6630%" y="405" width="0.0162%" height="15" fill="rgb(235,110,19)" fg:x="86830" fg:w="17"/><text x="82.9130%" y="415.50"></text></g><g><title>__fget_light (17 samples, 0.02%)</title><rect x="82.6630%" y="389" width="0.0162%" height="15" fill="rgb(214,7,14)" fg:x="86830" fg:w="17"/><text x="82.9130%" y="399.50"></text></g><g><title>select_task_rq_fair (13 samples, 0.01%)</title><rect x="82.7429%" y="277" width="0.0124%" height="15" fill="rgb(211,77,3)" fg:x="86914" fg:w="13"/><text x="82.9929%" y="287.50"></text></g><g><title>enqueue_task_fair (47 samples, 0.04%)</title><rect x="82.7572%" y="245" width="0.0447%" height="15" fill="rgb(229,5,9)" fg:x="86929" fg:w="47"/><text x="83.0072%" y="255.50"></text></g><g><title>enqueue_entity (30 samples, 0.03%)</title><rect x="82.7734%" y="229" width="0.0286%" height="15" fill="rgb(225,90,11)" fg:x="86946" fg:w="30"/><text x="83.0234%" y="239.50"></text></g><g><title>psi_group_change (23 samples, 0.02%)</title><rect x="82.8238%" y="229" width="0.0219%" height="15" fill="rgb(242,56,8)" fg:x="86999" fg:w="23"/><text x="83.0738%" y="239.50"></text></g><g><title>ttwu_do_activate (97 samples, 0.09%)</title><rect x="82.7553%" y="277" width="0.0923%" height="15" fill="rgb(249,212,39)" fg:x="86927" fg:w="97"/><text x="83.0053%" y="287.50"></text></g><g><title>enqueue_task (96 samples, 0.09%)</title><rect x="82.7563%" y="261" width="0.0914%" height="15" fill="rgb(236,90,9)" fg:x="86928" fg:w="96"/><text x="83.0063%" y="271.50"></text></g><g><title>psi_task_change (38 samples, 0.04%)</title><rect x="82.8115%" y="245" width="0.0362%" height="15" fill="rgb(206,88,35)" fg:x="86986" fg:w="38"/><text x="83.0615%" y="255.50"></text></g><g><title>__wake_up_common (160 samples, 0.15%)</title><rect x="82.7134%" y="325" width="0.1523%" height="15" fill="rgb(205,126,30)" fg:x="86883" fg:w="160"/><text x="82.9634%" y="335.50"></text></g><g><title>autoremove_wake_function (155 samples, 0.15%)</title><rect x="82.7182%" y="309" width="0.1476%" height="15" fill="rgb(230,176,12)" fg:x="86888" fg:w="155"/><text x="82.9682%" y="319.50"></text></g><g><title>try_to_wake_up (150 samples, 0.14%)</title><rect x="82.7229%" y="293" width="0.1428%" height="15" fill="rgb(243,19,9)" fg:x="86893" fg:w="150"/><text x="82.9729%" y="303.50"></text></g><g><title>__wake_up_common_lock (165 samples, 0.16%)</title><rect x="82.7115%" y="341" width="0.1571%" height="15" fill="rgb(245,171,17)" fg:x="86881" fg:w="165"/><text x="82.9615%" y="351.50"></text></g><g><title>_raw_read_lock_irqsave (12 samples, 0.01%)</title><rect x="82.8686%" y="341" width="0.0114%" height="15" fill="rgb(227,52,21)" fg:x="87046" fg:w="12"/><text x="83.1186%" y="351.50"></text></g><g><title>__wake_up_common (196 samples, 0.19%)</title><rect x="82.6963%" y="373" width="0.1866%" height="15" fill="rgb(238,69,14)" fg:x="86865" fg:w="196"/><text x="82.9463%" y="383.50"></text></g><g><title>ep_poll_callback (195 samples, 0.19%)</title><rect x="82.6972%" y="357" width="0.1856%" height="15" fill="rgb(241,156,39)" fg:x="86866" fg:w="195"/><text x="82.9472%" y="367.50"></text></g><g><title>eventfd_write (213 samples, 0.20%)</title><rect x="82.6915%" y="389" width="0.2028%" height="15" fill="rgb(212,227,28)" fg:x="86860" fg:w="213"/><text x="82.9415%" y="399.50"></text></g><g><title>ksys_write (249 samples, 0.24%)</title><rect x="82.6601%" y="421" width="0.2371%" height="15" fill="rgb(209,118,27)" fg:x="86827" fg:w="249"/><text x="82.9101%" y="431.50"></text></g><g><title>vfs_write (224 samples, 0.21%)</title><rect x="82.6839%" y="405" width="0.2133%" height="15" fill="rgb(226,102,5)" fg:x="86852" fg:w="224"/><text x="82.9339%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (24 samples, 0.02%)</title><rect x="82.9000%" y="421" width="0.0228%" height="15" fill="rgb(223,34,3)" fg:x="87079" fg:w="24"/><text x="83.1500%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (282 samples, 0.27%)</title><rect x="82.6563%" y="453" width="0.2685%" height="15" fill="rgb(221,81,38)" fg:x="86823" fg:w="282"/><text x="82.9063%" y="463.50"></text></g><g><title>do_syscall_64 (281 samples, 0.27%)</title><rect x="82.6572%" y="437" width="0.2675%" height="15" fill="rgb(236,219,28)" fg:x="86824" fg:w="281"/><text x="82.9072%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::notify (295 samples, 0.28%)</title><rect x="82.6458%" y="517" width="0.2808%" height="15" fill="rgb(213,200,14)" fg:x="86812" fg:w="295"/><text x="82.8958%" y="527.50"></text></g><g><title>polling::Poller::notify (295 samples, 0.28%)</title><rect x="82.6458%" y="501" width="0.2808%" height="15" fill="rgb(240,33,19)" fg:x="86812" fg:w="295"/><text x="82.8958%" y="511.50"></text></g><g><title>polling::epoll::Poller::notify (288 samples, 0.27%)</title><rect x="82.6525%" y="485" width="0.2742%" height="15" fill="rgb(233,113,27)" fg:x="86819" fg:w="288"/><text x="82.9025%" y="495.50"></text></g><g><title>__GI___write (288 samples, 0.27%)</title><rect x="82.6525%" y="469" width="0.2742%" height="15" fill="rgb(220,221,18)" fg:x="86819" fg:w="288"/><text x="82.9025%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (38 samples, 0.04%)</title><rect x="82.9429%" y="485" width="0.0362%" height="15" fill="rgb(238,92,8)" fg:x="87124" fg:w="38"/><text x="83.1929%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (38 samples, 0.04%)</title><rect x="82.9429%" y="469" width="0.0362%" height="15" fill="rgb(222,164,16)" fg:x="87124" fg:w="38"/><text x="83.1929%" y="479.50"></text></g><g><title>__entry_text_start (11 samples, 0.01%)</title><rect x="83.0381%" y="421" width="0.0105%" height="15" fill="rgb(241,119,3)" fg:x="87224" fg:w="11"/><text x="83.2881%" y="431.50"></text></g><g><title>_raw_spin_lock (22 samples, 0.02%)</title><rect x="83.1342%" y="341" width="0.0209%" height="15" fill="rgb(241,44,8)" fg:x="87325" fg:w="22"/><text x="83.3842%" y="351.50"></text></g><g><title>__futex_unqueue (18 samples, 0.02%)</title><rect x="83.1989%" y="325" width="0.0171%" height="15" fill="rgb(230,36,40)" fg:x="87393" fg:w="18"/><text x="83.4489%" y="335.50"></text></g><g><title>futex_wake_mark (57 samples, 0.05%)</title><rect x="83.1628%" y="341" width="0.0543%" height="15" fill="rgb(243,16,36)" fg:x="87355" fg:w="57"/><text x="83.4128%" y="351.50"></text></g><g><title>select_task_rq_fair (80 samples, 0.08%)</title><rect x="83.2970%" y="309" width="0.0762%" height="15" fill="rgb(231,4,26)" fg:x="87496" fg:w="80"/><text x="83.5470%" y="319.50"></text></g><g><title>available_idle_cpu (25 samples, 0.02%)</title><rect x="83.3494%" y="293" width="0.0238%" height="15" fill="rgb(240,9,31)" fg:x="87551" fg:w="25"/><text x="83.5994%" y="303.50"></text></g><g><title>reweight_entity (23 samples, 0.02%)</title><rect x="83.5312%" y="245" width="0.0219%" height="15" fill="rgb(207,173,15)" fg:x="87742" fg:w="23"/><text x="83.7812%" y="255.50"></text></g><g><title>update_cfs_group (14 samples, 0.01%)</title><rect x="83.5531%" y="245" width="0.0133%" height="15" fill="rgb(224,192,53)" fg:x="87765" fg:w="14"/><text x="83.8031%" y="255.50"></text></g><g><title>__update_load_avg_cfs_rq (14 samples, 0.01%)</title><rect x="83.5883%" y="229" width="0.0133%" height="15" fill="rgb(223,67,28)" fg:x="87802" fg:w="14"/><text x="83.8383%" y="239.50"></text></g><g><title>enqueue_task_fair (219 samples, 0.21%)</title><rect x="83.4017%" y="277" width="0.2085%" height="15" fill="rgb(211,20,47)" fg:x="87606" fg:w="219"/><text x="83.6517%" y="287.50"></text></g><g><title>enqueue_entity (138 samples, 0.13%)</title><rect x="83.4788%" y="261" width="0.1314%" height="15" fill="rgb(240,228,2)" fg:x="87687" fg:w="138"/><text x="83.7288%" y="271.50"></text></g><g><title>update_load_avg (44 samples, 0.04%)</title><rect x="83.5683%" y="245" width="0.0419%" height="15" fill="rgb(248,151,12)" fg:x="87781" fg:w="44"/><text x="83.8183%" y="255.50"></text></g><g><title>psi_group_change (47 samples, 0.04%)</title><rect x="83.6112%" y="277" width="0.0447%" height="15" fill="rgb(244,8,39)" fg:x="87826" fg:w="47"/><text x="83.8612%" y="287.50"></text></g><g><title>psi_group_change (117 samples, 0.11%)</title><rect x="83.6968%" y="261" width="0.1114%" height="15" fill="rgb(222,26,8)" fg:x="87916" fg:w="117"/><text x="83.9468%" y="271.50"></text></g><g><title>ttwu_do_activate (463 samples, 0.44%)</title><rect x="83.3732%" y="309" width="0.4408%" height="15" fill="rgb(213,106,44)" fg:x="87576" fg:w="463"/><text x="83.6232%" y="319.50"></text></g><g><title>enqueue_task (449 samples, 0.43%)</title><rect x="83.3865%" y="293" width="0.4275%" height="15" fill="rgb(214,129,20)" fg:x="87590" fg:w="449"/><text x="83.6365%" y="303.50"></text></g><g><title>psi_task_change (166 samples, 0.16%)</title><rect x="83.6559%" y="277" width="0.1580%" height="15" fill="rgb(212,32,13)" fg:x="87873" fg:w="166"/><text x="83.9059%" y="287.50"></text></g><g><title>ttwu_do_wakeup (40 samples, 0.04%)</title><rect x="83.8139%" y="309" width="0.0381%" height="15" fill="rgb(208,168,33)" fg:x="88039" fg:w="40"/><text x="84.0639%" y="319.50"></text></g><g><title>check_preempt_curr (37 samples, 0.04%)</title><rect x="83.8168%" y="293" width="0.0352%" height="15" fill="rgb(231,207,8)" fg:x="88042" fg:w="37"/><text x="84.0668%" y="303.50"></text></g><g><title>resched_curr (25 samples, 0.02%)</title><rect x="83.8282%" y="277" width="0.0238%" height="15" fill="rgb(235,219,23)" fg:x="88054" fg:w="25"/><text x="84.0782%" y="287.50"></text></g><g><title>ttwu_queue_wakelist (20 samples, 0.02%)</title><rect x="83.8520%" y="309" width="0.0190%" height="15" fill="rgb(226,216,26)" fg:x="88079" fg:w="20"/><text x="84.1020%" y="319.50"></text></g><g><title>__x64_sys_futex (895 samples, 0.85%)</title><rect x="83.0609%" y="389" width="0.8520%" height="15" fill="rgb(239,137,16)" fg:x="87248" fg:w="895"/><text x="83.3109%" y="399.50"></text></g><g><title>do_futex (883 samples, 0.84%)</title><rect x="83.0723%" y="373" width="0.8406%" height="15" fill="rgb(207,12,36)" fg:x="87260" fg:w="883"/><text x="83.3223%" y="383.50"></text></g><g><title>futex_wake (879 samples, 0.84%)</title><rect x="83.0761%" y="357" width="0.8368%" height="15" fill="rgb(210,214,24)" fg:x="87264" fg:w="879"/><text x="83.3261%" y="367.50"></text></g><g><title>wake_up_q (718 samples, 0.68%)</title><rect x="83.2294%" y="341" width="0.6835%" height="15" fill="rgb(206,56,30)" fg:x="87425" fg:w="718"/><text x="83.4794%" y="351.50"></text></g><g><title>try_to_wake_up (709 samples, 0.67%)</title><rect x="83.2380%" y="325" width="0.6750%" height="15" fill="rgb(228,143,26)" fg:x="87434" fg:w="709"/><text x="83.4880%" y="335.50"></text></g><g><title>update_rq_clock (44 samples, 0.04%)</title><rect x="83.8711%" y="309" width="0.0419%" height="15" fill="rgb(216,218,46)" fg:x="88099" fg:w="44"/><text x="84.1211%" y="319.50"></text></g><g><title>syscall_exit_to_user_mode (164 samples, 0.16%)</title><rect x="83.9177%" y="389" width="0.1561%" height="15" fill="rgb(206,6,19)" fg:x="88148" fg:w="164"/><text x="84.1677%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,082 samples, 1.03%)</title><rect x="83.0504%" y="421" width="1.0301%" height="15" fill="rgb(239,177,51)" fg:x="87237" fg:w="1082"/><text x="83.3004%" y="431.50"></text></g><g><title>do_syscall_64 (1,077 samples, 1.03%)</title><rect x="83.0552%" y="405" width="1.0253%" height="15" fill="rgb(216,55,25)" fg:x="87242" fg:w="1077"/><text x="83.3052%" y="415.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1,166 samples, 1.11%)</title><rect x="82.9790%" y="485" width="1.1100%" height="15" fill="rgb(231,163,29)" fg:x="87162" fg:w="1166"/><text x="83.2290%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1,166 samples, 1.11%)</title><rect x="82.9790%" y="469" width="1.1100%" height="15" fill="rgb(232,149,50)" fg:x="87162" fg:w="1166"/><text x="83.2290%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1,166 samples, 1.11%)</title><rect x="82.9790%" y="453" width="1.1100%" height="15" fill="rgb(223,142,48)" fg:x="87162" fg:w="1166"/><text x="83.2290%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (1,166 samples, 1.11%)</title><rect x="82.9790%" y="437" width="1.1100%" height="15" fill="rgb(245,83,23)" fg:x="87162" fg:w="1166"/><text x="83.2290%" y="447.50"></text></g><g><title>parking::Unparker::unpark (1,261 samples, 1.20%)</title><rect x="82.9314%" y="517" width="1.2005%" height="15" fill="rgb(224,63,2)" fg:x="87112" fg:w="1261"/><text x="83.1814%" y="527.50"></text></g><g><title>parking::Inner::unpark (1,252 samples, 1.19%)</title><rect x="82.9400%" y="501" width="1.1919%" height="15" fill="rgb(218,65,53)" fg:x="87121" fg:w="1252"/><text x="83.1900%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (45 samples, 0.04%)</title><rect x="84.0891%" y="485" width="0.0428%" height="15" fill="rgb(221,84,29)" fg:x="88328" fg:w="45"/><text x="84.3391%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (45 samples, 0.04%)</title><rect x="84.0891%" y="469" width="0.0428%" height="15" fill="rgb(234,0,32)" fg:x="88328" fg:w="45"/><text x="84.3391%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (45 samples, 0.04%)</title><rect x="84.0891%" y="453" width="0.0428%" height="15" fill="rgb(206,20,16)" fg:x="88328" fg:w="45"/><text x="84.3391%" y="463.50"></text></g><g><title>___pthread_mutex_lock (45 samples, 0.04%)</title><rect x="84.0891%" y="437" width="0.0428%" height="15" fill="rgb(244,172,18)" fg:x="88328" fg:w="45"/><text x="84.3391%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (1,567 samples, 1.49%)</title><rect x="82.6458%" y="533" width="1.4918%" height="15" fill="rgb(254,133,1)" fg:x="86812" fg:w="1567"/><text x="82.8958%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (1,597 samples, 1.52%)</title><rect x="82.6439%" y="565" width="1.5204%" height="15" fill="rgb(222,206,41)" fg:x="86810" fg:w="1597"/><text x="82.8939%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1,596 samples, 1.52%)</title><rect x="82.6449%" y="549" width="1.5194%" height="15" fill="rgb(212,3,42)" fg:x="86811" fg:w="1596"/><text x="82.8949%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (28 samples, 0.03%)</title><rect x="84.1376%" y="533" width="0.0267%" height="15" fill="rgb(241,11,4)" fg:x="88379" fg:w="28"/><text x="84.3876%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="84.1376%" y="517" width="0.0267%" height="15" fill="rgb(205,19,26)" fg:x="88379" fg:w="28"/><text x="84.3876%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (25 samples, 0.02%)</title><rect x="84.1405%" y="501" width="0.0238%" height="15" fill="rgb(210,179,32)" fg:x="88382" fg:w="25"/><text x="84.3905%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (25 samples, 0.02%)</title><rect x="84.1405%" y="485" width="0.0238%" height="15" fill="rgb(227,116,49)" fg:x="88382" fg:w="25"/><text x="84.3905%" y="495.50"></text></g><g><title>async_executor::State::notify (1,671 samples, 1.59%)</title><rect x="82.5897%" y="581" width="1.5908%" height="15" fill="rgb(211,146,6)" fg:x="86753" fg:w="1671"/><text x="82.8397%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="84.1643%" y="565" width="0.0162%" height="15" fill="rgb(219,44,39)" fg:x="88407" fg:w="17"/><text x="84.4143%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="84.1643%" y="549" width="0.0162%" height="15" fill="rgb(234,128,11)" fg:x="88407" fg:w="17"/><text x="84.4143%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (16 samples, 0.02%)</title><rect x="84.1652%" y="533" width="0.0152%" height="15" fill="rgb(220,183,53)" fg:x="88408" fg:w="16"/><text x="84.4152%" y="543.50"></text></g><g><title>___pthread_mutex_lock (16 samples, 0.02%)</title><rect x="84.1652%" y="517" width="0.0152%" height="15" fill="rgb(213,219,32)" fg:x="88408" fg:w="16"/><text x="84.4152%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (56 samples, 0.05%)</title><rect x="84.1909%" y="549" width="0.0533%" height="15" fill="rgb(232,156,16)" fg:x="88435" fg:w="56"/><text x="84.4409%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (56 samples, 0.05%)</title><rect x="84.1909%" y="533" width="0.0533%" height="15" fill="rgb(246,135,34)" fg:x="88435" fg:w="56"/><text x="84.4409%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (56 samples, 0.05%)</title><rect x="84.1909%" y="517" width="0.0533%" height="15" fill="rgb(241,99,0)" fg:x="88435" fg:w="56"/><text x="84.4409%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (56 samples, 0.05%)</title><rect x="84.1909%" y="501" width="0.0533%" height="15" fill="rgb(222,103,45)" fg:x="88435" fg:w="56"/><text x="84.4409%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (56 samples, 0.05%)</title><rect x="84.1909%" y="485" width="0.0533%" height="15" fill="rgb(212,57,4)" fg:x="88435" fg:w="56"/><text x="84.4409%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (56 samples, 0.05%)</title><rect x="84.1909%" y="469" width="0.0533%" height="15" fill="rgb(215,68,47)" fg:x="88435" fg:w="56"/><text x="84.4409%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (15 samples, 0.01%)</title><rect x="84.2442%" y="549" width="0.0143%" height="15" fill="rgb(230,84,2)" fg:x="88491" fg:w="15"/><text x="84.4942%" y="559.50"></text></g><g><title>async_executor::Sleepers::insert (77 samples, 0.07%)</title><rect x="84.1900%" y="565" width="0.0733%" height="15" fill="rgb(220,102,14)" fg:x="88434" fg:w="77"/><text x="84.4400%" y="575.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="84.2871%" y="549" width="0.0238%" height="15" fill="rgb(240,10,32)" fg:x="88536" fg:w="25"/><text x="84.5371%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (25 samples, 0.02%)</title><rect x="84.2871%" y="533" width="0.0238%" height="15" fill="rgb(215,47,27)" fg:x="88536" fg:w="25"/><text x="84.5371%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="84.2871%" y="517" width="0.0238%" height="15" fill="rgb(233,188,43)" fg:x="88536" fg:w="25"/><text x="84.5371%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="84.2871%" y="501" width="0.0238%" height="15" fill="rgb(253,190,1)" fg:x="88536" fg:w="25"/><text x="84.5371%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="84.2871%" y="485" width="0.0238%" height="15" fill="rgb(206,114,52)" fg:x="88536" fg:w="25"/><text x="84.5371%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="84.2871%" y="469" width="0.0238%" height="15" fill="rgb(233,120,37)" fg:x="88536" fg:w="25"/><text x="84.5371%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="84.3109%" y="549" width="0.0124%" height="15" fill="rgb(214,52,39)" fg:x="88561" fg:w="13"/><text x="84.5609%" y="559.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="84.3128%" y="533" width="0.0105%" height="15" fill="rgb(223,80,29)" fg:x="88563" fg:w="11"/><text x="84.5628%" y="543.50"></text></g><g><title>async_executor::Sleepers::update (61 samples, 0.06%)</title><rect x="84.2680%" y="565" width="0.0581%" height="15" fill="rgb(230,101,40)" fg:x="88516" fg:w="61"/><text x="84.5180%" y="575.50"></text></g><g><title>_raw_spin_lock (14 samples, 0.01%)</title><rect x="84.4480%" y="389" width="0.0133%" height="15" fill="rgb(219,211,8)" fg:x="88705" fg:w="14"/><text x="84.6980%" y="399.50"></text></g><g><title>__x64_sys_futex (47 samples, 0.04%)</title><rect x="84.4223%" y="437" width="0.0447%" height="15" fill="rgb(252,126,28)" fg:x="88678" fg:w="47"/><text x="84.6723%" y="447.50"></text></g><g><title>do_futex (40 samples, 0.04%)</title><rect x="84.4289%" y="421" width="0.0381%" height="15" fill="rgb(215,56,38)" fg:x="88685" fg:w="40"/><text x="84.6789%" y="431.50"></text></g><g><title>futex_wake (40 samples, 0.04%)</title><rect x="84.4289%" y="405" width="0.0381%" height="15" fill="rgb(249,55,44)" fg:x="88685" fg:w="40"/><text x="84.6789%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (57 samples, 0.05%)</title><rect x="84.4689%" y="437" width="0.0543%" height="15" fill="rgb(220,221,32)" fg:x="88727" fg:w="57"/><text x="84.7189%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (115 samples, 0.11%)</title><rect x="84.4204%" y="469" width="0.1095%" height="15" fill="rgb(212,216,41)" fg:x="88676" fg:w="115"/><text x="84.6704%" y="479.50"></text></g><g><title>do_syscall_64 (113 samples, 0.11%)</title><rect x="84.4223%" y="453" width="0.1076%" height="15" fill="rgb(228,213,43)" fg:x="88678" fg:w="113"/><text x="84.6723%" y="463.50"></text></g><g><title>__GI___lll_lock_wake (128 samples, 0.12%)</title><rect x="84.4118%" y="485" width="0.1219%" height="15" fill="rgb(211,31,26)" fg:x="88667" fg:w="128"/><text x="84.6618%" y="495.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (216 samples, 0.21%)</title><rect x="84.3290%" y="501" width="0.2056%" height="15" fill="rgb(229,202,19)" fg:x="88580" fg:w="216"/><text x="84.5790%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (224 samples, 0.21%)</title><rect x="84.3261%" y="565" width="0.2133%" height="15" fill="rgb(229,105,46)" fg:x="88577" fg:w="224"/><text x="84.5761%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (224 samples, 0.21%)</title><rect x="84.3261%" y="549" width="0.2133%" height="15" fill="rgb(235,108,1)" fg:x="88577" fg:w="224"/><text x="84.5761%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (222 samples, 0.21%)</title><rect x="84.3280%" y="533" width="0.2113%" height="15" fill="rgb(245,111,35)" fg:x="88579" fg:w="222"/><text x="84.5780%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (221 samples, 0.21%)</title><rect x="84.3290%" y="517" width="0.2104%" height="15" fill="rgb(219,185,31)" fg:x="88580" fg:w="221"/><text x="84.5790%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (79 samples, 0.08%)</title><rect x="84.5394%" y="565" width="0.0752%" height="15" fill="rgb(214,4,43)" fg:x="88801" fg:w="79"/><text x="84.7894%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (79 samples, 0.08%)</title><rect x="84.5394%" y="549" width="0.0752%" height="15" fill="rgb(235,227,40)" fg:x="88801" fg:w="79"/><text x="84.7894%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (33 samples, 0.03%)</title><rect x="84.6146%" y="565" width="0.0314%" height="15" fill="rgb(230,88,30)" fg:x="88880" fg:w="33"/><text x="84.8646%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_store (33 samples, 0.03%)</title><rect x="84.6146%" y="549" width="0.0314%" height="15" fill="rgb(216,217,1)" fg:x="88880" fg:w="33"/><text x="84.8646%" y="559.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="84.6460%" y="549" width="0.0105%" height="15" fill="rgb(248,139,50)" fg:x="88913" fg:w="11"/><text x="84.8960%" y="559.50"></text></g><g><title>std::sync::poison::Flag::borrow (11 samples, 0.01%)</title><rect x="84.6460%" y="533" width="0.0105%" height="15" fill="rgb(233,1,21)" fg:x="88913" fg:w="11"/><text x="84.8960%" y="543.50"></text></g><g><title>std::sync::poison::Flag::get (11 samples, 0.01%)</title><rect x="84.6460%" y="517" width="0.0105%" height="15" fill="rgb(215,183,12)" fg:x="88913" fg:w="11"/><text x="84.8960%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (11 samples, 0.01%)</title><rect x="84.6460%" y="501" width="0.0105%" height="15" fill="rgb(229,104,42)" fg:x="88913" fg:w="11"/><text x="84.8960%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="84.6460%" y="485" width="0.0105%" height="15" fill="rgb(243,34,48)" fg:x="88913" fg:w="11"/><text x="84.8960%" y="495.50"></text></g><g><title>__x64_sys_futex (31 samples, 0.03%)</title><rect x="84.8383%" y="453" width="0.0295%" height="15" fill="rgb(239,11,44)" fg:x="89115" fg:w="31"/><text x="85.0883%" y="463.50"></text></g><g><title>do_futex (30 samples, 0.03%)</title><rect x="84.8393%" y="437" width="0.0286%" height="15" fill="rgb(231,98,35)" fg:x="89116" fg:w="30"/><text x="85.0893%" y="447.50"></text></g><g><title>futex_wait (27 samples, 0.03%)</title><rect x="84.8421%" y="421" width="0.0257%" height="15" fill="rgb(233,28,25)" fg:x="89119" fg:w="27"/><text x="85.0921%" y="431.50"></text></g><g><title>futex_wait_setup (22 samples, 0.02%)</title><rect x="84.8469%" y="405" width="0.0209%" height="15" fill="rgb(234,123,11)" fg:x="89124" fg:w="22"/><text x="85.0969%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (13 samples, 0.01%)</title><rect x="84.8678%" y="453" width="0.0124%" height="15" fill="rgb(220,69,3)" fg:x="89146" fg:w="13"/><text x="85.1178%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (47 samples, 0.04%)</title><rect x="84.8364%" y="485" width="0.0447%" height="15" fill="rgb(214,64,36)" fg:x="89113" fg:w="47"/><text x="85.0864%" y="495.50"></text></g><g><title>do_syscall_64 (45 samples, 0.04%)</title><rect x="84.8383%" y="469" width="0.0428%" height="15" fill="rgb(211,138,32)" fg:x="89115" fg:w="45"/><text x="85.0883%" y="479.50"></text></g><g><title>__GI___lll_lock_wait (69 samples, 0.07%)</title><rect x="84.8174%" y="501" width="0.0657%" height="15" fill="rgb(213,118,47)" fg:x="89093" fg:w="69"/><text x="85.0674%" y="511.50"></text></g><g><title>async_executor::Ticker::sleep (739 samples, 0.70%)</title><rect x="84.1805%" y="581" width="0.7035%" height="15" fill="rgb(243,124,49)" fg:x="88424" fg:w="739"/><text x="84.4305%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (250 samples, 0.24%)</title><rect x="84.6460%" y="565" width="0.2380%" height="15" fill="rgb(221,30,28)" fg:x="88913" fg:w="250"/><text x="84.8960%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (239 samples, 0.23%)</title><rect x="84.6565%" y="549" width="0.2275%" height="15" fill="rgb(246,37,13)" fg:x="88924" fg:w="239"/><text x="84.9065%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (233 samples, 0.22%)</title><rect x="84.6622%" y="533" width="0.2218%" height="15" fill="rgb(249,66,14)" fg:x="88930" fg:w="233"/><text x="84.9122%" y="543.50"></text></g><g><title>___pthread_mutex_lock (233 samples, 0.22%)</title><rect x="84.6622%" y="517" width="0.2218%" height="15" fill="rgb(213,166,5)" fg:x="88930" fg:w="233"/><text x="84.9122%" y="527.50"></text></g><g><title>async_executor::Sleepers::remove (20 samples, 0.02%)</title><rect x="84.8888%" y="565" width="0.0190%" height="15" fill="rgb(221,66,24)" fg:x="89168" fg:w="20"/><text x="85.1388%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (11 samples, 0.01%)</title><rect x="84.8973%" y="549" width="0.0105%" height="15" fill="rgb(210,132,17)" fg:x="89177" fg:w="11"/><text x="85.1473%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (11 samples, 0.01%)</title><rect x="84.8973%" y="533" width="0.0105%" height="15" fill="rgb(243,202,5)" fg:x="89177" fg:w="11"/><text x="85.1473%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="84.8973%" y="517" width="0.0105%" height="15" fill="rgb(233,70,48)" fg:x="89177" fg:w="11"/><text x="85.1473%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (11 samples, 0.01%)</title><rect x="84.8973%" y="501" width="0.0105%" height="15" fill="rgb(238,41,26)" fg:x="89177" fg:w="11"/><text x="85.1473%" y="511.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="84.8973%" y="485" width="0.0105%" height="15" fill="rgb(241,19,31)" fg:x="89177" fg:w="11"/><text x="85.1473%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="84.8973%" y="469" width="0.0105%" height="15" fill="rgb(214,76,10)" fg:x="89177" fg:w="11"/><text x="85.1473%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="84.8973%" y="453" width="0.0105%" height="15" fill="rgb(254,202,22)" fg:x="89177" fg:w="11"/><text x="85.1473%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.01%)</title><rect x="84.8973%" y="437" width="0.0105%" height="15" fill="rgb(214,72,24)" fg:x="89177" fg:w="11"/><text x="85.1473%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.01%)</title><rect x="84.8973%" y="421" width="0.0105%" height="15" fill="rgb(221,92,46)" fg:x="89177" fg:w="11"/><text x="85.1473%" y="431.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (52 samples, 0.05%)</title><rect x="84.9107%" y="501" width="0.0495%" height="15" fill="rgb(246,13,50)" fg:x="89191" fg:w="52"/><text x="85.1607%" y="511.50"></text></g><g><title>__GI___lll_lock_wake (21 samples, 0.02%)</title><rect x="84.9402%" y="485" width="0.0200%" height="15" fill="rgb(240,165,38)" fg:x="89222" fg:w="21"/><text x="85.1902%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="84.9411%" y="469" width="0.0190%" height="15" fill="rgb(241,24,51)" fg:x="89223" fg:w="20"/><text x="85.1911%" y="479.50"></text></g><g><title>do_syscall_64 (19 samples, 0.02%)</title><rect x="84.9421%" y="453" width="0.0181%" height="15" fill="rgb(227,51,44)" fg:x="89224" fg:w="19"/><text x="85.1921%" y="463.50"></text></g><g><title>syscall_exit_to_user_mode (15 samples, 0.01%)</title><rect x="84.9459%" y="437" width="0.0143%" height="15" fill="rgb(231,121,3)" fg:x="89228" fg:w="15"/><text x="85.1959%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (57 samples, 0.05%)</title><rect x="84.9078%" y="565" width="0.0543%" height="15" fill="rgb(245,3,41)" fg:x="89188" fg:w="57"/><text x="85.1578%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="84.9078%" y="549" width="0.0543%" height="15" fill="rgb(214,13,26)" fg:x="89188" fg:w="57"/><text x="85.1578%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (54 samples, 0.05%)</title><rect x="84.9107%" y="533" width="0.0514%" height="15" fill="rgb(252,75,11)" fg:x="89191" fg:w="54"/><text x="85.1607%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (54 samples, 0.05%)</title><rect x="84.9107%" y="517" width="0.0514%" height="15" fill="rgb(218,226,17)" fg:x="89191" fg:w="54"/><text x="85.1607%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (30 samples, 0.03%)</title><rect x="84.9621%" y="565" width="0.0286%" height="15" fill="rgb(248,89,38)" fg:x="89245" fg:w="30"/><text x="85.2121%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (30 samples, 0.03%)</title><rect x="84.9621%" y="549" width="0.0286%" height="15" fill="rgb(237,73,46)" fg:x="89245" fg:w="30"/><text x="85.2121%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (41 samples, 0.04%)</title><rect x="84.9906%" y="565" width="0.0390%" height="15" fill="rgb(242,78,33)" fg:x="89275" fg:w="41"/><text x="85.2406%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (41 samples, 0.04%)</title><rect x="84.9906%" y="549" width="0.0390%" height="15" fill="rgb(235,60,3)" fg:x="89275" fg:w="41"/><text x="85.2406%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,511 samples, 4.29%)</title><rect x="80.7780%" y="645" width="4.2945%" height="15" fill="rgb(216,172,19)" fg:x="84850" fg:w="4511"/><text x="81.0280%" y="655.50">&lt;core..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (4,507 samples, 4.29%)</title><rect x="80.7818%" y="629" width="4.2907%" height="15" fill="rgb(227,6,42)" fg:x="84854" fg:w="4507"/><text x="81.0318%" y="639.50">async..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4,504 samples, 4.29%)</title><rect x="80.7846%" y="613" width="4.2878%" height="15" fill="rgb(223,207,42)" fg:x="84857" fg:w="4504"/><text x="81.0346%" y="623.50">&lt;futu..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (4,496 samples, 4.28%)</title><rect x="80.7923%" y="597" width="4.2802%" height="15" fill="rgb(246,138,30)" fg:x="84865" fg:w="4496"/><text x="81.0423%" y="607.50">async..</text></g><g><title>async_executor::Ticker::wake (198 samples, 0.19%)</title><rect x="84.8840%" y="581" width="0.1885%" height="15" fill="rgb(251,199,47)" fg:x="89163" fg:w="198"/><text x="85.1340%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (45 samples, 0.04%)</title><rect x="85.0297%" y="565" width="0.0428%" height="15" fill="rgb(228,218,44)" fg:x="89316" fg:w="45"/><text x="85.2797%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (43 samples, 0.04%)</title><rect x="85.0316%" y="549" width="0.0409%" height="15" fill="rgb(220,68,6)" fg:x="89318" fg:w="43"/><text x="85.2816%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (42 samples, 0.04%)</title><rect x="85.0325%" y="533" width="0.0400%" height="15" fill="rgb(240,60,26)" fg:x="89319" fg:w="42"/><text x="85.2825%" y="543.50"></text></g><g><title>___pthread_mutex_lock (42 samples, 0.04%)</title><rect x="85.0325%" y="517" width="0.0400%" height="15" fill="rgb(211,200,19)" fg:x="89319" fg:w="42"/><text x="85.2825%" y="527.50"></text></g><g><title>__GI___lll_lock_wait (22 samples, 0.02%)</title><rect x="85.0516%" y="501" width="0.0209%" height="15" fill="rgb(242,145,30)" fg:x="89339" fg:w="22"/><text x="85.3016%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.02%)</title><rect x="85.0544%" y="485" width="0.0181%" height="15" fill="rgb(225,64,13)" fg:x="89342" fg:w="19"/><text x="85.3044%" y="495.50"></text></g><g><title>do_syscall_64 (19 samples, 0.02%)</title><rect x="85.0544%" y="469" width="0.0181%" height="15" fill="rgb(218,103,35)" fg:x="89342" fg:w="19"/><text x="85.3044%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,558 samples, 4.34%)</title><rect x="80.7608%" y="677" width="4.3393%" height="15" fill="rgb(216,93,46)" fg:x="84832" fg:w="4558"/><text x="81.0108%" y="687.50">&lt;core..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (4,556 samples, 4.34%)</title><rect x="80.7627%" y="661" width="4.3374%" height="15" fill="rgb(225,159,27)" fg:x="84834" fg:w="4556"/><text x="81.0127%" y="671.50">async..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (27 samples, 0.03%)</title><rect x="85.0744%" y="645" width="0.0257%" height="15" fill="rgb(225,204,11)" fg:x="89363" fg:w="27"/><text x="85.3244%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (27 samples, 0.03%)</title><rect x="85.0744%" y="629" width="0.0257%" height="15" fill="rgb(205,56,4)" fg:x="89363" fg:w="27"/><text x="85.3244%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (23 samples, 0.02%)</title><rect x="85.1753%" y="549" width="0.0219%" height="15" fill="rgb(206,6,35)" fg:x="89469" fg:w="23"/><text x="85.4253%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (22 samples, 0.02%)</title><rect x="85.1763%" y="533" width="0.0209%" height="15" fill="rgb(247,73,52)" fg:x="89470" fg:w="22"/><text x="85.4263%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (22 samples, 0.02%)</title><rect x="85.1982%" y="533" width="0.0209%" height="15" fill="rgb(246,97,4)" fg:x="89493" fg:w="22"/><text x="85.4482%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::_{{closure}} (40 samples, 0.04%)</title><rect x="85.2315%" y="485" width="0.0381%" height="15" fill="rgb(212,37,15)" fg:x="89528" fg:w="40"/><text x="85.4815%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (19 samples, 0.02%)</title><rect x="85.8312%" y="469" width="0.0181%" height="15" fill="rgb(208,130,40)" fg:x="90158" fg:w="19"/><text x="86.0812%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (19 samples, 0.02%)</title><rect x="85.8312%" y="453" width="0.0181%" height="15" fill="rgb(236,55,29)" fg:x="90158" fg:w="19"/><text x="86.0812%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.01%)</title><rect x="85.8389%" y="437" width="0.0105%" height="15" fill="rgb(209,156,45)" fg:x="90166" fg:w="11"/><text x="86.0889%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (27 samples, 0.03%)</title><rect x="85.8493%" y="469" width="0.0257%" height="15" fill="rgb(249,107,4)" fg:x="90177" fg:w="27"/><text x="86.0993%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (20 samples, 0.02%)</title><rect x="85.8560%" y="453" width="0.0190%" height="15" fill="rgb(227,7,13)" fg:x="90184" fg:w="20"/><text x="86.1060%" y="463.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="85.8750%" y="469" width="0.0228%" height="15" fill="rgb(250,129,14)" fg:x="90204" fg:w="24"/><text x="86.1250%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="85.9122%" y="453" width="0.0114%" height="15" fill="rgb(229,92,13)" fg:x="90243" fg:w="12"/><text x="86.1622%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (16 samples, 0.02%)</title><rect x="86.1806%" y="421" width="0.0152%" height="15" fill="rgb(245,98,39)" fg:x="90525" fg:w="16"/><text x="86.4306%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (16 samples, 0.02%)</title><rect x="86.1806%" y="405" width="0.0152%" height="15" fill="rgb(234,135,48)" fg:x="90525" fg:w="16"/><text x="86.4306%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (16 samples, 0.02%)</title><rect x="86.1806%" y="389" width="0.0152%" height="15" fill="rgb(230,98,28)" fg:x="90525" fg:w="16"/><text x="86.4306%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="86.1806%" y="373" width="0.0152%" height="15" fill="rgb(223,121,0)" fg:x="90525" fg:w="16"/><text x="86.4306%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16 samples, 0.02%)</title><rect x="86.1806%" y="357" width="0.0152%" height="15" fill="rgb(234,173,33)" fg:x="90525" fg:w="16"/><text x="86.4306%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (31 samples, 0.03%)</title><rect x="86.1959%" y="373" width="0.0295%" height="15" fill="rgb(245,47,8)" fg:x="90541" fg:w="31"/><text x="86.4459%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (14 samples, 0.01%)</title><rect x="86.2121%" y="357" width="0.0133%" height="15" fill="rgb(205,17,20)" fg:x="90558" fg:w="14"/><text x="86.4621%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (422 samples, 0.40%)</title><rect x="85.8979%" y="469" width="0.4017%" height="15" fill="rgb(232,151,16)" fg:x="90228" fg:w="422"/><text x="86.1479%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (395 samples, 0.38%)</title><rect x="85.9236%" y="453" width="0.3760%" height="15" fill="rgb(208,30,32)" fg:x="90255" fg:w="395"/><text x="86.1736%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (125 samples, 0.12%)</title><rect x="86.1806%" y="437" width="0.1190%" height="15" fill="rgb(254,26,3)" fg:x="90525" fg:w="125"/><text x="86.4306%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (109 samples, 0.10%)</title><rect x="86.1959%" y="421" width="0.1038%" height="15" fill="rgb(240,177,30)" fg:x="90541" fg:w="109"/><text x="86.4459%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (109 samples, 0.10%)</title><rect x="86.1959%" y="405" width="0.1038%" height="15" fill="rgb(248,76,44)" fg:x="90541" fg:w="109"/><text x="86.4459%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (109 samples, 0.10%)</title><rect x="86.1959%" y="389" width="0.1038%" height="15" fill="rgb(241,186,54)" fg:x="90541" fg:w="109"/><text x="86.4459%" y="399.50"></text></g><g><title>core::mem::drop (77 samples, 0.07%)</title><rect x="86.2263%" y="373" width="0.0733%" height="15" fill="rgb(249,171,29)" fg:x="90573" fg:w="77"/><text x="86.4763%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (77 samples, 0.07%)</title><rect x="86.2263%" y="357" width="0.0733%" height="15" fill="rgb(237,151,44)" fg:x="90573" fg:w="77"/><text x="86.4763%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.07%)</title><rect x="86.2263%" y="341" width="0.0733%" height="15" fill="rgb(228,174,30)" fg:x="90573" fg:w="77"/><text x="86.4763%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (32 samples, 0.03%)</title><rect x="86.2692%" y="325" width="0.0305%" height="15" fill="rgb(252,14,37)" fg:x="90618" fg:w="32"/><text x="86.5192%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="86.5367%" y="453" width="0.0133%" height="15" fill="rgb(207,111,40)" fg:x="90899" fg:w="14"/><text x="86.7867%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (14 samples, 0.01%)</title><rect x="86.5367%" y="437" width="0.0133%" height="15" fill="rgb(248,171,54)" fg:x="90899" fg:w="14"/><text x="86.7867%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (257 samples, 0.24%)</title><rect x="86.3063%" y="469" width="0.2447%" height="15" fill="rgb(211,127,2)" fg:x="90657" fg:w="257"/><text x="86.5563%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (277 samples, 0.26%)</title><rect x="86.5814%" y="437" width="0.2637%" height="15" fill="rgb(236,87,47)" fg:x="90946" fg:w="277"/><text x="86.8314%" y="447.50"></text></g><g><title>aligned_size (20 samples, 0.02%)</title><rect x="86.8508%" y="325" width="0.0190%" height="15" fill="rgb(223,190,45)" fg:x="91229" fg:w="20"/><text x="87.1008%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="86.9108%" y="165" width="0.0133%" height="15" fill="rgb(215,5,16)" fg:x="91292" fg:w="14"/><text x="87.1608%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="86.9118%" y="149" width="0.0124%" height="15" fill="rgb(252,82,33)" fg:x="91293" fg:w="13"/><text x="87.1618%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (27 samples, 0.03%)</title><rect x="86.9051%" y="213" width="0.0257%" height="15" fill="rgb(247,213,44)" fg:x="91286" fg:w="27"/><text x="87.1551%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (27 samples, 0.03%)</title><rect x="86.9051%" y="197" width="0.0257%" height="15" fill="rgb(205,196,44)" fg:x="91286" fg:w="27"/><text x="87.1551%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (26 samples, 0.02%)</title><rect x="86.9061%" y="181" width="0.0248%" height="15" fill="rgb(237,96,54)" fg:x="91287" fg:w="26"/><text x="87.1561%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (30 samples, 0.03%)</title><rect x="86.9051%" y="229" width="0.0286%" height="15" fill="rgb(230,113,34)" fg:x="91286" fg:w="30"/><text x="87.1551%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (43 samples, 0.04%)</title><rect x="86.9004%" y="245" width="0.0409%" height="15" fill="rgb(221,224,12)" fg:x="91281" fg:w="43"/><text x="87.1504%" y="255.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (31 samples, 0.03%)</title><rect x="86.9508%" y="229" width="0.0295%" height="15" fill="rgb(219,112,44)" fg:x="91334" fg:w="31"/><text x="87.2008%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (275 samples, 0.26%)</title><rect x="86.9004%" y="277" width="0.2618%" height="15" fill="rgb(210,31,13)" fg:x="91281" fg:w="275"/><text x="87.1504%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (275 samples, 0.26%)</title><rect x="86.9004%" y="261" width="0.2618%" height="15" fill="rgb(230,25,16)" fg:x="91281" fg:w="275"/><text x="87.1504%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (232 samples, 0.22%)</title><rect x="86.9413%" y="245" width="0.2209%" height="15" fill="rgb(246,108,53)" fg:x="91324" fg:w="232"/><text x="87.1913%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (191 samples, 0.18%)</title><rect x="86.9803%" y="229" width="0.1818%" height="15" fill="rgb(241,172,50)" fg:x="91365" fg:w="191"/><text x="87.2303%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (191 samples, 0.18%)</title><rect x="86.9803%" y="213" width="0.1818%" height="15" fill="rgb(235,141,10)" fg:x="91365" fg:w="191"/><text x="87.2303%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (191 samples, 0.18%)</title><rect x="86.9803%" y="197" width="0.1818%" height="15" fill="rgb(220,174,43)" fg:x="91365" fg:w="191"/><text x="87.2303%" y="207.50"></text></g><g><title>snmalloc::FreeListIter::take (14 samples, 0.01%)</title><rect x="87.1774%" y="245" width="0.0133%" height="15" fill="rgb(215,181,40)" fg:x="91572" fg:w="14"/><text x="87.4274%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (14 samples, 0.01%)</title><rect x="87.1774%" y="229" width="0.0133%" height="15" fill="rgb(230,97,2)" fg:x="91572" fg:w="14"/><text x="87.4274%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="87.1622%" y="277" width="0.0343%" height="15" fill="rgb(211,25,27)" fg:x="91556" fg:w="36"/><text x="87.4122%" y="287.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (31 samples, 0.03%)</title><rect x="87.1669%" y="261" width="0.0295%" height="15" fill="rgb(230,87,26)" fg:x="91561" fg:w="31"/><text x="87.4169%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::empty (24 samples, 0.02%)</title><rect x="87.1964%" y="277" width="0.0228%" height="15" fill="rgb(227,160,17)" fg:x="91592" fg:w="24"/><text x="87.4464%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (24 samples, 0.02%)</title><rect x="87.1964%" y="261" width="0.0228%" height="15" fill="rgb(244,85,34)" fg:x="91592" fg:w="24"/><text x="87.4464%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (500 samples, 0.48%)</title><rect x="86.8708%" y="325" width="0.4760%" height="15" fill="rgb(207,70,0)" fg:x="91250" fg:w="500"/><text x="87.1208%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (500 samples, 0.48%)</title><rect x="86.8708%" y="309" width="0.4760%" height="15" fill="rgb(223,129,7)" fg:x="91250" fg:w="500"/><text x="87.1208%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (481 samples, 0.46%)</title><rect x="86.8889%" y="293" width="0.4579%" height="15" fill="rgb(246,105,7)" fg:x="91269" fg:w="481"/><text x="87.1389%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (134 samples, 0.13%)</title><rect x="87.2193%" y="277" width="0.1276%" height="15" fill="rgb(215,154,42)" fg:x="91616" fg:w="134"/><text x="87.4693%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (134 samples, 0.13%)</title><rect x="87.2193%" y="261" width="0.1276%" height="15" fill="rgb(220,215,30)" fg:x="91616" fg:w="134"/><text x="87.4693%" y="271.50"></text></g><g><title>alloc::alloc::exchange_malloc (535 samples, 0.51%)</title><rect x="86.8451%" y="437" width="0.5093%" height="15" fill="rgb(228,81,51)" fg:x="91223" fg:w="535"/><text x="87.0951%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (535 samples, 0.51%)</title><rect x="86.8451%" y="421" width="0.5093%" height="15" fill="rgb(247,71,54)" fg:x="91223" fg:w="535"/><text x="87.0951%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (535 samples, 0.51%)</title><rect x="86.8451%" y="405" width="0.5093%" height="15" fill="rgb(234,176,34)" fg:x="91223" fg:w="535"/><text x="87.0951%" y="415.50"></text></g><g><title>alloc::alloc::alloc (530 samples, 0.50%)</title><rect x="86.8499%" y="389" width="0.5046%" height="15" fill="rgb(241,103,54)" fg:x="91228" fg:w="530"/><text x="87.0999%" y="399.50"></text></g><g><title>__rg_alloc (530 samples, 0.50%)</title><rect x="86.8499%" y="373" width="0.5046%" height="15" fill="rgb(228,22,34)" fg:x="91228" fg:w="530"/><text x="87.0999%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (530 samples, 0.50%)</title><rect x="86.8499%" y="357" width="0.5046%" height="15" fill="rgb(241,179,48)" fg:x="91228" fg:w="530"/><text x="87.0999%" y="367.50"></text></g><g><title>rust_alloc (529 samples, 0.50%)</title><rect x="86.8508%" y="341" width="0.5036%" height="15" fill="rgb(235,167,37)" fg:x="91229" fg:w="529"/><text x="87.1008%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (845 samples, 0.80%)</title><rect x="86.5510%" y="453" width="0.8044%" height="15" fill="rgb(213,109,30)" fg:x="90914" fg:w="845"/><text x="86.8010%" y="463.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (855 samples, 0.81%)</title><rect x="86.5510%" y="469" width="0.8140%" height="15" fill="rgb(222,172,16)" fg:x="90914" fg:w="855"/><text x="86.8010%" y="479.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (90 samples, 0.09%)</title><rect x="87.3802%" y="453" width="0.0857%" height="15" fill="rgb(233,192,5)" fg:x="91785" fg:w="90"/><text x="87.6302%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (58 samples, 0.06%)</title><rect x="87.4106%" y="437" width="0.0552%" height="15" fill="rgb(247,189,41)" fg:x="91817" fg:w="58"/><text x="87.6606%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33 samples, 0.03%)</title><rect x="87.4344%" y="421" width="0.0314%" height="15" fill="rgb(218,134,47)" fg:x="91842" fg:w="33"/><text x="87.6844%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 0.03%)</title><rect x="87.4344%" y="405" width="0.0314%" height="15" fill="rgb(216,29,3)" fg:x="91842" fg:w="33"/><text x="87.6844%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 0.03%)</title><rect x="87.4344%" y="389" width="0.0314%" height="15" fill="rgb(246,140,12)" fg:x="91842" fg:w="33"/><text x="87.6844%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="87.4459%" y="373" width="0.0200%" height="15" fill="rgb(230,136,11)" fg:x="91854" fg:w="21"/><text x="87.6959%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="87.4468%" y="357" width="0.0190%" height="15" fill="rgb(247,22,47)" fg:x="91855" fg:w="20"/><text x="87.6968%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.02%)</title><rect x="87.4468%" y="341" width="0.0190%" height="15" fill="rgb(218,84,22)" fg:x="91855" fg:w="20"/><text x="87.6968%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (11 samples, 0.01%)</title><rect x="87.4554%" y="325" width="0.0105%" height="15" fill="rgb(216,87,39)" fg:x="91864" fg:w="11"/><text x="87.7054%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (11 samples, 0.01%)</title><rect x="87.4554%" y="309" width="0.0105%" height="15" fill="rgb(221,178,8)" fg:x="91864" fg:w="11"/><text x="87.7054%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (11 samples, 0.01%)</title><rect x="87.4554%" y="293" width="0.0105%" height="15" fill="rgb(230,42,11)" fg:x="91864" fg:w="11"/><text x="87.7054%" y="303.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (425 samples, 0.40%)</title><rect x="87.4658%" y="453" width="0.4046%" height="15" fill="rgb(237,229,4)" fg:x="91875" fg:w="425"/><text x="87.7158%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="87.8514%" y="437" width="0.0190%" height="15" fill="rgb(222,31,33)" fg:x="92280" fg:w="20"/><text x="88.1014%" y="447.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (532 samples, 0.51%)</title><rect x="87.3649%" y="469" width="0.5065%" height="15" fill="rgb(210,17,39)" fg:x="91769" fg:w="532"/><text x="87.6149%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2,255 samples, 2.15%)</title><rect x="87.8714%" y="469" width="2.1468%" height="15" fill="rgb(244,93,20)" fg:x="92301" fg:w="2255"/><text x="88.1214%" y="479.50">_..</text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="90.0486%" y="277" width="0.0133%" height="15" fill="rgb(210,40,47)" fg:x="94588" fg:w="14"/><text x="90.2986%" y="287.50"></text></g><g><title>sizeclass_to_size (12 samples, 0.01%)</title><rect x="90.0801%" y="213" width="0.0114%" height="15" fill="rgb(239,211,47)" fg:x="94621" fg:w="12"/><text x="90.3301%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (12 samples, 0.01%)</title><rect x="90.0801%" y="197" width="0.0114%" height="15" fill="rgb(251,223,49)" fg:x="94621" fg:w="12"/><text x="90.3301%" y="207.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (28 samples, 0.03%)</title><rect x="90.1534%" y="181" width="0.0267%" height="15" fill="rgb(221,149,5)" fg:x="94698" fg:w="28"/><text x="90.4034%" y="191.50"></text></g><g><title> (28 samples, 0.03%)</title><rect x="90.1534%" y="165" width="0.0267%" height="15" fill="rgb(219,224,51)" fg:x="94698" fg:w="28"/><text x="90.4034%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (108 samples, 0.10%)</title><rect x="90.0915%" y="213" width="0.1028%" height="15" fill="rgb(223,7,8)" fg:x="94633" fg:w="108"/><text x="90.3415%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (94 samples, 0.09%)</title><rect x="90.1048%" y="197" width="0.0895%" height="15" fill="rgb(241,217,22)" fg:x="94647" fg:w="94"/><text x="90.3548%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (13 samples, 0.01%)</title><rect x="90.1819%" y="181" width="0.0124%" height="15" fill="rgb(248,209,0)" fg:x="94728" fg:w="13"/><text x="90.4319%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (203 samples, 0.19%)</title><rect x="90.0477%" y="293" width="0.1933%" height="15" fill="rgb(217,205,4)" fg:x="94587" fg:w="203"/><text x="90.2977%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (179 samples, 0.17%)</title><rect x="90.0705%" y="277" width="0.1704%" height="15" fill="rgb(228,124,39)" fg:x="94611" fg:w="179"/><text x="90.3205%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (179 samples, 0.17%)</title><rect x="90.0705%" y="261" width="0.1704%" height="15" fill="rgb(250,116,42)" fg:x="94611" fg:w="179"/><text x="90.3205%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (179 samples, 0.17%)</title><rect x="90.0705%" y="245" width="0.1704%" height="15" fill="rgb(223,202,9)" fg:x="94611" fg:w="179"/><text x="90.3205%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (179 samples, 0.17%)</title><rect x="90.0705%" y="229" width="0.1704%" height="15" fill="rgb(242,222,40)" fg:x="94611" fg:w="179"/><text x="90.3205%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (48 samples, 0.05%)</title><rect x="90.1953%" y="213" width="0.0457%" height="15" fill="rgb(229,99,46)" fg:x="94742" fg:w="48"/><text x="90.4453%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (269 samples, 0.26%)</title><rect x="90.0210%" y="469" width="0.2561%" height="15" fill="rgb(225,56,46)" fg:x="94559" fg:w="269"/><text x="90.2710%" y="479.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (269 samples, 0.26%)</title><rect x="90.0210%" y="453" width="0.2561%" height="15" fill="rgb(227,94,5)" fg:x="94559" fg:w="269"/><text x="90.2710%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (260 samples, 0.25%)</title><rect x="90.0296%" y="437" width="0.2475%" height="15" fill="rgb(205,112,38)" fg:x="94568" fg:w="260"/><text x="90.2796%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (260 samples, 0.25%)</title><rect x="90.0296%" y="421" width="0.2475%" height="15" fill="rgb(231,133,46)" fg:x="94568" fg:w="260"/><text x="90.2796%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (260 samples, 0.25%)</title><rect x="90.0296%" y="405" width="0.2475%" height="15" fill="rgb(217,16,9)" fg:x="94568" fg:w="260"/><text x="90.2796%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (260 samples, 0.25%)</title><rect x="90.0296%" y="389" width="0.2475%" height="15" fill="rgb(249,173,9)" fg:x="94568" fg:w="260"/><text x="90.2796%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (260 samples, 0.25%)</title><rect x="90.0296%" y="373" width="0.2475%" height="15" fill="rgb(205,163,53)" fg:x="94568" fg:w="260"/><text x="90.2796%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (260 samples, 0.25%)</title><rect x="90.0296%" y="357" width="0.2475%" height="15" fill="rgb(217,54,41)" fg:x="94568" fg:w="260"/><text x="90.2796%" y="367.50"></text></g><g><title>__rg_dealloc (260 samples, 0.25%)</title><rect x="90.0296%" y="341" width="0.2475%" height="15" fill="rgb(228,216,12)" fg:x="94568" fg:w="260"/><text x="90.2796%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (260 samples, 0.25%)</title><rect x="90.0296%" y="325" width="0.2475%" height="15" fill="rgb(244,228,15)" fg:x="94568" fg:w="260"/><text x="90.2796%" y="335.50"></text></g><g><title>rust_dealloc (260 samples, 0.25%)</title><rect x="90.0296%" y="309" width="0.2475%" height="15" fill="rgb(221,176,53)" fg:x="94568" fg:w="260"/><text x="90.2796%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (38 samples, 0.04%)</title><rect x="90.2410%" y="293" width="0.0362%" height="15" fill="rgb(205,94,34)" fg:x="94790" fg:w="38"/><text x="90.4910%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (41 samples, 0.04%)</title><rect x="90.2771%" y="453" width="0.0390%" height="15" fill="rgb(213,110,48)" fg:x="94828" fg:w="41"/><text x="90.5271%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (45 samples, 0.04%)</title><rect x="90.2771%" y="469" width="0.0428%" height="15" fill="rgb(236,142,28)" fg:x="94828" fg:w="45"/><text x="90.5271%" y="479.50"></text></g><g><title>rust_dealloc (25 samples, 0.02%)</title><rect x="90.3552%" y="325" width="0.0238%" height="15" fill="rgb(225,135,29)" fg:x="94910" fg:w="25"/><text x="90.6052%" y="335.50"></text></g><g><title>rust_dealloc (23 samples, 0.02%)</title><rect x="90.3809%" y="261" width="0.0219%" height="15" fill="rgb(252,45,31)" fg:x="94937" fg:w="23"/><text x="90.6309%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (25 samples, 0.02%)</title><rect x="90.4295%" y="213" width="0.0238%" height="15" fill="rgb(211,187,50)" fg:x="94988" fg:w="25"/><text x="90.6795%" y="223.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="90.4352%" y="197" width="0.0181%" height="15" fill="rgb(229,109,7)" fg:x="94994" fg:w="19"/><text x="90.6852%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (59 samples, 0.06%)</title><rect x="90.4066%" y="261" width="0.0562%" height="15" fill="rgb(251,131,51)" fg:x="94964" fg:w="59"/><text x="90.6566%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (59 samples, 0.06%)</title><rect x="90.4066%" y="245" width="0.0562%" height="15" fill="rgb(251,180,35)" fg:x="94964" fg:w="59"/><text x="90.6566%" y="255.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (58 samples, 0.06%)</title><rect x="90.4076%" y="229" width="0.0552%" height="15" fill="rgb(211,46,32)" fg:x="94965" fg:w="58"/><text x="90.6576%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (89 samples, 0.08%)</title><rect x="90.3809%" y="293" width="0.0847%" height="15" fill="rgb(248,123,17)" fg:x="94937" fg:w="89"/><text x="90.6309%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (89 samples, 0.08%)</title><rect x="90.3809%" y="277" width="0.0847%" height="15" fill="rgb(227,141,18)" fg:x="94937" fg:w="89"/><text x="90.6309%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (103 samples, 0.10%)</title><rect x="90.3809%" y="325" width="0.0981%" height="15" fill="rgb(216,102,9)" fg:x="94937" fg:w="103"/><text x="90.6309%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (103 samples, 0.10%)</title><rect x="90.3809%" y="309" width="0.0981%" height="15" fill="rgb(253,47,13)" fg:x="94937" fg:w="103"/><text x="90.6309%" y="319.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="90.4656%" y="293" width="0.0133%" height="15" fill="rgb(226,93,23)" fg:x="95026" fg:w="14"/><text x="90.7156%" y="303.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="90.4656%" y="277" width="0.0133%" height="15" fill="rgb(247,104,17)" fg:x="95026" fg:w="14"/><text x="90.7156%" y="287.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="90.4656%" y="261" width="0.0133%" height="15" fill="rgb(233,203,26)" fg:x="95026" fg:w="14"/><text x="90.7156%" y="271.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="90.4656%" y="245" width="0.0133%" height="15" fill="rgb(244,98,49)" fg:x="95026" fg:w="14"/><text x="90.7156%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (139 samples, 0.13%)</title><rect x="90.3533%" y="341" width="0.1323%" height="15" fill="rgb(235,134,22)" fg:x="94908" fg:w="139"/><text x="90.6033%" y="351.50"></text></g><g><title>rust_dealloc (159 samples, 0.15%)</title><rect x="90.3466%" y="357" width="0.1514%" height="15" fill="rgb(221,70,32)" fg:x="94901" fg:w="159"/><text x="90.5966%" y="367.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="90.4856%" y="341" width="0.0124%" height="15" fill="rgb(238,15,50)" fg:x="95047" fg:w="13"/><text x="90.7356%" y="351.50"></text></g><g><title>alloc::alloc::box_free (190 samples, 0.18%)</title><rect x="90.3343%" y="437" width="0.1809%" height="15" fill="rgb(215,221,48)" fg:x="94888" fg:w="190"/><text x="90.5843%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (179 samples, 0.17%)</title><rect x="90.3447%" y="421" width="0.1704%" height="15" fill="rgb(236,73,3)" fg:x="94899" fg:w="179"/><text x="90.5947%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (177 samples, 0.17%)</title><rect x="90.3466%" y="405" width="0.1685%" height="15" fill="rgb(250,107,11)" fg:x="94901" fg:w="177"/><text x="90.5966%" y="415.50"></text></g><g><title>__rg_dealloc (177 samples, 0.17%)</title><rect x="90.3466%" y="389" width="0.1685%" height="15" fill="rgb(242,39,14)" fg:x="94901" fg:w="177"/><text x="90.5966%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (177 samples, 0.17%)</title><rect x="90.3466%" y="373" width="0.1685%" height="15" fill="rgb(248,164,37)" fg:x="94901" fg:w="177"/><text x="90.5966%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (18 samples, 0.02%)</title><rect x="90.4980%" y="357" width="0.0171%" height="15" fill="rgb(217,60,12)" fg:x="95060" fg:w="18"/><text x="90.7480%" y="367.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (15 samples, 0.01%)</title><rect x="90.5009%" y="341" width="0.0143%" height="15" fill="rgb(240,125,29)" fg:x="95063" fg:w="15"/><text x="90.7509%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (219 samples, 0.21%)</title><rect x="90.3200%" y="453" width="0.2085%" height="15" fill="rgb(208,207,28)" fg:x="94873" fg:w="219"/><text x="90.5700%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="90.5151%" y="437" width="0.0133%" height="15" fill="rgb(209,159,27)" fg:x="95078" fg:w="14"/><text x="90.7651%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="90.5151%" y="421" width="0.0133%" height="15" fill="rgb(251,176,53)" fg:x="95078" fg:w="14"/><text x="90.7651%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (220 samples, 0.21%)</title><rect x="90.3200%" y="469" width="0.2094%" height="15" fill="rgb(211,85,7)" fg:x="94873" fg:w="220"/><text x="90.5700%" y="479.50"></text></g><g><title>core::time::Duration::as_nanos (35 samples, 0.03%)</title><rect x="90.5961%" y="453" width="0.0333%" height="15" fill="rgb(216,64,54)" fg:x="95163" fg:w="35"/><text x="90.8461%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (197 samples, 0.19%)</title><rect x="90.7646%" y="405" width="0.1875%" height="15" fill="rgb(217,54,24)" fg:x="95340" fg:w="197"/><text x="91.0146%" y="415.50"></text></g><g><title>core::cmp::PartialOrd::ge (197 samples, 0.19%)</title><rect x="90.7646%" y="389" width="0.1875%" height="15" fill="rgb(208,206,53)" fg:x="95340" fg:w="197"/><text x="91.0146%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (195 samples, 0.19%)</title><rect x="90.7665%" y="373" width="0.1856%" height="15" fill="rgb(251,74,39)" fg:x="95342" fg:w="195"/><text x="91.0165%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (195 samples, 0.19%)</title><rect x="90.7665%" y="357" width="0.1856%" height="15" fill="rgb(226,47,5)" fg:x="95342" fg:w="195"/><text x="91.0165%" y="367.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (195 samples, 0.19%)</title><rect x="90.7665%" y="341" width="0.1856%" height="15" fill="rgb(234,111,33)" fg:x="95342" fg:w="195"/><text x="91.0165%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (103 samples, 0.10%)</title><rect x="90.8540%" y="325" width="0.0981%" height="15" fill="rgb(251,14,10)" fg:x="95434" fg:w="103"/><text x="91.1040%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (420 samples, 0.40%)</title><rect x="90.6294%" y="437" width="0.3998%" height="15" fill="rgb(232,43,0)" fg:x="95198" fg:w="420"/><text x="90.8794%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (420 samples, 0.40%)</title><rect x="90.6294%" y="421" width="0.3998%" height="15" fill="rgb(222,68,43)" fg:x="95198" fg:w="420"/><text x="90.8794%" y="431.50"></text></g><g><title>core::time::Duration::new (81 samples, 0.08%)</title><rect x="90.9521%" y="405" width="0.0771%" height="15" fill="rgb(217,24,23)" fg:x="95537" fg:w="81"/><text x="91.2021%" y="415.50"></text></g><g><title>std::time::SystemTime::duration_since (452 samples, 0.43%)</title><rect x="90.6294%" y="453" width="0.4303%" height="15" fill="rgb(229,209,14)" fg:x="95198" fg:w="452"/><text x="90.8794%" y="463.50"></text></g><g><title>tremor_common::time::nanotime (32 samples, 0.03%)</title><rect x="91.0292%" y="437" width="0.0305%" height="15" fill="rgb(250,149,48)" fg:x="95618" fg:w="32"/><text x="91.2792%" y="447.50"></text></g><g><title>[[vdso]] (862 samples, 0.82%)</title><rect x="91.8708%" y="373" width="0.8206%" height="15" fill="rgb(210,120,37)" fg:x="96502" fg:w="862"/><text x="92.1208%" y="383.50"></text></g><g><title>__clock_gettime_2 (1,384 samples, 1.32%)</title><rect x="91.3767%" y="405" width="1.3176%" height="15" fill="rgb(210,21,8)" fg:x="95983" fg:w="1384"/><text x="91.6267%" y="415.50"></text></g><g><title>__vdso_clock_gettime (1,311 samples, 1.25%)</title><rect x="91.4462%" y="389" width="1.2481%" height="15" fill="rgb(243,145,7)" fg:x="96056" fg:w="1311"/><text x="91.6962%" y="399.50"></text></g><g><title>tremor_common::time::nanotime (2,275 samples, 2.17%)</title><rect x="90.5294%" y="469" width="2.1658%" height="15" fill="rgb(238,178,32)" fg:x="95093" fg:w="2275"/><text x="90.7794%" y="479.50">t..</text></g><g><title>std::time::SystemTime::now (1,718 samples, 1.64%)</title><rect x="91.0597%" y="453" width="1.6356%" height="15" fill="rgb(222,4,10)" fg:x="95650" fg:w="1718"/><text x="91.3097%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,718 samples, 1.64%)</title><rect x="91.0597%" y="437" width="1.6356%" height="15" fill="rgb(239,7,37)" fg:x="95650" fg:w="1718"/><text x="91.3097%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::now (1,718 samples, 1.64%)</title><rect x="91.0597%" y="421" width="1.6356%" height="15" fill="rgb(215,31,37)" fg:x="95650" fg:w="1718"/><text x="91.3097%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (21 samples, 0.02%)</title><rect x="92.7086%" y="405" width="0.0200%" height="15" fill="rgb(224,83,33)" fg:x="97382" fg:w="21"/><text x="92.9586%" y="415.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (20 samples, 0.02%)</title><rect x="92.7095%" y="389" width="0.0190%" height="15" fill="rgb(239,55,3)" fg:x="97383" fg:w="20"/><text x="92.9595%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="92.7295%" y="309" width="0.0105%" height="15" fill="rgb(247,92,11)" fg:x="97404" fg:w="11"/><text x="92.9795%" y="319.50"></text></g><g><title>core::mem::drop (27 samples, 0.03%)</title><rect x="92.7286%" y="405" width="0.0257%" height="15" fill="rgb(239,200,7)" fg:x="97403" fg:w="27"/><text x="92.9786%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (27 samples, 0.03%)</title><rect x="92.7286%" y="389" width="0.0257%" height="15" fill="rgb(227,115,8)" fg:x="97403" fg:w="27"/><text x="92.9786%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="92.7286%" y="373" width="0.0257%" height="15" fill="rgb(215,189,27)" fg:x="97403" fg:w="27"/><text x="92.9786%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (26 samples, 0.02%)</title><rect x="92.7295%" y="357" width="0.0248%" height="15" fill="rgb(251,216,39)" fg:x="97404" fg:w="26"/><text x="92.9795%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (26 samples, 0.02%)</title><rect x="92.7295%" y="341" width="0.0248%" height="15" fill="rgb(207,29,47)" fg:x="97404" fg:w="26"/><text x="92.9795%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (26 samples, 0.02%)</title><rect x="92.7295%" y="325" width="0.0248%" height="15" fill="rgb(210,71,34)" fg:x="97404" fg:w="26"/><text x="92.9795%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (15 samples, 0.01%)</title><rect x="92.7400%" y="309" width="0.0143%" height="15" fill="rgb(253,217,51)" fg:x="97415" fg:w="15"/><text x="92.9900%" y="319.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="92.7400%" y="293" width="0.0143%" height="15" fill="rgb(222,117,46)" fg:x="97415" fg:w="15"/><text x="92.9900%" y="303.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="92.7428%" y="277" width="0.0114%" height="15" fill="rgb(226,132,6)" fg:x="97418" fg:w="12"/><text x="92.9928%" y="287.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (74 samples, 0.07%)</title><rect x="92.6952%" y="469" width="0.0704%" height="15" fill="rgb(254,145,51)" fg:x="97368" fg:w="74"/><text x="92.9452%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (60 samples, 0.06%)</title><rect x="92.7086%" y="453" width="0.0571%" height="15" fill="rgb(231,199,27)" fg:x="97382" fg:w="60"/><text x="92.9586%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (60 samples, 0.06%)</title><rect x="92.7086%" y="437" width="0.0571%" height="15" fill="rgb(245,158,14)" fg:x="97382" fg:w="60"/><text x="92.9586%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.06%)</title><rect x="92.7086%" y="421" width="0.0571%" height="15" fill="rgb(240,113,14)" fg:x="97382" fg:w="60"/><text x="92.9586%" y="431.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="92.7543%" y="405" width="0.0114%" height="15" fill="rgb(210,20,13)" fg:x="97430" fg:w="12"/><text x="93.0043%" y="415.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (7,885 samples, 7.51%)</title><rect x="85.2696%" y="485" width="7.5066%" height="15" fill="rgb(241,144,13)" fg:x="89568" fg:w="7885"/><text x="85.5196%" y="495.50">tremor_run..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (11 samples, 0.01%)</title><rect x="92.7657%" y="469" width="0.0105%" height="15" fill="rgb(235,43,34)" fg:x="97442" fg:w="11"/><text x="93.0157%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,932 samples, 7.55%)</title><rect x="85.2267%" y="501" width="7.5513%" height="15" fill="rgb(208,36,20)" fg:x="89523" fg:w="7932"/><text x="85.4767%" y="511.50">&lt;core::fut..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,021 samples, 7.64%)</title><rect x="85.1429%" y="645" width="7.6361%" height="15" fill="rgb(239,204,10)" fg:x="89435" fg:w="8021"/><text x="85.3929%" y="655.50">&lt;core::pin..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,021 samples, 7.64%)</title><rect x="85.1429%" y="629" width="7.6361%" height="15" fill="rgb(217,84,43)" fg:x="89435" fg:w="8021"/><text x="85.3929%" y="639.50">&lt;core::fut..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,018 samples, 7.63%)</title><rect x="85.1458%" y="613" width="7.6332%" height="15" fill="rgb(241,170,50)" fg:x="89438" fg:w="8018"/><text x="85.3958%" y="623.50">async_exec..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (7,992 samples, 7.61%)</title><rect x="85.1706%" y="597" width="7.6085%" height="15" fill="rgb(226,205,29)" fg:x="89464" fg:w="7992"/><text x="85.4206%" y="607.50">&lt;async_std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (7,992 samples, 7.61%)</title><rect x="85.1706%" y="581" width="7.6085%" height="15" fill="rgb(233,113,1)" fg:x="89464" fg:w="7992"/><text x="85.4206%" y="591.50">async_std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,991 samples, 7.61%)</title><rect x="85.1715%" y="565" width="7.6075%" height="15" fill="rgb(253,98,13)" fg:x="89465" fg:w="7991"/><text x="85.4215%" y="575.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,964 samples, 7.58%)</title><rect x="85.1972%" y="549" width="7.5818%" height="15" fill="rgb(211,115,12)" fg:x="89492" fg:w="7964"/><text x="85.4472%" y="559.50">std::threa..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (7,933 samples, 7.55%)</title><rect x="85.2267%" y="533" width="7.5523%" height="15" fill="rgb(208,12,16)" fg:x="89523" fg:w="7933"/><text x="85.4767%" y="543.50">async_std:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,933 samples, 7.55%)</title><rect x="85.2267%" y="517" width="7.5523%" height="15" fill="rgb(237,193,54)" fg:x="89523" fg:w="7933"/><text x="85.4767%" y="527.50">&lt;async_std..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (14 samples, 0.01%)</title><rect x="92.7800%" y="645" width="0.0133%" height="15" fill="rgb(243,22,42)" fg:x="97457" fg:w="14"/><text x="93.0300%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="92.7809%" y="629" width="0.0124%" height="15" fill="rgb(233,151,36)" fg:x="97458" fg:w="13"/><text x="93.0309%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="92.7809%" y="613" width="0.0124%" height="15" fill="rgb(237,57,45)" fg:x="97458" fg:w="13"/><text x="93.0309%" y="623.50"></text></g><g><title>__wake_up_common (17 samples, 0.02%)</title><rect x="92.8076%" y="357" width="0.0162%" height="15" fill="rgb(221,88,17)" fg:x="97486" fg:w="17"/><text x="93.0576%" y="367.50"></text></g><g><title>autoremove_wake_function (17 samples, 0.02%)</title><rect x="92.8076%" y="341" width="0.0162%" height="15" fill="rgb(230,79,15)" fg:x="97486" fg:w="17"/><text x="93.0576%" y="351.50"></text></g><g><title>try_to_wake_up (16 samples, 0.02%)</title><rect x="92.8085%" y="325" width="0.0152%" height="15" fill="rgb(213,57,13)" fg:x="97487" fg:w="16"/><text x="93.0585%" y="335.50"></text></g><g><title>__wake_up_common_lock (19 samples, 0.02%)</title><rect x="92.8076%" y="373" width="0.0181%" height="15" fill="rgb(222,116,39)" fg:x="97486" fg:w="19"/><text x="93.0576%" y="383.50"></text></g><g><title>__wake_up_common (23 samples, 0.02%)</title><rect x="92.8047%" y="405" width="0.0219%" height="15" fill="rgb(245,107,2)" fg:x="97483" fg:w="23"/><text x="93.0547%" y="415.50"></text></g><g><title>ep_poll_callback (21 samples, 0.02%)</title><rect x="92.8066%" y="389" width="0.0200%" height="15" fill="rgb(238,1,10)" fg:x="97485" fg:w="21"/><text x="93.0566%" y="399.50"></text></g><g><title>ksys_write (30 samples, 0.03%)</title><rect x="92.8009%" y="453" width="0.0286%" height="15" fill="rgb(249,4,48)" fg:x="97479" fg:w="30"/><text x="93.0509%" y="463.50"></text></g><g><title>vfs_write (28 samples, 0.03%)</title><rect x="92.8028%" y="437" width="0.0267%" height="15" fill="rgb(223,151,18)" fg:x="97481" fg:w="28"/><text x="93.0528%" y="447.50"></text></g><g><title>eventfd_write (27 samples, 0.03%)</title><rect x="92.8038%" y="421" width="0.0257%" height="15" fill="rgb(227,65,43)" fg:x="97482" fg:w="27"/><text x="93.0538%" y="431.50"></text></g><g><title>async_io::reactor::Reactor::notify (34 samples, 0.03%)</title><rect x="92.8000%" y="549" width="0.0324%" height="15" fill="rgb(218,40,45)" fg:x="97478" fg:w="34"/><text x="93.0500%" y="559.50"></text></g><g><title>polling::Poller::notify (34 samples, 0.03%)</title><rect x="92.8000%" y="533" width="0.0324%" height="15" fill="rgb(252,121,31)" fg:x="97478" fg:w="34"/><text x="93.0500%" y="543.50"></text></g><g><title>polling::epoll::Poller::notify (34 samples, 0.03%)</title><rect x="92.8000%" y="517" width="0.0324%" height="15" fill="rgb(219,158,43)" fg:x="97478" fg:w="34"/><text x="93.0500%" y="527.50"></text></g><g><title>__GI___write (34 samples, 0.03%)</title><rect x="92.8000%" y="501" width="0.0324%" height="15" fill="rgb(231,162,42)" fg:x="97478" fg:w="34"/><text x="93.0500%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.03%)</title><rect x="92.8000%" y="485" width="0.0324%" height="15" fill="rgb(217,179,25)" fg:x="97478" fg:w="34"/><text x="93.0500%" y="495.50"></text></g><g><title>do_syscall_64 (33 samples, 0.03%)</title><rect x="92.8009%" y="469" width="0.0314%" height="15" fill="rgb(206,212,31)" fg:x="97479" fg:w="33"/><text x="93.0509%" y="479.50"></text></g><g><title>ttwu_do_activate (24 samples, 0.02%)</title><rect x="92.8580%" y="341" width="0.0228%" height="15" fill="rgb(235,144,12)" fg:x="97539" fg:w="24"/><text x="93.1080%" y="351.50"></text></g><g><title>enqueue_task (23 samples, 0.02%)</title><rect x="92.8590%" y="325" width="0.0219%" height="15" fill="rgb(213,51,10)" fg:x="97540" fg:w="23"/><text x="93.1090%" y="335.50"></text></g><g><title>__x64_sys_futex (45 samples, 0.04%)</title><rect x="92.8409%" y="421" width="0.0428%" height="15" fill="rgb(231,145,14)" fg:x="97521" fg:w="45"/><text x="93.0909%" y="431.50"></text></g><g><title>do_futex (44 samples, 0.04%)</title><rect x="92.8418%" y="405" width="0.0419%" height="15" fill="rgb(235,15,28)" fg:x="97522" fg:w="44"/><text x="93.0918%" y="415.50"></text></g><g><title>futex_wake (44 samples, 0.04%)</title><rect x="92.8418%" y="389" width="0.0419%" height="15" fill="rgb(237,206,10)" fg:x="97522" fg:w="44"/><text x="93.0918%" y="399.50"></text></g><g><title>wake_up_q (33 samples, 0.03%)</title><rect x="92.8523%" y="373" width="0.0314%" height="15" fill="rgb(236,227,27)" fg:x="97533" fg:w="33"/><text x="93.1023%" y="383.50"></text></g><g><title>try_to_wake_up (32 samples, 0.03%)</title><rect x="92.8533%" y="357" width="0.0305%" height="15" fill="rgb(246,83,35)" fg:x="97534" fg:w="32"/><text x="93.1033%" y="367.50"></text></g><g><title>syscall_exit_to_user_mode (14 samples, 0.01%)</title><rect x="92.8837%" y="421" width="0.0133%" height="15" fill="rgb(220,136,24)" fg:x="97566" fg:w="14"/><text x="93.1337%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (64 samples, 0.06%)</title><rect x="92.8390%" y="453" width="0.0609%" height="15" fill="rgb(217,3,25)" fg:x="97519" fg:w="64"/><text x="93.0890%" y="463.50"></text></g><g><title>do_syscall_64 (62 samples, 0.06%)</title><rect x="92.8409%" y="437" width="0.0590%" height="15" fill="rgb(239,24,14)" fg:x="97521" fg:w="62"/><text x="93.0909%" y="447.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (68 samples, 0.06%)</title><rect x="92.8361%" y="517" width="0.0647%" height="15" fill="rgb(244,16,53)" fg:x="97516" fg:w="68"/><text x="93.0861%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (68 samples, 0.06%)</title><rect x="92.8361%" y="501" width="0.0647%" height="15" fill="rgb(208,175,44)" fg:x="97516" fg:w="68"/><text x="93.0861%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (68 samples, 0.06%)</title><rect x="92.8361%" y="485" width="0.0647%" height="15" fill="rgb(252,18,48)" fg:x="97516" fg:w="68"/><text x="93.0861%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (68 samples, 0.06%)</title><rect x="92.8361%" y="469" width="0.0647%" height="15" fill="rgb(234,199,32)" fg:x="97516" fg:w="68"/><text x="93.0861%" y="479.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (113 samples, 0.11%)</title><rect x="92.8000%" y="565" width="0.1076%" height="15" fill="rgb(225,77,54)" fg:x="97478" fg:w="113"/><text x="93.0500%" y="575.50"></text></g><g><title>parking::Unparker::unpark (78 samples, 0.07%)</title><rect x="92.8333%" y="549" width="0.0743%" height="15" fill="rgb(225,42,25)" fg:x="97513" fg:w="78"/><text x="93.0833%" y="559.50"></text></g><g><title>parking::Inner::unpark (78 samples, 0.07%)</title><rect x="92.8333%" y="533" width="0.0743%" height="15" fill="rgb(242,227,46)" fg:x="97513" fg:w="78"/><text x="93.0833%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (116 samples, 0.11%)</title><rect x="92.8000%" y="597" width="0.1104%" height="15" fill="rgb(246,197,35)" fg:x="97478" fg:w="116"/><text x="93.0500%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (116 samples, 0.11%)</title><rect x="92.8000%" y="581" width="0.1104%" height="15" fill="rgb(215,159,26)" fg:x="97478" fg:w="116"/><text x="93.0500%" y="591.50"></text></g><g><title>async_executor::State::notify (122 samples, 0.12%)</title><rect x="92.7952%" y="613" width="0.1161%" height="15" fill="rgb(212,194,50)" fg:x="97473" fg:w="122"/><text x="93.0452%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (127 samples, 0.12%)</title><rect x="92.7952%" y="629" width="0.1209%" height="15" fill="rgb(246,132,1)" fg:x="97473" fg:w="127"/><text x="93.0452%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (130 samples, 0.12%)</title><rect x="92.7942%" y="645" width="0.1238%" height="15" fill="rgb(217,71,7)" fg:x="97472" fg:w="130"/><text x="93.0442%" y="655.50"></text></g><g><title>async_task::runnable::Runnable::run (8,291 samples, 7.89%)</title><rect x="85.1011%" y="677" width="7.8931%" height="15" fill="rgb(252,59,32)" fg:x="89391" fg:w="8291"/><text x="85.3511%" y="687.50">async_task:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,278 samples, 7.88%)</title><rect x="85.1134%" y="661" width="7.8807%" height="15" fill="rgb(253,204,25)" fg:x="89404" fg:w="8278"/><text x="85.3634%" y="671.50">async_task:..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (80 samples, 0.08%)</title><rect x="92.9180%" y="645" width="0.0762%" height="15" fill="rgb(232,21,16)" fg:x="97602" fg:w="80"/><text x="93.1680%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (80 samples, 0.08%)</title><rect x="92.9180%" y="629" width="0.0762%" height="15" fill="rgb(248,90,29)" fg:x="97602" fg:w="80"/><text x="93.1680%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (12,876 samples, 12.26%)</title><rect x="80.7447%" y="741" width="12.2581%" height="15" fill="rgb(249,223,7)" fg:x="84815" fg:w="12876"/><text x="80.9947%" y="751.50">async_executor::Ex..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,873 samples, 12.26%)</title><rect x="80.7475%" y="725" width="12.2552%" height="15" fill="rgb(231,119,42)" fg:x="84818" fg:w="12873"/><text x="80.9975%" y="735.50">&lt;futures_lite::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,873 samples, 12.26%)</title><rect x="80.7475%" y="709" width="12.2552%" height="15" fill="rgb(215,41,35)" fg:x="84818" fg:w="12873"/><text x="80.9975%" y="719.50">&lt;core::future::fro..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (12,866 samples, 12.25%)</title><rect x="80.7542%" y="693" width="12.2486%" height="15" fill="rgb(220,44,45)" fg:x="84825" fg:w="12866"/><text x="81.0042%" y="703.50">async_executor::Ex..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.01%)</title><rect x="93.0465%" y="469" width="0.0114%" height="15" fill="rgb(253,197,36)" fg:x="97737" fg:w="12"/><text x="93.2965%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.01%)</title><rect x="93.0475%" y="453" width="0.0105%" height="15" fill="rgb(245,225,54)" fg:x="97738" fg:w="11"/><text x="93.2975%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="93.0456%" y="533" width="0.0133%" height="15" fill="rgb(239,94,37)" fg:x="97736" fg:w="14"/><text x="93.2956%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (14 samples, 0.01%)</title><rect x="93.0456%" y="517" width="0.0133%" height="15" fill="rgb(242,217,10)" fg:x="97736" fg:w="14"/><text x="93.2956%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.01%)</title><rect x="93.0456%" y="501" width="0.0133%" height="15" fill="rgb(250,193,7)" fg:x="97736" fg:w="14"/><text x="93.2956%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="93.0465%" y="485" width="0.0124%" height="15" fill="rgb(230,104,19)" fg:x="97737" fg:w="13"/><text x="93.2965%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (16 samples, 0.02%)</title><rect x="93.0732%" y="501" width="0.0152%" height="15" fill="rgb(230,181,4)" fg:x="97765" fg:w="16"/><text x="93.3232%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (16 samples, 0.02%)</title><rect x="93.0732%" y="485" width="0.0152%" height="15" fill="rgb(216,219,49)" fg:x="97765" fg:w="16"/><text x="93.3232%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.02%)</title><rect x="93.0732%" y="469" width="0.0152%" height="15" fill="rgb(254,144,0)" fg:x="97765" fg:w="16"/><text x="93.3232%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.02%)</title><rect x="93.0732%" y="453" width="0.0152%" height="15" fill="rgb(205,209,38)" fg:x="97765" fg:w="16"/><text x="93.3232%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (61 samples, 0.06%)</title><rect x="93.0656%" y="517" width="0.0581%" height="15" fill="rgb(240,21,42)" fg:x="97757" fg:w="61"/><text x="93.3156%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (37 samples, 0.04%)</title><rect x="93.0884%" y="501" width="0.0352%" height="15" fill="rgb(241,132,3)" fg:x="97781" fg:w="37"/><text x="93.3384%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (37 samples, 0.04%)</title><rect x="93.0884%" y="485" width="0.0352%" height="15" fill="rgb(225,14,2)" fg:x="97781" fg:w="37"/><text x="93.3384%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (14 samples, 0.01%)</title><rect x="93.1255%" y="501" width="0.0133%" height="15" fill="rgb(210,141,35)" fg:x="97820" fg:w="14"/><text x="93.3755%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (14 samples, 0.01%)</title><rect x="93.1255%" y="485" width="0.0133%" height="15" fill="rgb(251,14,44)" fg:x="97820" fg:w="14"/><text x="93.3755%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (14 samples, 0.01%)</title><rect x="93.1255%" y="469" width="0.0133%" height="15" fill="rgb(247,48,18)" fg:x="97820" fg:w="14"/><text x="93.3755%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="93.1255%" y="453" width="0.0133%" height="15" fill="rgb(225,0,40)" fg:x="97820" fg:w="14"/><text x="93.3755%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (86 samples, 0.08%)</title><rect x="93.0589%" y="533" width="0.0819%" height="15" fill="rgb(221,31,33)" fg:x="97750" fg:w="86"/><text x="93.3089%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="93.1236%" y="517" width="0.0171%" height="15" fill="rgb(237,42,40)" fg:x="97818" fg:w="18"/><text x="93.3736%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.02%)</title><rect x="93.1427%" y="469" width="0.0152%" height="15" fill="rgb(233,51,29)" fg:x="97838" fg:w="16"/><text x="93.3927%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.02%)</title><rect x="93.1427%" y="453" width="0.0152%" height="15" fill="rgb(226,58,20)" fg:x="97838" fg:w="16"/><text x="93.3927%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (43 samples, 0.04%)</title><rect x="93.1408%" y="533" width="0.0409%" height="15" fill="rgb(208,98,7)" fg:x="97836" fg:w="43"/><text x="93.3908%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="93.1408%" y="517" width="0.0409%" height="15" fill="rgb(228,143,44)" fg:x="97836" fg:w="43"/><text x="93.3908%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (42 samples, 0.04%)</title><rect x="93.1417%" y="501" width="0.0400%" height="15" fill="rgb(246,55,38)" fg:x="97837" fg:w="42"/><text x="93.3917%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (42 samples, 0.04%)</title><rect x="93.1417%" y="485" width="0.0400%" height="15" fill="rgb(247,87,16)" fg:x="97837" fg:w="42"/><text x="93.3917%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (25 samples, 0.02%)</title><rect x="93.1579%" y="469" width="0.0238%" height="15" fill="rgb(234,129,42)" fg:x="97854" fg:w="25"/><text x="93.4079%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (25 samples, 0.02%)</title><rect x="93.1579%" y="453" width="0.0238%" height="15" fill="rgb(220,82,16)" fg:x="97854" fg:w="25"/><text x="93.4079%" y="463.50"></text></g><g><title>___pthread_rwlock_rdlock (23 samples, 0.02%)</title><rect x="93.1922%" y="485" width="0.0219%" height="15" fill="rgb(211,88,4)" fg:x="97890" fg:w="23"/><text x="93.4422%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (198 samples, 0.19%)</title><rect x="93.0446%" y="549" width="0.1885%" height="15" fill="rgb(248,151,21)" fg:x="97735" fg:w="198"/><text x="93.2946%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (45 samples, 0.04%)</title><rect x="93.1903%" y="533" width="0.0428%" height="15" fill="rgb(238,163,6)" fg:x="97888" fg:w="45"/><text x="93.4403%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (45 samples, 0.04%)</title><rect x="93.1903%" y="517" width="0.0428%" height="15" fill="rgb(209,183,11)" fg:x="97888" fg:w="45"/><text x="93.4403%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (45 samples, 0.04%)</title><rect x="93.1903%" y="501" width="0.0428%" height="15" fill="rgb(219,37,20)" fg:x="97888" fg:w="45"/><text x="93.4403%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="93.2141%" y="485" width="0.0190%" height="15" fill="rgb(210,158,4)" fg:x="97913" fg:w="20"/><text x="93.4641%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="93.2141%" y="469" width="0.0190%" height="15" fill="rgb(221,167,53)" fg:x="97913" fg:w="20"/><text x="93.4641%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (32 samples, 0.03%)</title><rect x="93.2417%" y="469" width="0.0305%" height="15" fill="rgb(237,151,45)" fg:x="97942" fg:w="32"/><text x="93.4917%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (47 samples, 0.04%)</title><rect x="93.2407%" y="533" width="0.0447%" height="15" fill="rgb(231,39,3)" fg:x="97941" fg:w="47"/><text x="93.4907%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="93.2407%" y="517" width="0.0447%" height="15" fill="rgb(212,167,28)" fg:x="97941" fg:w="47"/><text x="93.4907%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (47 samples, 0.04%)</title><rect x="93.2407%" y="501" width="0.0447%" height="15" fill="rgb(232,178,8)" fg:x="97941" fg:w="47"/><text x="93.4907%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (46 samples, 0.04%)</title><rect x="93.2417%" y="485" width="0.0438%" height="15" fill="rgb(225,151,20)" fg:x="97942" fg:w="46"/><text x="93.4917%" y="495.50"></text></g><g><title>___pthread_mutex_unlock (14 samples, 0.01%)</title><rect x="93.2722%" y="469" width="0.0133%" height="15" fill="rgb(238,3,37)" fg:x="97974" fg:w="14"/><text x="93.5222%" y="479.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (293 samples, 0.28%)</title><rect x="93.0341%" y="661" width="0.2789%" height="15" fill="rgb(251,147,42)" fg:x="97724" fg:w="293"/><text x="93.2841%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (292 samples, 0.28%)</title><rect x="93.0351%" y="645" width="0.2780%" height="15" fill="rgb(208,173,10)" fg:x="97725" fg:w="292"/><text x="93.2851%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (292 samples, 0.28%)</title><rect x="93.0351%" y="629" width="0.2780%" height="15" fill="rgb(246,225,4)" fg:x="97725" fg:w="292"/><text x="93.2851%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (288 samples, 0.27%)</title><rect x="93.0389%" y="613" width="0.2742%" height="15" fill="rgb(248,102,6)" fg:x="97729" fg:w="288"/><text x="93.2889%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (288 samples, 0.27%)</title><rect x="93.0389%" y="597" width="0.2742%" height="15" fill="rgb(232,6,21)" fg:x="97729" fg:w="288"/><text x="93.2889%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (287 samples, 0.27%)</title><rect x="93.0399%" y="581" width="0.2732%" height="15" fill="rgb(221,179,22)" fg:x="97730" fg:w="287"/><text x="93.2899%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (283 samples, 0.27%)</title><rect x="93.0437%" y="565" width="0.2694%" height="15" fill="rgb(252,50,20)" fg:x="97734" fg:w="283"/><text x="93.2937%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (84 samples, 0.08%)</title><rect x="93.2331%" y="549" width="0.0800%" height="15" fill="rgb(222,56,38)" fg:x="97933" fg:w="84"/><text x="93.4831%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.03%)</title><rect x="93.2855%" y="533" width="0.0276%" height="15" fill="rgb(206,193,29)" fg:x="97988" fg:w="29"/><text x="93.5355%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.03%)</title><rect x="93.2874%" y="517" width="0.0257%" height="15" fill="rgb(239,192,45)" fg:x="97990" fg:w="27"/><text x="93.5374%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.03%)</title><rect x="93.2874%" y="501" width="0.0257%" height="15" fill="rgb(254,18,36)" fg:x="97990" fg:w="27"/><text x="93.5374%" y="511.50"></text></g><g><title>___pthread_mutex_lock (27 samples, 0.03%)</title><rect x="93.2874%" y="485" width="0.0257%" height="15" fill="rgb(221,127,11)" fg:x="97990" fg:w="27"/><text x="93.5374%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (13 samples, 0.01%)</title><rect x="93.3531%" y="597" width="0.0124%" height="15" fill="rgb(234,146,35)" fg:x="98059" fg:w="13"/><text x="93.6031%" y="607.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="93.3531%" y="581" width="0.0124%" height="15" fill="rgb(254,201,37)" fg:x="98059" fg:w="13"/><text x="93.6031%" y="591.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="93.3531%" y="565" width="0.0124%" height="15" fill="rgb(211,202,23)" fg:x="98059" fg:w="13"/><text x="93.6031%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (22 samples, 0.02%)</title><rect x="93.3512%" y="613" width="0.0209%" height="15" fill="rgb(237,91,2)" fg:x="98057" fg:w="22"/><text x="93.6012%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="93.3759%" y="533" width="0.0171%" height="15" fill="rgb(226,228,36)" fg:x="98083" fg:w="18"/><text x="93.6259%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (23 samples, 0.02%)</title><rect x="93.3721%" y="613" width="0.0219%" height="15" fill="rgb(213,63,50)" fg:x="98079" fg:w="23"/><text x="93.6221%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (22 samples, 0.02%)</title><rect x="93.3731%" y="597" width="0.0209%" height="15" fill="rgb(235,194,19)" fg:x="98080" fg:w="22"/><text x="93.6231%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="93.3731%" y="581" width="0.0209%" height="15" fill="rgb(207,204,18)" fg:x="98080" fg:w="22"/><text x="93.6231%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (20 samples, 0.02%)</title><rect x="93.3750%" y="565" width="0.0190%" height="15" fill="rgb(248,8,7)" fg:x="98082" fg:w="20"/><text x="93.6250%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="93.3759%" y="549" width="0.0181%" height="15" fill="rgb(223,145,47)" fg:x="98083" fg:w="19"/><text x="93.6259%" y="559.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (120 samples, 0.11%)</title><rect x="93.3388%" y="629" width="0.1142%" height="15" fill="rgb(228,84,11)" fg:x="98044" fg:w="120"/><text x="93.5888%" y="639.50"></text></g><g><title>event_listener::Inner::lock (53 samples, 0.05%)</title><rect x="93.4026%" y="613" width="0.0505%" height="15" fill="rgb(218,76,45)" fg:x="98111" fg:w="53"/><text x="93.6526%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (53 samples, 0.05%)</title><rect x="93.4026%" y="597" width="0.0505%" height="15" fill="rgb(223,80,15)" fg:x="98111" fg:w="53"/><text x="93.6526%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (53 samples, 0.05%)</title><rect x="93.4026%" y="581" width="0.0505%" height="15" fill="rgb(219,218,33)" fg:x="98111" fg:w="53"/><text x="93.6526%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (47 samples, 0.04%)</title><rect x="93.4083%" y="565" width="0.0447%" height="15" fill="rgb(208,51,11)" fg:x="98117" fg:w="47"/><text x="93.6583%" y="575.50"></text></g><g><title>___pthread_mutex_lock (47 samples, 0.04%)</title><rect x="93.4083%" y="549" width="0.0447%" height="15" fill="rgb(229,165,39)" fg:x="98117" fg:w="47"/><text x="93.6583%" y="559.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (61 samples, 0.06%)</title><rect x="93.4530%" y="629" width="0.0581%" height="15" fill="rgb(241,100,24)" fg:x="98164" fg:w="61"/><text x="93.7030%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (61 samples, 0.06%)</title><rect x="93.4530%" y="613" width="0.0581%" height="15" fill="rgb(228,14,23)" fg:x="98164" fg:w="61"/><text x="93.7030%" y="623.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (34 samples, 0.03%)</title><rect x="93.4787%" y="597" width="0.0324%" height="15" fill="rgb(247,116,52)" fg:x="98191" fg:w="34"/><text x="93.7287%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (34 samples, 0.03%)</title><rect x="93.4787%" y="581" width="0.0324%" height="15" fill="rgb(216,149,33)" fg:x="98191" fg:w="34"/><text x="93.7287%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (34 samples, 0.03%)</title><rect x="93.4787%" y="565" width="0.0324%" height="15" fill="rgb(238,142,29)" fg:x="98191" fg:w="34"/><text x="93.7287%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (34 samples, 0.03%)</title><rect x="93.4787%" y="549" width="0.0324%" height="15" fill="rgb(224,83,40)" fg:x="98191" fg:w="34"/><text x="93.7287%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (515 samples, 0.49%)</title><rect x="93.0256%" y="693" width="0.4903%" height="15" fill="rgb(234,165,11)" fg:x="97715" fg:w="515"/><text x="93.2756%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (512 samples, 0.49%)</title><rect x="93.0284%" y="677" width="0.4874%" height="15" fill="rgb(215,96,23)" fg:x="97718" fg:w="512"/><text x="93.2784%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (213 samples, 0.20%)</title><rect x="93.3131%" y="661" width="0.2028%" height="15" fill="rgb(233,179,26)" fg:x="98017" fg:w="213"/><text x="93.5631%" y="671.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (207 samples, 0.20%)</title><rect x="93.3188%" y="645" width="0.1971%" height="15" fill="rgb(225,129,33)" fg:x="98023" fg:w="207"/><text x="93.5688%" y="655.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13,432 samples, 12.79%)</title><rect x="80.7294%" y="773" width="12.7874%" height="15" fill="rgb(237,49,13)" fg:x="84799" fg:w="13432"/><text x="80.9794%" y="783.50">&lt;futures_lite::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,428 samples, 12.78%)</title><rect x="80.7332%" y="757" width="12.7836%" height="15" fill="rgb(211,3,31)" fg:x="84803" fg:w="13428"/><text x="80.9832%" y="767.50">&lt;core::future::from..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (540 samples, 0.51%)</title><rect x="93.0027%" y="741" width="0.5141%" height="15" fill="rgb(216,152,19)" fg:x="97691" fg:w="540"/><text x="93.2527%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (517 samples, 0.49%)</title><rect x="93.0246%" y="725" width="0.4922%" height="15" fill="rgb(251,121,35)" fg:x="97714" fg:w="517"/><text x="93.2746%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (517 samples, 0.49%)</title><rect x="93.0246%" y="709" width="0.4922%" height="15" fill="rgb(210,217,47)" fg:x="97714" fg:w="517"/><text x="93.2746%" y="719.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (12 samples, 0.01%)</title><rect x="93.5225%" y="661" width="0.0114%" height="15" fill="rgb(244,116,22)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="671.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (12 samples, 0.01%)</title><rect x="93.5225%" y="645" width="0.0114%" height="15" fill="rgb(228,17,21)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="655.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (12 samples, 0.01%)</title><rect x="93.5225%" y="629" width="0.0114%" height="15" fill="rgb(240,149,34)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.01%)</title><rect x="93.5225%" y="613" width="0.0114%" height="15" fill="rgb(208,125,47)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.01%)</title><rect x="93.5225%" y="597" width="0.0114%" height="15" fill="rgb(249,186,39)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="607.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR::{{closure}} (12 samples, 0.01%)</title><rect x="93.5225%" y="581" width="0.0114%" height="15" fill="rgb(240,220,33)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="591.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (12 samples, 0.01%)</title><rect x="93.5225%" y="565" width="0.0114%" height="15" fill="rgb(243,110,23)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="575.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="93.5225%" y="549" width="0.0114%" height="15" fill="rgb(219,163,46)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.01%)</title><rect x="93.5225%" y="533" width="0.0114%" height="15" fill="rgb(216,126,30)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="543.50"></text></g><g><title>core::ptr::write (12 samples, 0.01%)</title><rect x="93.5225%" y="517" width="0.0114%" height="15" fill="rgb(208,139,11)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="527.50"></text></g><g><title>asm_exc_page_fault (12 samples, 0.01%)</title><rect x="93.5225%" y="501" width="0.0114%" height="15" fill="rgb(213,118,36)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="511.50"></text></g><g><title>exc_page_fault (12 samples, 0.01%)</title><rect x="93.5225%" y="485" width="0.0114%" height="15" fill="rgb(226,43,17)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="495.50"></text></g><g><title>do_user_addr_fault (12 samples, 0.01%)</title><rect x="93.5225%" y="469" width="0.0114%" height="15" fill="rgb(254,217,4)" fg:x="98237" fg:w="12"/><text x="93.7725%" y="479.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (17 samples, 0.02%)</title><rect x="93.5225%" y="693" width="0.0162%" height="15" fill="rgb(210,134,47)" fg:x="98237" fg:w="17"/><text x="93.7725%" y="703.50"></text></g><g><title>once_cell::imp::initialize_inner (17 samples, 0.02%)</title><rect x="93.5225%" y="677" width="0.0162%" height="15" fill="rgb(237,24,49)" fg:x="98237" fg:w="17"/><text x="93.7725%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::get (21 samples, 0.02%)</title><rect x="93.5225%" y="773" width="0.0200%" height="15" fill="rgb(251,39,46)" fg:x="98237" fg:w="21"/><text x="93.7725%" y="783.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (21 samples, 0.02%)</title><rect x="93.5225%" y="757" width="0.0200%" height="15" fill="rgb(251,220,3)" fg:x="98237" fg:w="21"/><text x="93.7725%" y="767.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (21 samples, 0.02%)</title><rect x="93.5225%" y="741" width="0.0200%" height="15" fill="rgb(228,105,12)" fg:x="98237" fg:w="21"/><text x="93.7725%" y="751.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (21 samples, 0.02%)</title><rect x="93.5225%" y="725" width="0.0200%" height="15" fill="rgb(215,196,1)" fg:x="98237" fg:w="21"/><text x="93.7725%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (21 samples, 0.02%)</title><rect x="93.5225%" y="709" width="0.0200%" height="15" fill="rgb(214,33,39)" fg:x="98237" fg:w="21"/><text x="93.7725%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (109 samples, 0.10%)</title><rect x="93.5425%" y="773" width="0.1038%" height="15" fill="rgb(220,19,52)" fg:x="98258" fg:w="109"/><text x="93.7925%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (109 samples, 0.10%)</title><rect x="93.5425%" y="757" width="0.1038%" height="15" fill="rgb(221,78,38)" fg:x="98258" fg:w="109"/><text x="93.7925%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (107 samples, 0.10%)</title><rect x="93.5444%" y="741" width="0.1019%" height="15" fill="rgb(253,30,16)" fg:x="98260" fg:w="107"/><text x="93.7944%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (105 samples, 0.10%)</title><rect x="93.5463%" y="725" width="0.1000%" height="15" fill="rgb(242,65,0)" fg:x="98262" fg:w="105"/><text x="93.7963%" y="735.50"></text></g><g><title>__GI___pthread_mutex_trylock (105 samples, 0.10%)</title><rect x="93.5463%" y="709" width="0.1000%" height="15" fill="rgb(235,201,12)" fg:x="98262" fg:w="105"/><text x="93.7963%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (14 samples, 0.01%)</title><rect x="93.6615%" y="581" width="0.0133%" height="15" fill="rgb(233,161,9)" fg:x="98383" fg:w="14"/><text x="93.9115%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (14 samples, 0.01%)</title><rect x="93.6615%" y="565" width="0.0133%" height="15" fill="rgb(241,207,41)" fg:x="98383" fg:w="14"/><text x="93.9115%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (14 samples, 0.01%)</title><rect x="93.6615%" y="549" width="0.0133%" height="15" fill="rgb(212,69,46)" fg:x="98383" fg:w="14"/><text x="93.9115%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (14 samples, 0.01%)</title><rect x="93.6615%" y="533" width="0.0133%" height="15" fill="rgb(239,69,45)" fg:x="98383" fg:w="14"/><text x="93.9115%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (14 samples, 0.01%)</title><rect x="93.6615%" y="517" width="0.0133%" height="15" fill="rgb(242,117,48)" fg:x="98383" fg:w="14"/><text x="93.9115%" y="527.50"></text></g><g><title>rust_dealloc (20 samples, 0.02%)</title><rect x="93.6615%" y="597" width="0.0190%" height="15" fill="rgb(228,41,36)" fg:x="98383" fg:w="20"/><text x="93.9115%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (21 samples, 0.02%)</title><rect x="93.6615%" y="693" width="0.0200%" height="15" fill="rgb(212,3,32)" fg:x="98383" fg:w="21"/><text x="93.9115%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (21 samples, 0.02%)</title><rect x="93.6615%" y="677" width="0.0200%" height="15" fill="rgb(233,41,49)" fg:x="98383" fg:w="21"/><text x="93.9115%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="93.6615%" y="661" width="0.0200%" height="15" fill="rgb(252,170,49)" fg:x="98383" fg:w="21"/><text x="93.9115%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="93.6615%" y="645" width="0.0200%" height="15" fill="rgb(229,53,26)" fg:x="98383" fg:w="21"/><text x="93.9115%" y="655.50"></text></g><g><title>__rg_dealloc (21 samples, 0.02%)</title><rect x="93.6615%" y="629" width="0.0200%" height="15" fill="rgb(217,157,12)" fg:x="98383" fg:w="21"/><text x="93.9115%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (21 samples, 0.02%)</title><rect x="93.6615%" y="613" width="0.0200%" height="15" fill="rgb(227,17,9)" fg:x="98383" fg:w="21"/><text x="93.9115%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="93.6596%" y="741" width="0.0228%" height="15" fill="rgb(218,84,12)" fg:x="98381" fg:w="24"/><text x="93.9096%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (22 samples, 0.02%)</title><rect x="93.6615%" y="725" width="0.0209%" height="15" fill="rgb(212,79,24)" fg:x="98383" fg:w="22"/><text x="93.9115%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (22 samples, 0.02%)</title><rect x="93.6615%" y="709" width="0.0209%" height="15" fill="rgb(217,222,37)" fg:x="98383" fg:w="22"/><text x="93.9115%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (11 samples, 0.01%)</title><rect x="93.7006%" y="709" width="0.0105%" height="15" fill="rgb(246,208,8)" fg:x="98424" fg:w="11"/><text x="93.9506%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (54 samples, 0.05%)</title><rect x="93.7205%" y="453" width="0.0514%" height="15" fill="rgb(244,133,10)" fg:x="98445" fg:w="54"/><text x="93.9705%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (54 samples, 0.05%)</title><rect x="93.7205%" y="437" width="0.0514%" height="15" fill="rgb(209,219,41)" fg:x="98445" fg:w="54"/><text x="93.9705%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (46 samples, 0.04%)</title><rect x="93.7282%" y="421" width="0.0438%" height="15" fill="rgb(253,175,45)" fg:x="98453" fg:w="46"/><text x="93.9782%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (41 samples, 0.04%)</title><rect x="93.7329%" y="405" width="0.0390%" height="15" fill="rgb(235,100,37)" fg:x="98458" fg:w="41"/><text x="93.9829%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (41 samples, 0.04%)</title><rect x="93.7329%" y="389" width="0.0390%" height="15" fill="rgb(225,87,19)" fg:x="98458" fg:w="41"/><text x="93.9829%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (41 samples, 0.04%)</title><rect x="93.7329%" y="373" width="0.0390%" height="15" fill="rgb(217,152,17)" fg:x="98458" fg:w="41"/><text x="93.9829%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (90 samples, 0.09%)</title><rect x="93.7196%" y="501" width="0.0857%" height="15" fill="rgb(235,72,13)" fg:x="98444" fg:w="90"/><text x="93.9696%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (90 samples, 0.09%)</title><rect x="93.7196%" y="485" width="0.0857%" height="15" fill="rgb(233,140,18)" fg:x="98444" fg:w="90"/><text x="93.9696%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (90 samples, 0.09%)</title><rect x="93.7196%" y="469" width="0.0857%" height="15" fill="rgb(207,212,28)" fg:x="98444" fg:w="90"/><text x="93.9696%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (29 samples, 0.03%)</title><rect x="93.7777%" y="453" width="0.0276%" height="15" fill="rgb(220,130,25)" fg:x="98505" fg:w="29"/><text x="94.0277%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (29 samples, 0.03%)</title><rect x="93.7777%" y="437" width="0.0276%" height="15" fill="rgb(205,55,34)" fg:x="98505" fg:w="29"/><text x="94.0277%" y="447.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (91 samples, 0.09%)</title><rect x="93.7196%" y="709" width="0.0866%" height="15" fill="rgb(237,54,35)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (91 samples, 0.09%)</title><rect x="93.7196%" y="693" width="0.0866%" height="15" fill="rgb(208,67,23)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (91 samples, 0.09%)</title><rect x="93.7196%" y="677" width="0.0866%" height="15" fill="rgb(206,207,50)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="687.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (91 samples, 0.09%)</title><rect x="93.7196%" y="661" width="0.0866%" height="15" fill="rgb(213,211,42)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (91 samples, 0.09%)</title><rect x="93.7196%" y="645" width="0.0866%" height="15" fill="rgb(252,197,50)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (91 samples, 0.09%)</title><rect x="93.7196%" y="629" width="0.0866%" height="15" fill="rgb(251,211,41)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (91 samples, 0.09%)</title><rect x="93.7196%" y="613" width="0.0866%" height="15" fill="rgb(229,211,5)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (91 samples, 0.09%)</title><rect x="93.7196%" y="597" width="0.0866%" height="15" fill="rgb(239,36,31)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (91 samples, 0.09%)</title><rect x="93.7196%" y="581" width="0.0866%" height="15" fill="rgb(248,67,31)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="591.50"></text></g><g><title>alloc::alloc::alloc (91 samples, 0.09%)</title><rect x="93.7196%" y="565" width="0.0866%" height="15" fill="rgb(249,55,44)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="575.50"></text></g><g><title>__rg_alloc (91 samples, 0.09%)</title><rect x="93.7196%" y="549" width="0.0866%" height="15" fill="rgb(216,82,12)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (91 samples, 0.09%)</title><rect x="93.7196%" y="533" width="0.0866%" height="15" fill="rgb(242,174,1)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="543.50"></text></g><g><title>rust_alloc (91 samples, 0.09%)</title><rect x="93.7196%" y="517" width="0.0866%" height="15" fill="rgb(208,120,29)" fg:x="98444" fg:w="91"/><text x="93.9696%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (126 samples, 0.12%)</title><rect x="93.6872%" y="741" width="0.1200%" height="15" fill="rgb(221,105,43)" fg:x="98410" fg:w="126"/><text x="93.9372%" y="751.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (122 samples, 0.12%)</title><rect x="93.6910%" y="725" width="0.1161%" height="15" fill="rgb(234,124,22)" fg:x="98414" fg:w="122"/><text x="93.9410%" y="735.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (20 samples, 0.02%)</title><rect x="93.8072%" y="741" width="0.0190%" height="15" fill="rgb(212,23,30)" fg:x="98536" fg:w="20"/><text x="94.0572%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (17 samples, 0.02%)</title><rect x="93.8100%" y="725" width="0.0162%" height="15" fill="rgb(219,122,53)" fg:x="98539" fg:w="17"/><text x="94.0600%" y="735.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (17 samples, 0.02%)</title><rect x="93.8100%" y="709" width="0.0162%" height="15" fill="rgb(248,84,24)" fg:x="98539" fg:w="17"/><text x="94.0600%" y="719.50"></text></g><g><title>core::mem::drop (26 samples, 0.02%)</title><rect x="93.8262%" y="741" width="0.0248%" height="15" fill="rgb(245,115,18)" fg:x="98556" fg:w="26"/><text x="94.0762%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="93.8262%" y="725" width="0.0248%" height="15" fill="rgb(227,176,51)" fg:x="98556" fg:w="26"/><text x="94.0762%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="93.8262%" y="709" width="0.0248%" height="15" fill="rgb(229,63,42)" fg:x="98556" fg:w="26"/><text x="94.0762%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (24 samples, 0.02%)</title><rect x="93.8281%" y="693" width="0.0228%" height="15" fill="rgb(247,202,24)" fg:x="98558" fg:w="24"/><text x="94.0781%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (24 samples, 0.02%)</title><rect x="93.8281%" y="677" width="0.0228%" height="15" fill="rgb(244,173,20)" fg:x="98558" fg:w="24"/><text x="94.0781%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (24 samples, 0.02%)</title><rect x="93.8281%" y="661" width="0.0228%" height="15" fill="rgb(242,81,47)" fg:x="98558" fg:w="24"/><text x="94.0781%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="93.8605%" y="741" width="0.0105%" height="15" fill="rgb(231,185,54)" fg:x="98592" fg:w="11"/><text x="94.1105%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="93.8605%" y="725" width="0.0105%" height="15" fill="rgb(243,55,32)" fg:x="98592" fg:w="11"/><text x="94.1105%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (11 samples, 0.01%)</title><rect x="93.8605%" y="709" width="0.0105%" height="15" fill="rgb(208,167,19)" fg:x="98592" fg:w="11"/><text x="94.1105%" y="719.50"></text></g><g><title>___pthread_mutex_lock (11 samples, 0.01%)</title><rect x="93.8605%" y="693" width="0.0105%" height="15" fill="rgb(231,72,35)" fg:x="98592" fg:w="11"/><text x="94.1105%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (244 samples, 0.23%)</title><rect x="93.6568%" y="757" width="0.2323%" height="15" fill="rgb(250,173,51)" fg:x="98378" fg:w="244"/><text x="93.9068%" y="767.50"></text></g><g><title>std::time::Instant::now (19 samples, 0.02%)</title><rect x="93.8710%" y="741" width="0.0181%" height="15" fill="rgb(209,5,22)" fg:x="98603" fg:w="19"/><text x="94.1210%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (19 samples, 0.02%)</title><rect x="93.8710%" y="725" width="0.0181%" height="15" fill="rgb(250,174,19)" fg:x="98603" fg:w="19"/><text x="94.1210%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (19 samples, 0.02%)</title><rect x="93.8710%" y="709" width="0.0181%" height="15" fill="rgb(217,3,49)" fg:x="98603" fg:w="19"/><text x="94.1210%" y="719.50"></text></g><g><title>__clock_gettime_2 (18 samples, 0.02%)</title><rect x="93.8719%" y="693" width="0.0171%" height="15" fill="rgb(218,225,5)" fg:x="98604" fg:w="18"/><text x="94.1219%" y="703.50"></text></g><g><title>__vdso_clock_gettime (15 samples, 0.01%)</title><rect x="93.8748%" y="677" width="0.0143%" height="15" fill="rgb(236,89,11)" fg:x="98607" fg:w="15"/><text x="94.1248%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.02%)</title><rect x="93.8891%" y="757" width="0.0152%" height="15" fill="rgb(206,33,28)" fg:x="98622" fg:w="16"/><text x="94.1391%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.02%)</title><rect x="93.8891%" y="741" width="0.0152%" height="15" fill="rgb(241,56,42)" fg:x="98622" fg:w="16"/><text x="94.1391%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (21 samples, 0.02%)</title><rect x="93.9148%" y="741" width="0.0200%" height="15" fill="rgb(222,44,11)" fg:x="98649" fg:w="21"/><text x="94.1648%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="93.9148%" y="725" width="0.0200%" height="15" fill="rgb(234,111,20)" fg:x="98649" fg:w="21"/><text x="94.1648%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (21 samples, 0.02%)</title><rect x="93.9148%" y="709" width="0.0200%" height="15" fill="rgb(237,77,6)" fg:x="98649" fg:w="21"/><text x="94.1648%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (21 samples, 0.02%)</title><rect x="93.9148%" y="693" width="0.0200%" height="15" fill="rgb(235,111,23)" fg:x="98649" fg:w="21"/><text x="94.1648%" y="703.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (21 samples, 0.02%)</title><rect x="93.9148%" y="677" width="0.0200%" height="15" fill="rgb(251,135,29)" fg:x="98649" fg:w="21"/><text x="94.1648%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (14 samples, 0.01%)</title><rect x="93.9347%" y="741" width="0.0133%" height="15" fill="rgb(217,57,1)" fg:x="98670" fg:w="14"/><text x="94.1847%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (14 samples, 0.01%)</title><rect x="93.9347%" y="725" width="0.0133%" height="15" fill="rgb(249,119,31)" fg:x="98670" fg:w="14"/><text x="94.1847%" y="735.50"></text></g><g><title>__fdget_pos (36 samples, 0.03%)</title><rect x="93.9995%" y="661" width="0.0343%" height="15" fill="rgb(233,164,33)" fg:x="98738" fg:w="36"/><text x="94.2495%" y="671.50"></text></g><g><title>__fget_light (30 samples, 0.03%)</title><rect x="94.0052%" y="645" width="0.0286%" height="15" fill="rgb(250,217,43)" fg:x="98744" fg:w="30"/><text x="94.2552%" y="655.50"></text></g><g><title>fsnotify_perm.part.0 (17 samples, 0.02%)</title><rect x="94.0433%" y="645" width="0.0162%" height="15" fill="rgb(232,154,50)" fg:x="98784" fg:w="17"/><text x="94.2933%" y="655.50"></text></g><g><title>_raw_read_lock_irqsave (12 samples, 0.01%)</title><rect x="94.0928%" y="581" width="0.0114%" height="15" fill="rgb(227,190,8)" fg:x="98836" fg:w="12"/><text x="94.3428%" y="591.50"></text></g><g><title>__wake_up_common (33 samples, 0.03%)</title><rect x="94.0823%" y="613" width="0.0314%" height="15" fill="rgb(209,217,32)" fg:x="98825" fg:w="33"/><text x="94.3323%" y="623.50"></text></g><g><title>ep_poll_callback (28 samples, 0.03%)</title><rect x="94.0871%" y="597" width="0.0267%" height="15" fill="rgb(243,203,50)" fg:x="98830" fg:w="28"/><text x="94.3371%" y="607.50"></text></g><g><title>_copy_to_iter (14 samples, 0.01%)</title><rect x="94.1137%" y="613" width="0.0133%" height="15" fill="rgb(232,152,27)" fg:x="98858" fg:w="14"/><text x="94.3637%" y="623.50"></text></g><g><title>_raw_spin_lock_irq (16 samples, 0.02%)</title><rect x="94.1271%" y="613" width="0.0152%" height="15" fill="rgb(240,34,29)" fg:x="98872" fg:w="16"/><text x="94.3771%" y="623.50"></text></g><g><title>new_sync_read (88 samples, 0.08%)</title><rect x="94.0595%" y="645" width="0.0838%" height="15" fill="rgb(215,185,52)" fg:x="98801" fg:w="88"/><text x="94.3095%" y="655.50"></text></g><g><title>eventfd_read (76 samples, 0.07%)</title><rect x="94.0709%" y="629" width="0.0724%" height="15" fill="rgb(240,89,49)" fg:x="98813" fg:w="76"/><text x="94.3209%" y="639.50"></text></g><g><title>ksys_read (161 samples, 0.15%)</title><rect x="93.9938%" y="677" width="0.1533%" height="15" fill="rgb(225,12,52)" fg:x="98732" fg:w="161"/><text x="94.2438%" y="687.50"></text></g><g><title>vfs_read (116 samples, 0.11%)</title><rect x="94.0366%" y="661" width="0.1104%" height="15" fill="rgb(239,128,45)" fg:x="98777" fg:w="116"/><text x="94.2866%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (77 samples, 0.07%)</title><rect x="94.1480%" y="677" width="0.0733%" height="15" fill="rgb(211,78,47)" fg:x="98894" fg:w="77"/><text x="94.3980%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (254 samples, 0.24%)</title><rect x="93.9823%" y="709" width="0.2418%" height="15" fill="rgb(232,31,21)" fg:x="98720" fg:w="254"/><text x="94.2323%" y="719.50"></text></g><g><title>do_syscall_64 (252 samples, 0.24%)</title><rect x="93.9843%" y="693" width="0.2399%" height="15" fill="rgb(222,168,14)" fg:x="98722" fg:w="252"/><text x="94.2343%" y="703.50"></text></g><g><title>__libc_read (274 samples, 0.26%)</title><rect x="93.9662%" y="725" width="0.2609%" height="15" fill="rgb(209,128,24)" fg:x="98703" fg:w="274"/><text x="94.2162%" y="735.50"></text></g><g><title>__entry_text_start (15 samples, 0.01%)</title><rect x="94.2489%" y="709" width="0.0143%" height="15" fill="rgb(249,35,13)" fg:x="99000" fg:w="15"/><text x="94.4989%" y="719.50"></text></g><g><title>ep_done_scan (14 samples, 0.01%)</title><rect x="94.3441%" y="645" width="0.0133%" height="15" fill="rgb(218,7,2)" fg:x="99100" fg:w="14"/><text x="94.5941%" y="655.50"></text></g><g><title>_raw_write_lock_irq (12 samples, 0.01%)</title><rect x="94.3460%" y="629" width="0.0114%" height="15" fill="rgb(238,107,27)" fg:x="99102" fg:w="12"/><text x="94.5960%" y="639.50"></text></g><g><title>ep_item_poll.isra.0 (51 samples, 0.05%)</title><rect x="94.3574%" y="645" width="0.0486%" height="15" fill="rgb(217,88,38)" fg:x="99114" fg:w="51"/><text x="94.6074%" y="655.50"></text></g><g><title>eventfd_poll (31 samples, 0.03%)</title><rect x="94.3765%" y="629" width="0.0295%" height="15" fill="rgb(230,207,0)" fg:x="99134" fg:w="31"/><text x="94.6265%" y="639.50"></text></g><g><title>mutex_lock (16 samples, 0.02%)</title><rect x="94.4060%" y="645" width="0.0152%" height="15" fill="rgb(249,64,54)" fg:x="99165" fg:w="16"/><text x="94.6560%" y="655.50"></text></g><g><title>__perf_event_task_sched_out (18 samples, 0.02%)</title><rect x="94.4536%" y="597" width="0.0171%" height="15" fill="rgb(231,7,11)" fg:x="99215" fg:w="18"/><text x="94.7036%" y="607.50"></text></g><g><title>update_cfs_group (12 samples, 0.01%)</title><rect x="94.4974%" y="565" width="0.0114%" height="15" fill="rgb(205,149,21)" fg:x="99261" fg:w="12"/><text x="94.7474%" y="575.50"></text></g><g><title>update_curr (31 samples, 0.03%)</title><rect x="94.5088%" y="565" width="0.0295%" height="15" fill="rgb(215,126,34)" fg:x="99273" fg:w="31"/><text x="94.7588%" y="575.50"></text></g><g><title>dequeue_task_fair (91 samples, 0.09%)</title><rect x="94.4707%" y="597" width="0.0866%" height="15" fill="rgb(241,132,45)" fg:x="99233" fg:w="91"/><text x="94.7207%" y="607.50"></text></g><g><title>dequeue_entity (79 samples, 0.08%)</title><rect x="94.4822%" y="581" width="0.0752%" height="15" fill="rgb(252,69,32)" fg:x="99245" fg:w="79"/><text x="94.7322%" y="591.50"></text></g><g><title>update_load_avg (20 samples, 0.02%)</title><rect x="94.5383%" y="565" width="0.0190%" height="15" fill="rgb(232,204,19)" fg:x="99304" fg:w="20"/><text x="94.7883%" y="575.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (47 samples, 0.04%)</title><rect x="94.5812%" y="565" width="0.0447%" height="15" fill="rgb(249,15,47)" fg:x="99349" fg:w="47"/><text x="94.8312%" y="575.50"></text></g><g><title>native_write_msr (42 samples, 0.04%)</title><rect x="94.5859%" y="549" width="0.0400%" height="15" fill="rgb(209,227,23)" fg:x="99354" fg:w="42"/><text x="94.8359%" y="559.50"></text></g><g><title>__perf_event_task_sched_in (49 samples, 0.05%)</title><rect x="94.5812%" y="581" width="0.0466%" height="15" fill="rgb(248,92,24)" fg:x="99349" fg:w="49"/><text x="94.8312%" y="591.50"></text></g><g><title>finish_task_switch.isra.0 (77 samples, 0.07%)</title><rect x="94.5574%" y="597" width="0.0733%" height="15" fill="rgb(247,59,2)" fg:x="99324" fg:w="77"/><text x="94.8074%" y="607.50"></text></g><g><title>psi_group_change (35 samples, 0.03%)</title><rect x="94.6545%" y="581" width="0.0333%" height="15" fill="rgb(221,30,5)" fg:x="99426" fg:w="35"/><text x="94.9045%" y="591.50"></text></g><g><title>psi_task_switch (51 samples, 0.05%)</title><rect x="94.6440%" y="597" width="0.0486%" height="15" fill="rgb(208,108,53)" fg:x="99415" fg:w="51"/><text x="94.8940%" y="607.50"></text></g><g><title>do_epoll_wait (454 samples, 0.43%)</title><rect x="94.2908%" y="661" width="0.4322%" height="15" fill="rgb(211,183,26)" fg:x="99044" fg:w="454"/><text x="94.5408%" y="671.50"></text></g><g><title>schedule_hrtimeout_range_clock (315 samples, 0.30%)</title><rect x="94.4231%" y="645" width="0.2999%" height="15" fill="rgb(232,132,4)" fg:x="99183" fg:w="315"/><text x="94.6731%" y="655.50"></text></g><g><title>schedule (307 samples, 0.29%)</title><rect x="94.4307%" y="629" width="0.2923%" height="15" fill="rgb(253,128,37)" fg:x="99191" fg:w="307"/><text x="94.6807%" y="639.50"></text></g><g><title>__schedule (305 samples, 0.29%)</title><rect x="94.4327%" y="613" width="0.2904%" height="15" fill="rgb(221,58,24)" fg:x="99193" fg:w="305"/><text x="94.6827%" y="623.50"></text></g><g><title>update_rq_clock (20 samples, 0.02%)</title><rect x="94.7040%" y="597" width="0.0190%" height="15" fill="rgb(230,54,45)" fg:x="99478" fg:w="20"/><text x="94.9540%" y="607.50"></text></g><g><title>__x64_sys_epoll_wait (468 samples, 0.45%)</title><rect x="94.2822%" y="677" width="0.4455%" height="15" fill="rgb(254,21,18)" fg:x="99035" fg:w="468"/><text x="94.5322%" y="687.50"></text></g><g><title>__rseq_handle_notify_resume (15 samples, 0.01%)</title><rect x="94.8049%" y="645" width="0.0143%" height="15" fill="rgb(221,108,0)" fg:x="99584" fg:w="15"/><text x="95.0549%" y="655.50"></text></g><g><title>exit_to_user_mode_prepare (37 samples, 0.04%)</title><rect x="94.7897%" y="661" width="0.0352%" height="15" fill="rgb(206,95,1)" fg:x="99568" fg:w="37"/><text x="95.0397%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (113 samples, 0.11%)</title><rect x="94.7287%" y="677" width="0.1076%" height="15" fill="rgb(237,52,5)" fg:x="99504" fg:w="113"/><text x="94.9787%" y="687.50"></text></g><g><title>syscall_exit_work (12 samples, 0.01%)</title><rect x="94.8249%" y="661" width="0.0114%" height="15" fill="rgb(218,150,34)" fg:x="99605" fg:w="12"/><text x="95.0749%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (604 samples, 0.58%)</title><rect x="94.2641%" y="709" width="0.5750%" height="15" fill="rgb(235,194,28)" fg:x="99016" fg:w="604"/><text x="94.5141%" y="719.50"></text></g><g><title>do_syscall_64 (594 samples, 0.57%)</title><rect x="94.2737%" y="693" width="0.5655%" height="15" fill="rgb(245,92,18)" fg:x="99026" fg:w="594"/><text x="94.5237%" y="703.50"></text></g><g><title>epoll_wait (650 samples, 0.62%)</title><rect x="94.2270%" y="725" width="0.6188%" height="15" fill="rgb(253,203,53)" fg:x="98977" fg:w="650"/><text x="94.4770%" y="735.50"></text></g><g><title>__entry_text_start (17 samples, 0.02%)</title><rect x="94.8620%" y="677" width="0.0162%" height="15" fill="rgb(249,185,47)" fg:x="99644" fg:w="17"/><text x="95.1120%" y="687.50"></text></g><g><title>_copy_from_user (25 samples, 0.02%)</title><rect x="94.9115%" y="629" width="0.0238%" height="15" fill="rgb(252,194,52)" fg:x="99696" fg:w="25"/><text x="95.1615%" y="639.50"></text></g><g><title>__fget_light (26 samples, 0.02%)</title><rect x="94.9686%" y="613" width="0.0248%" height="15" fill="rgb(210,53,36)" fg:x="99756" fg:w="26"/><text x="95.2186%" y="623.50"></text></g><g><title>ep_item_poll.isra.0 (17 samples, 0.02%)</title><rect x="94.9934%" y="613" width="0.0162%" height="15" fill="rgb(237,37,25)" fg:x="99782" fg:w="17"/><text x="95.2434%" y="623.50"></text></g><g><title>mutex_lock (12 samples, 0.01%)</title><rect x="95.0191%" y="613" width="0.0114%" height="15" fill="rgb(242,116,27)" fg:x="99809" fg:w="12"/><text x="95.2691%" y="623.50"></text></g><g><title>__x64_sys_epoll_ctl (159 samples, 0.15%)</title><rect x="94.8906%" y="645" width="0.1514%" height="15" fill="rgb(213,185,26)" fg:x="99674" fg:w="159"/><text x="95.1406%" y="655.50"></text></g><g><title>do_epoll_ctl (112 samples, 0.11%)</title><rect x="94.9353%" y="629" width="0.1066%" height="15" fill="rgb(225,204,8)" fg:x="99721" fg:w="112"/><text x="95.1853%" y="639.50"></text></g><g><title>mutex_unlock (12 samples, 0.01%)</title><rect x="95.0305%" y="613" width="0.0114%" height="15" fill="rgb(254,111,37)" fg:x="99821" fg:w="12"/><text x="95.2805%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (11 samples, 0.01%)</title><rect x="95.1981%" y="629" width="0.0105%" height="15" fill="rgb(242,35,9)" fg:x="99997" fg:w="11"/><text x="95.4481%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (177 samples, 0.17%)</title><rect x="95.0429%" y="645" width="0.1685%" height="15" fill="rgb(232,138,49)" fg:x="99834" fg:w="177"/><text x="95.2929%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (360 samples, 0.34%)</title><rect x="94.8791%" y="677" width="0.3427%" height="15" fill="rgb(247,56,4)" fg:x="99662" fg:w="360"/><text x="95.1291%" y="687.50"></text></g><g><title>do_syscall_64 (354 samples, 0.34%)</title><rect x="94.8849%" y="661" width="0.3370%" height="15" fill="rgb(226,179,17)" fg:x="99668" fg:w="354"/><text x="95.1349%" y="671.50"></text></g><g><title>syscall_trace_enter.constprop.0 (11 samples, 0.01%)</title><rect x="95.2114%" y="645" width="0.0105%" height="15" fill="rgb(216,163,45)" fg:x="100011" fg:w="11"/><text x="95.4614%" y="655.50"></text></g><g><title>__GI_epoll_ctl (395 samples, 0.38%)</title><rect x="94.8534%" y="693" width="0.3760%" height="15" fill="rgb(211,157,3)" fg:x="99635" fg:w="395"/><text x="95.1034%" y="703.50"></text></g><g><title>polling::epoll::Poller::modify (404 samples, 0.38%)</title><rect x="94.8468%" y="725" width="0.3846%" height="15" fill="rgb(234,44,20)" fg:x="99628" fg:w="404"/><text x="95.0968%" y="735.50"></text></g><g><title>polling::epoll::Poller::ctl (397 samples, 0.38%)</title><rect x="94.8534%" y="709" width="0.3779%" height="15" fill="rgb(254,138,23)" fg:x="99635" fg:w="397"/><text x="95.1034%" y="719.50"></text></g><g><title>__fget_light (24 samples, 0.02%)</title><rect x="95.2771%" y="645" width="0.0228%" height="15" fill="rgb(206,119,39)" fg:x="100080" fg:w="24"/><text x="95.5271%" y="655.50"></text></g><g><title>enqueue_hrtimer (13 samples, 0.01%)</title><rect x="95.3409%" y="629" width="0.0124%" height="15" fill="rgb(231,105,52)" fg:x="100147" fg:w="13"/><text x="95.5909%" y="639.50"></text></g><g><title>timerqueue_add (11 samples, 0.01%)</title><rect x="95.3428%" y="613" width="0.0105%" height="15" fill="rgb(250,20,5)" fg:x="100149" fg:w="11"/><text x="95.5928%" y="623.50"></text></g><g><title>hrtimer_start_range_ns (37 samples, 0.04%)</title><rect x="95.3266%" y="645" width="0.0352%" height="15" fill="rgb(215,198,30)" fg:x="100132" fg:w="37"/><text x="95.5766%" y="655.50"></text></g><g><title>__remove_hrtimer (13 samples, 0.01%)</title><rect x="95.3637%" y="629" width="0.0124%" height="15" fill="rgb(246,142,8)" fg:x="100171" fg:w="13"/><text x="95.6137%" y="639.50"></text></g><g><title>hrtimer_try_to_cancel (24 samples, 0.02%)</title><rect x="95.3618%" y="645" width="0.0228%" height="15" fill="rgb(243,26,38)" fg:x="100169" fg:w="24"/><text x="95.6118%" y="655.50"></text></g><g><title>ktime_get (18 samples, 0.02%)</title><rect x="95.3847%" y="645" width="0.0171%" height="15" fill="rgb(205,133,28)" fg:x="100193" fg:w="18"/><text x="95.6347%" y="655.50"></text></g><g><title>read_tsc (11 samples, 0.01%)</title><rect x="95.3913%" y="629" width="0.0105%" height="15" fill="rgb(212,34,0)" fg:x="100200" fg:w="11"/><text x="95.6413%" y="639.50"></text></g><g><title>do_timerfd_settime (147 samples, 0.14%)</title><rect x="95.2657%" y="661" width="0.1399%" height="15" fill="rgb(251,226,22)" fg:x="100068" fg:w="147"/><text x="95.5157%" y="671.50"></text></g><g><title>__x64_sys_timerfd_settime (168 samples, 0.16%)</title><rect x="95.2571%" y="677" width="0.1599%" height="15" fill="rgb(252,119,9)" fg:x="100059" fg:w="168"/><text x="95.5071%" y="687.50"></text></g><g><title>syscall_exit_to_user_mode (71 samples, 0.07%)</title><rect x="95.4180%" y="677" width="0.0676%" height="15" fill="rgb(213,150,50)" fg:x="100228" fg:w="71"/><text x="95.6680%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (248 samples, 0.24%)</title><rect x="95.2533%" y="709" width="0.2361%" height="15" fill="rgb(212,24,39)" fg:x="100055" fg:w="248"/><text x="95.5033%" y="719.50"></text></g><g><title>do_syscall_64 (246 samples, 0.23%)</title><rect x="95.2552%" y="693" width="0.2342%" height="15" fill="rgb(213,46,39)" fg:x="100057" fg:w="246"/><text x="95.5052%" y="703.50"></text></g><g><title>polling::epoll::Poller::wait (1,625 samples, 1.55%)</title><rect x="93.9481%" y="741" width="1.5470%" height="15" fill="rgb(239,106,12)" fg:x="98684" fg:w="1625"/><text x="94.1981%" y="751.50"></text></g><g><title>syscall (276 samples, 0.26%)</title><rect x="95.2323%" y="725" width="0.2628%" height="15" fill="rgb(249,229,21)" fg:x="100033" fg:w="276"/><text x="95.4823%" y="735.50"></text></g><g><title>polling::Poller::wait (1,682 samples, 1.60%)</title><rect x="93.9043%" y="757" width="1.6013%" height="15" fill="rgb(212,158,3)" fg:x="98638" fg:w="1682"/><text x="94.1543%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (11 samples, 0.01%)</title><rect x="95.4951%" y="741" width="0.0105%" height="15" fill="rgb(253,26,48)" fg:x="100309" fg:w="11"/><text x="95.7451%" y="751.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,954 samples, 1.86%)</title><rect x="93.6463%" y="773" width="1.8602%" height="15" fill="rgb(238,178,20)" fg:x="98367" fg:w="1954"/><text x="93.8963%" y="783.50">a..</text></g><g><title>core::sync::atomic::AtomicBool::store (16 samples, 0.02%)</title><rect x="95.5065%" y="725" width="0.0152%" height="15" fill="rgb(208,86,15)" fg:x="100321" fg:w="16"/><text x="95.7565%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_store (16 samples, 0.02%)</title><rect x="95.5065%" y="709" width="0.0152%" height="15" fill="rgb(239,42,53)" fg:x="100321" fg:w="16"/><text x="95.7565%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="95.5065%" y="773" width="0.0171%" height="15" fill="rgb(245,226,8)" fg:x="100321" fg:w="18"/><text x="95.7565%" y="783.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="95.5065%" y="757" width="0.0171%" height="15" fill="rgb(216,176,32)" fg:x="100321" fg:w="18"/><text x="95.7565%" y="767.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (18 samples, 0.02%)</title><rect x="95.5065%" y="741" width="0.0171%" height="15" fill="rgb(231,186,21)" fg:x="100321" fg:w="18"/><text x="95.7565%" y="751.50"></text></g><g><title>__GI___pthread_cond_wait (20 samples, 0.02%)</title><rect x="95.5475%" y="741" width="0.0190%" height="15" fill="rgb(205,95,49)" fg:x="100364" fg:w="20"/><text x="95.7975%" y="751.50"></text></g><g><title>__futex_abstimed_wait_common (20 samples, 0.02%)</title><rect x="95.5475%" y="725" width="0.0190%" height="15" fill="rgb(217,145,8)" fg:x="100364" fg:w="20"/><text x="95.7975%" y="735.50"></text></g><g><title>__entry_text_start (20 samples, 0.02%)</title><rect x="95.5475%" y="709" width="0.0190%" height="15" fill="rgb(239,144,48)" fg:x="100364" fg:w="20"/><text x="95.7975%" y="719.50"></text></g><g><title>__entry_text_start (18 samples, 0.02%)</title><rect x="95.6027%" y="709" width="0.0171%" height="15" fill="rgb(214,189,23)" fg:x="100422" fg:w="18"/><text x="95.8527%" y="719.50"></text></g><g><title>futex_hash (23 samples, 0.02%)</title><rect x="95.7474%" y="629" width="0.0219%" height="15" fill="rgb(229,157,17)" fg:x="100574" fg:w="23"/><text x="95.9974%" y="639.50"></text></g><g><title>get_futex_key (18 samples, 0.02%)</title><rect x="95.7693%" y="629" width="0.0171%" height="15" fill="rgb(230,5,48)" fg:x="100597" fg:w="18"/><text x="96.0193%" y="639.50"></text></g><g><title>__x64_sys_futex (148 samples, 0.14%)</title><rect x="95.6474%" y="677" width="0.1409%" height="15" fill="rgb(224,156,48)" fg:x="100469" fg:w="148"/><text x="95.8974%" y="687.50"></text></g><g><title>do_futex (102 samples, 0.10%)</title><rect x="95.6912%" y="661" width="0.0971%" height="15" fill="rgb(223,14,29)" fg:x="100515" fg:w="102"/><text x="95.9412%" y="671.50"></text></g><g><title>futex_wake (89 samples, 0.08%)</title><rect x="95.7036%" y="645" width="0.0847%" height="15" fill="rgb(229,96,36)" fg:x="100528" fg:w="89"/><text x="95.9536%" y="655.50"></text></g><g><title>exit_to_user_mode_prepare (31 samples, 0.03%)</title><rect x="96.0263%" y="661" width="0.0295%" height="15" fill="rgb(231,102,53)" fg:x="100867" fg:w="31"/><text x="96.2763%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (281 samples, 0.27%)</title><rect x="95.7931%" y="677" width="0.2675%" height="15" fill="rgb(210,77,38)" fg:x="100622" fg:w="281"/><text x="96.0431%" y="687.50"></text></g><g><title>__audit_syscall_entry (20 samples, 0.02%)</title><rect x="96.0711%" y="661" width="0.0190%" height="15" fill="rgb(235,131,6)" fg:x="100914" fg:w="20"/><text x="96.3211%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (495 samples, 0.47%)</title><rect x="95.6217%" y="709" width="0.4712%" height="15" fill="rgb(252,55,38)" fg:x="100442" fg:w="495"/><text x="95.8717%" y="719.50"></text></g><g><title>do_syscall_64 (484 samples, 0.46%)</title><rect x="95.6322%" y="693" width="0.4608%" height="15" fill="rgb(246,38,14)" fg:x="100453" fg:w="484"/><text x="95.8822%" y="703.50"></text></g><g><title>syscall_trace_enter.constprop.0 (34 samples, 0.03%)</title><rect x="96.0606%" y="677" width="0.0324%" height="15" fill="rgb(242,27,5)" fg:x="100903" fg:w="34"/><text x="96.3106%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (562 samples, 0.54%)</title><rect x="95.5665%" y="741" width="0.5350%" height="15" fill="rgb(228,65,35)" fg:x="100384" fg:w="562"/><text x="95.8165%" y="751.50"></text></g><g><title>__GI___lll_lock_wake (551 samples, 0.52%)</title><rect x="95.5770%" y="725" width="0.5246%" height="15" fill="rgb(245,93,11)" fg:x="100395" fg:w="551"/><text x="95.8270%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (53 samples, 0.05%)</title><rect x="96.1034%" y="741" width="0.0505%" height="15" fill="rgb(213,1,31)" fg:x="100948" fg:w="53"/><text x="96.3534%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (53 samples, 0.05%)</title><rect x="96.1034%" y="725" width="0.0505%" height="15" fill="rgb(237,205,14)" fg:x="100948" fg:w="53"/><text x="96.3534%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="96.2281%" y="677" width="0.0181%" height="15" fill="rgb(232,118,45)" fg:x="101079" fg:w="19"/><text x="96.4781%" y="687.50"></text></g><g><title>__condvar_dec_grefs (92 samples, 0.09%)</title><rect x="96.2529%" y="677" width="0.0876%" height="15" fill="rgb(218,5,6)" fg:x="101105" fg:w="92"/><text x="96.5029%" y="687.50"></text></g><g><title>__GI___pthread_disable_asynccancel (12 samples, 0.01%)</title><rect x="96.3900%" y="661" width="0.0114%" height="15" fill="rgb(251,87,51)" fg:x="101249" fg:w="12"/><text x="96.6400%" y="671.50"></text></g><g><title>__entry_text_start (17 samples, 0.02%)</title><rect x="96.4043%" y="661" width="0.0162%" height="15" fill="rgb(207,225,20)" fg:x="101264" fg:w="17"/><text x="96.6543%" y="671.50"></text></g><g><title>futex_unqueue (39 samples, 0.04%)</title><rect x="96.5947%" y="581" width="0.0371%" height="15" fill="rgb(222,78,54)" fg:x="101464" fg:w="39"/><text x="96.8447%" y="591.50"></text></g><g><title>__futex_queue (12 samples, 0.01%)</title><rect x="96.6918%" y="565" width="0.0114%" height="15" fill="rgb(232,85,16)" fg:x="101566" fg:w="12"/><text x="96.9418%" y="575.50"></text></g><g><title>_raw_spin_lock (18 samples, 0.02%)</title><rect x="96.8603%" y="517" width="0.0171%" height="15" fill="rgb(244,25,33)" fg:x="101743" fg:w="18"/><text x="97.1103%" y="527.50"></text></g><g><title>__perf_event_task_sched_out (98 samples, 0.09%)</title><rect x="96.8079%" y="533" width="0.0933%" height="15" fill="rgb(233,24,36)" fg:x="101688" fg:w="98"/><text x="97.0579%" y="543.50"></text></g><g><title>x86_pmu_disable (21 samples, 0.02%)</title><rect x="96.8812%" y="517" width="0.0200%" height="15" fill="rgb(253,49,54)" fg:x="101765" fg:w="21"/><text x="97.1312%" y="527.50"></text></g><g><title>reweight_entity (22 samples, 0.02%)</title><rect x="97.0440%" y="501" width="0.0209%" height="15" fill="rgb(245,12,22)" fg:x="101936" fg:w="22"/><text x="97.2940%" y="511.50"></text></g><g><title>update_cfs_group (44 samples, 0.04%)</title><rect x="97.0650%" y="501" width="0.0419%" height="15" fill="rgb(253,141,28)" fg:x="101958" fg:w="44"/><text x="97.3150%" y="511.50"></text></g><g><title>__calc_delta (52 samples, 0.05%)</title><rect x="97.1678%" y="485" width="0.0495%" height="15" fill="rgb(225,207,27)" fg:x="102066" fg:w="52"/><text x="97.4178%" y="495.50"></text></g><g><title>__cgroup_account_cputime (14 samples, 0.01%)</title><rect x="97.2173%" y="485" width="0.0133%" height="15" fill="rgb(220,84,2)" fg:x="102118" fg:w="14"/><text x="97.4673%" y="495.50"></text></g><g><title>cpuacct_charge (44 samples, 0.04%)</title><rect x="97.2344%" y="485" width="0.0419%" height="15" fill="rgb(224,37,37)" fg:x="102136" fg:w="44"/><text x="97.4844%" y="495.50"></text></g><g><title>update_curr (189 samples, 0.18%)</title><rect x="97.1068%" y="501" width="0.1799%" height="15" fill="rgb(220,143,18)" fg:x="102002" fg:w="189"/><text x="97.3568%" y="511.50"></text></g><g><title>update_min_vruntime (11 samples, 0.01%)</title><rect x="97.2763%" y="485" width="0.0105%" height="15" fill="rgb(210,88,33)" fg:x="102180" fg:w="11"/><text x="97.5263%" y="495.50"></text></g><g><title>__update_load_avg_cfs_rq (45 samples, 0.04%)</title><rect x="97.2991%" y="485" width="0.0428%" height="15" fill="rgb(219,87,51)" fg:x="102204" fg:w="45"/><text x="97.5491%" y="495.50"></text></g><g><title>dequeue_entity (427 samples, 0.41%)</title><rect x="96.9802%" y="517" width="0.4065%" height="15" fill="rgb(211,7,35)" fg:x="101869" fg:w="427"/><text x="97.2302%" y="527.50"></text></g><g><title>update_load_avg (105 samples, 0.10%)</title><rect x="97.2868%" y="501" width="0.1000%" height="15" fill="rgb(232,77,2)" fg:x="102191" fg:w="105"/><text x="97.5368%" y="511.50"></text></g><g><title>__update_load_avg_se (47 samples, 0.04%)</title><rect x="97.3420%" y="485" width="0.0447%" height="15" fill="rgb(249,94,25)" fg:x="102249" fg:w="47"/><text x="97.5920%" y="495.50"></text></g><g><title>dequeue_task_fair (507 samples, 0.48%)</title><rect x="96.9088%" y="533" width="0.4827%" height="15" fill="rgb(215,112,2)" fg:x="101794" fg:w="507"/><text x="97.1588%" y="543.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (212 samples, 0.20%)</title><rect x="97.4838%" y="501" width="0.2018%" height="15" fill="rgb(226,115,48)" fg:x="102398" fg:w="212"/><text x="97.7338%" y="511.50"></text></g><g><title>native_write_msr (202 samples, 0.19%)</title><rect x="97.4934%" y="485" width="0.1923%" height="15" fill="rgb(249,196,10)" fg:x="102408" fg:w="202"/><text x="97.7434%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (238 samples, 0.23%)</title><rect x="97.4696%" y="517" width="0.2266%" height="15" fill="rgb(237,109,14)" fg:x="102383" fg:w="238"/><text x="97.7196%" y="527.50"></text></g><g><title>_raw_spin_unlock (11 samples, 0.01%)</title><rect x="97.6857%" y="501" width="0.0105%" height="15" fill="rgb(217,103,53)" fg:x="102610" fg:w="11"/><text x="97.9357%" y="511.50"></text></g><g><title>finish_task_switch.isra.0 (338 samples, 0.32%)</title><rect x="97.3915%" y="533" width="0.3218%" height="15" fill="rgb(244,137,9)" fg:x="102301" fg:w="338"/><text x="97.6415%" y="543.50"></text></g><g><title>newidle_balance (50 samples, 0.05%)</title><rect x="97.7228%" y="517" width="0.0476%" height="15" fill="rgb(227,201,3)" fg:x="102649" fg:w="50"/><text x="97.9728%" y="527.50"></text></g><g><title>pick_next_task_fair (60 samples, 0.06%)</title><rect x="97.7142%" y="533" width="0.0571%" height="15" fill="rgb(243,94,6)" fg:x="102640" fg:w="60"/><text x="97.9642%" y="543.50"></text></g><g><title>pick_next_task_idle (33 samples, 0.03%)</title><rect x="97.7713%" y="533" width="0.0314%" height="15" fill="rgb(235,118,5)" fg:x="102700" fg:w="33"/><text x="98.0213%" y="543.50"></text></g><g><title>set_next_task_idle (29 samples, 0.03%)</title><rect x="97.7752%" y="517" width="0.0276%" height="15" fill="rgb(247,10,30)" fg:x="102704" fg:w="29"/><text x="98.0252%" y="527.50"></text></g><g><title>__update_idle_core (26 samples, 0.02%)</title><rect x="97.7780%" y="501" width="0.0248%" height="15" fill="rgb(205,26,28)" fg:x="102707" fg:w="26"/><text x="98.0280%" y="511.50"></text></g><g><title>iterate_groups (23 samples, 0.02%)</title><rect x="97.8237%" y="517" width="0.0219%" height="15" fill="rgb(206,99,35)" fg:x="102755" fg:w="23"/><text x="98.0737%" y="527.50"></text></g><g><title>psi_group_change (187 samples, 0.18%)</title><rect x="97.8504%" y="517" width="0.1780%" height="15" fill="rgb(238,130,40)" fg:x="102783" fg:w="187"/><text x="98.1004%" y="527.50"></text></g><g><title>psi_task_switch (255 samples, 0.24%)</title><rect x="97.8028%" y="533" width="0.2428%" height="15" fill="rgb(224,126,31)" fg:x="102733" fg:w="255"/><text x="98.0528%" y="543.50"></text></g><g><title>sched_clock_cpu (18 samples, 0.02%)</title><rect x="98.0284%" y="517" width="0.0171%" height="15" fill="rgb(254,105,17)" fg:x="102970" fg:w="18"/><text x="98.2784%" y="527.50"></text></g><g><title>native_sched_clock (16 samples, 0.02%)</title><rect x="98.0303%" y="501" width="0.0152%" height="15" fill="rgb(216,87,36)" fg:x="102972" fg:w="16"/><text x="98.2803%" y="511.50"></text></g><g><title>put_prev_task_fair (52 samples, 0.05%)</title><rect x="98.0455%" y="533" width="0.0495%" height="15" fill="rgb(240,21,12)" fg:x="102988" fg:w="52"/><text x="98.2955%" y="543.50"></text></g><g><title>put_prev_entity (28 samples, 0.03%)</title><rect x="98.0684%" y="517" width="0.0267%" height="15" fill="rgb(245,192,34)" fg:x="103012" fg:w="28"/><text x="98.3184%" y="527.50"></text></g><g><title>raw_spin_rq_lock_nested (14 samples, 0.01%)</title><rect x="98.0950%" y="533" width="0.0133%" height="15" fill="rgb(226,100,49)" fg:x="103040" fg:w="14"/><text x="98.3450%" y="543.50"></text></g><g><title>_raw_spin_lock (12 samples, 0.01%)</title><rect x="98.0969%" y="517" width="0.0114%" height="15" fill="rgb(245,188,27)" fg:x="103042" fg:w="12"/><text x="98.3469%" y="527.50"></text></g><g><title>rcu_note_context_switch (16 samples, 0.02%)</title><rect x="98.1084%" y="533" width="0.0152%" height="15" fill="rgb(212,170,8)" fg:x="103054" fg:w="16"/><text x="98.3584%" y="543.50"></text></g><g><title>sched_clock_cpu (31 samples, 0.03%)</title><rect x="98.1617%" y="517" width="0.0295%" height="15" fill="rgb(217,113,29)" fg:x="103110" fg:w="31"/><text x="98.4117%" y="527.50"></text></g><g><title>native_sched_clock (28 samples, 0.03%)</title><rect x="98.1645%" y="501" width="0.0267%" height="15" fill="rgb(237,30,3)" fg:x="103113" fg:w="28"/><text x="98.4145%" y="511.50"></text></g><g><title>futex_wait_queue (1,650 samples, 1.57%)</title><rect x="96.6318%" y="581" width="1.5708%" height="15" fill="rgb(227,19,28)" fg:x="101503" fg:w="1650"/><text x="96.8818%" y="591.50"></text></g><g><title>schedule (1,574 samples, 1.50%)</title><rect x="96.7041%" y="565" width="1.4985%" height="15" fill="rgb(239,172,45)" fg:x="101579" fg:w="1574"/><text x="96.9541%" y="575.50"></text></g><g><title>__schedule (1,545 samples, 1.47%)</title><rect x="96.7318%" y="549" width="1.4709%" height="15" fill="rgb(254,55,39)" fg:x="101608" fg:w="1545"/><text x="96.9818%" y="559.50"></text></g><g><title>update_rq_clock (83 samples, 0.08%)</title><rect x="98.1236%" y="533" width="0.0790%" height="15" fill="rgb(249,208,12)" fg:x="103070" fg:w="83"/><text x="98.3736%" y="543.50"></text></g><g><title>update_irq_load_avg (12 samples, 0.01%)</title><rect x="98.1912%" y="517" width="0.0114%" height="15" fill="rgb(240,52,13)" fg:x="103141" fg:w="12"/><text x="98.4412%" y="527.50"></text></g><g><title>futex_get_value_locked (45 samples, 0.04%)</title><rect x="98.2236%" y="565" width="0.0428%" height="15" fill="rgb(252,149,13)" fg:x="103175" fg:w="45"/><text x="98.4736%" y="575.50"></text></g><g><title>__get_user_nocheck_4 (39 samples, 0.04%)</title><rect x="98.2293%" y="549" width="0.0371%" height="15" fill="rgb(232,81,48)" fg:x="103181" fg:w="39"/><text x="98.4793%" y="559.50"></text></g><g><title>_raw_spin_lock (15 samples, 0.01%)</title><rect x="98.3178%" y="549" width="0.0143%" height="15" fill="rgb(222,144,2)" fg:x="103274" fg:w="15"/><text x="98.5678%" y="559.50"></text></g><g><title>futex_q_lock (101 samples, 0.10%)</title><rect x="98.2664%" y="565" width="0.0962%" height="15" fill="rgb(216,81,32)" fg:x="103220" fg:w="101"/><text x="98.5164%" y="575.50"></text></g><g><title>futex_hash (31 samples, 0.03%)</title><rect x="98.3330%" y="549" width="0.0295%" height="15" fill="rgb(244,78,51)" fg:x="103290" fg:w="31"/><text x="98.5830%" y="559.50"></text></g><g><title>__x64_sys_futex (2,005 samples, 1.91%)</title><rect x="96.4709%" y="629" width="1.9088%" height="15" fill="rgb(217,66,21)" fg:x="101334" fg:w="2005"/><text x="96.7209%" y="639.50">_..</text></g><g><title>do_futex (1,951 samples, 1.86%)</title><rect x="96.5223%" y="613" width="1.8574%" height="15" fill="rgb(247,101,42)" fg:x="101388" fg:w="1951"/><text x="96.7723%" y="623.50">d..</text></g><g><title>futex_wait (1,932 samples, 1.84%)</title><rect x="96.5404%" y="597" width="1.8393%" height="15" fill="rgb(227,81,39)" fg:x="101407" fg:w="1932"/><text x="96.7904%" y="607.50">f..</text></g><g><title>futex_wait_setup (186 samples, 0.18%)</title><rect x="98.2026%" y="581" width="0.1771%" height="15" fill="rgb(220,223,44)" fg:x="103153" fg:w="186"/><text x="98.4526%" y="591.50"></text></g><g><title>get_futex_key (17 samples, 0.02%)</title><rect x="98.3635%" y="565" width="0.0162%" height="15" fill="rgb(205,218,2)" fg:x="103322" fg:w="17"/><text x="98.6135%" y="575.50"></text></g><g><title>__get_user_8 (39 samples, 0.04%)</title><rect x="98.8252%" y="581" width="0.0371%" height="15" fill="rgb(212,207,28)" fg:x="103807" fg:w="39"/><text x="99.0752%" y="591.50"></text></g><g><title>__rseq_handle_notify_resume (128 samples, 0.12%)</title><rect x="98.7624%" y="597" width="0.1219%" height="15" fill="rgb(224,12,41)" fg:x="103741" fg:w="128"/><text x="99.0124%" y="607.50"></text></g><g><title>__put_user_nocheck_8 (23 samples, 0.02%)</title><rect x="98.8623%" y="581" width="0.0219%" height="15" fill="rgb(216,118,12)" fg:x="103846" fg:w="23"/><text x="99.1123%" y="591.50"></text></g><g><title>blkcg_maybe_throttle_current (12 samples, 0.01%)</title><rect x="98.8871%" y="597" width="0.0114%" height="15" fill="rgb(252,97,46)" fg:x="103872" fg:w="12"/><text x="99.1371%" y="607.50"></text></g><g><title>exit_to_user_mode_prepare (238 samples, 0.23%)</title><rect x="98.7053%" y="613" width="0.2266%" height="15" fill="rgb(244,206,19)" fg:x="103681" fg:w="238"/><text x="98.9553%" y="623.50"></text></g><g><title>switch_fpu_return (25 samples, 0.02%)</title><rect x="98.9080%" y="597" width="0.0238%" height="15" fill="rgb(231,84,31)" fg:x="103894" fg:w="25"/><text x="99.1580%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (634 samples, 0.60%)</title><rect x="98.3873%" y="629" width="0.6036%" height="15" fill="rgb(244,133,0)" fg:x="103347" fg:w="634"/><text x="98.6373%" y="639.50"></text></g><g><title>syscall_exit_work (62 samples, 0.06%)</title><rect x="98.9318%" y="613" width="0.0590%" height="15" fill="rgb(223,15,50)" fg:x="103919" fg:w="62"/><text x="99.1818%" y="623.50"></text></g><g><title>__audit_syscall_exit (19 samples, 0.02%)</title><rect x="98.9728%" y="597" width="0.0181%" height="15" fill="rgb(250,118,49)" fg:x="103962" fg:w="19"/><text x="99.2228%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,717 samples, 2.59%)</title><rect x="96.4252%" y="661" width="2.5866%" height="15" fill="rgb(248,25,38)" fg:x="101286" fg:w="2717"/><text x="96.6752%" y="671.50">en..</text></g><g><title>do_syscall_64 (2,705 samples, 2.58%)</title><rect x="96.4366%" y="645" width="2.5752%" height="15" fill="rgb(215,70,14)" fg:x="101298" fg:w="2705"/><text x="96.6866%" y="655.50">do..</text></g><g><title>syscall_trace_enter.constprop.0 (22 samples, 0.02%)</title><rect x="98.9909%" y="629" width="0.0209%" height="15" fill="rgb(215,28,15)" fg:x="103981" fg:w="22"/><text x="99.2409%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (2,819 samples, 2.68%)</title><rect x="96.3405%" y="677" width="2.6837%" height="15" fill="rgb(243,6,28)" fg:x="101197" fg:w="2819"/><text x="96.5905%" y="687.50">__..</text></g><g><title>syscall_return_via_sysret (13 samples, 0.01%)</title><rect x="99.0118%" y="661" width="0.0124%" height="15" fill="rgb(222,130,1)" fg:x="104003" fg:w="13"/><text x="99.2618%" y="671.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (3,030 samples, 2.88%)</title><rect x="96.1596%" y="709" width="2.8846%" height="15" fill="rgb(236,166,44)" fg:x="101007" fg:w="3030"/><text x="96.4096%" y="719.50">st..</text></g><g><title>__GI___pthread_cond_wait (3,030 samples, 2.88%)</title><rect x="96.1596%" y="693" width="2.8846%" height="15" fill="rgb(221,108,14)" fg:x="101007" fg:w="3030"/><text x="96.4096%" y="703.50">__..</text></g><g><title>__pthread_mutex_cond_lock (14 samples, 0.01%)</title><rect x="99.0309%" y="677" width="0.0133%" height="15" fill="rgb(252,3,45)" fg:x="104023" fg:w="14"/><text x="99.2809%" y="687.50"></text></g><g><title>std::sync::condvar::Condvar::wait (3,045 samples, 2.90%)</title><rect x="96.1539%" y="741" width="2.8989%" height="15" fill="rgb(237,68,30)" fg:x="101001" fg:w="3045"/><text x="96.4039%" y="751.50">st..</text></g><g><title>std::sys_common::condvar::Condvar::wait (3,039 samples, 2.89%)</title><rect x="96.1596%" y="725" width="2.8932%" height="15" fill="rgb(211,79,22)" fg:x="101007" fg:w="3039"/><text x="96.4096%" y="735.50">st..</text></g><g><title>parking::Parker::park (3,707 samples, 3.53%)</title><rect x="95.5379%" y="773" width="3.5291%" height="15" fill="rgb(252,185,21)" fg:x="100354" fg:w="3707"/><text x="95.7879%" y="783.50">par..</text></g><g><title>parking::Inner::park (3,703 samples, 3.53%)</title><rect x="95.5417%" y="757" width="3.5253%" height="15" fill="rgb(225,189,26)" fg:x="100358" fg:w="3703"/><text x="95.7917%" y="767.50">par..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="99.0528%" y="741" width="0.0143%" height="15" fill="rgb(241,30,40)" fg:x="104046" fg:w="15"/><text x="99.3028%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="99.0537%" y="725" width="0.0133%" height="15" fill="rgb(235,215,44)" fg:x="104047" fg:w="14"/><text x="99.3037%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="99.0537%" y="709" width="0.0133%" height="15" fill="rgb(205,8,29)" fg:x="104047" fg:w="14"/><text x="99.3037%" y="719.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="99.0537%" y="693" width="0.0133%" height="15" fill="rgb(241,137,42)" fg:x="104047" fg:w="14"/><text x="99.3037%" y="703.50"></text></g><g><title>parking::Parker::park_timeout (65 samples, 0.06%)</title><rect x="99.0670%" y="773" width="0.0619%" height="15" fill="rgb(237,155,2)" fg:x="104061" fg:w="65"/><text x="99.3170%" y="783.50"></text></g><g><title>parking::Inner::park (64 samples, 0.06%)</title><rect x="99.0680%" y="757" width="0.0609%" height="15" fill="rgb(245,29,42)" fg:x="104062" fg:w="64"/><text x="99.3180%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (61 samples, 0.06%)</title><rect x="99.0708%" y="741" width="0.0581%" height="15" fill="rgb(234,101,35)" fg:x="104065" fg:w="61"/><text x="99.3208%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (61 samples, 0.06%)</title><rect x="99.0708%" y="725" width="0.0581%" height="15" fill="rgb(228,64,37)" fg:x="104065" fg:w="61"/><text x="99.3208%" y="735.50"></text></g><g><title>std::panic::catch_unwind (19,349 samples, 18.42%)</title><rect x="80.7247%" y="1061" width="18.4204%" height="15" fill="rgb(217,214,36)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (19,349 samples, 18.42%)</title><rect x="80.7247%" y="1045" width="18.4204%" height="15" fill="rgb(243,70,3)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (19,349 samples, 18.42%)</title><rect x="80.7247%" y="1029" width="18.4204%" height="15" fill="rgb(253,158,52)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="1039.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19,349 samples, 18.42%)</title><rect x="80.7247%" y="1013" width="18.4204%" height="15" fill="rgb(234,111,54)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="1023.50">&lt;core::panic::unwind_safe::As..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (19,349 samples, 18.42%)</title><rect x="80.7247%" y="997" width="18.4204%" height="15" fill="rgb(217,70,32)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="1007.50">std::thread::Builder::spawn_u..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19,349 samples, 18.42%)</title><rect x="80.7247%" y="981" width="18.4204%" height="15" fill="rgb(234,18,33)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="991.50">std::sys_common::backtrace::_..</text></g><g><title>core::ops::function::FnOnce::call_once (19,349 samples, 18.42%)</title><rect x="80.7247%" y="965" width="18.4204%" height="15" fill="rgb(234,12,49)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="975.50">core::ops::function::FnOnce::..</text></g><g><title>async_global_executor::threading::thread_main_loop (19,349 samples, 18.42%)</title><rect x="80.7247%" y="949" width="18.4204%" height="15" fill="rgb(236,10,21)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="959.50">async_global_executor::thread..</text></g><g><title>std::panic::catch_unwind (19,349 samples, 18.42%)</title><rect x="80.7247%" y="933" width="18.4204%" height="15" fill="rgb(248,182,45)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (19,349 samples, 18.42%)</title><rect x="80.7247%" y="917" width="18.4204%" height="15" fill="rgb(217,95,36)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (19,349 samples, 18.42%)</title><rect x="80.7247%" y="901" width="18.4204%" height="15" fill="rgb(212,110,31)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="911.50">std::panicking::try::do_call</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (19,349 samples, 18.42%)</title><rect x="80.7247%" y="885" width="18.4204%" height="15" fill="rgb(206,32,53)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="895.50">async_global_executor::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19,349 samples, 18.42%)</title><rect x="80.7247%" y="869" width="18.4204%" height="15" fill="rgb(246,141,37)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="879.50">std::thread::local::LocalKey&lt;..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19,349 samples, 18.42%)</title><rect x="80.7247%" y="853" width="18.4204%" height="15" fill="rgb(219,16,7)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="863.50">std::thread::local::LocalKey&lt;..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (19,349 samples, 18.42%)</title><rect x="80.7247%" y="837" width="18.4204%" height="15" fill="rgb(230,205,45)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="847.50">async_global_executor::thread..</text></g><g><title>async_global_executor::reactor::block_on (19,349 samples, 18.42%)</title><rect x="80.7247%" y="821" width="18.4204%" height="15" fill="rgb(231,43,49)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="831.50">async_global_executor::reacto..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (19,349 samples, 18.42%)</title><rect x="80.7247%" y="805" width="18.4204%" height="15" fill="rgb(212,106,34)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="815.50">async_global_executor::reacto..</text></g><g><title>async_io::driver::block_on (19,349 samples, 18.42%)</title><rect x="80.7247%" y="789" width="18.4204%" height="15" fill="rgb(206,83,17)" fg:x="84794" fg:w="19349"/><text x="80.9747%" y="799.50">async_io::driver::block_on</text></g><g><title>std::time::Instant::now (12 samples, 0.01%)</title><rect x="99.1337%" y="773" width="0.0114%" height="15" fill="rgb(244,154,49)" fg:x="104131" fg:w="12"/><text x="99.3837%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (12 samples, 0.01%)</title><rect x="99.1337%" y="757" width="0.0114%" height="15" fill="rgb(244,149,49)" fg:x="104131" fg:w="12"/><text x="99.3837%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::now (12 samples, 0.01%)</title><rect x="99.1337%" y="741" width="0.0114%" height="15" fill="rgb(227,134,18)" fg:x="104131" fg:w="12"/><text x="99.3837%" y="751.50"></text></g><g><title>__clock_gettime_2 (11 samples, 0.01%)</title><rect x="99.1346%" y="725" width="0.0105%" height="15" fill="rgb(237,116,36)" fg:x="104132" fg:w="11"/><text x="99.3846%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19,357 samples, 18.43%)</title><rect x="80.7247%" y="1125" width="18.4280%" height="15" fill="rgb(205,129,40)" fg:x="84794" fg:w="19357"/><text x="80.9747%" y="1135.50">&lt;alloc::boxed::Box&lt;F,A&gt; as co..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19,357 samples, 18.43%)</title><rect x="80.7247%" y="1109" width="18.4280%" height="15" fill="rgb(236,178,4)" fg:x="84794" fg:w="19357"/><text x="80.9747%" y="1119.50">&lt;alloc::boxed::Box&lt;F,A&gt; as co..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (19,357 samples, 18.43%)</title><rect x="80.7247%" y="1093" width="18.4280%" height="15" fill="rgb(251,76,53)" fg:x="84794" fg:w="19357"/><text x="80.9747%" y="1103.50">core::ops::function::FnOnce::..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (19,357 samples, 18.43%)</title><rect x="80.7247%" y="1077" width="18.4280%" height="15" fill="rgb(242,92,40)" fg:x="84794" fg:w="19357"/><text x="80.9747%" y="1087.50">std::thread::Builder::spawn_u..</text></g><g><title>__GI___clone (19,375 samples, 18.45%)</title><rect x="80.7104%" y="1173" width="18.4452%" height="15" fill="rgb(209,45,30)" fg:x="84779" fg:w="19375"/><text x="80.9604%" y="1183.50">__GI___clone</text></g><g><title>start_thread (19,360 samples, 18.43%)</title><rect x="80.7247%" y="1157" width="18.4309%" height="15" fill="rgb(218,157,36)" fg:x="84794" fg:w="19360"/><text x="80.9747%" y="1167.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (19,360 samples, 18.43%)</title><rect x="80.7247%" y="1141" width="18.4309%" height="15" fill="rgb(222,186,16)" fg:x="84794" fg:w="19360"/><text x="80.9747%" y="1151.50">std::sys::unix::thread::Threa..</text></g><g><title>__clock_gettime_2 (17 samples, 0.02%)</title><rect x="99.1641%" y="1173" width="0.0162%" height="15" fill="rgb(254,72,35)" fg:x="104163" fg:w="17"/><text x="99.4141%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (28 samples, 0.03%)</title><rect x="99.1927%" y="1157" width="0.0267%" height="15" fill="rgb(224,25,35)" fg:x="104193" fg:w="28"/><text x="99.4427%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (28 samples, 0.03%)</title><rect x="99.1927%" y="1141" width="0.0267%" height="15" fill="rgb(206,135,52)" fg:x="104193" fg:w="28"/><text x="99.4427%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (28 samples, 0.03%)</title><rect x="99.1927%" y="1125" width="0.0267%" height="15" fill="rgb(229,174,47)" fg:x="104193" fg:w="28"/><text x="99.4427%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="99.1927%" y="1109" width="0.0267%" height="15" fill="rgb(242,184,21)" fg:x="104193" fg:w="28"/><text x="99.4427%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.03%)</title><rect x="99.1927%" y="1093" width="0.0267%" height="15" fill="rgb(213,22,45)" fg:x="104193" fg:w="28"/><text x="99.4427%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.03%)</title><rect x="99.1927%" y="1077" width="0.0267%" height="15" fill="rgb(237,81,54)" fg:x="104193" fg:w="28"/><text x="99.4427%" y="1087.50"></text></g><g><title>__rg_dealloc (28 samples, 0.03%)</title><rect x="99.1927%" y="1061" width="0.0267%" height="15" fill="rgb(248,177,18)" fg:x="104193" fg:w="28"/><text x="99.4427%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (28 samples, 0.03%)</title><rect x="99.1927%" y="1045" width="0.0267%" height="15" fill="rgb(254,31,16)" fg:x="104193" fg:w="28"/><text x="99.4427%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (37 samples, 0.04%)</title><rect x="99.2194%" y="1157" width="0.0352%" height="15" fill="rgb(235,20,31)" fg:x="104221" fg:w="37"/><text x="99.4694%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (70 samples, 0.07%)</title><rect x="99.1908%" y="1173" width="0.0666%" height="15" fill="rgb(240,56,43)" fg:x="104191" fg:w="70"/><text x="99.4408%" y="1183.50"></text></g><g><title>async_executor::steal (21 samples, 0.02%)</title><rect x="99.2793%" y="1173" width="0.0200%" height="15" fill="rgb(237,197,51)" fg:x="104284" fg:w="21"/><text x="99.5293%" y="1183.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (17 samples, 0.02%)</title><rect x="99.2993%" y="1173" width="0.0162%" height="15" fill="rgb(241,162,44)" fg:x="104305" fg:w="17"/><text x="99.5493%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (28 samples, 0.03%)</title><rect x="99.3279%" y="1173" width="0.0267%" height="15" fill="rgb(224,23,20)" fg:x="104335" fg:w="28"/><text x="99.5779%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="99.3564%" y="1173" width="0.0162%" height="15" fill="rgb(250,109,34)" fg:x="104365" fg:w="17"/><text x="99.6064%" y="1183.50"></text></g><g><title>futex_wait_queue (21 samples, 0.02%)</title><rect x="99.4164%" y="1093" width="0.0200%" height="15" fill="rgb(214,175,50)" fg:x="104428" fg:w="21"/><text x="99.6664%" y="1103.50"></text></g><g><title>schedule (21 samples, 0.02%)</title><rect x="99.4164%" y="1077" width="0.0200%" height="15" fill="rgb(213,182,5)" fg:x="104428" fg:w="21"/><text x="99.6664%" y="1087.50"></text></g><g><title>__schedule (20 samples, 0.02%)</title><rect x="99.4174%" y="1061" width="0.0190%" height="15" fill="rgb(209,199,19)" fg:x="104429" fg:w="20"/><text x="99.6674%" y="1071.50"></text></g><g><title>futex_wait (31 samples, 0.03%)</title><rect x="99.4126%" y="1109" width="0.0295%" height="15" fill="rgb(236,224,42)" fg:x="104424" fg:w="31"/><text x="99.6626%" y="1119.50"></text></g><g><title>__x64_sys_futex (49 samples, 0.05%)</title><rect x="99.4107%" y="1141" width="0.0466%" height="15" fill="rgb(246,226,29)" fg:x="104422" fg:w="49"/><text x="99.6607%" y="1151.50"></text></g><g><title>do_futex (47 samples, 0.04%)</title><rect x="99.4126%" y="1125" width="0.0447%" height="15" fill="rgb(227,223,11)" fg:x="104424" fg:w="47"/><text x="99.6626%" y="1135.50"></text></g><g><title>futex_wake (16 samples, 0.02%)</title><rect x="99.4421%" y="1109" width="0.0152%" height="15" fill="rgb(219,7,51)" fg:x="104455" fg:w="16"/><text x="99.6921%" y="1119.50"></text></g><g><title>syscall_exit_to_user_mode (25 samples, 0.02%)</title><rect x="99.4621%" y="1141" width="0.0238%" height="15" fill="rgb(245,167,10)" fg:x="104476" fg:w="25"/><text x="99.7121%" y="1151.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (111 samples, 0.11%)</title><rect x="99.3812%" y="1173" width="0.1057%" height="15" fill="rgb(237,224,16)" fg:x="104391" fg:w="111"/><text x="99.6312%" y="1183.50"></text></g><g><title>do_syscall_64 (83 samples, 0.08%)</title><rect x="99.4079%" y="1157" width="0.0790%" height="15" fill="rgb(226,132,13)" fg:x="104419" fg:w="83"/><text x="99.6579%" y="1167.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (49 samples, 0.05%)</title><rect x="99.4869%" y="1173" width="0.0466%" height="15" fill="rgb(214,140,3)" fg:x="104502" fg:w="49"/><text x="99.7369%" y="1183.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (18 samples, 0.02%)</title><rect x="99.5373%" y="1173" width="0.0171%" height="15" fill="rgb(221,177,4)" fg:x="104555" fg:w="18"/><text x="99.7873%" y="1183.50"></text></g><g><title>syscall_return_via_sysret (12 samples, 0.01%)</title><rect x="99.5630%" y="1173" width="0.0114%" height="15" fill="rgb(238,139,3)" fg:x="104582" fg:w="12"/><text x="99.8130%" y="1183.50"></text></g><g><title>async-std/runti (104,502 samples, 99.49%)</title><rect x="0.0952%" y="1189" width="99.4869%" height="15" fill="rgb(216,17,39)" fg:x="100" fg:w="104502"/><text x="0.3452%" y="1199.50">async-std/runti</text></g><g><title>futex_wait_queue (19 samples, 0.02%)</title><rect x="99.5906%" y="773" width="0.0181%" height="15" fill="rgb(238,120,9)" fg:x="104611" fg:w="19"/><text x="99.8406%" y="783.50"></text></g><g><title>schedule (19 samples, 0.02%)</title><rect x="99.5906%" y="757" width="0.0181%" height="15" fill="rgb(244,92,53)" fg:x="104611" fg:w="19"/><text x="99.8406%" y="767.50"></text></g><g><title>__schedule (19 samples, 0.02%)</title><rect x="99.5906%" y="741" width="0.0181%" height="15" fill="rgb(224,148,33)" fg:x="104611" fg:w="19"/><text x="99.8406%" y="751.50"></text></g><g><title>finish_task_switch.isra.0 (19 samples, 0.02%)</title><rect x="99.5906%" y="725" width="0.0181%" height="15" fill="rgb(243,6,36)" fg:x="104611" fg:w="19"/><text x="99.8406%" y="735.50"></text></g><g><title>__perf_event_task_sched_in (19 samples, 0.02%)</title><rect x="99.5906%" y="709" width="0.0181%" height="15" fill="rgb(230,102,11)" fg:x="104611" fg:w="19"/><text x="99.8406%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (19 samples, 0.02%)</title><rect x="99.5906%" y="693" width="0.0181%" height="15" fill="rgb(234,148,36)" fg:x="104611" fg:w="19"/><text x="99.8406%" y="703.50"></text></g><g><title>native_write_msr (19 samples, 0.02%)</title><rect x="99.5906%" y="677" width="0.0181%" height="15" fill="rgb(251,153,25)" fg:x="104611" fg:w="19"/><text x="99.8406%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23 samples, 0.02%)</title><rect x="99.5878%" y="1125" width="0.0219%" height="15" fill="rgb(215,129,8)" fg:x="104608" fg:w="23"/><text x="99.8378%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23 samples, 0.02%)</title><rect x="99.5878%" y="1109" width="0.0219%" height="15" fill="rgb(224,128,35)" fg:x="104608" fg:w="23"/><text x="99.8378%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (23 samples, 0.02%)</title><rect x="99.5878%" y="1093" width="0.0219%" height="15" fill="rgb(237,56,52)" fg:x="104608" fg:w="23"/><text x="99.8378%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (23 samples, 0.02%)</title><rect x="99.5878%" y="1077" width="0.0219%" height="15" fill="rgb(234,213,19)" fg:x="104608" fg:w="23"/><text x="99.8378%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.02%)</title><rect x="99.5878%" y="1061" width="0.0219%" height="15" fill="rgb(252,82,23)" fg:x="104608" fg:w="23"/><text x="99.8378%" y="1071.50"></text></g><g><title>std::panicking::try (23 samples, 0.02%)</title><rect x="99.5878%" y="1045" width="0.0219%" height="15" fill="rgb(254,201,21)" fg:x="104608" fg:w="23"/><text x="99.8378%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.02%)</title><rect x="99.5878%" y="1029" width="0.0219%" height="15" fill="rgb(250,186,11)" fg:x="104608" fg:w="23"/><text x="99.8378%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.02%)</title><rect x="99.5878%" y="1013" width="0.0219%" height="15" fill="rgb(211,174,5)" fg:x="104608" fg:w="23"/><text x="99.8378%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (23 samples, 0.02%)</title><rect x="99.5878%" y="997" width="0.0219%" height="15" fill="rgb(214,121,10)" fg:x="104608" fg:w="23"/><text x="99.8378%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (23 samples, 0.02%)</title><rect x="99.5878%" y="981" width="0.0219%" height="15" fill="rgb(241,66,2)" fg:x="104608" fg:w="23"/><text x="99.8378%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (23 samples, 0.02%)</title><rect x="99.5878%" y="965" width="0.0219%" height="15" fill="rgb(220,167,19)" fg:x="104608" fg:w="23"/><text x="99.8378%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (23 samples, 0.02%)</title><rect x="99.5878%" y="949" width="0.0219%" height="15" fill="rgb(231,54,50)" fg:x="104608" fg:w="23"/><text x="99.8378%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (20 samples, 0.02%)</title><rect x="99.5906%" y="933" width="0.0190%" height="15" fill="rgb(239,217,53)" fg:x="104611" fg:w="20"/><text x="99.8406%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (20 samples, 0.02%)</title><rect x="99.5906%" y="917" width="0.0190%" height="15" fill="rgb(248,8,0)" fg:x="104611" fg:w="20"/><text x="99.8406%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (20 samples, 0.02%)</title><rect x="99.5906%" y="901" width="0.0190%" height="15" fill="rgb(229,118,37)" fg:x="104611" fg:w="20"/><text x="99.8406%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (20 samples, 0.02%)</title><rect x="99.5906%" y="885" width="0.0190%" height="15" fill="rgb(253,223,43)" fg:x="104611" fg:w="20"/><text x="99.8406%" y="895.50"></text></g><g><title>__futex_abstimed_wait_common (20 samples, 0.02%)</title><rect x="99.5906%" y="869" width="0.0190%" height="15" fill="rgb(211,77,36)" fg:x="104611" fg:w="20"/><text x="99.8406%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="99.5906%" y="853" width="0.0190%" height="15" fill="rgb(219,3,53)" fg:x="104611" fg:w="20"/><text x="99.8406%" y="863.50"></text></g><g><title>do_syscall_64 (20 samples, 0.02%)</title><rect x="99.5906%" y="837" width="0.0190%" height="15" fill="rgb(244,45,42)" fg:x="104611" fg:w="20"/><text x="99.8406%" y="847.50"></text></g><g><title>__x64_sys_futex (20 samples, 0.02%)</title><rect x="99.5906%" y="821" width="0.0190%" height="15" fill="rgb(225,95,27)" fg:x="104611" fg:w="20"/><text x="99.8406%" y="831.50"></text></g><g><title>do_futex (20 samples, 0.02%)</title><rect x="99.5906%" y="805" width="0.0190%" height="15" fill="rgb(207,74,8)" fg:x="104611" fg:w="20"/><text x="99.8406%" y="815.50"></text></g><g><title>futex_wait (20 samples, 0.02%)</title><rect x="99.5906%" y="789" width="0.0190%" height="15" fill="rgb(243,63,36)" fg:x="104611" fg:w="20"/><text x="99.8406%" y="799.50"></text></g><g><title>blocking-1 (30 samples, 0.03%)</title><rect x="99.5821%" y="1189" width="0.0286%" height="15" fill="rgb(211,180,12)" fg:x="104602" fg:w="30"/><text x="99.8321%" y="1199.50"></text></g><g><title>__GI___clone (29 samples, 0.03%)</title><rect x="99.5830%" y="1173" width="0.0276%" height="15" fill="rgb(254,166,49)" fg:x="104603" fg:w="29"/><text x="99.8330%" y="1183.50"></text></g><g><title>start_thread (24 samples, 0.02%)</title><rect x="99.5878%" y="1157" width="0.0228%" height="15" fill="rgb(205,19,0)" fg:x="104608" fg:w="24"/><text x="99.8378%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (24 samples, 0.02%)</title><rect x="99.5878%" y="1141" width="0.0228%" height="15" fill="rgb(224,172,32)" fg:x="104608" fg:w="24"/><text x="99.8378%" y="1151.50"></text></g><g><title>blocking-4 (12 samples, 0.01%)</title><rect x="99.6249%" y="1189" width="0.0114%" height="15" fill="rgb(254,136,30)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1199.50"></text></g><g><title>__GI___clone (12 samples, 0.01%)</title><rect x="99.6249%" y="1173" width="0.0114%" height="15" fill="rgb(246,19,35)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1183.50"></text></g><g><title>start_thread (12 samples, 0.01%)</title><rect x="99.6249%" y="1157" width="0.0114%" height="15" fill="rgb(219,24,36)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 0.01%)</title><rect x="99.6249%" y="1141" width="0.0114%" height="15" fill="rgb(251,55,1)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="99.6249%" y="1125" width="0.0114%" height="15" fill="rgb(218,117,39)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="99.6249%" y="1109" width="0.0114%" height="15" fill="rgb(248,169,11)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 0.01%)</title><rect x="99.6249%" y="1093" width="0.0114%" height="15" fill="rgb(244,40,44)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (12 samples, 0.01%)</title><rect x="99.6249%" y="1077" width="0.0114%" height="15" fill="rgb(234,62,37)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.01%)</title><rect x="99.6249%" y="1061" width="0.0114%" height="15" fill="rgb(207,117,42)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1071.50"></text></g><g><title>std::panicking::try (12 samples, 0.01%)</title><rect x="99.6249%" y="1045" width="0.0114%" height="15" fill="rgb(213,43,2)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.01%)</title><rect x="99.6249%" y="1029" width="0.0114%" height="15" fill="rgb(244,202,51)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="99.6249%" y="1013" width="0.0114%" height="15" fill="rgb(253,174,46)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="99.6249%" y="997" width="0.0114%" height="15" fill="rgb(251,23,1)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.01%)</title><rect x="99.6249%" y="981" width="0.0114%" height="15" fill="rgb(253,26,1)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (12 samples, 0.01%)</title><rect x="99.6249%" y="965" width="0.0114%" height="15" fill="rgb(216,89,31)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (12 samples, 0.01%)</title><rect x="99.6249%" y="949" width="0.0114%" height="15" fill="rgb(209,109,5)" fg:x="104647" fg:w="12"/><text x="99.8749%" y="959.50"></text></g><g><title>__perf_event_task_sched_in (72 samples, 0.07%)</title><rect x="99.6487%" y="693" width="0.0685%" height="15" fill="rgb(229,63,13)" fg:x="104672" fg:w="72"/><text x="99.8987%" y="703.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (71 samples, 0.07%)</title><rect x="99.6497%" y="677" width="0.0676%" height="15" fill="rgb(238,137,54)" fg:x="104673" fg:w="71"/><text x="99.8997%" y="687.50"></text></g><g><title>native_write_msr (71 samples, 0.07%)</title><rect x="99.6497%" y="661" width="0.0676%" height="15" fill="rgb(228,1,9)" fg:x="104673" fg:w="71"/><text x="99.8997%" y="671.50"></text></g><g><title>__x64_sys_futex (79 samples, 0.08%)</title><rect x="99.6439%" y="805" width="0.0752%" height="15" fill="rgb(249,120,48)" fg:x="104667" fg:w="79"/><text x="99.8939%" y="815.50"></text></g><g><title>do_futex (79 samples, 0.08%)</title><rect x="99.6439%" y="789" width="0.0752%" height="15" fill="rgb(209,72,36)" fg:x="104667" fg:w="79"/><text x="99.8939%" y="799.50"></text></g><g><title>futex_wait (79 samples, 0.08%)</title><rect x="99.6439%" y="773" width="0.0752%" height="15" fill="rgb(247,98,49)" fg:x="104667" fg:w="79"/><text x="99.8939%" y="783.50"></text></g><g><title>futex_wait_queue (77 samples, 0.07%)</title><rect x="99.6459%" y="757" width="0.0733%" height="15" fill="rgb(233,75,36)" fg:x="104669" fg:w="77"/><text x="99.8959%" y="767.50"></text></g><g><title>schedule (77 samples, 0.07%)</title><rect x="99.6459%" y="741" width="0.0733%" height="15" fill="rgb(225,14,24)" fg:x="104669" fg:w="77"/><text x="99.8959%" y="751.50"></text></g><g><title>__schedule (77 samples, 0.07%)</title><rect x="99.6459%" y="725" width="0.0733%" height="15" fill="rgb(237,193,20)" fg:x="104669" fg:w="77"/><text x="99.8959%" y="735.50"></text></g><g><title>finish_task_switch.isra.0 (76 samples, 0.07%)</title><rect x="99.6468%" y="709" width="0.0724%" height="15" fill="rgb(239,122,19)" fg:x="104670" fg:w="76"/><text x="99.8968%" y="719.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (82 samples, 0.08%)</title><rect x="99.6439%" y="933" width="0.0781%" height="15" fill="rgb(231,220,10)" fg:x="104667" fg:w="82"/><text x="99.8939%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (82 samples, 0.08%)</title><rect x="99.6439%" y="917" width="0.0781%" height="15" fill="rgb(220,66,15)" fg:x="104667" fg:w="82"/><text x="99.8939%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (82 samples, 0.08%)</title><rect x="99.6439%" y="901" width="0.0781%" height="15" fill="rgb(215,171,52)" fg:x="104667" fg:w="82"/><text x="99.8939%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (82 samples, 0.08%)</title><rect x="99.6439%" y="885" width="0.0781%" height="15" fill="rgb(241,169,50)" fg:x="104667" fg:w="82"/><text x="99.8939%" y="895.50"></text></g><g><title>___pthread_mutex_lock (82 samples, 0.08%)</title><rect x="99.6439%" y="869" width="0.0781%" height="15" fill="rgb(236,189,0)" fg:x="104667" fg:w="82"/><text x="99.8939%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (82 samples, 0.08%)</title><rect x="99.6439%" y="853" width="0.0781%" height="15" fill="rgb(217,147,20)" fg:x="104667" fg:w="82"/><text x="99.8939%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (82 samples, 0.08%)</title><rect x="99.6439%" y="837" width="0.0781%" height="15" fill="rgb(206,188,39)" fg:x="104667" fg:w="82"/><text x="99.8939%" y="847.50"></text></g><g><title>do_syscall_64 (82 samples, 0.08%)</title><rect x="99.6439%" y="821" width="0.0781%" height="15" fill="rgb(227,118,25)" fg:x="104667" fg:w="82"/><text x="99.8939%" y="831.50"></text></g><g><title>finish_task_switch.isra.0 (19 samples, 0.02%)</title><rect x="99.7220%" y="357" width="0.0181%" height="15" fill="rgb(248,171,40)" fg:x="104749" fg:w="19"/><text x="99.9720%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (17 samples, 0.02%)</title><rect x="99.7239%" y="341" width="0.0162%" height="15" fill="rgb(251,90,54)" fg:x="104751" fg:w="17"/><text x="99.9739%" y="351.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (16 samples, 0.02%)</title><rect x="99.7249%" y="325" width="0.0152%" height="15" fill="rgb(234,11,46)" fg:x="104752" fg:w="16"/><text x="99.9749%" y="335.50"></text></g><g><title>native_write_msr (15 samples, 0.01%)</title><rect x="99.7258%" y="309" width="0.0143%" height="15" fill="rgb(229,134,13)" fg:x="104753" fg:w="15"/><text x="99.9758%" y="319.50"></text></g><g><title>__x64_sys_futex (20 samples, 0.02%)</title><rect x="99.7220%" y="453" width="0.0190%" height="15" fill="rgb(223,129,3)" fg:x="104749" fg:w="20"/><text x="99.9720%" y="463.50"></text></g><g><title>do_futex (20 samples, 0.02%)</title><rect x="99.7220%" y="437" width="0.0190%" height="15" fill="rgb(221,124,13)" fg:x="104749" fg:w="20"/><text x="99.9720%" y="447.50"></text></g><g><title>futex_wait (20 samples, 0.02%)</title><rect x="99.7220%" y="421" width="0.0190%" height="15" fill="rgb(234,3,18)" fg:x="104749" fg:w="20"/><text x="99.9720%" y="431.50"></text></g><g><title>futex_wait_queue (20 samples, 0.02%)</title><rect x="99.7220%" y="405" width="0.0190%" height="15" fill="rgb(249,199,20)" fg:x="104749" fg:w="20"/><text x="99.9720%" y="415.50"></text></g><g><title>schedule (20 samples, 0.02%)</title><rect x="99.7220%" y="389" width="0.0190%" height="15" fill="rgb(224,134,6)" fg:x="104749" fg:w="20"/><text x="99.9720%" y="399.50"></text></g><g><title>__schedule (20 samples, 0.02%)</title><rect x="99.7220%" y="373" width="0.0190%" height="15" fill="rgb(254,83,26)" fg:x="104749" fg:w="20"/><text x="99.9720%" y="383.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (22 samples, 0.02%)</title><rect x="99.7220%" y="581" width="0.0209%" height="15" fill="rgb(217,88,9)" fg:x="104749" fg:w="22"/><text x="99.9720%" y="591.50"></text></g><g><title>std::sync::condvar::Condvar::wait (22 samples, 0.02%)</title><rect x="99.7220%" y="565" width="0.0209%" height="15" fill="rgb(225,73,2)" fg:x="104749" fg:w="22"/><text x="99.9720%" y="575.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (22 samples, 0.02%)</title><rect x="99.7220%" y="549" width="0.0209%" height="15" fill="rgb(226,44,39)" fg:x="104749" fg:w="22"/><text x="99.9720%" y="559.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (22 samples, 0.02%)</title><rect x="99.7220%" y="533" width="0.0209%" height="15" fill="rgb(228,53,17)" fg:x="104749" fg:w="22"/><text x="99.9720%" y="543.50"></text></g><g><title>__GI___pthread_cond_wait (22 samples, 0.02%)</title><rect x="99.7220%" y="517" width="0.0209%" height="15" fill="rgb(212,27,27)" fg:x="104749" fg:w="22"/><text x="99.9720%" y="527.50"></text></g><g><title>__futex_abstimed_wait_common (22 samples, 0.02%)</title><rect x="99.7220%" y="501" width="0.0209%" height="15" fill="rgb(241,50,6)" fg:x="104749" fg:w="22"/><text x="99.9720%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (22 samples, 0.02%)</title><rect x="99.7220%" y="485" width="0.0209%" height="15" fill="rgb(225,28,51)" fg:x="104749" fg:w="22"/><text x="99.9720%" y="495.50"></text></g><g><title>do_syscall_64 (22 samples, 0.02%)</title><rect x="99.7220%" y="469" width="0.0209%" height="15" fill="rgb(215,33,16)" fg:x="104749" fg:w="22"/><text x="99.9720%" y="479.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (27 samples, 0.03%)</title><rect x="99.7220%" y="933" width="0.0257%" height="15" fill="rgb(243,40,39)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="943.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (27 samples, 0.03%)</title><rect x="99.7220%" y="917" width="0.0257%" height="15" fill="rgb(225,11,42)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="927.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (27 samples, 0.03%)</title><rect x="99.7220%" y="901" width="0.0257%" height="15" fill="rgb(241,220,38)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="911.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.03%)</title><rect x="99.7220%" y="885" width="0.0257%" height="15" fill="rgb(244,52,35)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="895.50"></text></g><g><title>std::panicking::try (27 samples, 0.03%)</title><rect x="99.7220%" y="869" width="0.0257%" height="15" fill="rgb(246,42,46)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="879.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.03%)</title><rect x="99.7220%" y="853" width="0.0257%" height="15" fill="rgb(205,184,13)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="99.7220%" y="837" width="0.0257%" height="15" fill="rgb(209,48,36)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.03%)</title><rect x="99.7220%" y="821" width="0.0257%" height="15" fill="rgb(244,34,51)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll::{{closure}} (27 samples, 0.03%)</title><rect x="99.7220%" y="805" width="0.0257%" height="15" fill="rgb(221,107,33)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="815.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (27 samples, 0.03%)</title><rect x="99.7220%" y="789" width="0.0257%" height="15" fill="rgb(224,203,12)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="799.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (27 samples, 0.03%)</title><rect x="99.7220%" y="773" width="0.0257%" height="15" fill="rgb(230,215,18)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="783.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (27 samples, 0.03%)</title><rect x="99.7220%" y="757" width="0.0257%" height="15" fill="rgb(206,185,35)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="767.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="99.7220%" y="741" width="0.0257%" height="15" fill="rgb(228,140,34)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (27 samples, 0.03%)</title><rect x="99.7220%" y="725" width="0.0257%" height="15" fill="rgb(208,93,13)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (27 samples, 0.03%)</title><rect x="99.7220%" y="709" width="0.0257%" height="15" fill="rgb(221,193,39)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="719.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (27 samples, 0.03%)</title><rect x="99.7220%" y="693" width="0.0257%" height="15" fill="rgb(241,132,34)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (27 samples, 0.03%)</title><rect x="99.7220%" y="677" width="0.0257%" height="15" fill="rgb(221,141,10)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (27 samples, 0.03%)</title><rect x="99.7220%" y="661" width="0.0257%" height="15" fill="rgb(226,90,31)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (27 samples, 0.03%)</title><rect x="99.7220%" y="645" width="0.0257%" height="15" fill="rgb(243,75,5)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (27 samples, 0.03%)</title><rect x="99.7220%" y="629" width="0.0257%" height="15" fill="rgb(227,156,21)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="639.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (27 samples, 0.03%)</title><rect x="99.7220%" y="613" width="0.0257%" height="15" fill="rgb(250,195,8)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="623.50"></text></g><g><title>tokio::runtime::park::Inner::park (27 samples, 0.03%)</title><rect x="99.7220%" y="597" width="0.0257%" height="15" fill="rgb(220,134,5)" fg:x="104749" fg:w="27"/><text x="99.9720%" y="607.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (12 samples, 0.01%)</title><rect x="99.7477%" y="565" width="0.0114%" height="15" fill="rgb(246,106,34)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="575.50"></text></g><g><title>std::sync::condvar::Condvar::wait (12 samples, 0.01%)</title><rect x="99.7477%" y="549" width="0.0114%" height="15" fill="rgb(205,1,4)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="559.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (12 samples, 0.01%)</title><rect x="99.7477%" y="533" width="0.0114%" height="15" fill="rgb(224,151,29)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="543.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (12 samples, 0.01%)</title><rect x="99.7477%" y="517" width="0.0114%" height="15" fill="rgb(251,196,0)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="527.50"></text></g><g><title>__GI___pthread_cond_wait (12 samples, 0.01%)</title><rect x="99.7477%" y="501" width="0.0114%" height="15" fill="rgb(212,127,0)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="511.50"></text></g><g><title>__futex_abstimed_wait_common (12 samples, 0.01%)</title><rect x="99.7477%" y="485" width="0.0114%" height="15" fill="rgb(236,71,53)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="99.7477%" y="469" width="0.0114%" height="15" fill="rgb(227,99,0)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="479.50"></text></g><g><title>do_syscall_64 (12 samples, 0.01%)</title><rect x="99.7477%" y="453" width="0.0114%" height="15" fill="rgb(239,89,21)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="463.50"></text></g><g><title>__x64_sys_futex (12 samples, 0.01%)</title><rect x="99.7477%" y="437" width="0.0114%" height="15" fill="rgb(243,122,19)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="447.50"></text></g><g><title>do_futex (12 samples, 0.01%)</title><rect x="99.7477%" y="421" width="0.0114%" height="15" fill="rgb(229,192,45)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="431.50"></text></g><g><title>futex_wait (12 samples, 0.01%)</title><rect x="99.7477%" y="405" width="0.0114%" height="15" fill="rgb(235,165,35)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="415.50"></text></g><g><title>futex_wait_queue (12 samples, 0.01%)</title><rect x="99.7477%" y="389" width="0.0114%" height="15" fill="rgb(253,202,0)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="399.50"></text></g><g><title>schedule (12 samples, 0.01%)</title><rect x="99.7477%" y="373" width="0.0114%" height="15" fill="rgb(235,51,20)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="383.50"></text></g><g><title>__schedule (12 samples, 0.01%)</title><rect x="99.7477%" y="357" width="0.0114%" height="15" fill="rgb(218,95,46)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="367.50"></text></g><g><title>finish_task_switch.isra.0 (12 samples, 0.01%)</title><rect x="99.7477%" y="341" width="0.0114%" height="15" fill="rgb(212,81,10)" fg:x="104776" fg:w="12"/><text x="99.9977%" y="351.50"></text></g><g><title>__perf_event_task_sched_in (11 samples, 0.01%)</title><rect x="99.7487%" y="325" width="0.0105%" height="15" fill="rgb(240,59,0)" fg:x="104777" fg:w="11"/><text x="99.9987%" y="335.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (11 samples, 0.01%)</title><rect x="99.7487%" y="309" width="0.0105%" height="15" fill="rgb(212,191,42)" fg:x="104777" fg:w="11"/><text x="99.9987%" y="319.50"></text></g><g><title>native_write_msr (11 samples, 0.01%)</title><rect x="99.7487%" y="293" width="0.0105%" height="15" fill="rgb(233,140,3)" fg:x="104777" fg:w="11"/><text x="99.9987%" y="303.50"></text></g><g><title>std::panic::catch_unwind (126 samples, 0.12%)</title><rect x="99.6411%" y="1061" width="0.1200%" height="15" fill="rgb(215,69,23)" fg:x="104664" fg:w="126"/><text x="99.8911%" y="1071.50"></text></g><g><title>std::panicking::try (126 samples, 0.12%)</title><rect x="99.6411%" y="1045" width="0.1200%" height="15" fill="rgb(240,202,20)" fg:x="104664" fg:w="126"/><text x="99.8911%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (126 samples, 0.12%)</title><rect x="99.6411%" y="1029" width="0.1200%" height="15" fill="rgb(209,146,50)" fg:x="104664" fg:w="126"/><text x="99.8911%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (126 samples, 0.12%)</title><rect x="99.6411%" y="1013" width="0.1200%" height="15" fill="rgb(253,102,54)" fg:x="104664" fg:w="126"/><text x="99.8911%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (126 samples, 0.12%)</title><rect x="99.6411%" y="997" width="0.1200%" height="15" fill="rgb(250,173,47)" fg:x="104664" fg:w="126"/><text x="99.8911%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (126 samples, 0.12%)</title><rect x="99.6411%" y="981" width="0.1200%" height="15" fill="rgb(232,142,7)" fg:x="104664" fg:w="126"/><text x="99.8911%" y="991.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (126 samples, 0.12%)</title><rect x="99.6411%" y="965" width="0.1200%" height="15" fill="rgb(230,157,47)" fg:x="104664" fg:w="126"/><text x="99.8911%" y="975.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (126 samples, 0.12%)</title><rect x="99.6411%" y="949" width="0.1200%" height="15" fill="rgb(214,177,35)" fg:x="104664" fg:w="126"/><text x="99.8911%" y="959.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (14 samples, 0.01%)</title><rect x="99.7477%" y="933" width="0.0133%" height="15" fill="rgb(234,119,46)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="943.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (14 samples, 0.01%)</title><rect x="99.7477%" y="917" width="0.0133%" height="15" fill="rgb(241,180,50)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="927.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (14 samples, 0.01%)</title><rect x="99.7477%" y="901" width="0.0133%" height="15" fill="rgb(221,54,25)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (14 samples, 0.01%)</title><rect x="99.7477%" y="885" width="0.0133%" height="15" fill="rgb(209,157,44)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (14 samples, 0.01%)</title><rect x="99.7477%" y="869" width="0.0133%" height="15" fill="rgb(246,115,41)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="879.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.01%)</title><rect x="99.7477%" y="853" width="0.0133%" height="15" fill="rgb(229,86,1)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="863.50"></text></g><g><title>std::panicking::try (14 samples, 0.01%)</title><rect x="99.7477%" y="837" width="0.0133%" height="15" fill="rgb(240,108,53)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="847.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.01%)</title><rect x="99.7477%" y="821" width="0.0133%" height="15" fill="rgb(227,134,2)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.01%)</title><rect x="99.7477%" y="805" width="0.0133%" height="15" fill="rgb(213,129,25)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (14 samples, 0.01%)</title><rect x="99.7477%" y="789" width="0.0133%" height="15" fill="rgb(226,35,21)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="799.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (14 samples, 0.01%)</title><rect x="99.7477%" y="773" width="0.0133%" height="15" fill="rgb(208,129,26)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="783.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (14 samples, 0.01%)</title><rect x="99.7477%" y="757" width="0.0133%" height="15" fill="rgb(224,83,6)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="767.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (14 samples, 0.01%)</title><rect x="99.7477%" y="741" width="0.0133%" height="15" fill="rgb(227,52,39)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="751.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="99.7477%" y="725" width="0.0133%" height="15" fill="rgb(241,30,17)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (14 samples, 0.01%)</title><rect x="99.7477%" y="709" width="0.0133%" height="15" fill="rgb(246,186,42)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (14 samples, 0.01%)</title><rect x="99.7477%" y="693" width="0.0133%" height="15" fill="rgb(221,169,15)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="703.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (14 samples, 0.01%)</title><rect x="99.7477%" y="677" width="0.0133%" height="15" fill="rgb(235,108,21)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (14 samples, 0.01%)</title><rect x="99.7477%" y="661" width="0.0133%" height="15" fill="rgb(219,148,30)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (14 samples, 0.01%)</title><rect x="99.7477%" y="645" width="0.0133%" height="15" fill="rgb(220,109,5)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (14 samples, 0.01%)</title><rect x="99.7477%" y="629" width="0.0133%" height="15" fill="rgb(213,203,48)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (14 samples, 0.01%)</title><rect x="99.7477%" y="613" width="0.0133%" height="15" fill="rgb(244,71,33)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="623.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (14 samples, 0.01%)</title><rect x="99.7477%" y="597" width="0.0133%" height="15" fill="rgb(209,23,2)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="607.50"></text></g><g><title>tokio::runtime::park::Inner::park (14 samples, 0.01%)</title><rect x="99.7477%" y="581" width="0.0133%" height="15" fill="rgb(219,97,7)" fg:x="104776" fg:w="14"/><text x="99.9977%" y="591.50"></text></g><g><title>std::sys::unix::thread::guard::current (14 samples, 0.01%)</title><rect x="99.7610%" y="1061" width="0.0133%" height="15" fill="rgb(216,161,23)" fg:x="104790" fg:w="14"/><text x="100.0110%" y="1071.50"></text></g><g><title>__pthread_getattr_np (14 samples, 0.01%)</title><rect x="99.7610%" y="1045" width="0.0133%" height="15" fill="rgb(207,45,42)" fg:x="104790" fg:w="14"/><text x="100.0110%" y="1055.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.01%)</title><rect x="99.7610%" y="1029" width="0.0133%" height="15" fill="rgb(241,61,4)" fg:x="104790" fg:w="14"/><text x="100.0110%" y="1039.50"></text></g><g><title>tcache_init.part.0 (14 samples, 0.01%)</title><rect x="99.7610%" y="1013" width="0.0133%" height="15" fill="rgb(236,170,1)" fg:x="104790" fg:w="14"/><text x="100.0110%" y="1023.50"></text></g><g><title>arena_get2.part.0 (14 samples, 0.01%)</title><rect x="99.7610%" y="997" width="0.0133%" height="15" fill="rgb(239,72,5)" fg:x="104790" fg:w="14"/><text x="100.0110%" y="1007.50"></text></g><g><title>alloc_new_heap (14 samples, 0.01%)</title><rect x="99.7610%" y="981" width="0.0133%" height="15" fill="rgb(214,13,50)" fg:x="104790" fg:w="14"/><text x="100.0110%" y="991.50"></text></g><g><title>__GI___clone (141 samples, 0.13%)</title><rect x="99.6411%" y="1173" width="0.1342%" height="15" fill="rgb(224,88,9)" fg:x="104664" fg:w="141"/><text x="99.8911%" y="1183.50"></text></g><g><title>start_thread (141 samples, 0.13%)</title><rect x="99.6411%" y="1157" width="0.1342%" height="15" fill="rgb(238,192,34)" fg:x="104664" fg:w="141"/><text x="99.8911%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (141 samples, 0.13%)</title><rect x="99.6411%" y="1141" width="0.1342%" height="15" fill="rgb(217,203,50)" fg:x="104664" fg:w="141"/><text x="99.8911%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (141 samples, 0.13%)</title><rect x="99.6411%" y="1125" width="0.1342%" height="15" fill="rgb(241,123,32)" fg:x="104664" fg:w="141"/><text x="99.8911%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (141 samples, 0.13%)</title><rect x="99.6411%" y="1109" width="0.1342%" height="15" fill="rgb(248,151,39)" fg:x="104664" fg:w="141"/><text x="99.8911%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (141 samples, 0.13%)</title><rect x="99.6411%" y="1093" width="0.1342%" height="15" fill="rgb(208,89,6)" fg:x="104664" fg:w="141"/><text x="99.8911%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (141 samples, 0.13%)</title><rect x="99.6411%" y="1077" width="0.1342%" height="15" fill="rgb(254,43,26)" fg:x="104664" fg:w="141"/><text x="99.8911%" y="1087.50"></text></g><g><title>tokio-runtime-w (145 samples, 0.14%)</title><rect x="99.6411%" y="1189" width="0.1380%" height="15" fill="rgb(216,158,13)" fg:x="104664" fg:w="145"/><text x="99.8911%" y="1199.50"></text></g><g><title>async_io::driver::block_on (11 samples, 0.01%)</title><rect x="99.7829%" y="1157" width="0.0105%" height="15" fill="rgb(212,47,37)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="1167.50"></text></g><g><title>parking::Parker::park (11 samples, 0.01%)</title><rect x="99.7829%" y="1141" width="0.0105%" height="15" fill="rgb(254,16,10)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="1151.50"></text></g><g><title>parking::Inner::park (11 samples, 0.01%)</title><rect x="99.7829%" y="1125" width="0.0105%" height="15" fill="rgb(223,228,16)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="1135.50"></text></g><g><title>std::sync::condvar::Condvar::wait (11 samples, 0.01%)</title><rect x="99.7829%" y="1109" width="0.0105%" height="15" fill="rgb(249,108,50)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="1119.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (11 samples, 0.01%)</title><rect x="99.7829%" y="1093" width="0.0105%" height="15" fill="rgb(208,220,5)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="1103.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (11 samples, 0.01%)</title><rect x="99.7829%" y="1077" width="0.0105%" height="15" fill="rgb(217,89,48)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="1087.50"></text></g><g><title>__GI___pthread_cond_wait (11 samples, 0.01%)</title><rect x="99.7829%" y="1061" width="0.0105%" height="15" fill="rgb(212,113,41)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="1071.50"></text></g><g><title>__futex_abstimed_wait_common (11 samples, 0.01%)</title><rect x="99.7829%" y="1045" width="0.0105%" height="15" fill="rgb(231,127,5)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.01%)</title><rect x="99.7829%" y="1029" width="0.0105%" height="15" fill="rgb(217,141,17)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="1039.50"></text></g><g><title>do_syscall_64 (11 samples, 0.01%)</title><rect x="99.7829%" y="1013" width="0.0105%" height="15" fill="rgb(245,125,54)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="1023.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.01%)</title><rect x="99.7829%" y="997" width="0.0105%" height="15" fill="rgb(248,125,3)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="1007.50"></text></g><g><title>do_futex (11 samples, 0.01%)</title><rect x="99.7829%" y="981" width="0.0105%" height="15" fill="rgb(236,119,51)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="991.50"></text></g><g><title>futex_wait (11 samples, 0.01%)</title><rect x="99.7829%" y="965" width="0.0105%" height="15" fill="rgb(239,99,8)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="975.50"></text></g><g><title>futex_wait_queue (11 samples, 0.01%)</title><rect x="99.7829%" y="949" width="0.0105%" height="15" fill="rgb(224,228,4)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="959.50"></text></g><g><title>schedule (11 samples, 0.01%)</title><rect x="99.7829%" y="933" width="0.0105%" height="15" fill="rgb(220,131,45)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="943.50"></text></g><g><title>__schedule (11 samples, 0.01%)</title><rect x="99.7829%" y="917" width="0.0105%" height="15" fill="rgb(215,62,5)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="927.50"></text></g><g><title>finish_task_switch.isra.0 (11 samples, 0.01%)</title><rect x="99.7829%" y="901" width="0.0105%" height="15" fill="rgb(253,12,24)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="911.50"></text></g><g><title>__perf_event_task_sched_in (11 samples, 0.01%)</title><rect x="99.7829%" y="885" width="0.0105%" height="15" fill="rgb(248,120,50)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="895.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (11 samples, 0.01%)</title><rect x="99.7829%" y="869" width="0.0105%" height="15" fill="rgb(245,194,10)" fg:x="104813" fg:w="11"/><text x="100.0329%" y="879.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="99.7801%" y="1173" width="0.0248%" height="15" fill="rgb(241,149,38)" fg:x="104810" fg:w="26"/><text x="100.0301%" y="1183.50"></text></g><g><title>__perf_event_task_sched_in (156 samples, 0.15%)</title><rect x="99.8182%" y="1109" width="0.1485%" height="15" fill="rgb(219,215,7)" fg:x="104850" fg:w="156"/><text x="100.0682%" y="1119.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (154 samples, 0.15%)</title><rect x="99.8201%" y="1093" width="0.1466%" height="15" fill="rgb(208,120,31)" fg:x="104852" fg:w="154"/><text x="100.0701%" y="1103.50"></text></g><g><title>native_write_msr (154 samples, 0.15%)</title><rect x="99.8201%" y="1077" width="0.1466%" height="15" fill="rgb(244,30,8)" fg:x="104852" fg:w="154"/><text x="100.0701%" y="1087.50"></text></g><g><title>schedule_tail (172 samples, 0.16%)</title><rect x="99.8077%" y="1141" width="0.1637%" height="15" fill="rgb(238,35,44)" fg:x="104839" fg:w="172"/><text x="100.0577%" y="1151.50"></text></g><g><title>finish_task_switch.isra.0 (168 samples, 0.16%)</title><rect x="99.8115%" y="1125" width="0.1599%" height="15" fill="rgb(243,218,37)" fg:x="104843" fg:w="168"/><text x="100.0615%" y="1135.50"></text></g><g><title>ret_from_fork (179 samples, 0.17%)</title><rect x="99.8048%" y="1157" width="0.1704%" height="15" fill="rgb(218,169,10)" fg:x="104836" fg:w="179"/><text x="100.0548%" y="1167.50"></text></g><g><title>__GI___clone (200 samples, 0.19%)</title><rect x="99.8048%" y="1173" width="0.1904%" height="15" fill="rgb(221,144,10)" fg:x="104836" fg:w="200"/><text x="100.0548%" y="1183.50"></text></g><g><title>start_thread (21 samples, 0.02%)</title><rect x="99.9752%" y="1157" width="0.0200%" height="15" fill="rgb(226,41,38)" fg:x="105015" fg:w="21"/><text x="100.2252%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (21 samples, 0.02%)</title><rect x="99.9752%" y="1141" width="0.0200%" height="15" fill="rgb(228,3,1)" fg:x="105015" fg:w="21"/><text x="100.2252%" y="1151.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (20 samples, 0.02%)</title><rect x="99.9762%" y="1125" width="0.0190%" height="15" fill="rgb(209,129,12)" fg:x="105016" fg:w="20"/><text x="100.2262%" y="1135.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (20 samples, 0.02%)</title><rect x="99.9762%" y="1109" width="0.0190%" height="15" fill="rgb(213,136,33)" fg:x="105016" fg:w="20"/><text x="100.2262%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (20 samples, 0.02%)</title><rect x="99.9762%" y="1093" width="0.0190%" height="15" fill="rgb(209,181,29)" fg:x="105016" fg:w="20"/><text x="100.2262%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (20 samples, 0.02%)</title><rect x="99.9762%" y="1077" width="0.0190%" height="15" fill="rgb(234,173,18)" fg:x="105016" fg:w="20"/><text x="100.2262%" y="1087.50"></text></g><g><title>__GI___mprotect (12 samples, 0.01%)</title><rect x="99.9838%" y="1061" width="0.0114%" height="15" fill="rgb(227,73,47)" fg:x="105024" fg:w="12"/><text x="100.2338%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="99.9838%" y="1045" width="0.0114%" height="15" fill="rgb(234,9,34)" fg:x="105024" fg:w="12"/><text x="100.2338%" y="1055.50"></text></g><g><title>do_syscall_64 (12 samples, 0.01%)</title><rect x="99.9838%" y="1029" width="0.0114%" height="15" fill="rgb(235,172,15)" fg:x="105024" fg:w="12"/><text x="100.2338%" y="1039.50"></text></g><g><title>__x64_sys_mprotect (12 samples, 0.01%)</title><rect x="99.9838%" y="1013" width="0.0114%" height="15" fill="rgb(245,61,2)" fg:x="105024" fg:w="12"/><text x="100.2338%" y="1023.50"></text></g><g><title>do_mprotect_pkey (12 samples, 0.01%)</title><rect x="99.9838%" y="997" width="0.0114%" height="15" fill="rgb(238,39,47)" fg:x="105024" fg:w="12"/><text x="100.2338%" y="1007.50"></text></g><g><title>all (105,041 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(234,37,24)" fg:x="0" fg:w="105041"/><text x="0.2500%" y="1215.50"></text></g><g><title>tremor-connecto (232 samples, 0.22%)</title><rect x="99.7791%" y="1189" width="0.2209%" height="15" fill="rgb(248,223,24)" fg:x="104809" fg:w="232"/><text x="100.0291%" y="1199.50"></text></g></svg></svg>