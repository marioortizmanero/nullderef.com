<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="105250"><g><title>finish_task_switch.isra.0 (11 samples, 0.01%)</title><rect x="0.0048%" y="709" width="0.0105%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="11"/><text x="0.2548%" y="719.50"></text></g><g><title>__perf_event_task_sched_in (11 samples, 0.01%)</title><rect x="0.0048%" y="693" width="0.0105%" height="15" fill="rgb(217,0,24)" fg:x="5" fg:w="11"/><text x="0.2548%" y="703.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (11 samples, 0.01%)</title><rect x="0.0048%" y="677" width="0.0105%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="11"/><text x="0.2548%" y="687.50"></text></g><g><title>native_write_msr (11 samples, 0.01%)</title><rect x="0.0048%" y="661" width="0.0105%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="11"/><text x="0.2548%" y="671.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.01%)</title><rect x="0.0029%" y="805" width="0.0133%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="14"/><text x="0.2529%" y="815.50"></text></g><g><title>do_futex (14 samples, 0.01%)</title><rect x="0.0029%" y="789" width="0.0133%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="14"/><text x="0.2529%" y="799.50"></text></g><g><title>futex_wait (14 samples, 0.01%)</title><rect x="0.0029%" y="773" width="0.0133%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="14"/><text x="0.2529%" y="783.50"></text></g><g><title>futex_wait_queue (14 samples, 0.01%)</title><rect x="0.0029%" y="757" width="0.0133%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="14"/><text x="0.2529%" y="767.50"></text></g><g><title>schedule (14 samples, 0.01%)</title><rect x="0.0029%" y="741" width="0.0133%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="14"/><text x="0.2529%" y="751.50"></text></g><g><title>__schedule (14 samples, 0.01%)</title><rect x="0.0029%" y="725" width="0.0133%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="14"/><text x="0.2529%" y="735.50"></text></g><g><title>async_io::reactor::Reactor::lock (15 samples, 0.01%)</title><rect x="0.0029%" y="933" width="0.0143%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="15"/><text x="0.2529%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="0.0029%" y="917" width="0.0143%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="15"/><text x="0.2529%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="0.0029%" y="901" width="0.0143%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="15"/><text x="0.2529%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="0.0029%" y="885" width="0.0143%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="15"/><text x="0.2529%" y="895.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="0.0029%" y="869" width="0.0143%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="15"/><text x="0.2529%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (15 samples, 0.01%)</title><rect x="0.0029%" y="853" width="0.0143%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="15"/><text x="0.2529%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="0.0029%" y="837" width="0.0143%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="15"/><text x="0.2529%" y="847.50"></text></g><g><title>do_syscall_64 (15 samples, 0.01%)</title><rect x="0.0029%" y="821" width="0.0143%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="15"/><text x="0.2529%" y="831.50"></text></g><g><title>finish_task_switch.isra.0 (11 samples, 0.01%)</title><rect x="0.0380%" y="693" width="0.0105%" height="15" fill="rgb(221,200,47)" fg:x="40" fg:w="11"/><text x="0.2880%" y="703.50"></text></g><g><title>__x64_sys_futex (26 samples, 0.02%)</title><rect x="0.0276%" y="789" width="0.0247%" height="15" fill="rgb(226,26,5)" fg:x="29" fg:w="26"/><text x="0.2776%" y="799.50"></text></g><g><title>do_futex (24 samples, 0.02%)</title><rect x="0.0295%" y="773" width="0.0228%" height="15" fill="rgb(249,33,26)" fg:x="31" fg:w="24"/><text x="0.2795%" y="783.50"></text></g><g><title>futex_wait (24 samples, 0.02%)</title><rect x="0.0295%" y="757" width="0.0228%" height="15" fill="rgb(235,183,28)" fg:x="31" fg:w="24"/><text x="0.2795%" y="767.50"></text></g><g><title>futex_wait_queue (24 samples, 0.02%)</title><rect x="0.0295%" y="741" width="0.0228%" height="15" fill="rgb(221,5,38)" fg:x="31" fg:w="24"/><text x="0.2795%" y="751.50"></text></g><g><title>schedule (21 samples, 0.02%)</title><rect x="0.0323%" y="725" width="0.0200%" height="15" fill="rgb(247,18,42)" fg:x="34" fg:w="21"/><text x="0.2823%" y="735.50"></text></g><g><title>__schedule (21 samples, 0.02%)</title><rect x="0.0323%" y="709" width="0.0200%" height="15" fill="rgb(241,131,45)" fg:x="34" fg:w="21"/><text x="0.2823%" y="719.50"></text></g><g><title>___pthread_cond_timedwait (35 samples, 0.03%)</title><rect x="0.0238%" y="853" width="0.0333%" height="15" fill="rgb(249,31,29)" fg:x="25" fg:w="35"/><text x="0.2738%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common (35 samples, 0.03%)</title><rect x="0.0238%" y="837" width="0.0333%" height="15" fill="rgb(225,111,53)" fg:x="25" fg:w="35"/><text x="0.2738%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (31 samples, 0.03%)</title><rect x="0.0276%" y="821" width="0.0295%" height="15" fill="rgb(238,160,17)" fg:x="29" fg:w="31"/><text x="0.2776%" y="831.50"></text></g><g><title>do_syscall_64 (31 samples, 0.03%)</title><rect x="0.0276%" y="805" width="0.0295%" height="15" fill="rgb(214,148,48)" fg:x="29" fg:w="31"/><text x="0.2776%" y="815.50"></text></g><g><title>__GI___clone (58 samples, 0.06%)</title><rect x="0.0029%" y="1173" width="0.0551%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="58"/><text x="0.2529%" y="1183.50"></text></g><g><title>start_thread (58 samples, 0.06%)</title><rect x="0.0029%" y="1157" width="0.0551%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="58"/><text x="0.2529%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (58 samples, 0.06%)</title><rect x="0.0029%" y="1141" width="0.0551%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="58"/><text x="0.2529%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (58 samples, 0.06%)</title><rect x="0.0029%" y="1125" width="0.0551%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="58"/><text x="0.2529%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (58 samples, 0.06%)</title><rect x="0.0029%" y="1109" width="0.0551%" height="15" fill="rgb(254,191,54)" fg:x="3" fg:w="58"/><text x="0.2529%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (58 samples, 0.06%)</title><rect x="0.0029%" y="1093" width="0.0551%" height="15" fill="rgb(241,83,37)" fg:x="3" fg:w="58"/><text x="0.2529%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (58 samples, 0.06%)</title><rect x="0.0029%" y="1077" width="0.0551%" height="15" fill="rgb(233,36,39)" fg:x="3" fg:w="58"/><text x="0.2529%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (58 samples, 0.06%)</title><rect x="0.0029%" y="1061" width="0.0551%" height="15" fill="rgb(226,3,54)" fg:x="3" fg:w="58"/><text x="0.2529%" y="1071.50"></text></g><g><title>std::panicking::try (58 samples, 0.06%)</title><rect x="0.0029%" y="1045" width="0.0551%" height="15" fill="rgb(245,192,40)" fg:x="3" fg:w="58"/><text x="0.2529%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (58 samples, 0.06%)</title><rect x="0.0029%" y="1029" width="0.0551%" height="15" fill="rgb(238,167,29)" fg:x="3" fg:w="58"/><text x="0.2529%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (58 samples, 0.06%)</title><rect x="0.0029%" y="1013" width="0.0551%" height="15" fill="rgb(232,182,51)" fg:x="3" fg:w="58"/><text x="0.2529%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (58 samples, 0.06%)</title><rect x="0.0029%" y="997" width="0.0551%" height="15" fill="rgb(231,60,39)" fg:x="3" fg:w="58"/><text x="0.2529%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (58 samples, 0.06%)</title><rect x="0.0029%" y="981" width="0.0551%" height="15" fill="rgb(208,69,12)" fg:x="3" fg:w="58"/><text x="0.2529%" y="991.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (58 samples, 0.06%)</title><rect x="0.0029%" y="965" width="0.0551%" height="15" fill="rgb(235,93,37)" fg:x="3" fg:w="58"/><text x="0.2529%" y="975.50"></text></g><g><title>async_io::driver::main_loop (58 samples, 0.06%)</title><rect x="0.0029%" y="949" width="0.0551%" height="15" fill="rgb(213,116,39)" fg:x="3" fg:w="58"/><text x="0.2529%" y="959.50"></text></g><g><title>parking::Parker::park_timeout (38 samples, 0.04%)</title><rect x="0.0219%" y="933" width="0.0361%" height="15" fill="rgb(222,207,29)" fg:x="23" fg:w="38"/><text x="0.2719%" y="943.50"></text></g><g><title>parking::Inner::park (38 samples, 0.04%)</title><rect x="0.0219%" y="917" width="0.0361%" height="15" fill="rgb(206,96,30)" fg:x="23" fg:w="38"/><text x="0.2719%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (37 samples, 0.04%)</title><rect x="0.0228%" y="901" width="0.0352%" height="15" fill="rgb(218,138,4)" fg:x="24" fg:w="37"/><text x="0.2728%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (37 samples, 0.04%)</title><rect x="0.0228%" y="885" width="0.0352%" height="15" fill="rgb(250,191,14)" fg:x="24" fg:w="37"/><text x="0.2728%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (37 samples, 0.04%)</title><rect x="0.0228%" y="869" width="0.0352%" height="15" fill="rgb(239,60,40)" fg:x="24" fg:w="37"/><text x="0.2728%" y="879.50"></text></g><g><title>async-io (63 samples, 0.06%)</title><rect x="0.0010%" y="1189" width="0.0599%" height="15" fill="rgb(206,27,48)" fg:x="1" fg:w="63"/><text x="0.2510%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.04%)</title><rect x="0.4941%" y="1173" width="0.0409%" height="15" fill="rgb(225,35,8)" fg:x="520" fg:w="43"/><text x="0.7441%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="0.5378%" y="1173" width="0.0114%" height="15" fill="rgb(250,213,24)" fg:x="566" fg:w="12"/><text x="0.7878%" y="1183.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.01%)</title><rect x="0.5492%" y="1173" width="0.0114%" height="15" fill="rgb(247,123,22)" fg:x="578" fg:w="12"/><text x="0.7992%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="0.5625%" y="1157" width="0.0114%" height="15" fill="rgb(231,138,38)" fg:x="592" fg:w="12"/><text x="0.8125%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (64 samples, 0.06%)</title><rect x="0.5739%" y="1157" width="0.0608%" height="15" fill="rgb(231,145,46)" fg:x="604" fg:w="64"/><text x="0.8239%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (26 samples, 0.02%)</title><rect x="0.6100%" y="1141" width="0.0247%" height="15" fill="rgb(251,118,11)" fg:x="642" fg:w="26"/><text x="0.8600%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="0.6347%" y="1157" width="0.0342%" height="15" fill="rgb(217,147,25)" fg:x="668" fg:w="36"/><text x="0.8847%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (17 samples, 0.02%)</title><rect x="0.6527%" y="1141" width="0.0162%" height="15" fill="rgb(247,81,37)" fg:x="687" fg:w="17"/><text x="0.9027%" y="1151.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="0.6527%" y="1125" width="0.0162%" height="15" fill="rgb(209,12,38)" fg:x="687" fg:w="17"/><text x="0.9027%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (17 samples, 0.02%)</title><rect x="0.6527%" y="1109" width="0.0162%" height="15" fill="rgb(227,1,9)" fg:x="687" fg:w="17"/><text x="0.9027%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="0.6527%" y="1093" width="0.0162%" height="15" fill="rgb(248,47,43)" fg:x="687" fg:w="17"/><text x="0.9027%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="0.6527%" y="1077" width="0.0162%" height="15" fill="rgb(221,10,30)" fg:x="687" fg:w="17"/><text x="0.9027%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="0.6527%" y="1061" width="0.0162%" height="15" fill="rgb(210,229,1)" fg:x="687" fg:w="17"/><text x="0.9027%" y="1071.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="0.6527%" y="1045" width="0.0162%" height="15" fill="rgb(222,148,37)" fg:x="687" fg:w="17"/><text x="0.9027%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="0.6527%" y="1029" width="0.0162%" height="15" fill="rgb(234,67,33)" fg:x="687" fg:w="17"/><text x="0.9027%" y="1039.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (26 samples, 0.02%)</title><rect x="0.7952%" y="1141" width="0.0247%" height="15" fill="rgb(247,98,35)" fg:x="837" fg:w="26"/><text x="1.0452%" y="1151.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (164 samples, 0.16%)</title><rect x="0.6689%" y="1157" width="0.1558%" height="15" fill="rgb(247,138,52)" fg:x="704" fg:w="164"/><text x="0.9189%" y="1167.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (41 samples, 0.04%)</title><rect x="0.9558%" y="1141" width="0.0390%" height="15" fill="rgb(213,79,30)" fg:x="1006" fg:w="41"/><text x="1.2058%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (19 samples, 0.02%)</title><rect x="0.9948%" y="1141" width="0.0181%" height="15" fill="rgb(246,177,23)" fg:x="1047" fg:w="19"/><text x="1.2448%" y="1151.50"></text></g><g><title>core::mem::replace (19 samples, 0.02%)</title><rect x="0.9948%" y="1125" width="0.0181%" height="15" fill="rgb(230,62,27)" fg:x="1047" fg:w="19"/><text x="1.2448%" y="1135.50"></text></g><g><title>core::ptr::read (19 samples, 0.02%)</title><rect x="0.9948%" y="1109" width="0.0181%" height="15" fill="rgb(216,154,8)" fg:x="1047" fg:w="19"/><text x="1.2448%" y="1119.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (199 samples, 0.19%)</title><rect x="0.8295%" y="1157" width="0.1891%" height="15" fill="rgb(244,35,45)" fg:x="873" fg:w="199"/><text x="1.0795%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="1.3273%" y="1125" width="0.0133%" height="15" fill="rgb(251,115,12)" fg:x="1397" fg:w="14"/><text x="1.5773%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (96 samples, 0.09%)</title><rect x="1.2608%" y="1141" width="0.0912%" height="15" fill="rgb(240,54,50)" fg:x="1327" fg:w="96"/><text x="1.5108%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (12 samples, 0.01%)</title><rect x="1.3406%" y="1125" width="0.0114%" height="15" fill="rgb(233,84,52)" fg:x="1411" fg:w="12"/><text x="1.5906%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="1.4337%" y="1125" width="0.0171%" height="15" fill="rgb(207,117,47)" fg:x="1509" fg:w="18"/><text x="1.6837%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="1.4404%" y="1109" width="0.0105%" height="15" fill="rgb(249,43,39)" fg:x="1516" fg:w="11"/><text x="1.6904%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="1.4404%" y="1093" width="0.0105%" height="15" fill="rgb(209,38,44)" fg:x="1516" fg:w="11"/><text x="1.6904%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="1.4404%" y="1077" width="0.0105%" height="15" fill="rgb(236,212,23)" fg:x="1516" fg:w="11"/><text x="1.6904%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="1.4404%" y="1061" width="0.0105%" height="15" fill="rgb(242,79,21)" fg:x="1516" fg:w="11"/><text x="1.6904%" y="1071.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="1.4404%" y="1045" width="0.0105%" height="15" fill="rgb(211,96,35)" fg:x="1516" fg:w="11"/><text x="1.6904%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="1.4404%" y="1029" width="0.0105%" height="15" fill="rgb(253,215,40)" fg:x="1516" fg:w="11"/><text x="1.6904%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (93 samples, 0.09%)</title><rect x="1.3682%" y="1141" width="0.0884%" height="15" fill="rgb(211,81,21)" fg:x="1440" fg:w="93"/><text x="1.6182%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (26 samples, 0.02%)</title><rect x="1.4565%" y="1141" width="0.0247%" height="15" fill="rgb(208,190,38)" fg:x="1533" fg:w="26"/><text x="1.7065%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (52 samples, 0.05%)</title><rect x="1.4812%" y="1141" width="0.0494%" height="15" fill="rgb(235,213,38)" fg:x="1559" fg:w="52"/><text x="1.7312%" y="1151.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="1.5867%" y="1125" width="0.0190%" height="15" fill="rgb(237,122,38)" fg:x="1670" fg:w="20"/><text x="1.8367%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.02%)</title><rect x="1.5867%" y="1109" width="0.0190%" height="15" fill="rgb(244,218,35)" fg:x="1670" fg:w="20"/><text x="1.8367%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (20 samples, 0.02%)</title><rect x="1.5867%" y="1093" width="0.0190%" height="15" fill="rgb(240,68,47)" fg:x="1670" fg:w="20"/><text x="1.8367%" y="1103.50"></text></g><g><title>core::ptr::read (20 samples, 0.02%)</title><rect x="1.5867%" y="1077" width="0.0190%" height="15" fill="rgb(210,16,53)" fg:x="1670" fg:w="20"/><text x="1.8367%" y="1087.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (19 samples, 0.02%)</title><rect x="1.6057%" y="1125" width="0.0181%" height="15" fill="rgb(235,124,12)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (19 samples, 0.02%)</title><rect x="1.6057%" y="1109" width="0.0181%" height="15" fill="rgb(224,169,11)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="1119.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (19 samples, 0.02%)</title><rect x="1.6057%" y="1093" width="0.0181%" height="15" fill="rgb(250,166,2)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (19 samples, 0.02%)</title><rect x="1.6057%" y="1077" width="0.0181%" height="15" fill="rgb(242,216,29)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (19 samples, 0.02%)</title><rect x="1.6057%" y="1061" width="0.0181%" height="15" fill="rgb(230,116,27)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="1.6057%" y="1045" width="0.0181%" height="15" fill="rgb(228,99,48)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="1.6057%" y="1029" width="0.0181%" height="15" fill="rgb(253,11,6)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="1.6057%" y="1013" width="0.0181%" height="15" fill="rgb(247,143,39)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 0.02%)</title><rect x="1.6057%" y="997" width="0.0181%" height="15" fill="rgb(236,97,10)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.02%)</title><rect x="1.6057%" y="981" width="0.0181%" height="15" fill="rgb(233,208,19)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.02%)</title><rect x="1.6057%" y="965" width="0.0181%" height="15" fill="rgb(216,164,2)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="1.6057%" y="949" width="0.0181%" height="15" fill="rgb(220,129,5)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="1.6057%" y="933" width="0.0181%" height="15" fill="rgb(242,17,10)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="943.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="1.6057%" y="917" width="0.0181%" height="15" fill="rgb(242,107,0)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="927.50"></text></g><g><title>__rg_alloc (19 samples, 0.02%)</title><rect x="1.6057%" y="901" width="0.0181%" height="15" fill="rgb(251,28,31)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (19 samples, 0.02%)</title><rect x="1.6057%" y="885" width="0.0181%" height="15" fill="rgb(233,223,10)" fg:x="1690" fg:w="19"/><text x="1.8557%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (642 samples, 0.61%)</title><rect x="1.0204%" y="1157" width="0.6100%" height="15" fill="rgb(215,21,27)" fg:x="1074" fg:w="642"/><text x="1.2704%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (105 samples, 0.10%)</title><rect x="1.5306%" y="1141" width="0.0998%" height="15" fill="rgb(232,23,21)" fg:x="1611" fg:w="105"/><text x="1.7806%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (35 samples, 0.03%)</title><rect x="1.7454%" y="1141" width="0.0333%" height="15" fill="rgb(244,5,23)" fg:x="1837" fg:w="35"/><text x="1.9954%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (35 samples, 0.03%)</title><rect x="1.7454%" y="1125" width="0.0333%" height="15" fill="rgb(226,81,46)" fg:x="1837" fg:w="35"/><text x="1.9954%" y="1135.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="1.7454%" y="1109" width="0.0333%" height="15" fill="rgb(247,70,30)" fg:x="1837" fg:w="35"/><text x="1.9954%" y="1119.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (35 samples, 0.03%)</title><rect x="1.7454%" y="1093" width="0.0333%" height="15" fill="rgb(212,68,19)" fg:x="1837" fg:w="35"/><text x="1.9954%" y="1103.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (35 samples, 0.03%)</title><rect x="1.7454%" y="1077" width="0.0333%" height="15" fill="rgb(240,187,13)" fg:x="1837" fg:w="35"/><text x="1.9954%" y="1087.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (186 samples, 0.18%)</title><rect x="1.6304%" y="1157" width="0.1767%" height="15" fill="rgb(223,113,26)" fg:x="1716" fg:w="186"/><text x="1.8804%" y="1167.50"></text></g><g><title>event_listener::Inner::lock (30 samples, 0.03%)</title><rect x="1.7786%" y="1141" width="0.0285%" height="15" fill="rgb(206,192,2)" fg:x="1872" fg:w="30"/><text x="2.0286%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="1.7786%" y="1125" width="0.0285%" height="15" fill="rgb(241,108,4)" fg:x="1872" fg:w="30"/><text x="2.0286%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.03%)</title><rect x="1.7786%" y="1109" width="0.0285%" height="15" fill="rgb(247,173,49)" fg:x="1872" fg:w="30"/><text x="2.0286%" y="1119.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (30 samples, 0.03%)</title><rect x="1.7786%" y="1093" width="0.0285%" height="15" fill="rgb(224,114,35)" fg:x="1872" fg:w="30"/><text x="2.0286%" y="1103.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="1.8223%" y="1109" width="0.0171%" height="15" fill="rgb(245,159,27)" fg:x="1918" fg:w="18"/><text x="2.0723%" y="1119.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (24 samples, 0.02%)</title><rect x="1.8195%" y="1125" width="0.0228%" height="15" fill="rgb(245,172,44)" fg:x="1915" fg:w="24"/><text x="2.0695%" y="1135.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (35 samples, 0.03%)</title><rect x="1.8119%" y="1157" width="0.0333%" height="15" fill="rgb(236,23,11)" fg:x="1907" fg:w="35"/><text x="2.0619%" y="1167.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (31 samples, 0.03%)</title><rect x="1.8157%" y="1141" width="0.0295%" height="15" fill="rgb(205,117,38)" fg:x="1911" fg:w="31"/><text x="2.0657%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (39 samples, 0.04%)</title><rect x="1.8451%" y="1157" width="0.0371%" height="15" fill="rgb(237,72,25)" fg:x="1942" fg:w="39"/><text x="2.0951%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (183 samples, 0.17%)</title><rect x="1.8822%" y="1157" width="0.1739%" height="15" fill="rgb(244,70,9)" fg:x="1981" fg:w="183"/><text x="2.1322%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (104 samples, 0.10%)</title><rect x="1.9572%" y="1141" width="0.0988%" height="15" fill="rgb(217,125,39)" fg:x="2060" fg:w="104"/><text x="2.2072%" y="1151.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (71 samples, 0.07%)</title><rect x="1.9886%" y="1125" width="0.0675%" height="15" fill="rgb(235,36,10)" fg:x="2093" fg:w="71"/><text x="2.2386%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.02%)</title><rect x="2.0380%" y="1109" width="0.0181%" height="15" fill="rgb(251,123,47)" fg:x="2145" fg:w="19"/><text x="2.2880%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.01%)</title><rect x="2.0447%" y="1093" width="0.0114%" height="15" fill="rgb(221,13,13)" fg:x="2152" fg:w="12"/><text x="2.2947%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="2.0447%" y="1077" width="0.0114%" height="15" fill="rgb(238,131,9)" fg:x="2152" fg:w="12"/><text x="2.2947%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="2.0447%" y="1061" width="0.0114%" height="15" fill="rgb(211,50,8)" fg:x="2152" fg:w="12"/><text x="2.2947%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="2.0447%" y="1045" width="0.0114%" height="15" fill="rgb(245,182,24)" fg:x="2152" fg:w="12"/><text x="2.2947%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="2.0447%" y="1029" width="0.0114%" height="15" fill="rgb(242,14,37)" fg:x="2152" fg:w="12"/><text x="2.2947%" y="1039.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="2.0447%" y="1013" width="0.0114%" height="15" fill="rgb(246,228,12)" fg:x="2152" fg:w="12"/><text x="2.2947%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="2.0447%" y="997" width="0.0114%" height="15" fill="rgb(213,55,15)" fg:x="2152" fg:w="12"/><text x="2.2947%" y="1007.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="2.0561%" y="1157" width="0.0209%" height="15" fill="rgb(209,9,3)" fg:x="2164" fg:w="22"/><text x="2.3061%" y="1167.50"></text></g><g><title>___pthread_mutex_lock (28 samples, 0.03%)</title><rect x="2.1045%" y="1157" width="0.0266%" height="15" fill="rgb(230,59,30)" fg:x="2215" fg:w="28"/><text x="2.3545%" y="1167.50"></text></g><g><title>__clock_gettime_2 (43 samples, 0.04%)</title><rect x="2.1378%" y="1157" width="0.0409%" height="15" fill="rgb(209,121,21)" fg:x="2250" fg:w="43"/><text x="2.3878%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (18 samples, 0.02%)</title><rect x="2.1824%" y="1157" width="0.0171%" height="15" fill="rgb(220,109,13)" fg:x="2297" fg:w="18"/><text x="2.4324%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.02%)</title><rect x="2.2024%" y="1157" width="0.0181%" height="15" fill="rgb(232,18,1)" fg:x="2318" fg:w="19"/><text x="2.4524%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (12 samples, 0.01%)</title><rect x="2.2204%" y="1157" width="0.0114%" height="15" fill="rgb(215,41,42)" fg:x="2337" fg:w="12"/><text x="2.4704%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.01%)</title><rect x="2.2318%" y="1157" width="0.0124%" height="15" fill="rgb(224,123,36)" fg:x="2349" fg:w="13"/><text x="2.4818%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="2.2318%" y="1141" width="0.0124%" height="15" fill="rgb(240,125,3)" fg:x="2349" fg:w="13"/><text x="2.4818%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="2.2318%" y="1125" width="0.0124%" height="15" fill="rgb(205,98,50)" fg:x="2349" fg:w="13"/><text x="2.4818%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="2.2318%" y="1109" width="0.0124%" height="15" fill="rgb(205,185,37)" fg:x="2349" fg:w="13"/><text x="2.4818%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="2.2318%" y="1093" width="0.0124%" height="15" fill="rgb(238,207,15)" fg:x="2349" fg:w="13"/><text x="2.4818%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="2.2318%" y="1077" width="0.0124%" height="15" fill="rgb(213,199,42)" fg:x="2349" fg:w="13"/><text x="2.4818%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="2.2318%" y="1061" width="0.0124%" height="15" fill="rgb(235,201,11)" fg:x="2349" fg:w="13"/><text x="2.4818%" y="1071.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="2.2318%" y="1045" width="0.0124%" height="15" fill="rgb(207,46,11)" fg:x="2349" fg:w="13"/><text x="2.4818%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="2.2318%" y="1029" width="0.0124%" height="15" fill="rgb(241,35,35)" fg:x="2349" fg:w="13"/><text x="2.4818%" y="1039.50"></text></g><g><title>async_executor::Ticker::sleep (17 samples, 0.02%)</title><rect x="2.2508%" y="1157" width="0.0162%" height="15" fill="rgb(243,32,47)" fg:x="2369" fg:w="17"/><text x="2.5008%" y="1167.50"></text></g><g><title>async_executor::steal (38 samples, 0.04%)</title><rect x="2.2746%" y="1157" width="0.0361%" height="15" fill="rgb(247,202,23)" fg:x="2394" fg:w="38"/><text x="2.5246%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (12 samples, 0.01%)</title><rect x="2.3135%" y="1157" width="0.0114%" height="15" fill="rgb(219,102,11)" fg:x="2435" fg:w="12"/><text x="2.5635%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (125 samples, 0.12%)</title><rect x="2.3249%" y="1157" width="0.1188%" height="15" fill="rgb(243,110,44)" fg:x="2447" fg:w="125"/><text x="2.5749%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (53 samples, 0.05%)</title><rect x="2.4437%" y="1157" width="0.0504%" height="15" fill="rgb(222,74,54)" fg:x="2572" fg:w="53"/><text x="2.6937%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (127 samples, 0.12%)</title><rect x="2.4941%" y="1157" width="0.1207%" height="15" fill="rgb(216,99,12)" fg:x="2625" fg:w="127"/><text x="2.7441%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (61 samples, 0.06%)</title><rect x="2.6147%" y="1157" width="0.0580%" height="15" fill="rgb(226,22,26)" fg:x="2752" fg:w="61"/><text x="2.8647%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (76 samples, 0.07%)</title><rect x="2.6793%" y="1157" width="0.0722%" height="15" fill="rgb(217,163,10)" fg:x="2820" fg:w="76"/><text x="2.9293%" y="1167.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="2.7116%" y="1141" width="0.0399%" height="15" fill="rgb(213,25,53)" fg:x="2854" fg:w="42"/><text x="2.9616%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}&gt;&gt; (16 samples, 0.02%)</title><rect x="2.7582%" y="1157" width="0.0152%" height="15" fill="rgb(252,105,26)" fg:x="2903" fg:w="16"/><text x="3.0082%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="2.7734%" y="1157" width="0.0162%" height="15" fill="rgb(220,39,43)" fg:x="2919" fg:w="17"/><text x="3.0234%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (17 samples, 0.02%)</title><rect x="2.7734%" y="1141" width="0.0162%" height="15" fill="rgb(229,68,48)" fg:x="2919" fg:w="17"/><text x="3.0234%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="2.7895%" y="1157" width="0.0238%" height="15" fill="rgb(252,8,32)" fg:x="2936" fg:w="25"/><text x="3.0395%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt; (15 samples, 0.01%)</title><rect x="2.7990%" y="1141" width="0.0143%" height="15" fill="rgb(223,20,43)" fg:x="2946" fg:w="15"/><text x="3.0490%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="2.8133%" y="1157" width="0.0133%" height="15" fill="rgb(229,81,49)" fg:x="2961" fg:w="14"/><text x="3.0633%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="2.8266%" y="1157" width="0.0114%" height="15" fill="rgb(236,28,36)" fg:x="2975" fg:w="12"/><text x="3.0766%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="2.8380%" y="1157" width="0.0219%" height="15" fill="rgb(249,185,26)" fg:x="2987" fg:w="23"/><text x="3.0880%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="2.8599%" y="1157" width="0.0133%" height="15" fill="rgb(249,174,33)" fg:x="3010" fg:w="14"/><text x="3.1099%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="2.8599%" y="1141" width="0.0133%" height="15" fill="rgb(233,201,37)" fg:x="3010" fg:w="14"/><text x="3.1099%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (26 samples, 0.02%)</title><rect x="2.8732%" y="1157" width="0.0247%" height="15" fill="rgb(221,78,26)" fg:x="3024" fg:w="26"/><text x="3.1232%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (79 samples, 0.08%)</title><rect x="2.8979%" y="1157" width="0.0751%" height="15" fill="rgb(250,127,30)" fg:x="3050" fg:w="79"/><text x="3.1479%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="3.0242%" y="1109" width="0.0124%" height="15" fill="rgb(230,49,44)" fg:x="3183" fg:w="13"/><text x="3.2742%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (13 samples, 0.01%)</title><rect x="3.0242%" y="1093" width="0.0124%" height="15" fill="rgb(229,67,23)" fg:x="3183" fg:w="13"/><text x="3.2742%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="3.0242%" y="1077" width="0.0124%" height="15" fill="rgb(249,83,47)" fg:x="3183" fg:w="13"/><text x="3.2742%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="3.0242%" y="1061" width="0.0124%" height="15" fill="rgb(215,43,3)" fg:x="3183" fg:w="13"/><text x="3.2742%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="3.0242%" y="1125" width="0.0219%" height="15" fill="rgb(238,154,13)" fg:x="3183" fg:w="23"/><text x="3.2742%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (112 samples, 0.11%)</title><rect x="2.9729%" y="1157" width="0.1064%" height="15" fill="rgb(219,56,2)" fg:x="3129" fg:w="112"/><text x="3.2229%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (58 samples, 0.06%)</title><rect x="3.0242%" y="1141" width="0.0551%" height="15" fill="rgb(233,0,4)" fg:x="3183" fg:w="58"/><text x="3.2742%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (35 samples, 0.03%)</title><rect x="3.0461%" y="1125" width="0.0333%" height="15" fill="rgb(235,30,7)" fg:x="3206" fg:w="35"/><text x="3.2961%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (28 samples, 0.03%)</title><rect x="3.1230%" y="1141" width="0.0266%" height="15" fill="rgb(250,79,13)" fg:x="3287" fg:w="28"/><text x="3.3730%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (28 samples, 0.03%)</title><rect x="3.1230%" y="1125" width="0.0266%" height="15" fill="rgb(211,146,34)" fg:x="3287" fg:w="28"/><text x="3.3730%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (28 samples, 0.03%)</title><rect x="3.1230%" y="1109" width="0.0266%" height="15" fill="rgb(228,22,38)" fg:x="3287" fg:w="28"/><text x="3.3730%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="3.1230%" y="1093" width="0.0266%" height="15" fill="rgb(235,168,5)" fg:x="3287" fg:w="28"/><text x="3.3730%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.03%)</title><rect x="3.1230%" y="1077" width="0.0266%" height="15" fill="rgb(221,155,16)" fg:x="3287" fg:w="28"/><text x="3.3730%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.03%)</title><rect x="3.1230%" y="1061" width="0.0266%" height="15" fill="rgb(215,215,53)" fg:x="3287" fg:w="28"/><text x="3.3730%" y="1071.50"></text></g><g><title>__rg_dealloc (28 samples, 0.03%)</title><rect x="3.1230%" y="1045" width="0.0266%" height="15" fill="rgb(223,4,10)" fg:x="3287" fg:w="28"/><text x="3.3730%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (28 samples, 0.03%)</title><rect x="3.1230%" y="1029" width="0.0266%" height="15" fill="rgb(234,103,6)" fg:x="3287" fg:w="28"/><text x="3.3730%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (84 samples, 0.08%)</title><rect x="3.0793%" y="1157" width="0.0798%" height="15" fill="rgb(227,97,0)" fg:x="3241" fg:w="84"/><text x="3.3293%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (85 samples, 0.08%)</title><rect x="3.1591%" y="1157" width="0.0808%" height="15" fill="rgb(234,150,53)" fg:x="3325" fg:w="85"/><text x="3.4091%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="3.2276%" y="1141" width="0.0124%" height="15" fill="rgb(228,201,54)" fg:x="3397" fg:w="13"/><text x="3.4776%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="3.2276%" y="1125" width="0.0124%" height="15" fill="rgb(222,22,37)" fg:x="3397" fg:w="13"/><text x="3.4776%" y="1135.50"></text></g><g><title>event_listener::Event::notify (254 samples, 0.24%)</title><rect x="3.2494%" y="1157" width="0.2413%" height="15" fill="rgb(237,53,32)" fg:x="3420" fg:w="254"/><text x="3.4994%" y="1167.50"></text></g><g><title>event_listener::full_fence (110 samples, 0.10%)</title><rect x="3.3862%" y="1141" width="0.1045%" height="15" fill="rgb(233,25,53)" fg:x="3564" fg:w="110"/><text x="3.6362%" y="1151.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (57 samples, 0.05%)</title><rect x="3.4974%" y="1157" width="0.0542%" height="15" fill="rgb(210,40,34)" fg:x="3681" fg:w="57"/><text x="3.7474%" y="1167.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (22 samples, 0.02%)</title><rect x="3.5515%" y="1157" width="0.0209%" height="15" fill="rgb(241,220,44)" fg:x="3738" fg:w="22"/><text x="3.8015%" y="1167.50"></text></g><g><title>parking::Inner::park (20 samples, 0.02%)</title><rect x="3.5724%" y="1157" width="0.0190%" height="15" fill="rgb(235,28,35)" fg:x="3760" fg:w="20"/><text x="3.8224%" y="1167.50"></text></g><g><title>polling::epoll::Poller::modify (12 samples, 0.01%)</title><rect x="3.6000%" y="1157" width="0.0114%" height="15" fill="rgb(210,56,17)" fg:x="3789" fg:w="12"/><text x="3.8500%" y="1167.50"></text></g><g><title>rust_alloc (61 samples, 0.06%)</title><rect x="3.6114%" y="1157" width="0.0580%" height="15" fill="rgb(224,130,29)" fg:x="3801" fg:w="61"/><text x="3.8614%" y="1167.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="3.6694%" y="1157" width="0.0124%" height="15" fill="rgb(235,212,8)" fg:x="3862" fg:w="13"/><text x="3.9194%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (13 samples, 0.01%)</title><rect x="3.6694%" y="1141" width="0.0124%" height="15" fill="rgb(223,33,50)" fg:x="3862" fg:w="13"/><text x="3.9194%" y="1151.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (13 samples, 0.01%)</title><rect x="3.6694%" y="1125" width="0.0124%" height="15" fill="rgb(219,149,13)" fg:x="3862" fg:w="13"/><text x="3.9194%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (13 samples, 0.01%)</title><rect x="3.6694%" y="1109" width="0.0124%" height="15" fill="rgb(250,156,29)" fg:x="3862" fg:w="13"/><text x="3.9194%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (13 samples, 0.01%)</title><rect x="3.6694%" y="1093" width="0.0124%" height="15" fill="rgb(216,193,19)" fg:x="3862" fg:w="13"/><text x="3.9194%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (13 samples, 0.01%)</title><rect x="3.6694%" y="1077" width="0.0124%" height="15" fill="rgb(216,135,14)" fg:x="3862" fg:w="13"/><text x="3.9194%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="3.6694%" y="1061" width="0.0124%" height="15" fill="rgb(241,47,5)" fg:x="3862" fg:w="13"/><text x="3.9194%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="3.6694%" y="1045" width="0.0124%" height="15" fill="rgb(233,42,35)" fg:x="3862" fg:w="13"/><text x="3.9194%" y="1055.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="3.6694%" y="1029" width="0.0124%" height="15" fill="rgb(231,13,6)" fg:x="3862" fg:w="13"/><text x="3.9194%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (20 samples, 0.02%)</title><rect x="3.7007%" y="1157" width="0.0190%" height="15" fill="rgb(207,181,40)" fg:x="3895" fg:w="20"/><text x="3.9507%" y="1167.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (40 samples, 0.04%)</title><rect x="3.7207%" y="1157" width="0.0380%" height="15" fill="rgb(254,173,49)" fg:x="3916" fg:w="40"/><text x="3.9707%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.01%)</title><rect x="3.7587%" y="1157" width="0.0105%" height="15" fill="rgb(221,1,38)" fg:x="3956" fg:w="11"/><text x="4.0087%" y="1167.50"></text></g><g><title>tremor_common::time::nanotime (73 samples, 0.07%)</title><rect x="3.7691%" y="1157" width="0.0694%" height="15" fill="rgb(206,124,46)" fg:x="3967" fg:w="73"/><text x="4.0191%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (72 samples, 0.07%)</title><rect x="3.7701%" y="1141" width="0.0684%" height="15" fill="rgb(249,21,11)" fg:x="3968" fg:w="72"/><text x="4.0201%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (72 samples, 0.07%)</title><rect x="3.7701%" y="1125" width="0.0684%" height="15" fill="rgb(222,201,40)" fg:x="3968" fg:w="72"/><text x="4.0201%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (72 samples, 0.07%)</title><rect x="3.7701%" y="1109" width="0.0684%" height="15" fill="rgb(235,61,29)" fg:x="3968" fg:w="72"/><text x="4.0201%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (15 samples, 0.01%)</title><rect x="3.8385%" y="1157" width="0.0143%" height="15" fill="rgb(219,207,3)" fg:x="4040" fg:w="15"/><text x="4.0885%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="3.9411%" y="1141" width="0.0114%" height="15" fill="rgb(222,56,46)" fg:x="4148" fg:w="12"/><text x="4.1911%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (22 samples, 0.02%)</title><rect x="3.9525%" y="1141" width="0.0209%" height="15" fill="rgb(239,76,54)" fg:x="4160" fg:w="22"/><text x="4.2025%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (22 samples, 0.02%)</title><rect x="3.9525%" y="1125" width="0.0209%" height="15" fill="rgb(231,124,27)" fg:x="4160" fg:w="22"/><text x="4.2025%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="3.9620%" y="1109" width="0.0114%" height="15" fill="rgb(249,195,6)" fg:x="4170" fg:w="12"/><text x="4.2120%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="3.9620%" y="1093" width="0.0114%" height="15" fill="rgb(237,174,47)" fg:x="4170" fg:w="12"/><text x="4.2120%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="3.9620%" y="1077" width="0.0114%" height="15" fill="rgb(206,201,31)" fg:x="4170" fg:w="12"/><text x="4.2120%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="3.9620%" y="1061" width="0.0114%" height="15" fill="rgb(231,57,52)" fg:x="4170" fg:w="12"/><text x="4.2120%" y="1071.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="3.9620%" y="1045" width="0.0114%" height="15" fill="rgb(248,177,22)" fg:x="4170" fg:w="12"/><text x="4.2120%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="3.9620%" y="1029" width="0.0114%" height="15" fill="rgb(215,211,37)" fg:x="4170" fg:w="12"/><text x="4.2120%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (14 samples, 0.01%)</title><rect x="3.9734%" y="1141" width="0.0133%" height="15" fill="rgb(241,128,51)" fg:x="4182" fg:w="14"/><text x="4.2234%" y="1151.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="3.9734%" y="1125" width="0.0133%" height="15" fill="rgb(227,165,31)" fg:x="4182" fg:w="14"/><text x="4.2234%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (14 samples, 0.01%)</title><rect x="3.9734%" y="1109" width="0.0133%" height="15" fill="rgb(228,167,24)" fg:x="4182" fg:w="14"/><text x="4.2234%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="3.9734%" y="1093" width="0.0133%" height="15" fill="rgb(228,143,12)" fg:x="4182" fg:w="14"/><text x="4.2234%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="3.9734%" y="1077" width="0.0133%" height="15" fill="rgb(249,149,8)" fg:x="4182" fg:w="14"/><text x="4.2234%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="3.9734%" y="1061" width="0.0133%" height="15" fill="rgb(243,35,44)" fg:x="4182" fg:w="14"/><text x="4.2234%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="3.9734%" y="1045" width="0.0133%" height="15" fill="rgb(246,89,9)" fg:x="4182" fg:w="14"/><text x="4.2234%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="3.9734%" y="1029" width="0.0133%" height="15" fill="rgb(233,213,13)" fg:x="4182" fg:w="14"/><text x="4.2234%" y="1039.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="3.9734%" y="1013" width="0.0133%" height="15" fill="rgb(233,141,41)" fg:x="4182" fg:w="14"/><text x="4.2234%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="3.9734%" y="997" width="0.0133%" height="15" fill="rgb(239,167,4)" fg:x="4182" fg:w="14"/><text x="4.2234%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="3.9867%" y="1141" width="0.0143%" height="15" fill="rgb(209,217,16)" fg:x="4196" fg:w="15"/><text x="4.2367%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (15 samples, 0.01%)</title><rect x="3.9867%" y="1125" width="0.0143%" height="15" fill="rgb(219,88,35)" fg:x="4196" fg:w="15"/><text x="4.2367%" y="1135.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="3.9905%" y="1109" width="0.0105%" height="15" fill="rgb(220,193,23)" fg:x="4200" fg:w="11"/><text x="4.2405%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="3.9905%" y="1093" width="0.0105%" height="15" fill="rgb(230,90,52)" fg:x="4200" fg:w="11"/><text x="4.2405%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="3.9905%" y="1077" width="0.0105%" height="15" fill="rgb(252,106,19)" fg:x="4200" fg:w="11"/><text x="4.2405%" y="1087.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="3.9905%" y="1061" width="0.0105%" height="15" fill="rgb(206,74,20)" fg:x="4200" fg:w="11"/><text x="4.2405%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="3.9905%" y="1045" width="0.0105%" height="15" fill="rgb(230,138,44)" fg:x="4200" fg:w="11"/><text x="4.2405%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (183 samples, 0.17%)</title><rect x="3.8537%" y="1157" width="0.1739%" height="15" fill="rgb(235,182,43)" fg:x="4056" fg:w="183"/><text x="4.1037%" y="1167.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (28 samples, 0.03%)</title><rect x="4.0010%" y="1141" width="0.0266%" height="15" fill="rgb(242,16,51)" fg:x="4211" fg:w="28"/><text x="4.2510%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (16 samples, 0.02%)</title><rect x="4.0124%" y="1125" width="0.0152%" height="15" fill="rgb(248,9,4)" fg:x="4223" fg:w="16"/><text x="4.2624%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (16 samples, 0.02%)</title><rect x="4.0124%" y="1109" width="0.0152%" height="15" fill="rgb(210,31,22)" fg:x="4223" fg:w="16"/><text x="4.2624%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="4.0124%" y="1093" width="0.0152%" height="15" fill="rgb(239,54,39)" fg:x="4223" fg:w="16"/><text x="4.2624%" y="1103.50"></text></g><g><title>core::mem::drop (16 samples, 0.02%)</title><rect x="4.0124%" y="1077" width="0.0152%" height="15" fill="rgb(230,99,41)" fg:x="4223" fg:w="16"/><text x="4.2624%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (16 samples, 0.02%)</title><rect x="4.0124%" y="1061" width="0.0152%" height="15" fill="rgb(253,106,12)" fg:x="4223" fg:w="16"/><text x="4.2624%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.09%)</title><rect x="4.0447%" y="1141" width="0.0865%" height="15" fill="rgb(213,46,41)" fg:x="4257" fg:w="91"/><text x="4.2947%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (73 samples, 0.07%)</title><rect x="4.0618%" y="1125" width="0.0694%" height="15" fill="rgb(215,133,35)" fg:x="4275" fg:w="73"/><text x="4.3118%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (12 samples, 0.01%)</title><rect x="4.1197%" y="1109" width="0.0114%" height="15" fill="rgb(213,28,5)" fg:x="4336" fg:w="12"/><text x="4.3697%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.01%)</title><rect x="4.1197%" y="1093" width="0.0114%" height="15" fill="rgb(215,77,49)" fg:x="4336" fg:w="12"/><text x="4.3697%" y="1103.50"></text></g><g><title>value_trait::Builder::object (12 samples, 0.01%)</title><rect x="4.1197%" y="1077" width="0.0114%" height="15" fill="rgb(248,100,22)" fg:x="4336" fg:w="12"/><text x="4.3697%" y="1087.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (12 samples, 0.01%)</title><rect x="4.1197%" y="1061" width="0.0114%" height="15" fill="rgb(208,67,9)" fg:x="4336" fg:w="12"/><text x="4.3697%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="4.1197%" y="1045" width="0.0114%" height="15" fill="rgb(219,133,21)" fg:x="4336" fg:w="12"/><text x="4.3697%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="4.1197%" y="1029" width="0.0114%" height="15" fill="rgb(246,46,29)" fg:x="4336" fg:w="12"/><text x="4.3697%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="4.1197%" y="1013" width="0.0114%" height="15" fill="rgb(246,185,52)" fg:x="4336" fg:w="12"/><text x="4.3697%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="4.1197%" y="997" width="0.0114%" height="15" fill="rgb(252,136,11)" fg:x="4336" fg:w="12"/><text x="4.3697%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="4.1197%" y="981" width="0.0114%" height="15" fill="rgb(219,138,53)" fg:x="4336" fg:w="12"/><text x="4.3697%" y="991.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="4.1197%" y="965" width="0.0114%" height="15" fill="rgb(211,51,23)" fg:x="4336" fg:w="12"/><text x="4.3697%" y="975.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="4.1197%" y="949" width="0.0114%" height="15" fill="rgb(247,221,28)" fg:x="4336" fg:w="12"/><text x="4.3697%" y="959.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="4.1311%" y="1141" width="0.0124%" height="15" fill="rgb(251,222,45)" fg:x="4348" fg:w="13"/><text x="4.3811%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (11 samples, 0.01%)</title><rect x="4.1435%" y="1141" width="0.0105%" height="15" fill="rgb(217,162,53)" fg:x="4361" fg:w="11"/><text x="4.3935%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (11 samples, 0.01%)</title><rect x="4.1435%" y="1125" width="0.0105%" height="15" fill="rgb(229,93,14)" fg:x="4361" fg:w="11"/><text x="4.3935%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="4.1435%" y="1109" width="0.0105%" height="15" fill="rgb(209,67,49)" fg:x="4361" fg:w="11"/><text x="4.3935%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="4.1435%" y="1093" width="0.0105%" height="15" fill="rgb(213,87,29)" fg:x="4361" fg:w="11"/><text x="4.3935%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="4.1435%" y="1077" width="0.0105%" height="15" fill="rgb(205,151,52)" fg:x="4361" fg:w="11"/><text x="4.3935%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="4.1435%" y="1061" width="0.0105%" height="15" fill="rgb(253,215,39)" fg:x="4361" fg:w="11"/><text x="4.3935%" y="1071.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="4.1435%" y="1045" width="0.0105%" height="15" fill="rgb(221,220,41)" fg:x="4361" fg:w="11"/><text x="4.3935%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="4.1435%" y="1029" width="0.0105%" height="15" fill="rgb(218,133,21)" fg:x="4361" fg:w="11"/><text x="4.3935%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (154 samples, 0.15%)</title><rect x="4.0276%" y="1157" width="0.1463%" height="15" fill="rgb(221,193,43)" fg:x="4239" fg:w="154"/><text x="4.2776%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="4.1539%" y="1141" width="0.0200%" height="15" fill="rgb(240,128,52)" fg:x="4372" fg:w="21"/><text x="4.4039%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (21 samples, 0.02%)</title><rect x="4.1539%" y="1125" width="0.0200%" height="15" fill="rgb(253,114,12)" fg:x="4372" fg:w="21"/><text x="4.4039%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (35 samples, 0.03%)</title><rect x="4.1739%" y="1157" width="0.0333%" height="15" fill="rgb(215,223,47)" fg:x="4393" fg:w="35"/><text x="4.4239%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (19 samples, 0.02%)</title><rect x="4.2109%" y="1157" width="0.0181%" height="15" fill="rgb(248,225,23)" fg:x="4432" fg:w="19"/><text x="4.4609%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (18 samples, 0.02%)</title><rect x="4.2290%" y="1157" width="0.0171%" height="15" fill="rgb(250,108,0)" fg:x="4451" fg:w="18"/><text x="4.4790%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (13 samples, 0.01%)</title><rect x="4.2461%" y="1157" width="0.0124%" height="15" fill="rgb(228,208,7)" fg:x="4469" fg:w="13"/><text x="4.4961%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="4.3458%" y="1141" width="0.0133%" height="15" fill="rgb(244,45,10)" fg:x="4574" fg:w="14"/><text x="4.5958%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="4.3734%" y="1109" width="0.0181%" height="15" fill="rgb(207,125,25)" fg:x="4603" fg:w="19"/><text x="4.6234%" y="1119.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="4.3734%" y="1093" width="0.0181%" height="15" fill="rgb(210,195,18)" fg:x="4603" fg:w="19"/><text x="4.6234%" y="1103.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (11 samples, 0.01%)</title><rect x="4.3914%" y="1109" width="0.0105%" height="15" fill="rgb(249,80,12)" fg:x="4622" fg:w="11"/><text x="4.6414%" y="1119.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (11 samples, 0.01%)</title><rect x="4.3914%" y="1093" width="0.0105%" height="15" fill="rgb(221,65,9)" fg:x="4622" fg:w="11"/><text x="4.6414%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.01%)</title><rect x="4.3914%" y="1077" width="0.0105%" height="15" fill="rgb(235,49,36)" fg:x="4622" fg:w="11"/><text x="4.6414%" y="1087.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (11 samples, 0.01%)</title><rect x="4.3914%" y="1061" width="0.0105%" height="15" fill="rgb(225,32,20)" fg:x="4622" fg:w="11"/><text x="4.6414%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.01%)</title><rect x="4.3914%" y="1045" width="0.0105%" height="15" fill="rgb(215,141,46)" fg:x="4622" fg:w="11"/><text x="4.6414%" y="1055.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (11 samples, 0.01%)</title><rect x="4.3914%" y="1029" width="0.0105%" height="15" fill="rgb(250,160,47)" fg:x="4622" fg:w="11"/><text x="4.6414%" y="1039.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (11 samples, 0.01%)</title><rect x="4.3914%" y="1013" width="0.0105%" height="15" fill="rgb(216,222,40)" fg:x="4622" fg:w="11"/><text x="4.6414%" y="1023.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (153 samples, 0.15%)</title><rect x="4.2584%" y="1157" width="0.1454%" height="15" fill="rgb(234,217,39)" fg:x="4482" fg:w="153"/><text x="4.5084%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.04%)</title><rect x="4.3591%" y="1141" width="0.0447%" height="15" fill="rgb(207,178,40)" fg:x="4588" fg:w="47"/><text x="4.6091%" y="1151.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (47 samples, 0.04%)</title><rect x="4.3591%" y="1125" width="0.0447%" height="15" fill="rgb(221,136,13)" fg:x="4588" fg:w="47"/><text x="4.6091%" y="1135.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (58 samples, 0.06%)</title><rect x="4.4038%" y="1157" width="0.0551%" height="15" fill="rgb(249,199,10)" fg:x="4635" fg:w="58"/><text x="4.6538%" y="1167.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (68 samples, 0.06%)</title><rect x="4.4589%" y="1157" width="0.0646%" height="15" fill="rgb(249,222,13)" fg:x="4693" fg:w="68"/><text x="4.7089%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="4.5083%" y="1141" width="0.0152%" height="15" fill="rgb(244,185,38)" fg:x="4745" fg:w="16"/><text x="4.7583%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="4.5083%" y="1125" width="0.0152%" height="15" fill="rgb(236,202,9)" fg:x="4745" fg:w="16"/><text x="4.7583%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="4.5083%" y="1109" width="0.0152%" height="15" fill="rgb(250,229,37)" fg:x="4745" fg:w="16"/><text x="4.7583%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="4.5083%" y="1093" width="0.0152%" height="15" fill="rgb(206,174,23)" fg:x="4745" fg:w="16"/><text x="4.7583%" y="1103.50"></text></g><g><title>__rg_alloc (16 samples, 0.02%)</title><rect x="4.5083%" y="1077" width="0.0152%" height="15" fill="rgb(211,33,43)" fg:x="4745" fg:w="16"/><text x="4.7583%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.02%)</title><rect x="4.5083%" y="1061" width="0.0152%" height="15" fill="rgb(245,58,50)" fg:x="4745" fg:w="16"/><text x="4.7583%" y="1071.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (56 samples, 0.05%)</title><rect x="4.5235%" y="1157" width="0.0532%" height="15" fill="rgb(244,68,36)" fg:x="4761" fg:w="56"/><text x="4.7735%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (16 samples, 0.02%)</title><rect x="4.5615%" y="1141" width="0.0152%" height="15" fill="rgb(232,229,15)" fg:x="4801" fg:w="16"/><text x="4.8115%" y="1151.50"></text></g><g><title>[anon] (4,238 samples, 4.03%)</title><rect x="0.5606%" y="1173" width="4.0266%" height="15" fill="rgb(254,30,23)" fg:x="590" fg:w="4238"/><text x="0.8106%" y="1183.50">[ano..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (18 samples, 0.02%)</title><rect x="4.5891%" y="1157" width="0.0171%" height="15" fill="rgb(235,160,14)" fg:x="4830" fg:w="18"/><text x="4.8391%" y="1167.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="4.5872%" y="1173" width="0.0200%" height="15" fill="rgb(212,155,44)" fg:x="4828" fg:w="21"/><text x="4.8372%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (71 samples, 0.07%)</title><rect x="4.6185%" y="1157" width="0.0675%" height="15" fill="rgb(226,2,50)" fg:x="4861" fg:w="71"/><text x="4.8685%" y="1167.50"></text></g><g><title>[tremor-connectors-laptopnowarmup] (85 samples, 0.08%)</title><rect x="4.6071%" y="1173" width="0.0808%" height="15" fill="rgb(234,177,6)" fg:x="4849" fg:w="85"/><text x="4.8571%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="4.6879%" y="1157" width="0.0257%" height="15" fill="rgb(217,24,9)" fg:x="4934" fg:w="27"/><text x="4.9379%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="4.8067%" y="1013" width="0.0190%" height="15" fill="rgb(220,13,46)" fg:x="5059" fg:w="20"/><text x="5.0567%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="4.8067%" y="997" width="0.0190%" height="15" fill="rgb(239,221,27)" fg:x="5059" fg:w="20"/><text x="5.0567%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.02%)</title><rect x="4.8067%" y="981" width="0.0190%" height="15" fill="rgb(222,198,25)" fg:x="5059" fg:w="20"/><text x="5.0567%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.02%)</title><rect x="4.8067%" y="965" width="0.0190%" height="15" fill="rgb(211,99,13)" fg:x="5059" fg:w="20"/><text x="5.0567%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.02%)</title><rect x="4.8067%" y="949" width="0.0190%" height="15" fill="rgb(232,111,31)" fg:x="5059" fg:w="20"/><text x="5.0567%" y="959.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.02%)</title><rect x="4.8067%" y="933" width="0.0190%" height="15" fill="rgb(245,82,37)" fg:x="5059" fg:w="20"/><text x="5.0567%" y="943.50"></text></g><g><title>__rg_alloc (20 samples, 0.02%)</title><rect x="4.8067%" y="917" width="0.0190%" height="15" fill="rgb(227,149,46)" fg:x="5059" fg:w="20"/><text x="5.0567%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (20 samples, 0.02%)</title><rect x="4.8067%" y="901" width="0.0190%" height="15" fill="rgb(218,36,50)" fg:x="5059" fg:w="20"/><text x="5.0567%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="4.8067%" y="1093" width="0.0314%" height="15" fill="rgb(226,80,48)" fg:x="5059" fg:w="33"/><text x="5.0567%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="4.8067%" y="1077" width="0.0314%" height="15" fill="rgb(238,224,15)" fg:x="5059" fg:w="33"/><text x="5.0567%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33 samples, 0.03%)</title><rect x="4.8067%" y="1061" width="0.0314%" height="15" fill="rgb(241,136,10)" fg:x="5059" fg:w="33"/><text x="5.0567%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 0.03%)</title><rect x="4.8067%" y="1045" width="0.0314%" height="15" fill="rgb(208,32,45)" fg:x="5059" fg:w="33"/><text x="5.0567%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 0.03%)</title><rect x="4.8067%" y="1029" width="0.0314%" height="15" fill="rgb(207,135,9)" fg:x="5059" fg:w="33"/><text x="5.0567%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13 samples, 0.01%)</title><rect x="4.8257%" y="1013" width="0.0124%" height="15" fill="rgb(206,86,44)" fg:x="5079" fg:w="13"/><text x="5.0757%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="4.8257%" y="997" width="0.0124%" height="15" fill="rgb(245,177,15)" fg:x="5079" fg:w="13"/><text x="5.0757%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (153 samples, 0.15%)</title><rect x="4.7135%" y="1157" width="0.1454%" height="15" fill="rgb(206,64,50)" fg:x="4961" fg:w="153"/><text x="4.9635%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (55 samples, 0.05%)</title><rect x="4.8067%" y="1141" width="0.0523%" height="15" fill="rgb(234,36,40)" fg:x="5059" fg:w="55"/><text x="5.0567%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (55 samples, 0.05%)</title><rect x="4.8067%" y="1125" width="0.0523%" height="15" fill="rgb(213,64,8)" fg:x="5059" fg:w="55"/><text x="5.0567%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (55 samples, 0.05%)</title><rect x="4.8067%" y="1109" width="0.0523%" height="15" fill="rgb(210,75,36)" fg:x="5059" fg:w="55"/><text x="5.0567%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="4.8380%" y="1093" width="0.0209%" height="15" fill="rgb(229,88,21)" fg:x="5092" fg:w="22"/><text x="5.0880%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="4.8380%" y="1077" width="0.0209%" height="15" fill="rgb(252,204,47)" fg:x="5092" fg:w="22"/><text x="5.0880%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.02%)</title><rect x="4.8380%" y="1061" width="0.0209%" height="15" fill="rgb(208,77,27)" fg:x="5092" fg:w="22"/><text x="5.0880%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="4.8380%" y="1045" width="0.0209%" height="15" fill="rgb(221,76,26)" fg:x="5092" fg:w="22"/><text x="5.0880%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="4.8380%" y="1029" width="0.0209%" height="15" fill="rgb(225,139,18)" fg:x="5092" fg:w="22"/><text x="5.0880%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.02%)</title><rect x="4.8380%" y="1013" width="0.0209%" height="15" fill="rgb(230,137,11)" fg:x="5092" fg:w="22"/><text x="5.0880%" y="1023.50"></text></g><g><title>__rg_alloc (22 samples, 0.02%)</title><rect x="4.8380%" y="997" width="0.0209%" height="15" fill="rgb(212,28,1)" fg:x="5092" fg:w="22"/><text x="5.0880%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (22 samples, 0.02%)</title><rect x="4.8380%" y="981" width="0.0209%" height="15" fill="rgb(248,164,17)" fg:x="5092" fg:w="22"/><text x="5.0880%" y="991.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="4.8589%" y="1157" width="0.0114%" height="15" fill="rgb(222,171,42)" fg:x="5114" fg:w="12"/><text x="5.1089%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (12 samples, 0.01%)</title><rect x="4.8589%" y="1141" width="0.0114%" height="15" fill="rgb(243,84,45)" fg:x="5114" fg:w="12"/><text x="5.1089%" y="1151.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="4.8589%" y="1125" width="0.0114%" height="15" fill="rgb(252,49,23)" fg:x="5114" fg:w="12"/><text x="5.1089%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (12 samples, 0.01%)</title><rect x="4.8589%" y="1109" width="0.0114%" height="15" fill="rgb(215,19,7)" fg:x="5114" fg:w="12"/><text x="5.1089%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="4.8589%" y="1093" width="0.0114%" height="15" fill="rgb(238,81,41)" fg:x="5114" fg:w="12"/><text x="5.1089%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="4.8589%" y="1077" width="0.0114%" height="15" fill="rgb(210,199,37)" fg:x="5114" fg:w="12"/><text x="5.1089%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="4.8589%" y="1061" width="0.0114%" height="15" fill="rgb(244,192,49)" fg:x="5114" fg:w="12"/><text x="5.1089%" y="1071.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="4.8589%" y="1045" width="0.0114%" height="15" fill="rgb(226,211,11)" fg:x="5114" fg:w="12"/><text x="5.1089%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="4.8589%" y="1029" width="0.0114%" height="15" fill="rgb(236,162,54)" fg:x="5114" fg:w="12"/><text x="5.1089%" y="1039.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (182 samples, 0.17%)</title><rect x="4.8703%" y="1157" width="0.1729%" height="15" fill="rgb(220,229,9)" fg:x="5126" fg:w="182"/><text x="5.1203%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (15 samples, 0.01%)</title><rect x="5.0290%" y="1141" width="0.0143%" height="15" fill="rgb(250,87,22)" fg:x="5293" fg:w="15"/><text x="5.2790%" y="1151.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="5.0432%" y="1157" width="0.0219%" height="15" fill="rgb(239,43,17)" fg:x="5308" fg:w="23"/><text x="5.2932%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="5.2485%" y="1029" width="0.0133%" height="15" fill="rgb(231,177,25)" fg:x="5524" fg:w="14"/><text x="5.4985%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="5.2485%" y="1013" width="0.0133%" height="15" fill="rgb(219,179,1)" fg:x="5524" fg:w="14"/><text x="5.4985%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="5.2485%" y="997" width="0.0133%" height="15" fill="rgb(238,219,53)" fg:x="5524" fg:w="14"/><text x="5.4985%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="5.2485%" y="981" width="0.0133%" height="15" fill="rgb(232,167,36)" fg:x="5524" fg:w="14"/><text x="5.4985%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="5.2485%" y="965" width="0.0133%" height="15" fill="rgb(244,19,51)" fg:x="5524" fg:w="14"/><text x="5.4985%" y="975.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="5.2485%" y="949" width="0.0133%" height="15" fill="rgb(224,6,22)" fg:x="5524" fg:w="14"/><text x="5.4985%" y="959.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="5.2485%" y="933" width="0.0133%" height="15" fill="rgb(224,145,5)" fg:x="5524" fg:w="14"/><text x="5.4985%" y="943.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="5.2485%" y="917" width="0.0133%" height="15" fill="rgb(234,130,49)" fg:x="5524" fg:w="14"/><text x="5.4985%" y="927.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="5.2409%" y="1125" width="0.0399%" height="15" fill="rgb(254,6,2)" fg:x="5516" fg:w="42"/><text x="5.4909%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="5.2485%" y="1109" width="0.0323%" height="15" fill="rgb(208,96,46)" fg:x="5524" fg:w="34"/><text x="5.4985%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="5.2485%" y="1093" width="0.0323%" height="15" fill="rgb(239,3,39)" fg:x="5524" fg:w="34"/><text x="5.4985%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34 samples, 0.03%)</title><rect x="5.2485%" y="1077" width="0.0323%" height="15" fill="rgb(233,210,1)" fg:x="5524" fg:w="34"/><text x="5.4985%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (34 samples, 0.03%)</title><rect x="5.2485%" y="1061" width="0.0323%" height="15" fill="rgb(244,137,37)" fg:x="5524" fg:w="34"/><text x="5.4985%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34 samples, 0.03%)</title><rect x="5.2485%" y="1045" width="0.0323%" height="15" fill="rgb(240,136,2)" fg:x="5524" fg:w="34"/><text x="5.4985%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (20 samples, 0.02%)</title><rect x="5.2618%" y="1029" width="0.0190%" height="15" fill="rgb(239,18,37)" fg:x="5538" fg:w="20"/><text x="5.5118%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.02%)</title><rect x="5.2618%" y="1013" width="0.0190%" height="15" fill="rgb(218,185,22)" fg:x="5538" fg:w="20"/><text x="5.5118%" y="1023.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (52 samples, 0.05%)</title><rect x="5.2409%" y="1141" width="0.0494%" height="15" fill="rgb(225,218,4)" fg:x="5516" fg:w="52"/><text x="5.4909%" y="1151.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (24 samples, 0.02%)</title><rect x="5.2903%" y="1141" width="0.0228%" height="15" fill="rgb(230,182,32)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="5.2903%" y="1125" width="0.0228%" height="15" fill="rgb(242,56,43)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="5.2903%" y="1109" width="0.0228%" height="15" fill="rgb(233,99,24)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (24 samples, 0.02%)</title><rect x="5.2903%" y="1093" width="0.0228%" height="15" fill="rgb(234,209,42)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (24 samples, 0.02%)</title><rect x="5.2903%" y="1077" width="0.0228%" height="15" fill="rgb(227,7,12)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (24 samples, 0.02%)</title><rect x="5.2903%" y="1061" width="0.0228%" height="15" fill="rgb(245,203,43)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="5.2903%" y="1045" width="0.0228%" height="15" fill="rgb(238,205,33)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="5.2903%" y="1029" width="0.0228%" height="15" fill="rgb(231,56,7)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="1039.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (24 samples, 0.02%)</title><rect x="5.2903%" y="1013" width="0.0228%" height="15" fill="rgb(244,186,29)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="5.2903%" y="997" width="0.0228%" height="15" fill="rgb(234,111,31)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="1007.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (24 samples, 0.02%)</title><rect x="5.2903%" y="981" width="0.0228%" height="15" fill="rgb(241,149,10)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24 samples, 0.02%)</title><rect x="5.2903%" y="965" width="0.0228%" height="15" fill="rgb(249,206,44)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 0.02%)</title><rect x="5.2903%" y="949" width="0.0228%" height="15" fill="rgb(251,153,30)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="959.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (24 samples, 0.02%)</title><rect x="5.2903%" y="933" width="0.0228%" height="15" fill="rgb(239,152,38)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (24 samples, 0.02%)</title><rect x="5.2903%" y="917" width="0.0228%" height="15" fill="rgb(249,139,47)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="5.2903%" y="901" width="0.0228%" height="15" fill="rgb(244,64,35)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (24 samples, 0.02%)</title><rect x="5.2903%" y="885" width="0.0228%" height="15" fill="rgb(216,46,15)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="5.2903%" y="869" width="0.0228%" height="15" fill="rgb(250,74,19)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="879.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (24 samples, 0.02%)</title><rect x="5.2903%" y="853" width="0.0228%" height="15" fill="rgb(249,42,33)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (24 samples, 0.02%)</title><rect x="5.2903%" y="837" width="0.0228%" height="15" fill="rgb(242,149,17)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="847.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="5.2903%" y="821" width="0.0228%" height="15" fill="rgb(244,29,21)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (24 samples, 0.02%)</title><rect x="5.2903%" y="805" width="0.0228%" height="15" fill="rgb(220,130,37)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="5.2903%" y="789" width="0.0228%" height="15" fill="rgb(211,67,2)" fg:x="5568" fg:w="24"/><text x="5.5403%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="5.3444%" y="949" width="0.0105%" height="15" fill="rgb(235,68,52)" fg:x="5625" fg:w="11"/><text x="5.5944%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (388 samples, 0.37%)</title><rect x="5.3549%" y="949" width="0.3686%" height="15" fill="rgb(246,142,3)" fg:x="5636" fg:w="388"/><text x="5.6049%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (915 samples, 0.87%)</title><rect x="5.8518%" y="933" width="0.8694%" height="15" fill="rgb(241,25,7)" fg:x="6159" fg:w="915"/><text x="6.1018%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (14 samples, 0.01%)</title><rect x="6.7211%" y="917" width="0.0133%" height="15" fill="rgb(242,119,39)" fg:x="7074" fg:w="14"/><text x="6.9711%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,505 samples, 1.43%)</title><rect x="5.3131%" y="997" width="1.4299%" height="15" fill="rgb(241,98,45)" fg:x="5592" fg:w="1505"/><text x="5.5631%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,505 samples, 1.43%)</title><rect x="5.3131%" y="981" width="1.4299%" height="15" fill="rgb(254,28,30)" fg:x="5592" fg:w="1505"/><text x="5.5631%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,505 samples, 1.43%)</title><rect x="5.3131%" y="965" width="1.4299%" height="15" fill="rgb(241,142,54)" fg:x="5592" fg:w="1505"/><text x="5.5631%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,073 samples, 1.02%)</title><rect x="5.7235%" y="949" width="1.0195%" height="15" fill="rgb(222,85,15)" fg:x="6024" fg:w="1073"/><text x="5.9735%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (23 samples, 0.02%)</title><rect x="6.7211%" y="933" width="0.0219%" height="15" fill="rgb(210,85,47)" fg:x="7074" fg:w="23"/><text x="6.9711%" y="943.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,506 samples, 1.43%)</title><rect x="5.3131%" y="1141" width="1.4309%" height="15" fill="rgb(224,206,25)" fg:x="5592" fg:w="1506"/><text x="5.5631%" y="1151.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,506 samples, 1.43%)</title><rect x="5.3131%" y="1125" width="1.4309%" height="15" fill="rgb(243,201,19)" fg:x="5592" fg:w="1506"/><text x="5.5631%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,506 samples, 1.43%)</title><rect x="5.3131%" y="1109" width="1.4309%" height="15" fill="rgb(236,59,4)" fg:x="5592" fg:w="1506"/><text x="5.5631%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,506 samples, 1.43%)</title><rect x="5.3131%" y="1093" width="1.4309%" height="15" fill="rgb(254,179,45)" fg:x="5592" fg:w="1506"/><text x="5.5631%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,506 samples, 1.43%)</title><rect x="5.3131%" y="1077" width="1.4309%" height="15" fill="rgb(226,14,10)" fg:x="5592" fg:w="1506"/><text x="5.5631%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,506 samples, 1.43%)</title><rect x="5.3131%" y="1061" width="1.4309%" height="15" fill="rgb(244,27,41)" fg:x="5592" fg:w="1506"/><text x="5.5631%" y="1071.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,506 samples, 1.43%)</title><rect x="5.3131%" y="1045" width="1.4309%" height="15" fill="rgb(235,35,32)" fg:x="5592" fg:w="1506"/><text x="5.5631%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,506 samples, 1.43%)</title><rect x="5.3131%" y="1029" width="1.4309%" height="15" fill="rgb(218,68,31)" fg:x="5592" fg:w="1506"/><text x="5.5631%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,506 samples, 1.43%)</title><rect x="5.3131%" y="1013" width="1.4309%" height="15" fill="rgb(207,120,37)" fg:x="5592" fg:w="1506"/><text x="5.5631%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,772 samples, 1.68%)</title><rect x="5.0651%" y="1157" width="1.6836%" height="15" fill="rgb(227,98,0)" fg:x="5331" fg:w="1772"/><text x="5.3151%" y="1167.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="6.7487%" y="1157" width="0.0124%" height="15" fill="rgb(207,7,3)" fg:x="7103" fg:w="13"/><text x="6.9987%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (11 samples, 0.01%)</title><rect x="6.7620%" y="1157" width="0.0105%" height="15" fill="rgb(206,98,19)" fg:x="7117" fg:w="11"/><text x="7.0120%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (67 samples, 0.06%)</title><rect x="6.7724%" y="1157" width="0.0637%" height="15" fill="rgb(217,5,26)" fg:x="7128" fg:w="67"/><text x="7.0224%" y="1167.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="6.8361%" y="1157" width="0.0181%" height="15" fill="rgb(235,190,38)" fg:x="7195" fg:w="19"/><text x="7.0861%" y="1167.50"></text></g><g><title>[libc.so.6] (26 samples, 0.02%)</title><rect x="6.8542%" y="1157" width="0.0247%" height="15" fill="rgb(247,86,24)" fg:x="7214" fg:w="26"/><text x="7.1042%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (26 samples, 0.02%)</title><rect x="6.8542%" y="1141" width="0.0247%" height="15" fill="rgb(205,101,16)" fg:x="7214" fg:w="26"/><text x="7.1042%" y="1151.50"></text></g><g><title>__GI___pthread_cond_signal (11 samples, 0.01%)</title><rect x="6.8884%" y="1157" width="0.0105%" height="15" fill="rgb(246,168,33)" fg:x="7250" fg:w="11"/><text x="7.1384%" y="1167.50"></text></g><g><title>___pthread_mutex_lock (27 samples, 0.03%)</title><rect x="6.9007%" y="1157" width="0.0257%" height="15" fill="rgb(231,114,1)" fg:x="7263" fg:w="27"/><text x="7.1507%" y="1167.50"></text></g><g><title>__clock_gettime_2 (130 samples, 0.12%)</title><rect x="6.9264%" y="1157" width="0.1235%" height="15" fill="rgb(207,184,53)" fg:x="7290" fg:w="130"/><text x="7.1764%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (100 samples, 0.10%)</title><rect x="7.0499%" y="1157" width="0.0950%" height="15" fill="rgb(224,95,51)" fg:x="7420" fg:w="100"/><text x="7.2999%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (31 samples, 0.03%)</title><rect x="7.1449%" y="1157" width="0.0295%" height="15" fill="rgb(212,188,45)" fg:x="7520" fg:w="31"/><text x="7.3949%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (19 samples, 0.02%)</title><rect x="7.1563%" y="1141" width="0.0181%" height="15" fill="rgb(223,154,38)" fg:x="7532" fg:w="19"/><text x="7.4063%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (33 samples, 0.03%)</title><rect x="7.1743%" y="1157" width="0.0314%" height="15" fill="rgb(251,22,52)" fg:x="7551" fg:w="33"/><text x="7.4243%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (95 samples, 0.09%)</title><rect x="7.2067%" y="1157" width="0.0903%" height="15" fill="rgb(229,209,22)" fg:x="7585" fg:w="95"/><text x="7.4567%" y="1167.50"></text></g><g><title>__x64_sys_futex (16 samples, 0.02%)</title><rect x="7.3967%" y="549" width="0.0152%" height="15" fill="rgb(234,138,34)" fg:x="7785" fg:w="16"/><text x="7.6467%" y="559.50"></text></g><g><title>do_futex (16 samples, 0.02%)</title><rect x="7.3967%" y="533" width="0.0152%" height="15" fill="rgb(212,95,11)" fg:x="7785" fg:w="16"/><text x="7.6467%" y="543.50"></text></g><g><title>futex_wake (14 samples, 0.01%)</title><rect x="7.3986%" y="517" width="0.0133%" height="15" fill="rgb(240,179,47)" fg:x="7787" fg:w="14"/><text x="7.6486%" y="527.50"></text></g><g><title>syscall_exit_to_user_mode (41 samples, 0.04%)</title><rect x="7.4128%" y="549" width="0.0390%" height="15" fill="rgb(240,163,11)" fg:x="7802" fg:w="41"/><text x="7.6628%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (65 samples, 0.06%)</title><rect x="7.3948%" y="581" width="0.0618%" height="15" fill="rgb(236,37,12)" fg:x="7783" fg:w="65"/><text x="7.6448%" y="591.50"></text></g><g><title>do_syscall_64 (64 samples, 0.06%)</title><rect x="7.3957%" y="565" width="0.0608%" height="15" fill="rgb(232,164,16)" fg:x="7784" fg:w="64"/><text x="7.6457%" y="575.50"></text></g><g><title>core::mem::drop (78 samples, 0.07%)</title><rect x="7.3853%" y="709" width="0.0741%" height="15" fill="rgb(244,205,15)" fg:x="7773" fg:w="78"/><text x="7.6353%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (78 samples, 0.07%)</title><rect x="7.3853%" y="693" width="0.0741%" height="15" fill="rgb(223,117,47)" fg:x="7773" fg:w="78"/><text x="7.6353%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (78 samples, 0.07%)</title><rect x="7.3853%" y="677" width="0.0741%" height="15" fill="rgb(244,107,35)" fg:x="7773" fg:w="78"/><text x="7.6353%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.07%)</title><rect x="7.3853%" y="661" width="0.0741%" height="15" fill="rgb(205,140,8)" fg:x="7773" fg:w="78"/><text x="7.6353%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (78 samples, 0.07%)</title><rect x="7.3853%" y="645" width="0.0741%" height="15" fill="rgb(228,84,46)" fg:x="7773" fg:w="78"/><text x="7.6353%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (78 samples, 0.07%)</title><rect x="7.3853%" y="629" width="0.0741%" height="15" fill="rgb(254,188,9)" fg:x="7773" fg:w="78"/><text x="7.6353%" y="639.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (78 samples, 0.07%)</title><rect x="7.3853%" y="613" width="0.0741%" height="15" fill="rgb(206,112,54)" fg:x="7773" fg:w="78"/><text x="7.6353%" y="623.50"></text></g><g><title>__GI___lll_lock_wake (71 samples, 0.07%)</title><rect x="7.3919%" y="597" width="0.0675%" height="15" fill="rgb(216,84,49)" fg:x="7780" fg:w="71"/><text x="7.6419%" y="607.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="7.4603%" y="629" width="0.0124%" height="15" fill="rgb(214,194,35)" fg:x="7852" fg:w="13"/><text x="7.7103%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (15 samples, 0.01%)</title><rect x="7.4594%" y="709" width="0.0143%" height="15" fill="rgb(249,28,3)" fg:x="7851" fg:w="15"/><text x="7.7094%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (15 samples, 0.01%)</title><rect x="7.4594%" y="693" width="0.0143%" height="15" fill="rgb(222,56,52)" fg:x="7851" fg:w="15"/><text x="7.7094%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="7.4594%" y="677" width="0.0143%" height="15" fill="rgb(245,217,50)" fg:x="7851" fg:w="15"/><text x="7.7094%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="7.4603%" y="661" width="0.0133%" height="15" fill="rgb(213,201,24)" fg:x="7852" fg:w="14"/><text x="7.7103%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="7.4603%" y="645" width="0.0133%" height="15" fill="rgb(248,116,28)" fg:x="7852" fg:w="14"/><text x="7.7103%" y="655.50"></text></g><g><title>update_curr (18 samples, 0.02%)</title><rect x="7.6409%" y="453" width="0.0171%" height="15" fill="rgb(219,72,43)" fg:x="8042" fg:w="18"/><text x="7.8909%" y="463.50"></text></g><g><title>dequeue_entity (37 samples, 0.04%)</title><rect x="7.6333%" y="469" width="0.0352%" height="15" fill="rgb(209,138,14)" fg:x="8034" fg:w="37"/><text x="7.8833%" y="479.50"></text></g><g><title>update_load_avg (11 samples, 0.01%)</title><rect x="7.6580%" y="453" width="0.0105%" height="15" fill="rgb(222,18,33)" fg:x="8060" fg:w="11"/><text x="7.9080%" y="463.50"></text></g><g><title>dequeue_task_fair (45 samples, 0.04%)</title><rect x="7.6266%" y="485" width="0.0428%" height="15" fill="rgb(213,199,7)" fg:x="8027" fg:w="45"/><text x="7.8766%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (13 samples, 0.01%)</title><rect x="7.6770%" y="469" width="0.0124%" height="15" fill="rgb(250,110,10)" fg:x="8080" fg:w="13"/><text x="7.9270%" y="479.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (13 samples, 0.01%)</title><rect x="7.6770%" y="453" width="0.0124%" height="15" fill="rgb(248,123,6)" fg:x="8080" fg:w="13"/><text x="7.9270%" y="463.50"></text></g><g><title>native_write_msr (13 samples, 0.01%)</title><rect x="7.6770%" y="437" width="0.0124%" height="15" fill="rgb(206,91,31)" fg:x="8080" fg:w="13"/><text x="7.9270%" y="447.50"></text></g><g><title>finish_task_switch.isra.0 (22 samples, 0.02%)</title><rect x="7.6694%" y="485" width="0.0209%" height="15" fill="rgb(211,154,13)" fg:x="8072" fg:w="22"/><text x="7.9194%" y="495.50"></text></g><g><title>psi_group_change (28 samples, 0.03%)</title><rect x="7.7017%" y="469" width="0.0266%" height="15" fill="rgb(225,148,7)" fg:x="8106" fg:w="28"/><text x="7.9517%" y="479.50"></text></g><g><title>psi_task_switch (37 samples, 0.04%)</title><rect x="7.6950%" y="485" width="0.0352%" height="15" fill="rgb(220,160,43)" fg:x="8099" fg:w="37"/><text x="7.9450%" y="495.50"></text></g><g><title>futex_wait_queue (154 samples, 0.15%)</title><rect x="7.5990%" y="533" width="0.1463%" height="15" fill="rgb(213,52,39)" fg:x="7998" fg:w="154"/><text x="7.8490%" y="543.50"></text></g><g><title>schedule (148 samples, 0.14%)</title><rect x="7.6048%" y="517" width="0.1406%" height="15" fill="rgb(243,137,7)" fg:x="8004" fg:w="148"/><text x="7.8548%" y="527.50"></text></g><g><title>__schedule (143 samples, 0.14%)</title><rect x="7.6095%" y="501" width="0.1359%" height="15" fill="rgb(230,79,13)" fg:x="8009" fg:w="143"/><text x="7.8595%" y="511.50"></text></g><g><title>__x64_sys_futex (182 samples, 0.17%)</title><rect x="7.5895%" y="581" width="0.1729%" height="15" fill="rgb(247,105,23)" fg:x="7988" fg:w="182"/><text x="7.8395%" y="591.50"></text></g><g><title>do_futex (181 samples, 0.17%)</title><rect x="7.5905%" y="565" width="0.1720%" height="15" fill="rgb(223,179,41)" fg:x="7989" fg:w="181"/><text x="7.8405%" y="575.50"></text></g><g><title>futex_wait (179 samples, 0.17%)</title><rect x="7.5924%" y="549" width="0.1701%" height="15" fill="rgb(218,9,34)" fg:x="7991" fg:w="179"/><text x="7.8424%" y="559.50"></text></g><g><title>futex_wait_setup (18 samples, 0.02%)</title><rect x="7.7454%" y="533" width="0.0171%" height="15" fill="rgb(222,106,8)" fg:x="8152" fg:w="18"/><text x="7.9954%" y="543.50"></text></g><g><title>futex_q_lock (14 samples, 0.01%)</title><rect x="7.7492%" y="517" width="0.0133%" height="15" fill="rgb(211,220,0)" fg:x="8156" fg:w="14"/><text x="7.9992%" y="527.50"></text></g><g><title>__rseq_handle_notify_resume (14 samples, 0.01%)</title><rect x="7.8033%" y="549" width="0.0133%" height="15" fill="rgb(229,52,16)" fg:x="8213" fg:w="14"/><text x="8.0533%" y="559.50"></text></g><g><title>exit_to_user_mode_prepare (30 samples, 0.03%)</title><rect x="7.7919%" y="565" width="0.0285%" height="15" fill="rgb(212,155,18)" fg:x="8201" fg:w="30"/><text x="8.0419%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (253 samples, 0.24%)</title><rect x="7.5857%" y="613" width="0.2404%" height="15" fill="rgb(242,21,14)" fg:x="7984" fg:w="253"/><text x="7.8357%" y="623.50"></text></g><g><title>do_syscall_64 (253 samples, 0.24%)</title><rect x="7.5857%" y="597" width="0.2404%" height="15" fill="rgb(222,19,48)" fg:x="7984" fg:w="253"/><text x="7.8357%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (67 samples, 0.06%)</title><rect x="7.7625%" y="581" width="0.0637%" height="15" fill="rgb(232,45,27)" fg:x="8170" fg:w="67"/><text x="8.0125%" y="591.50"></text></g><g><title>event_listener::Inner::lock (370 samples, 0.35%)</title><rect x="7.4774%" y="709" width="0.3515%" height="15" fill="rgb(249,103,42)" fg:x="7870" fg:w="370"/><text x="7.7274%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (370 samples, 0.35%)</title><rect x="7.4774%" y="693" width="0.3515%" height="15" fill="rgb(246,81,33)" fg:x="7870" fg:w="370"/><text x="7.7274%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (366 samples, 0.35%)</title><rect x="7.4812%" y="677" width="0.3477%" height="15" fill="rgb(252,33,42)" fg:x="7874" fg:w="366"/><text x="7.7312%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (344 samples, 0.33%)</title><rect x="7.5021%" y="661" width="0.3268%" height="15" fill="rgb(209,212,41)" fg:x="7896" fg:w="344"/><text x="7.7521%" y="671.50"></text></g><g><title>___pthread_mutex_lock (344 samples, 0.33%)</title><rect x="7.5021%" y="645" width="0.3268%" height="15" fill="rgb(207,154,6)" fg:x="7896" fg:w="344"/><text x="7.7521%" y="655.50"></text></g><g><title>__GI___lll_lock_wait (270 samples, 0.26%)</title><rect x="7.5724%" y="629" width="0.2565%" height="15" fill="rgb(223,64,47)" fg:x="7970" fg:w="270"/><text x="7.8224%" y="639.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (507 samples, 0.48%)</title><rect x="7.3644%" y="725" width="0.4817%" height="15" fill="rgb(211,161,38)" fg:x="7751" fg:w="507"/><text x="7.6144%" y="735.50"></text></g><g><title>event_listener::List::remove (18 samples, 0.02%)</title><rect x="7.8290%" y="709" width="0.0171%" height="15" fill="rgb(219,138,40)" fg:x="8240" fg:w="18"/><text x="8.0790%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (12 samples, 0.01%)</title><rect x="7.8347%" y="693" width="0.0114%" height="15" fill="rgb(241,228,46)" fg:x="8246" fg:w="12"/><text x="8.0847%" y="703.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="7.8347%" y="677" width="0.0114%" height="15" fill="rgb(223,209,38)" fg:x="8246" fg:w="12"/><text x="8.0847%" y="687.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="7.8347%" y="661" width="0.0114%" height="15" fill="rgb(236,164,45)" fg:x="8246" fg:w="12"/><text x="8.0847%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (673 samples, 0.64%)</title><rect x="7.8461%" y="725" width="0.6394%" height="15" fill="rgb(231,15,5)" fg:x="8258" fg:w="673"/><text x="8.0961%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (776 samples, 0.74%)</title><rect x="8.5131%" y="709" width="0.7373%" height="15" fill="rgb(252,35,15)" fg:x="8960" fg:w="776"/><text x="8.7631%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (372 samples, 0.35%)</title><rect x="9.4603%" y="677" width="0.3534%" height="15" fill="rgb(248,181,18)" fg:x="9957" fg:w="372"/><text x="9.7103%" y="687.50"></text></g><g><title>concurrent_queue::full_fence (58 samples, 0.06%)</title><rect x="9.8147%" y="677" width="0.0551%" height="15" fill="rgb(233,39,42)" fg:x="10330" fg:w="58"/><text x="10.0647%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (54 samples, 0.05%)</title><rect x="9.8185%" y="661" width="0.0513%" height="15" fill="rgb(238,110,33)" fg:x="10334" fg:w="54"/><text x="10.0685%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (54 samples, 0.05%)</title><rect x="9.8185%" y="645" width="0.0513%" height="15" fill="rgb(233,195,10)" fg:x="10334" fg:w="54"/><text x="10.0685%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (54 samples, 0.05%)</title><rect x="9.8185%" y="629" width="0.0513%" height="15" fill="rgb(254,105,3)" fg:x="10334" fg:w="54"/><text x="10.0685%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (424 samples, 0.40%)</title><rect x="9.8736%" y="677" width="0.4029%" height="15" fill="rgb(221,225,9)" fg:x="10392" fg:w="424"/><text x="10.1236%" y="687.50"></text></g><g><title>core::ptr::read (424 samples, 0.40%)</title><rect x="9.8736%" y="661" width="0.4029%" height="15" fill="rgb(224,227,45)" fg:x="10392" fg:w="424"/><text x="10.1236%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (424 samples, 0.40%)</title><rect x="9.8736%" y="645" width="0.4029%" height="15" fill="rgb(229,198,43)" fg:x="10392" fg:w="424"/><text x="10.1236%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (905 samples, 0.86%)</title><rect x="10.2765%" y="677" width="0.8599%" height="15" fill="rgb(206,209,35)" fg:x="10816" fg:w="905"/><text x="10.5265%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (905 samples, 0.86%)</title><rect x="10.2765%" y="661" width="0.8599%" height="15" fill="rgb(245,195,53)" fg:x="10816" fg:w="905"/><text x="10.5265%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (230 samples, 0.22%)</title><rect x="11.1363%" y="677" width="0.2185%" height="15" fill="rgb(240,92,26)" fg:x="11721" fg:w="230"/><text x="11.3863%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (218 samples, 0.21%)</title><rect x="11.1477%" y="661" width="0.2071%" height="15" fill="rgb(207,40,23)" fg:x="11733" fg:w="218"/><text x="11.3977%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,217 samples, 2.11%)</title><rect x="9.2513%" y="709" width="2.1064%" height="15" fill="rgb(223,111,35)" fg:x="9737" fg:w="2217"/><text x="9.5013%" y="719.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,153 samples, 2.05%)</title><rect x="9.3121%" y="693" width="2.0456%" height="15" fill="rgb(229,147,28)" fg:x="9801" fg:w="2153"/><text x="9.5621%" y="703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (20 samples, 0.02%)</title><rect x="11.3672%" y="693" width="0.0190%" height="15" fill="rgb(211,29,28)" fg:x="11964" fg:w="20"/><text x="11.6172%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (20 samples, 0.02%)</title><rect x="11.3672%" y="677" width="0.0190%" height="15" fill="rgb(228,72,33)" fg:x="11964" fg:w="20"/><text x="11.6172%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="11.3672%" y="661" width="0.0190%" height="15" fill="rgb(205,214,31)" fg:x="11964" fg:w="20"/><text x="11.6172%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (20 samples, 0.02%)</title><rect x="11.3672%" y="645" width="0.0190%" height="15" fill="rgb(224,111,15)" fg:x="11964" fg:w="20"/><text x="11.6172%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (20 samples, 0.02%)</title><rect x="11.3672%" y="629" width="0.0190%" height="15" fill="rgb(253,21,26)" fg:x="11964" fg:w="20"/><text x="11.6172%" y="639.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="11.3672%" y="613" width="0.0190%" height="15" fill="rgb(245,139,43)" fg:x="11964" fg:w="20"/><text x="11.6172%" y="623.50"></text></g><g><title>__GI___lll_lock_wake (14 samples, 0.01%)</title><rect x="11.3729%" y="597" width="0.0133%" height="15" fill="rgb(252,170,7)" fg:x="11970" fg:w="14"/><text x="11.6229%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="11.3729%" y="581" width="0.0133%" height="15" fill="rgb(231,118,14)" fg:x="11970" fg:w="14"/><text x="11.6229%" y="591.50"></text></g><g><title>do_syscall_64 (14 samples, 0.01%)</title><rect x="11.3729%" y="565" width="0.0133%" height="15" fill="rgb(238,83,0)" fg:x="11970" fg:w="14"/><text x="11.6229%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="11.3862%" y="693" width="0.0105%" height="15" fill="rgb(221,39,39)" fg:x="11984" fg:w="11"/><text x="11.6362%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="11.3862%" y="677" width="0.0105%" height="15" fill="rgb(222,119,46)" fg:x="11984" fg:w="11"/><text x="11.6362%" y="687.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.01%)</title><rect x="11.4214%" y="421" width="0.0105%" height="15" fill="rgb(222,165,49)" fg:x="12021" fg:w="11"/><text x="11.6714%" y="431.50"></text></g><g><title>do_futex (11 samples, 0.01%)</title><rect x="11.4214%" y="405" width="0.0105%" height="15" fill="rgb(219,113,52)" fg:x="12021" fg:w="11"/><text x="11.6714%" y="415.50"></text></g><g><title>futex_wake (11 samples, 0.01%)</title><rect x="11.4214%" y="389" width="0.0105%" height="15" fill="rgb(214,7,15)" fg:x="12021" fg:w="11"/><text x="11.6714%" y="399.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (16 samples, 0.02%)</title><rect x="11.4195%" y="517" width="0.0152%" height="15" fill="rgb(235,32,4)" fg:x="12019" fg:w="16"/><text x="11.6695%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (16 samples, 0.02%)</title><rect x="11.4195%" y="501" width="0.0152%" height="15" fill="rgb(238,90,54)" fg:x="12019" fg:w="16"/><text x="11.6695%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (16 samples, 0.02%)</title><rect x="11.4195%" y="485" width="0.0152%" height="15" fill="rgb(213,208,19)" fg:x="12019" fg:w="16"/><text x="11.6695%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (16 samples, 0.02%)</title><rect x="11.4195%" y="469" width="0.0152%" height="15" fill="rgb(233,156,4)" fg:x="12019" fg:w="16"/><text x="11.6695%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="11.4214%" y="453" width="0.0133%" height="15" fill="rgb(207,194,5)" fg:x="12021" fg:w="14"/><text x="11.6714%" y="463.50"></text></g><g><title>do_syscall_64 (14 samples, 0.01%)</title><rect x="11.4214%" y="437" width="0.0133%" height="15" fill="rgb(206,111,30)" fg:x="12021" fg:w="14"/><text x="11.6714%" y="447.50"></text></g><g><title>core::task::wake::Waker::wake (24 samples, 0.02%)</title><rect x="11.4138%" y="597" width="0.0228%" height="15" fill="rgb(243,70,54)" fg:x="12013" fg:w="24"/><text x="11.6638%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (24 samples, 0.02%)</title><rect x="11.4138%" y="581" width="0.0228%" height="15" fill="rgb(242,28,8)" fg:x="12013" fg:w="24"/><text x="11.6638%" y="591.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (24 samples, 0.02%)</title><rect x="11.4138%" y="565" width="0.0228%" height="15" fill="rgb(219,106,18)" fg:x="12013" fg:w="24"/><text x="11.6638%" y="575.50"></text></g><g><title>parking::Unparker::unpark (18 samples, 0.02%)</title><rect x="11.4195%" y="549" width="0.0171%" height="15" fill="rgb(244,222,10)" fg:x="12019" fg:w="18"/><text x="11.6695%" y="559.50"></text></g><g><title>parking::Inner::unpark (18 samples, 0.02%)</title><rect x="11.4195%" y="533" width="0.0171%" height="15" fill="rgb(236,179,52)" fg:x="12019" fg:w="18"/><text x="11.6695%" y="543.50"></text></g><g><title>event_listener::List::notify (37 samples, 0.04%)</title><rect x="11.4043%" y="693" width="0.0352%" height="15" fill="rgb(213,23,39)" fg:x="12003" fg:w="37"/><text x="11.6543%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (37 samples, 0.04%)</title><rect x="11.4043%" y="677" width="0.0352%" height="15" fill="rgb(238,48,10)" fg:x="12003" fg:w="37"/><text x="11.6543%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (37 samples, 0.04%)</title><rect x="11.4043%" y="661" width="0.0352%" height="15" fill="rgb(251,196,23)" fg:x="12003" fg:w="37"/><text x="11.6543%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (37 samples, 0.04%)</title><rect x="11.4043%" y="645" width="0.0352%" height="15" fill="rgb(250,152,24)" fg:x="12003" fg:w="37"/><text x="11.6543%" y="655.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (37 samples, 0.04%)</title><rect x="11.4043%" y="629" width="0.0352%" height="15" fill="rgb(209,150,17)" fg:x="12003" fg:w="37"/><text x="11.6543%" y="639.50"></text></g><g><title>async_executor::State::notify (37 samples, 0.04%)</title><rect x="11.4043%" y="613" width="0.0352%" height="15" fill="rgb(234,202,34)" fg:x="12003" fg:w="37"/><text x="11.6543%" y="623.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3,463 samples, 3.29%)</title><rect x="8.4855%" y="725" width="3.2903%" height="15" fill="rgb(253,148,53)" fg:x="8931" fg:w="3463"/><text x="8.7355%" y="735.50">asy..</text></g><g><title>event_listener::Event::notify (440 samples, 0.42%)</title><rect x="11.3577%" y="709" width="0.4181%" height="15" fill="rgb(218,129,16)" fg:x="11954" fg:w="440"/><text x="11.6077%" y="719.50"></text></g><g><title>event_listener::full_fence (354 samples, 0.34%)</title><rect x="11.4394%" y="693" width="0.3363%" height="15" fill="rgb(216,85,19)" fg:x="12040" fg:w="354"/><text x="11.6894%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (345 samples, 0.33%)</title><rect x="11.4480%" y="677" width="0.3278%" height="15" fill="rgb(235,228,7)" fg:x="12049" fg:w="345"/><text x="11.6980%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (345 samples, 0.33%)</title><rect x="11.4480%" y="661" width="0.3278%" height="15" fill="rgb(245,175,0)" fg:x="12049" fg:w="345"/><text x="11.6980%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (345 samples, 0.33%)</title><rect x="11.4480%" y="645" width="0.3278%" height="15" fill="rgb(208,168,36)" fg:x="12049" fg:w="345"/><text x="11.6980%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (29 samples, 0.03%)</title><rect x="11.7758%" y="725" width="0.0276%" height="15" fill="rgb(246,171,24)" fg:x="12394" fg:w="29"/><text x="12.0258%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (12 samples, 0.01%)</title><rect x="11.8195%" y="677" width="0.0114%" height="15" fill="rgb(215,142,24)" fg:x="12440" fg:w="12"/><text x="12.0695%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (12 samples, 0.01%)</title><rect x="11.8195%" y="661" width="0.0114%" height="15" fill="rgb(250,187,7)" fg:x="12440" fg:w="12"/><text x="12.0695%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="11.8195%" y="645" width="0.0114%" height="15" fill="rgb(228,66,33)" fg:x="12440" fg:w="12"/><text x="12.0695%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="11.8195%" y="629" width="0.0114%" height="15" fill="rgb(234,215,21)" fg:x="12440" fg:w="12"/><text x="12.0695%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="11.8195%" y="613" width="0.0114%" height="15" fill="rgb(222,191,20)" fg:x="12440" fg:w="12"/><text x="12.0695%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="11.8195%" y="597" width="0.0114%" height="15" fill="rgb(245,79,54)" fg:x="12440" fg:w="12"/><text x="12.0695%" y="607.50"></text></g><g><title>event_listener::Inner::lock (23 samples, 0.02%)</title><rect x="11.8318%" y="677" width="0.0219%" height="15" fill="rgb(240,10,37)" fg:x="12453" fg:w="23"/><text x="12.0818%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="11.8318%" y="661" width="0.0219%" height="15" fill="rgb(214,192,32)" fg:x="12453" fg:w="23"/><text x="12.0818%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.02%)</title><rect x="11.8318%" y="645" width="0.0219%" height="15" fill="rgb(209,36,54)" fg:x="12453" fg:w="23"/><text x="12.0818%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (16 samples, 0.02%)</title><rect x="11.8385%" y="629" width="0.0152%" height="15" fill="rgb(220,10,11)" fg:x="12460" fg:w="16"/><text x="12.0885%" y="639.50"></text></g><g><title>___pthread_mutex_lock (16 samples, 0.02%)</title><rect x="11.8385%" y="613" width="0.0152%" height="15" fill="rgb(221,106,17)" fg:x="12460" fg:w="16"/><text x="12.0885%" y="623.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="11.8185%" y="693" width="0.0361%" height="15" fill="rgb(251,142,44)" fg:x="12439" fg:w="38"/><text x="12.0685%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (71 samples, 0.07%)</title><rect x="11.8033%" y="725" width="0.0675%" height="15" fill="rgb(238,13,15)" fg:x="12423" fg:w="71"/><text x="12.0533%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (55 samples, 0.05%)</title><rect x="11.8185%" y="709" width="0.0523%" height="15" fill="rgb(208,107,27)" fg:x="12439" fg:w="55"/><text x="12.0685%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (17 samples, 0.02%)</title><rect x="11.8546%" y="693" width="0.0162%" height="15" fill="rgb(205,136,37)" fg:x="12477" fg:w="17"/><text x="12.1046%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="11.8546%" y="677" width="0.0162%" height="15" fill="rgb(250,205,27)" fg:x="12477" fg:w="17"/><text x="12.1046%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.02%)</title><rect x="11.8546%" y="661" width="0.0162%" height="15" fill="rgb(210,80,43)" fg:x="12477" fg:w="17"/><text x="12.1046%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.02%)</title><rect x="11.8546%" y="645" width="0.0162%" height="15" fill="rgb(247,160,36)" fg:x="12477" fg:w="17"/><text x="12.1046%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="11.8727%" y="709" width="0.0162%" height="15" fill="rgb(234,13,49)" fg:x="12496" fg:w="17"/><text x="12.1227%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.02%)</title><rect x="11.8727%" y="693" width="0.0162%" height="15" fill="rgb(234,122,0)" fg:x="12496" fg:w="17"/><text x="12.1227%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.02%)</title><rect x="11.8727%" y="677" width="0.0162%" height="15" fill="rgb(207,146,38)" fg:x="12496" fg:w="17"/><text x="12.1227%" y="687.50"></text></g><g><title>event_listener::Inner::lock (22 samples, 0.02%)</title><rect x="11.8983%" y="709" width="0.0209%" height="15" fill="rgb(207,177,25)" fg:x="12523" fg:w="22"/><text x="12.1483%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="11.8983%" y="693" width="0.0209%" height="15" fill="rgb(211,178,42)" fg:x="12523" fg:w="22"/><text x="12.1483%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.02%)</title><rect x="11.8993%" y="677" width="0.0200%" height="15" fill="rgb(230,69,54)" fg:x="12524" fg:w="21"/><text x="12.1493%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (21 samples, 0.02%)</title><rect x="11.8993%" y="661" width="0.0200%" height="15" fill="rgb(214,135,41)" fg:x="12524" fg:w="21"/><text x="12.1493%" y="671.50"></text></g><g><title>___pthread_mutex_lock (21 samples, 0.02%)</title><rect x="11.8993%" y="645" width="0.0200%" height="15" fill="rgb(237,67,25)" fg:x="12524" fg:w="21"/><text x="12.1493%" y="655.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,867 samples, 4.62%)</title><rect x="7.3007%" y="805" width="4.6242%" height="15" fill="rgb(222,189,50)" fg:x="7684" fg:w="4867"/><text x="7.5507%" y="815.50">&lt;asyn..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (4,867 samples, 4.62%)</title><rect x="7.3007%" y="789" width="4.6242%" height="15" fill="rgb(245,148,34)" fg:x="7684" fg:w="4867"/><text x="7.5507%" y="799.50">&lt;trem..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,867 samples, 4.62%)</title><rect x="7.3007%" y="773" width="4.6242%" height="15" fill="rgb(222,29,6)" fg:x="7684" fg:w="4867"/><text x="7.5507%" y="783.50">&lt;asyn..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,867 samples, 4.62%)</title><rect x="7.3007%" y="757" width="4.6242%" height="15" fill="rgb(221,189,43)" fg:x="7684" fg:w="4867"/><text x="7.5507%" y="767.50">&lt;asyn..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,867 samples, 4.62%)</title><rect x="7.3007%" y="741" width="4.6242%" height="15" fill="rgb(207,36,27)" fg:x="7684" fg:w="4867"/><text x="7.5507%" y="751.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (57 samples, 0.05%)</title><rect x="11.8708%" y="725" width="0.0542%" height="15" fill="rgb(217,90,24)" fg:x="12494" fg:w="57"/><text x="12.1208%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::ValueAccess&gt;::as_str (14 samples, 0.01%)</title><rect x="11.9601%" y="709" width="0.0133%" height="15" fill="rgb(224,66,35)" fg:x="12588" fg:w="14"/><text x="12.2101%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,250 samples, 1.19%)</title><rect x="11.9734%" y="709" width="1.1876%" height="15" fill="rgb(221,13,50)" fg:x="12602" fg:w="1250"/><text x="12.2234%" y="719.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="13.1677%" y="693" width="0.0124%" height="15" fill="rgb(236,68,49)" fg:x="13859" fg:w="13"/><text x="13.4177%" y="703.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="13.1800%" y="661" width="0.0162%" height="15" fill="rgb(229,146,28)" fg:x="13872" fg:w="17"/><text x="13.4300%" y="671.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="13.1962%" y="661" width="0.0114%" height="15" fill="rgb(225,31,38)" fg:x="13889" fg:w="12"/><text x="13.4462%" y="671.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="13.1962%" y="645" width="0.0114%" height="15" fill="rgb(250,208,3)" fg:x="13889" fg:w="12"/><text x="13.4462%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (11 samples, 0.01%)</title><rect x="13.2143%" y="645" width="0.0105%" height="15" fill="rgb(246,54,23)" fg:x="13908" fg:w="11"/><text x="13.4643%" y="655.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (11 samples, 0.01%)</title><rect x="13.2143%" y="629" width="0.0105%" height="15" fill="rgb(243,76,11)" fg:x="13908" fg:w="11"/><text x="13.4643%" y="639.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (11 samples, 0.01%)</title><rect x="13.2143%" y="613" width="0.0105%" height="15" fill="rgb(245,21,50)" fg:x="13908" fg:w="11"/><text x="13.4643%" y="623.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="13.2143%" y="597" width="0.0105%" height="15" fill="rgb(228,9,43)" fg:x="13908" fg:w="11"/><text x="13.4643%" y="607.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="13.2143%" y="581" width="0.0105%" height="15" fill="rgb(208,100,47)" fg:x="13908" fg:w="11"/><text x="13.4643%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="13.2390%" y="533" width="0.0200%" height="15" fill="rgb(232,26,8)" fg:x="13934" fg:w="21"/><text x="13.4890%" y="543.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="13.2399%" y="517" width="0.0190%" height="15" fill="rgb(216,166,38)" fg:x="13935" fg:w="20"/><text x="13.4899%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (43 samples, 0.04%)</title><rect x="13.2295%" y="581" width="0.0409%" height="15" fill="rgb(251,202,51)" fg:x="13924" fg:w="43"/><text x="13.4795%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (43 samples, 0.04%)</title><rect x="13.2295%" y="565" width="0.0409%" height="15" fill="rgb(254,216,34)" fg:x="13924" fg:w="43"/><text x="13.4795%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (41 samples, 0.04%)</title><rect x="13.2314%" y="549" width="0.0390%" height="15" fill="rgb(251,32,27)" fg:x="13926" fg:w="41"/><text x="13.4814%" y="559.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="13.2589%" y="533" width="0.0114%" height="15" fill="rgb(208,127,28)" fg:x="13955" fg:w="12"/><text x="13.5089%" y="543.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="13.2589%" y="517" width="0.0114%" height="15" fill="rgb(224,137,22)" fg:x="13955" fg:w="12"/><text x="13.5089%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (54 samples, 0.05%)</title><rect x="13.2295%" y="597" width="0.0513%" height="15" fill="rgb(254,70,32)" fg:x="13924" fg:w="54"/><text x="13.4795%" y="607.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="13.2703%" y="581" width="0.0105%" height="15" fill="rgb(229,75,37)" fg:x="13967" fg:w="11"/><text x="13.5203%" y="591.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="13.2703%" y="565" width="0.0105%" height="15" fill="rgb(252,64,23)" fg:x="13967" fg:w="11"/><text x="13.5203%" y="575.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="13.2703%" y="549" width="0.0105%" height="15" fill="rgb(232,162,48)" fg:x="13967" fg:w="11"/><text x="13.5203%" y="559.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="13.2703%" y="533" width="0.0105%" height="15" fill="rgb(246,160,12)" fg:x="13967" fg:w="11"/><text x="13.5203%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (64 samples, 0.06%)</title><rect x="13.2266%" y="613" width="0.0608%" height="15" fill="rgb(247,166,0)" fg:x="13921" fg:w="64"/><text x="13.4766%" y="623.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (19 samples, 0.02%)</title><rect x="13.3074%" y="597" width="0.0181%" height="15" fill="rgb(249,219,21)" fg:x="14006" fg:w="19"/><text x="13.5574%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (371 samples, 0.35%)</title><rect x="13.2247%" y="645" width="0.3525%" height="15" fill="rgb(205,209,3)" fg:x="13919" fg:w="371"/><text x="13.4747%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (371 samples, 0.35%)</title><rect x="13.2247%" y="629" width="0.3525%" height="15" fill="rgb(243,44,1)" fg:x="13919" fg:w="371"/><text x="13.4747%" y="639.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (304 samples, 0.29%)</title><rect x="13.2884%" y="613" width="0.2888%" height="15" fill="rgb(206,159,16)" fg:x="13986" fg:w="304"/><text x="13.5384%" y="623.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (265 samples, 0.25%)</title><rect x="13.3254%" y="597" width="0.2518%" height="15" fill="rgb(244,77,30)" fg:x="14025" fg:w="265"/><text x="13.5754%" y="607.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (265 samples, 0.25%)</title><rect x="13.3254%" y="581" width="0.2518%" height="15" fill="rgb(218,69,12)" fg:x="14025" fg:w="265"/><text x="13.5754%" y="591.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (265 samples, 0.25%)</title><rect x="13.3254%" y="565" width="0.2518%" height="15" fill="rgb(212,87,7)" fg:x="14025" fg:w="265"/><text x="13.5754%" y="575.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (19 samples, 0.02%)</title><rect x="13.5810%" y="613" width="0.0181%" height="15" fill="rgb(245,114,25)" fg:x="14294" fg:w="19"/><text x="13.8310%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (19 samples, 0.02%)</title><rect x="13.5810%" y="597" width="0.0181%" height="15" fill="rgb(210,61,42)" fg:x="14294" fg:w="19"/><text x="13.8310%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="13.5810%" y="581" width="0.0181%" height="15" fill="rgb(211,52,33)" fg:x="14294" fg:w="19"/><text x="13.8310%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (27 samples, 0.03%)</title><rect x="13.5990%" y="613" width="0.0257%" height="15" fill="rgb(234,58,33)" fg:x="14313" fg:w="27"/><text x="13.8490%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (27 samples, 0.03%)</title><rect x="13.5990%" y="597" width="0.0257%" height="15" fill="rgb(220,115,36)" fg:x="14313" fg:w="27"/><text x="13.8490%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (57 samples, 0.05%)</title><rect x="13.5772%" y="645" width="0.0542%" height="15" fill="rgb(243,153,54)" fg:x="14290" fg:w="57"/><text x="13.8272%" y="655.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (53 samples, 0.05%)</title><rect x="13.5810%" y="629" width="0.0504%" height="15" fill="rgb(251,47,18)" fg:x="14294" fg:w="53"/><text x="13.8310%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (21 samples, 0.02%)</title><rect x="13.6371%" y="597" width="0.0200%" height="15" fill="rgb(242,102,42)" fg:x="14353" fg:w="21"/><text x="13.8871%" y="607.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (17 samples, 0.02%)</title><rect x="13.6409%" y="581" width="0.0162%" height="15" fill="rgb(234,31,38)" fg:x="14357" fg:w="17"/><text x="13.8909%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="13.6570%" y="597" width="0.0114%" height="15" fill="rgb(221,117,51)" fg:x="14374" fg:w="12"/><text x="13.9070%" y="607.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (11 samples, 0.01%)</title><rect x="13.6580%" y="581" width="0.0105%" height="15" fill="rgb(212,20,18)" fg:x="14375" fg:w="11"/><text x="13.9080%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="13.6314%" y="645" width="0.0390%" height="15" fill="rgb(245,133,36)" fg:x="14347" fg:w="41"/><text x="13.8814%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="13.6333%" y="629" width="0.0371%" height="15" fill="rgb(212,6,19)" fg:x="14349" fg:w="39"/><text x="13.8833%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="13.6361%" y="613" width="0.0342%" height="15" fill="rgb(218,1,36)" fg:x="14352" fg:w="36"/><text x="13.8861%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::empty (34 samples, 0.03%)</title><rect x="13.6703%" y="645" width="0.0323%" height="15" fill="rgb(246,84,54)" fg:x="14388" fg:w="34"/><text x="13.9203%" y="655.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (34 samples, 0.03%)</title><rect x="13.6703%" y="629" width="0.0323%" height="15" fill="rgb(242,110,6)" fg:x="14388" fg:w="34"/><text x="13.9203%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (762 samples, 0.72%)</title><rect x="13.1800%" y="693" width="0.7240%" height="15" fill="rgb(214,47,5)" fg:x="13872" fg:w="762"/><text x="13.4300%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (762 samples, 0.72%)</title><rect x="13.1800%" y="677" width="0.7240%" height="15" fill="rgb(218,159,25)" fg:x="13872" fg:w="762"/><text x="13.4300%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (733 samples, 0.70%)</title><rect x="13.2076%" y="661" width="0.6964%" height="15" fill="rgb(215,211,28)" fg:x="13901" fg:w="733"/><text x="13.4576%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (212 samples, 0.20%)</title><rect x="13.7026%" y="645" width="0.2014%" height="15" fill="rgb(238,59,32)" fg:x="14422" fg:w="212"/><text x="13.9526%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (212 samples, 0.20%)</title><rect x="13.7026%" y="629" width="0.2014%" height="15" fill="rgb(226,82,3)" fg:x="14422" fg:w="212"/><text x="13.9526%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (2,098 samples, 1.99%)</title><rect x="11.9249%" y="725" width="1.9933%" height="15" fill="rgb(240,164,32)" fg:x="12551" fg:w="2098"/><text x="12.1749%" y="735.50">&lt;..</text></g><g><title>rust_alloc (790 samples, 0.75%)</title><rect x="13.1677%" y="709" width="0.7506%" height="15" fill="rgb(232,46,7)" fg:x="13859" fg:w="790"/><text x="13.4177%" y="719.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="13.9040%" y="693" width="0.0143%" height="15" fill="rgb(229,129,53)" fg:x="14634" fg:w="15"/><text x="14.1540%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="14.1720%" y="549" width="0.0162%" height="15" fill="rgb(234,188,29)" fg:x="14916" fg:w="17"/><text x="14.4220%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (17 samples, 0.02%)</title><rect x="14.1720%" y="533" width="0.0162%" height="15" fill="rgb(246,141,4)" fg:x="14916" fg:w="17"/><text x="14.4220%" y="543.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (16 samples, 0.02%)</title><rect x="14.1729%" y="517" width="0.0152%" height="15" fill="rgb(229,23,39)" fg:x="14917" fg:w="16"/><text x="14.4229%" y="527.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="14.1748%" y="501" width="0.0133%" height="15" fill="rgb(206,12,3)" fg:x="14919" fg:w="14"/><text x="14.4248%" y="511.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="14.1748%" y="485" width="0.0133%" height="15" fill="rgb(252,226,20)" fg:x="14919" fg:w="14"/><text x="14.4248%" y="495.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="14.1748%" y="469" width="0.0133%" height="15" fill="rgb(216,123,35)" fg:x="14919" fg:w="14"/><text x="14.4248%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (15 samples, 0.01%)</title><rect x="14.1910%" y="549" width="0.0143%" height="15" fill="rgb(212,68,40)" fg:x="14936" fg:w="15"/><text x="14.4410%" y="559.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (15 samples, 0.01%)</title><rect x="14.1910%" y="533" width="0.0143%" height="15" fill="rgb(254,125,32)" fg:x="14936" fg:w="15"/><text x="14.4410%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (366 samples, 0.35%)</title><rect x="14.1530%" y="597" width="0.3477%" height="15" fill="rgb(253,97,22)" fg:x="14896" fg:w="366"/><text x="14.4030%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (366 samples, 0.35%)</title><rect x="14.1530%" y="581" width="0.3477%" height="15" fill="rgb(241,101,14)" fg:x="14896" fg:w="366"/><text x="14.4030%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (354 samples, 0.34%)</title><rect x="14.1644%" y="565" width="0.3363%" height="15" fill="rgb(238,103,29)" fg:x="14908" fg:w="354"/><text x="14.4144%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (311 samples, 0.30%)</title><rect x="14.2052%" y="549" width="0.2955%" height="15" fill="rgb(233,195,47)" fg:x="14951" fg:w="311"/><text x="14.4552%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (311 samples, 0.30%)</title><rect x="14.2052%" y="533" width="0.2955%" height="15" fill="rgb(246,218,30)" fg:x="14951" fg:w="311"/><text x="14.4552%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (380 samples, 0.36%)</title><rect x="14.1435%" y="709" width="0.3610%" height="15" fill="rgb(219,145,47)" fg:x="14886" fg:w="380"/><text x="14.3935%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (380 samples, 0.36%)</title><rect x="14.1435%" y="693" width="0.3610%" height="15" fill="rgb(243,12,26)" fg:x="14886" fg:w="380"/><text x="14.3935%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (380 samples, 0.36%)</title><rect x="14.1435%" y="677" width="0.3610%" height="15" fill="rgb(214,87,16)" fg:x="14886" fg:w="380"/><text x="14.3935%" y="687.50"></text></g><g><title>alloc::alloc::alloc (379 samples, 0.36%)</title><rect x="14.1444%" y="661" width="0.3601%" height="15" fill="rgb(208,99,42)" fg:x="14887" fg:w="379"/><text x="14.3944%" y="671.50"></text></g><g><title>__rg_alloc (379 samples, 0.36%)</title><rect x="14.1444%" y="645" width="0.3601%" height="15" fill="rgb(253,99,2)" fg:x="14887" fg:w="379"/><text x="14.3944%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (379 samples, 0.36%)</title><rect x="14.1444%" y="629" width="0.3601%" height="15" fill="rgb(220,168,23)" fg:x="14887" fg:w="379"/><text x="14.3944%" y="639.50"></text></g><g><title>rust_alloc (379 samples, 0.36%)</title><rect x="14.1444%" y="613" width="0.3601%" height="15" fill="rgb(242,38,24)" fg:x="14887" fg:w="379"/><text x="14.3944%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (12 samples, 0.01%)</title><rect x="14.5045%" y="709" width="0.0114%" height="15" fill="rgb(225,182,9)" fg:x="15266" fg:w="12"/><text x="14.7545%" y="719.50"></text></g><g><title>alloc::slice::hack::into_vec (12 samples, 0.01%)</title><rect x="14.5045%" y="693" width="0.0114%" height="15" fill="rgb(243,178,37)" fg:x="15266" fg:w="12"/><text x="14.7545%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (12 samples, 0.01%)</title><rect x="14.5045%" y="677" width="0.0114%" height="15" fill="rgb(232,139,19)" fg:x="15266" fg:w="12"/><text x="14.7545%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="14.5235%" y="709" width="0.0114%" height="15" fill="rgb(225,201,24)" fg:x="15286" fg:w="12"/><text x="14.7735%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="14.5235%" y="693" width="0.0114%" height="15" fill="rgb(221,47,46)" fg:x="15286" fg:w="12"/><text x="14.7735%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="14.5235%" y="677" width="0.0114%" height="15" fill="rgb(249,23,13)" fg:x="15286" fg:w="12"/><text x="14.7735%" y="687.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (12 samples, 0.01%)</title><rect x="14.5349%" y="709" width="0.0114%" height="15" fill="rgb(219,9,5)" fg:x="15298" fg:w="12"/><text x="14.7849%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (12 samples, 0.01%)</title><rect x="14.5349%" y="693" width="0.0114%" height="15" fill="rgb(254,171,16)" fg:x="15298" fg:w="12"/><text x="14.7849%" y="703.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="14.5349%" y="677" width="0.0114%" height="15" fill="rgb(230,171,20)" fg:x="15298" fg:w="12"/><text x="14.7849%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12 samples, 0.01%)</title><rect x="14.5349%" y="661" width="0.0114%" height="15" fill="rgb(210,71,41)" fg:x="15298" fg:w="12"/><text x="14.7849%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (12 samples, 0.01%)</title><rect x="14.5349%" y="645" width="0.0114%" height="15" fill="rgb(206,173,20)" fg:x="15298" fg:w="12"/><text x="14.7849%" y="655.50"></text></g><g><title>core::time::Duration::as_nanos (13 samples, 0.01%)</title><rect x="14.5862%" y="693" width="0.0124%" height="15" fill="rgb(233,88,34)" fg:x="15352" fg:w="13"/><text x="14.8362%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (70 samples, 0.07%)</title><rect x="14.6565%" y="645" width="0.0665%" height="15" fill="rgb(223,209,46)" fg:x="15426" fg:w="70"/><text x="14.9065%" y="655.50"></text></g><g><title>core::cmp::PartialOrd::ge (70 samples, 0.07%)</title><rect x="14.6565%" y="629" width="0.0665%" height="15" fill="rgb(250,43,18)" fg:x="15426" fg:w="70"/><text x="14.9065%" y="639.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (67 samples, 0.06%)</title><rect x="14.6594%" y="613" width="0.0637%" height="15" fill="rgb(208,13,10)" fg:x="15429" fg:w="67"/><text x="14.9094%" y="623.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (67 samples, 0.06%)</title><rect x="14.6594%" y="597" width="0.0637%" height="15" fill="rgb(212,200,36)" fg:x="15429" fg:w="67"/><text x="14.9094%" y="607.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (67 samples, 0.06%)</title><rect x="14.6594%" y="581" width="0.0637%" height="15" fill="rgb(225,90,30)" fg:x="15429" fg:w="67"/><text x="14.9094%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (30 samples, 0.03%)</title><rect x="14.6945%" y="565" width="0.0285%" height="15" fill="rgb(236,182,39)" fg:x="15466" fg:w="30"/><text x="14.9445%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (160 samples, 0.15%)</title><rect x="14.5986%" y="677" width="0.1520%" height="15" fill="rgb(212,144,35)" fg:x="15365" fg:w="160"/><text x="14.8486%" y="687.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (160 samples, 0.15%)</title><rect x="14.5986%" y="661" width="0.1520%" height="15" fill="rgb(228,63,44)" fg:x="15365" fg:w="160"/><text x="14.8486%" y="671.50"></text></g><g><title>core::time::Duration::new (29 samples, 0.03%)</title><rect x="14.7230%" y="645" width="0.0276%" height="15" fill="rgb(228,109,6)" fg:x="15496" fg:w="29"/><text x="14.9730%" y="655.50"></text></g><g><title>std::time::SystemTime::duration_since (175 samples, 0.17%)</title><rect x="14.5986%" y="693" width="0.1663%" height="15" fill="rgb(238,117,24)" fg:x="15365" fg:w="175"/><text x="14.8486%" y="703.50"></text></g><g><title>tremor_common::time::nanotime (15 samples, 0.01%)</title><rect x="14.7506%" y="677" width="0.0143%" height="15" fill="rgb(242,26,26)" fg:x="15525" fg:w="15"/><text x="15.0006%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,512 samples, 8.09%)</title><rect x="7.3007%" y="821" width="8.0874%" height="15" fill="rgb(221,92,48)" fg:x="7684" fg:w="8512"/><text x="7.5507%" y="831.50">tremor_runt..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,645 samples, 3.46%)</title><rect x="11.9249%" y="805" width="3.4632%" height="15" fill="rgb(209,209,32)" fg:x="12551" fg:w="3645"/><text x="12.1749%" y="815.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,645 samples, 3.46%)</title><rect x="11.9249%" y="789" width="3.4632%" height="15" fill="rgb(221,70,22)" fg:x="12551" fg:w="3645"/><text x="12.1749%" y="799.50">&lt;co..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (3,645 samples, 3.46%)</title><rect x="11.9249%" y="773" width="3.4632%" height="15" fill="rgb(248,145,5)" fg:x="12551" fg:w="3645"/><text x="12.1749%" y="783.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (3,645 samples, 3.46%)</title><rect x="11.9249%" y="757" width="3.4632%" height="15" fill="rgb(226,116,26)" fg:x="12551" fg:w="3645"/><text x="12.1749%" y="767.50">tre..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (3,645 samples, 3.46%)</title><rect x="11.9249%" y="741" width="3.4632%" height="15" fill="rgb(244,5,17)" fg:x="12551" fg:w="3645"/><text x="12.1749%" y="751.50">tre..</text></g><g><title>tremor_runtime::postprocessor::postprocess (1,547 samples, 1.47%)</title><rect x="13.9183%" y="725" width="1.4698%" height="15" fill="rgb(252,159,33)" fg:x="14649" fg:w="1547"/><text x="14.1683%" y="735.50"></text></g><g><title>tremor_common::time::nanotime (886 samples, 0.84%)</title><rect x="14.5463%" y="709" width="0.8418%" height="15" fill="rgb(206,71,0)" fg:x="15310" fg:w="886"/><text x="14.7963%" y="719.50"></text></g><g><title>std::time::SystemTime::now (656 samples, 0.62%)</title><rect x="14.7648%" y="693" width="0.6233%" height="15" fill="rgb(233,118,54)" fg:x="15540" fg:w="656"/><text x="15.0148%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (656 samples, 0.62%)</title><rect x="14.7648%" y="677" width="0.6233%" height="15" fill="rgb(234,83,48)" fg:x="15540" fg:w="656"/><text x="15.0148%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::now (656 samples, 0.62%)</title><rect x="14.7648%" y="661" width="0.6233%" height="15" fill="rgb(228,3,54)" fg:x="15540" fg:w="656"/><text x="15.0148%" y="671.50"></text></g><g><title>__clock_gettime_2 (525 samples, 0.50%)</title><rect x="14.8893%" y="645" width="0.4988%" height="15" fill="rgb(226,155,13)" fg:x="15671" fg:w="525"/><text x="15.1393%" y="655.50"></text></g><g><title>__vdso_clock_gettime (510 samples, 0.48%)</title><rect x="14.9036%" y="629" width="0.4846%" height="15" fill="rgb(241,28,37)" fg:x="15686" fg:w="510"/><text x="15.1536%" y="639.50"></text></g><g><title>[[vdso]] (340 samples, 0.32%)</title><rect x="15.0651%" y="613" width="0.3230%" height="15" fill="rgb(233,93,10)" fg:x="15856" fg:w="340"/><text x="15.3151%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="15.3919%" y="757" width="0.0124%" height="15" fill="rgb(225,113,19)" fg:x="16200" fg:w="13"/><text x="15.6419%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (21 samples, 0.02%)</title><rect x="15.6779%" y="741" width="0.0200%" height="15" fill="rgb(241,2,18)" fg:x="16501" fg:w="21"/><text x="15.9279%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (20 samples, 0.02%)</title><rect x="15.6789%" y="725" width="0.0190%" height="15" fill="rgb(228,207,21)" fg:x="16502" fg:w="20"/><text x="15.9289%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (20 samples, 0.02%)</title><rect x="15.6789%" y="709" width="0.0190%" height="15" fill="rgb(213,211,35)" fg:x="16502" fg:w="20"/><text x="15.9289%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (334 samples, 0.32%)</title><rect x="15.7026%" y="741" width="0.3173%" height="15" fill="rgb(209,83,10)" fg:x="16527" fg:w="334"/><text x="15.9526%" y="751.50"></text></g><g><title>core::ptr::read (320 samples, 0.30%)</title><rect x="15.7159%" y="725" width="0.3040%" height="15" fill="rgb(209,164,1)" fg:x="16541" fg:w="320"/><text x="15.9659%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (311 samples, 0.30%)</title><rect x="15.7245%" y="709" width="0.2955%" height="15" fill="rgb(213,184,43)" fg:x="16550" fg:w="311"/><text x="15.9745%" y="719.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="16.0200%" y="741" width="0.0171%" height="15" fill="rgb(231,61,34)" fg:x="16861" fg:w="18"/><text x="16.2700%" y="751.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (18 samples, 0.02%)</title><rect x="16.0200%" y="725" width="0.0171%" height="15" fill="rgb(235,75,3)" fg:x="16861" fg:w="18"/><text x="16.2700%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (159 samples, 0.15%)</title><rect x="16.0979%" y="725" width="0.1511%" height="15" fill="rgb(220,106,47)" fg:x="16943" fg:w="159"/><text x="16.3479%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (50 samples, 0.05%)</title><rect x="16.4304%" y="677" width="0.0475%" height="15" fill="rgb(210,196,33)" fg:x="17293" fg:w="50"/><text x="16.6804%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (427 samples, 0.41%)</title><rect x="16.5881%" y="661" width="0.4057%" height="15" fill="rgb(229,154,42)" fg:x="17459" fg:w="427"/><text x="16.8381%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (427 samples, 0.41%)</title><rect x="16.5881%" y="645" width="0.4057%" height="15" fill="rgb(228,114,26)" fg:x="17459" fg:w="427"/><text x="16.8381%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (463 samples, 0.44%)</title><rect x="16.9938%" y="661" width="0.4399%" height="15" fill="rgb(208,144,1)" fg:x="17886" fg:w="463"/><text x="17.2438%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (459 samples, 0.44%)</title><rect x="16.9976%" y="645" width="0.4361%" height="15" fill="rgb(239,112,37)" fg:x="17890" fg:w="459"/><text x="17.2476%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (11 samples, 0.01%)</title><rect x="17.4337%" y="661" width="0.0105%" height="15" fill="rgb(210,96,50)" fg:x="18349" fg:w="11"/><text x="17.6837%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_store (11 samples, 0.01%)</title><rect x="17.4337%" y="645" width="0.0105%" height="15" fill="rgb(222,178,2)" fg:x="18349" fg:w="11"/><text x="17.6837%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,018 samples, 0.97%)</title><rect x="16.4779%" y="677" width="0.9672%" height="15" fill="rgb(226,74,18)" fg:x="17343" fg:w="1018"/><text x="16.7279%" y="687.50"></text></g><g><title>_raw_spin_lock (20 samples, 0.02%)</title><rect x="17.5962%" y="469" width="0.0190%" height="15" fill="rgb(225,67,54)" fg:x="18520" fg:w="20"/><text x="17.8462%" y="479.50"></text></g><g><title>futex_wake_mark (24 samples, 0.02%)</title><rect x="17.6238%" y="469" width="0.0228%" height="15" fill="rgb(251,92,32)" fg:x="18549" fg:w="24"/><text x="17.8738%" y="479.50"></text></g><g><title>__futex_unqueue (13 samples, 0.01%)</title><rect x="17.6342%" y="453" width="0.0124%" height="15" fill="rgb(228,149,22)" fg:x="18560" fg:w="13"/><text x="17.8842%" y="463.50"></text></g><g><title>__smp_call_single_queue (20 samples, 0.02%)</title><rect x="17.7093%" y="421" width="0.0190%" height="15" fill="rgb(243,54,13)" fg:x="18639" fg:w="20"/><text x="17.9593%" y="431.50"></text></g><g><title>llist_add_batch (20 samples, 0.02%)</title><rect x="17.7093%" y="405" width="0.0190%" height="15" fill="rgb(243,180,28)" fg:x="18639" fg:w="20"/><text x="17.9593%" y="415.50"></text></g><g><title>__x2apic_send_IPI_dest (18 samples, 0.02%)</title><rect x="17.7283%" y="421" width="0.0171%" height="15" fill="rgb(208,167,24)" fg:x="18659" fg:w="18"/><text x="17.9783%" y="431.50"></text></g><g><title>native_write_msr (18 samples, 0.02%)</title><rect x="17.7283%" y="405" width="0.0171%" height="15" fill="rgb(245,73,45)" fg:x="18659" fg:w="18"/><text x="17.9783%" y="415.50"></text></g><g><title>ttwu_queue_wakelist (68 samples, 0.06%)</title><rect x="17.6960%" y="437" width="0.0646%" height="15" fill="rgb(237,203,48)" fg:x="18625" fg:w="68"/><text x="17.9460%" y="447.50"></text></g><g><title>__x64_sys_futex (224 samples, 0.21%)</title><rect x="17.5487%" y="517" width="0.2128%" height="15" fill="rgb(211,197,16)" fg:x="18470" fg:w="224"/><text x="17.7987%" y="527.50"></text></g><g><title>do_futex (211 samples, 0.20%)</title><rect x="17.5610%" y="501" width="0.2005%" height="15" fill="rgb(243,99,51)" fg:x="18483" fg:w="211"/><text x="17.8110%" y="511.50"></text></g><g><title>futex_wake (209 samples, 0.20%)</title><rect x="17.5629%" y="485" width="0.1986%" height="15" fill="rgb(215,123,29)" fg:x="18485" fg:w="209"/><text x="17.8129%" y="495.50"></text></g><g><title>wake_up_q (108 samples, 0.10%)</title><rect x="17.6589%" y="469" width="0.1026%" height="15" fill="rgb(239,186,37)" fg:x="18586" fg:w="108"/><text x="17.9089%" y="479.50"></text></g><g><title>try_to_wake_up (101 samples, 0.10%)</title><rect x="17.6656%" y="453" width="0.0960%" height="15" fill="rgb(252,136,39)" fg:x="18593" fg:w="101"/><text x="17.9156%" y="463.50"></text></g><g><title>syscall_exit_to_user_mode (132 samples, 0.13%)</title><rect x="17.7644%" y="517" width="0.1254%" height="15" fill="rgb(223,213,32)" fg:x="18697" fg:w="132"/><text x="18.0144%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (369 samples, 0.35%)</title><rect x="17.5439%" y="549" width="0.3506%" height="15" fill="rgb(233,115,5)" fg:x="18465" fg:w="369"/><text x="17.7939%" y="559.50"></text></g><g><title>do_syscall_64 (367 samples, 0.35%)</title><rect x="17.5458%" y="533" width="0.3487%" height="15" fill="rgb(207,226,44)" fg:x="18467" fg:w="367"/><text x="17.7958%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (463 samples, 0.44%)</title><rect x="17.4660%" y="661" width="0.4399%" height="15" fill="rgb(208,126,0)" fg:x="18383" fg:w="463"/><text x="17.7160%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (459 samples, 0.44%)</title><rect x="17.4698%" y="645" width="0.4361%" height="15" fill="rgb(244,66,21)" fg:x="18387" fg:w="459"/><text x="17.7198%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (459 samples, 0.44%)</title><rect x="17.4698%" y="629" width="0.4361%" height="15" fill="rgb(222,97,12)" fg:x="18387" fg:w="459"/><text x="17.7198%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (459 samples, 0.44%)</title><rect x="17.4698%" y="613" width="0.4361%" height="15" fill="rgb(219,213,19)" fg:x="18387" fg:w="459"/><text x="17.7198%" y="623.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (458 samples, 0.44%)</title><rect x="17.4708%" y="597" width="0.4352%" height="15" fill="rgb(252,169,30)" fg:x="18388" fg:w="458"/><text x="17.7208%" y="607.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (458 samples, 0.44%)</title><rect x="17.4708%" y="581" width="0.4352%" height="15" fill="rgb(206,32,51)" fg:x="18388" fg:w="458"/><text x="17.7208%" y="591.50"></text></g><g><title>__GI___lll_lock_wake (397 samples, 0.38%)</title><rect x="17.5287%" y="565" width="0.3772%" height="15" fill="rgb(250,172,42)" fg:x="18449" fg:w="397"/><text x="17.7787%" y="575.50"></text></g><g><title>syscall_return_via_sysret (12 samples, 0.01%)</title><rect x="17.8945%" y="549" width="0.0114%" height="15" fill="rgb(209,34,43)" fg:x="18834" fg:w="12"/><text x="18.1445%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (36 samples, 0.03%)</title><rect x="17.9059%" y="661" width="0.0342%" height="15" fill="rgb(223,11,35)" fg:x="18846" fg:w="36"/><text x="18.1559%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.03%)</title><rect x="17.9059%" y="645" width="0.0342%" height="15" fill="rgb(251,219,26)" fg:x="18846" fg:w="36"/><text x="18.1559%" y="655.50"></text></g><g><title>__x64_sys_futex (28 samples, 0.03%)</title><rect x="18.0580%" y="533" width="0.0266%" height="15" fill="rgb(231,119,3)" fg:x="19006" fg:w="28"/><text x="18.3080%" y="543.50"></text></g><g><title>do_futex (25 samples, 0.02%)</title><rect x="18.0608%" y="517" width="0.0238%" height="15" fill="rgb(216,97,11)" fg:x="19009" fg:w="25"/><text x="18.3108%" y="527.50"></text></g><g><title>futex_wait (24 samples, 0.02%)</title><rect x="18.0618%" y="501" width="0.0228%" height="15" fill="rgb(223,59,9)" fg:x="19010" fg:w="24"/><text x="18.3118%" y="511.50"></text></g><g><title>futex_wait_setup (20 samples, 0.02%)</title><rect x="18.0656%" y="485" width="0.0190%" height="15" fill="rgb(233,93,31)" fg:x="19014" fg:w="20"/><text x="18.3156%" y="495.50"></text></g><g><title>syscall_exit_to_user_mode (20 samples, 0.02%)</title><rect x="18.0855%" y="533" width="0.0190%" height="15" fill="rgb(239,81,33)" fg:x="19035" fg:w="20"/><text x="18.3355%" y="543.50"></text></g><g><title>__GI___lll_lock_wait (76 samples, 0.07%)</title><rect x="18.0352%" y="581" width="0.0722%" height="15" fill="rgb(213,120,34)" fg:x="18982" fg:w="76"/><text x="18.2852%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (56 samples, 0.05%)</title><rect x="18.0542%" y="565" width="0.0532%" height="15" fill="rgb(243,49,53)" fg:x="19002" fg:w="56"/><text x="18.3042%" y="575.50"></text></g><g><title>do_syscall_64 (53 samples, 0.05%)</title><rect x="18.0570%" y="549" width="0.0504%" height="15" fill="rgb(247,216,33)" fg:x="19005" fg:w="53"/><text x="18.3070%" y="559.50"></text></g><g><title>event_listener::Inner::lock (172 samples, 0.16%)</title><rect x="17.9458%" y="661" width="0.1634%" height="15" fill="rgb(226,26,14)" fg:x="18888" fg:w="172"/><text x="18.1958%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (172 samples, 0.16%)</title><rect x="17.9458%" y="645" width="0.1634%" height="15" fill="rgb(215,49,53)" fg:x="18888" fg:w="172"/><text x="18.1958%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (167 samples, 0.16%)</title><rect x="17.9506%" y="629" width="0.1587%" height="15" fill="rgb(245,162,40)" fg:x="18893" fg:w="167"/><text x="18.2006%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (162 samples, 0.15%)</title><rect x="17.9553%" y="613" width="0.1539%" height="15" fill="rgb(229,68,17)" fg:x="18898" fg:w="162"/><text x="18.2053%" y="623.50"></text></g><g><title>___pthread_mutex_lock (162 samples, 0.15%)</title><rect x="17.9553%" y="597" width="0.1539%" height="15" fill="rgb(213,182,10)" fg:x="18898" fg:w="162"/><text x="18.2053%" y="607.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,610 samples, 2.48%)</title><rect x="16.3933%" y="693" width="2.4798%" height="15" fill="rgb(245,125,30)" fg:x="17254" fg:w="2610"/><text x="16.6433%" y="703.50">as..</text></g><g><title>event_listener::Event::notify (1,503 samples, 1.43%)</title><rect x="17.4451%" y="677" width="1.4280%" height="15" fill="rgb(232,202,2)" fg:x="18361" fg:w="1503"/><text x="17.6951%" y="687.50"></text></g><g><title>event_listener::full_fence (804 samples, 0.76%)</title><rect x="18.1093%" y="661" width="0.7639%" height="15" fill="rgb(237,140,51)" fg:x="19060" fg:w="804"/><text x="18.3593%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (781 samples, 0.74%)</title><rect x="18.1311%" y="645" width="0.7420%" height="15" fill="rgb(236,157,25)" fg:x="19083" fg:w="781"/><text x="18.3811%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (781 samples, 0.74%)</title><rect x="18.1311%" y="629" width="0.7420%" height="15" fill="rgb(219,209,0)" fg:x="19083" fg:w="781"/><text x="18.3811%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (781 samples, 0.74%)</title><rect x="18.1311%" y="613" width="0.7420%" height="15" fill="rgb(240,116,54)" fg:x="19083" fg:w="781"/><text x="18.3811%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (29 samples, 0.03%)</title><rect x="18.8732%" y="693" width="0.0276%" height="15" fill="rgb(216,10,36)" fg:x="19864" fg:w="29"/><text x="19.1232%" y="703.50"></text></g><g><title>syscall_exit_to_user_mode (13 samples, 0.01%)</title><rect x="18.9321%" y="533" width="0.0124%" height="15" fill="rgb(222,72,44)" fg:x="19926" fg:w="13"/><text x="19.1821%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (32 samples, 0.03%)</title><rect x="18.9159%" y="677" width="0.0304%" height="15" fill="rgb(232,159,9)" fg:x="19909" fg:w="32"/><text x="19.1659%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (32 samples, 0.03%)</title><rect x="18.9159%" y="661" width="0.0304%" height="15" fill="rgb(210,39,32)" fg:x="19909" fg:w="32"/><text x="19.1659%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="18.9159%" y="645" width="0.0304%" height="15" fill="rgb(216,194,45)" fg:x="19909" fg:w="32"/><text x="19.1659%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (32 samples, 0.03%)</title><rect x="18.9159%" y="629" width="0.0304%" height="15" fill="rgb(218,18,35)" fg:x="19909" fg:w="32"/><text x="19.1659%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (32 samples, 0.03%)</title><rect x="18.9159%" y="613" width="0.0304%" height="15" fill="rgb(207,83,51)" fg:x="19909" fg:w="32"/><text x="19.1659%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (32 samples, 0.03%)</title><rect x="18.9159%" y="597" width="0.0304%" height="15" fill="rgb(225,63,43)" fg:x="19909" fg:w="32"/><text x="19.1659%" y="607.50"></text></g><g><title>__GI___lll_lock_wake (30 samples, 0.03%)</title><rect x="18.9178%" y="581" width="0.0285%" height="15" fill="rgb(207,57,36)" fg:x="19911" fg:w="30"/><text x="19.1678%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28 samples, 0.03%)</title><rect x="18.9197%" y="565" width="0.0266%" height="15" fill="rgb(216,99,33)" fg:x="19913" fg:w="28"/><text x="19.1697%" y="575.50"></text></g><g><title>do_syscall_64 (26 samples, 0.02%)</title><rect x="18.9216%" y="549" width="0.0247%" height="15" fill="rgb(225,42,16)" fg:x="19915" fg:w="26"/><text x="19.1716%" y="559.50"></text></g><g><title>dequeue_task_fair (13 samples, 0.01%)</title><rect x="18.9777%" y="453" width="0.0124%" height="15" fill="rgb(220,201,45)" fg:x="19974" fg:w="13"/><text x="19.2277%" y="463.50"></text></g><g><title>psi_task_switch (11 samples, 0.01%)</title><rect x="18.9967%" y="453" width="0.0105%" height="15" fill="rgb(225,33,4)" fg:x="19994" fg:w="11"/><text x="19.2467%" y="463.50"></text></g><g><title>futex_wait_queue (43 samples, 0.04%)</title><rect x="18.9720%" y="501" width="0.0409%" height="15" fill="rgb(224,33,50)" fg:x="19968" fg:w="43"/><text x="19.2220%" y="511.50"></text></g><g><title>schedule (40 samples, 0.04%)</title><rect x="18.9748%" y="485" width="0.0380%" height="15" fill="rgb(246,198,51)" fg:x="19971" fg:w="40"/><text x="19.2248%" y="495.50"></text></g><g><title>__schedule (40 samples, 0.04%)</title><rect x="18.9748%" y="469" width="0.0380%" height="15" fill="rgb(205,22,4)" fg:x="19971" fg:w="40"/><text x="19.2248%" y="479.50"></text></g><g><title>__x64_sys_futex (53 samples, 0.05%)</title><rect x="18.9701%" y="549" width="0.0504%" height="15" fill="rgb(206,3,8)" fg:x="19966" fg:w="53"/><text x="19.2201%" y="559.50"></text></g><g><title>do_futex (52 samples, 0.05%)</title><rect x="18.9710%" y="533" width="0.0494%" height="15" fill="rgb(251,23,15)" fg:x="19967" fg:w="52"/><text x="19.2210%" y="543.50"></text></g><g><title>futex_wait (52 samples, 0.05%)</title><rect x="18.9710%" y="517" width="0.0494%" height="15" fill="rgb(252,88,28)" fg:x="19967" fg:w="52"/><text x="19.2210%" y="527.50"></text></g><g><title>syscall_exit_to_user_mode (19 samples, 0.02%)</title><rect x="19.0214%" y="549" width="0.0181%" height="15" fill="rgb(212,127,14)" fg:x="20020" fg:w="19"/><text x="19.2714%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (77 samples, 0.07%)</title><rect x="18.9672%" y="581" width="0.0732%" height="15" fill="rgb(247,145,37)" fg:x="19963" fg:w="77"/><text x="19.2172%" y="591.50"></text></g><g><title>do_syscall_64 (76 samples, 0.07%)</title><rect x="18.9682%" y="565" width="0.0722%" height="15" fill="rgb(209,117,53)" fg:x="19964" fg:w="76"/><text x="19.2182%" y="575.50"></text></g><g><title>event_listener::Inner::lock (91 samples, 0.09%)</title><rect x="18.9549%" y="677" width="0.0865%" height="15" fill="rgb(212,90,42)" fg:x="19950" fg:w="91"/><text x="19.2049%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (91 samples, 0.09%)</title><rect x="18.9549%" y="661" width="0.0865%" height="15" fill="rgb(218,164,37)" fg:x="19950" fg:w="91"/><text x="19.2049%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (88 samples, 0.08%)</title><rect x="18.9577%" y="645" width="0.0836%" height="15" fill="rgb(246,65,34)" fg:x="19953" fg:w="88"/><text x="19.2077%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (88 samples, 0.08%)</title><rect x="18.9577%" y="629" width="0.0836%" height="15" fill="rgb(231,100,33)" fg:x="19953" fg:w="88"/><text x="19.2077%" y="639.50"></text></g><g><title>___pthread_mutex_lock (88 samples, 0.08%)</title><rect x="18.9577%" y="613" width="0.0836%" height="15" fill="rgb(228,126,14)" fg:x="19953" fg:w="88"/><text x="19.2077%" y="623.50"></text></g><g><title>__GI___lll_lock_wait (81 samples, 0.08%)</title><rect x="18.9644%" y="597" width="0.0770%" height="15" fill="rgb(215,173,21)" fg:x="19960" fg:w="81"/><text x="19.2144%" y="607.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (3,098 samples, 2.94%)</title><rect x="16.3287%" y="709" width="2.9435%" height="15" fill="rgb(210,6,40)" fg:x="17186" fg:w="3098"/><text x="16.5787%" y="719.50">&lt;a..</text></g><g><title>event_listener::Event::notify (386 samples, 0.37%)</title><rect x="18.9055%" y="693" width="0.3667%" height="15" fill="rgb(212,48,18)" fg:x="19898" fg:w="386"/><text x="19.1555%" y="703.50"></text></g><g><title>event_listener::full_fence (243 samples, 0.23%)</title><rect x="19.0413%" y="677" width="0.2309%" height="15" fill="rgb(230,214,11)" fg:x="20041" fg:w="243"/><text x="19.2913%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (230 samples, 0.22%)</title><rect x="19.0537%" y="661" width="0.2185%" height="15" fill="rgb(254,105,39)" fg:x="20054" fg:w="230"/><text x="19.3037%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (230 samples, 0.22%)</title><rect x="19.0537%" y="645" width="0.2185%" height="15" fill="rgb(245,158,5)" fg:x="20054" fg:w="230"/><text x="19.3037%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (230 samples, 0.22%)</title><rect x="19.0537%" y="629" width="0.2185%" height="15" fill="rgb(249,208,11)" fg:x="20054" fg:w="230"/><text x="19.3037%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,428 samples, 3.26%)</title><rect x="16.0371%" y="741" width="3.2570%" height="15" fill="rgb(210,39,28)" fg:x="16879" fg:w="3428"/><text x="16.2871%" y="751.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (3,205 samples, 3.05%)</title><rect x="16.2489%" y="725" width="3.0451%" height="15" fill="rgb(211,56,53)" fg:x="17102" fg:w="3205"/><text x="16.4989%" y="735.50">tre..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="19.2732%" y="709" width="0.0209%" height="15" fill="rgb(226,201,30)" fg:x="20285" fg:w="22"/><text x="19.5232%" y="719.50"></text></g><g><title>rust_alloc (54 samples, 0.05%)</title><rect x="19.3207%" y="437" width="0.0513%" height="15" fill="rgb(239,101,34)" fg:x="20335" fg:w="54"/><text x="19.5707%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="19.3824%" y="421" width="0.0342%" height="15" fill="rgb(226,209,5)" fg:x="20400" fg:w="36"/><text x="19.6324%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (36 samples, 0.03%)</title><rect x="19.3824%" y="405" width="0.0342%" height="15" fill="rgb(250,105,47)" fg:x="20400" fg:w="36"/><text x="19.6324%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (28 samples, 0.03%)</title><rect x="19.3900%" y="389" width="0.0266%" height="15" fill="rgb(230,72,3)" fg:x="20408" fg:w="28"/><text x="19.6400%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (23 samples, 0.02%)</title><rect x="19.3948%" y="373" width="0.0219%" height="15" fill="rgb(232,218,39)" fg:x="20413" fg:w="23"/><text x="19.6448%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (23 samples, 0.02%)</title><rect x="19.3948%" y="357" width="0.0219%" height="15" fill="rgb(248,166,6)" fg:x="20413" fg:w="23"/><text x="19.6448%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (23 samples, 0.02%)</title><rect x="19.3948%" y="341" width="0.0219%" height="15" fill="rgb(247,89,20)" fg:x="20413" fg:w="23"/><text x="19.6448%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (121 samples, 0.11%)</title><rect x="19.4195%" y="421" width="0.1150%" height="15" fill="rgb(248,130,54)" fg:x="20439" fg:w="121"/><text x="19.6695%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (121 samples, 0.11%)</title><rect x="19.4195%" y="405" width="0.1150%" height="15" fill="rgb(234,196,4)" fg:x="20439" fg:w="121"/><text x="19.6695%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (612 samples, 0.58%)</title><rect x="19.3188%" y="469" width="0.5815%" height="15" fill="rgb(250,143,31)" fg:x="20333" fg:w="612"/><text x="19.5688%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (610 samples, 0.58%)</title><rect x="19.3207%" y="453" width="0.5796%" height="15" fill="rgb(211,110,34)" fg:x="20335" fg:w="610"/><text x="19.5707%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (552 samples, 0.52%)</title><rect x="19.3758%" y="437" width="0.5245%" height="15" fill="rgb(215,124,48)" fg:x="20393" fg:w="552"/><text x="19.6258%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (385 samples, 0.37%)</title><rect x="19.5344%" y="421" width="0.3658%" height="15" fill="rgb(216,46,13)" fg:x="20560" fg:w="385"/><text x="19.7844%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (385 samples, 0.37%)</title><rect x="19.5344%" y="405" width="0.3658%" height="15" fill="rgb(205,184,25)" fg:x="20560" fg:w="385"/><text x="19.7844%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (639 samples, 0.61%)</title><rect x="19.3007%" y="613" width="0.6071%" height="15" fill="rgb(228,1,10)" fg:x="20314" fg:w="639"/><text x="19.5507%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (639 samples, 0.61%)</title><rect x="19.3007%" y="597" width="0.6071%" height="15" fill="rgb(213,116,27)" fg:x="20314" fg:w="639"/><text x="19.5507%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (632 samples, 0.60%)</title><rect x="19.3074%" y="581" width="0.6005%" height="15" fill="rgb(241,95,50)" fg:x="20321" fg:w="632"/><text x="19.5574%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (632 samples, 0.60%)</title><rect x="19.3074%" y="565" width="0.6005%" height="15" fill="rgb(238,48,32)" fg:x="20321" fg:w="632"/><text x="19.5574%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (632 samples, 0.60%)</title><rect x="19.3074%" y="549" width="0.6005%" height="15" fill="rgb(235,113,49)" fg:x="20321" fg:w="632"/><text x="19.5574%" y="559.50"></text></g><g><title>alloc::alloc::alloc (626 samples, 0.59%)</title><rect x="19.3131%" y="533" width="0.5948%" height="15" fill="rgb(205,127,43)" fg:x="20327" fg:w="626"/><text x="19.5631%" y="543.50"></text></g><g><title>__rg_alloc (626 samples, 0.59%)</title><rect x="19.3131%" y="517" width="0.5948%" height="15" fill="rgb(250,162,2)" fg:x="20327" fg:w="626"/><text x="19.5631%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (626 samples, 0.59%)</title><rect x="19.3131%" y="501" width="0.5948%" height="15" fill="rgb(220,13,41)" fg:x="20327" fg:w="626"/><text x="19.5631%" y="511.50"></text></g><g><title>rust_alloc (624 samples, 0.59%)</title><rect x="19.3150%" y="485" width="0.5929%" height="15" fill="rgb(249,221,25)" fg:x="20329" fg:w="624"/><text x="19.5650%" y="495.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (688 samples, 0.65%)</title><rect x="19.3007%" y="741" width="0.6537%" height="15" fill="rgb(215,208,19)" fg:x="20314" fg:w="688"/><text x="19.5507%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (688 samples, 0.65%)</title><rect x="19.3007%" y="725" width="0.6537%" height="15" fill="rgb(236,175,2)" fg:x="20314" fg:w="688"/><text x="19.5507%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (688 samples, 0.65%)</title><rect x="19.3007%" y="709" width="0.6537%" height="15" fill="rgb(241,52,2)" fg:x="20314" fg:w="688"/><text x="19.5507%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (688 samples, 0.65%)</title><rect x="19.3007%" y="693" width="0.6537%" height="15" fill="rgb(248,140,14)" fg:x="20314" fg:w="688"/><text x="19.5507%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (688 samples, 0.65%)</title><rect x="19.3007%" y="677" width="0.6537%" height="15" fill="rgb(253,22,42)" fg:x="20314" fg:w="688"/><text x="19.5507%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (688 samples, 0.65%)</title><rect x="19.3007%" y="661" width="0.6537%" height="15" fill="rgb(234,61,47)" fg:x="20314" fg:w="688"/><text x="19.5507%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (688 samples, 0.65%)</title><rect x="19.3007%" y="645" width="0.6537%" height="15" fill="rgb(208,226,15)" fg:x="20314" fg:w="688"/><text x="19.5507%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (688 samples, 0.65%)</title><rect x="19.3007%" y="629" width="0.6537%" height="15" fill="rgb(217,221,4)" fg:x="20314" fg:w="688"/><text x="19.5507%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (49 samples, 0.05%)</title><rect x="19.9078%" y="613" width="0.0466%" height="15" fill="rgb(212,174,34)" fg:x="20953" fg:w="49"/><text x="20.1578%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.05%)</title><rect x="19.9078%" y="597" width="0.0466%" height="15" fill="rgb(253,83,4)" fg:x="20953" fg:w="49"/><text x="20.1578%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (39 samples, 0.04%)</title><rect x="19.9173%" y="581" width="0.0371%" height="15" fill="rgb(250,195,49)" fg:x="20963" fg:w="39"/><text x="20.1673%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (895 samples, 0.85%)</title><rect x="19.9544%" y="741" width="0.8504%" height="15" fill="rgb(241,192,25)" fg:x="21002" fg:w="895"/><text x="20.2044%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (466 samples, 0.44%)</title><rect x="20.8285%" y="725" width="0.4428%" height="15" fill="rgb(208,124,10)" fg:x="21922" fg:w="466"/><text x="21.0785%" y="735.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="21.2912%" y="581" width="0.0162%" height="15" fill="rgb(222,33,0)" fg:x="22409" fg:w="17"/><text x="21.5412%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="21.3340%" y="453" width="0.0181%" height="15" fill="rgb(234,209,28)" fg:x="22454" fg:w="19"/><text x="21.5840%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="21.3349%" y="437" width="0.0171%" height="15" fill="rgb(224,11,23)" fg:x="22455" fg:w="18"/><text x="21.5849%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (41 samples, 0.04%)</title><rect x="21.3264%" y="501" width="0.0390%" height="15" fill="rgb(232,99,1)" fg:x="22446" fg:w="41"/><text x="21.5764%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (41 samples, 0.04%)</title><rect x="21.3264%" y="485" width="0.0390%" height="15" fill="rgb(237,95,45)" fg:x="22446" fg:w="41"/><text x="21.5764%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (36 samples, 0.03%)</title><rect x="21.3311%" y="469" width="0.0342%" height="15" fill="rgb(208,109,11)" fg:x="22451" fg:w="36"/><text x="21.5811%" y="479.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="21.3520%" y="453" width="0.0133%" height="15" fill="rgb(216,190,48)" fg:x="22473" fg:w="14"/><text x="21.6020%" y="463.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="21.3520%" y="437" width="0.0133%" height="15" fill="rgb(251,171,36)" fg:x="22473" fg:w="14"/><text x="21.6020%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (54 samples, 0.05%)</title><rect x="21.3264%" y="517" width="0.0513%" height="15" fill="rgb(230,62,22)" fg:x="22446" fg:w="54"/><text x="21.5764%" y="527.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="21.3653%" y="501" width="0.0124%" height="15" fill="rgb(225,114,35)" fg:x="22487" fg:w="13"/><text x="21.6153%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="21.3653%" y="485" width="0.0124%" height="15" fill="rgb(215,118,42)" fg:x="22487" fg:w="13"/><text x="21.6153%" y="495.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="21.3653%" y="469" width="0.0124%" height="15" fill="rgb(243,119,21)" fg:x="22487" fg:w="13"/><text x="21.6153%" y="479.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="21.3653%" y="453" width="0.0124%" height="15" fill="rgb(252,177,53)" fg:x="22487" fg:w="13"/><text x="21.6153%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (74 samples, 0.07%)</title><rect x="21.3169%" y="533" width="0.0703%" height="15" fill="rgb(237,209,29)" fg:x="22436" fg:w="74"/><text x="21.5669%" y="543.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (42 samples, 0.04%)</title><rect x="21.4252%" y="517" width="0.0399%" height="15" fill="rgb(212,65,23)" fg:x="22550" fg:w="42"/><text x="21.6752%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (439 samples, 0.42%)</title><rect x="21.3159%" y="565" width="0.4171%" height="15" fill="rgb(230,222,46)" fg:x="22435" fg:w="439"/><text x="21.5659%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (439 samples, 0.42%)</title><rect x="21.3159%" y="549" width="0.4171%" height="15" fill="rgb(215,135,32)" fg:x="22435" fg:w="439"/><text x="21.5659%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (364 samples, 0.35%)</title><rect x="21.3872%" y="533" width="0.3458%" height="15" fill="rgb(246,101,22)" fg:x="22510" fg:w="364"/><text x="21.6372%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (282 samples, 0.27%)</title><rect x="21.4651%" y="517" width="0.2679%" height="15" fill="rgb(206,107,13)" fg:x="22592" fg:w="282"/><text x="21.7151%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (282 samples, 0.27%)</title><rect x="21.4651%" y="501" width="0.2679%" height="15" fill="rgb(250,100,44)" fg:x="22592" fg:w="282"/><text x="21.7151%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (282 samples, 0.27%)</title><rect x="21.4651%" y="485" width="0.2679%" height="15" fill="rgb(231,147,38)" fg:x="22592" fg:w="282"/><text x="21.7151%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (14 samples, 0.01%)</title><rect x="21.7425%" y="517" width="0.0133%" height="15" fill="rgb(229,8,40)" fg:x="22884" fg:w="14"/><text x="21.9925%" y="527.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (12 samples, 0.01%)</title><rect x="21.7444%" y="501" width="0.0114%" height="15" fill="rgb(221,135,30)" fg:x="22886" fg:w="12"/><text x="21.9944%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (22 samples, 0.02%)</title><rect x="21.7558%" y="501" width="0.0209%" height="15" fill="rgb(249,193,18)" fg:x="22898" fg:w="22"/><text x="22.0058%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (22 samples, 0.02%)</title><rect x="21.7558%" y="485" width="0.0209%" height="15" fill="rgb(209,133,39)" fg:x="22898" fg:w="22"/><text x="22.0058%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (66 samples, 0.06%)</title><rect x="21.7387%" y="565" width="0.0627%" height="15" fill="rgb(232,100,14)" fg:x="22880" fg:w="66"/><text x="21.9887%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="21.7397%" y="549" width="0.0618%" height="15" fill="rgb(224,185,1)" fg:x="22881" fg:w="65"/><text x="21.9897%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (64 samples, 0.06%)</title><rect x="21.7406%" y="533" width="0.0608%" height="15" fill="rgb(223,139,8)" fg:x="22882" fg:w="64"/><text x="21.9906%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.05%)</title><rect x="21.7558%" y="517" width="0.0456%" height="15" fill="rgb(232,213,38)" fg:x="22898" fg:w="48"/><text x="22.0058%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (26 samples, 0.02%)</title><rect x="21.7767%" y="501" width="0.0247%" height="15" fill="rgb(207,94,22)" fg:x="22920" fg:w="26"/><text x="22.0267%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (23 samples, 0.02%)</title><rect x="21.8014%" y="565" width="0.0219%" height="15" fill="rgb(219,183,54)" fg:x="22946" fg:w="23"/><text x="22.0514%" y="575.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (23 samples, 0.02%)</title><rect x="21.8014%" y="549" width="0.0219%" height="15" fill="rgb(216,185,54)" fg:x="22946" fg:w="23"/><text x="22.0514%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (677 samples, 0.64%)</title><rect x="21.2912%" y="613" width="0.6432%" height="15" fill="rgb(254,217,39)" fg:x="22409" fg:w="677"/><text x="21.5412%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (677 samples, 0.64%)</title><rect x="21.2912%" y="597" width="0.6432%" height="15" fill="rgb(240,178,23)" fg:x="22409" fg:w="677"/><text x="21.5412%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (659 samples, 0.63%)</title><rect x="21.3083%" y="581" width="0.6261%" height="15" fill="rgb(218,11,47)" fg:x="22427" fg:w="659"/><text x="21.5583%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (117 samples, 0.11%)</title><rect x="21.8233%" y="565" width="0.1112%" height="15" fill="rgb(218,51,51)" fg:x="22969" fg:w="117"/><text x="22.0733%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (117 samples, 0.11%)</title><rect x="21.8233%" y="549" width="0.1112%" height="15" fill="rgb(238,126,27)" fg:x="22969" fg:w="117"/><text x="22.0733%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,195 samples, 1.14%)</title><rect x="20.8048%" y="741" width="1.1354%" height="15" fill="rgb(249,202,22)" fg:x="21897" fg:w="1195"/><text x="21.0548%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (704 samples, 0.67%)</title><rect x="21.2713%" y="725" width="0.6689%" height="15" fill="rgb(254,195,49)" fg:x="22388" fg:w="704"/><text x="21.5213%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (704 samples, 0.67%)</title><rect x="21.2713%" y="709" width="0.6689%" height="15" fill="rgb(208,123,14)" fg:x="22388" fg:w="704"/><text x="21.5213%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (704 samples, 0.67%)</title><rect x="21.2713%" y="693" width="0.6689%" height="15" fill="rgb(224,200,8)" fg:x="22388" fg:w="704"/><text x="21.5213%" y="703.50"></text></g><g><title>alloc::alloc::alloc (704 samples, 0.67%)</title><rect x="21.2713%" y="677" width="0.6689%" height="15" fill="rgb(217,61,36)" fg:x="22388" fg:w="704"/><text x="21.5213%" y="687.50"></text></g><g><title>__rg_alloc (704 samples, 0.67%)</title><rect x="21.2713%" y="661" width="0.6689%" height="15" fill="rgb(206,35,45)" fg:x="22388" fg:w="704"/><text x="21.5213%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (704 samples, 0.67%)</title><rect x="21.2713%" y="645" width="0.6689%" height="15" fill="rgb(217,65,33)" fg:x="22388" fg:w="704"/><text x="21.5213%" y="655.50"></text></g><g><title>rust_alloc (701 samples, 0.67%)</title><rect x="21.2741%" y="629" width="0.6660%" height="15" fill="rgb(222,158,48)" fg:x="22391" fg:w="701"/><text x="21.5241%" y="639.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (14 samples, 0.01%)</title><rect x="21.9534%" y="709" width="0.0133%" height="15" fill="rgb(254,2,54)" fg:x="23106" fg:w="14"/><text x="22.2034%" y="719.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (12 samples, 0.01%)</title><rect x="21.9553%" y="693" width="0.0114%" height="15" fill="rgb(250,143,38)" fg:x="23108" fg:w="12"/><text x="22.2053%" y="703.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (12 samples, 0.01%)</title><rect x="21.9553%" y="677" width="0.0114%" height="15" fill="rgb(248,25,0)" fg:x="23108" fg:w="12"/><text x="22.2053%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="21.9553%" y="661" width="0.0114%" height="15" fill="rgb(206,152,27)" fg:x="23108" fg:w="12"/><text x="22.2053%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (11 samples, 0.01%)</title><rect x="21.9563%" y="645" width="0.0105%" height="15" fill="rgb(240,77,30)" fg:x="23109" fg:w="11"/><text x="22.2063%" y="655.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="21.9667%" y="693" width="0.0171%" height="15" fill="rgb(231,5,3)" fg:x="23120" fg:w="18"/><text x="22.2167%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (17 samples, 0.02%)</title><rect x="21.9677%" y="677" width="0.0162%" height="15" fill="rgb(207,226,32)" fg:x="23121" fg:w="17"/><text x="22.2177%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="21.9677%" y="661" width="0.0162%" height="15" fill="rgb(222,207,47)" fg:x="23121" fg:w="17"/><text x="22.2177%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (19 samples, 0.02%)</title><rect x="21.9667%" y="709" width="0.0181%" height="15" fill="rgb(229,115,45)" fg:x="23120" fg:w="19"/><text x="22.2167%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.06%)</title><rect x="21.9420%" y="725" width="0.0551%" height="15" fill="rgb(224,191,6)" fg:x="23094" fg:w="58"/><text x="22.1920%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)]&gt; (13 samples, 0.01%)</title><rect x="21.9848%" y="709" width="0.0124%" height="15" fill="rgb(230,227,24)" fg:x="23139" fg:w="13"/><text x="22.2348%" y="719.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="22.0000%" y="709" width="0.0114%" height="15" fill="rgb(228,80,19)" fg:x="23155" fg:w="12"/><text x="22.2500%" y="719.50"></text></g><g><title>sizeclass_to_size (16 samples, 0.02%)</title><rect x="22.0333%" y="629" width="0.0152%" height="15" fill="rgb(247,229,0)" fg:x="23190" fg:w="16"/><text x="22.2833%" y="639.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (16 samples, 0.02%)</title><rect x="22.0333%" y="613" width="0.0152%" height="15" fill="rgb(237,194,15)" fg:x="23190" fg:w="16"/><text x="22.2833%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.02%)</title><rect x="22.0684%" y="581" width="0.0162%" height="15" fill="rgb(219,203,20)" fg:x="23227" fg:w="17"/><text x="22.3184%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="22.0684%" y="565" width="0.0162%" height="15" fill="rgb(234,128,8)" fg:x="23227" fg:w="17"/><text x="22.3184%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (48 samples, 0.05%)</title><rect x="22.0504%" y="629" width="0.0456%" height="15" fill="rgb(248,202,8)" fg:x="23208" fg:w="48"/><text x="22.3004%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (48 samples, 0.05%)</title><rect x="22.0504%" y="613" width="0.0456%" height="15" fill="rgb(206,104,37)" fg:x="23208" fg:w="48"/><text x="22.3004%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (43 samples, 0.04%)</title><rect x="22.0551%" y="597" width="0.0409%" height="15" fill="rgb(223,8,27)" fg:x="23213" fg:w="43"/><text x="22.3051%" y="607.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="22.0846%" y="581" width="0.0114%" height="15" fill="rgb(216,217,28)" fg:x="23244" fg:w="12"/><text x="22.3346%" y="591.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="22.0846%" y="565" width="0.0114%" height="15" fill="rgb(249,199,1)" fg:x="23244" fg:w="12"/><text x="22.3346%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (99 samples, 0.09%)</title><rect x="22.0238%" y="693" width="0.0941%" height="15" fill="rgb(240,85,17)" fg:x="23180" fg:w="99"/><text x="22.2738%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (99 samples, 0.09%)</title><rect x="22.0238%" y="677" width="0.0941%" height="15" fill="rgb(206,108,45)" fg:x="23180" fg:w="99"/><text x="22.2738%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (99 samples, 0.09%)</title><rect x="22.0238%" y="661" width="0.0941%" height="15" fill="rgb(245,210,41)" fg:x="23180" fg:w="99"/><text x="22.2738%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (99 samples, 0.09%)</title><rect x="22.0238%" y="645" width="0.0941%" height="15" fill="rgb(206,13,37)" fg:x="23180" fg:w="99"/><text x="22.2738%" y="655.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (23 samples, 0.02%)</title><rect x="22.0960%" y="629" width="0.0219%" height="15" fill="rgb(250,61,18)" fg:x="23256" fg:w="23"/><text x="22.3460%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (121 samples, 0.11%)</title><rect x="22.0114%" y="709" width="0.1150%" height="15" fill="rgb(235,172,48)" fg:x="23167" fg:w="121"/><text x="22.2614%" y="719.50"></text></g><g><title>rust_dealloc (150 samples, 0.14%)</title><rect x="21.9971%" y="725" width="0.1425%" height="15" fill="rgb(249,201,17)" fg:x="23152" fg:w="150"/><text x="22.2471%" y="735.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="22.1264%" y="709" width="0.0133%" height="15" fill="rgb(219,208,6)" fg:x="23288" fg:w="14"/><text x="22.3764%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (14 samples, 0.01%)</title><rect x="22.1473%" y="709" width="0.0133%" height="15" fill="rgb(248,31,23)" fg:x="23310" fg:w="14"/><text x="22.3973%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (232 samples, 0.22%)</title><rect x="21.9420%" y="741" width="0.2204%" height="15" fill="rgb(245,15,42)" fg:x="23094" fg:w="232"/><text x="22.1920%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (24 samples, 0.02%)</title><rect x="22.1397%" y="725" width="0.0228%" height="15" fill="rgb(222,217,39)" fg:x="23302" fg:w="24"/><text x="22.3897%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="22.1720%" y="741" width="0.0124%" height="15" fill="rgb(210,219,27)" fg:x="23336" fg:w="13"/><text x="22.4220%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="22.1729%" y="725" width="0.0114%" height="15" fill="rgb(252,166,36)" fg:x="23337" fg:w="12"/><text x="22.4229%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (12 samples, 0.01%)</title><rect x="22.1843%" y="741" width="0.0114%" height="15" fill="rgb(245,132,34)" fg:x="23349" fg:w="12"/><text x="22.4343%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (80 samples, 0.08%)</title><rect x="22.1957%" y="741" width="0.0760%" height="15" fill="rgb(236,54,3)" fg:x="23361" fg:w="80"/><text x="22.4457%" y="751.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (80 samples, 0.08%)</title><rect x="22.1957%" y="725" width="0.0760%" height="15" fill="rgb(241,173,43)" fg:x="23361" fg:w="80"/><text x="22.4457%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (78 samples, 0.07%)</title><rect x="22.1976%" y="709" width="0.0741%" height="15" fill="rgb(215,190,9)" fg:x="23363" fg:w="78"/><text x="22.4476%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (78 samples, 0.07%)</title><rect x="22.1976%" y="693" width="0.0741%" height="15" fill="rgb(242,101,16)" fg:x="23363" fg:w="78"/><text x="22.4476%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (48 samples, 0.05%)</title><rect x="22.2261%" y="677" width="0.0456%" height="15" fill="rgb(223,190,21)" fg:x="23393" fg:w="48"/><text x="22.4761%" y="687.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (48 samples, 0.05%)</title><rect x="22.2261%" y="661" width="0.0456%" height="15" fill="rgb(215,228,25)" fg:x="23393" fg:w="48"/><text x="22.4761%" y="671.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (48 samples, 0.05%)</title><rect x="22.2261%" y="645" width="0.0456%" height="15" fill="rgb(225,36,22)" fg:x="23393" fg:w="48"/><text x="22.4761%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (48 samples, 0.05%)</title><rect x="22.2261%" y="629" width="0.0456%" height="15" fill="rgb(251,106,46)" fg:x="23393" fg:w="48"/><text x="22.4761%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (32 samples, 0.03%)</title><rect x="22.2413%" y="613" width="0.0304%" height="15" fill="rgb(208,90,1)" fg:x="23409" fg:w="32"/><text x="22.4913%" y="623.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (27 samples, 0.03%)</title><rect x="22.2727%" y="741" width="0.0257%" height="15" fill="rgb(243,10,4)" fg:x="23442" fg:w="27"/><text x="22.5227%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,361 samples, 6.99%)</title><rect x="15.3881%" y="773" width="6.9938%" height="15" fill="rgb(212,137,27)" fg:x="16196" fg:w="7361"/><text x="15.6381%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (7,344 samples, 6.98%)</title><rect x="15.4043%" y="757" width="6.9777%" height="15" fill="rgb(231,220,49)" fg:x="16213" fg:w="7344"/><text x="15.6543%" y="767.50">tremor_ru..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (88 samples, 0.08%)</title><rect x="22.2983%" y="741" width="0.0836%" height="15" fill="rgb(237,96,20)" fg:x="23469" fg:w="88"/><text x="22.5483%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (88 samples, 0.08%)</title><rect x="22.2983%" y="725" width="0.0836%" height="15" fill="rgb(239,229,30)" fg:x="23469" fg:w="88"/><text x="22.5483%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (88 samples, 0.08%)</title><rect x="22.2983%" y="709" width="0.0836%" height="15" fill="rgb(219,65,33)" fg:x="23469" fg:w="88"/><text x="22.5483%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (62 samples, 0.06%)</title><rect x="22.3230%" y="693" width="0.0589%" height="15" fill="rgb(243,134,7)" fg:x="23495" fg:w="62"/><text x="22.5730%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (23 samples, 0.02%)</title><rect x="23.5097%" y="757" width="0.0219%" height="15" fill="rgb(216,177,54)" fg:x="24744" fg:w="23"/><text x="23.7597%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="23.5316%" y="757" width="0.0181%" height="15" fill="rgb(211,160,20)" fg:x="24767" fg:w="19"/><text x="23.7816%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="23.5496%" y="757" width="0.0219%" height="15" fill="rgb(239,85,39)" fg:x="24786" fg:w="23"/><text x="23.7996%" y="767.50"></text></g><g><title>aligned_size (24 samples, 0.02%)</title><rect x="23.9344%" y="517" width="0.0228%" height="15" fill="rgb(232,125,22)" fg:x="25191" fg:w="24"/><text x="24.1844%" y="527.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="23.9610%" y="485" width="0.0143%" height="15" fill="rgb(244,57,34)" fg:x="25219" fg:w="15"/><text x="24.2110%" y="495.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="23.9753%" y="485" width="0.0133%" height="15" fill="rgb(214,203,32)" fg:x="25234" fg:w="14"/><text x="24.2253%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="24.0010%" y="469" width="0.0105%" height="15" fill="rgb(207,58,43)" fg:x="25261" fg:w="11"/><text x="24.2510%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (229 samples, 0.22%)</title><rect x="23.9145%" y="661" width="0.2176%" height="15" fill="rgb(215,193,15)" fg:x="25170" fg:w="229"/><text x="24.1645%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (229 samples, 0.22%)</title><rect x="23.9145%" y="645" width="0.2176%" height="15" fill="rgb(232,15,44)" fg:x="25170" fg:w="229"/><text x="24.1645%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (229 samples, 0.22%)</title><rect x="23.9145%" y="629" width="0.2176%" height="15" fill="rgb(212,3,48)" fg:x="25170" fg:w="229"/><text x="24.1645%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (220 samples, 0.21%)</title><rect x="23.9230%" y="613" width="0.2090%" height="15" fill="rgb(218,128,7)" fg:x="25179" fg:w="220"/><text x="24.1730%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (220 samples, 0.21%)</title><rect x="23.9230%" y="597" width="0.2090%" height="15" fill="rgb(226,216,39)" fg:x="25179" fg:w="220"/><text x="24.1730%" y="607.50"></text></g><g><title>alloc::alloc::alloc (220 samples, 0.21%)</title><rect x="23.9230%" y="581" width="0.2090%" height="15" fill="rgb(243,47,51)" fg:x="25179" fg:w="220"/><text x="24.1730%" y="591.50"></text></g><g><title>__rg_alloc (220 samples, 0.21%)</title><rect x="23.9230%" y="565" width="0.2090%" height="15" fill="rgb(241,183,40)" fg:x="25179" fg:w="220"/><text x="24.1730%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (220 samples, 0.21%)</title><rect x="23.9230%" y="549" width="0.2090%" height="15" fill="rgb(231,217,32)" fg:x="25179" fg:w="220"/><text x="24.1730%" y="559.50"></text></g><g><title>rust_alloc (208 samples, 0.20%)</title><rect x="23.9344%" y="533" width="0.1976%" height="15" fill="rgb(229,61,38)" fg:x="25191" fg:w="208"/><text x="24.1844%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (180 samples, 0.17%)</title><rect x="23.9610%" y="517" width="0.1710%" height="15" fill="rgb(225,210,5)" fg:x="25219" fg:w="180"/><text x="24.2110%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (180 samples, 0.17%)</title><rect x="23.9610%" y="501" width="0.1710%" height="15" fill="rgb(231,79,45)" fg:x="25219" fg:w="180"/><text x="24.2110%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (151 samples, 0.14%)</title><rect x="23.9886%" y="485" width="0.1435%" height="15" fill="rgb(224,100,7)" fg:x="25248" fg:w="151"/><text x="24.2386%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (124 samples, 0.12%)</title><rect x="24.0143%" y="469" width="0.1178%" height="15" fill="rgb(241,198,18)" fg:x="25275" fg:w="124"/><text x="24.2643%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (124 samples, 0.12%)</title><rect x="24.0143%" y="453" width="0.1178%" height="15" fill="rgb(252,97,53)" fg:x="25275" fg:w="124"/><text x="24.2643%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (348 samples, 0.33%)</title><rect x="23.8841%" y="741" width="0.3306%" height="15" fill="rgb(220,88,7)" fg:x="25138" fg:w="348"/><text x="24.1341%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (316 samples, 0.30%)</title><rect x="23.9145%" y="725" width="0.3002%" height="15" fill="rgb(213,176,14)" fg:x="25170" fg:w="316"/><text x="24.1645%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (316 samples, 0.30%)</title><rect x="23.9145%" y="709" width="0.3002%" height="15" fill="rgb(246,73,7)" fg:x="25170" fg:w="316"/><text x="24.1645%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (316 samples, 0.30%)</title><rect x="23.9145%" y="693" width="0.3002%" height="15" fill="rgb(245,64,36)" fg:x="25170" fg:w="316"/><text x="24.1645%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (316 samples, 0.30%)</title><rect x="23.9145%" y="677" width="0.3002%" height="15" fill="rgb(245,80,10)" fg:x="25170" fg:w="316"/><text x="24.1645%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (87 samples, 0.08%)</title><rect x="24.1321%" y="661" width="0.0827%" height="15" fill="rgb(232,107,50)" fg:x="25399" fg:w="87"/><text x="24.3821%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (87 samples, 0.08%)</title><rect x="24.1321%" y="645" width="0.0827%" height="15" fill="rgb(253,3,0)" fg:x="25399" fg:w="87"/><text x="24.3821%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (71 samples, 0.07%)</title><rect x="24.1473%" y="629" width="0.0675%" height="15" fill="rgb(212,99,53)" fg:x="25415" fg:w="71"/><text x="24.3973%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (74 samples, 0.07%)</title><rect x="24.2803%" y="453" width="0.0703%" height="15" fill="rgb(249,111,54)" fg:x="25555" fg:w="74"/><text x="24.5303%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (74 samples, 0.07%)</title><rect x="24.2803%" y="437" width="0.0703%" height="15" fill="rgb(249,55,30)" fg:x="25555" fg:w="74"/><text x="24.5303%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (67 samples, 0.06%)</title><rect x="24.2869%" y="421" width="0.0637%" height="15" fill="rgb(237,47,42)" fg:x="25562" fg:w="67"/><text x="24.5369%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (57 samples, 0.05%)</title><rect x="24.2964%" y="405" width="0.0542%" height="15" fill="rgb(211,20,18)" fg:x="25572" fg:w="57"/><text x="24.5464%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (57 samples, 0.05%)</title><rect x="24.2964%" y="389" width="0.0542%" height="15" fill="rgb(231,203,46)" fg:x="25572" fg:w="57"/><text x="24.5464%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (121 samples, 0.11%)</title><rect x="24.2470%" y="597" width="0.1150%" height="15" fill="rgb(237,142,3)" fg:x="25520" fg:w="121"/><text x="24.4970%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (121 samples, 0.11%)</title><rect x="24.2470%" y="581" width="0.1150%" height="15" fill="rgb(241,107,1)" fg:x="25520" fg:w="121"/><text x="24.4970%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (121 samples, 0.11%)</title><rect x="24.2470%" y="565" width="0.1150%" height="15" fill="rgb(229,83,13)" fg:x="25520" fg:w="121"/><text x="24.4970%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (116 samples, 0.11%)</title><rect x="24.2518%" y="549" width="0.1102%" height="15" fill="rgb(241,91,40)" fg:x="25525" fg:w="116"/><text x="24.5018%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (116 samples, 0.11%)</title><rect x="24.2518%" y="533" width="0.1102%" height="15" fill="rgb(225,3,45)" fg:x="25525" fg:w="116"/><text x="24.5018%" y="543.50"></text></g><g><title>alloc::alloc::alloc (107 samples, 0.10%)</title><rect x="24.2603%" y="517" width="0.1017%" height="15" fill="rgb(244,223,14)" fg:x="25534" fg:w="107"/><text x="24.5103%" y="527.50"></text></g><g><title>__rg_alloc (107 samples, 0.10%)</title><rect x="24.2603%" y="501" width="0.1017%" height="15" fill="rgb(224,124,37)" fg:x="25534" fg:w="107"/><text x="24.5103%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (107 samples, 0.10%)</title><rect x="24.2603%" y="485" width="0.1017%" height="15" fill="rgb(251,171,30)" fg:x="25534" fg:w="107"/><text x="24.5103%" y="495.50"></text></g><g><title>rust_alloc (97 samples, 0.09%)</title><rect x="24.2698%" y="469" width="0.0922%" height="15" fill="rgb(236,46,54)" fg:x="25544" fg:w="97"/><text x="24.5198%" y="479.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="24.3506%" y="453" width="0.0114%" height="15" fill="rgb(245,213,5)" fg:x="25629" fg:w="12"/><text x="24.6006%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (192 samples, 0.18%)</title><rect x="24.2442%" y="677" width="0.1824%" height="15" fill="rgb(230,144,27)" fg:x="25517" fg:w="192"/><text x="24.4942%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (189 samples, 0.18%)</title><rect x="24.2470%" y="661" width="0.1796%" height="15" fill="rgb(220,86,6)" fg:x="25520" fg:w="189"/><text x="24.4970%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (189 samples, 0.18%)</title><rect x="24.2470%" y="645" width="0.1796%" height="15" fill="rgb(240,20,13)" fg:x="25520" fg:w="189"/><text x="24.4970%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (189 samples, 0.18%)</title><rect x="24.2470%" y="629" width="0.1796%" height="15" fill="rgb(217,89,34)" fg:x="25520" fg:w="189"/><text x="24.4970%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (189 samples, 0.18%)</title><rect x="24.2470%" y="613" width="0.1796%" height="15" fill="rgb(229,13,5)" fg:x="25520" fg:w="189"/><text x="24.4970%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (68 samples, 0.06%)</title><rect x="24.3620%" y="597" width="0.0646%" height="15" fill="rgb(244,67,35)" fg:x="25641" fg:w="68"/><text x="24.6120%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (68 samples, 0.06%)</title><rect x="24.3620%" y="581" width="0.0646%" height="15" fill="rgb(221,40,2)" fg:x="25641" fg:w="68"/><text x="24.6120%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (48 samples, 0.05%)</title><rect x="24.3810%" y="565" width="0.0456%" height="15" fill="rgb(237,157,21)" fg:x="25661" fg:w="48"/><text x="24.6310%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="24.4266%" y="677" width="0.0219%" height="15" fill="rgb(222,94,11)" fg:x="25709" fg:w="23"/><text x="24.6766%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="24.4884%" y="533" width="0.0960%" height="15" fill="rgb(249,113,6)" fg:x="25774" fg:w="101"/><text x="24.7384%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (100 samples, 0.10%)</title><rect x="24.4893%" y="517" width="0.0950%" height="15" fill="rgb(238,137,36)" fg:x="25775" fg:w="100"/><text x="24.7393%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="24.4998%" y="501" width="0.0846%" height="15" fill="rgb(210,102,26)" fg:x="25786" fg:w="89"/><text x="24.7498%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (79 samples, 0.08%)</title><rect x="24.5093%" y="485" width="0.0751%" height="15" fill="rgb(218,30,30)" fg:x="25796" fg:w="79"/><text x="24.7593%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (79 samples, 0.08%)</title><rect x="24.5093%" y="469" width="0.0751%" height="15" fill="rgb(214,67,26)" fg:x="25796" fg:w="79"/><text x="24.7593%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (136 samples, 0.13%)</title><rect x="24.4665%" y="629" width="0.1292%" height="15" fill="rgb(251,9,53)" fg:x="25751" fg:w="136"/><text x="24.7165%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (136 samples, 0.13%)</title><rect x="24.4665%" y="613" width="0.1292%" height="15" fill="rgb(228,204,25)" fg:x="25751" fg:w="136"/><text x="24.7165%" y="623.50"></text></g><g><title>alloc::alloc::alloc (130 samples, 0.12%)</title><rect x="24.4722%" y="597" width="0.1235%" height="15" fill="rgb(207,153,8)" fg:x="25757" fg:w="130"/><text x="24.7222%" y="607.50"></text></g><g><title>__rg_alloc (130 samples, 0.12%)</title><rect x="24.4722%" y="581" width="0.1235%" height="15" fill="rgb(242,9,16)" fg:x="25757" fg:w="130"/><text x="24.7222%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (130 samples, 0.12%)</title><rect x="24.4722%" y="565" width="0.1235%" height="15" fill="rgb(217,211,10)" fg:x="25757" fg:w="130"/><text x="24.7222%" y="575.50"></text></g><g><title>rust_alloc (121 samples, 0.11%)</title><rect x="24.4808%" y="549" width="0.1150%" height="15" fill="rgb(219,228,52)" fg:x="25766" fg:w="121"/><text x="24.7308%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="24.5843%" y="533" width="0.0114%" height="15" fill="rgb(231,92,29)" fg:x="25875" fg:w="12"/><text x="24.8343%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (168 samples, 0.16%)</title><rect x="24.4494%" y="677" width="0.1596%" height="15" fill="rgb(232,8,23)" fg:x="25733" fg:w="168"/><text x="24.6994%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (154 samples, 0.15%)</title><rect x="24.4627%" y="661" width="0.1463%" height="15" fill="rgb(216,211,34)" fg:x="25747" fg:w="154"/><text x="24.7127%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (150 samples, 0.14%)</title><rect x="24.4665%" y="645" width="0.1425%" height="15" fill="rgb(236,151,0)" fg:x="25751" fg:w="150"/><text x="24.7165%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (402 samples, 0.38%)</title><rect x="24.2413%" y="693" width="0.3819%" height="15" fill="rgb(209,168,3)" fg:x="25514" fg:w="402"/><text x="24.4913%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (15 samples, 0.01%)</title><rect x="24.6090%" y="677" width="0.0143%" height="15" fill="rgb(208,129,28)" fg:x="25901" fg:w="15"/><text x="24.8590%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (412 samples, 0.39%)</title><rect x="24.2413%" y="725" width="0.3914%" height="15" fill="rgb(229,78,22)" fg:x="25514" fg:w="412"/><text x="24.4913%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (412 samples, 0.39%)</title><rect x="24.2413%" y="709" width="0.3914%" height="15" fill="rgb(228,187,13)" fg:x="25514" fg:w="412"/><text x="24.4913%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (441 samples, 0.42%)</title><rect x="24.2147%" y="741" width="0.4190%" height="15" fill="rgb(240,119,24)" fg:x="25486" fg:w="441"/><text x="24.4647%" y="751.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,131 samples, 1.07%)</title><rect x="23.5715%" y="757" width="1.0746%" height="15" fill="rgb(209,194,42)" fg:x="24809" fg:w="1131"/><text x="23.8215%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="24.6337%" y="741" width="0.0124%" height="15" fill="rgb(247,200,46)" fg:x="25927" fg:w="13"/><text x="24.8837%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (216 samples, 0.21%)</title><rect x="24.6461%" y="757" width="0.2052%" height="15" fill="rgb(218,76,16)" fg:x="25940" fg:w="216"/><text x="24.8961%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (468 samples, 0.44%)</title><rect x="24.8599%" y="757" width="0.4447%" height="15" fill="rgb(225,21,48)" fg:x="26165" fg:w="468"/><text x="25.1099%" y="767.50"></text></g><g><title>core::ptr::write (440 samples, 0.42%)</title><rect x="24.8865%" y="741" width="0.4181%" height="15" fill="rgb(239,223,50)" fg:x="26193" fg:w="440"/><text x="25.1365%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (433 samples, 0.41%)</title><rect x="24.8931%" y="725" width="0.4114%" height="15" fill="rgb(244,45,21)" fg:x="26200" fg:w="433"/><text x="25.1431%" y="735.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="25.3435%" y="597" width="0.0124%" height="15" fill="rgb(232,33,43)" fg:x="26674" fg:w="13"/><text x="25.5935%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="25.3710%" y="501" width="0.0181%" height="15" fill="rgb(209,8,3)" fg:x="26703" fg:w="19"/><text x="25.6210%" y="511.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (19 samples, 0.02%)</title><rect x="25.3710%" y="485" width="0.0181%" height="15" fill="rgb(214,25,53)" fg:x="26703" fg:w="19"/><text x="25.6210%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (11 samples, 0.01%)</title><rect x="25.3786%" y="469" width="0.0105%" height="15" fill="rgb(254,186,54)" fg:x="26711" fg:w="11"/><text x="25.6286%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="25.3786%" y="453" width="0.0105%" height="15" fill="rgb(208,174,49)" fg:x="26711" fg:w="11"/><text x="25.6286%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="25.3691%" y="549" width="0.0209%" height="15" fill="rgb(233,191,51)" fg:x="26701" fg:w="22"/><text x="25.6191%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="25.3691%" y="533" width="0.0209%" height="15" fill="rgb(222,134,10)" fg:x="26701" fg:w="22"/><text x="25.6191%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="25.3691%" y="517" width="0.0209%" height="15" fill="rgb(230,226,20)" fg:x="26701" fg:w="22"/><text x="25.6191%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (73 samples, 0.07%)</title><rect x="25.3558%" y="597" width="0.0694%" height="15" fill="rgb(251,111,25)" fg:x="26687" fg:w="73"/><text x="25.6058%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (73 samples, 0.07%)</title><rect x="25.3558%" y="581" width="0.0694%" height="15" fill="rgb(224,40,46)" fg:x="26687" fg:w="73"/><text x="25.6058%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="25.3634%" y="565" width="0.0618%" height="15" fill="rgb(236,108,47)" fg:x="26695" fg:w="65"/><text x="25.6134%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (36 samples, 0.03%)</title><rect x="25.3910%" y="549" width="0.0342%" height="15" fill="rgb(234,93,0)" fg:x="26724" fg:w="36"/><text x="25.6410%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (36 samples, 0.03%)</title><rect x="25.3910%" y="533" width="0.0342%" height="15" fill="rgb(224,213,32)" fg:x="26724" fg:w="36"/><text x="25.6410%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (117 samples, 0.11%)</title><rect x="25.3159%" y="693" width="0.1112%" height="15" fill="rgb(251,11,48)" fg:x="26645" fg:w="117"/><text x="25.5659%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (117 samples, 0.11%)</title><rect x="25.3159%" y="677" width="0.1112%" height="15" fill="rgb(236,173,5)" fg:x="26645" fg:w="117"/><text x="25.5659%" y="687.50"></text></g><g><title>alloc::alloc::alloc (108 samples, 0.10%)</title><rect x="25.3245%" y="661" width="0.1026%" height="15" fill="rgb(230,95,12)" fg:x="26654" fg:w="108"/><text x="25.5745%" y="671.50"></text></g><g><title>__rg_alloc (108 samples, 0.10%)</title><rect x="25.3245%" y="645" width="0.1026%" height="15" fill="rgb(232,209,1)" fg:x="26654" fg:w="108"/><text x="25.5745%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (108 samples, 0.10%)</title><rect x="25.3245%" y="629" width="0.1026%" height="15" fill="rgb(232,6,1)" fg:x="26654" fg:w="108"/><text x="25.5745%" y="639.50"></text></g><g><title>rust_alloc (97 samples, 0.09%)</title><rect x="25.3349%" y="613" width="0.0922%" height="15" fill="rgb(210,224,50)" fg:x="26665" fg:w="97"/><text x="25.5849%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (15 samples, 0.01%)</title><rect x="25.4271%" y="693" width="0.0143%" height="15" fill="rgb(228,127,35)" fg:x="26762" fg:w="15"/><text x="25.6771%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (155 samples, 0.15%)</title><rect x="25.3045%" y="757" width="0.1473%" height="15" fill="rgb(245,102,45)" fg:x="26633" fg:w="155"/><text x="25.5545%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (155 samples, 0.15%)</title><rect x="25.3045%" y="741" width="0.1473%" height="15" fill="rgb(214,1,49)" fg:x="26633" fg:w="155"/><text x="25.5545%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (143 samples, 0.14%)</title><rect x="25.3159%" y="725" width="0.1359%" height="15" fill="rgb(226,163,40)" fg:x="26645" fg:w="143"/><text x="25.5659%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (143 samples, 0.14%)</title><rect x="25.3159%" y="709" width="0.1359%" height="15" fill="rgb(239,212,28)" fg:x="26645" fg:w="143"/><text x="25.5659%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::array (11 samples, 0.01%)</title><rect x="25.4413%" y="693" width="0.0105%" height="15" fill="rgb(220,20,13)" fg:x="26777" fg:w="11"/><text x="25.6913%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (11 samples, 0.01%)</title><rect x="25.4413%" y="677" width="0.0105%" height="15" fill="rgb(210,164,35)" fg:x="26777" fg:w="11"/><text x="25.6913%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (11 samples, 0.01%)</title><rect x="25.4413%" y="661" width="0.0105%" height="15" fill="rgb(248,109,41)" fg:x="26777" fg:w="11"/><text x="25.6913%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (34 samples, 0.03%)</title><rect x="25.5221%" y="453" width="0.0323%" height="15" fill="rgb(238,23,50)" fg:x="26862" fg:w="34"/><text x="25.7721%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (28 samples, 0.03%)</title><rect x="25.5278%" y="437" width="0.0266%" height="15" fill="rgb(211,48,49)" fg:x="26868" fg:w="28"/><text x="25.7778%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (74 samples, 0.07%)</title><rect x="25.4945%" y="501" width="0.0703%" height="15" fill="rgb(223,36,21)" fg:x="26833" fg:w="74"/><text x="25.7445%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (74 samples, 0.07%)</title><rect x="25.4945%" y="485" width="0.0703%" height="15" fill="rgb(207,123,46)" fg:x="26833" fg:w="74"/><text x="25.7445%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (74 samples, 0.07%)</title><rect x="25.4945%" y="469" width="0.0703%" height="15" fill="rgb(240,218,32)" fg:x="26833" fg:w="74"/><text x="25.7445%" y="479.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="25.5544%" y="453" width="0.0105%" height="15" fill="rgb(252,5,43)" fg:x="26896" fg:w="11"/><text x="25.8044%" y="463.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="25.5544%" y="437" width="0.0105%" height="15" fill="rgb(252,84,19)" fg:x="26896" fg:w="11"/><text x="25.8044%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (100 samples, 0.10%)</title><rect x="25.4803%" y="533" width="0.0950%" height="15" fill="rgb(243,152,39)" fg:x="26818" fg:w="100"/><text x="25.7303%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (100 samples, 0.10%)</title><rect x="25.4803%" y="517" width="0.0950%" height="15" fill="rgb(234,160,15)" fg:x="26818" fg:w="100"/><text x="25.7303%" y="527.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="25.5648%" y="501" width="0.0105%" height="15" fill="rgb(237,34,20)" fg:x="26907" fg:w="11"/><text x="25.8148%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (103 samples, 0.10%)</title><rect x="25.4803%" y="565" width="0.0979%" height="15" fill="rgb(229,97,13)" fg:x="26818" fg:w="103"/><text x="25.7303%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (103 samples, 0.10%)</title><rect x="25.4803%" y="549" width="0.0979%" height="15" fill="rgb(234,71,50)" fg:x="26818" fg:w="103"/><text x="25.7303%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (127 samples, 0.12%)</title><rect x="25.4717%" y="581" width="0.1207%" height="15" fill="rgb(253,155,4)" fg:x="26809" fg:w="127"/><text x="25.7217%" y="591.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="25.5781%" y="565" width="0.0143%" height="15" fill="rgb(222,185,37)" fg:x="26921" fg:w="15"/><text x="25.8281%" y="575.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="25.5781%" y="549" width="0.0143%" height="15" fill="rgb(251,177,13)" fg:x="26921" fg:w="15"/><text x="25.8281%" y="559.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="25.5781%" y="533" width="0.0143%" height="15" fill="rgb(250,179,40)" fg:x="26921" fg:w="15"/><text x="25.8281%" y="543.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="25.5781%" y="517" width="0.0143%" height="15" fill="rgb(242,44,2)" fg:x="26921" fg:w="15"/><text x="25.8281%" y="527.50"></text></g><g><title>rust_dealloc (146 samples, 0.14%)</title><rect x="25.4622%" y="597" width="0.1387%" height="15" fill="rgb(216,177,13)" fg:x="26799" fg:w="146"/><text x="25.7122%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (153 samples, 0.15%)</title><rect x="25.4575%" y="661" width="0.1454%" height="15" fill="rgb(216,106,43)" fg:x="26794" fg:w="153"/><text x="25.7075%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (153 samples, 0.15%)</title><rect x="25.4575%" y="645" width="0.1454%" height="15" fill="rgb(216,183,2)" fg:x="26794" fg:w="153"/><text x="25.7075%" y="655.50"></text></g><g><title>__rg_dealloc (153 samples, 0.15%)</title><rect x="25.4575%" y="629" width="0.1454%" height="15" fill="rgb(249,75,3)" fg:x="26794" fg:w="153"/><text x="25.7075%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (153 samples, 0.15%)</title><rect x="25.4575%" y="613" width="0.1454%" height="15" fill="rgb(219,67,39)" fg:x="26794" fg:w="153"/><text x="25.7075%" y="623.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (166 samples, 0.16%)</title><rect x="25.4565%" y="709" width="0.1577%" height="15" fill="rgb(253,228,2)" fg:x="26793" fg:w="166"/><text x="25.7065%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (165 samples, 0.16%)</title><rect x="25.4575%" y="693" width="0.1568%" height="15" fill="rgb(235,138,27)" fg:x="26794" fg:w="165"/><text x="25.7075%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (165 samples, 0.16%)</title><rect x="25.4575%" y="677" width="0.1568%" height="15" fill="rgb(236,97,51)" fg:x="26794" fg:w="165"/><text x="25.7075%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="25.6029%" y="661" width="0.0114%" height="15" fill="rgb(240,80,30)" fg:x="26947" fg:w="12"/><text x="25.8529%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (167 samples, 0.16%)</title><rect x="25.4565%" y="725" width="0.1587%" height="15" fill="rgb(230,178,19)" fg:x="26793" fg:w="167"/><text x="25.7065%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (172 samples, 0.16%)</title><rect x="25.4565%" y="741" width="0.1634%" height="15" fill="rgb(210,190,27)" fg:x="26793" fg:w="172"/><text x="25.7065%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (181 samples, 0.17%)</title><rect x="25.4565%" y="757" width="0.1720%" height="15" fill="rgb(222,107,31)" fg:x="26793" fg:w="181"/><text x="25.7065%" y="767.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (41 samples, 0.04%)</title><rect x="25.7292%" y="469" width="0.0390%" height="15" fill="rgb(216,127,34)" fg:x="27080" fg:w="41"/><text x="25.9792%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (37 samples, 0.04%)</title><rect x="25.7330%" y="453" width="0.0352%" height="15" fill="rgb(234,116,52)" fg:x="27084" fg:w="37"/><text x="25.9830%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (80 samples, 0.08%)</title><rect x="25.7045%" y="517" width="0.0760%" height="15" fill="rgb(222,124,15)" fg:x="27054" fg:w="80"/><text x="25.9545%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (80 samples, 0.08%)</title><rect x="25.7045%" y="501" width="0.0760%" height="15" fill="rgb(231,179,28)" fg:x="27054" fg:w="80"/><text x="25.9545%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (79 samples, 0.08%)</title><rect x="25.7055%" y="485" width="0.0751%" height="15" fill="rgb(226,93,45)" fg:x="27055" fg:w="79"/><text x="25.9555%" y="495.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="25.7682%" y="469" width="0.0124%" height="15" fill="rgb(215,8,51)" fg:x="27121" fg:w="13"/><text x="26.0182%" y="479.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="25.7682%" y="453" width="0.0124%" height="15" fill="rgb(223,106,5)" fg:x="27121" fg:w="13"/><text x="26.0182%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (121 samples, 0.11%)</title><rect x="25.6836%" y="549" width="0.1150%" height="15" fill="rgb(250,191,5)" fg:x="27032" fg:w="121"/><text x="25.9336%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (121 samples, 0.11%)</title><rect x="25.6836%" y="533" width="0.1150%" height="15" fill="rgb(242,132,44)" fg:x="27032" fg:w="121"/><text x="25.9336%" y="543.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (19 samples, 0.02%)</title><rect x="25.7805%" y="517" width="0.0181%" height="15" fill="rgb(251,152,29)" fg:x="27134" fg:w="19"/><text x="26.0305%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (130 samples, 0.12%)</title><rect x="25.6836%" y="581" width="0.1235%" height="15" fill="rgb(218,179,5)" fg:x="27032" fg:w="130"/><text x="25.9336%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (130 samples, 0.12%)</title><rect x="25.6836%" y="565" width="0.1235%" height="15" fill="rgb(227,67,19)" fg:x="27032" fg:w="130"/><text x="25.9336%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (150 samples, 0.14%)</title><rect x="25.6694%" y="597" width="0.1425%" height="15" fill="rgb(233,119,31)" fg:x="27017" fg:w="150"/><text x="25.9194%" y="607.50"></text></g><g><title>rust_dealloc (182 samples, 0.17%)</title><rect x="25.6513%" y="613" width="0.1729%" height="15" fill="rgb(241,120,22)" fg:x="26998" fg:w="182"/><text x="25.9013%" y="623.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="25.8119%" y="597" width="0.0124%" height="15" fill="rgb(224,102,30)" fg:x="27167" fg:w="13"/><text x="26.0619%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (185 samples, 0.18%)</title><rect x="25.6494%" y="677" width="0.1758%" height="15" fill="rgb(210,164,37)" fg:x="26996" fg:w="185"/><text x="25.8994%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (185 samples, 0.18%)</title><rect x="25.6494%" y="661" width="0.1758%" height="15" fill="rgb(226,191,16)" fg:x="26996" fg:w="185"/><text x="25.8994%" y="671.50"></text></g><g><title>__rg_dealloc (185 samples, 0.18%)</title><rect x="25.6494%" y="645" width="0.1758%" height="15" fill="rgb(214,40,45)" fg:x="26996" fg:w="185"/><text x="25.8994%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (185 samples, 0.18%)</title><rect x="25.6494%" y="629" width="0.1758%" height="15" fill="rgb(244,29,26)" fg:x="26996" fg:w="185"/><text x="25.8994%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (201 samples, 0.19%)</title><rect x="25.6390%" y="741" width="0.1910%" height="15" fill="rgb(216,16,5)" fg:x="26985" fg:w="201"/><text x="25.8890%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (201 samples, 0.19%)</title><rect x="25.6390%" y="725" width="0.1910%" height="15" fill="rgb(249,76,35)" fg:x="26985" fg:w="201"/><text x="25.8890%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (201 samples, 0.19%)</title><rect x="25.6390%" y="709" width="0.1910%" height="15" fill="rgb(207,11,44)" fg:x="26985" fg:w="201"/><text x="25.8890%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (201 samples, 0.19%)</title><rect x="25.6390%" y="693" width="0.1910%" height="15" fill="rgb(228,190,49)" fg:x="26985" fg:w="201"/><text x="25.8890%" y="703.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="25.8670%" y="549" width="0.0105%" height="15" fill="rgb(214,173,12)" fg:x="27225" fg:w="11"/><text x="26.1170%" y="559.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="25.8888%" y="469" width="0.0105%" height="15" fill="rgb(218,26,35)" fg:x="27248" fg:w="11"/><text x="26.1388%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="25.9230%" y="421" width="0.0133%" height="15" fill="rgb(220,200,19)" fg:x="27284" fg:w="14"/><text x="26.1730%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (45 samples, 0.04%)</title><rect x="25.9012%" y="469" width="0.0428%" height="15" fill="rgb(239,95,49)" fg:x="27261" fg:w="45"/><text x="26.1512%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (45 samples, 0.04%)</title><rect x="25.9012%" y="453" width="0.0428%" height="15" fill="rgb(235,85,53)" fg:x="27261" fg:w="45"/><text x="26.1512%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (43 samples, 0.04%)</title><rect x="25.9031%" y="437" width="0.0409%" height="15" fill="rgb(233,133,31)" fg:x="27263" fg:w="43"/><text x="26.1531%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (63 samples, 0.06%)</title><rect x="25.8869%" y="501" width="0.0599%" height="15" fill="rgb(218,25,20)" fg:x="27246" fg:w="63"/><text x="26.1369%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (63 samples, 0.06%)</title><rect x="25.8869%" y="485" width="0.0599%" height="15" fill="rgb(252,210,38)" fg:x="27246" fg:w="63"/><text x="26.1369%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (66 samples, 0.06%)</title><rect x="25.8869%" y="533" width="0.0627%" height="15" fill="rgb(242,134,21)" fg:x="27246" fg:w="66"/><text x="26.1369%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (66 samples, 0.06%)</title><rect x="25.8869%" y="517" width="0.0627%" height="15" fill="rgb(213,28,48)" fg:x="27246" fg:w="66"/><text x="26.1369%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (90 samples, 0.09%)</title><rect x="25.8774%" y="549" width="0.0855%" height="15" fill="rgb(250,196,2)" fg:x="27236" fg:w="90"/><text x="26.1274%" y="559.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="25.9496%" y="533" width="0.0133%" height="15" fill="rgb(227,5,17)" fg:x="27312" fg:w="14"/><text x="26.1996%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="25.9496%" y="517" width="0.0133%" height="15" fill="rgb(221,226,24)" fg:x="27312" fg:w="14"/><text x="26.1996%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (14 samples, 0.01%)</title><rect x="25.9496%" y="501" width="0.0133%" height="15" fill="rgb(211,5,48)" fg:x="27312" fg:w="14"/><text x="26.1996%" y="511.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="25.9496%" y="485" width="0.0133%" height="15" fill="rgb(219,150,6)" fg:x="27312" fg:w="14"/><text x="26.1996%" y="495.50"></text></g><g><title>rust_dealloc (115 samples, 0.11%)</title><rect x="25.8622%" y="565" width="0.1093%" height="15" fill="rgb(251,46,16)" fg:x="27220" fg:w="115"/><text x="26.1122%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (126 samples, 0.12%)</title><rect x="25.8556%" y="581" width="0.1197%" height="15" fill="rgb(220,204,40)" fg:x="27213" fg:w="126"/><text x="26.1056%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (141 samples, 0.13%)</title><rect x="25.8556%" y="629" width="0.1340%" height="15" fill="rgb(211,85,2)" fg:x="27213" fg:w="141"/><text x="26.1056%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (141 samples, 0.13%)</title><rect x="25.8556%" y="613" width="0.1340%" height="15" fill="rgb(229,17,7)" fg:x="27213" fg:w="141"/><text x="26.1056%" y="623.50"></text></g><g><title>__rg_dealloc (141 samples, 0.13%)</title><rect x="25.8556%" y="597" width="0.1340%" height="15" fill="rgb(239,72,28)" fg:x="27213" fg:w="141"/><text x="26.1056%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (15 samples, 0.01%)</title><rect x="25.9753%" y="581" width="0.0143%" height="15" fill="rgb(230,47,54)" fg:x="27339" fg:w="15"/><text x="26.2253%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (190 samples, 0.18%)</title><rect x="25.8299%" y="725" width="0.1805%" height="15" fill="rgb(214,50,8)" fg:x="27186" fg:w="190"/><text x="26.0799%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (189 samples, 0.18%)</title><rect x="25.8309%" y="709" width="0.1796%" height="15" fill="rgb(216,198,43)" fg:x="27187" fg:w="189"/><text x="26.0809%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (173 samples, 0.16%)</title><rect x="25.8461%" y="693" width="0.1644%" height="15" fill="rgb(234,20,35)" fg:x="27203" fg:w="173"/><text x="26.0961%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (173 samples, 0.16%)</title><rect x="25.8461%" y="677" width="0.1644%" height="15" fill="rgb(254,45,19)" fg:x="27203" fg:w="173"/><text x="26.0961%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (173 samples, 0.16%)</title><rect x="25.8461%" y="661" width="0.1644%" height="15" fill="rgb(219,14,44)" fg:x="27203" fg:w="173"/><text x="26.0961%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (173 samples, 0.16%)</title><rect x="25.8461%" y="645" width="0.1644%" height="15" fill="rgb(217,220,26)" fg:x="27203" fg:w="173"/><text x="26.0961%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (22 samples, 0.02%)</title><rect x="25.9895%" y="629" width="0.0209%" height="15" fill="rgb(213,158,28)" fg:x="27354" fg:w="22"/><text x="26.2395%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (414 samples, 0.39%)</title><rect x="25.6285%" y="757" width="0.3933%" height="15" fill="rgb(252,51,52)" fg:x="26974" fg:w="414"/><text x="25.8785%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (202 samples, 0.19%)</title><rect x="25.8299%" y="741" width="0.1919%" height="15" fill="rgb(246,89,16)" fg:x="27186" fg:w="202"/><text x="26.0799%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (12 samples, 0.01%)</title><rect x="26.0105%" y="725" width="0.0114%" height="15" fill="rgb(216,158,49)" fg:x="27376" fg:w="12"/><text x="26.2605%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="26.0105%" y="709" width="0.0114%" height="15" fill="rgb(236,107,19)" fg:x="27376" fg:w="12"/><text x="26.2605%" y="719.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="26.0333%" y="661" width="0.0143%" height="15" fill="rgb(228,185,30)" fg:x="27400" fg:w="15"/><text x="26.2833%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="26.0656%" y="613" width="0.0124%" height="15" fill="rgb(246,134,8)" fg:x="27434" fg:w="13"/><text x="26.3156%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (45 samples, 0.04%)</title><rect x="26.0475%" y="661" width="0.0428%" height="15" fill="rgb(214,143,50)" fg:x="27415" fg:w="45"/><text x="26.2975%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (45 samples, 0.04%)</title><rect x="26.0475%" y="645" width="0.0428%" height="15" fill="rgb(228,75,8)" fg:x="27415" fg:w="45"/><text x="26.2975%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (45 samples, 0.04%)</title><rect x="26.0475%" y="629" width="0.0428%" height="15" fill="rgb(207,175,4)" fg:x="27415" fg:w="45"/><text x="26.2975%" y="639.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="26.0779%" y="613" width="0.0124%" height="15" fill="rgb(205,108,24)" fg:x="27447" fg:w="13"/><text x="26.3279%" y="623.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="26.0779%" y="597" width="0.0124%" height="15" fill="rgb(244,120,49)" fg:x="27447" fg:w="13"/><text x="26.3279%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (61 samples, 0.06%)</title><rect x="26.0333%" y="693" width="0.0580%" height="15" fill="rgb(223,47,38)" fg:x="27400" fg:w="61"/><text x="26.2833%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (61 samples, 0.06%)</title><rect x="26.0333%" y="677" width="0.0580%" height="15" fill="rgb(229,179,11)" fg:x="27400" fg:w="61"/><text x="26.2833%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (71 samples, 0.07%)</title><rect x="26.0333%" y="725" width="0.0675%" height="15" fill="rgb(231,122,1)" fg:x="27400" fg:w="71"/><text x="26.2833%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (71 samples, 0.07%)</title><rect x="26.0333%" y="709" width="0.0675%" height="15" fill="rgb(245,119,9)" fg:x="27400" fg:w="71"/><text x="26.2833%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (81 samples, 0.08%)</title><rect x="26.0314%" y="741" width="0.0770%" height="15" fill="rgb(241,163,25)" fg:x="27398" fg:w="81"/><text x="26.2814%" y="751.50"></text></g><g><title>rust_dealloc (109 samples, 0.10%)</title><rect x="26.0219%" y="757" width="0.1036%" height="15" fill="rgb(217,214,3)" fg:x="27388" fg:w="109"/><text x="26.2719%" y="767.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (18 samples, 0.02%)</title><rect x="26.1083%" y="741" width="0.0171%" height="15" fill="rgb(240,86,28)" fg:x="27479" fg:w="18"/><text x="26.3583%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (42 samples, 0.04%)</title><rect x="26.1292%" y="757" width="0.0399%" height="15" fill="rgb(215,47,9)" fg:x="27501" fg:w="42"/><text x="26.3792%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,355 samples, 10.79%)</title><rect x="15.3881%" y="805" width="10.7886%" height="15" fill="rgb(252,25,45)" fg:x="16196" fg:w="11355"/><text x="15.6381%" y="815.50">&lt;core::future::f..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (11,355 samples, 10.79%)</title><rect x="15.3881%" y="789" width="10.7886%" height="15" fill="rgb(251,164,9)" fg:x="16196" fg:w="11355"/><text x="15.6381%" y="799.50">tremor_runtime::..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,994 samples, 3.79%)</title><rect x="22.3819%" y="773" width="3.7948%" height="15" fill="rgb(233,194,0)" fg:x="23557" fg:w="3994"/><text x="22.6319%" y="783.50">trem..</text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (11 samples, 0.01%)</title><rect x="26.1777%" y="421" width="0.0105%" height="15" fill="rgb(249,111,24)" fg:x="27552" fg:w="11"/><text x="26.4277%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="26.1767%" y="437" width="0.0143%" height="15" fill="rgb(250,223,3)" fg:x="27551" fg:w="15"/><text x="26.4267%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.09%)</title><rect x="26.1767%" y="469" width="0.0865%" height="15" fill="rgb(236,178,37)" fg:x="27551" fg:w="91"/><text x="26.4267%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (91 samples, 0.09%)</title><rect x="26.1767%" y="453" width="0.0865%" height="15" fill="rgb(241,158,50)" fg:x="27551" fg:w="91"/><text x="26.4267%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (76 samples, 0.07%)</title><rect x="26.1910%" y="437" width="0.0722%" height="15" fill="rgb(213,121,41)" fg:x="27566" fg:w="76"/><text x="26.4410%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (55 samples, 0.05%)</title><rect x="26.2109%" y="421" width="0.0523%" height="15" fill="rgb(240,92,3)" fg:x="27587" fg:w="55"/><text x="26.4609%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="26.2109%" y="405" width="0.0523%" height="15" fill="rgb(205,123,3)" fg:x="27587" fg:w="55"/><text x="26.4609%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="26.2109%" y="389" width="0.0523%" height="15" fill="rgb(205,97,47)" fg:x="27587" fg:w="55"/><text x="26.4609%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (94 samples, 0.09%)</title><rect x="26.1767%" y="741" width="0.0893%" height="15" fill="rgb(247,152,14)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (94 samples, 0.09%)</title><rect x="26.1767%" y="725" width="0.0893%" height="15" fill="rgb(248,195,53)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (94 samples, 0.09%)</title><rect x="26.1767%" y="709" width="0.0893%" height="15" fill="rgb(226,201,16)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (94 samples, 0.09%)</title><rect x="26.1767%" y="693" width="0.0893%" height="15" fill="rgb(205,98,0)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (94 samples, 0.09%)</title><rect x="26.1767%" y="677" width="0.0893%" height="15" fill="rgb(214,191,48)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (94 samples, 0.09%)</title><rect x="26.1767%" y="661" width="0.0893%" height="15" fill="rgb(237,112,39)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (94 samples, 0.09%)</title><rect x="26.1767%" y="645" width="0.0893%" height="15" fill="rgb(247,203,27)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (94 samples, 0.09%)</title><rect x="26.1767%" y="629" width="0.0893%" height="15" fill="rgb(235,124,28)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (94 samples, 0.09%)</title><rect x="26.1767%" y="613" width="0.0893%" height="15" fill="rgb(208,207,46)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (94 samples, 0.09%)</title><rect x="26.1767%" y="597" width="0.0893%" height="15" fill="rgb(234,176,4)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="607.50"></text></g><g><title>alloc::alloc::alloc (94 samples, 0.09%)</title><rect x="26.1767%" y="581" width="0.0893%" height="15" fill="rgb(230,133,28)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="591.50"></text></g><g><title>__rg_alloc (94 samples, 0.09%)</title><rect x="26.1767%" y="565" width="0.0893%" height="15" fill="rgb(211,137,40)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (94 samples, 0.09%)</title><rect x="26.1767%" y="549" width="0.0893%" height="15" fill="rgb(254,35,13)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="559.50"></text></g><g><title>rust_alloc (94 samples, 0.09%)</title><rect x="26.1767%" y="533" width="0.0893%" height="15" fill="rgb(225,49,51)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="26.1767%" y="517" width="0.0893%" height="15" fill="rgb(251,10,15)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="26.1767%" y="501" width="0.0893%" height="15" fill="rgb(228,207,15)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="26.1767%" y="485" width="0.0893%" height="15" fill="rgb(241,99,19)" fg:x="27551" fg:w="94"/><text x="26.4267%" y="495.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="26.3458%" y="421" width="0.0105%" height="15" fill="rgb(207,104,49)" fg:x="27729" fg:w="11"/><text x="26.5958%" y="431.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="26.3563%" y="421" width="0.0105%" height="15" fill="rgb(234,99,18)" fg:x="27740" fg:w="11"/><text x="26.6063%" y="431.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="26.3563%" y="405" width="0.0105%" height="15" fill="rgb(213,191,49)" fg:x="27740" fg:w="11"/><text x="26.6063%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (11 samples, 0.01%)</title><rect x="26.3686%" y="357" width="0.0105%" height="15" fill="rgb(210,226,19)" fg:x="27753" fg:w="11"/><text x="26.6186%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="26.3686%" y="341" width="0.0105%" height="15" fill="rgb(229,97,18)" fg:x="27753" fg:w="11"/><text x="26.6186%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="26.3686%" y="325" width="0.0105%" height="15" fill="rgb(211,167,15)" fg:x="27753" fg:w="11"/><text x="26.6186%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (14 samples, 0.01%)</title><rect x="26.3667%" y="373" width="0.0133%" height="15" fill="rgb(210,169,34)" fg:x="27751" fg:w="14"/><text x="26.6167%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="26.3924%" y="357" width="0.0133%" height="15" fill="rgb(241,121,31)" fg:x="27778" fg:w="14"/><text x="26.6424%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (131 samples, 0.12%)</title><rect x="26.3667%" y="405" width="0.1245%" height="15" fill="rgb(232,40,11)" fg:x="27751" fg:w="131"/><text x="26.6167%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (131 samples, 0.12%)</title><rect x="26.3667%" y="389" width="0.1245%" height="15" fill="rgb(205,86,26)" fg:x="27751" fg:w="131"/><text x="26.6167%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (117 samples, 0.11%)</title><rect x="26.3800%" y="373" width="0.1112%" height="15" fill="rgb(231,126,28)" fg:x="27765" fg:w="117"/><text x="26.6300%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (90 samples, 0.09%)</title><rect x="26.4057%" y="357" width="0.0855%" height="15" fill="rgb(219,221,18)" fg:x="27792" fg:w="90"/><text x="26.6557%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (90 samples, 0.09%)</title><rect x="26.4057%" y="341" width="0.0855%" height="15" fill="rgb(211,40,0)" fg:x="27792" fg:w="90"/><text x="26.6557%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (90 samples, 0.09%)</title><rect x="26.4057%" y="325" width="0.0855%" height="15" fill="rgb(239,85,43)" fg:x="27792" fg:w="90"/><text x="26.6557%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (268 samples, 0.25%)</title><rect x="26.3458%" y="453" width="0.2546%" height="15" fill="rgb(231,55,21)" fg:x="27729" fg:w="268"/><text x="26.5958%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (268 samples, 0.25%)</title><rect x="26.3458%" y="437" width="0.2546%" height="15" fill="rgb(225,184,43)" fg:x="27729" fg:w="268"/><text x="26.5958%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (246 samples, 0.23%)</title><rect x="26.3667%" y="421" width="0.2337%" height="15" fill="rgb(251,158,41)" fg:x="27751" fg:w="246"/><text x="26.6167%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (101 samples, 0.10%)</title><rect x="26.5045%" y="405" width="0.0960%" height="15" fill="rgb(234,159,37)" fg:x="27896" fg:w="101"/><text x="26.7545%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (101 samples, 0.10%)</title><rect x="26.5045%" y="389" width="0.0960%" height="15" fill="rgb(216,204,22)" fg:x="27896" fg:w="101"/><text x="26.7545%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (316 samples, 0.30%)</title><rect x="26.3116%" y="597" width="0.3002%" height="15" fill="rgb(214,17,3)" fg:x="27693" fg:w="316"/><text x="26.5616%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (316 samples, 0.30%)</title><rect x="26.3116%" y="581" width="0.3002%" height="15" fill="rgb(212,111,17)" fg:x="27693" fg:w="316"/><text x="26.5616%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (316 samples, 0.30%)</title><rect x="26.3116%" y="565" width="0.3002%" height="15" fill="rgb(221,157,24)" fg:x="27693" fg:w="316"/><text x="26.5616%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (309 samples, 0.29%)</title><rect x="26.3183%" y="549" width="0.2936%" height="15" fill="rgb(252,16,13)" fg:x="27700" fg:w="309"/><text x="26.5683%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (309 samples, 0.29%)</title><rect x="26.3183%" y="533" width="0.2936%" height="15" fill="rgb(221,62,2)" fg:x="27700" fg:w="309"/><text x="26.5683%" y="543.50"></text></g><g><title>alloc::alloc::alloc (300 samples, 0.29%)</title><rect x="26.3268%" y="517" width="0.2850%" height="15" fill="rgb(247,87,22)" fg:x="27709" fg:w="300"/><text x="26.5768%" y="527.50"></text></g><g><title>__rg_alloc (300 samples, 0.29%)</title><rect x="26.3268%" y="501" width="0.2850%" height="15" fill="rgb(215,73,9)" fg:x="27709" fg:w="300"/><text x="26.5768%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (300 samples, 0.29%)</title><rect x="26.3268%" y="485" width="0.2850%" height="15" fill="rgb(207,175,33)" fg:x="27709" fg:w="300"/><text x="26.5768%" y="495.50"></text></g><g><title>rust_alloc (291 samples, 0.28%)</title><rect x="26.3354%" y="469" width="0.2765%" height="15" fill="rgb(243,129,54)" fg:x="27718" fg:w="291"/><text x="26.5854%" y="479.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="26.6005%" y="453" width="0.0114%" height="15" fill="rgb(227,119,45)" fg:x="27997" fg:w="12"/><text x="26.8505%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (366 samples, 0.35%)</title><rect x="26.3040%" y="677" width="0.3477%" height="15" fill="rgb(205,109,36)" fg:x="27685" fg:w="366"/><text x="26.5540%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (358 samples, 0.34%)</title><rect x="26.3116%" y="661" width="0.3401%" height="15" fill="rgb(205,6,39)" fg:x="27693" fg:w="358"/><text x="26.5616%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (358 samples, 0.34%)</title><rect x="26.3116%" y="645" width="0.3401%" height="15" fill="rgb(221,32,16)" fg:x="27693" fg:w="358"/><text x="26.5616%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (358 samples, 0.34%)</title><rect x="26.3116%" y="629" width="0.3401%" height="15" fill="rgb(228,144,50)" fg:x="27693" fg:w="358"/><text x="26.5616%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (358 samples, 0.34%)</title><rect x="26.3116%" y="613" width="0.3401%" height="15" fill="rgb(229,201,53)" fg:x="27693" fg:w="358"/><text x="26.5616%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (42 samples, 0.04%)</title><rect x="26.6119%" y="597" width="0.0399%" height="15" fill="rgb(249,153,27)" fg:x="28009" fg:w="42"/><text x="26.8619%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (42 samples, 0.04%)</title><rect x="26.6119%" y="581" width="0.0399%" height="15" fill="rgb(227,106,25)" fg:x="28009" fg:w="42"/><text x="26.8619%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (34 samples, 0.03%)</title><rect x="26.6195%" y="565" width="0.0323%" height="15" fill="rgb(230,65,29)" fg:x="28017" fg:w="34"/><text x="26.8695%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="26.6518%" y="677" width="0.0105%" height="15" fill="rgb(221,57,46)" fg:x="28051" fg:w="11"/><text x="26.9018%" y="687.50"></text></g><g><title>aligned_size (16 samples, 0.02%)</title><rect x="26.7021%" y="533" width="0.0152%" height="15" fill="rgb(229,161,17)" fg:x="28104" fg:w="16"/><text x="26.9521%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="26.7325%" y="437" width="0.0114%" height="15" fill="rgb(222,213,11)" fg:x="28136" fg:w="12"/><text x="26.9825%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (17 samples, 0.02%)</title><rect x="26.7306%" y="453" width="0.0162%" height="15" fill="rgb(235,35,13)" fg:x="28134" fg:w="17"/><text x="26.9806%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="26.7525%" y="437" width="0.0105%" height="15" fill="rgb(233,158,34)" fg:x="28157" fg:w="11"/><text x="27.0025%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (80 samples, 0.08%)</title><rect x="26.7306%" y="485" width="0.0760%" height="15" fill="rgb(215,151,48)" fg:x="28134" fg:w="80"/><text x="26.9806%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (80 samples, 0.08%)</title><rect x="26.7306%" y="469" width="0.0760%" height="15" fill="rgb(229,84,14)" fg:x="28134" fg:w="80"/><text x="26.9806%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (63 samples, 0.06%)</title><rect x="26.7468%" y="453" width="0.0599%" height="15" fill="rgb(229,68,14)" fg:x="28151" fg:w="63"/><text x="26.9968%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (46 samples, 0.04%)</title><rect x="26.7629%" y="437" width="0.0437%" height="15" fill="rgb(243,106,26)" fg:x="28168" fg:w="46"/><text x="27.0129%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (46 samples, 0.04%)</title><rect x="26.7629%" y="421" width="0.0437%" height="15" fill="rgb(206,45,38)" fg:x="28168" fg:w="46"/><text x="27.0129%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (46 samples, 0.04%)</title><rect x="26.7629%" y="405" width="0.0437%" height="15" fill="rgb(226,6,15)" fg:x="28168" fg:w="46"/><text x="27.0129%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (228 samples, 0.22%)</title><rect x="26.7173%" y="533" width="0.2166%" height="15" fill="rgb(232,22,54)" fg:x="28120" fg:w="228"/><text x="26.9673%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (228 samples, 0.22%)</title><rect x="26.7173%" y="517" width="0.2166%" height="15" fill="rgb(229,222,32)" fg:x="28120" fg:w="228"/><text x="26.9673%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (218 samples, 0.21%)</title><rect x="26.7268%" y="501" width="0.2071%" height="15" fill="rgb(228,62,29)" fg:x="28130" fg:w="218"/><text x="26.9768%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (119 samples, 0.11%)</title><rect x="26.8209%" y="485" width="0.1131%" height="15" fill="rgb(251,103,34)" fg:x="28229" fg:w="119"/><text x="27.0709%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (119 samples, 0.11%)</title><rect x="26.8209%" y="469" width="0.1131%" height="15" fill="rgb(233,12,30)" fg:x="28229" fg:w="119"/><text x="27.0709%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (282 samples, 0.27%)</title><rect x="26.6774%" y="629" width="0.2679%" height="15" fill="rgb(238,52,0)" fg:x="28078" fg:w="282"/><text x="26.9274%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (282 samples, 0.27%)</title><rect x="26.6774%" y="613" width="0.2679%" height="15" fill="rgb(223,98,5)" fg:x="28078" fg:w="282"/><text x="26.9274%" y="623.50"></text></g><g><title>alloc::alloc::alloc (268 samples, 0.25%)</title><rect x="26.6907%" y="597" width="0.2546%" height="15" fill="rgb(228,75,37)" fg:x="28092" fg:w="268"/><text x="26.9407%" y="607.50"></text></g><g><title>__rg_alloc (268 samples, 0.25%)</title><rect x="26.6907%" y="581" width="0.2546%" height="15" fill="rgb(205,115,49)" fg:x="28092" fg:w="268"/><text x="26.9407%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (268 samples, 0.25%)</title><rect x="26.6907%" y="565" width="0.2546%" height="15" fill="rgb(250,154,43)" fg:x="28092" fg:w="268"/><text x="26.9407%" y="575.50"></text></g><g><title>rust_alloc (256 samples, 0.24%)</title><rect x="26.7021%" y="549" width="0.2432%" height="15" fill="rgb(226,43,29)" fg:x="28104" fg:w="256"/><text x="26.9521%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="26.9340%" y="533" width="0.0114%" height="15" fill="rgb(249,228,39)" fg:x="28348" fg:w="12"/><text x="27.1840%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (314 samples, 0.30%)</title><rect x="26.6622%" y="677" width="0.2983%" height="15" fill="rgb(216,79,43)" fg:x="28062" fg:w="314"/><text x="26.9122%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (300 samples, 0.29%)</title><rect x="26.6755%" y="661" width="0.2850%" height="15" fill="rgb(228,95,12)" fg:x="28076" fg:w="300"/><text x="26.9255%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (298 samples, 0.28%)</title><rect x="26.6774%" y="645" width="0.2831%" height="15" fill="rgb(249,221,15)" fg:x="28078" fg:w="298"/><text x="26.9274%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (716 samples, 0.68%)</title><rect x="26.2974%" y="693" width="0.6803%" height="15" fill="rgb(233,34,13)" fg:x="27678" fg:w="716"/><text x="26.5474%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (18 samples, 0.02%)</title><rect x="26.9606%" y="677" width="0.0171%" height="15" fill="rgb(214,103,39)" fg:x="28376" fg:w="18"/><text x="27.2106%" y="687.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (851 samples, 0.81%)</title><rect x="26.1767%" y="757" width="0.8086%" height="15" fill="rgb(251,126,39)" fg:x="27551" fg:w="851"/><text x="26.4267%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (757 samples, 0.72%)</title><rect x="26.2660%" y="741" width="0.7192%" height="15" fill="rgb(214,216,36)" fg:x="27645" fg:w="757"/><text x="26.5160%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (724 samples, 0.69%)</title><rect x="26.2974%" y="725" width="0.6879%" height="15" fill="rgb(220,221,8)" fg:x="27678" fg:w="724"/><text x="26.5474%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (724 samples, 0.69%)</title><rect x="26.2974%" y="709" width="0.6879%" height="15" fill="rgb(240,216,3)" fg:x="27678" fg:w="724"/><text x="26.5474%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (11 samples, 0.01%)</title><rect x="27.0119%" y="373" width="0.0105%" height="15" fill="rgb(232,218,17)" fg:x="28430" fg:w="11"/><text x="27.2619%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (12 samples, 0.01%)</title><rect x="27.0119%" y="389" width="0.0114%" height="15" fill="rgb(229,163,45)" fg:x="28430" fg:w="12"/><text x="27.2619%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="27.0271%" y="373" width="0.0304%" height="15" fill="rgb(231,110,42)" fg:x="28446" fg:w="32"/><text x="27.2771%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (31 samples, 0.03%)</title><rect x="27.0280%" y="357" width="0.0295%" height="15" fill="rgb(208,170,48)" fg:x="28447" fg:w="31"/><text x="27.2780%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (72 samples, 0.07%)</title><rect x="27.0119%" y="421" width="0.0684%" height="15" fill="rgb(239,116,25)" fg:x="28430" fg:w="72"/><text x="27.2619%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (72 samples, 0.07%)</title><rect x="27.0119%" y="405" width="0.0684%" height="15" fill="rgb(219,200,50)" fg:x="28430" fg:w="72"/><text x="27.2619%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (60 samples, 0.06%)</title><rect x="27.0233%" y="389" width="0.0570%" height="15" fill="rgb(245,200,0)" fg:x="28442" fg:w="60"/><text x="27.2733%" y="399.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (24 samples, 0.02%)</title><rect x="27.0575%" y="373" width="0.0228%" height="15" fill="rgb(245,119,33)" fg:x="28478" fg:w="24"/><text x="27.3075%" y="383.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (24 samples, 0.02%)</title><rect x="27.0575%" y="357" width="0.0228%" height="15" fill="rgb(231,125,12)" fg:x="28478" fg:w="24"/><text x="27.3075%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (87 samples, 0.08%)</title><rect x="27.0119%" y="437" width="0.0827%" height="15" fill="rgb(216,96,41)" fg:x="28430" fg:w="87"/><text x="27.2619%" y="447.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="27.0803%" y="421" width="0.0143%" height="15" fill="rgb(248,43,45)" fg:x="28502" fg:w="15"/><text x="27.3303%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="27.0803%" y="405" width="0.0143%" height="15" fill="rgb(217,222,7)" fg:x="28502" fg:w="15"/><text x="27.3303%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (15 samples, 0.01%)</title><rect x="27.0803%" y="389" width="0.0143%" height="15" fill="rgb(233,28,6)" fg:x="28502" fg:w="15"/><text x="27.3303%" y="399.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="27.0803%" y="373" width="0.0143%" height="15" fill="rgb(231,218,15)" fg:x="28502" fg:w="15"/><text x="27.3303%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (132 samples, 0.13%)</title><rect x="26.9853%" y="453" width="0.1254%" height="15" fill="rgb(226,171,48)" fg:x="28402" fg:w="132"/><text x="27.2353%" y="463.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="27.0983%" y="437" width="0.0124%" height="15" fill="rgb(235,201,9)" fg:x="28521" fg:w="13"/><text x="27.3483%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="27.0983%" y="421" width="0.0124%" height="15" fill="rgb(217,80,15)" fg:x="28521" fg:w="13"/><text x="27.3483%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="27.0983%" y="405" width="0.0124%" height="15" fill="rgb(219,152,8)" fg:x="28521" fg:w="13"/><text x="27.3483%" y="415.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="27.0983%" y="389" width="0.0124%" height="15" fill="rgb(243,107,38)" fg:x="28521" fg:w="13"/><text x="27.3483%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (95 samples, 0.09%)</title><rect x="27.1667%" y="437" width="0.0903%" height="15" fill="rgb(231,17,5)" fg:x="28593" fg:w="95"/><text x="27.4167%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (824 samples, 0.78%)</title><rect x="26.9853%" y="485" width="0.7829%" height="15" fill="rgb(209,25,54)" fg:x="28402" fg:w="824"/><text x="27.2353%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (824 samples, 0.78%)</title><rect x="26.9853%" y="469" width="0.7829%" height="15" fill="rgb(219,0,2)" fg:x="28402" fg:w="824"/><text x="27.2353%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (692 samples, 0.66%)</title><rect x="27.1107%" y="453" width="0.6575%" height="15" fill="rgb(246,9,5)" fg:x="28534" fg:w="692"/><text x="27.3607%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (538 samples, 0.51%)</title><rect x="27.2570%" y="437" width="0.5112%" height="15" fill="rgb(226,159,4)" fg:x="28688" fg:w="538"/><text x="27.5070%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (538 samples, 0.51%)</title><rect x="27.2570%" y="421" width="0.5112%" height="15" fill="rgb(219,175,34)" fg:x="28688" fg:w="538"/><text x="27.5070%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (538 samples, 0.51%)</title><rect x="27.2570%" y="405" width="0.5112%" height="15" fill="rgb(236,10,46)" fg:x="28688" fg:w="538"/><text x="27.5070%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (19 samples, 0.02%)</title><rect x="27.7682%" y="437" width="0.0181%" height="15" fill="rgb(240,211,16)" fg:x="29226" fg:w="19"/><text x="28.0182%" y="447.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (13 samples, 0.01%)</title><rect x="27.7739%" y="421" width="0.0124%" height="15" fill="rgb(205,3,43)" fg:x="29232" fg:w="13"/><text x="28.0239%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (13 samples, 0.01%)</title><rect x="27.7938%" y="405" width="0.0124%" height="15" fill="rgb(245,7,22)" fg:x="29253" fg:w="13"/><text x="28.0438%" y="415.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="27.7938%" y="389" width="0.0124%" height="15" fill="rgb(239,132,32)" fg:x="29253" fg:w="13"/><text x="28.0438%" y="399.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (13,088 samples, 12.44%)</title><rect x="15.3881%" y="821" width="12.4352%" height="15" fill="rgb(228,202,34)" fg:x="16196" fg:w="13088"/><text x="15.6381%" y="831.50">tremor_runtime::con..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,733 samples, 1.65%)</title><rect x="26.1767%" y="805" width="1.6466%" height="15" fill="rgb(254,200,22)" fg:x="27551" fg:w="1733"/><text x="26.4267%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,733 samples, 1.65%)</title><rect x="26.1767%" y="789" width="1.6466%" height="15" fill="rgb(219,10,39)" fg:x="27551" fg:w="1733"/><text x="26.4267%" y="799.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (1,733 samples, 1.65%)</title><rect x="26.1767%" y="773" width="1.6466%" height="15" fill="rgb(226,210,39)" fg:x="27551" fg:w="1733"/><text x="26.4267%" y="783.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (882 samples, 0.84%)</title><rect x="26.9853%" y="757" width="0.8380%" height="15" fill="rgb(208,219,16)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (882 samples, 0.84%)</title><rect x="26.9853%" y="741" width="0.8380%" height="15" fill="rgb(216,158,51)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (882 samples, 0.84%)</title><rect x="26.9853%" y="725" width="0.8380%" height="15" fill="rgb(233,14,44)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (882 samples, 0.84%)</title><rect x="26.9853%" y="709" width="0.8380%" height="15" fill="rgb(237,97,39)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (882 samples, 0.84%)</title><rect x="26.9853%" y="693" width="0.8380%" height="15" fill="rgb(218,198,43)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (882 samples, 0.84%)</title><rect x="26.9853%" y="677" width="0.8380%" height="15" fill="rgb(231,104,20)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (882 samples, 0.84%)</title><rect x="26.9853%" y="661" width="0.8380%" height="15" fill="rgb(254,36,13)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (882 samples, 0.84%)</title><rect x="26.9853%" y="645" width="0.8380%" height="15" fill="rgb(248,14,50)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (882 samples, 0.84%)</title><rect x="26.9853%" y="629" width="0.8380%" height="15" fill="rgb(217,107,29)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (882 samples, 0.84%)</title><rect x="26.9853%" y="613" width="0.8380%" height="15" fill="rgb(251,169,33)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="623.50"></text></g><g><title>alloc::alloc::alloc (882 samples, 0.84%)</title><rect x="26.9853%" y="597" width="0.8380%" height="15" fill="rgb(217,108,32)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="607.50"></text></g><g><title>__rg_alloc (882 samples, 0.84%)</title><rect x="26.9853%" y="581" width="0.8380%" height="15" fill="rgb(219,66,42)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (882 samples, 0.84%)</title><rect x="26.9853%" y="565" width="0.8380%" height="15" fill="rgb(206,180,7)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="575.50"></text></g><g><title>rust_alloc (882 samples, 0.84%)</title><rect x="26.9853%" y="549" width="0.8380%" height="15" fill="rgb(208,226,31)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (882 samples, 0.84%)</title><rect x="26.9853%" y="533" width="0.8380%" height="15" fill="rgb(218,26,49)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (882 samples, 0.84%)</title><rect x="26.9853%" y="517" width="0.8380%" height="15" fill="rgb(233,197,48)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (882 samples, 0.84%)</title><rect x="26.9853%" y="501" width="0.8380%" height="15" fill="rgb(252,181,51)" fg:x="28402" fg:w="882"/><text x="27.2353%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.06%)</title><rect x="27.7682%" y="485" width="0.0551%" height="15" fill="rgb(253,90,19)" fg:x="29226" fg:w="58"/><text x="28.0182%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.06%)</title><rect x="27.7682%" y="469" width="0.0551%" height="15" fill="rgb(215,171,30)" fg:x="29226" fg:w="58"/><text x="28.0182%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.06%)</title><rect x="27.7682%" y="453" width="0.0551%" height="15" fill="rgb(214,222,9)" fg:x="29226" fg:w="58"/><text x="28.0182%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="27.7862%" y="437" width="0.0371%" height="15" fill="rgb(223,3,22)" fg:x="29245" fg:w="39"/><text x="28.0362%" y="447.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (35 samples, 0.03%)</title><rect x="27.7900%" y="421" width="0.0333%" height="15" fill="rgb(225,196,46)" fg:x="29249" fg:w="35"/><text x="28.0400%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::close (18 samples, 0.02%)</title><rect x="27.8062%" y="405" width="0.0171%" height="15" fill="rgb(209,110,37)" fg:x="29266" fg:w="18"/><text x="28.0562%" y="415.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::terminate (18 samples, 0.02%)</title><rect x="27.8062%" y="389" width="0.0171%" height="15" fill="rgb(249,89,12)" fg:x="29266" fg:w="18"/><text x="28.0562%" y="399.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::read (18 samples, 0.02%)</title><rect x="27.8062%" y="373" width="0.0171%" height="15" fill="rgb(226,27,33)" fg:x="29266" fg:w="18"/><text x="28.0562%" y="383.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="27.9563%" y="773" width="0.0143%" height="15" fill="rgb(213,82,22)" fg:x="29424" fg:w="15"/><text x="28.2063%" y="783.50"></text></g><g><title>rust_dealloc (28 samples, 0.03%)</title><rect x="27.9838%" y="709" width="0.0266%" height="15" fill="rgb(248,140,0)" fg:x="29453" fg:w="28"/><text x="28.2338%" y="719.50"></text></g><g><title>sizeclass_to_size (13 samples, 0.01%)</title><rect x="28.0105%" y="709" width="0.0124%" height="15" fill="rgb(228,106,3)" fg:x="29481" fg:w="13"/><text x="28.2605%" y="719.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (13 samples, 0.01%)</title><rect x="28.0105%" y="693" width="0.0124%" height="15" fill="rgb(209,23,37)" fg:x="29481" fg:w="13"/><text x="28.2605%" y="703.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="28.0865%" y="677" width="0.0143%" height="15" fill="rgb(241,93,50)" fg:x="29561" fg:w="15"/><text x="28.3365%" y="687.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="28.0865%" y="661" width="0.0143%" height="15" fill="rgb(253,46,43)" fg:x="29561" fg:w="15"/><text x="28.3365%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (94 samples, 0.09%)</title><rect x="28.0247%" y="709" width="0.0893%" height="15" fill="rgb(226,206,43)" fg:x="29496" fg:w="94"/><text x="28.2747%" y="719.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (77 samples, 0.07%)</title><rect x="28.0409%" y="693" width="0.0732%" height="15" fill="rgb(217,54,7)" fg:x="29513" fg:w="77"/><text x="28.2909%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (194 samples, 0.18%)</title><rect x="27.9772%" y="741" width="0.1843%" height="15" fill="rgb(223,5,52)" fg:x="29446" fg:w="194"/><text x="28.2272%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (194 samples, 0.18%)</title><rect x="27.9772%" y="725" width="0.1843%" height="15" fill="rgb(206,52,46)" fg:x="29446" fg:w="194"/><text x="28.2272%" y="735.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (50 samples, 0.05%)</title><rect x="28.1140%" y="709" width="0.0475%" height="15" fill="rgb(253,136,11)" fg:x="29590" fg:w="50"/><text x="28.3640%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (196 samples, 0.19%)</title><rect x="27.9772%" y="773" width="0.1862%" height="15" fill="rgb(208,106,33)" fg:x="29446" fg:w="196"/><text x="28.2272%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (196 samples, 0.19%)</title><rect x="27.9772%" y="757" width="0.1862%" height="15" fill="rgb(206,54,4)" fg:x="29446" fg:w="196"/><text x="28.2272%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (224 samples, 0.21%)</title><rect x="27.9563%" y="789" width="0.2128%" height="15" fill="rgb(213,3,15)" fg:x="29424" fg:w="224"/><text x="28.2063%" y="799.50"></text></g><g><title>rust_dealloc (246 samples, 0.23%)</title><rect x="27.9411%" y="805" width="0.2337%" height="15" fill="rgb(252,211,39)" fg:x="29408" fg:w="246"/><text x="28.1911%" y="815.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (19 samples, 0.02%)</title><rect x="28.1796%" y="757" width="0.0181%" height="15" fill="rgb(223,6,36)" fg:x="29659" fg:w="19"/><text x="28.4296%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="28.1843%" y="741" width="0.0133%" height="15" fill="rgb(252,169,45)" fg:x="29664" fg:w="14"/><text x="28.4343%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="28.1843%" y="725" width="0.0133%" height="15" fill="rgb(212,48,26)" fg:x="29664" fg:w="14"/><text x="28.4343%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="28.1843%" y="709" width="0.0133%" height="15" fill="rgb(251,102,48)" fg:x="29664" fg:w="14"/><text x="28.4343%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (26 samples, 0.02%)</title><rect x="28.1748%" y="789" width="0.0247%" height="15" fill="rgb(243,208,16)" fg:x="29654" fg:w="26"/><text x="28.4248%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (26 samples, 0.02%)</title><rect x="28.1748%" y="773" width="0.0247%" height="15" fill="rgb(219,96,24)" fg:x="29654" fg:w="26"/><text x="28.4248%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (28 samples, 0.03%)</title><rect x="28.1748%" y="805" width="0.0266%" height="15" fill="rgb(219,33,29)" fg:x="29654" fg:w="28"/><text x="28.4248%" y="815.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (399 samples, 0.38%)</title><rect x="27.8233%" y="821" width="0.3791%" height="15" fill="rgb(223,176,5)" fg:x="29284" fg:w="399"/><text x="28.0733%" y="831.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.01%)</title><rect x="28.9169%" y="789" width="0.0143%" height="15" fill="rgb(228,140,14)" fg:x="30435" fg:w="15"/><text x="29.1669%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="28.9055%" y="805" width="0.0266%" height="15" fill="rgb(217,179,31)" fg:x="30423" fg:w="28"/><text x="29.1555%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="29.0784%" y="789" width="0.0124%" height="15" fill="rgb(230,9,30)" fg:x="30605" fg:w="13"/><text x="29.3284%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (513 samples, 0.49%)</title><rect x="29.3739%" y="773" width="0.4874%" height="15" fill="rgb(230,136,20)" fg:x="30916" fg:w="513"/><text x="29.6239%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.01%)</title><rect x="29.8850%" y="741" width="0.0105%" height="15" fill="rgb(215,210,22)" fg:x="31454" fg:w="11"/><text x="30.1350%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (13 samples, 0.01%)</title><rect x="29.8850%" y="757" width="0.0124%" height="15" fill="rgb(218,43,5)" fg:x="31454" fg:w="13"/><text x="30.1350%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (524 samples, 0.50%)</title><rect x="29.8613%" y="773" width="0.4979%" height="15" fill="rgb(216,11,5)" fg:x="31429" fg:w="524"/><text x="30.1113%" y="783.50"></text></g><g><title>core::ptr::write (486 samples, 0.46%)</title><rect x="29.8974%" y="757" width="0.4618%" height="15" fill="rgb(209,82,29)" fg:x="31467" fg:w="486"/><text x="30.1474%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (486 samples, 0.46%)</title><rect x="29.8974%" y="741" width="0.4618%" height="15" fill="rgb(244,115,12)" fg:x="31467" fg:w="486"/><text x="30.1474%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (46 samples, 0.04%)</title><rect x="30.3591%" y="773" width="0.0437%" height="15" fill="rgb(222,82,18)" fg:x="31953" fg:w="46"/><text x="30.6091%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (19 samples, 0.02%)</title><rect x="30.4285%" y="741" width="0.0181%" height="15" fill="rgb(249,227,8)" fg:x="32026" fg:w="19"/><text x="30.6785%" y="751.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (19 samples, 0.02%)</title><rect x="30.4285%" y="725" width="0.0181%" height="15" fill="rgb(253,141,45)" fg:x="32026" fg:w="19"/><text x="30.6785%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (992 samples, 0.94%)</title><rect x="30.4504%" y="677" width="0.9425%" height="15" fill="rgb(234,184,4)" fg:x="32049" fg:w="992"/><text x="30.7004%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (879 samples, 0.84%)</title><rect x="30.5577%" y="661" width="0.8352%" height="15" fill="rgb(218,194,23)" fg:x="32162" fg:w="879"/><text x="30.8077%" y="671.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (1,025 samples, 0.97%)</title><rect x="30.4209%" y="757" width="0.9739%" height="15" fill="rgb(235,66,41)" fg:x="32018" fg:w="1025"/><text x="30.6709%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (994 samples, 0.94%)</title><rect x="30.4504%" y="741" width="0.9444%" height="15" fill="rgb(245,217,1)" fg:x="32049" fg:w="994"/><text x="30.7004%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (994 samples, 0.94%)</title><rect x="30.4504%" y="725" width="0.9444%" height="15" fill="rgb(229,91,1)" fg:x="32049" fg:w="994"/><text x="30.7004%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (994 samples, 0.94%)</title><rect x="30.4504%" y="709" width="0.9444%" height="15" fill="rgb(207,101,30)" fg:x="32049" fg:w="994"/><text x="30.7004%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (994 samples, 0.94%)</title><rect x="30.4504%" y="693" width="0.9444%" height="15" fill="rgb(223,82,49)" fg:x="32049" fg:w="994"/><text x="30.7004%" y="703.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (1,055 samples, 1.00%)</title><rect x="30.4029%" y="773" width="1.0024%" height="15" fill="rgb(218,167,17)" fg:x="31999" fg:w="1055"/><text x="30.6529%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (11 samples, 0.01%)</title><rect x="31.3948%" y="757" width="0.0105%" height="15" fill="rgb(208,103,14)" fg:x="33043" fg:w="11"/><text x="31.6448%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="32.1444%" y="741" width="0.0181%" height="15" fill="rgb(238,20,8)" fg:x="33832" fg:w="19"/><text x="32.3944%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (12 samples, 0.01%)</title><rect x="32.1625%" y="741" width="0.0114%" height="15" fill="rgb(218,80,54)" fg:x="33851" fg:w="12"/><text x="32.4125%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (28 samples, 0.03%)</title><rect x="32.1739%" y="741" width="0.0266%" height="15" fill="rgb(240,144,17)" fg:x="33863" fg:w="28"/><text x="32.4239%" y="751.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="32.1891%" y="725" width="0.0114%" height="15" fill="rgb(245,27,50)" fg:x="33879" fg:w="12"/><text x="32.4391%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (414 samples, 0.39%)</title><rect x="32.2005%" y="741" width="0.3933%" height="15" fill="rgb(251,51,7)" fg:x="33891" fg:w="414"/><text x="32.4505%" y="751.50"></text></g><g><title>core::ptr::write (407 samples, 0.39%)</title><rect x="32.2071%" y="725" width="0.3867%" height="15" fill="rgb(245,217,29)" fg:x="33898" fg:w="407"/><text x="32.4571%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (386 samples, 0.37%)</title><rect x="32.2271%" y="709" width="0.3667%" height="15" fill="rgb(221,176,29)" fg:x="33919" fg:w="386"/><text x="32.4771%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,230 samples, 1.17%)</title><rect x="31.4290%" y="757" width="1.1686%" height="15" fill="rgb(212,180,24)" fg:x="33079" fg:w="1230"/><text x="31.6790%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,264 samples, 1.20%)</title><rect x="31.4052%" y="773" width="1.2010%" height="15" fill="rgb(254,24,2)" fg:x="33054" fg:w="1264"/><text x="31.6552%" y="783.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,702 samples, 3.52%)</title><rect x="29.0907%" y="789" width="3.5173%" height="15" fill="rgb(230,100,2)" fg:x="30618" fg:w="3702"/><text x="29.3407%" y="799.50">tre..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (88 samples, 0.08%)</title><rect x="32.6081%" y="789" width="0.0836%" height="15" fill="rgb(219,142,25)" fg:x="34320" fg:w="88"/><text x="32.8581%" y="799.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (31 samples, 0.03%)</title><rect x="32.6917%" y="789" width="0.0295%" height="15" fill="rgb(240,73,43)" fg:x="34408" fg:w="31"/><text x="32.9417%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,986 samples, 3.79%)</title><rect x="28.9349%" y="805" width="3.7872%" height="15" fill="rgb(214,114,15)" fg:x="30454" fg:w="3986"/><text x="29.1849%" y="815.50">&lt;cor..</text></g><g><title>__memcpy_avx_unaligned_erms (1,695 samples, 1.61%)</title><rect x="32.7221%" y="805" width="1.6105%" height="15" fill="rgb(207,130,4)" fg:x="34440" fg:w="1695"/><text x="32.9721%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="34.3363%" y="789" width="0.0152%" height="15" fill="rgb(221,25,40)" fg:x="36139" fg:w="16"/><text x="34.5863%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (23 samples, 0.02%)</title><rect x="34.3363%" y="805" width="0.0219%" height="15" fill="rgb(241,184,7)" fg:x="36139" fg:w="23"/><text x="34.5863%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="34.3667%" y="805" width="0.0133%" height="15" fill="rgb(235,159,4)" fg:x="36171" fg:w="14"/><text x="34.6167%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="34.3667%" y="789" width="0.0133%" height="15" fill="rgb(214,87,48)" fg:x="36171" fg:w="14"/><text x="34.6167%" y="799.50"></text></g><g><title>async_global_executor::reactor::block_on (28,511 samples, 27.09%)</title><rect x="7.3007%" y="1157" width="27.0888%" height="15" fill="rgb(246,198,24)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="1167.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (28,511 samples, 27.09%)</title><rect x="7.3007%" y="1141" width="27.0888%" height="15" fill="rgb(209,66,40)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="1151.50">async_global_executor::reactor::block_on::{..</text></g><g><title>async_io::driver::block_on (28,511 samples, 27.09%)</title><rect x="7.3007%" y="1125" width="27.0888%" height="15" fill="rgb(233,147,39)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="1135.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (28,511 samples, 27.09%)</title><rect x="7.3007%" y="1109" width="27.0888%" height="15" fill="rgb(231,145,52)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="1119.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28,511 samples, 27.09%)</title><rect x="7.3007%" y="1093" width="27.0888%" height="15" fill="rgb(206,20,26)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="1103.50">&lt;core::future::from_generator::GenFuture&lt;T&gt;..</text></g><g><title>async_executor::Executor::run::{{closure}} (28,511 samples, 27.09%)</title><rect x="7.3007%" y="1077" width="27.0888%" height="15" fill="rgb(238,220,4)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="1087.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (28,511 samples, 27.09%)</title><rect x="7.3007%" y="1061" width="27.0888%" height="15" fill="rgb(252,195,42)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="1071.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28,511 samples, 27.09%)</title><rect x="7.3007%" y="1045" width="27.0888%" height="15" fill="rgb(209,10,6)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="1055.50">&lt;core::future::from_generator::GenFuture&lt;T&gt;..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (28,511 samples, 27.09%)</title><rect x="7.3007%" y="1029" width="27.0888%" height="15" fill="rgb(229,3,52)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="1039.50">async_executor::Executor::run::{{closure}}:..</text></g><g><title>async_task::runnable::Runnable::run (28,511 samples, 27.09%)</title><rect x="7.3007%" y="1013" width="27.0888%" height="15" fill="rgb(253,49,37)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="1023.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (28,511 samples, 27.09%)</title><rect x="7.3007%" y="997" width="27.0888%" height="15" fill="rgb(240,103,49)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="1007.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (28,511 samples, 27.09%)</title><rect x="7.3007%" y="981" width="27.0888%" height="15" fill="rgb(250,182,30)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28,511 samples, 27.09%)</title><rect x="7.3007%" y="965" width="27.0888%" height="15" fill="rgb(248,8,30)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="975.50">&lt;core::future::from_generator::GenFuture&lt;T&gt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (28,511 samples, 27.09%)</title><rect x="7.3007%" y="949" width="27.0888%" height="15" fill="rgb(237,120,30)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="959.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (28,511 samples, 27.09%)</title><rect x="7.3007%" y="933" width="27.0888%" height="15" fill="rgb(221,146,34)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="943.50">&lt;async_std::task::builder::SupportTaskLocal..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (28,511 samples, 27.09%)</title><rect x="7.3007%" y="917" width="27.0888%" height="15" fill="rgb(242,55,13)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="927.50">async_std::task::task_locals_wrapper::TaskL..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28,511 samples, 27.09%)</title><rect x="7.3007%" y="901" width="27.0888%" height="15" fill="rgb(242,112,31)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="911.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28,511 samples, 27.09%)</title><rect x="7.3007%" y="885" width="27.0888%" height="15" fill="rgb(249,192,27)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="895.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (28,511 samples, 27.09%)</title><rect x="7.3007%" y="869" width="27.0888%" height="15" fill="rgb(208,204,44)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="879.50">async_std::task::task_locals_wrapper::TaskL..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (28,511 samples, 27.09%)</title><rect x="7.3007%" y="853" width="27.0888%" height="15" fill="rgb(208,93,54)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="863.50">&lt;async_std::task::builder::SupportTaskLocal..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28,511 samples, 27.09%)</title><rect x="7.3007%" y="837" width="27.0888%" height="15" fill="rgb(242,1,31)" fg:x="7684" fg:w="28511"/><text x="7.5507%" y="847.50">&lt;core::future::from_generator::GenFuture&lt;T&gt;..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,512 samples, 6.19%)</title><rect x="28.2024%" y="821" width="6.1872%" height="15" fill="rgb(241,83,25)" fg:x="29683" fg:w="6512"/><text x="28.4524%" y="831.50">tremor_r..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (667 samples, 0.63%)</title><rect x="34.4380%" y="597" width="0.6337%" height="15" fill="rgb(205,169,50)" fg:x="36246" fg:w="667"/><text x="34.6880%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (724 samples, 0.69%)</title><rect x="34.3895%" y="693" width="0.6879%" height="15" fill="rgb(239,186,37)" fg:x="36195" fg:w="724"/><text x="34.6395%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (724 samples, 0.69%)</title><rect x="34.3895%" y="677" width="0.6879%" height="15" fill="rgb(205,221,10)" fg:x="36195" fg:w="724"/><text x="34.6395%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (724 samples, 0.69%)</title><rect x="34.3895%" y="661" width="0.6879%" height="15" fill="rgb(218,196,15)" fg:x="36195" fg:w="724"/><text x="34.6395%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (724 samples, 0.69%)</title><rect x="34.3895%" y="645" width="0.6879%" height="15" fill="rgb(218,196,35)" fg:x="36195" fg:w="724"/><text x="34.6395%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (717 samples, 0.68%)</title><rect x="34.3962%" y="629" width="0.6812%" height="15" fill="rgb(233,63,24)" fg:x="36202" fg:w="717"/><text x="34.6462%" y="639.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (717 samples, 0.68%)</title><rect x="34.3962%" y="613" width="0.6812%" height="15" fill="rgb(225,8,4)" fg:x="36202" fg:w="717"/><text x="34.6462%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="35.0936%" y="341" width="0.0114%" height="15" fill="rgb(234,105,35)" fg:x="36936" fg:w="12"/><text x="35.3436%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="35.0936%" y="325" width="0.0114%" height="15" fill="rgb(236,21,32)" fg:x="36936" fg:w="12"/><text x="35.3436%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (15 samples, 0.01%)</title><rect x="35.0936%" y="357" width="0.0143%" height="15" fill="rgb(228,109,6)" fg:x="36936" fg:w="15"/><text x="35.3436%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (24 samples, 0.02%)</title><rect x="35.0898%" y="373" width="0.0228%" height="15" fill="rgb(229,215,31)" fg:x="36932" fg:w="24"/><text x="35.3398%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="35.1240%" y="357" width="0.0114%" height="15" fill="rgb(221,52,54)" fg:x="36968" fg:w="12"/><text x="35.3740%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (154 samples, 0.15%)</title><rect x="35.0898%" y="405" width="0.1463%" height="15" fill="rgb(252,129,43)" fg:x="36932" fg:w="154"/><text x="35.3398%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (154 samples, 0.15%)</title><rect x="35.0898%" y="389" width="0.1463%" height="15" fill="rgb(248,183,27)" fg:x="36932" fg:w="154"/><text x="35.3398%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (130 samples, 0.12%)</title><rect x="35.1126%" y="373" width="0.1235%" height="15" fill="rgb(250,0,22)" fg:x="36956" fg:w="130"/><text x="35.3626%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (106 samples, 0.10%)</title><rect x="35.1354%" y="357" width="0.1007%" height="15" fill="rgb(213,166,10)" fg:x="36980" fg:w="106"/><text x="35.3854%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (106 samples, 0.10%)</title><rect x="35.1354%" y="341" width="0.1007%" height="15" fill="rgb(207,163,36)" fg:x="36980" fg:w="106"/><text x="35.3854%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (106 samples, 0.10%)</title><rect x="35.1354%" y="325" width="0.1007%" height="15" fill="rgb(208,122,22)" fg:x="36980" fg:w="106"/><text x="35.3854%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (157 samples, 0.15%)</title><rect x="35.0898%" y="645" width="0.1492%" height="15" fill="rgb(207,104,49)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (157 samples, 0.15%)</title><rect x="35.0898%" y="629" width="0.1492%" height="15" fill="rgb(248,211,50)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="639.50"></text></g><g><title>value_trait::Builder::object (157 samples, 0.15%)</title><rect x="35.0898%" y="613" width="0.1492%" height="15" fill="rgb(217,13,45)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="623.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (157 samples, 0.15%)</title><rect x="35.0898%" y="597" width="0.1492%" height="15" fill="rgb(211,216,49)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (157 samples, 0.15%)</title><rect x="35.0898%" y="581" width="0.1492%" height="15" fill="rgb(221,58,53)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (157 samples, 0.15%)</title><rect x="35.0898%" y="565" width="0.1492%" height="15" fill="rgb(220,112,41)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (157 samples, 0.15%)</title><rect x="35.0898%" y="549" width="0.1492%" height="15" fill="rgb(236,38,28)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (157 samples, 0.15%)</title><rect x="35.0898%" y="533" width="0.1492%" height="15" fill="rgb(227,195,22)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="543.50"></text></g><g><title>alloc::alloc::alloc (157 samples, 0.15%)</title><rect x="35.0898%" y="517" width="0.1492%" height="15" fill="rgb(214,55,33)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="527.50"></text></g><g><title>__rg_alloc (157 samples, 0.15%)</title><rect x="35.0898%" y="501" width="0.1492%" height="15" fill="rgb(248,80,13)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (157 samples, 0.15%)</title><rect x="35.0898%" y="485" width="0.1492%" height="15" fill="rgb(238,52,6)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="495.50"></text></g><g><title>rust_alloc (157 samples, 0.15%)</title><rect x="35.0898%" y="469" width="0.1492%" height="15" fill="rgb(224,198,47)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (157 samples, 0.15%)</title><rect x="35.0898%" y="453" width="0.1492%" height="15" fill="rgb(233,171,20)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (157 samples, 0.15%)</title><rect x="35.0898%" y="437" width="0.1492%" height="15" fill="rgb(241,30,25)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (157 samples, 0.15%)</title><rect x="35.0898%" y="421" width="0.1492%" height="15" fill="rgb(207,171,38)" fg:x="36932" fg:w="157"/><text x="35.3398%" y="431.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="35.2988%" y="613" width="0.0114%" height="15" fill="rgb(234,70,1)" fg:x="37152" fg:w="12"/><text x="35.5488%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="35.2988%" y="597" width="0.0114%" height="15" fill="rgb(232,178,18)" fg:x="37152" fg:w="12"/><text x="35.5488%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="35.2988%" y="581" width="0.0114%" height="15" fill="rgb(241,78,40)" fg:x="37152" fg:w="12"/><text x="35.5488%" y="591.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="35.2988%" y="565" width="0.0114%" height="15" fill="rgb(222,35,25)" fg:x="37152" fg:w="12"/><text x="35.5488%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="35.2988%" y="549" width="0.0114%" height="15" fill="rgb(207,92,16)" fg:x="37152" fg:w="12"/><text x="35.5488%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="35.3245%" y="549" width="0.0124%" height="15" fill="rgb(216,59,51)" fg:x="37179" fg:w="13"/><text x="35.5745%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (13 samples, 0.01%)</title><rect x="35.3245%" y="533" width="0.0124%" height="15" fill="rgb(213,80,28)" fg:x="37179" fg:w="13"/><text x="35.5745%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (106 samples, 0.10%)</title><rect x="35.2485%" y="645" width="0.1007%" height="15" fill="rgb(220,93,7)" fg:x="37099" fg:w="106"/><text x="35.4985%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (54 samples, 0.05%)</title><rect x="35.2979%" y="629" width="0.0513%" height="15" fill="rgb(225,24,44)" fg:x="37151" fg:w="54"/><text x="35.5479%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (41 samples, 0.04%)</title><rect x="35.3102%" y="613" width="0.0390%" height="15" fill="rgb(243,74,40)" fg:x="37164" fg:w="41"/><text x="35.5602%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (41 samples, 0.04%)</title><rect x="35.3102%" y="597" width="0.0390%" height="15" fill="rgb(228,39,7)" fg:x="37164" fg:w="41"/><text x="35.5602%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (26 samples, 0.02%)</title><rect x="35.3245%" y="581" width="0.0247%" height="15" fill="rgb(227,79,8)" fg:x="37179" fg:w="26"/><text x="35.5745%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (26 samples, 0.02%)</title><rect x="35.3245%" y="565" width="0.0247%" height="15" fill="rgb(236,58,11)" fg:x="37179" fg:w="26"/><text x="35.5745%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (13 samples, 0.01%)</title><rect x="35.3368%" y="549" width="0.0124%" height="15" fill="rgb(249,63,35)" fg:x="37192" fg:w="13"/><text x="35.5868%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="35.3368%" y="533" width="0.0124%" height="15" fill="rgb(252,114,16)" fg:x="37192" fg:w="13"/><text x="35.5868%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="35.3368%" y="517" width="0.0124%" height="15" fill="rgb(254,151,24)" fg:x="37192" fg:w="13"/><text x="35.5868%" y="527.50"></text></g><g><title>core::time::Duration::as_nanos (11 samples, 0.01%)</title><rect x="35.3834%" y="629" width="0.0105%" height="15" fill="rgb(253,54,39)" fg:x="37241" fg:w="11"/><text x="35.6334%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (76 samples, 0.07%)</title><rect x="35.4423%" y="581" width="0.0722%" height="15" fill="rgb(243,25,45)" fg:x="37303" fg:w="76"/><text x="35.6923%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (76 samples, 0.07%)</title><rect x="35.4423%" y="565" width="0.0722%" height="15" fill="rgb(234,134,9)" fg:x="37303" fg:w="76"/><text x="35.6923%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (75 samples, 0.07%)</title><rect x="35.4432%" y="549" width="0.0713%" height="15" fill="rgb(227,166,31)" fg:x="37304" fg:w="75"/><text x="35.6932%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (75 samples, 0.07%)</title><rect x="35.4432%" y="533" width="0.0713%" height="15" fill="rgb(245,143,41)" fg:x="37304" fg:w="75"/><text x="35.6932%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (75 samples, 0.07%)</title><rect x="35.4432%" y="517" width="0.0713%" height="15" fill="rgb(238,181,32)" fg:x="37304" fg:w="75"/><text x="35.6932%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (41 samples, 0.04%)</title><rect x="35.4755%" y="501" width="0.0390%" height="15" fill="rgb(224,113,18)" fg:x="37338" fg:w="41"/><text x="35.7255%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (158 samples, 0.15%)</title><rect x="35.3938%" y="613" width="0.1501%" height="15" fill="rgb(240,229,28)" fg:x="37252" fg:w="158"/><text x="35.6438%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (158 samples, 0.15%)</title><rect x="35.3938%" y="597" width="0.1501%" height="15" fill="rgb(250,185,3)" fg:x="37252" fg:w="158"/><text x="35.6438%" y="607.50"></text></g><g><title>core::time::Duration::new (31 samples, 0.03%)</title><rect x="35.5145%" y="581" width="0.0295%" height="15" fill="rgb(212,59,25)" fg:x="37379" fg:w="31"/><text x="35.7645%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (171 samples, 0.16%)</title><rect x="35.3938%" y="629" width="0.1625%" height="15" fill="rgb(221,87,20)" fg:x="37252" fg:w="171"/><text x="35.6438%" y="639.50"></text></g><g><title>tremor_common::time::nanotime (13 samples, 0.01%)</title><rect x="35.5439%" y="613" width="0.0124%" height="15" fill="rgb(213,74,28)" fg:x="37410" fg:w="13"/><text x="35.7939%" y="623.50"></text></g><g><title>tremor_common::time::nanotime (884 samples, 0.84%)</title><rect x="35.3577%" y="645" width="0.8399%" height="15" fill="rgb(224,132,34)" fg:x="37214" fg:w="884"/><text x="35.6077%" y="655.50"></text></g><g><title>std::time::SystemTime::now (675 samples, 0.64%)</title><rect x="35.5563%" y="629" width="0.6413%" height="15" fill="rgb(222,101,24)" fg:x="37423" fg:w="675"/><text x="35.8063%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (675 samples, 0.64%)</title><rect x="35.5563%" y="613" width="0.6413%" height="15" fill="rgb(254,142,4)" fg:x="37423" fg:w="675"/><text x="35.8063%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (675 samples, 0.64%)</title><rect x="35.5563%" y="597" width="0.6413%" height="15" fill="rgb(230,229,49)" fg:x="37423" fg:w="675"/><text x="35.8063%" y="607.50"></text></g><g><title>__clock_gettime_2 (543 samples, 0.52%)</title><rect x="35.6817%" y="581" width="0.5159%" height="15" fill="rgb(238,70,47)" fg:x="37555" fg:w="543"/><text x="35.9317%" y="591.50"></text></g><g><title>__vdso_clock_gettime (510 samples, 0.48%)</title><rect x="35.7131%" y="565" width="0.4846%" height="15" fill="rgb(231,160,17)" fg:x="37588" fg:w="510"/><text x="35.9631%" y="575.50"></text></g><g><title>[[vdso]] (330 samples, 0.31%)</title><rect x="35.8841%" y="549" width="0.3135%" height="15" fill="rgb(218,68,53)" fg:x="37768" fg:w="330"/><text x="36.1341%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (12 samples, 0.01%)</title><rect x="36.2632%" y="565" width="0.0114%" height="15" fill="rgb(236,111,10)" fg:x="38167" fg:w="12"/><text x="36.5132%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,283 samples, 1.22%)</title><rect x="35.0774%" y="677" width="1.2190%" height="15" fill="rgb(224,34,41)" fg:x="36919" fg:w="1283"/><text x="35.3274%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,283 samples, 1.22%)</title><rect x="35.0774%" y="661" width="1.2190%" height="15" fill="rgb(241,118,19)" fg:x="36919" fg:w="1283"/><text x="35.3274%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (104 samples, 0.10%)</title><rect x="36.1976%" y="645" width="0.0988%" height="15" fill="rgb(238,129,25)" fg:x="38098" fg:w="104"/><text x="36.4476%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (85 samples, 0.08%)</title><rect x="36.2157%" y="629" width="0.0808%" height="15" fill="rgb(238,22,31)" fg:x="38117" fg:w="85"/><text x="36.4657%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (62 samples, 0.06%)</title><rect x="36.2375%" y="613" width="0.0589%" height="15" fill="rgb(222,174,48)" fg:x="38140" fg:w="62"/><text x="36.4875%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (62 samples, 0.06%)</title><rect x="36.2375%" y="597" width="0.0589%" height="15" fill="rgb(206,152,40)" fg:x="38140" fg:w="62"/><text x="36.4875%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (62 samples, 0.06%)</title><rect x="36.2375%" y="581" width="0.0589%" height="15" fill="rgb(218,99,54)" fg:x="38140" fg:w="62"/><text x="36.4875%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (23 samples, 0.02%)</title><rect x="36.2746%" y="565" width="0.0219%" height="15" fill="rgb(220,174,26)" fg:x="38179" fg:w="23"/><text x="36.5246%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="37.6874%" y="629" width="0.0114%" height="15" fill="rgb(245,116,9)" fg:x="39666" fg:w="12"/><text x="37.9374%" y="639.50"></text></g><g><title>aligned_size (20 samples, 0.02%)</title><rect x="38.0665%" y="389" width="0.0190%" height="15" fill="rgb(209,72,35)" fg:x="40065" fg:w="20"/><text x="38.3165%" y="399.50"></text></g><g><title>rust_alloc (20 samples, 0.02%)</title><rect x="38.0912%" y="357" width="0.0190%" height="15" fill="rgb(226,126,21)" fg:x="40091" fg:w="20"/><text x="38.3412%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::empty (48 samples, 0.05%)</title><rect x="38.1321%" y="341" width="0.0456%" height="15" fill="rgb(227,192,1)" fg:x="40134" fg:w="48"/><text x="38.3821%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (48 samples, 0.05%)</title><rect x="38.1321%" y="325" width="0.0456%" height="15" fill="rgb(237,180,29)" fg:x="40134" fg:w="48"/><text x="38.3821%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (669 samples, 0.64%)</title><rect x="38.0912%" y="389" width="0.6356%" height="15" fill="rgb(230,197,35)" fg:x="40091" fg:w="669"/><text x="38.3412%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (669 samples, 0.64%)</title><rect x="38.0912%" y="373" width="0.6356%" height="15" fill="rgb(246,193,31)" fg:x="40091" fg:w="669"/><text x="38.3412%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (641 samples, 0.61%)</title><rect x="38.1178%" y="357" width="0.6090%" height="15" fill="rgb(241,36,4)" fg:x="40119" fg:w="641"/><text x="38.3678%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (578 samples, 0.55%)</title><rect x="38.1777%" y="341" width="0.5492%" height="15" fill="rgb(241,130,17)" fg:x="40182" fg:w="578"/><text x="38.4277%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (578 samples, 0.55%)</title><rect x="38.1777%" y="325" width="0.5492%" height="15" fill="rgb(206,137,32)" fg:x="40182" fg:w="578"/><text x="38.4277%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (747 samples, 0.71%)</title><rect x="38.0276%" y="533" width="0.7097%" height="15" fill="rgb(237,228,51)" fg:x="40024" fg:w="747"/><text x="38.2776%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (747 samples, 0.71%)</title><rect x="38.0276%" y="517" width="0.7097%" height="15" fill="rgb(243,6,42)" fg:x="40024" fg:w="747"/><text x="38.2776%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (747 samples, 0.71%)</title><rect x="38.0276%" y="501" width="0.7097%" height="15" fill="rgb(251,74,28)" fg:x="40024" fg:w="747"/><text x="38.2776%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (726 samples, 0.69%)</title><rect x="38.0475%" y="485" width="0.6898%" height="15" fill="rgb(218,20,49)" fg:x="40045" fg:w="726"/><text x="38.2975%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (726 samples, 0.69%)</title><rect x="38.0475%" y="469" width="0.6898%" height="15" fill="rgb(238,28,14)" fg:x="40045" fg:w="726"/><text x="38.2975%" y="479.50"></text></g><g><title>alloc::alloc::alloc (713 samples, 0.68%)</title><rect x="38.0599%" y="453" width="0.6774%" height="15" fill="rgb(229,40,46)" fg:x="40058" fg:w="713"/><text x="38.3099%" y="463.50"></text></g><g><title>__rg_alloc (713 samples, 0.68%)</title><rect x="38.0599%" y="437" width="0.6774%" height="15" fill="rgb(244,195,20)" fg:x="40058" fg:w="713"/><text x="38.3099%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (713 samples, 0.68%)</title><rect x="38.0599%" y="421" width="0.6774%" height="15" fill="rgb(253,56,35)" fg:x="40058" fg:w="713"/><text x="38.3099%" y="431.50"></text></g><g><title>rust_alloc (706 samples, 0.67%)</title><rect x="38.0665%" y="405" width="0.6708%" height="15" fill="rgb(210,149,44)" fg:x="40065" fg:w="706"/><text x="38.3165%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="38.7268%" y="389" width="0.0105%" height="15" fill="rgb(240,135,12)" fg:x="40760" fg:w="11"/><text x="38.9768%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (68 samples, 0.06%)</title><rect x="38.7392%" y="501" width="0.0646%" height="15" fill="rgb(251,24,50)" fg:x="40773" fg:w="68"/><text x="38.9892%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (818 samples, 0.78%)</title><rect x="38.0276%" y="597" width="0.7772%" height="15" fill="rgb(243,200,47)" fg:x="40024" fg:w="818"/><text x="38.2776%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (818 samples, 0.78%)</title><rect x="38.0276%" y="581" width="0.7772%" height="15" fill="rgb(224,166,26)" fg:x="40024" fg:w="818"/><text x="38.2776%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (818 samples, 0.78%)</title><rect x="38.0276%" y="565" width="0.7772%" height="15" fill="rgb(233,0,47)" fg:x="40024" fg:w="818"/><text x="38.2776%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (818 samples, 0.78%)</title><rect x="38.0276%" y="549" width="0.7772%" height="15" fill="rgb(253,80,5)" fg:x="40024" fg:w="818"/><text x="38.2776%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (71 samples, 0.07%)</title><rect x="38.7373%" y="533" width="0.0675%" height="15" fill="rgb(214,133,25)" fg:x="40771" fg:w="71"/><text x="38.9873%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (71 samples, 0.07%)</title><rect x="38.7373%" y="517" width="0.0675%" height="15" fill="rgb(209,27,14)" fg:x="40771" fg:w="71"/><text x="38.9873%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (844 samples, 0.80%)</title><rect x="38.0038%" y="613" width="0.8019%" height="15" fill="rgb(219,102,51)" fg:x="39999" fg:w="844"/><text x="38.2538%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="38.8057%" y="613" width="0.0105%" height="15" fill="rgb(237,18,16)" fg:x="40843" fg:w="11"/><text x="39.0557%" y="623.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,177 samples, 1.12%)</title><rect x="37.6988%" y="629" width="1.1183%" height="15" fill="rgb(241,85,17)" fg:x="39678" fg:w="1177"/><text x="37.9488%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (94 samples, 0.09%)</title><rect x="38.9805%" y="597" width="0.0893%" height="15" fill="rgb(236,90,42)" fg:x="41027" fg:w="94"/><text x="39.2305%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (57 samples, 0.05%)</title><rect x="39.0157%" y="581" width="0.0542%" height="15" fill="rgb(249,57,21)" fg:x="41064" fg:w="57"/><text x="39.2657%" y="591.50"></text></g><g><title>rust_alloc (59 samples, 0.06%)</title><rect x="39.0964%" y="373" width="0.0561%" height="15" fill="rgb(243,12,36)" fg:x="41149" fg:w="59"/><text x="39.3464%" y="383.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (12 samples, 0.01%)</title><rect x="39.1810%" y="325" width="0.0114%" height="15" fill="rgb(253,128,47)" fg:x="41238" fg:w="12"/><text x="39.4310%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (12 samples, 0.01%)</title><rect x="39.1810%" y="309" width="0.0114%" height="15" fill="rgb(207,33,20)" fg:x="41238" fg:w="12"/><text x="39.4310%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="39.1810%" y="293" width="0.0114%" height="15" fill="rgb(233,215,35)" fg:x="41238" fg:w="12"/><text x="39.4310%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (23 samples, 0.02%)</title><rect x="39.1924%" y="325" width="0.0219%" height="15" fill="rgb(249,188,52)" fg:x="41250" fg:w="23"/><text x="39.4424%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (23 samples, 0.02%)</title><rect x="39.1924%" y="309" width="0.0219%" height="15" fill="rgb(225,12,32)" fg:x="41250" fg:w="23"/><text x="39.4424%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="39.1724%" y="357" width="0.0447%" height="15" fill="rgb(247,98,14)" fg:x="41229" fg:w="47"/><text x="39.4224%" y="367.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (41 samples, 0.04%)</title><rect x="39.1781%" y="341" width="0.0390%" height="15" fill="rgb(247,219,48)" fg:x="41235" fg:w="41"/><text x="39.4281%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (67 samples, 0.06%)</title><rect x="39.2200%" y="357" width="0.0637%" height="15" fill="rgb(253,60,48)" fg:x="41279" fg:w="67"/><text x="39.4700%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (67 samples, 0.06%)</title><rect x="39.2200%" y="341" width="0.0637%" height="15" fill="rgb(245,15,52)" fg:x="41279" fg:w="67"/><text x="39.4700%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (433 samples, 0.41%)</title><rect x="39.0698%" y="549" width="0.4114%" height="15" fill="rgb(220,133,28)" fg:x="41121" fg:w="433"/><text x="39.3198%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (433 samples, 0.41%)</title><rect x="39.0698%" y="533" width="0.4114%" height="15" fill="rgb(217,180,4)" fg:x="41121" fg:w="433"/><text x="39.3198%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (430 samples, 0.41%)</title><rect x="39.0727%" y="517" width="0.4086%" height="15" fill="rgb(251,24,1)" fg:x="41124" fg:w="430"/><text x="39.3227%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (430 samples, 0.41%)</title><rect x="39.0727%" y="501" width="0.4086%" height="15" fill="rgb(212,185,49)" fg:x="41124" fg:w="430"/><text x="39.3227%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (430 samples, 0.41%)</title><rect x="39.0727%" y="485" width="0.4086%" height="15" fill="rgb(215,175,22)" fg:x="41124" fg:w="430"/><text x="39.3227%" y="495.50"></text></g><g><title>alloc::alloc::alloc (424 samples, 0.40%)</title><rect x="39.0784%" y="469" width="0.4029%" height="15" fill="rgb(250,205,14)" fg:x="41130" fg:w="424"/><text x="39.3284%" y="479.50"></text></g><g><title>__rg_alloc (424 samples, 0.40%)</title><rect x="39.0784%" y="453" width="0.4029%" height="15" fill="rgb(225,211,22)" fg:x="41130" fg:w="424"/><text x="39.3284%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (424 samples, 0.40%)</title><rect x="39.0784%" y="437" width="0.4029%" height="15" fill="rgb(251,179,42)" fg:x="41130" fg:w="424"/><text x="39.3284%" y="447.50"></text></g><g><title>rust_alloc (423 samples, 0.40%)</title><rect x="39.0793%" y="421" width="0.4019%" height="15" fill="rgb(208,216,51)" fg:x="41131" fg:w="423"/><text x="39.3293%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (408 samples, 0.39%)</title><rect x="39.0936%" y="405" width="0.3876%" height="15" fill="rgb(235,36,11)" fg:x="41146" fg:w="408"/><text x="39.3436%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (405 samples, 0.38%)</title><rect x="39.0964%" y="389" width="0.3848%" height="15" fill="rgb(213,189,28)" fg:x="41149" fg:w="405"/><text x="39.3464%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (343 samples, 0.33%)</title><rect x="39.1553%" y="373" width="0.3259%" height="15" fill="rgb(227,203,42)" fg:x="41211" fg:w="343"/><text x="39.4053%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (208 samples, 0.20%)</title><rect x="39.2836%" y="357" width="0.1976%" height="15" fill="rgb(244,72,36)" fg:x="41346" fg:w="208"/><text x="39.5336%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (208 samples, 0.20%)</title><rect x="39.2836%" y="341" width="0.1976%" height="15" fill="rgb(213,53,17)" fg:x="41346" fg:w="208"/><text x="39.5336%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (978 samples, 0.93%)</title><rect x="38.9805%" y="613" width="0.9292%" height="15" fill="rgb(207,167,3)" fg:x="41027" fg:w="978"/><text x="39.2305%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (884 samples, 0.84%)</title><rect x="39.0698%" y="597" width="0.8399%" height="15" fill="rgb(216,98,30)" fg:x="41121" fg:w="884"/><text x="39.3198%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (884 samples, 0.84%)</title><rect x="39.0698%" y="581" width="0.8399%" height="15" fill="rgb(236,123,15)" fg:x="41121" fg:w="884"/><text x="39.3198%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (884 samples, 0.84%)</title><rect x="39.0698%" y="565" width="0.8399%" height="15" fill="rgb(248,81,50)" fg:x="41121" fg:w="884"/><text x="39.3198%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (451 samples, 0.43%)</title><rect x="39.4812%" y="549" width="0.4285%" height="15" fill="rgb(214,120,4)" fg:x="41554" fg:w="451"/><text x="39.7312%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (451 samples, 0.43%)</title><rect x="39.4812%" y="533" width="0.4285%" height="15" fill="rgb(208,179,34)" fg:x="41554" fg:w="451"/><text x="39.7312%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (448 samples, 0.43%)</title><rect x="39.4841%" y="517" width="0.4257%" height="15" fill="rgb(227,140,7)" fg:x="41557" fg:w="448"/><text x="39.7341%" y="527.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,804 samples, 3.61%)</title><rect x="36.2964%" y="677" width="3.6143%" height="15" fill="rgb(214,22,6)" fg:x="38202" fg:w="3804"/><text x="36.5464%" y="687.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,804 samples, 3.61%)</title><rect x="36.2964%" y="661" width="3.6143%" height="15" fill="rgb(207,137,27)" fg:x="38202" fg:w="3804"/><text x="36.5464%" y="671.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (3,569 samples, 3.39%)</title><rect x="36.5197%" y="645" width="3.3910%" height="15" fill="rgb(210,8,46)" fg:x="38437" fg:w="3569"/><text x="36.7697%" y="655.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,151 samples, 1.09%)</title><rect x="38.8171%" y="629" width="1.0936%" height="15" fill="rgb(240,16,54)" fg:x="40855" fg:w="1151"/><text x="39.0671%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (15 samples, 0.01%)</title><rect x="39.9135%" y="421" width="0.0143%" height="15" fill="rgb(211,209,29)" fg:x="42009" fg:w="15"/><text x="40.1635%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (15 samples, 0.01%)</title><rect x="39.9135%" y="405" width="0.0143%" height="15" fill="rgb(226,228,24)" fg:x="42009" fg:w="15"/><text x="40.1635%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (15 samples, 0.01%)</title><rect x="39.9135%" y="389" width="0.0143%" height="15" fill="rgb(222,84,9)" fg:x="42009" fg:w="15"/><text x="40.1635%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (20 samples, 0.02%)</title><rect x="39.9135%" y="437" width="0.0190%" height="15" fill="rgb(234,203,30)" fg:x="42009" fg:w="20"/><text x="40.1635%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (31 samples, 0.03%)</title><rect x="39.9107%" y="453" width="0.0295%" height="15" fill="rgb(238,109,14)" fg:x="42006" fg:w="31"/><text x="40.1607%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (15 samples, 0.01%)</title><rect x="39.9458%" y="437" width="0.0143%" height="15" fill="rgb(233,206,34)" fg:x="42043" fg:w="15"/><text x="40.1958%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (170 samples, 0.16%)</title><rect x="39.9107%" y="485" width="0.1615%" height="15" fill="rgb(220,167,47)" fg:x="42006" fg:w="170"/><text x="40.1607%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (170 samples, 0.16%)</title><rect x="39.9107%" y="469" width="0.1615%" height="15" fill="rgb(238,105,10)" fg:x="42006" fg:w="170"/><text x="40.1607%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (139 samples, 0.13%)</title><rect x="39.9401%" y="453" width="0.1321%" height="15" fill="rgb(213,227,17)" fg:x="42037" fg:w="139"/><text x="40.1901%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (118 samples, 0.11%)</title><rect x="39.9601%" y="437" width="0.1121%" height="15" fill="rgb(217,132,38)" fg:x="42058" fg:w="118"/><text x="40.2101%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (118 samples, 0.11%)</title><rect x="39.9601%" y="421" width="0.1121%" height="15" fill="rgb(242,146,4)" fg:x="42058" fg:w="118"/><text x="40.2101%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (118 samples, 0.11%)</title><rect x="39.9601%" y="405" width="0.1121%" height="15" fill="rgb(212,61,9)" fg:x="42058" fg:w="118"/><text x="40.2101%" y="415.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (176 samples, 0.17%)</title><rect x="39.9107%" y="677" width="0.1672%" height="15" fill="rgb(247,126,22)" fg:x="42006" fg:w="176"/><text x="40.1607%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (176 samples, 0.17%)</title><rect x="39.9107%" y="661" width="0.1672%" height="15" fill="rgb(220,196,2)" fg:x="42006" fg:w="176"/><text x="40.1607%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (176 samples, 0.17%)</title><rect x="39.9107%" y="645" width="0.1672%" height="15" fill="rgb(208,46,4)" fg:x="42006" fg:w="176"/><text x="40.1607%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (176 samples, 0.17%)</title><rect x="39.9107%" y="629" width="0.1672%" height="15" fill="rgb(252,104,46)" fg:x="42006" fg:w="176"/><text x="40.1607%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (176 samples, 0.17%)</title><rect x="39.9107%" y="613" width="0.1672%" height="15" fill="rgb(237,152,48)" fg:x="42006" fg:w="176"/><text x="40.1607%" y="623.50"></text></g><g><title>alloc::alloc::alloc (176 samples, 0.17%)</title><rect x="39.9107%" y="597" width="0.1672%" height="15" fill="rgb(221,59,37)" fg:x="42006" fg:w="176"/><text x="40.1607%" y="607.50"></text></g><g><title>__rg_alloc (176 samples, 0.17%)</title><rect x="39.9107%" y="581" width="0.1672%" height="15" fill="rgb(209,202,51)" fg:x="42006" fg:w="176"/><text x="40.1607%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (176 samples, 0.17%)</title><rect x="39.9107%" y="565" width="0.1672%" height="15" fill="rgb(228,81,30)" fg:x="42006" fg:w="176"/><text x="40.1607%" y="575.50"></text></g><g><title>rust_alloc (176 samples, 0.17%)</title><rect x="39.9107%" y="549" width="0.1672%" height="15" fill="rgb(227,42,39)" fg:x="42006" fg:w="176"/><text x="40.1607%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (176 samples, 0.17%)</title><rect x="39.9107%" y="533" width="0.1672%" height="15" fill="rgb(221,26,2)" fg:x="42006" fg:w="176"/><text x="40.1607%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (176 samples, 0.17%)</title><rect x="39.9107%" y="517" width="0.1672%" height="15" fill="rgb(254,61,31)" fg:x="42006" fg:w="176"/><text x="40.1607%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (176 samples, 0.17%)</title><rect x="39.9107%" y="501" width="0.1672%" height="15" fill="rgb(222,173,38)" fg:x="42006" fg:w="176"/><text x="40.1607%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="40.0779%" y="661" width="0.0238%" height="15" fill="rgb(218,50,12)" fg:x="42182" fg:w="25"/><text x="40.3279%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (26 samples, 0.02%)</title><rect x="40.0779%" y="677" width="0.0247%" height="15" fill="rgb(223,88,40)" fg:x="42182" fg:w="26"/><text x="40.3279%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (6,026 samples, 5.73%)</title><rect x="34.3895%" y="1157" width="5.7254%" height="15" fill="rgb(237,54,19)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="1167.50">async_g..</text></g><g><title>std::panic::catch_unwind (6,026 samples, 5.73%)</title><rect x="34.3895%" y="1141" width="5.7254%" height="15" fill="rgb(251,129,25)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="1151.50">std::pa..</text></g><g><title>std::panicking::try (6,026 samples, 5.73%)</title><rect x="34.3895%" y="1125" width="5.7254%" height="15" fill="rgb(238,97,19)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="1135.50">std::pa..</text></g><g><title>std::panicking::try::do_call (6,026 samples, 5.73%)</title><rect x="34.3895%" y="1109" width="5.7254%" height="15" fill="rgb(240,169,18)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="1119.50">std::pa..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (6,026 samples, 5.73%)</title><rect x="34.3895%" y="1093" width="5.7254%" height="15" fill="rgb(230,187,49)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="1103.50">async_g..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,026 samples, 5.73%)</title><rect x="34.3895%" y="1077" width="5.7254%" height="15" fill="rgb(209,44,26)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="1087.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,026 samples, 5.73%)</title><rect x="34.3895%" y="1061" width="5.7254%" height="15" fill="rgb(244,0,6)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="1071.50">std::th..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (6,026 samples, 5.73%)</title><rect x="34.3895%" y="1045" width="5.7254%" height="15" fill="rgb(248,18,21)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="1055.50">async_g..</text></g><g><title>async_global_executor::reactor::block_on (6,026 samples, 5.73%)</title><rect x="34.3895%" y="1029" width="5.7254%" height="15" fill="rgb(245,180,19)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="1039.50">async_g..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (6,026 samples, 5.73%)</title><rect x="34.3895%" y="1013" width="5.7254%" height="15" fill="rgb(252,118,36)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="1023.50">async_g..</text></g><g><title>async_io::driver::block_on (6,026 samples, 5.73%)</title><rect x="34.3895%" y="997" width="5.7254%" height="15" fill="rgb(210,224,19)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="1007.50">async_i..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,026 samples, 5.73%)</title><rect x="34.3895%" y="981" width="5.7254%" height="15" fill="rgb(218,30,24)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="991.50">&lt;future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,026 samples, 5.73%)</title><rect x="34.3895%" y="965" width="5.7254%" height="15" fill="rgb(219,75,50)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="975.50">&lt;core::..</text></g><g><title>async_executor::Executor::run::{{closure}} (6,026 samples, 5.73%)</title><rect x="34.3895%" y="949" width="5.7254%" height="15" fill="rgb(234,72,50)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="959.50">async_e..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,026 samples, 5.73%)</title><rect x="34.3895%" y="933" width="5.7254%" height="15" fill="rgb(219,100,48)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="943.50">&lt;future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,026 samples, 5.73%)</title><rect x="34.3895%" y="917" width="5.7254%" height="15" fill="rgb(253,5,41)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="927.50">&lt;core::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (6,026 samples, 5.73%)</title><rect x="34.3895%" y="901" width="5.7254%" height="15" fill="rgb(247,181,11)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="911.50">async_e..</text></g><g><title>async_task::runnable::Runnable::run (6,026 samples, 5.73%)</title><rect x="34.3895%" y="885" width="5.7254%" height="15" fill="rgb(222,223,25)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="895.50">async_t..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (6,026 samples, 5.73%)</title><rect x="34.3895%" y="869" width="5.7254%" height="15" fill="rgb(214,198,28)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="879.50">async_t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6,026 samples, 5.73%)</title><rect x="34.3895%" y="853" width="5.7254%" height="15" fill="rgb(230,46,43)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="863.50">&lt;core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,026 samples, 5.73%)</title><rect x="34.3895%" y="837" width="5.7254%" height="15" fill="rgb(233,65,53)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="847.50">&lt;core::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,026 samples, 5.73%)</title><rect x="34.3895%" y="821" width="5.7254%" height="15" fill="rgb(221,121,27)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="831.50">async_e..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,026 samples, 5.73%)</title><rect x="34.3895%" y="805" width="5.7254%" height="15" fill="rgb(247,70,47)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="815.50">&lt;async_..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,026 samples, 5.73%)</title><rect x="34.3895%" y="789" width="5.7254%" height="15" fill="rgb(228,85,35)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="799.50">async_s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,026 samples, 5.73%)</title><rect x="34.3895%" y="773" width="5.7254%" height="15" fill="rgb(209,50,18)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="783.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,026 samples, 5.73%)</title><rect x="34.3895%" y="757" width="5.7254%" height="15" fill="rgb(250,19,35)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="767.50">std::th..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,026 samples, 5.73%)</title><rect x="34.3895%" y="741" width="5.7254%" height="15" fill="rgb(253,107,29)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="751.50">async_s..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,026 samples, 5.73%)</title><rect x="34.3895%" y="725" width="5.7254%" height="15" fill="rgb(252,179,29)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="735.50">&lt;async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,026 samples, 5.73%)</title><rect x="34.3895%" y="709" width="5.7254%" height="15" fill="rgb(238,194,6)" fg:x="36195" fg:w="6026"/><text x="34.6395%" y="719.50">&lt;core::..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (5,302 samples, 5.04%)</title><rect x="35.0774%" y="693" width="5.0375%" height="15" fill="rgb(238,164,29)" fg:x="36919" fg:w="5302"/><text x="35.3274%" y="703.50">tremor..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="40.1026%" y="677" width="0.0124%" height="15" fill="rgb(224,25,9)" fg:x="42208" fg:w="13"/><text x="40.3526%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (13 samples, 0.01%)</title><rect x="40.1026%" y="661" width="0.0124%" height="15" fill="rgb(244,153,23)" fg:x="42208" fg:w="13"/><text x="40.3526%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (14 samples, 0.01%)</title><rect x="40.1834%" y="469" width="0.0133%" height="15" fill="rgb(212,203,14)" fg:x="42293" fg:w="14"/><text x="40.4334%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (51 samples, 0.05%)</title><rect x="40.1492%" y="597" width="0.0485%" height="15" fill="rgb(220,164,20)" fg:x="42257" fg:w="51"/><text x="40.3992%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="40.1492%" y="581" width="0.0485%" height="15" fill="rgb(222,203,48)" fg:x="42257" fg:w="51"/><text x="40.3992%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (51 samples, 0.05%)</title><rect x="40.1492%" y="565" width="0.0485%" height="15" fill="rgb(215,159,22)" fg:x="42257" fg:w="51"/><text x="40.3992%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (51 samples, 0.05%)</title><rect x="40.1492%" y="549" width="0.0485%" height="15" fill="rgb(216,183,47)" fg:x="42257" fg:w="51"/><text x="40.3992%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (51 samples, 0.05%)</title><rect x="40.1492%" y="533" width="0.0485%" height="15" fill="rgb(229,195,25)" fg:x="42257" fg:w="51"/><text x="40.3992%" y="543.50"></text></g><g><title>__GI___lll_lock_wake (29 samples, 0.03%)</title><rect x="40.1701%" y="517" width="0.0276%" height="15" fill="rgb(224,132,51)" fg:x="42279" fg:w="29"/><text x="40.4201%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.02%)</title><rect x="40.1739%" y="501" width="0.0238%" height="15" fill="rgb(240,63,7)" fg:x="42283" fg:w="25"/><text x="40.4239%" y="511.50"></text></g><g><title>do_syscall_64 (25 samples, 0.02%)</title><rect x="40.1739%" y="485" width="0.0238%" height="15" fill="rgb(249,182,41)" fg:x="42283" fg:w="25"/><text x="40.4239%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (14 samples, 0.01%)</title><rect x="40.1976%" y="597" width="0.0133%" height="15" fill="rgb(243,47,26)" fg:x="42308" fg:w="14"/><text x="40.4476%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="40.1976%" y="581" width="0.0133%" height="15" fill="rgb(233,48,2)" fg:x="42308" fg:w="14"/><text x="40.4476%" y="591.50"></text></g><g><title>__fdget_pos (12 samples, 0.01%)</title><rect x="40.2252%" y="437" width="0.0114%" height="15" fill="rgb(244,165,34)" fg:x="42337" fg:w="12"/><text x="40.4752%" y="447.50"></text></g><g><title>__fget_light (12 samples, 0.01%)</title><rect x="40.2252%" y="421" width="0.0114%" height="15" fill="rgb(207,89,7)" fg:x="42337" fg:w="12"/><text x="40.4752%" y="431.50"></text></g><g><title>enqueue_task_fair (27 samples, 0.03%)</title><rect x="40.2793%" y="277" width="0.0257%" height="15" fill="rgb(244,117,36)" fg:x="42394" fg:w="27"/><text x="40.5293%" y="287.50"></text></g><g><title>enqueue_entity (17 samples, 0.02%)</title><rect x="40.2888%" y="261" width="0.0162%" height="15" fill="rgb(226,144,34)" fg:x="42404" fg:w="17"/><text x="40.5388%" y="271.50"></text></g><g><title>ttwu_do_activate (53 samples, 0.05%)</title><rect x="40.2793%" y="309" width="0.0504%" height="15" fill="rgb(213,23,19)" fg:x="42394" fg:w="53"/><text x="40.5293%" y="319.50"></text></g><g><title>enqueue_task (53 samples, 0.05%)</title><rect x="40.2793%" y="293" width="0.0504%" height="15" fill="rgb(217,75,12)" fg:x="42394" fg:w="53"/><text x="40.5293%" y="303.50"></text></g><g><title>psi_task_change (22 samples, 0.02%)</title><rect x="40.3088%" y="277" width="0.0209%" height="15" fill="rgb(224,159,17)" fg:x="42425" fg:w="22"/><text x="40.5588%" y="287.50"></text></g><g><title>psi_group_change (17 samples, 0.02%)</title><rect x="40.3135%" y="261" width="0.0162%" height="15" fill="rgb(217,118,1)" fg:x="42430" fg:w="17"/><text x="40.5635%" y="271.50"></text></g><g><title>__wake_up_common (90 samples, 0.09%)</title><rect x="40.2537%" y="357" width="0.0855%" height="15" fill="rgb(232,180,48)" fg:x="42367" fg:w="90"/><text x="40.5037%" y="367.50"></text></g><g><title>autoremove_wake_function (85 samples, 0.08%)</title><rect x="40.2584%" y="341" width="0.0808%" height="15" fill="rgb(230,27,33)" fg:x="42372" fg:w="85"/><text x="40.5084%" y="351.50"></text></g><g><title>try_to_wake_up (82 samples, 0.08%)</title><rect x="40.2613%" y="325" width="0.0779%" height="15" fill="rgb(205,31,21)" fg:x="42375" fg:w="82"/><text x="40.5113%" y="335.50"></text></g><g><title>__wake_up_common_lock (97 samples, 0.09%)</title><rect x="40.2537%" y="373" width="0.0922%" height="15" fill="rgb(253,59,4)" fg:x="42367" fg:w="97"/><text x="40.5037%" y="383.50"></text></g><g><title>__wake_up_common (114 samples, 0.11%)</title><rect x="40.2461%" y="405" width="0.1083%" height="15" fill="rgb(224,201,9)" fg:x="42359" fg:w="114"/><text x="40.4961%" y="415.50"></text></g><g><title>ep_poll_callback (114 samples, 0.11%)</title><rect x="40.2461%" y="389" width="0.1083%" height="15" fill="rgb(229,206,30)" fg:x="42359" fg:w="114"/><text x="40.4961%" y="399.50"></text></g><g><title>eventfd_write (123 samples, 0.12%)</title><rect x="40.2423%" y="421" width="0.1169%" height="15" fill="rgb(212,67,47)" fg:x="42355" fg:w="123"/><text x="40.4923%" y="431.50"></text></g><g><title>ksys_write (145 samples, 0.14%)</title><rect x="40.2223%" y="453" width="0.1378%" height="15" fill="rgb(211,96,50)" fg:x="42334" fg:w="145"/><text x="40.4723%" y="463.50"></text></g><g><title>vfs_write (127 samples, 0.12%)</title><rect x="40.2394%" y="437" width="0.1207%" height="15" fill="rgb(252,114,18)" fg:x="42352" fg:w="127"/><text x="40.4894%" y="447.50"></text></g><g><title>syscall_exit_to_user_mode (26 samples, 0.02%)</title><rect x="40.3620%" y="453" width="0.0247%" height="15" fill="rgb(223,58,37)" fg:x="42481" fg:w="26"/><text x="40.6120%" y="463.50"></text></g><g><title>async_io::reactor::Reactor::notify (184 samples, 0.17%)</title><rect x="40.2138%" y="549" width="0.1748%" height="15" fill="rgb(237,70,4)" fg:x="42325" fg:w="184"/><text x="40.4638%" y="559.50"></text></g><g><title>polling::Poller::notify (184 samples, 0.17%)</title><rect x="40.2138%" y="533" width="0.1748%" height="15" fill="rgb(244,85,46)" fg:x="42325" fg:w="184"/><text x="40.4638%" y="543.50"></text></g><g><title>polling::epoll::Poller::notify (181 samples, 0.17%)</title><rect x="40.2166%" y="517" width="0.1720%" height="15" fill="rgb(223,39,52)" fg:x="42328" fg:w="181"/><text x="40.4666%" y="527.50"></text></g><g><title>__GI___write (181 samples, 0.17%)</title><rect x="40.2166%" y="501" width="0.1720%" height="15" fill="rgb(218,200,14)" fg:x="42328" fg:w="181"/><text x="40.4666%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (178 samples, 0.17%)</title><rect x="40.2195%" y="485" width="0.1691%" height="15" fill="rgb(208,171,16)" fg:x="42331" fg:w="178"/><text x="40.4695%" y="495.50"></text></g><g><title>do_syscall_64 (176 samples, 0.17%)</title><rect x="40.2214%" y="469" width="0.1672%" height="15" fill="rgb(234,200,18)" fg:x="42333" fg:w="176"/><text x="40.4714%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (15 samples, 0.01%)</title><rect x="40.3981%" y="517" width="0.0143%" height="15" fill="rgb(228,45,11)" fg:x="42519" fg:w="15"/><text x="40.6481%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.01%)</title><rect x="40.3981%" y="501" width="0.0143%" height="15" fill="rgb(237,182,11)" fg:x="42519" fg:w="15"/><text x="40.6481%" y="511.50"></text></g><g><title>_raw_spin_lock (16 samples, 0.02%)</title><rect x="40.4722%" y="373" width="0.0152%" height="15" fill="rgb(241,175,49)" fg:x="42597" fg:w="16"/><text x="40.7222%" y="383.50"></text></g><g><title>futex_wake_mark (26 samples, 0.02%)</title><rect x="40.4884%" y="373" width="0.0247%" height="15" fill="rgb(247,38,35)" fg:x="42614" fg:w="26"/><text x="40.7384%" y="383.50"></text></g><g><title>__futex_unqueue (11 samples, 0.01%)</title><rect x="40.5026%" y="357" width="0.0105%" height="15" fill="rgb(228,39,49)" fg:x="42629" fg:w="11"/><text x="40.7526%" y="367.50"></text></g><g><title>select_task_rq_fair (37 samples, 0.04%)</title><rect x="40.5482%" y="341" width="0.0352%" height="15" fill="rgb(226,101,26)" fg:x="42677" fg:w="37"/><text x="40.7982%" y="351.50"></text></g><g><title>enqueue_task_fair (85 samples, 0.08%)</title><rect x="40.5891%" y="309" width="0.0808%" height="15" fill="rgb(206,141,19)" fg:x="42720" fg:w="85"/><text x="40.8391%" y="319.50"></text></g><g><title>enqueue_entity (57 samples, 0.05%)</title><rect x="40.6157%" y="293" width="0.0542%" height="15" fill="rgb(211,200,13)" fg:x="42748" fg:w="57"/><text x="40.8657%" y="303.50"></text></g><g><title>update_load_avg (20 samples, 0.02%)</title><rect x="40.6508%" y="277" width="0.0190%" height="15" fill="rgb(241,121,6)" fg:x="42785" fg:w="20"/><text x="40.9008%" y="287.50"></text></g><g><title>psi_group_change (15 samples, 0.01%)</title><rect x="40.6698%" y="309" width="0.0143%" height="15" fill="rgb(234,221,29)" fg:x="42805" fg:w="15"/><text x="40.9198%" y="319.50"></text></g><g><title>psi_group_change (41 samples, 0.04%)</title><rect x="40.7012%" y="293" width="0.0390%" height="15" fill="rgb(229,136,5)" fg:x="42838" fg:w="41"/><text x="40.9512%" y="303.50"></text></g><g><title>ttwu_do_activate (167 samples, 0.16%)</title><rect x="40.5834%" y="341" width="0.1587%" height="15" fill="rgb(238,36,11)" fg:x="42714" fg:w="167"/><text x="40.8334%" y="351.50"></text></g><g><title>enqueue_task (165 samples, 0.16%)</title><rect x="40.5853%" y="325" width="0.1568%" height="15" fill="rgb(251,55,41)" fg:x="42716" fg:w="165"/><text x="40.8353%" y="335.50"></text></g><g><title>psi_task_change (61 samples, 0.06%)</title><rect x="40.6841%" y="309" width="0.0580%" height="15" fill="rgb(242,34,40)" fg:x="42820" fg:w="61"/><text x="40.9341%" y="319.50"></text></g><g><title>__x64_sys_futex (336 samples, 0.32%)</title><rect x="40.4513%" y="421" width="0.3192%" height="15" fill="rgb(215,42,17)" fg:x="42575" fg:w="336"/><text x="40.7013%" y="431.50"></text></g><g><title>do_futex (330 samples, 0.31%)</title><rect x="40.4570%" y="405" width="0.3135%" height="15" fill="rgb(207,44,46)" fg:x="42581" fg:w="330"/><text x="40.7070%" y="415.50"></text></g><g><title>futex_wake (329 samples, 0.31%)</title><rect x="40.4580%" y="389" width="0.3126%" height="15" fill="rgb(211,206,28)" fg:x="42582" fg:w="329"/><text x="40.7080%" y="399.50"></text></g><g><title>wake_up_q (260 samples, 0.25%)</title><rect x="40.5235%" y="373" width="0.2470%" height="15" fill="rgb(237,167,16)" fg:x="42651" fg:w="260"/><text x="40.7735%" y="383.50"></text></g><g><title>try_to_wake_up (253 samples, 0.24%)</title><rect x="40.5302%" y="357" width="0.2404%" height="15" fill="rgb(233,66,6)" fg:x="42658" fg:w="253"/><text x="40.7802%" y="367.50"></text></g><g><title>update_rq_clock (13 samples, 0.01%)</title><rect x="40.7582%" y="341" width="0.0124%" height="15" fill="rgb(246,123,29)" fg:x="42898" fg:w="13"/><text x="41.0082%" y="351.50"></text></g><g><title>syscall_exit_to_user_mode (65 samples, 0.06%)</title><rect x="40.7724%" y="421" width="0.0618%" height="15" fill="rgb(209,62,40)" fg:x="42913" fg:w="65"/><text x="41.0224%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (415 samples, 0.39%)</title><rect x="40.4456%" y="453" width="0.3943%" height="15" fill="rgb(218,4,25)" fg:x="42569" fg:w="415"/><text x="40.6956%" y="463.50"></text></g><g><title>do_syscall_64 (413 samples, 0.39%)</title><rect x="40.4475%" y="437" width="0.3924%" height="15" fill="rgb(253,91,49)" fg:x="42571" fg:w="413"/><text x="40.6975%" y="447.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (453 samples, 0.43%)</title><rect x="40.4124%" y="517" width="0.4304%" height="15" fill="rgb(228,155,29)" fg:x="42534" fg:w="453"/><text x="40.6624%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (453 samples, 0.43%)</title><rect x="40.4124%" y="501" width="0.4304%" height="15" fill="rgb(243,57,37)" fg:x="42534" fg:w="453"/><text x="40.6624%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (453 samples, 0.43%)</title><rect x="40.4124%" y="485" width="0.4304%" height="15" fill="rgb(244,167,17)" fg:x="42534" fg:w="453"/><text x="40.6624%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (453 samples, 0.43%)</title><rect x="40.4124%" y="469" width="0.4304%" height="15" fill="rgb(207,181,38)" fg:x="42534" fg:w="453"/><text x="40.6624%" y="479.50"></text></g><g><title>parking::Unparker::unpark (494 samples, 0.47%)</title><rect x="40.3895%" y="549" width="0.4694%" height="15" fill="rgb(211,8,23)" fg:x="42510" fg:w="494"/><text x="40.6395%" y="559.50"></text></g><g><title>parking::Inner::unpark (487 samples, 0.46%)</title><rect x="40.3962%" y="533" width="0.4627%" height="15" fill="rgb(235,11,44)" fg:x="42517" fg:w="487"/><text x="40.6462%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="40.8428%" y="517" width="0.0162%" height="15" fill="rgb(248,18,52)" fg:x="42987" fg:w="17"/><text x="41.0928%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="40.8428%" y="501" width="0.0162%" height="15" fill="rgb(208,4,7)" fg:x="42987" fg:w="17"/><text x="41.0928%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="40.8428%" y="485" width="0.0162%" height="15" fill="rgb(240,17,39)" fg:x="42987" fg:w="17"/><text x="41.0928%" y="495.50"></text></g><g><title>___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="40.8428%" y="469" width="0.0162%" height="15" fill="rgb(207,170,3)" fg:x="42987" fg:w="17"/><text x="41.0928%" y="479.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (688 samples, 0.65%)</title><rect x="40.2109%" y="565" width="0.6537%" height="15" fill="rgb(236,100,52)" fg:x="42322" fg:w="688"/><text x="40.4609%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (713 samples, 0.68%)</title><rect x="40.2109%" y="597" width="0.6774%" height="15" fill="rgb(246,78,51)" fg:x="42322" fg:w="713"/><text x="40.4609%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (713 samples, 0.68%)</title><rect x="40.2109%" y="581" width="0.6774%" height="15" fill="rgb(211,17,15)" fg:x="42322" fg:w="713"/><text x="40.4609%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="40.8646%" y="565" width="0.0238%" height="15" fill="rgb(209,59,46)" fg:x="43010" fg:w="25"/><text x="41.1146%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="40.8646%" y="549" width="0.0238%" height="15" fill="rgb(210,92,25)" fg:x="43010" fg:w="25"/><text x="41.1146%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (25 samples, 0.02%)</title><rect x="40.8646%" y="533" width="0.0238%" height="15" fill="rgb(238,174,52)" fg:x="43010" fg:w="25"/><text x="41.1146%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (25 samples, 0.02%)</title><rect x="40.8646%" y="517" width="0.0238%" height="15" fill="rgb(230,73,7)" fg:x="43010" fg:w="25"/><text x="41.1146%" y="527.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.01%)</title><rect x="40.9178%" y="485" width="0.0105%" height="15" fill="rgb(243,124,40)" fg:x="43066" fg:w="11"/><text x="41.1678%" y="495.50"></text></g><g><title>do_futex (11 samples, 0.01%)</title><rect x="40.9178%" y="469" width="0.0105%" height="15" fill="rgb(244,170,11)" fg:x="43066" fg:w="11"/><text x="41.1678%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="40.9178%" y="517" width="0.0200%" height="15" fill="rgb(207,114,54)" fg:x="43066" fg:w="21"/><text x="41.1678%" y="527.50"></text></g><g><title>do_syscall_64 (21 samples, 0.02%)</title><rect x="40.9178%" y="501" width="0.0200%" height="15" fill="rgb(205,42,20)" fg:x="43066" fg:w="21"/><text x="41.1678%" y="511.50"></text></g><g><title>async_executor::State::notify (833 samples, 0.79%)</title><rect x="40.1473%" y="613" width="0.7914%" height="15" fill="rgb(230,30,28)" fg:x="42255" fg:w="833"/><text x="40.3973%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (53 samples, 0.05%)</title><rect x="40.8884%" y="597" width="0.0504%" height="15" fill="rgb(205,73,54)" fg:x="43035" fg:w="53"/><text x="41.1384%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (52 samples, 0.05%)</title><rect x="40.8893%" y="581" width="0.0494%" height="15" fill="rgb(254,227,23)" fg:x="43036" fg:w="52"/><text x="41.1393%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (49 samples, 0.05%)</title><rect x="40.8922%" y="565" width="0.0466%" height="15" fill="rgb(228,202,34)" fg:x="43039" fg:w="49"/><text x="41.1422%" y="575.50"></text></g><g><title>___pthread_mutex_lock (49 samples, 0.05%)</title><rect x="40.8922%" y="549" width="0.0466%" height="15" fill="rgb(222,225,37)" fg:x="43039" fg:w="49"/><text x="41.1422%" y="559.50"></text></g><g><title>__GI___lll_lock_wait (26 samples, 0.02%)</title><rect x="40.9140%" y="533" width="0.0247%" height="15" fill="rgb(221,14,54)" fg:x="43062" fg:w="26"/><text x="41.1640%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (20 samples, 0.02%)</title><rect x="40.9435%" y="581" width="0.0190%" height="15" fill="rgb(254,102,2)" fg:x="43093" fg:w="20"/><text x="41.1935%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.02%)</title><rect x="40.9435%" y="565" width="0.0190%" height="15" fill="rgb(232,104,17)" fg:x="43093" fg:w="20"/><text x="41.1935%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (17 samples, 0.02%)</title><rect x="40.9625%" y="581" width="0.0162%" height="15" fill="rgb(250,220,14)" fg:x="43113" fg:w="17"/><text x="41.2125%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (17 samples, 0.02%)</title><rect x="40.9625%" y="565" width="0.0162%" height="15" fill="rgb(241,158,9)" fg:x="43113" fg:w="17"/><text x="41.2125%" y="575.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (879 samples, 0.84%)</title><rect x="40.1473%" y="629" width="0.8352%" height="15" fill="rgb(246,9,43)" fg:x="42255" fg:w="879"/><text x="40.3973%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (46 samples, 0.04%)</title><rect x="40.9387%" y="613" width="0.0437%" height="15" fill="rgb(206,73,33)" fg:x="43088" fg:w="46"/><text x="41.1887%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (43 samples, 0.04%)</title><rect x="40.9416%" y="597" width="0.0409%" height="15" fill="rgb(222,79,8)" fg:x="43091" fg:w="43"/><text x="41.1916%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (33 samples, 0.03%)</title><rect x="40.9824%" y="629" width="0.0314%" height="15" fill="rgb(234,8,54)" fg:x="43134" fg:w="33"/><text x="41.2324%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (33 samples, 0.03%)</title><rect x="40.9824%" y="613" width="0.0314%" height="15" fill="rgb(209,134,38)" fg:x="43134" fg:w="33"/><text x="41.2324%" y="623.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (940 samples, 0.89%)</title><rect x="40.1264%" y="725" width="0.8931%" height="15" fill="rgb(230,127,29)" fg:x="42233" fg:w="940"/><text x="40.3764%" y="735.50"></text></g><g><title>event_listener::Event::notify (940 samples, 0.89%)</title><rect x="40.1264%" y="709" width="0.8931%" height="15" fill="rgb(242,44,41)" fg:x="42233" fg:w="940"/><text x="40.3764%" y="719.50"></text></g><g><title>event_listener::List::notify (939 samples, 0.89%)</title><rect x="40.1273%" y="693" width="0.8922%" height="15" fill="rgb(222,56,43)" fg:x="42234" fg:w="939"/><text x="40.3773%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (927 samples, 0.88%)</title><rect x="40.1387%" y="677" width="0.8808%" height="15" fill="rgb(238,39,47)" fg:x="42246" fg:w="927"/><text x="40.3887%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (927 samples, 0.88%)</title><rect x="40.1387%" y="661" width="0.8808%" height="15" fill="rgb(226,79,43)" fg:x="42246" fg:w="927"/><text x="40.3887%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (919 samples, 0.87%)</title><rect x="40.1463%" y="645" width="0.8732%" height="15" fill="rgb(242,105,53)" fg:x="42254" fg:w="919"/><text x="40.3963%" y="655.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (958 samples, 0.91%)</title><rect x="40.1188%" y="741" width="0.9102%" height="15" fill="rgb(251,132,46)" fg:x="42225" fg:w="958"/><text x="40.3688%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (960 samples, 0.91%)</title><rect x="40.1188%" y="805" width="0.9121%" height="15" fill="rgb(231,77,14)" fg:x="42225" fg:w="960"/><text x="40.3688%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (960 samples, 0.91%)</title><rect x="40.1188%" y="789" width="0.9121%" height="15" fill="rgb(240,135,9)" fg:x="42225" fg:w="960"/><text x="40.3688%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (960 samples, 0.91%)</title><rect x="40.1188%" y="773" width="0.9121%" height="15" fill="rgb(248,109,14)" fg:x="42225" fg:w="960"/><text x="40.3688%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (960 samples, 0.91%)</title><rect x="40.1188%" y="757" width="0.9121%" height="15" fill="rgb(227,146,52)" fg:x="42225" fg:w="960"/><text x="40.3688%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (14 samples, 0.01%)</title><rect x="41.0309%" y="469" width="0.0133%" height="15" fill="rgb(232,54,3)" fg:x="43185" fg:w="14"/><text x="41.2809%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="41.0489%" y="453" width="0.0114%" height="15" fill="rgb(229,201,43)" fg:x="43204" fg:w="12"/><text x="41.2989%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (101 samples, 0.10%)</title><rect x="41.0309%" y="773" width="0.0960%" height="15" fill="rgb(252,161,33)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (101 samples, 0.10%)</title><rect x="41.0309%" y="757" width="0.0960%" height="15" fill="rgb(226,146,40)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (101 samples, 0.10%)</title><rect x="41.0309%" y="741" width="0.0960%" height="15" fill="rgb(219,47,25)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (101 samples, 0.10%)</title><rect x="41.0309%" y="725" width="0.0960%" height="15" fill="rgb(250,135,13)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (101 samples, 0.10%)</title><rect x="41.0309%" y="709" width="0.0960%" height="15" fill="rgb(219,229,18)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (101 samples, 0.10%)</title><rect x="41.0309%" y="693" width="0.0960%" height="15" fill="rgb(217,152,27)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (101 samples, 0.10%)</title><rect x="41.0309%" y="677" width="0.0960%" height="15" fill="rgb(225,71,47)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (101 samples, 0.10%)</title><rect x="41.0309%" y="661" width="0.0960%" height="15" fill="rgb(220,139,14)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (101 samples, 0.10%)</title><rect x="41.0309%" y="645" width="0.0960%" height="15" fill="rgb(247,54,32)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (101 samples, 0.10%)</title><rect x="41.0309%" y="629" width="0.0960%" height="15" fill="rgb(252,131,39)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="639.50"></text></g><g><title>alloc::alloc::alloc (101 samples, 0.10%)</title><rect x="41.0309%" y="613" width="0.0960%" height="15" fill="rgb(210,108,39)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="623.50"></text></g><g><title>__rg_alloc (101 samples, 0.10%)</title><rect x="41.0309%" y="597" width="0.0960%" height="15" fill="rgb(205,23,29)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (101 samples, 0.10%)</title><rect x="41.0309%" y="581" width="0.0960%" height="15" fill="rgb(246,139,46)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="591.50"></text></g><g><title>rust_alloc (101 samples, 0.10%)</title><rect x="41.0309%" y="565" width="0.0960%" height="15" fill="rgb(250,81,26)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="41.0309%" y="549" width="0.0960%" height="15" fill="rgb(214,104,7)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="41.0309%" y="533" width="0.0960%" height="15" fill="rgb(233,189,8)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="41.0309%" y="517" width="0.0960%" height="15" fill="rgb(228,141,17)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="41.0309%" y="501" width="0.0960%" height="15" fill="rgb(247,157,1)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (101 samples, 0.10%)</title><rect x="41.0309%" y="485" width="0.0960%" height="15" fill="rgb(249,225,5)" fg:x="43185" fg:w="101"/><text x="41.2809%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (87 samples, 0.08%)</title><rect x="41.0442%" y="469" width="0.0827%" height="15" fill="rgb(242,55,13)" fg:x="43199" fg:w="87"/><text x="41.2942%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (70 samples, 0.07%)</title><rect x="41.0603%" y="453" width="0.0665%" height="15" fill="rgb(230,49,50)" fg:x="43216" fg:w="70"/><text x="41.3103%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (70 samples, 0.07%)</title><rect x="41.0603%" y="437" width="0.0665%" height="15" fill="rgb(241,111,38)" fg:x="43216" fg:w="70"/><text x="41.3103%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (70 samples, 0.07%)</title><rect x="41.0603%" y="421" width="0.0665%" height="15" fill="rgb(252,155,4)" fg:x="43216" fg:w="70"/><text x="41.3103%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (11 samples, 0.01%)</title><rect x="41.1297%" y="389" width="0.0105%" height="15" fill="rgb(212,69,32)" fg:x="43289" fg:w="11"/><text x="41.3797%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (16 samples, 0.02%)</title><rect x="41.1268%" y="405" width="0.0152%" height="15" fill="rgb(243,107,47)" fg:x="43286" fg:w="16"/><text x="41.3768%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.08%)</title><rect x="41.1268%" y="437" width="0.0770%" height="15" fill="rgb(247,130,12)" fg:x="43286" fg:w="81"/><text x="41.3768%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (81 samples, 0.08%)</title><rect x="41.1268%" y="421" width="0.0770%" height="15" fill="rgb(233,74,16)" fg:x="43286" fg:w="81"/><text x="41.3768%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (65 samples, 0.06%)</title><rect x="41.1420%" y="405" width="0.0618%" height="15" fill="rgb(208,58,18)" fg:x="43302" fg:w="65"/><text x="41.3920%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (50 samples, 0.05%)</title><rect x="41.1563%" y="389" width="0.0475%" height="15" fill="rgb(242,225,1)" fg:x="43317" fg:w="50"/><text x="41.4063%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (50 samples, 0.05%)</title><rect x="41.1563%" y="373" width="0.0475%" height="15" fill="rgb(249,39,40)" fg:x="43317" fg:w="50"/><text x="41.4063%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (50 samples, 0.05%)</title><rect x="41.1563%" y="357" width="0.0475%" height="15" fill="rgb(207,72,44)" fg:x="43317" fg:w="50"/><text x="41.4063%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (101 samples, 0.10%)</title><rect x="41.1268%" y="709" width="0.0960%" height="15" fill="rgb(215,193,12)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (101 samples, 0.10%)</title><rect x="41.1268%" y="693" width="0.0960%" height="15" fill="rgb(248,41,39)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (101 samples, 0.10%)</title><rect x="41.1268%" y="677" width="0.0960%" height="15" fill="rgb(253,85,4)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (101 samples, 0.10%)</title><rect x="41.1268%" y="661" width="0.0960%" height="15" fill="rgb(243,70,31)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (101 samples, 0.10%)</title><rect x="41.1268%" y="645" width="0.0960%" height="15" fill="rgb(253,195,26)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (101 samples, 0.10%)</title><rect x="41.1268%" y="629" width="0.0960%" height="15" fill="rgb(243,42,11)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (101 samples, 0.10%)</title><rect x="41.1268%" y="613" width="0.0960%" height="15" fill="rgb(239,66,17)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (101 samples, 0.10%)</title><rect x="41.1268%" y="597" width="0.0960%" height="15" fill="rgb(217,132,21)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (101 samples, 0.10%)</title><rect x="41.1268%" y="581" width="0.0960%" height="15" fill="rgb(252,202,21)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (101 samples, 0.10%)</title><rect x="41.1268%" y="565" width="0.0960%" height="15" fill="rgb(233,98,36)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="575.50"></text></g><g><title>alloc::alloc::alloc (101 samples, 0.10%)</title><rect x="41.1268%" y="549" width="0.0960%" height="15" fill="rgb(216,153,54)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="559.50"></text></g><g><title>__rg_alloc (101 samples, 0.10%)</title><rect x="41.1268%" y="533" width="0.0960%" height="15" fill="rgb(250,99,7)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (101 samples, 0.10%)</title><rect x="41.1268%" y="517" width="0.0960%" height="15" fill="rgb(207,56,50)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="527.50"></text></g><g><title>rust_alloc (101 samples, 0.10%)</title><rect x="41.1268%" y="501" width="0.0960%" height="15" fill="rgb(244,61,34)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="41.1268%" y="485" width="0.0960%" height="15" fill="rgb(241,50,38)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="41.1268%" y="469" width="0.0960%" height="15" fill="rgb(212,166,30)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="41.1268%" y="453" width="0.0960%" height="15" fill="rgb(249,127,32)" fg:x="43286" fg:w="101"/><text x="41.3768%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="41.2038%" y="437" width="0.0190%" height="15" fill="rgb(209,103,0)" fg:x="43367" fg:w="20"/><text x="41.4538%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="41.2038%" y="421" width="0.0190%" height="15" fill="rgb(238,209,51)" fg:x="43367" fg:w="20"/><text x="41.4538%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="41.2038%" y="405" width="0.0190%" height="15" fill="rgb(237,56,23)" fg:x="43367" fg:w="20"/><text x="41.4538%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="41.2038%" y="389" width="0.0190%" height="15" fill="rgb(215,153,46)" fg:x="43367" fg:w="20"/><text x="41.4538%" y="399.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (20 samples, 0.02%)</title><rect x="41.2038%" y="373" width="0.0190%" height="15" fill="rgb(224,49,31)" fg:x="43367" fg:w="20"/><text x="41.4538%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="41.2228%" y="485" width="0.0114%" height="15" fill="rgb(250,18,42)" fg:x="43387" fg:w="12"/><text x="41.4728%" y="495.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (279 samples, 0.27%)</title><rect x="41.0309%" y="789" width="0.2651%" height="15" fill="rgb(215,176,39)" fg:x="43185" fg:w="279"/><text x="41.2809%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (178 samples, 0.17%)</title><rect x="41.1268%" y="773" width="0.1691%" height="15" fill="rgb(223,77,29)" fg:x="43286" fg:w="178"/><text x="41.3768%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (178 samples, 0.17%)</title><rect x="41.1268%" y="757" width="0.1691%" height="15" fill="rgb(234,94,52)" fg:x="43286" fg:w="178"/><text x="41.3768%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (178 samples, 0.17%)</title><rect x="41.1268%" y="741" width="0.1691%" height="15" fill="rgb(220,154,50)" fg:x="43286" fg:w="178"/><text x="41.3768%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (178 samples, 0.17%)</title><rect x="41.1268%" y="725" width="0.1691%" height="15" fill="rgb(212,11,10)" fg:x="43286" fg:w="178"/><text x="41.3768%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (77 samples, 0.07%)</title><rect x="41.2228%" y="709" width="0.0732%" height="15" fill="rgb(205,166,19)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (77 samples, 0.07%)</title><rect x="41.2228%" y="693" width="0.0732%" height="15" fill="rgb(244,198,16)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (77 samples, 0.07%)</title><rect x="41.2228%" y="677" width="0.0732%" height="15" fill="rgb(219,69,12)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.07%)</title><rect x="41.2228%" y="661" width="0.0732%" height="15" fill="rgb(245,30,7)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.07%)</title><rect x="41.2228%" y="645" width="0.0732%" height="15" fill="rgb(218,221,48)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="655.50"></text></g><g><title>alloc::alloc::alloc (77 samples, 0.07%)</title><rect x="41.2228%" y="629" width="0.0732%" height="15" fill="rgb(216,66,15)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="639.50"></text></g><g><title>__rg_alloc (77 samples, 0.07%)</title><rect x="41.2228%" y="613" width="0.0732%" height="15" fill="rgb(226,122,50)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (77 samples, 0.07%)</title><rect x="41.2228%" y="597" width="0.0732%" height="15" fill="rgb(239,156,16)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="607.50"></text></g><g><title>rust_alloc (77 samples, 0.07%)</title><rect x="41.2228%" y="581" width="0.0732%" height="15" fill="rgb(224,27,38)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (77 samples, 0.07%)</title><rect x="41.2228%" y="565" width="0.0732%" height="15" fill="rgb(224,39,27)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (77 samples, 0.07%)</title><rect x="41.2228%" y="549" width="0.0732%" height="15" fill="rgb(215,92,29)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (77 samples, 0.07%)</title><rect x="41.2228%" y="533" width="0.0732%" height="15" fill="rgb(207,159,16)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (77 samples, 0.07%)</title><rect x="41.2228%" y="517" width="0.0732%" height="15" fill="rgb(238,163,47)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (77 samples, 0.07%)</title><rect x="41.2228%" y="501" width="0.0732%" height="15" fill="rgb(219,91,49)" fg:x="43387" fg:w="77"/><text x="41.4728%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (65 samples, 0.06%)</title><rect x="41.2342%" y="485" width="0.0618%" height="15" fill="rgb(227,167,31)" fg:x="43399" fg:w="65"/><text x="41.4842%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (51 samples, 0.05%)</title><rect x="41.2475%" y="469" width="0.0485%" height="15" fill="rgb(234,80,54)" fg:x="43413" fg:w="51"/><text x="41.4975%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (51 samples, 0.05%)</title><rect x="41.2475%" y="453" width="0.0485%" height="15" fill="rgb(212,114,2)" fg:x="43413" fg:w="51"/><text x="41.4975%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (51 samples, 0.05%)</title><rect x="41.2475%" y="437" width="0.0485%" height="15" fill="rgb(234,50,24)" fg:x="43413" fg:w="51"/><text x="41.4975%" y="447.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="41.3131%" y="469" width="0.0105%" height="15" fill="rgb(221,68,8)" fg:x="43482" fg:w="11"/><text x="41.5631%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (22 samples, 0.02%)</title><rect x="41.3083%" y="517" width="0.0209%" height="15" fill="rgb(254,180,31)" fg:x="43477" fg:w="22"/><text x="41.5583%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (22 samples, 0.02%)</title><rect x="41.3083%" y="501" width="0.0209%" height="15" fill="rgb(247,130,50)" fg:x="43477" fg:w="22"/><text x="41.5583%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (20 samples, 0.02%)</title><rect x="41.3102%" y="485" width="0.0190%" height="15" fill="rgb(211,109,4)" fg:x="43479" fg:w="20"/><text x="41.5602%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (29 samples, 0.03%)</title><rect x="41.3083%" y="533" width="0.0276%" height="15" fill="rgb(238,50,21)" fg:x="43477" fg:w="29"/><text x="41.5583%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (55 samples, 0.05%)</title><rect x="41.2960%" y="549" width="0.0523%" height="15" fill="rgb(225,57,45)" fg:x="43464" fg:w="55"/><text x="41.5460%" y="559.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (40 samples, 0.04%)</title><rect x="41.3739%" y="533" width="0.0380%" height="15" fill="rgb(209,196,50)" fg:x="43546" fg:w="40"/><text x="41.6239%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (300 samples, 0.29%)</title><rect x="41.2960%" y="581" width="0.2850%" height="15" fill="rgb(242,140,13)" fg:x="43464" fg:w="300"/><text x="41.5460%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (300 samples, 0.29%)</title><rect x="41.2960%" y="565" width="0.2850%" height="15" fill="rgb(217,111,7)" fg:x="43464" fg:w="300"/><text x="41.5460%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (245 samples, 0.23%)</title><rect x="41.3482%" y="549" width="0.2328%" height="15" fill="rgb(253,193,51)" fg:x="43519" fg:w="245"/><text x="41.5982%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (178 samples, 0.17%)</title><rect x="41.4119%" y="533" width="0.1691%" height="15" fill="rgb(252,70,29)" fg:x="43586" fg:w="178"/><text x="41.6619%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (178 samples, 0.17%)</title><rect x="41.4119%" y="517" width="0.1691%" height="15" fill="rgb(232,127,12)" fg:x="43586" fg:w="178"/><text x="41.6619%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (178 samples, 0.17%)</title><rect x="41.4119%" y="501" width="0.1691%" height="15" fill="rgb(211,180,21)" fg:x="43586" fg:w="178"/><text x="41.6619%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (317 samples, 0.30%)</title><rect x="41.2960%" y="789" width="0.3012%" height="15" fill="rgb(229,72,13)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (317 samples, 0.30%)</title><rect x="41.2960%" y="773" width="0.3012%" height="15" fill="rgb(240,211,49)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (317 samples, 0.30%)</title><rect x="41.2960%" y="757" width="0.3012%" height="15" fill="rgb(219,149,40)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (317 samples, 0.30%)</title><rect x="41.2960%" y="741" width="0.3012%" height="15" fill="rgb(210,127,46)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (317 samples, 0.30%)</title><rect x="41.2960%" y="725" width="0.3012%" height="15" fill="rgb(220,106,7)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (317 samples, 0.30%)</title><rect x="41.2960%" y="709" width="0.3012%" height="15" fill="rgb(249,31,22)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="719.50"></text></g><g><title>alloc::alloc::alloc (317 samples, 0.30%)</title><rect x="41.2960%" y="693" width="0.3012%" height="15" fill="rgb(253,1,49)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="703.50"></text></g><g><title>__rg_alloc (317 samples, 0.30%)</title><rect x="41.2960%" y="677" width="0.3012%" height="15" fill="rgb(227,144,33)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (317 samples, 0.30%)</title><rect x="41.2960%" y="661" width="0.3012%" height="15" fill="rgb(249,163,44)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="671.50"></text></g><g><title>rust_alloc (317 samples, 0.30%)</title><rect x="41.2960%" y="645" width="0.3012%" height="15" fill="rgb(234,15,39)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (317 samples, 0.30%)</title><rect x="41.2960%" y="629" width="0.3012%" height="15" fill="rgb(207,66,16)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (317 samples, 0.30%)</title><rect x="41.2960%" y="613" width="0.3012%" height="15" fill="rgb(233,112,24)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (317 samples, 0.30%)</title><rect x="41.2960%" y="597" width="0.3012%" height="15" fill="rgb(230,90,22)" fg:x="43464" fg:w="317"/><text x="41.5460%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="41.5810%" y="581" width="0.0162%" height="15" fill="rgb(229,61,13)" fg:x="43764" fg:w="17"/><text x="41.8310%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="41.5810%" y="565" width="0.0162%" height="15" fill="rgb(225,57,24)" fg:x="43764" fg:w="17"/><text x="41.8310%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="41.5810%" y="549" width="0.0162%" height="15" fill="rgb(208,169,48)" fg:x="43764" fg:w="17"/><text x="41.8310%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (17 samples, 0.02%)</title><rect x="41.5810%" y="533" width="0.0162%" height="15" fill="rgb(244,218,51)" fg:x="43764" fg:w="17"/><text x="41.8310%" y="543.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (12 samples, 0.01%)</title><rect x="41.5857%" y="517" width="0.0114%" height="15" fill="rgb(214,148,10)" fg:x="43769" fg:w="12"/><text x="41.8357%" y="527.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (589 samples, 0.56%)</title><rect x="41.8185%" y="757" width="0.5596%" height="15" fill="rgb(225,174,27)" fg:x="44014" fg:w="589"/><text x="42.0685%" y="767.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="42.4513%" y="565" width="0.0133%" height="15" fill="rgb(230,96,26)" fg:x="44680" fg:w="14"/><text x="42.7013%" y="575.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="42.4779%" y="533" width="0.0133%" height="15" fill="rgb(232,10,30)" fg:x="44708" fg:w="14"/><text x="42.7279%" y="543.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="42.4808%" y="517" width="0.0105%" height="15" fill="rgb(222,8,50)" fg:x="44711" fg:w="11"/><text x="42.7308%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (18 samples, 0.02%)</title><rect x="42.5007%" y="453" width="0.0171%" height="15" fill="rgb(213,81,27)" fg:x="44732" fg:w="18"/><text x="42.7507%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (18 samples, 0.02%)</title><rect x="42.5007%" y="437" width="0.0171%" height="15" fill="rgb(245,50,10)" fg:x="44732" fg:w="18"/><text x="42.7507%" y="447.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="42.5055%" y="421" width="0.0124%" height="15" fill="rgb(216,100,18)" fg:x="44737" fg:w="13"/><text x="42.7555%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (24 samples, 0.02%)</title><rect x="42.5007%" y="469" width="0.0228%" height="15" fill="rgb(236,147,54)" fg:x="44732" fg:w="24"/><text x="42.7507%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (33 samples, 0.03%)</title><rect x="42.4979%" y="485" width="0.0314%" height="15" fill="rgb(205,143,26)" fg:x="44729" fg:w="33"/><text x="42.7479%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (20 samples, 0.02%)</title><rect x="42.5340%" y="469" width="0.0190%" height="15" fill="rgb(236,26,9)" fg:x="44767" fg:w="20"/><text x="42.7840%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (193 samples, 0.18%)</title><rect x="42.4979%" y="517" width="0.1834%" height="15" fill="rgb(221,165,53)" fg:x="44729" fg:w="193"/><text x="42.7479%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (193 samples, 0.18%)</title><rect x="42.4979%" y="501" width="0.1834%" height="15" fill="rgb(214,110,17)" fg:x="44729" fg:w="193"/><text x="42.7479%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (160 samples, 0.15%)</title><rect x="42.5292%" y="485" width="0.1520%" height="15" fill="rgb(237,197,12)" fg:x="44762" fg:w="160"/><text x="42.7792%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (135 samples, 0.13%)</title><rect x="42.5530%" y="469" width="0.1283%" height="15" fill="rgb(205,84,17)" fg:x="44787" fg:w="135"/><text x="42.8030%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (135 samples, 0.13%)</title><rect x="42.5530%" y="453" width="0.1283%" height="15" fill="rgb(237,18,45)" fg:x="44787" fg:w="135"/><text x="42.8030%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (135 samples, 0.13%)</title><rect x="42.5530%" y="437" width="0.1283%" height="15" fill="rgb(221,87,14)" fg:x="44787" fg:w="135"/><text x="42.8030%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::empty (22 samples, 0.02%)</title><rect x="42.6898%" y="517" width="0.0209%" height="15" fill="rgb(238,186,15)" fg:x="44931" fg:w="22"/><text x="42.9398%" y="527.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (22 samples, 0.02%)</title><rect x="42.6898%" y="501" width="0.0209%" height="15" fill="rgb(208,115,11)" fg:x="44931" fg:w="22"/><text x="42.9398%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (566 samples, 0.54%)</title><rect x="42.4694%" y="565" width="0.5378%" height="15" fill="rgb(254,175,0)" fg:x="44699" fg:w="566"/><text x="42.7194%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (562 samples, 0.53%)</title><rect x="42.4732%" y="549" width="0.5340%" height="15" fill="rgb(227,24,42)" fg:x="44703" fg:w="562"/><text x="42.7232%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (543 samples, 0.52%)</title><rect x="42.4912%" y="533" width="0.5159%" height="15" fill="rgb(223,211,37)" fg:x="44722" fg:w="543"/><text x="42.7412%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (312 samples, 0.30%)</title><rect x="42.7107%" y="517" width="0.2964%" height="15" fill="rgb(235,49,27)" fg:x="44953" fg:w="312"/><text x="42.9607%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (312 samples, 0.30%)</title><rect x="42.7107%" y="501" width="0.2964%" height="15" fill="rgb(254,97,51)" fg:x="44953" fg:w="312"/><text x="42.9607%" y="511.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,314 samples, 1.25%)</title><rect x="41.7739%" y="773" width="1.2485%" height="15" fill="rgb(249,51,40)" fg:x="43967" fg:w="1314"/><text x="42.0239%" y="783.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (678 samples, 0.64%)</title><rect x="42.3781%" y="757" width="0.6442%" height="15" fill="rgb(210,128,45)" fg:x="44603" fg:w="678"/><text x="42.6281%" y="767.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (674 samples, 0.64%)</title><rect x="42.3819%" y="741" width="0.6404%" height="15" fill="rgb(224,137,50)" fg:x="44607" fg:w="674"/><text x="42.6319%" y="751.50"></text></g><g><title>value_trait::Builder::object (674 samples, 0.64%)</title><rect x="42.3819%" y="725" width="0.6404%" height="15" fill="rgb(242,15,9)" fg:x="44607" fg:w="674"/><text x="42.6319%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (674 samples, 0.64%)</title><rect x="42.3819%" y="709" width="0.6404%" height="15" fill="rgb(233,187,41)" fg:x="44607" fg:w="674"/><text x="42.6319%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (674 samples, 0.64%)</title><rect x="42.3819%" y="693" width="0.6404%" height="15" fill="rgb(227,2,29)" fg:x="44607" fg:w="674"/><text x="42.6319%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (641 samples, 0.61%)</title><rect x="42.4133%" y="677" width="0.6090%" height="15" fill="rgb(222,70,3)" fg:x="44640" fg:w="641"/><text x="42.6633%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (641 samples, 0.61%)</title><rect x="42.4133%" y="661" width="0.6090%" height="15" fill="rgb(213,11,42)" fg:x="44640" fg:w="641"/><text x="42.6633%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (641 samples, 0.61%)</title><rect x="42.4133%" y="645" width="0.6090%" height="15" fill="rgb(225,150,9)" fg:x="44640" fg:w="641"/><text x="42.6633%" y="655.50"></text></g><g><title>alloc::alloc::alloc (636 samples, 0.60%)</title><rect x="42.4181%" y="629" width="0.6043%" height="15" fill="rgb(230,162,45)" fg:x="44645" fg:w="636"/><text x="42.6681%" y="639.50"></text></g><g><title>__rg_alloc (636 samples, 0.60%)</title><rect x="42.4181%" y="613" width="0.6043%" height="15" fill="rgb(222,14,52)" fg:x="44645" fg:w="636"/><text x="42.6681%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (636 samples, 0.60%)</title><rect x="42.4181%" y="597" width="0.6043%" height="15" fill="rgb(254,198,14)" fg:x="44645" fg:w="636"/><text x="42.6681%" y="607.50"></text></g><g><title>rust_alloc (601 samples, 0.57%)</title><rect x="42.4513%" y="581" width="0.5710%" height="15" fill="rgb(220,217,30)" fg:x="44680" fg:w="601"/><text x="42.7013%" y="591.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.02%)</title><rect x="43.0071%" y="565" width="0.0152%" height="15" fill="rgb(215,146,41)" fg:x="45265" fg:w="16"/><text x="43.2571%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (11 samples, 0.01%)</title><rect x="43.0233%" y="773" width="0.0105%" height="15" fill="rgb(217,27,36)" fg:x="45282" fg:w="11"/><text x="43.2733%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="43.0394%" y="757" width="0.0162%" height="15" fill="rgb(219,218,39)" fg:x="45299" fg:w="17"/><text x="43.2894%" y="767.50"></text></g><g><title>alloc::alloc::box_free (23 samples, 0.02%)</title><rect x="43.1544%" y="709" width="0.0219%" height="15" fill="rgb(219,4,42)" fg:x="45420" fg:w="23"/><text x="43.4044%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.02%)</title><rect x="43.1544%" y="693" width="0.0219%" height="15" fill="rgb(249,119,36)" fg:x="45420" fg:w="23"/><text x="43.4044%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.02%)</title><rect x="43.1544%" y="677" width="0.0219%" height="15" fill="rgb(209,23,33)" fg:x="45420" fg:w="23"/><text x="43.4044%" y="687.50"></text></g><g><title>__rg_dealloc (23 samples, 0.02%)</title><rect x="43.1544%" y="661" width="0.0219%" height="15" fill="rgb(211,10,0)" fg:x="45420" fg:w="23"/><text x="43.4044%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (23 samples, 0.02%)</title><rect x="43.1544%" y="645" width="0.0219%" height="15" fill="rgb(208,99,37)" fg:x="45420" fg:w="23"/><text x="43.4044%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="43.2029%" y="645" width="0.0390%" height="15" fill="rgb(213,132,31)" fg:x="45471" fg:w="41"/><text x="43.4529%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (41 samples, 0.04%)</title><rect x="43.2029%" y="629" width="0.0390%" height="15" fill="rgb(243,129,40)" fg:x="45471" fg:w="41"/><text x="43.4529%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (197 samples, 0.19%)</title><rect x="43.0727%" y="741" width="0.1872%" height="15" fill="rgb(210,66,33)" fg:x="45334" fg:w="197"/><text x="43.3227%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (131 samples, 0.12%)</title><rect x="43.1354%" y="725" width="0.1245%" height="15" fill="rgb(209,189,4)" fg:x="45400" fg:w="131"/><text x="43.3854%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (88 samples, 0.08%)</title><rect x="43.1762%" y="709" width="0.0836%" height="15" fill="rgb(214,107,37)" fg:x="45443" fg:w="88"/><text x="43.4262%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (88 samples, 0.08%)</title><rect x="43.1762%" y="693" width="0.0836%" height="15" fill="rgb(245,88,54)" fg:x="45443" fg:w="88"/><text x="43.4262%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (60 samples, 0.06%)</title><rect x="43.2029%" y="677" width="0.0570%" height="15" fill="rgb(205,146,20)" fg:x="45471" fg:w="60"/><text x="43.4529%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (60 samples, 0.06%)</title><rect x="43.2029%" y="661" width="0.0570%" height="15" fill="rgb(220,161,25)" fg:x="45471" fg:w="60"/><text x="43.4529%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (19 samples, 0.02%)</title><rect x="43.2418%" y="645" width="0.0181%" height="15" fill="rgb(215,152,15)" fg:x="45512" fg:w="19"/><text x="43.4918%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="43.2418%" y="629" width="0.0181%" height="15" fill="rgb(233,192,44)" fg:x="45512" fg:w="19"/><text x="43.4918%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (19 samples, 0.02%)</title><rect x="43.2418%" y="613" width="0.0181%" height="15" fill="rgb(240,170,46)" fg:x="45512" fg:w="19"/><text x="43.4918%" y="623.50"></text></g><g><title>rust_dealloc (19 samples, 0.02%)</title><rect x="43.2836%" y="709" width="0.0181%" height="15" fill="rgb(207,104,33)" fg:x="45556" fg:w="19"/><text x="43.5336%" y="719.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.02%)</title><rect x="43.3017%" y="709" width="0.0152%" height="15" fill="rgb(219,21,39)" fg:x="45575" fg:w="16"/><text x="43.5517%" y="719.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="43.3359%" y="645" width="0.0133%" height="15" fill="rgb(214,133,29)" fg:x="45611" fg:w="14"/><text x="43.5859%" y="655.50"></text></g><g><title>sizeclass_to_size (19 samples, 0.02%)</title><rect x="43.3492%" y="645" width="0.0181%" height="15" fill="rgb(226,93,6)" fg:x="45625" fg:w="19"/><text x="43.5992%" y="655.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (19 samples, 0.02%)</title><rect x="43.3492%" y="629" width="0.0181%" height="15" fill="rgb(252,222,34)" fg:x="45625" fg:w="19"/><text x="43.5992%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (39 samples, 0.04%)</title><rect x="43.3900%" y="597" width="0.0371%" height="15" fill="rgb(252,92,48)" fg:x="45668" fg:w="39"/><text x="43.6400%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (39 samples, 0.04%)</title><rect x="43.3900%" y="581" width="0.0371%" height="15" fill="rgb(245,223,24)" fg:x="45668" fg:w="39"/><text x="43.6400%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (80 samples, 0.08%)</title><rect x="43.3672%" y="645" width="0.0760%" height="15" fill="rgb(205,176,3)" fg:x="45644" fg:w="80"/><text x="43.6172%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (80 samples, 0.08%)</title><rect x="43.3672%" y="629" width="0.0760%" height="15" fill="rgb(235,151,15)" fg:x="45644" fg:w="80"/><text x="43.6172%" y="639.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (79 samples, 0.08%)</title><rect x="43.3682%" y="613" width="0.0751%" height="15" fill="rgb(237,209,11)" fg:x="45645" fg:w="79"/><text x="43.6182%" y="623.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (17 samples, 0.02%)</title><rect x="43.4271%" y="597" width="0.0162%" height="15" fill="rgb(243,227,24)" fg:x="45707" fg:w="17"/><text x="43.6771%" y="607.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (17 samples, 0.02%)</title><rect x="43.4271%" y="581" width="0.0162%" height="15" fill="rgb(239,193,16)" fg:x="45707" fg:w="17"/><text x="43.6771%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (151 samples, 0.14%)</title><rect x="43.3169%" y="677" width="0.1435%" height="15" fill="rgb(231,27,9)" fg:x="45591" fg:w="151"/><text x="43.5669%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (151 samples, 0.14%)</title><rect x="43.3169%" y="661" width="0.1435%" height="15" fill="rgb(219,169,10)" fg:x="45591" fg:w="151"/><text x="43.5669%" y="671.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="43.4432%" y="645" width="0.0171%" height="15" fill="rgb(244,229,43)" fg:x="45724" fg:w="18"/><text x="43.6932%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (154 samples, 0.15%)</title><rect x="43.3169%" y="709" width="0.1463%" height="15" fill="rgb(254,38,20)" fg:x="45591" fg:w="154"/><text x="43.5669%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (154 samples, 0.15%)</title><rect x="43.3169%" y="693" width="0.1463%" height="15" fill="rgb(250,47,30)" fg:x="45591" fg:w="154"/><text x="43.5669%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (192 samples, 0.18%)</title><rect x="43.2836%" y="725" width="0.1824%" height="15" fill="rgb(224,124,36)" fg:x="45556" fg:w="192"/><text x="43.5336%" y="735.50"></text></g><g><title>rust_dealloc (220 samples, 0.21%)</title><rect x="43.2599%" y="741" width="0.2090%" height="15" fill="rgb(246,68,51)" fg:x="45531" fg:w="220"/><text x="43.5099%" y="751.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (13 samples, 0.01%)</title><rect x="43.4698%" y="725" width="0.0124%" height="15" fill="rgb(253,43,49)" fg:x="45752" fg:w="13"/><text x="43.7198%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (468 samples, 0.44%)</title><rect x="43.0394%" y="773" width="0.4447%" height="15" fill="rgb(219,54,36)" fg:x="45299" fg:w="468"/><text x="43.2894%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (451 samples, 0.43%)</title><rect x="43.0556%" y="757" width="0.4285%" height="15" fill="rgb(227,133,34)" fg:x="45316" fg:w="451"/><text x="43.3056%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (16 samples, 0.02%)</title><rect x="43.4689%" y="741" width="0.0152%" height="15" fill="rgb(247,227,15)" fg:x="45751" fg:w="16"/><text x="43.7189%" y="751.50"></text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (27 samples, 0.03%)</title><rect x="43.4841%" y="773" width="0.0257%" height="15" fill="rgb(229,96,14)" fg:x="45767" fg:w="27"/><text x="43.7341%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,585 samples, 3.41%)</title><rect x="40.1188%" y="853" width="3.4062%" height="15" fill="rgb(220,79,17)" fg:x="42225" fg:w="3585"/><text x="40.3688%" y="863.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,585 samples, 3.41%)</title><rect x="40.1188%" y="837" width="3.4062%" height="15" fill="rgb(205,131,53)" fg:x="42225" fg:w="3585"/><text x="40.3688%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,585 samples, 3.41%)</title><rect x="40.1188%" y="821" width="3.4062%" height="15" fill="rgb(209,50,29)" fg:x="42225" fg:w="3585"/><text x="40.3688%" y="831.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (2,625 samples, 2.49%)</title><rect x="41.0309%" y="805" width="2.4941%" height="15" fill="rgb(245,86,46)" fg:x="43185" fg:w="2625"/><text x="41.2809%" y="815.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_event (2,023 samples, 1.92%)</title><rect x="41.6029%" y="789" width="1.9221%" height="15" fill="rgb(235,66,46)" fg:x="43787" fg:w="2023"/><text x="41.8529%" y="799.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_event (16 samples, 0.02%)</title><rect x="43.5097%" y="773" width="0.0152%" height="15" fill="rgb(232,148,31)" fg:x="45794" fg:w="16"/><text x="43.7597%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (34 samples, 0.03%)</title><rect x="43.6475%" y="789" width="0.0323%" height="15" fill="rgb(217,149,8)" fg:x="45939" fg:w="34"/><text x="43.8975%" y="799.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.01%)</title><rect x="43.6675%" y="773" width="0.0124%" height="15" fill="rgb(209,183,11)" fg:x="45960" fg:w="13"/><text x="43.9175%" y="783.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.01%)</title><rect x="43.6798%" y="789" width="0.0124%" height="15" fill="rgb(208,55,20)" fg:x="45973" fg:w="13"/><text x="43.9298%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (941 samples, 0.89%)</title><rect x="43.5496%" y="805" width="0.8941%" height="15" fill="rgb(218,39,14)" fg:x="45836" fg:w="941"/><text x="43.7996%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (791 samples, 0.75%)</title><rect x="43.6922%" y="789" width="0.7515%" height="15" fill="rgb(216,169,33)" fg:x="45986" fg:w="791"/><text x="43.9422%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,397 samples, 1.33%)</title><rect x="43.5249%" y="837" width="1.3273%" height="15" fill="rgb(233,80,24)" fg:x="45810" fg:w="1397"/><text x="43.7749%" y="847.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,397 samples, 1.33%)</title><rect x="43.5249%" y="821" width="1.3273%" height="15" fill="rgb(213,179,31)" fg:x="45810" fg:w="1397"/><text x="43.7749%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (430 samples, 0.41%)</title><rect x="44.4437%" y="805" width="0.4086%" height="15" fill="rgb(209,19,5)" fg:x="46777" fg:w="430"/><text x="44.6937%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (379 samples, 0.36%)</title><rect x="44.8912%" y="821" width="0.3601%" height="15" fill="rgb(219,18,35)" fg:x="47248" fg:w="379"/><text x="45.1412%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (42 samples, 0.04%)</title><rect x="45.4632%" y="805" width="0.0399%" height="15" fill="rgb(209,169,16)" fg:x="47850" fg:w="42"/><text x="45.7132%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.04%)</title><rect x="45.5059%" y="789" width="0.0418%" height="15" fill="rgb(245,90,51)" fg:x="47895" fg:w="44"/><text x="45.7559%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (15 samples, 0.01%)</title><rect x="45.5335%" y="773" width="0.0143%" height="15" fill="rgb(220,99,45)" fg:x="47924" fg:w="15"/><text x="45.7835%" y="783.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (335 samples, 0.32%)</title><rect x="45.5059%" y="805" width="0.3183%" height="15" fill="rgb(249,89,25)" fg:x="47895" fg:w="335"/><text x="45.7559%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (291 samples, 0.28%)</title><rect x="45.5477%" y="789" width="0.2765%" height="15" fill="rgb(239,193,0)" fg:x="47939" fg:w="291"/><text x="45.7977%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (286 samples, 0.27%)</title><rect x="45.5525%" y="773" width="0.2717%" height="15" fill="rgb(231,126,1)" fg:x="47944" fg:w="286"/><text x="45.8025%" y="783.50"></text></g><g><title>core::ptr::read (286 samples, 0.27%)</title><rect x="45.5525%" y="757" width="0.2717%" height="15" fill="rgb(243,166,3)" fg:x="47944" fg:w="286"/><text x="45.8025%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (281 samples, 0.27%)</title><rect x="45.5572%" y="741" width="0.2670%" height="15" fill="rgb(223,22,34)" fg:x="47949" fg:w="281"/><text x="45.8072%" y="751.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="45.8271%" y="805" width="0.0105%" height="15" fill="rgb(251,52,51)" fg:x="48233" fg:w="11"/><text x="46.0771%" y="815.50"></text></g><g><title>rust_alloc (22 samples, 0.02%)</title><rect x="45.8660%" y="501" width="0.0209%" height="15" fill="rgb(221,165,28)" fg:x="48274" fg:w="22"/><text x="46.1160%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (20 samples, 0.02%)</title><rect x="45.8993%" y="421" width="0.0190%" height="15" fill="rgb(218,121,47)" fg:x="48309" fg:w="20"/><text x="46.1493%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (20 samples, 0.02%)</title><rect x="45.8993%" y="405" width="0.0190%" height="15" fill="rgb(209,120,9)" fg:x="48309" fg:w="20"/><text x="46.1493%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (18 samples, 0.02%)</title><rect x="45.9012%" y="389" width="0.0171%" height="15" fill="rgb(236,68,12)" fg:x="48311" fg:w="18"/><text x="46.1512%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (26 samples, 0.02%)</title><rect x="45.8983%" y="437" width="0.0247%" height="15" fill="rgb(225,194,26)" fg:x="48308" fg:w="26"/><text x="46.1483%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (35 samples, 0.03%)</title><rect x="45.8983%" y="453" width="0.0333%" height="15" fill="rgb(231,84,39)" fg:x="48308" fg:w="35"/><text x="46.1483%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="45.9373%" y="437" width="0.0133%" height="15" fill="rgb(210,11,45)" fg:x="48349" fg:w="14"/><text x="46.1873%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (158 samples, 0.15%)</title><rect x="45.8974%" y="485" width="0.1501%" height="15" fill="rgb(224,54,52)" fg:x="48307" fg:w="158"/><text x="46.1474%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (158 samples, 0.15%)</title><rect x="45.8974%" y="469" width="0.1501%" height="15" fill="rgb(238,102,14)" fg:x="48307" fg:w="158"/><text x="46.1474%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (122 samples, 0.12%)</title><rect x="45.9316%" y="453" width="0.1159%" height="15" fill="rgb(243,160,52)" fg:x="48343" fg:w="122"/><text x="46.1816%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (102 samples, 0.10%)</title><rect x="45.9506%" y="437" width="0.0969%" height="15" fill="rgb(216,114,19)" fg:x="48363" fg:w="102"/><text x="46.2006%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (102 samples, 0.10%)</title><rect x="45.9506%" y="421" width="0.0969%" height="15" fill="rgb(244,166,37)" fg:x="48363" fg:w="102"/><text x="46.2006%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (102 samples, 0.10%)</title><rect x="45.9506%" y="405" width="0.0969%" height="15" fill="rgb(246,29,44)" fg:x="48363" fg:w="102"/><text x="46.2006%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (92 samples, 0.09%)</title><rect x="46.0551%" y="485" width="0.0874%" height="15" fill="rgb(215,56,53)" fg:x="48473" fg:w="92"/><text x="46.3051%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (92 samples, 0.09%)</title><rect x="46.0551%" y="469" width="0.0874%" height="15" fill="rgb(217,60,2)" fg:x="48473" fg:w="92"/><text x="46.3051%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (781 samples, 0.74%)</title><rect x="45.8651%" y="533" width="0.7420%" height="15" fill="rgb(207,26,24)" fg:x="48273" fg:w="781"/><text x="46.1151%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (780 samples, 0.74%)</title><rect x="45.8660%" y="517" width="0.7411%" height="15" fill="rgb(252,210,15)" fg:x="48274" fg:w="780"/><text x="46.1160%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (754 samples, 0.72%)</title><rect x="45.8907%" y="501" width="0.7164%" height="15" fill="rgb(253,209,26)" fg:x="48300" fg:w="754"/><text x="46.1407%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (489 samples, 0.46%)</title><rect x="46.1425%" y="485" width="0.4646%" height="15" fill="rgb(238,170,14)" fg:x="48565" fg:w="489"/><text x="46.3925%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (489 samples, 0.46%)</title><rect x="46.1425%" y="469" width="0.4646%" height="15" fill="rgb(216,178,15)" fg:x="48565" fg:w="489"/><text x="46.3925%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (825 samples, 0.78%)</title><rect x="45.8375%" y="677" width="0.7838%" height="15" fill="rgb(250,197,2)" fg:x="48244" fg:w="825"/><text x="46.0875%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (825 samples, 0.78%)</title><rect x="45.8375%" y="661" width="0.7838%" height="15" fill="rgb(212,70,42)" fg:x="48244" fg:w="825"/><text x="46.0875%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (815 samples, 0.77%)</title><rect x="45.8470%" y="645" width="0.7743%" height="15" fill="rgb(227,213,9)" fg:x="48254" fg:w="815"/><text x="46.0970%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (815 samples, 0.77%)</title><rect x="45.8470%" y="629" width="0.7743%" height="15" fill="rgb(245,99,25)" fg:x="48254" fg:w="815"/><text x="46.0970%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (815 samples, 0.77%)</title><rect x="45.8470%" y="613" width="0.7743%" height="15" fill="rgb(250,82,29)" fg:x="48254" fg:w="815"/><text x="46.0970%" y="623.50"></text></g><g><title>alloc::alloc::alloc (806 samples, 0.77%)</title><rect x="45.8556%" y="597" width="0.7658%" height="15" fill="rgb(241,226,54)" fg:x="48263" fg:w="806"/><text x="46.1056%" y="607.50"></text></g><g><title>__rg_alloc (806 samples, 0.77%)</title><rect x="45.8556%" y="581" width="0.7658%" height="15" fill="rgb(221,99,41)" fg:x="48263" fg:w="806"/><text x="46.1056%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (806 samples, 0.77%)</title><rect x="45.8556%" y="565" width="0.7658%" height="15" fill="rgb(213,90,21)" fg:x="48263" fg:w="806"/><text x="46.1056%" y="575.50"></text></g><g><title>rust_alloc (803 samples, 0.76%)</title><rect x="45.8584%" y="549" width="0.7629%" height="15" fill="rgb(205,208,24)" fg:x="48266" fg:w="803"/><text x="46.1084%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="46.6071%" y="533" width="0.0143%" height="15" fill="rgb(246,31,12)" fg:x="49054" fg:w="15"/><text x="46.8571%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (864 samples, 0.82%)</title><rect x="45.8375%" y="693" width="0.8209%" height="15" fill="rgb(213,154,6)" fg:x="48244" fg:w="864"/><text x="46.0875%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (39 samples, 0.04%)</title><rect x="46.6214%" y="677" width="0.0371%" height="15" fill="rgb(222,163,29)" fg:x="49069" fg:w="39"/><text x="46.8714%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.04%)</title><rect x="46.6214%" y="661" width="0.0371%" height="15" fill="rgb(227,201,8)" fg:x="49069" fg:w="39"/><text x="46.8714%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (29 samples, 0.03%)</title><rect x="46.6309%" y="645" width="0.0276%" height="15" fill="rgb(233,9,32)" fg:x="49079" fg:w="29"/><text x="46.8809%" y="655.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (865 samples, 0.82%)</title><rect x="45.8375%" y="805" width="0.8219%" height="15" fill="rgb(217,54,24)" fg:x="48244" fg:w="865"/><text x="46.0875%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (865 samples, 0.82%)</title><rect x="45.8375%" y="789" width="0.8219%" height="15" fill="rgb(235,192,0)" fg:x="48244" fg:w="865"/><text x="46.0875%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (865 samples, 0.82%)</title><rect x="45.8375%" y="773" width="0.8219%" height="15" fill="rgb(235,45,9)" fg:x="48244" fg:w="865"/><text x="46.0875%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (865 samples, 0.82%)</title><rect x="45.8375%" y="757" width="0.8219%" height="15" fill="rgb(246,42,40)" fg:x="48244" fg:w="865"/><text x="46.0875%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (865 samples, 0.82%)</title><rect x="45.8375%" y="741" width="0.8219%" height="15" fill="rgb(248,111,24)" fg:x="48244" fg:w="865"/><text x="46.0875%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (865 samples, 0.82%)</title><rect x="45.8375%" y="725" width="0.8219%" height="15" fill="rgb(249,65,22)" fg:x="48244" fg:w="865"/><text x="46.0875%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (865 samples, 0.82%)</title><rect x="45.8375%" y="709" width="0.8219%" height="15" fill="rgb(238,111,51)" fg:x="48244" fg:w="865"/><text x="46.0875%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,383 samples, 1.31%)</title><rect x="46.6594%" y="805" width="1.3140%" height="15" fill="rgb(250,118,22)" fg:x="49109" fg:w="1383"/><text x="46.9094%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (12 samples, 0.01%)</title><rect x="47.9800%" y="789" width="0.0114%" height="15" fill="rgb(234,84,26)" fg:x="50499" fg:w="12"/><text x="48.2300%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (22 samples, 0.02%)</title><rect x="47.9734%" y="805" width="0.0209%" height="15" fill="rgb(243,172,12)" fg:x="50492" fg:w="22"/><text x="48.2234%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (17 samples, 0.02%)</title><rect x="47.9943%" y="805" width="0.0162%" height="15" fill="rgb(236,150,49)" fg:x="50514" fg:w="17"/><text x="48.2443%" y="815.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="47.9943%" y="789" width="0.0162%" height="15" fill="rgb(225,197,26)" fg:x="50514" fg:w="17"/><text x="48.2443%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (13 samples, 0.01%)</title><rect x="48.0105%" y="805" width="0.0124%" height="15" fill="rgb(214,17,42)" fg:x="50531" fg:w="13"/><text x="48.2605%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="48.0105%" y="789" width="0.0124%" height="15" fill="rgb(224,165,40)" fg:x="50531" fg:w="13"/><text x="48.2605%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (16 samples, 0.02%)</title><rect x="48.0228%" y="805" width="0.0152%" height="15" fill="rgb(246,100,4)" fg:x="50544" fg:w="16"/><text x="48.2728%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt; (15 samples, 0.01%)</title><rect x="48.0238%" y="789" width="0.0143%" height="15" fill="rgb(222,103,0)" fg:x="50545" fg:w="15"/><text x="48.2738%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (31 samples, 0.03%)</title><rect x="48.0380%" y="805" width="0.0295%" height="15" fill="rgb(227,189,26)" fg:x="50560" fg:w="31"/><text x="48.2880%" y="815.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (11 samples, 0.01%)</title><rect x="48.0855%" y="789" width="0.0105%" height="15" fill="rgb(214,202,17)" fg:x="50610" fg:w="11"/><text x="48.3355%" y="799.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (24 samples, 0.02%)</title><rect x="48.0998%" y="757" width="0.0228%" height="15" fill="rgb(229,111,3)" fg:x="50625" fg:w="24"/><text x="48.3498%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (235 samples, 0.22%)</title><rect x="48.0998%" y="773" width="0.2233%" height="15" fill="rgb(229,172,15)" fg:x="50625" fg:w="235"/><text x="48.3498%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (211 samples, 0.20%)</title><rect x="48.1226%" y="757" width="0.2005%" height="15" fill="rgb(230,224,35)" fg:x="50649" fg:w="211"/><text x="48.3726%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (211 samples, 0.20%)</title><rect x="48.1226%" y="741" width="0.2005%" height="15" fill="rgb(251,141,6)" fg:x="50649" fg:w="211"/><text x="48.3726%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (211 samples, 0.20%)</title><rect x="48.1226%" y="725" width="0.2005%" height="15" fill="rgb(225,208,6)" fg:x="50649" fg:w="211"/><text x="48.3726%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (211 samples, 0.20%)</title><rect x="48.1226%" y="709" width="0.2005%" height="15" fill="rgb(246,181,16)" fg:x="50649" fg:w="211"/><text x="48.3726%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (211 samples, 0.20%)</title><rect x="48.1226%" y="693" width="0.2005%" height="15" fill="rgb(227,129,36)" fg:x="50649" fg:w="211"/><text x="48.3726%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (153 samples, 0.15%)</title><rect x="48.1777%" y="677" width="0.1454%" height="15" fill="rgb(248,117,24)" fg:x="50707" fg:w="153"/><text x="48.4277%" y="687.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (270 samples, 0.26%)</title><rect x="48.0675%" y="805" width="0.2565%" height="15" fill="rgb(214,185,35)" fg:x="50591" fg:w="270"/><text x="48.3175%" y="815.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (240 samples, 0.23%)</title><rect x="48.0960%" y="789" width="0.2280%" height="15" fill="rgb(236,150,34)" fg:x="50621" fg:w="240"/><text x="48.3460%" y="799.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,267 samples, 3.10%)</title><rect x="45.2513%" y="821" width="3.1040%" height="15" fill="rgb(243,228,27)" fg:x="47627" fg:w="3267"/><text x="45.5013%" y="831.50">tre..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (33 samples, 0.03%)</title><rect x="48.3240%" y="805" width="0.0314%" height="15" fill="rgb(245,77,44)" fg:x="50861" fg:w="33"/><text x="48.5740%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (33 samples, 0.03%)</title><rect x="48.3240%" y="789" width="0.0314%" height="15" fill="rgb(235,214,42)" fg:x="50861" fg:w="33"/><text x="48.5740%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (33 samples, 0.03%)</title><rect x="48.3240%" y="773" width="0.0314%" height="15" fill="rgb(221,74,3)" fg:x="50861" fg:w="33"/><text x="48.5740%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (21 samples, 0.02%)</title><rect x="48.3354%" y="757" width="0.0200%" height="15" fill="rgb(206,121,29)" fg:x="50873" fg:w="21"/><text x="48.5854%" y="767.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,674 samples, 8.24%)</title><rect x="40.1150%" y="1141" width="8.2413%" height="15" fill="rgb(249,131,53)" fg:x="42221" fg:w="8674"/><text x="40.3650%" y="1151.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,670 samples, 8.24%)</title><rect x="40.1188%" y="1125" width="8.2375%" height="15" fill="rgb(236,170,29)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="1135.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::run::{{closure}} (8,670 samples, 8.24%)</title><rect x="40.1188%" y="1109" width="8.2375%" height="15" fill="rgb(247,96,15)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="1119.50">async_execu..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,670 samples, 8.24%)</title><rect x="40.1188%" y="1093" width="8.2375%" height="15" fill="rgb(211,210,7)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="1103.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,670 samples, 8.24%)</title><rect x="40.1188%" y="1077" width="8.2375%" height="15" fill="rgb(240,88,50)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="1087.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,670 samples, 8.24%)</title><rect x="40.1188%" y="1061" width="8.2375%" height="15" fill="rgb(209,229,26)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="1071.50">async_execu..</text></g><g><title>async_task::runnable::Runnable::run (8,670 samples, 8.24%)</title><rect x="40.1188%" y="1045" width="8.2375%" height="15" fill="rgb(210,68,23)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="1055.50">async_task:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,670 samples, 8.24%)</title><rect x="40.1188%" y="1029" width="8.2375%" height="15" fill="rgb(229,180,13)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="1039.50">async_task:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,670 samples, 8.24%)</title><rect x="40.1188%" y="1013" width="8.2375%" height="15" fill="rgb(236,53,44)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="1023.50">&lt;core::pin:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,670 samples, 8.24%)</title><rect x="40.1188%" y="997" width="8.2375%" height="15" fill="rgb(244,214,29)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="1007.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,670 samples, 8.24%)</title><rect x="40.1188%" y="981" width="8.2375%" height="15" fill="rgb(220,75,29)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="991.50">async_execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,670 samples, 8.24%)</title><rect x="40.1188%" y="965" width="8.2375%" height="15" fill="rgb(214,183,37)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="975.50">&lt;async_std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,670 samples, 8.24%)</title><rect x="40.1188%" y="949" width="8.2375%" height="15" fill="rgb(239,117,29)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="959.50">async_std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,670 samples, 8.24%)</title><rect x="40.1188%" y="933" width="8.2375%" height="15" fill="rgb(237,171,35)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="943.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,670 samples, 8.24%)</title><rect x="40.1188%" y="917" width="8.2375%" height="15" fill="rgb(229,178,53)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="927.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,670 samples, 8.24%)</title><rect x="40.1188%" y="901" width="8.2375%" height="15" fill="rgb(210,102,19)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="911.50">async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,670 samples, 8.24%)</title><rect x="40.1188%" y="885" width="8.2375%" height="15" fill="rgb(235,127,22)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="895.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,670 samples, 8.24%)</title><rect x="40.1188%" y="869" width="8.2375%" height="15" fill="rgb(244,31,31)" fg:x="42225" fg:w="8670"/><text x="40.3688%" y="879.50">&lt;core::futu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,085 samples, 4.83%)</title><rect x="43.5249%" y="853" width="4.8314%" height="15" fill="rgb(231,43,21)" fg:x="45810" fg:w="5085"/><text x="43.7749%" y="863.50">tremor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,688 samples, 3.50%)</title><rect x="44.8523%" y="837" width="3.5040%" height="15" fill="rgb(217,131,35)" fg:x="47207" fg:w="3688"/><text x="45.1023%" y="847.50">&lt;co..</text></g><g><title>async_io::driver::block_on (8,680 samples, 8.25%)</title><rect x="40.1150%" y="1157" width="8.2470%" height="15" fill="rgb(221,149,4)" fg:x="42221" fg:w="8680"/><text x="40.3650%" y="1167.50">async_io::d..</text></g><g><title>rust_alloc (16 samples, 0.02%)</title><rect x="48.9530%" y="757" width="0.0152%" height="15" fill="rgb(232,170,28)" fg:x="51523" fg:w="16"/><text x="49.2030%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="48.9834%" y="709" width="0.0143%" height="15" fill="rgb(238,56,10)" fg:x="51555" fg:w="15"/><text x="49.2334%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="48.9834%" y="741" width="0.0722%" height="15" fill="rgb(235,196,14)" fg:x="51555" fg:w="76"/><text x="49.2334%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (76 samples, 0.07%)</title><rect x="48.9834%" y="725" width="0.0722%" height="15" fill="rgb(216,45,48)" fg:x="51555" fg:w="76"/><text x="49.2334%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (61 samples, 0.06%)</title><rect x="48.9976%" y="709" width="0.0580%" height="15" fill="rgb(238,213,17)" fg:x="51570" fg:w="61"/><text x="49.2476%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (53 samples, 0.05%)</title><rect x="49.0052%" y="693" width="0.0504%" height="15" fill="rgb(212,13,2)" fg:x="51578" fg:w="53"/><text x="49.2552%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (53 samples, 0.05%)</title><rect x="49.0052%" y="677" width="0.0504%" height="15" fill="rgb(240,114,20)" fg:x="51578" fg:w="53"/><text x="49.2552%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (53 samples, 0.05%)</title><rect x="49.0052%" y="661" width="0.0504%" height="15" fill="rgb(228,41,40)" fg:x="51578" fg:w="53"/><text x="49.2552%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::empty (13 samples, 0.01%)</title><rect x="49.0698%" y="741" width="0.0124%" height="15" fill="rgb(244,132,35)" fg:x="51646" fg:w="13"/><text x="49.3198%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (13 samples, 0.01%)</title><rect x="49.0698%" y="725" width="0.0124%" height="15" fill="rgb(253,189,4)" fg:x="51646" fg:w="13"/><text x="49.3198%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (403 samples, 0.38%)</title><rect x="48.9520%" y="789" width="0.3829%" height="15" fill="rgb(224,37,19)" fg:x="51522" fg:w="403"/><text x="49.2020%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (402 samples, 0.38%)</title><rect x="48.9530%" y="773" width="0.3819%" height="15" fill="rgb(235,223,18)" fg:x="51523" fg:w="402"/><text x="49.2030%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (376 samples, 0.36%)</title><rect x="48.9777%" y="757" width="0.3572%" height="15" fill="rgb(235,163,25)" fg:x="51549" fg:w="376"/><text x="49.2277%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (266 samples, 0.25%)</title><rect x="49.0822%" y="741" width="0.2527%" height="15" fill="rgb(217,145,28)" fg:x="51659" fg:w="266"/><text x="49.3322%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (266 samples, 0.25%)</title><rect x="49.0822%" y="725" width="0.2527%" height="15" fill="rgb(223,223,32)" fg:x="51659" fg:w="266"/><text x="49.3322%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (424 samples, 0.40%)</title><rect x="48.9378%" y="901" width="0.4029%" height="15" fill="rgb(227,189,39)" fg:x="51507" fg:w="424"/><text x="49.1878%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (424 samples, 0.40%)</title><rect x="48.9378%" y="885" width="0.4029%" height="15" fill="rgb(248,10,22)" fg:x="51507" fg:w="424"/><text x="49.1878%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (424 samples, 0.40%)</title><rect x="48.9378%" y="869" width="0.4029%" height="15" fill="rgb(248,46,39)" fg:x="51507" fg:w="424"/><text x="49.1878%" y="879.50"></text></g><g><title>alloc::alloc::alloc (424 samples, 0.40%)</title><rect x="48.9378%" y="853" width="0.4029%" height="15" fill="rgb(248,113,48)" fg:x="51507" fg:w="424"/><text x="49.1878%" y="863.50"></text></g><g><title>__rg_alloc (424 samples, 0.40%)</title><rect x="48.9378%" y="837" width="0.4029%" height="15" fill="rgb(245,16,25)" fg:x="51507" fg:w="424"/><text x="49.1878%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (424 samples, 0.40%)</title><rect x="48.9378%" y="821" width="0.4029%" height="15" fill="rgb(249,152,16)" fg:x="51507" fg:w="424"/><text x="49.1878%" y="831.50"></text></g><g><title>rust_alloc (421 samples, 0.40%)</title><rect x="48.9406%" y="805" width="0.4000%" height="15" fill="rgb(250,16,1)" fg:x="51510" fg:w="421"/><text x="49.1906%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (17 samples, 0.02%)</title><rect x="49.3406%" y="901" width="0.0162%" height="15" fill="rgb(249,138,3)" fg:x="51931" fg:w="17"/><text x="49.5906%" y="911.50"></text></g><g><title>alloc::slice::hack::into_vec (17 samples, 0.02%)</title><rect x="49.3406%" y="885" width="0.0162%" height="15" fill="rgb(227,71,41)" fg:x="51931" fg:w="17"/><text x="49.5906%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (17 samples, 0.02%)</title><rect x="49.3406%" y="869" width="0.0162%" height="15" fill="rgb(209,184,23)" fg:x="51931" fg:w="17"/><text x="49.5906%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="49.3568%" y="901" width="0.0209%" height="15" fill="rgb(223,215,31)" fg:x="51948" fg:w="22"/><text x="49.6068%" y="911.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (1,083 samples, 1.03%)</title><rect x="48.3648%" y="917" width="1.0290%" height="15" fill="rgb(210,146,28)" fg:x="50904" fg:w="1083"/><text x="48.6148%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (156 samples, 0.15%)</title><rect x="49.8157%" y="901" width="0.1482%" height="15" fill="rgb(209,183,41)" fg:x="52431" fg:w="156"/><text x="50.0657%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.06%)</title><rect x="49.9914%" y="741" width="0.0551%" height="15" fill="rgb(209,224,45)" fg:x="52616" fg:w="58"/><text x="50.2414%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (58 samples, 0.06%)</title><rect x="49.9914%" y="725" width="0.0551%" height="15" fill="rgb(224,209,51)" fg:x="52616" fg:w="58"/><text x="50.2414%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (49 samples, 0.05%)</title><rect x="50.0000%" y="709" width="0.0466%" height="15" fill="rgb(223,17,39)" fg:x="52625" fg:w="49"/><text x="50.2500%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (36 samples, 0.03%)</title><rect x="50.0124%" y="693" width="0.0342%" height="15" fill="rgb(234,204,37)" fg:x="52638" fg:w="36"/><text x="50.2624%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (36 samples, 0.03%)</title><rect x="50.0124%" y="677" width="0.0342%" height="15" fill="rgb(236,120,5)" fg:x="52638" fg:w="36"/><text x="50.2624%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (36 samples, 0.03%)</title><rect x="50.0124%" y="661" width="0.0342%" height="15" fill="rgb(248,97,27)" fg:x="52638" fg:w="36"/><text x="50.2624%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::empty (18 samples, 0.02%)</title><rect x="50.0532%" y="741" width="0.0171%" height="15" fill="rgb(240,66,17)" fg:x="52681" fg:w="18"/><text x="50.3032%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (18 samples, 0.02%)</title><rect x="50.0532%" y="725" width="0.0171%" height="15" fill="rgb(210,79,3)" fg:x="52681" fg:w="18"/><text x="50.3032%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (215 samples, 0.20%)</title><rect x="49.9791%" y="789" width="0.2043%" height="15" fill="rgb(214,176,27)" fg:x="52603" fg:w="215"/><text x="50.2291%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (209 samples, 0.20%)</title><rect x="49.9848%" y="773" width="0.1986%" height="15" fill="rgb(235,185,3)" fg:x="52609" fg:w="209"/><text x="50.2348%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (204 samples, 0.19%)</title><rect x="49.9895%" y="757" width="0.1938%" height="15" fill="rgb(227,24,12)" fg:x="52614" fg:w="204"/><text x="50.2395%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (119 samples, 0.11%)</title><rect x="50.0703%" y="741" width="0.1131%" height="15" fill="rgb(252,169,48)" fg:x="52699" fg:w="119"/><text x="50.3203%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (119 samples, 0.11%)</title><rect x="50.0703%" y="725" width="0.1131%" height="15" fill="rgb(212,65,1)" fg:x="52699" fg:w="119"/><text x="50.3203%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (241 samples, 0.23%)</title><rect x="49.9639%" y="901" width="0.2290%" height="15" fill="rgb(242,39,24)" fg:x="52587" fg:w="241"/><text x="50.2139%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (241 samples, 0.23%)</title><rect x="49.9639%" y="885" width="0.2290%" height="15" fill="rgb(249,32,23)" fg:x="52587" fg:w="241"/><text x="50.2139%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (241 samples, 0.23%)</title><rect x="49.9639%" y="869" width="0.2290%" height="15" fill="rgb(251,195,23)" fg:x="52587" fg:w="241"/><text x="50.2139%" y="879.50"></text></g><g><title>alloc::alloc::alloc (241 samples, 0.23%)</title><rect x="49.9639%" y="853" width="0.2290%" height="15" fill="rgb(236,174,8)" fg:x="52587" fg:w="241"/><text x="50.2139%" y="863.50"></text></g><g><title>__rg_alloc (241 samples, 0.23%)</title><rect x="49.9639%" y="837" width="0.2290%" height="15" fill="rgb(220,197,8)" fg:x="52587" fg:w="241"/><text x="50.2139%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (241 samples, 0.23%)</title><rect x="49.9639%" y="821" width="0.2290%" height="15" fill="rgb(240,108,37)" fg:x="52587" fg:w="241"/><text x="50.2139%" y="831.50"></text></g><g><title>rust_alloc (227 samples, 0.22%)</title><rect x="49.9772%" y="805" width="0.2157%" height="15" fill="rgb(232,176,24)" fg:x="52601" fg:w="227"/><text x="50.2272%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="50.2309%" y="693" width="0.0143%" height="15" fill="rgb(243,35,29)" fg:x="52868" fg:w="15"/><text x="50.4809%" y="703.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (16 samples, 0.02%)</title><rect x="50.2537%" y="677" width="0.0152%" height="15" fill="rgb(210,37,18)" fg:x="52892" fg:w="16"/><text x="50.5037%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (98 samples, 0.09%)</title><rect x="50.2309%" y="725" width="0.0931%" height="15" fill="rgb(224,184,40)" fg:x="52868" fg:w="98"/><text x="50.4809%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (98 samples, 0.09%)</title><rect x="50.2309%" y="709" width="0.0931%" height="15" fill="rgb(236,39,29)" fg:x="52868" fg:w="98"/><text x="50.4809%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (83 samples, 0.08%)</title><rect x="50.2451%" y="693" width="0.0789%" height="15" fill="rgb(232,48,39)" fg:x="52883" fg:w="83"/><text x="50.4951%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (58 samples, 0.06%)</title><rect x="50.2689%" y="677" width="0.0551%" height="15" fill="rgb(236,34,42)" fg:x="52908" fg:w="58"/><text x="50.5189%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (58 samples, 0.06%)</title><rect x="50.2689%" y="661" width="0.0551%" height="15" fill="rgb(243,106,37)" fg:x="52908" fg:w="58"/><text x="50.5189%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (58 samples, 0.06%)</title><rect x="50.2689%" y="645" width="0.0551%" height="15" fill="rgb(218,96,6)" fg:x="52908" fg:w="58"/><text x="50.5189%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="50.3268%" y="725" width="0.0295%" height="15" fill="rgb(235,130,12)" fg:x="52969" fg:w="31"/><text x="50.5768%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="50.3268%" y="709" width="0.0295%" height="15" fill="rgb(231,95,0)" fg:x="52969" fg:w="31"/><text x="50.5768%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="50.3268%" y="693" width="0.0295%" height="15" fill="rgb(228,12,23)" fg:x="52969" fg:w="31"/><text x="50.5768%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="50.3268%" y="677" width="0.0295%" height="15" fill="rgb(216,12,1)" fg:x="52969" fg:w="31"/><text x="50.5768%" y="687.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (31 samples, 0.03%)</title><rect x="50.3268%" y="661" width="0.0295%" height="15" fill="rgb(219,59,3)" fg:x="52969" fg:w="31"/><text x="50.5768%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (16 samples, 0.02%)</title><rect x="50.3411%" y="645" width="0.0152%" height="15" fill="rgb(215,208,46)" fg:x="52984" fg:w="16"/><text x="50.5911%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.02%)</title><rect x="50.3411%" y="629" width="0.0152%" height="15" fill="rgb(254,224,29)" fg:x="52984" fg:w="16"/><text x="50.5911%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (215 samples, 0.20%)</title><rect x="50.2242%" y="773" width="0.2043%" height="15" fill="rgb(232,14,29)" fg:x="52861" fg:w="215"/><text x="50.4742%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (213 samples, 0.20%)</title><rect x="50.2261%" y="757" width="0.2024%" height="15" fill="rgb(208,45,52)" fg:x="52863" fg:w="213"/><text x="50.4761%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (208 samples, 0.20%)</title><rect x="50.2309%" y="741" width="0.1976%" height="15" fill="rgb(234,191,28)" fg:x="52868" fg:w="208"/><text x="50.4809%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::take (70 samples, 0.07%)</title><rect x="50.3620%" y="725" width="0.0665%" height="15" fill="rgb(244,67,43)" fg:x="53006" fg:w="70"/><text x="50.6120%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (70 samples, 0.07%)</title><rect x="50.3620%" y="709" width="0.0665%" height="15" fill="rgb(236,189,24)" fg:x="53006" fg:w="70"/><text x="50.6120%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (257 samples, 0.24%)</title><rect x="50.1929%" y="901" width="0.2442%" height="15" fill="rgb(239,214,33)" fg:x="52828" fg:w="257"/><text x="50.4429%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (244 samples, 0.23%)</title><rect x="50.2052%" y="885" width="0.2318%" height="15" fill="rgb(226,176,41)" fg:x="52841" fg:w="244"/><text x="50.4552%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (244 samples, 0.23%)</title><rect x="50.2052%" y="869" width="0.2318%" height="15" fill="rgb(248,47,8)" fg:x="52841" fg:w="244"/><text x="50.4552%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (244 samples, 0.23%)</title><rect x="50.2052%" y="853" width="0.2318%" height="15" fill="rgb(218,81,44)" fg:x="52841" fg:w="244"/><text x="50.4552%" y="863.50"></text></g><g><title>alloc::alloc::alloc (243 samples, 0.23%)</title><rect x="50.2062%" y="837" width="0.2309%" height="15" fill="rgb(213,98,6)" fg:x="52842" fg:w="243"/><text x="50.4562%" y="847.50"></text></g><g><title>__rg_alloc (243 samples, 0.23%)</title><rect x="50.2062%" y="821" width="0.2309%" height="15" fill="rgb(222,85,22)" fg:x="52842" fg:w="243"/><text x="50.4562%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (243 samples, 0.23%)</title><rect x="50.2062%" y="805" width="0.2309%" height="15" fill="rgb(239,46,39)" fg:x="52842" fg:w="243"/><text x="50.4562%" y="815.50"></text></g><g><title>rust_alloc (235 samples, 0.22%)</title><rect x="50.2138%" y="789" width="0.2233%" height="15" fill="rgb(237,12,29)" fg:x="52850" fg:w="235"/><text x="50.4638%" y="799.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (22 samples, 0.02%)</title><rect x="50.4409%" y="901" width="0.0209%" height="15" fill="rgb(214,77,8)" fg:x="53089" fg:w="22"/><text x="50.6909%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (22 samples, 0.02%)</title><rect x="50.4409%" y="885" width="0.0209%" height="15" fill="rgb(217,168,37)" fg:x="53089" fg:w="22"/><text x="50.6909%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (22 samples, 0.02%)</title><rect x="50.4409%" y="869" width="0.0209%" height="15" fill="rgb(221,217,23)" fg:x="53089" fg:w="22"/><text x="50.6909%" y="879.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (23 samples, 0.02%)</title><rect x="50.7496%" y="885" width="0.0219%" height="15" fill="rgb(243,229,36)" fg:x="53414" fg:w="23"/><text x="50.9996%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (67 samples, 0.06%)</title><rect x="51.1012%" y="741" width="0.0637%" height="15" fill="rgb(251,163,40)" fg:x="53784" fg:w="67"/><text x="51.3512%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (50 samples, 0.05%)</title><rect x="51.1173%" y="725" width="0.0475%" height="15" fill="rgb(237,222,12)" fg:x="53801" fg:w="50"/><text x="51.3673%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.03%)</title><rect x="51.1354%" y="709" width="0.0295%" height="15" fill="rgb(248,132,6)" fg:x="53820" fg:w="31"/><text x="51.3854%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.02%)</title><rect x="51.1430%" y="693" width="0.0219%" height="15" fill="rgb(227,167,50)" fg:x="53828" fg:w="23"/><text x="51.3930%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::array (14 samples, 0.01%)</title><rect x="51.1515%" y="677" width="0.0133%" height="15" fill="rgb(242,84,37)" fg:x="53837" fg:w="14"/><text x="51.4015%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (14 samples, 0.01%)</title><rect x="51.1515%" y="661" width="0.0133%" height="15" fill="rgb(212,4,50)" fg:x="53837" fg:w="14"/><text x="51.4015%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (14 samples, 0.01%)</title><rect x="51.1515%" y="645" width="0.0133%" height="15" fill="rgb(230,228,32)" fg:x="53837" fg:w="14"/><text x="51.4015%" y="655.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (394 samples, 0.37%)</title><rect x="50.8000%" y="837" width="0.3743%" height="15" fill="rgb(248,217,23)" fg:x="53467" fg:w="394"/><text x="51.0500%" y="847.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (333 samples, 0.32%)</title><rect x="50.8580%" y="821" width="0.3164%" height="15" fill="rgb(238,197,32)" fg:x="53528" fg:w="333"/><text x="51.1080%" y="831.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (317 samples, 0.30%)</title><rect x="50.8732%" y="805" width="0.3012%" height="15" fill="rgb(236,106,1)" fg:x="53544" fg:w="317"/><text x="51.1232%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (98 samples, 0.09%)</title><rect x="51.0812%" y="789" width="0.0931%" height="15" fill="rgb(219,228,13)" fg:x="53763" fg:w="98"/><text x="51.3312%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (77 samples, 0.07%)</title><rect x="51.1012%" y="773" width="0.0732%" height="15" fill="rgb(238,30,35)" fg:x="53784" fg:w="77"/><text x="51.3512%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (77 samples, 0.07%)</title><rect x="51.1012%" y="757" width="0.0732%" height="15" fill="rgb(236,70,23)" fg:x="53784" fg:w="77"/><text x="51.3512%" y="767.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (456 samples, 0.43%)</title><rect x="50.8000%" y="853" width="0.4333%" height="15" fill="rgb(249,104,48)" fg:x="53467" fg:w="456"/><text x="51.0500%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (62 samples, 0.06%)</title><rect x="51.1743%" y="837" width="0.0589%" height="15" fill="rgb(254,117,50)" fg:x="53861" fg:w="62"/><text x="51.4243%" y="847.50"></text></g><g><title>core::ptr::write (62 samples, 0.06%)</title><rect x="51.1743%" y="821" width="0.0589%" height="15" fill="rgb(223,152,4)" fg:x="53861" fg:w="62"/><text x="51.4243%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="51.2570%" y="613" width="0.0114%" height="15" fill="rgb(245,6,2)" fg:x="53948" fg:w="12"/><text x="51.5070%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="51.2570%" y="597" width="0.0114%" height="15" fill="rgb(249,150,24)" fg:x="53948" fg:w="12"/><text x="51.5070%" y="607.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="51.2580%" y="581" width="0.0105%" height="15" fill="rgb(228,185,42)" fg:x="53949" fg:w="11"/><text x="51.5080%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (14 samples, 0.01%)</title><rect x="51.2570%" y="629" width="0.0133%" height="15" fill="rgb(226,39,33)" fg:x="53948" fg:w="14"/><text x="51.5070%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (20 samples, 0.02%)</title><rect x="51.2551%" y="645" width="0.0190%" height="15" fill="rgb(221,166,19)" fg:x="53946" fg:w="20"/><text x="51.5051%" y="655.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (13 samples, 0.01%)</title><rect x="51.2827%" y="629" width="0.0124%" height="15" fill="rgb(209,109,2)" fg:x="53975" fg:w="13"/><text x="51.5327%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (136 samples, 0.13%)</title><rect x="51.2551%" y="677" width="0.1292%" height="15" fill="rgb(252,216,26)" fg:x="53946" fg:w="136"/><text x="51.5051%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (136 samples, 0.13%)</title><rect x="51.2551%" y="661" width="0.1292%" height="15" fill="rgb(227,173,36)" fg:x="53946" fg:w="136"/><text x="51.5051%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (116 samples, 0.11%)</title><rect x="51.2741%" y="645" width="0.1102%" height="15" fill="rgb(209,90,7)" fg:x="53966" fg:w="116"/><text x="51.5241%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (94 samples, 0.09%)</title><rect x="51.2950%" y="629" width="0.0893%" height="15" fill="rgb(250,194,11)" fg:x="53988" fg:w="94"/><text x="51.5450%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (94 samples, 0.09%)</title><rect x="51.2950%" y="613" width="0.0893%" height="15" fill="rgb(220,72,50)" fg:x="53988" fg:w="94"/><text x="51.5450%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (94 samples, 0.09%)</title><rect x="51.2950%" y="597" width="0.0893%" height="15" fill="rgb(222,106,48)" fg:x="53988" fg:w="94"/><text x="51.5450%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="51.3910%" y="677" width="0.0285%" height="15" fill="rgb(216,220,45)" fg:x="54089" fg:w="30"/><text x="51.6410%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="51.3910%" y="661" width="0.0285%" height="15" fill="rgb(234,112,18)" fg:x="54089" fg:w="30"/><text x="51.6410%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="51.3910%" y="645" width="0.0285%" height="15" fill="rgb(206,179,9)" fg:x="54089" fg:w="30"/><text x="51.6410%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="51.3919%" y="629" width="0.0276%" height="15" fill="rgb(215,115,40)" fg:x="54090" fg:w="29"/><text x="51.6419%" y="639.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (29 samples, 0.03%)</title><rect x="51.3919%" y="613" width="0.0276%" height="15" fill="rgb(222,69,34)" fg:x="54090" fg:w="29"/><text x="51.6419%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (12 samples, 0.01%)</title><rect x="51.4081%" y="597" width="0.0114%" height="15" fill="rgb(209,161,10)" fg:x="54107" fg:w="12"/><text x="51.6581%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="51.4081%" y="581" width="0.0114%" height="15" fill="rgb(217,6,38)" fg:x="54107" fg:w="12"/><text x="51.6581%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (717 samples, 0.68%)</title><rect x="50.7943%" y="869" width="0.6812%" height="15" fill="rgb(229,229,48)" fg:x="53461" fg:w="717"/><text x="51.0443%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (255 samples, 0.24%)</title><rect x="51.2333%" y="853" width="0.2423%" height="15" fill="rgb(225,21,28)" fg:x="53923" fg:w="255"/><text x="51.4833%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (255 samples, 0.24%)</title><rect x="51.2333%" y="837" width="0.2423%" height="15" fill="rgb(206,33,13)" fg:x="53923" fg:w="255"/><text x="51.4833%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (255 samples, 0.24%)</title><rect x="51.2333%" y="821" width="0.2423%" height="15" fill="rgb(242,178,17)" fg:x="53923" fg:w="255"/><text x="51.4833%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (255 samples, 0.24%)</title><rect x="51.2333%" y="805" width="0.2423%" height="15" fill="rgb(220,162,5)" fg:x="53923" fg:w="255"/><text x="51.4833%" y="815.50"></text></g><g><title>alloc::alloc::alloc (254 samples, 0.24%)</title><rect x="51.2342%" y="789" width="0.2413%" height="15" fill="rgb(210,33,43)" fg:x="53924" fg:w="254"/><text x="51.4842%" y="799.50"></text></g><g><title>__rg_alloc (254 samples, 0.24%)</title><rect x="51.2342%" y="773" width="0.2413%" height="15" fill="rgb(216,116,54)" fg:x="53924" fg:w="254"/><text x="51.4842%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (254 samples, 0.24%)</title><rect x="51.2342%" y="757" width="0.2413%" height="15" fill="rgb(249,92,24)" fg:x="53924" fg:w="254"/><text x="51.4842%" y="767.50"></text></g><g><title>rust_alloc (254 samples, 0.24%)</title><rect x="51.2342%" y="741" width="0.2413%" height="15" fill="rgb(231,189,14)" fg:x="53924" fg:w="254"/><text x="51.4842%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (248 samples, 0.24%)</title><rect x="51.2399%" y="725" width="0.2356%" height="15" fill="rgb(230,8,41)" fg:x="53930" fg:w="248"/><text x="51.4899%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (248 samples, 0.24%)</title><rect x="51.2399%" y="709" width="0.2356%" height="15" fill="rgb(249,7,27)" fg:x="53930" fg:w="248"/><text x="51.4899%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (242 samples, 0.23%)</title><rect x="51.2456%" y="693" width="0.2299%" height="15" fill="rgb(232,86,5)" fg:x="53936" fg:w="242"/><text x="51.4956%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (58 samples, 0.06%)</title><rect x="51.4204%" y="677" width="0.0551%" height="15" fill="rgb(224,175,18)" fg:x="54120" fg:w="58"/><text x="51.6704%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (58 samples, 0.06%)</title><rect x="51.4204%" y="661" width="0.0551%" height="15" fill="rgb(220,129,12)" fg:x="54120" fg:w="58"/><text x="51.6704%" y="671.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (745 samples, 0.71%)</title><rect x="50.7715%" y="885" width="0.7078%" height="15" fill="rgb(210,19,36)" fg:x="53437" fg:w="745"/><text x="51.0215%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,584 samples, 3.41%)</title><rect x="48.3648%" y="981" width="3.4052%" height="15" fill="rgb(219,96,14)" fg:x="50904" fg:w="3584"/><text x="48.6148%" y="991.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,584 samples, 3.41%)</title><rect x="48.3648%" y="965" width="3.4052%" height="15" fill="rgb(249,106,1)" fg:x="50904" fg:w="3584"/><text x="48.6148%" y="975.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,584 samples, 3.41%)</title><rect x="48.3648%" y="949" width="3.4052%" height="15" fill="rgb(249,155,20)" fg:x="50904" fg:w="3584"/><text x="48.6148%" y="959.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,584 samples, 3.41%)</title><rect x="48.3648%" y="933" width="3.4052%" height="15" fill="rgb(244,168,9)" fg:x="50904" fg:w="3584"/><text x="48.6148%" y="943.50">tre..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,501 samples, 2.38%)</title><rect x="49.3938%" y="917" width="2.3762%" height="15" fill="rgb(216,23,50)" fg:x="51987" fg:w="2501"/><text x="49.6438%" y="927.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,377 samples, 1.31%)</title><rect x="50.4618%" y="901" width="1.3083%" height="15" fill="rgb(224,219,20)" fg:x="53111" fg:w="1377"/><text x="50.7118%" y="911.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (306 samples, 0.29%)</title><rect x="51.4793%" y="885" width="0.2907%" height="15" fill="rgb(222,156,15)" fg:x="54182" fg:w="306"/><text x="51.7293%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="51.9012%" y="869" width="0.0133%" height="15" fill="rgb(231,97,17)" fg:x="54626" fg:w="14"/><text x="52.1512%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (174 samples, 0.17%)</title><rect x="51.9876%" y="853" width="0.1653%" height="15" fill="rgb(218,70,48)" fg:x="54717" fg:w="174"/><text x="52.2376%" y="863.50"></text></g><g><title>core::mem::replace (174 samples, 0.17%)</title><rect x="51.9876%" y="837" width="0.1653%" height="15" fill="rgb(212,196,52)" fg:x="54717" fg:w="174"/><text x="52.2376%" y="847.50"></text></g><g><title>core::ptr::read (173 samples, 0.16%)</title><rect x="51.9886%" y="821" width="0.1644%" height="15" fill="rgb(243,203,18)" fg:x="54718" fg:w="173"/><text x="52.2386%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (282 samples, 0.27%)</title><rect x="51.9240%" y="869" width="0.2679%" height="15" fill="rgb(252,125,41)" fg:x="54650" fg:w="282"/><text x="52.1740%" y="879.50"></text></g><g><title>core::mem::drop (41 samples, 0.04%)</title><rect x="52.1530%" y="853" width="0.0390%" height="15" fill="rgb(223,180,33)" fg:x="54891" fg:w="41"/><text x="52.4030%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (41 samples, 0.04%)</title><rect x="52.1530%" y="837" width="0.0390%" height="15" fill="rgb(254,159,46)" fg:x="54891" fg:w="41"/><text x="52.4030%" y="847.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="52.1919%" y="853" width="0.0171%" height="15" fill="rgb(254,38,10)" fg:x="54932" fg:w="18"/><text x="52.4419%" y="863.50"></text></g><g><title>std::sync::poison::Flag::done (13 samples, 0.01%)</title><rect x="52.2157%" y="821" width="0.0124%" height="15" fill="rgb(208,217,32)" fg:x="54957" fg:w="13"/><text x="52.4657%" y="831.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="52.2157%" y="805" width="0.0124%" height="15" fill="rgb(221,120,13)" fg:x="54957" fg:w="13"/><text x="52.4657%" y="815.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="52.2157%" y="789" width="0.0124%" height="15" fill="rgb(246,54,52)" fg:x="54957" fg:w="13"/><text x="52.4657%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="52.2157%" y="773" width="0.0124%" height="15" fill="rgb(242,34,25)" fg:x="54957" fg:w="13"/><text x="52.4657%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (315 samples, 0.30%)</title><rect x="52.2375%" y="789" width="0.2993%" height="15" fill="rgb(247,209,9)" fg:x="54980" fg:w="315"/><text x="52.4875%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (376 samples, 0.36%)</title><rect x="52.1919%" y="869" width="0.3572%" height="15" fill="rgb(228,71,26)" fg:x="54932" fg:w="376"/><text x="52.4419%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (358 samples, 0.34%)</title><rect x="52.2090%" y="853" width="0.3401%" height="15" fill="rgb(222,145,49)" fg:x="54950" fg:w="358"/><text x="52.4590%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (358 samples, 0.34%)</title><rect x="52.2090%" y="837" width="0.3401%" height="15" fill="rgb(218,121,17)" fg:x="54950" fg:w="358"/><text x="52.4590%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (338 samples, 0.32%)</title><rect x="52.2280%" y="821" width="0.3211%" height="15" fill="rgb(244,50,7)" fg:x="54970" fg:w="338"/><text x="52.4780%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (328 samples, 0.31%)</title><rect x="52.2375%" y="805" width="0.3116%" height="15" fill="rgb(246,229,37)" fg:x="54980" fg:w="328"/><text x="52.4875%" y="815.50"></text></g><g><title>___pthread_mutex_unlock (13 samples, 0.01%)</title><rect x="52.5368%" y="789" width="0.0124%" height="15" fill="rgb(225,18,5)" fg:x="55295" fg:w="13"/><text x="52.7868%" y="799.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (27 samples, 0.03%)</title><rect x="52.5596%" y="821" width="0.0257%" height="15" fill="rgb(213,204,8)" fg:x="55319" fg:w="27"/><text x="52.8096%" y="831.50"></text></g><g><title>core::task::wake::Waker::will_wake (48 samples, 0.05%)</title><rect x="52.5492%" y="869" width="0.0456%" height="15" fill="rgb(238,103,6)" fg:x="55308" fg:w="48"/><text x="52.7992%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (48 samples, 0.05%)</title><rect x="52.5492%" y="853" width="0.0456%" height="15" fill="rgb(222,25,35)" fg:x="55308" fg:w="48"/><text x="52.7992%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (37 samples, 0.04%)</title><rect x="52.5596%" y="837" width="0.0352%" height="15" fill="rgb(213,203,35)" fg:x="55319" fg:w="37"/><text x="52.8096%" y="847.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="52.6081%" y="837" width="0.0105%" height="15" fill="rgb(221,79,53)" fg:x="55370" fg:w="11"/><text x="52.8581%" y="847.50"></text></g><g><title>std::sync::poison::Flag::borrow (11 samples, 0.01%)</title><rect x="52.6081%" y="821" width="0.0105%" height="15" fill="rgb(243,200,35)" fg:x="55370" fg:w="11"/><text x="52.8581%" y="831.50"></text></g><g><title>std::thread::panicking (11 samples, 0.01%)</title><rect x="52.6081%" y="805" width="0.0105%" height="15" fill="rgb(248,60,25)" fg:x="55370" fg:w="11"/><text x="52.8581%" y="815.50"></text></g><g><title>std::panicking::panicking (11 samples, 0.01%)</title><rect x="52.6081%" y="789" width="0.0105%" height="15" fill="rgb(227,53,46)" fg:x="55370" fg:w="11"/><text x="52.8581%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (11 samples, 0.01%)</title><rect x="52.6081%" y="773" width="0.0105%" height="15" fill="rgb(216,120,32)" fg:x="55370" fg:w="11"/><text x="52.8581%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="52.6081%" y="757" width="0.0105%" height="15" fill="rgb(220,134,1)" fg:x="55370" fg:w="11"/><text x="52.8581%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="52.6081%" y="741" width="0.0105%" height="15" fill="rgb(237,168,5)" fg:x="55370" fg:w="11"/><text x="52.8581%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,816 samples, 1.73%)</title><rect x="51.8043%" y="885" width="1.7254%" height="15" fill="rgb(231,100,33)" fg:x="54524" fg:w="1816"/><text x="52.0543%" y="895.50"></text></g><g><title>event_listener::Inner::lock (984 samples, 0.93%)</title><rect x="52.5948%" y="869" width="0.9349%" height="15" fill="rgb(236,177,47)" fg:x="55356" fg:w="984"/><text x="52.8448%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (970 samples, 0.92%)</title><rect x="52.6081%" y="853" width="0.9216%" height="15" fill="rgb(235,7,49)" fg:x="55370" fg:w="970"/><text x="52.8581%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (959 samples, 0.91%)</title><rect x="52.6185%" y="837" width="0.9112%" height="15" fill="rgb(232,119,22)" fg:x="55381" fg:w="959"/><text x="52.8685%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (951 samples, 0.90%)</title><rect x="52.6261%" y="821" width="0.9036%" height="15" fill="rgb(254,73,53)" fg:x="55389" fg:w="951"/><text x="52.8761%" y="831.50"></text></g><g><title>___pthread_mutex_lock (951 samples, 0.90%)</title><rect x="52.6261%" y="805" width="0.9036%" height="15" fill="rgb(251,35,20)" fg:x="55389" fg:w="951"/><text x="52.8761%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (5,452 samples, 5.18%)</title><rect x="48.3648%" y="1157" width="5.1800%" height="15" fill="rgb(241,119,20)" fg:x="50904" fg:w="5452"/><text x="48.6148%" y="1167.50">async_..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,452 samples, 5.18%)</title><rect x="48.3648%" y="1141" width="5.1800%" height="15" fill="rgb(207,102,14)" fg:x="50904" fg:w="5452"/><text x="48.6148%" y="1151.50">&lt;core:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,452 samples, 5.18%)</title><rect x="48.3648%" y="1125" width="5.1800%" height="15" fill="rgb(248,201,50)" fg:x="50904" fg:w="5452"/><text x="48.6148%" y="1135.50">&lt;core:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,452 samples, 5.18%)</title><rect x="48.3648%" y="1109" width="5.1800%" height="15" fill="rgb(222,185,44)" fg:x="50904" fg:w="5452"/><text x="48.6148%" y="1119.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5,452 samples, 5.18%)</title><rect x="48.3648%" y="1093" width="5.1800%" height="15" fill="rgb(218,107,18)" fg:x="50904" fg:w="5452"/><text x="48.6148%" y="1103.50">&lt;async..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5,452 samples, 5.18%)</title><rect x="48.3648%" y="1077" width="5.1800%" height="15" fill="rgb(237,177,39)" fg:x="50904" fg:w="5452"/><text x="48.6148%" y="1087.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,452 samples, 5.18%)</title><rect x="48.3648%" y="1061" width="5.1800%" height="15" fill="rgb(246,69,6)" fg:x="50904" fg:w="5452"/><text x="48.6148%" y="1071.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,452 samples, 5.18%)</title><rect x="48.3648%" y="1045" width="5.1800%" height="15" fill="rgb(234,208,37)" fg:x="50904" fg:w="5452"/><text x="48.6148%" y="1055.50">std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,452 samples, 5.18%)</title><rect x="48.3648%" y="1029" width="5.1800%" height="15" fill="rgb(225,4,6)" fg:x="50904" fg:w="5452"/><text x="48.6148%" y="1039.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,452 samples, 5.18%)</title><rect x="48.3648%" y="1013" width="5.1800%" height="15" fill="rgb(233,45,0)" fg:x="50904" fg:w="5452"/><text x="48.6148%" y="1023.50">&lt;async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,452 samples, 5.18%)</title><rect x="48.3648%" y="997" width="5.1800%" height="15" fill="rgb(226,136,5)" fg:x="50904" fg:w="5452"/><text x="48.6148%" y="1007.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,868 samples, 1.77%)</title><rect x="51.7701%" y="981" width="1.7748%" height="15" fill="rgb(211,91,47)" fg:x="54488" fg:w="1868"/><text x="52.0201%" y="991.50">t..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,868 samples, 1.77%)</title><rect x="51.7701%" y="965" width="1.7748%" height="15" fill="rgb(242,88,51)" fg:x="54488" fg:w="1868"/><text x="52.0201%" y="975.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,868 samples, 1.77%)</title><rect x="51.7701%" y="949" width="1.7748%" height="15" fill="rgb(230,91,28)" fg:x="54488" fg:w="1868"/><text x="52.0201%" y="959.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,868 samples, 1.77%)</title><rect x="51.7701%" y="933" width="1.7748%" height="15" fill="rgb(254,186,29)" fg:x="54488" fg:w="1868"/><text x="52.0201%" y="943.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,868 samples, 1.77%)</title><rect x="51.7701%" y="917" width="1.7748%" height="15" fill="rgb(238,6,4)" fg:x="54488" fg:w="1868"/><text x="52.0201%" y="927.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,868 samples, 1.77%)</title><rect x="51.7701%" y="901" width="1.7748%" height="15" fill="rgb(221,151,16)" fg:x="54488" fg:w="1868"/><text x="52.0201%" y="911.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (16 samples, 0.02%)</title><rect x="53.5297%" y="885" width="0.0152%" height="15" fill="rgb(251,143,52)" fg:x="56340" fg:w="16"/><text x="53.7797%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (23 samples, 0.02%)</title><rect x="53.5544%" y="1157" width="0.0219%" height="15" fill="rgb(206,90,15)" fg:x="56366" fg:w="23"/><text x="53.8044%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (14 samples, 0.01%)</title><rect x="53.5762%" y="1157" width="0.0133%" height="15" fill="rgb(218,35,8)" fg:x="56389" fg:w="14"/><text x="53.8262%" y="1167.50"></text></g><g><title>aligned_size (18 samples, 0.02%)</title><rect x="53.6114%" y="293" width="0.0171%" height="15" fill="rgb(239,215,6)" fg:x="56426" fg:w="18"/><text x="53.8614%" y="303.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="53.6513%" y="213" width="0.0105%" height="15" fill="rgb(245,116,39)" fg:x="56468" fg:w="11"/><text x="53.9013%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (12 samples, 0.01%)</title><rect x="53.6703%" y="213" width="0.0114%" height="15" fill="rgb(242,65,28)" fg:x="56488" fg:w="12"/><text x="53.9203%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (17 samples, 0.02%)</title><rect x="53.7644%" y="181" width="0.0162%" height="15" fill="rgb(252,132,53)" fg:x="56587" fg:w="17"/><text x="54.0144%" y="191.50"></text></g><g><title> (17 samples, 0.02%)</title><rect x="53.7644%" y="165" width="0.0162%" height="15" fill="rgb(224,159,50)" fg:x="56587" fg:w="17"/><text x="54.0144%" y="175.50"></text></g><g><title>snmalloc::Remote::set_info (29 samples, 0.03%)</title><rect x="53.7805%" y="181" width="0.0276%" height="15" fill="rgb(224,93,4)" fg:x="56604" fg:w="29"/><text x="54.0305%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (152 samples, 0.14%)</title><rect x="53.6817%" y="213" width="0.1444%" height="15" fill="rgb(208,81,34)" fg:x="56500" fg:w="152"/><text x="53.9317%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (118 samples, 0.11%)</title><rect x="53.7140%" y="197" width="0.1121%" height="15" fill="rgb(233,92,54)" fg:x="56534" fg:w="118"/><text x="53.9640%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (19 samples, 0.02%)</title><rect x="53.8081%" y="181" width="0.0181%" height="15" fill="rgb(237,21,14)" fg:x="56633" fg:w="19"/><text x="54.0581%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (201 samples, 0.19%)</title><rect x="53.6513%" y="245" width="0.1910%" height="15" fill="rgb(249,128,51)" fg:x="56468" fg:w="201"/><text x="53.9013%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (201 samples, 0.19%)</title><rect x="53.6513%" y="229" width="0.1910%" height="15" fill="rgb(223,129,24)" fg:x="56468" fg:w="201"/><text x="53.9013%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="53.8280%" y="213" width="0.0143%" height="15" fill="rgb(231,168,25)" fg:x="56654" fg:w="15"/><text x="54.0780%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (218 samples, 0.21%)</title><rect x="53.6513%" y="277" width="0.2071%" height="15" fill="rgb(224,39,20)" fg:x="56468" fg:w="218"/><text x="53.9013%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (218 samples, 0.21%)</title><rect x="53.6513%" y="261" width="0.2071%" height="15" fill="rgb(225,152,53)" fg:x="56468" fg:w="218"/><text x="53.9013%" y="271.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="53.8423%" y="245" width="0.0162%" height="15" fill="rgb(252,17,24)" fg:x="56669" fg:w="17"/><text x="54.0923%" y="255.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="53.8423%" y="229" width="0.0162%" height="15" fill="rgb(250,114,30)" fg:x="56669" fg:w="17"/><text x="54.0923%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (17 samples, 0.02%)</title><rect x="53.8423%" y="213" width="0.0162%" height="15" fill="rgb(229,5,4)" fg:x="56669" fg:w="17"/><text x="54.0923%" y="223.50"></text></g><g><title>snmalloc::bits::align_down (17 samples, 0.02%)</title><rect x="53.8423%" y="197" width="0.0162%" height="15" fill="rgb(225,176,49)" fg:x="56669" fg:w="17"/><text x="54.0923%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (257 samples, 0.24%)</title><rect x="53.6285%" y="293" width="0.2442%" height="15" fill="rgb(224,221,49)" fg:x="56444" fg:w="257"/><text x="53.8785%" y="303.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="53.8584%" y="277" width="0.0143%" height="15" fill="rgb(253,169,27)" fg:x="56686" fg:w="15"/><text x="54.1084%" y="287.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="53.8584%" y="261" width="0.0143%" height="15" fill="rgb(211,206,16)" fg:x="56686" fg:w="15"/><text x="54.1084%" y="271.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="53.8584%" y="245" width="0.0143%" height="15" fill="rgb(244,87,35)" fg:x="56686" fg:w="15"/><text x="54.1084%" y="255.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="53.8584%" y="229" width="0.0143%" height="15" fill="rgb(246,28,10)" fg:x="56686" fg:w="15"/><text x="54.1084%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (296 samples, 0.28%)</title><rect x="53.6010%" y="373" width="0.2812%" height="15" fill="rgb(229,12,44)" fg:x="56415" fg:w="296"/><text x="53.8510%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (296 samples, 0.28%)</title><rect x="53.6010%" y="357" width="0.2812%" height="15" fill="rgb(210,145,37)" fg:x="56415" fg:w="296"/><text x="53.8510%" y="367.50"></text></g><g><title>__rg_dealloc (296 samples, 0.28%)</title><rect x="53.6010%" y="341" width="0.2812%" height="15" fill="rgb(227,112,52)" fg:x="56415" fg:w="296"/><text x="53.8510%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (296 samples, 0.28%)</title><rect x="53.6010%" y="325" width="0.2812%" height="15" fill="rgb(238,155,34)" fg:x="56415" fg:w="296"/><text x="53.8510%" y="335.50"></text></g><g><title>rust_dealloc (285 samples, 0.27%)</title><rect x="53.6114%" y="309" width="0.2708%" height="15" fill="rgb(239,226,36)" fg:x="56426" fg:w="285"/><text x="53.8614%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (315 samples, 0.30%)</title><rect x="53.5971%" y="437" width="0.2993%" height="15" fill="rgb(230,16,23)" fg:x="56411" fg:w="315"/><text x="53.8471%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (315 samples, 0.30%)</title><rect x="53.5971%" y="421" width="0.2993%" height="15" fill="rgb(236,171,36)" fg:x="56411" fg:w="315"/><text x="53.8471%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (315 samples, 0.30%)</title><rect x="53.5971%" y="405" width="0.2993%" height="15" fill="rgb(221,22,14)" fg:x="56411" fg:w="315"/><text x="53.8471%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (315 samples, 0.30%)</title><rect x="53.5971%" y="389" width="0.2993%" height="15" fill="rgb(242,43,11)" fg:x="56411" fg:w="315"/><text x="53.8471%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="53.8822%" y="373" width="0.0143%" height="15" fill="rgb(232,69,23)" fg:x="56711" fg:w="15"/><text x="54.1322%" y="383.50"></text></g><g><title>rust_dealloc (31 samples, 0.03%)</title><rect x="54.5273%" y="229" width="0.0295%" height="15" fill="rgb(216,180,54)" fg:x="57390" fg:w="31"/><text x="54.7773%" y="239.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.02%)</title><rect x="54.5568%" y="229" width="0.0152%" height="15" fill="rgb(216,5,24)" fg:x="57421" fg:w="16"/><text x="54.8068%" y="239.50"></text></g><g><title>rust_dealloc (46 samples, 0.04%)</title><rect x="54.5720%" y="165" width="0.0437%" height="15" fill="rgb(225,89,9)" fg:x="57437" fg:w="46"/><text x="54.8220%" y="175.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (26 samples, 0.02%)</title><rect x="54.7107%" y="133" width="0.0247%" height="15" fill="rgb(243,75,33)" fg:x="57583" fg:w="26"/><text x="54.9607%" y="143.50"></text></g><g><title> (26 samples, 0.02%)</title><rect x="54.7107%" y="117" width="0.0247%" height="15" fill="rgb(247,141,45)" fg:x="57583" fg:w="26"/><text x="54.9607%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (136 samples, 0.13%)</title><rect x="54.6223%" y="165" width="0.1292%" height="15" fill="rgb(232,177,36)" fg:x="57490" fg:w="136"/><text x="54.8723%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (121 samples, 0.11%)</title><rect x="54.6366%" y="149" width="0.1150%" height="15" fill="rgb(219,125,36)" fg:x="57505" fg:w="121"/><text x="54.8866%" y="159.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="54.7411%" y="133" width="0.0105%" height="15" fill="rgb(227,94,9)" fg:x="57615" fg:w="11"/><text x="54.9911%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (199 samples, 0.19%)</title><rect x="54.5720%" y="229" width="0.1891%" height="15" fill="rgb(240,34,52)" fg:x="57437" fg:w="199"/><text x="54.8220%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (199 samples, 0.19%)</title><rect x="54.5720%" y="213" width="0.1891%" height="15" fill="rgb(216,45,12)" fg:x="57437" fg:w="199"/><text x="54.8220%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (199 samples, 0.19%)</title><rect x="54.5720%" y="197" width="0.1891%" height="15" fill="rgb(246,21,19)" fg:x="57437" fg:w="199"/><text x="54.8220%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (199 samples, 0.19%)</title><rect x="54.5720%" y="181" width="0.1891%" height="15" fill="rgb(213,98,42)" fg:x="57437" fg:w="199"/><text x="54.8220%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (252 samples, 0.24%)</title><rect x="54.5273%" y="245" width="0.2394%" height="15" fill="rgb(250,136,47)" fg:x="57390" fg:w="252"/><text x="54.7773%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (273 samples, 0.26%)</title><rect x="54.5131%" y="277" width="0.2594%" height="15" fill="rgb(251,124,27)" fg:x="57375" fg:w="273"/><text x="54.7631%" y="287.50"></text></g><g><title>rust_dealloc (273 samples, 0.26%)</title><rect x="54.5131%" y="261" width="0.2594%" height="15" fill="rgb(229,180,14)" fg:x="57375" fg:w="273"/><text x="54.7631%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (280 samples, 0.27%)</title><rect x="54.5131%" y="325" width="0.2660%" height="15" fill="rgb(245,216,25)" fg:x="57375" fg:w="280"/><text x="54.7631%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (280 samples, 0.27%)</title><rect x="54.5131%" y="309" width="0.2660%" height="15" fill="rgb(251,43,5)" fg:x="57375" fg:w="280"/><text x="54.7631%" y="319.50"></text></g><g><title>__rg_dealloc (280 samples, 0.27%)</title><rect x="54.5131%" y="293" width="0.2660%" height="15" fill="rgb(250,128,24)" fg:x="57375" fg:w="280"/><text x="54.7631%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (957 samples, 0.91%)</title><rect x="53.8964%" y="421" width="0.9093%" height="15" fill="rgb(217,117,27)" fg:x="56726" fg:w="957"/><text x="54.1464%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (956 samples, 0.91%)</title><rect x="53.8974%" y="405" width="0.9083%" height="15" fill="rgb(245,147,4)" fg:x="56727" fg:w="956"/><text x="54.1474%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (943 samples, 0.90%)</title><rect x="53.9097%" y="389" width="0.8960%" height="15" fill="rgb(242,201,35)" fg:x="56740" fg:w="943"/><text x="54.1597%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (943 samples, 0.90%)</title><rect x="53.9097%" y="373" width="0.8960%" height="15" fill="rgb(218,181,1)" fg:x="56740" fg:w="943"/><text x="54.1597%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (943 samples, 0.90%)</title><rect x="53.9097%" y="357" width="0.8960%" height="15" fill="rgb(222,6,29)" fg:x="56740" fg:w="943"/><text x="54.1597%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (943 samples, 0.90%)</title><rect x="53.9097%" y="341" width="0.8960%" height="15" fill="rgb(208,186,3)" fg:x="56740" fg:w="943"/><text x="54.1597%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (28 samples, 0.03%)</title><rect x="54.7791%" y="325" width="0.0266%" height="15" fill="rgb(216,36,26)" fg:x="57655" fg:w="28"/><text x="55.0291%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (12 samples, 0.01%)</title><rect x="54.8057%" y="421" width="0.0114%" height="15" fill="rgb(248,201,23)" fg:x="57683" fg:w="12"/><text x="55.0557%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="54.8057%" y="405" width="0.0114%" height="15" fill="rgb(251,170,31)" fg:x="57683" fg:w="12"/><text x="55.0557%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="54.8067%" y="389" width="0.0105%" height="15" fill="rgb(207,110,25)" fg:x="57684" fg:w="11"/><text x="55.0567%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,296 samples, 1.23%)</title><rect x="53.5895%" y="453" width="1.2314%" height="15" fill="rgb(250,54,15)" fg:x="56403" fg:w="1296"/><text x="53.8395%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (973 samples, 0.92%)</title><rect x="53.8964%" y="437" width="0.9245%" height="15" fill="rgb(227,68,33)" fg:x="56726" fg:w="973"/><text x="54.1464%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,297 samples, 1.23%)</title><rect x="53.5895%" y="469" width="1.2323%" height="15" fill="rgb(238,34,41)" fg:x="56403" fg:w="1297"/><text x="53.8395%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (42 samples, 0.04%)</title><rect x="54.8219%" y="469" width="0.0399%" height="15" fill="rgb(220,11,15)" fg:x="57700" fg:w="42"/><text x="55.0719%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (42 samples, 0.04%)</title><rect x="54.8219%" y="453" width="0.0399%" height="15" fill="rgb(246,111,35)" fg:x="57700" fg:w="42"/><text x="55.0719%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="54.8219%" y="437" width="0.0399%" height="15" fill="rgb(209,88,53)" fg:x="57700" fg:w="42"/><text x="55.0719%" y="447.50"></text></g><g><title>core::mem::drop (42 samples, 0.04%)</title><rect x="54.8219%" y="421" width="0.0399%" height="15" fill="rgb(231,185,47)" fg:x="57700" fg:w="42"/><text x="55.0719%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (42 samples, 0.04%)</title><rect x="54.8219%" y="405" width="0.0399%" height="15" fill="rgb(233,154,1)" fg:x="57700" fg:w="42"/><text x="55.0719%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="54.8219%" y="389" width="0.0399%" height="15" fill="rgb(225,15,46)" fg:x="57700" fg:w="42"/><text x="55.0719%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (42 samples, 0.04%)</title><rect x="54.8219%" y="373" width="0.0399%" height="15" fill="rgb(211,135,41)" fg:x="57700" fg:w="42"/><text x="55.0719%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (25 samples, 0.02%)</title><rect x="54.8380%" y="357" width="0.0238%" height="15" fill="rgb(208,54,0)" fg:x="57717" fg:w="25"/><text x="55.0880%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (25 samples, 0.02%)</title><rect x="54.8380%" y="341" width="0.0238%" height="15" fill="rgb(244,136,14)" fg:x="57717" fg:w="25"/><text x="55.0880%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (16 samples, 0.02%)</title><rect x="54.8466%" y="325" width="0.0152%" height="15" fill="rgb(241,56,14)" fg:x="57726" fg:w="16"/><text x="55.0966%" y="335.50"></text></g><g><title>core::mem::replace (16 samples, 0.02%)</title><rect x="54.8466%" y="309" width="0.0152%" height="15" fill="rgb(205,80,24)" fg:x="57726" fg:w="16"/><text x="55.0966%" y="319.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="54.8494%" y="293" width="0.0124%" height="15" fill="rgb(220,57,4)" fg:x="57729" fg:w="13"/><text x="55.0994%" y="303.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,441 samples, 1.37%)</title><rect x="53.5895%" y="549" width="1.3691%" height="15" fill="rgb(226,193,50)" fg:x="56403" fg:w="1441"/><text x="53.8395%" y="559.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,441 samples, 1.37%)</title><rect x="53.5895%" y="533" width="1.3691%" height="15" fill="rgb(231,168,22)" fg:x="56403" fg:w="1441"/><text x="53.8395%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,441 samples, 1.37%)</title><rect x="53.5895%" y="517" width="1.3691%" height="15" fill="rgb(254,215,14)" fg:x="56403" fg:w="1441"/><text x="53.8395%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (1,441 samples, 1.37%)</title><rect x="53.5895%" y="501" width="1.3691%" height="15" fill="rgb(211,115,16)" fg:x="56403" fg:w="1441"/><text x="53.8395%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (1,441 samples, 1.37%)</title><rect x="53.5895%" y="485" width="1.3691%" height="15" fill="rgb(236,210,16)" fg:x="56403" fg:w="1441"/><text x="53.8395%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (102 samples, 0.10%)</title><rect x="54.8618%" y="469" width="0.0969%" height="15" fill="rgb(221,94,12)" fg:x="57742" fg:w="102"/><text x="55.1118%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (97 samples, 0.09%)</title><rect x="54.8665%" y="453" width="0.0922%" height="15" fill="rgb(235,218,49)" fg:x="57747" fg:w="97"/><text x="55.1165%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (97 samples, 0.09%)</title><rect x="54.8665%" y="437" width="0.0922%" height="15" fill="rgb(217,114,14)" fg:x="57747" fg:w="97"/><text x="55.1165%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="54.9435%" y="421" width="0.0152%" height="15" fill="rgb(216,145,22)" fg:x="57828" fg:w="16"/><text x="55.1935%" y="431.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="54.9454%" y="405" width="0.0133%" height="15" fill="rgb(217,112,39)" fg:x="57830" fg:w="14"/><text x="55.1954%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="54.9454%" y="389" width="0.0133%" height="15" fill="rgb(225,85,32)" fg:x="57830" fg:w="14"/><text x="55.1954%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="54.9454%" y="373" width="0.0133%" height="15" fill="rgb(245,209,47)" fg:x="57830" fg:w="14"/><text x="55.1954%" y="383.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="54.9454%" y="357" width="0.0133%" height="15" fill="rgb(218,220,15)" fg:x="57830" fg:w="14"/><text x="55.1954%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="54.9454%" y="341" width="0.0133%" height="15" fill="rgb(222,202,31)" fg:x="57830" fg:w="14"/><text x="55.1954%" y="351.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (35 samples, 0.03%)</title><rect x="54.9587%" y="549" width="0.0333%" height="15" fill="rgb(243,203,4)" fg:x="57844" fg:w="35"/><text x="55.2087%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (337 samples, 0.32%)</title><rect x="55.0689%" y="517" width="0.3202%" height="15" fill="rgb(237,92,17)" fg:x="57960" fg:w="337"/><text x="55.3189%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (190 samples, 0.18%)</title><rect x="55.4128%" y="501" width="0.1805%" height="15" fill="rgb(231,119,7)" fg:x="58322" fg:w="190"/><text x="55.6628%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::control_plane::{{closure}} (346 samples, 0.33%)</title><rect x="55.3891%" y="517" width="0.3287%" height="15" fill="rgb(237,82,41)" fg:x="58297" fg:w="346"/><text x="55.6391%" y="527.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::needs_control_plane_msg (131 samples, 0.12%)</title><rect x="55.5933%" y="501" width="0.1245%" height="15" fill="rgb(226,81,48)" fg:x="58512" fg:w="131"/><text x="55.8433%" y="511.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (114 samples, 0.11%)</title><rect x="55.6095%" y="485" width="0.1083%" height="15" fill="rgb(234,70,51)" fg:x="58529" fg:w="114"/><text x="55.8595%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (113 samples, 0.11%)</title><rect x="55.6105%" y="469" width="0.1074%" height="15" fill="rgb(251,86,4)" fg:x="58530" fg:w="113"/><text x="55.8605%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (87 samples, 0.08%)</title><rect x="55.6352%" y="453" width="0.0827%" height="15" fill="rgb(244,144,28)" fg:x="58556" fg:w="87"/><text x="55.8852%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (77 samples, 0.07%)</title><rect x="55.6447%" y="437" width="0.0732%" height="15" fill="rgb(232,161,39)" fg:x="58566" fg:w="77"/><text x="55.8947%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (77 samples, 0.07%)</title><rect x="55.6447%" y="421" width="0.0732%" height="15" fill="rgb(247,34,51)" fg:x="58566" fg:w="77"/><text x="55.8947%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="56.6527%" y="501" width="0.0105%" height="15" fill="rgb(225,132,2)" fg:x="59627" fg:w="11"/><text x="56.9027%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="56.6527%" y="485" width="0.0105%" height="15" fill="rgb(209,159,44)" fg:x="59627" fg:w="11"/><text x="56.9027%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.01%)</title><rect x="56.6527%" y="469" width="0.0105%" height="15" fill="rgb(251,214,1)" fg:x="59627" fg:w="11"/><text x="56.9027%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (500 samples, 0.48%)</title><rect x="56.6660%" y="501" width="0.4751%" height="15" fill="rgb(247,84,47)" fg:x="59641" fg:w="500"/><text x="56.9160%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="57.1420%" y="501" width="0.0124%" height="15" fill="rgb(240,111,43)" fg:x="60142" fg:w="13"/><text x="57.3920%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (27 samples, 0.03%)</title><rect x="57.1563%" y="437" width="0.0257%" height="15" fill="rgb(215,214,35)" fg:x="60157" fg:w="27"/><text x="57.4063%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="57.1705%" y="421" width="0.0114%" height="15" fill="rgb(248,207,23)" fg:x="60172" fg:w="12"/><text x="57.4205%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="57.1705%" y="405" width="0.0114%" height="15" fill="rgb(214,186,4)" fg:x="60172" fg:w="12"/><text x="57.4205%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="57.1705%" y="389" width="0.0114%" height="15" fill="rgb(220,133,22)" fg:x="60172" fg:w="12"/><text x="57.4205%" y="399.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="57.1705%" y="373" width="0.0114%" height="15" fill="rgb(239,134,19)" fg:x="60172" fg:w="12"/><text x="57.4205%" y="383.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="57.1705%" y="357" width="0.0114%" height="15" fill="rgb(250,140,9)" fg:x="60172" fg:w="12"/><text x="57.4205%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="57.1705%" y="341" width="0.0114%" height="15" fill="rgb(225,59,14)" fg:x="60172" fg:w="12"/><text x="57.4205%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (43 samples, 0.04%)</title><rect x="57.1544%" y="501" width="0.0409%" height="15" fill="rgb(214,152,51)" fg:x="60155" fg:w="43"/><text x="57.4044%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (41 samples, 0.04%)</title><rect x="57.1563%" y="485" width="0.0390%" height="15" fill="rgb(251,227,43)" fg:x="60157" fg:w="41"/><text x="57.4063%" y="495.50"></text></g><g><title>value_trait::Builder::object (41 samples, 0.04%)</title><rect x="57.1563%" y="469" width="0.0390%" height="15" fill="rgb(241,96,17)" fg:x="60157" fg:w="41"/><text x="57.4063%" y="479.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (41 samples, 0.04%)</title><rect x="57.1563%" y="453" width="0.0390%" height="15" fill="rgb(234,198,43)" fg:x="60157" fg:w="41"/><text x="57.4063%" y="463.50"></text></g><g><title>tremor_value::value::Value::Object (14 samples, 0.01%)</title><rect x="57.1819%" y="437" width="0.0133%" height="15" fill="rgb(220,108,29)" fg:x="60184" fg:w="14"/><text x="57.4319%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="57.1952%" y="501" width="0.0152%" height="15" fill="rgb(226,163,33)" fg:x="60198" fg:w="16"/><text x="57.4452%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (14 samples, 0.01%)</title><rect x="57.2105%" y="501" width="0.0133%" height="15" fill="rgb(205,194,45)" fg:x="60214" fg:w="14"/><text x="57.4605%" y="511.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="57.2342%" y="469" width="0.0114%" height="15" fill="rgb(206,143,44)" fg:x="60239" fg:w="12"/><text x="57.4842%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (27 samples, 0.03%)</title><rect x="57.2893%" y="357" width="0.0257%" height="15" fill="rgb(236,136,36)" fg:x="60297" fg:w="27"/><text x="57.5393%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (26 samples, 0.02%)</title><rect x="57.2903%" y="341" width="0.0247%" height="15" fill="rgb(249,172,42)" fg:x="60298" fg:w="26"/><text x="57.5403%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (57 samples, 0.05%)</title><rect x="57.2722%" y="405" width="0.0542%" height="15" fill="rgb(216,139,23)" fg:x="60279" fg:w="57"/><text x="57.5222%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (57 samples, 0.05%)</title><rect x="57.2722%" y="389" width="0.0542%" height="15" fill="rgb(207,166,20)" fg:x="60279" fg:w="57"/><text x="57.5222%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (55 samples, 0.05%)</title><rect x="57.2741%" y="373" width="0.0523%" height="15" fill="rgb(210,209,22)" fg:x="60281" fg:w="55"/><text x="57.5241%" y="383.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="57.3150%" y="357" width="0.0114%" height="15" fill="rgb(232,118,20)" fg:x="60324" fg:w="12"/><text x="57.5650%" y="367.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="57.3150%" y="341" width="0.0114%" height="15" fill="rgb(238,113,42)" fg:x="60324" fg:w="12"/><text x="57.5650%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (77 samples, 0.07%)</title><rect x="57.2551%" y="469" width="0.0732%" height="15" fill="rgb(231,42,5)" fg:x="60261" fg:w="77"/><text x="57.5051%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (77 samples, 0.07%)</title><rect x="57.2551%" y="453" width="0.0732%" height="15" fill="rgb(243,166,24)" fg:x="60261" fg:w="77"/><text x="57.5051%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (77 samples, 0.07%)</title><rect x="57.2551%" y="437" width="0.0732%" height="15" fill="rgb(237,226,12)" fg:x="60261" fg:w="77"/><text x="57.5051%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (77 samples, 0.07%)</title><rect x="57.2551%" y="421" width="0.0732%" height="15" fill="rgb(229,133,24)" fg:x="60261" fg:w="77"/><text x="57.5051%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (101 samples, 0.10%)</title><rect x="57.2342%" y="485" width="0.0960%" height="15" fill="rgb(238,33,43)" fg:x="60239" fg:w="101"/><text x="57.4842%" y="495.50"></text></g><g><title>rust_dealloc (115 samples, 0.11%)</title><rect x="57.2238%" y="501" width="0.1093%" height="15" fill="rgb(227,59,38)" fg:x="60228" fg:w="115"/><text x="57.4738%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,705 samples, 1.62%)</title><rect x="55.7178%" y="517" width="1.6200%" height="15" fill="rgb(230,97,0)" fg:x="58643" fg:w="1705"/><text x="55.9678%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,462 samples, 2.34%)</title><rect x="55.0670%" y="533" width="2.3392%" height="15" fill="rgb(250,173,50)" fg:x="57958" fg:w="2462"/><text x="55.3170%" y="543.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (72 samples, 0.07%)</title><rect x="57.3378%" y="517" width="0.0684%" height="15" fill="rgb(240,15,50)" fg:x="60348" fg:w="72"/><text x="57.5878%" y="527.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="57.4062%" y="533" width="0.0114%" height="15" fill="rgb(221,93,22)" fg:x="60420" fg:w="12"/><text x="57.6562%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="57.4071%" y="517" width="0.0105%" height="15" fill="rgb(245,180,53)" fg:x="60421" fg:w="11"/><text x="57.6571%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.01%)</title><rect x="57.4176%" y="533" width="0.0124%" height="15" fill="rgb(231,88,51)" fg:x="60432" fg:w="13"/><text x="57.6676%" y="543.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (25 samples, 0.02%)</title><rect x="57.4299%" y="533" width="0.0238%" height="15" fill="rgb(240,58,21)" fg:x="60445" fg:w="25"/><text x="57.6799%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (25 samples, 0.02%)</title><rect x="57.4299%" y="517" width="0.0238%" height="15" fill="rgb(237,21,10)" fg:x="60445" fg:w="25"/><text x="57.6799%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (600 samples, 0.57%)</title><rect x="57.4537%" y="533" width="0.5701%" height="15" fill="rgb(218,43,11)" fg:x="60470" fg:w="600"/><text x="57.7037%" y="543.50"></text></g><g><title>rust_dealloc (29 samples, 0.03%)</title><rect x="58.0580%" y="325" width="0.0276%" height="15" fill="rgb(218,221,29)" fg:x="61106" fg:w="29"/><text x="58.3080%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="58.0998%" y="277" width="0.0105%" height="15" fill="rgb(214,118,42)" fg:x="61150" fg:w="11"/><text x="58.3498%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="58.0855%" y="325" width="0.0295%" height="15" fill="rgb(251,200,26)" fg:x="61135" fg:w="31"/><text x="58.3355%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="58.0855%" y="309" width="0.0295%" height="15" fill="rgb(237,101,39)" fg:x="61135" fg:w="31"/><text x="58.3355%" y="319.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (30 samples, 0.03%)</title><rect x="58.0865%" y="293" width="0.0285%" height="15" fill="rgb(251,117,11)" fg:x="61136" fg:w="30"/><text x="58.3365%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (74 samples, 0.07%)</title><rect x="58.0580%" y="357" width="0.0703%" height="15" fill="rgb(216,223,23)" fg:x="61106" fg:w="74"/><text x="58.3080%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (74 samples, 0.07%)</title><rect x="58.0580%" y="341" width="0.0703%" height="15" fill="rgb(251,54,12)" fg:x="61106" fg:w="74"/><text x="58.3080%" y="351.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="58.1150%" y="325" width="0.0133%" height="15" fill="rgb(254,176,54)" fg:x="61166" fg:w="14"/><text x="58.3650%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (81 samples, 0.08%)</title><rect x="58.0580%" y="389" width="0.0770%" height="15" fill="rgb(210,32,8)" fg:x="61106" fg:w="81"/><text x="58.3080%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (81 samples, 0.08%)</title><rect x="58.0580%" y="373" width="0.0770%" height="15" fill="rgb(235,52,38)" fg:x="61106" fg:w="81"/><text x="58.3080%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (94 samples, 0.09%)</title><rect x="58.0542%" y="405" width="0.0893%" height="15" fill="rgb(231,4,44)" fg:x="61102" fg:w="94"/><text x="58.3042%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (125 samples, 0.12%)</title><rect x="58.0323%" y="533" width="0.1188%" height="15" fill="rgb(249,2,32)" fg:x="61079" fg:w="125"/><text x="58.2823%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (125 samples, 0.12%)</title><rect x="58.0323%" y="517" width="0.1188%" height="15" fill="rgb(224,65,26)" fg:x="61079" fg:w="125"/><text x="58.2823%" y="527.50"></text></g><g><title>alloc::alloc::box_free (125 samples, 0.12%)</title><rect x="58.0323%" y="501" width="0.1188%" height="15" fill="rgb(250,73,40)" fg:x="61079" fg:w="125"/><text x="58.2823%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (111 samples, 0.11%)</title><rect x="58.0456%" y="485" width="0.1055%" height="15" fill="rgb(253,177,16)" fg:x="61093" fg:w="111"/><text x="58.2956%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (111 samples, 0.11%)</title><rect x="58.0456%" y="469" width="0.1055%" height="15" fill="rgb(217,32,34)" fg:x="61093" fg:w="111"/><text x="58.2956%" y="479.50"></text></g><g><title>__rg_dealloc (111 samples, 0.11%)</title><rect x="58.0456%" y="453" width="0.1055%" height="15" fill="rgb(212,7,10)" fg:x="61093" fg:w="111"/><text x="58.2956%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (111 samples, 0.11%)</title><rect x="58.0456%" y="437" width="0.1055%" height="15" fill="rgb(245,89,8)" fg:x="61093" fg:w="111"/><text x="58.2956%" y="447.50"></text></g><g><title>rust_dealloc (111 samples, 0.11%)</title><rect x="58.0456%" y="421" width="0.1055%" height="15" fill="rgb(237,16,53)" fg:x="61093" fg:w="111"/><text x="58.2956%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,860 samples, 4.62%)</title><rect x="53.5895%" y="1157" width="4.6176%" height="15" fill="rgb(250,204,30)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="1167.50">core:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (4,860 samples, 4.62%)</title><rect x="53.5895%" y="1141" width="4.6176%" height="15" fill="rgb(208,77,27)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="1151.50">std::..</text></g><g><title>std::panic::catch_unwind (4,860 samples, 4.62%)</title><rect x="53.5895%" y="1125" width="4.6176%" height="15" fill="rgb(250,204,28)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="1135.50">std::..</text></g><g><title>std::panicking::try (4,860 samples, 4.62%)</title><rect x="53.5895%" y="1109" width="4.6176%" height="15" fill="rgb(244,63,21)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="1119.50">std::..</text></g><g><title>std::panicking::try::do_call (4,860 samples, 4.62%)</title><rect x="53.5895%" y="1093" width="4.6176%" height="15" fill="rgb(236,85,44)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="1103.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,860 samples, 4.62%)</title><rect x="53.5895%" y="1077" width="4.6176%" height="15" fill="rgb(215,98,4)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="1087.50">&lt;core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (4,860 samples, 4.62%)</title><rect x="53.5895%" y="1061" width="4.6176%" height="15" fill="rgb(235,38,11)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="1071.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,860 samples, 4.62%)</title><rect x="53.5895%" y="1045" width="4.6176%" height="15" fill="rgb(254,186,25)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="1055.50">std::..</text></g><g><title>core::ops::function::FnOnce::call_once (4,860 samples, 4.62%)</title><rect x="53.5895%" y="1029" width="4.6176%" height="15" fill="rgb(225,55,31)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="1039.50">core:..</text></g><g><title>async_global_executor::threading::thread_main_loop (4,860 samples, 4.62%)</title><rect x="53.5895%" y="1013" width="4.6176%" height="15" fill="rgb(211,15,21)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="1023.50">async..</text></g><g><title>std::panic::catch_unwind (4,860 samples, 4.62%)</title><rect x="53.5895%" y="997" width="4.6176%" height="15" fill="rgb(215,187,41)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="1007.50">std::..</text></g><g><title>std::panicking::try (4,860 samples, 4.62%)</title><rect x="53.5895%" y="981" width="4.6176%" height="15" fill="rgb(248,69,32)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="991.50">std::..</text></g><g><title>std::panicking::try::do_call (4,860 samples, 4.62%)</title><rect x="53.5895%" y="965" width="4.6176%" height="15" fill="rgb(252,102,52)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="975.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (4,860 samples, 4.62%)</title><rect x="53.5895%" y="949" width="4.6176%" height="15" fill="rgb(253,140,32)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="959.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,860 samples, 4.62%)</title><rect x="53.5895%" y="933" width="4.6176%" height="15" fill="rgb(216,56,42)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="943.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,860 samples, 4.62%)</title><rect x="53.5895%" y="917" width="4.6176%" height="15" fill="rgb(216,184,14)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="927.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4,860 samples, 4.62%)</title><rect x="53.5895%" y="901" width="4.6176%" height="15" fill="rgb(237,187,27)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="911.50">async..</text></g><g><title>async_global_executor::reactor::block_on (4,860 samples, 4.62%)</title><rect x="53.5895%" y="885" width="4.6176%" height="15" fill="rgb(219,65,3)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="895.50">async..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,860 samples, 4.62%)</title><rect x="53.5895%" y="869" width="4.6176%" height="15" fill="rgb(245,83,25)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="879.50">async..</text></g><g><title>async_io::driver::block_on (4,860 samples, 4.62%)</title><rect x="53.5895%" y="853" width="4.6176%" height="15" fill="rgb(214,205,45)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="863.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,860 samples, 4.62%)</title><rect x="53.5895%" y="837" width="4.6176%" height="15" fill="rgb(241,20,18)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="847.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,860 samples, 4.62%)</title><rect x="53.5895%" y="821" width="4.6176%" height="15" fill="rgb(232,163,23)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="831.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}} (4,860 samples, 4.62%)</title><rect x="53.5895%" y="805" width="4.6176%" height="15" fill="rgb(214,5,46)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="815.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,860 samples, 4.62%)</title><rect x="53.5895%" y="789" width="4.6176%" height="15" fill="rgb(229,78,17)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="799.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,860 samples, 4.62%)</title><rect x="53.5895%" y="773" width="4.6176%" height="15" fill="rgb(248,89,10)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="783.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,860 samples, 4.62%)</title><rect x="53.5895%" y="757" width="4.6176%" height="15" fill="rgb(248,54,15)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="767.50">async..</text></g><g><title>async_task::runnable::Runnable::run (4,860 samples, 4.62%)</title><rect x="53.5895%" y="741" width="4.6176%" height="15" fill="rgb(223,116,6)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="751.50">async..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,860 samples, 4.62%)</title><rect x="53.5895%" y="725" width="4.6176%" height="15" fill="rgb(205,125,38)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="735.50">async..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,860 samples, 4.62%)</title><rect x="53.5895%" y="709" width="4.6176%" height="15" fill="rgb(251,78,38)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="719.50">&lt;core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,860 samples, 4.62%)</title><rect x="53.5895%" y="693" width="4.6176%" height="15" fill="rgb(253,78,28)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="703.50">&lt;core..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,860 samples, 4.62%)</title><rect x="53.5895%" y="677" width="4.6176%" height="15" fill="rgb(209,120,3)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="687.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,860 samples, 4.62%)</title><rect x="53.5895%" y="661" width="4.6176%" height="15" fill="rgb(238,229,9)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="671.50">&lt;asyn..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,860 samples, 4.62%)</title><rect x="53.5895%" y="645" width="4.6176%" height="15" fill="rgb(253,159,18)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="655.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,860 samples, 4.62%)</title><rect x="53.5895%" y="629" width="4.6176%" height="15" fill="rgb(244,42,34)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="639.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,860 samples, 4.62%)</title><rect x="53.5895%" y="613" width="4.6176%" height="15" fill="rgb(224,8,7)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="623.50">std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,860 samples, 4.62%)</title><rect x="53.5895%" y="597" width="4.6176%" height="15" fill="rgb(210,201,45)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="607.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,860 samples, 4.62%)</title><rect x="53.5895%" y="581" width="4.6176%" height="15" fill="rgb(252,185,21)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="591.50">&lt;asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,860 samples, 4.62%)</title><rect x="53.5895%" y="565" width="4.6176%" height="15" fill="rgb(223,131,1)" fg:x="56403" fg:w="4860"/><text x="53.8395%" y="575.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,384 samples, 3.22%)</title><rect x="54.9919%" y="549" width="3.2152%" height="15" fill="rgb(245,141,16)" fg:x="57879" fg:w="3384"/><text x="55.2419%" y="559.50">tre..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::should_pull_data (59 samples, 0.06%)</title><rect x="58.1511%" y="533" width="0.0561%" height="15" fill="rgb(229,55,45)" fg:x="61204" fg:w="59"/><text x="58.4011%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (12 samples, 0.01%)</title><rect x="58.1957%" y="517" width="0.0114%" height="15" fill="rgb(208,92,15)" fg:x="61251" fg:w="12"/><text x="58.4457%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="58.2176%" y="1157" width="0.0181%" height="15" fill="rgb(234,185,47)" fg:x="61274" fg:w="19"/><text x="58.4676%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="58.2375%" y="1157" width="0.0143%" height="15" fill="rgb(253,104,50)" fg:x="61295" fg:w="15"/><text x="58.4875%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (78 samples, 0.07%)</title><rect x="58.2518%" y="1157" width="0.0741%" height="15" fill="rgb(205,70,7)" fg:x="61310" fg:w="78"/><text x="58.5018%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (19 samples, 0.02%)</title><rect x="58.3259%" y="1157" width="0.0181%" height="15" fill="rgb(240,178,43)" fg:x="61388" fg:w="19"/><text x="58.5759%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (19 samples, 0.02%)</title><rect x="58.3259%" y="1141" width="0.0181%" height="15" fill="rgb(214,112,2)" fg:x="61388" fg:w="19"/><text x="58.5759%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (19 samples, 0.02%)</title><rect x="58.3259%" y="1125" width="0.0181%" height="15" fill="rgb(206,46,17)" fg:x="61388" fg:w="19"/><text x="58.5759%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="58.3259%" y="1109" width="0.0181%" height="15" fill="rgb(225,220,16)" fg:x="61388" fg:w="19"/><text x="58.5759%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="58.3259%" y="1093" width="0.0181%" height="15" fill="rgb(238,65,40)" fg:x="61388" fg:w="19"/><text x="58.5759%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="58.3259%" y="1077" width="0.0181%" height="15" fill="rgb(230,151,21)" fg:x="61388" fg:w="19"/><text x="58.5759%" y="1087.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="58.3259%" y="1061" width="0.0181%" height="15" fill="rgb(218,58,49)" fg:x="61388" fg:w="19"/><text x="58.5759%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="58.3259%" y="1045" width="0.0181%" height="15" fill="rgb(219,179,14)" fg:x="61388" fg:w="19"/><text x="58.5759%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (74 samples, 0.07%)</title><rect x="58.3439%" y="1157" width="0.0703%" height="15" fill="rgb(223,72,1)" fg:x="61407" fg:w="74"/><text x="58.5939%" y="1167.50"></text></g><g><title>event_listener::Event::notify (23 samples, 0.02%)</title><rect x="58.4143%" y="1157" width="0.0219%" height="15" fill="rgb(238,126,10)" fg:x="61481" fg:w="23"/><text x="58.6643%" y="1167.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (19 samples, 0.02%)</title><rect x="58.4485%" y="1157" width="0.0181%" height="15" fill="rgb(224,206,38)" fg:x="61517" fg:w="19"/><text x="58.6985%" y="1167.50"></text></g><g><title>rust_alloc (60 samples, 0.06%)</title><rect x="58.4751%" y="1157" width="0.0570%" height="15" fill="rgb(212,201,54)" fg:x="61545" fg:w="60"/><text x="58.7251%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (14 samples, 0.01%)</title><rect x="58.5378%" y="1157" width="0.0133%" height="15" fill="rgb(218,154,48)" fg:x="61611" fg:w="14"/><text x="58.7878%" y="1167.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (13 samples, 0.01%)</title><rect x="58.5511%" y="1157" width="0.0124%" height="15" fill="rgb(232,93,24)" fg:x="61625" fg:w="13"/><text x="58.8011%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (73 samples, 0.07%)</title><rect x="60.0941%" y="437" width="0.0694%" height="15" fill="rgb(245,30,21)" fg:x="63249" fg:w="73"/><text x="60.3441%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="60.3297%" y="421" width="0.0105%" height="15" fill="rgb(242,148,29)" fg:x="63497" fg:w="11"/><text x="60.5797%" y="431.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.04%)</title><rect x="60.3401%" y="421" width="0.0409%" height="15" fill="rgb(244,153,54)" fg:x="63508" fg:w="43"/><text x="60.5901%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (708 samples, 0.67%)</title><rect x="60.3810%" y="421" width="0.6727%" height="15" fill="rgb(252,87,22)" fg:x="63551" fg:w="708"/><text x="60.6310%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="61.0584%" y="357" width="0.0380%" height="15" fill="rgb(210,51,29)" fg:x="64264" fg:w="40"/><text x="61.3084%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (44 samples, 0.04%)</title><rect x="61.0584%" y="421" width="0.0418%" height="15" fill="rgb(242,136,47)" fg:x="64264" fg:w="44"/><text x="61.3084%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (44 samples, 0.04%)</title><rect x="61.0584%" y="405" width="0.0418%" height="15" fill="rgb(238,68,4)" fg:x="64264" fg:w="44"/><text x="61.3084%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (44 samples, 0.04%)</title><rect x="61.0584%" y="389" width="0.0418%" height="15" fill="rgb(242,161,30)" fg:x="64264" fg:w="44"/><text x="61.3084%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (44 samples, 0.04%)</title><rect x="61.0584%" y="373" width="0.0418%" height="15" fill="rgb(218,58,44)" fg:x="64264" fg:w="44"/><text x="61.3084%" y="383.50"></text></g><g><title>rust_dealloc (16 samples, 0.02%)</title><rect x="61.1534%" y="229" width="0.0152%" height="15" fill="rgb(252,125,32)" fg:x="64364" fg:w="16"/><text x="61.4034%" y="239.50"></text></g><g><title>rust_dealloc (72 samples, 0.07%)</title><rect x="61.1781%" y="165" width="0.0684%" height="15" fill="rgb(219,178,0)" fg:x="64390" fg:w="72"/><text x="61.4281%" y="175.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (57 samples, 0.05%)</title><rect x="61.3026%" y="117" width="0.0542%" height="15" fill="rgb(213,152,7)" fg:x="64521" fg:w="57"/><text x="61.5526%" y="127.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (52 samples, 0.05%)</title><rect x="61.3074%" y="101" width="0.0494%" height="15" fill="rgb(249,109,34)" fg:x="64526" fg:w="52"/><text x="61.5574%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (119 samples, 0.11%)</title><rect x="61.2523%" y="165" width="0.1131%" height="15" fill="rgb(232,96,21)" fg:x="64468" fg:w="119"/><text x="61.5023%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (119 samples, 0.11%)</title><rect x="61.2523%" y="149" width="0.1131%" height="15" fill="rgb(228,27,39)" fg:x="64468" fg:w="119"/><text x="61.5023%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (104 samples, 0.10%)</title><rect x="61.2665%" y="133" width="0.0988%" height="15" fill="rgb(211,182,52)" fg:x="64483" fg:w="104"/><text x="61.5165%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (258 samples, 0.25%)</title><rect x="61.1781%" y="229" width="0.2451%" height="15" fill="rgb(234,178,38)" fg:x="64390" fg:w="258"/><text x="61.4281%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (258 samples, 0.25%)</title><rect x="61.1781%" y="213" width="0.2451%" height="15" fill="rgb(221,111,3)" fg:x="64390" fg:w="258"/><text x="61.4281%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (258 samples, 0.25%)</title><rect x="61.1781%" y="197" width="0.2451%" height="15" fill="rgb(228,175,21)" fg:x="64390" fg:w="258"/><text x="61.4281%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (258 samples, 0.25%)</title><rect x="61.1781%" y="181" width="0.2451%" height="15" fill="rgb(228,174,43)" fg:x="64390" fg:w="258"/><text x="61.4281%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (61 samples, 0.06%)</title><rect x="61.3653%" y="165" width="0.0580%" height="15" fill="rgb(211,191,0)" fg:x="64587" fg:w="61"/><text x="61.6153%" y="175.50"></text></g><g><title>rust_dealloc (301 samples, 0.29%)</title><rect x="61.1382%" y="261" width="0.2860%" height="15" fill="rgb(253,117,3)" fg:x="64348" fg:w="301"/><text x="61.3882%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (285 samples, 0.27%)</title><rect x="61.1534%" y="245" width="0.2708%" height="15" fill="rgb(241,127,19)" fg:x="64364" fg:w="285"/><text x="61.4034%" y="255.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (26 samples, 0.02%)</title><rect x="61.4394%" y="245" width="0.0247%" height="15" fill="rgb(218,103,12)" fg:x="64665" fg:w="26"/><text x="61.6894%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (388 samples, 0.37%)</title><rect x="61.1002%" y="405" width="0.3686%" height="15" fill="rgb(236,214,43)" fg:x="64308" fg:w="388"/><text x="61.3502%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (382 samples, 0.36%)</title><rect x="61.1059%" y="389" width="0.3629%" height="15" fill="rgb(244,144,19)" fg:x="64314" fg:w="382"/><text x="61.3559%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (369 samples, 0.35%)</title><rect x="61.1183%" y="373" width="0.3506%" height="15" fill="rgb(246,188,10)" fg:x="64327" fg:w="369"/><text x="61.3683%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (369 samples, 0.35%)</title><rect x="61.1183%" y="357" width="0.3506%" height="15" fill="rgb(212,193,33)" fg:x="64327" fg:w="369"/><text x="61.3683%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (369 samples, 0.35%)</title><rect x="61.1183%" y="341" width="0.3506%" height="15" fill="rgb(241,51,29)" fg:x="64327" fg:w="369"/><text x="61.3683%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (356 samples, 0.34%)</title><rect x="61.1306%" y="325" width="0.3382%" height="15" fill="rgb(211,58,19)" fg:x="64340" fg:w="356"/><text x="61.3806%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (356 samples, 0.34%)</title><rect x="61.1306%" y="309" width="0.3382%" height="15" fill="rgb(229,111,26)" fg:x="64340" fg:w="356"/><text x="61.3806%" y="319.50"></text></g><g><title>__rg_dealloc (356 samples, 0.34%)</title><rect x="61.1306%" y="293" width="0.3382%" height="15" fill="rgb(213,115,40)" fg:x="64340" fg:w="356"/><text x="61.3806%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (348 samples, 0.33%)</title><rect x="61.1382%" y="277" width="0.3306%" height="15" fill="rgb(209,56,44)" fg:x="64348" fg:w="348"/><text x="61.3882%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (47 samples, 0.04%)</title><rect x="61.4242%" y="261" width="0.0447%" height="15" fill="rgb(230,108,32)" fg:x="64649" fg:w="47"/><text x="61.6742%" y="271.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="61.4784%" y="293" width="0.0124%" height="15" fill="rgb(216,165,31)" fg:x="64706" fg:w="13"/><text x="61.7284%" y="303.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="61.5287%" y="165" width="0.0200%" height="15" fill="rgb(218,122,21)" fg:x="64759" fg:w="21"/><text x="61.7787%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="61.5287%" y="149" width="0.0200%" height="15" fill="rgb(223,224,47)" fg:x="64759" fg:w="21"/><text x="61.7787%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (61 samples, 0.06%)</title><rect x="61.5078%" y="213" width="0.0580%" height="15" fill="rgb(238,102,44)" fg:x="64737" fg:w="61"/><text x="61.7578%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (61 samples, 0.06%)</title><rect x="61.5078%" y="197" width="0.0580%" height="15" fill="rgb(236,46,40)" fg:x="64737" fg:w="61"/><text x="61.7578%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (61 samples, 0.06%)</title><rect x="61.5078%" y="181" width="0.0580%" height="15" fill="rgb(247,202,50)" fg:x="64737" fg:w="61"/><text x="61.7578%" y="191.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (18 samples, 0.02%)</title><rect x="61.5487%" y="165" width="0.0171%" height="15" fill="rgb(209,99,20)" fg:x="64780" fg:w="18"/><text x="61.7987%" y="175.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (18 samples, 0.02%)</title><rect x="61.5487%" y="149" width="0.0171%" height="15" fill="rgb(252,27,34)" fg:x="64780" fg:w="18"/><text x="61.7987%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (91 samples, 0.09%)</title><rect x="61.4955%" y="245" width="0.0865%" height="15" fill="rgb(215,206,23)" fg:x="64724" fg:w="91"/><text x="61.7455%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (91 samples, 0.09%)</title><rect x="61.4955%" y="229" width="0.0865%" height="15" fill="rgb(212,135,36)" fg:x="64724" fg:w="91"/><text x="61.7455%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (17 samples, 0.02%)</title><rect x="61.5658%" y="213" width="0.0162%" height="15" fill="rgb(240,189,1)" fg:x="64798" fg:w="17"/><text x="61.8158%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (107 samples, 0.10%)</title><rect x="61.4907%" y="293" width="0.1017%" height="15" fill="rgb(242,56,20)" fg:x="64719" fg:w="107"/><text x="61.7407%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (102 samples, 0.10%)</title><rect x="61.4955%" y="277" width="0.0969%" height="15" fill="rgb(247,132,33)" fg:x="64724" fg:w="102"/><text x="61.7455%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (102 samples, 0.10%)</title><rect x="61.4955%" y="261" width="0.0969%" height="15" fill="rgb(208,149,11)" fg:x="64724" fg:w="102"/><text x="61.7455%" y="271.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="61.5819%" y="245" width="0.0105%" height="15" fill="rgb(211,33,11)" fg:x="64815" fg:w="11"/><text x="61.8319%" y="255.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="61.5819%" y="229" width="0.0105%" height="15" fill="rgb(221,29,38)" fg:x="64815" fg:w="11"/><text x="61.8319%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="61.5819%" y="213" width="0.0105%" height="15" fill="rgb(206,182,49)" fg:x="64815" fg:w="11"/><text x="61.8319%" y="223.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="61.5819%" y="197" width="0.0105%" height="15" fill="rgb(216,140,1)" fg:x="64815" fg:w="11"/><text x="61.8319%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (522 samples, 0.50%)</title><rect x="61.1002%" y="421" width="0.4960%" height="15" fill="rgb(232,57,40)" fg:x="64308" fg:w="522"/><text x="61.3502%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (134 samples, 0.13%)</title><rect x="61.4689%" y="405" width="0.1273%" height="15" fill="rgb(224,186,18)" fg:x="64696" fg:w="134"/><text x="61.7189%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (134 samples, 0.13%)</title><rect x="61.4689%" y="389" width="0.1273%" height="15" fill="rgb(215,121,11)" fg:x="64696" fg:w="134"/><text x="61.7189%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (134 samples, 0.13%)</title><rect x="61.4689%" y="373" width="0.1273%" height="15" fill="rgb(245,147,10)" fg:x="64696" fg:w="134"/><text x="61.7189%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (124 samples, 0.12%)</title><rect x="61.4784%" y="357" width="0.1178%" height="15" fill="rgb(238,153,13)" fg:x="64706" fg:w="124"/><text x="61.7284%" y="367.50"></text></g><g><title>__rg_dealloc (124 samples, 0.12%)</title><rect x="61.4784%" y="341" width="0.1178%" height="15" fill="rgb(233,108,0)" fg:x="64706" fg:w="124"/><text x="61.7284%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (124 samples, 0.12%)</title><rect x="61.4784%" y="325" width="0.1178%" height="15" fill="rgb(212,157,17)" fg:x="64706" fg:w="124"/><text x="61.7284%" y="335.50"></text></g><g><title>rust_dealloc (124 samples, 0.12%)</title><rect x="61.4784%" y="309" width="0.1178%" height="15" fill="rgb(225,213,38)" fg:x="64706" fg:w="124"/><text x="61.7284%" y="319.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (14 samples, 0.01%)</title><rect x="61.6599%" y="373" width="0.0133%" height="15" fill="rgb(248,16,11)" fg:x="64897" fg:w="14"/><text x="61.9099%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (14 samples, 0.01%)</title><rect x="61.6599%" y="357" width="0.0133%" height="15" fill="rgb(241,33,4)" fg:x="64897" fg:w="14"/><text x="61.9099%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (18 samples, 0.02%)</title><rect x="61.7055%" y="341" width="0.0171%" height="15" fill="rgb(222,26,43)" fg:x="64945" fg:w="18"/><text x="61.9555%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (62 samples, 0.06%)</title><rect x="61.6789%" y="373" width="0.0589%" height="15" fill="rgb(243,29,36)" fg:x="64917" fg:w="62"/><text x="61.9289%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (55 samples, 0.05%)</title><rect x="61.6855%" y="357" width="0.0523%" height="15" fill="rgb(241,9,27)" fg:x="64924" fg:w="55"/><text x="61.9355%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::sub_bucket_for (16 samples, 0.02%)</title><rect x="61.7226%" y="341" width="0.0152%" height="15" fill="rgb(205,117,26)" fg:x="64963" fg:w="16"/><text x="61.9726%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (12 samples, 0.01%)</title><rect x="61.7378%" y="373" width="0.0114%" height="15" fill="rgb(209,80,39)" fg:x="64979" fg:w="12"/><text x="61.9878%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (168 samples, 0.16%)</title><rect x="61.5962%" y="421" width="0.1596%" height="15" fill="rgb(239,155,6)" fg:x="64830" fg:w="168"/><text x="61.8462%" y="431.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (158 samples, 0.15%)</title><rect x="61.6057%" y="405" width="0.1501%" height="15" fill="rgb(212,104,12)" fg:x="64840" fg:w="158"/><text x="61.8557%" y="415.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (158 samples, 0.15%)</title><rect x="61.6057%" y="389" width="0.1501%" height="15" fill="rgb(234,204,3)" fg:x="64840" fg:w="158"/><text x="61.8557%" y="399.50"></text></g><g><title>core::time::Duration::as_nanos (16 samples, 0.02%)</title><rect x="61.7900%" y="405" width="0.0152%" height="15" fill="rgb(251,218,7)" fg:x="65034" fg:w="16"/><text x="62.0400%" y="415.50"></text></g><g><title>std::time::SystemTime::duration_since (18 samples, 0.02%)</title><rect x="61.8052%" y="405" width="0.0171%" height="15" fill="rgb(221,81,32)" fg:x="65050" fg:w="18"/><text x="62.0552%" y="415.50"></text></g><g><title>tremor_common::time::nanotime (18 samples, 0.02%)</title><rect x="61.8052%" y="389" width="0.0171%" height="15" fill="rgb(214,152,26)" fg:x="65050" fg:w="18"/><text x="62.0552%" y="399.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.02%)</title><rect x="61.9762%" y="341" width="0.0181%" height="15" fill="rgb(223,22,3)" fg:x="65230" fg:w="19"/><text x="62.2262%" y="351.50"></text></g><g><title>tremor_common::time::nanotime (252 samples, 0.24%)</title><rect x="61.7558%" y="421" width="0.2394%" height="15" fill="rgb(207,174,7)" fg:x="64998" fg:w="252"/><text x="62.0058%" y="431.50"></text></g><g><title>std::time::SystemTime::now (182 samples, 0.17%)</title><rect x="61.8223%" y="405" width="0.1729%" height="15" fill="rgb(224,19,52)" fg:x="65068" fg:w="182"/><text x="62.0723%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (182 samples, 0.17%)</title><rect x="61.8223%" y="389" width="0.1729%" height="15" fill="rgb(228,24,14)" fg:x="65068" fg:w="182"/><text x="62.0723%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::now (182 samples, 0.17%)</title><rect x="61.8223%" y="373" width="0.1729%" height="15" fill="rgb(230,153,43)" fg:x="65068" fg:w="182"/><text x="62.0723%" y="383.50"></text></g><g><title>__clock_gettime_2 (40 samples, 0.04%)</title><rect x="61.9572%" y="357" width="0.0380%" height="15" fill="rgb(231,106,12)" fg:x="65210" fg:w="40"/><text x="62.2072%" y="367.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (1,933 samples, 1.84%)</title><rect x="60.1634%" y="437" width="1.8366%" height="15" fill="rgb(215,92,2)" fg:x="63322" fg:w="1933"/><text x="60.4134%" y="447.50">&lt;..</text></g><g><title>start_thread (3,620 samples, 3.44%)</title><rect x="58.5634%" y="1157" width="3.4394%" height="15" fill="rgb(249,143,25)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="1167.50">sta..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,620 samples, 3.44%)</title><rect x="58.5634%" y="1141" width="3.4394%" height="15" fill="rgb(252,7,35)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="1151.50">std..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,620 samples, 3.44%)</title><rect x="58.5634%" y="1125" width="3.4394%" height="15" fill="rgb(216,69,40)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="1135.50">&lt;al..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,620 samples, 3.44%)</title><rect x="58.5634%" y="1109" width="3.4394%" height="15" fill="rgb(240,36,33)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="1119.50">&lt;al..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,620 samples, 3.44%)</title><rect x="58.5634%" y="1093" width="3.4394%" height="15" fill="rgb(231,128,14)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="1103.50">cor..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3,620 samples, 3.44%)</title><rect x="58.5634%" y="1077" width="3.4394%" height="15" fill="rgb(245,143,14)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="1087.50">std..</text></g><g><title>std::panic::catch_unwind (3,620 samples, 3.44%)</title><rect x="58.5634%" y="1061" width="3.4394%" height="15" fill="rgb(222,130,28)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="1071.50">std..</text></g><g><title>std::panicking::try (3,620 samples, 3.44%)</title><rect x="58.5634%" y="1045" width="3.4394%" height="15" fill="rgb(212,10,48)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="1055.50">std..</text></g><g><title>std::panicking::try::do_call (3,620 samples, 3.44%)</title><rect x="58.5634%" y="1029" width="3.4394%" height="15" fill="rgb(254,118,45)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="1039.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,620 samples, 3.44%)</title><rect x="58.5634%" y="1013" width="3.4394%" height="15" fill="rgb(228,6,45)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="1023.50">&lt;co..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3,620 samples, 3.44%)</title><rect x="58.5634%" y="997" width="3.4394%" height="15" fill="rgb(241,18,35)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="1007.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,620 samples, 3.44%)</title><rect x="58.5634%" y="981" width="3.4394%" height="15" fill="rgb(227,214,53)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="991.50">std..</text></g><g><title>core::ops::function::FnOnce::call_once (3,620 samples, 3.44%)</title><rect x="58.5634%" y="965" width="3.4394%" height="15" fill="rgb(224,107,51)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="975.50">cor..</text></g><g><title>async_global_executor::threading::thread_main_loop (3,620 samples, 3.44%)</title><rect x="58.5634%" y="949" width="3.4394%" height="15" fill="rgb(248,60,28)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="959.50">asy..</text></g><g><title>std::panic::catch_unwind (3,620 samples, 3.44%)</title><rect x="58.5634%" y="933" width="3.4394%" height="15" fill="rgb(249,101,23)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="943.50">std..</text></g><g><title>std::panicking::try (3,620 samples, 3.44%)</title><rect x="58.5634%" y="917" width="3.4394%" height="15" fill="rgb(228,51,19)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="927.50">std..</text></g><g><title>std::panicking::try::do_call (3,620 samples, 3.44%)</title><rect x="58.5634%" y="901" width="3.4394%" height="15" fill="rgb(213,20,6)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="911.50">std..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (3,620 samples, 3.44%)</title><rect x="58.5634%" y="885" width="3.4394%" height="15" fill="rgb(212,124,10)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="895.50">asy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,620 samples, 3.44%)</title><rect x="58.5634%" y="869" width="3.4394%" height="15" fill="rgb(248,3,40)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="879.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,620 samples, 3.44%)</title><rect x="58.5634%" y="853" width="3.4394%" height="15" fill="rgb(223,178,23)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="863.50">std..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (3,620 samples, 3.44%)</title><rect x="58.5634%" y="837" width="3.4394%" height="15" fill="rgb(240,132,45)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="847.50">asy..</text></g><g><title>async_global_executor::reactor::block_on (3,620 samples, 3.44%)</title><rect x="58.5634%" y="821" width="3.4394%" height="15" fill="rgb(245,164,36)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="831.50">asy..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (3,620 samples, 3.44%)</title><rect x="58.5634%" y="805" width="3.4394%" height="15" fill="rgb(231,188,53)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="815.50">asy..</text></g><g><title>async_io::driver::block_on (3,620 samples, 3.44%)</title><rect x="58.5634%" y="789" width="3.4394%" height="15" fill="rgb(237,198,39)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="799.50">asy..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,620 samples, 3.44%)</title><rect x="58.5634%" y="773" width="3.4394%" height="15" fill="rgb(223,120,35)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="783.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,620 samples, 3.44%)</title><rect x="58.5634%" y="757" width="3.4394%" height="15" fill="rgb(253,107,49)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="767.50">&lt;co..</text></g><g><title>async_executor::Executor::run::{{closure}} (3,620 samples, 3.44%)</title><rect x="58.5634%" y="741" width="3.4394%" height="15" fill="rgb(216,44,31)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="751.50">asy..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,620 samples, 3.44%)</title><rect x="58.5634%" y="725" width="3.4394%" height="15" fill="rgb(253,87,21)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="735.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,620 samples, 3.44%)</title><rect x="58.5634%" y="709" width="3.4394%" height="15" fill="rgb(226,18,2)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="719.50">&lt;co..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3,620 samples, 3.44%)</title><rect x="58.5634%" y="693" width="3.4394%" height="15" fill="rgb(216,8,46)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="703.50">asy..</text></g><g><title>async_task::runnable::Runnable::run (3,620 samples, 3.44%)</title><rect x="58.5634%" y="677" width="3.4394%" height="15" fill="rgb(226,140,39)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="687.50">asy..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,620 samples, 3.44%)</title><rect x="58.5634%" y="661" width="3.4394%" height="15" fill="rgb(221,194,54)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="671.50">asy..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,620 samples, 3.44%)</title><rect x="58.5634%" y="645" width="3.4394%" height="15" fill="rgb(213,92,11)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="655.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,620 samples, 3.44%)</title><rect x="58.5634%" y="629" width="3.4394%" height="15" fill="rgb(229,162,46)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="639.50">&lt;co..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,620 samples, 3.44%)</title><rect x="58.5634%" y="613" width="3.4394%" height="15" fill="rgb(214,111,36)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="623.50">asy..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (3,620 samples, 3.44%)</title><rect x="58.5634%" y="597" width="3.4394%" height="15" fill="rgb(207,6,21)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="607.50">&lt;as..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,620 samples, 3.44%)</title><rect x="58.5634%" y="581" width="3.4394%" height="15" fill="rgb(213,127,38)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="591.50">asy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,620 samples, 3.44%)</title><rect x="58.5634%" y="565" width="3.4394%" height="15" fill="rgb(238,118,32)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="575.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,620 samples, 3.44%)</title><rect x="58.5634%" y="549" width="3.4394%" height="15" fill="rgb(240,139,39)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="559.50">std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,620 samples, 3.44%)</title><rect x="58.5634%" y="533" width="3.4394%" height="15" fill="rgb(235,10,37)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="543.50">asy..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,620 samples, 3.44%)</title><rect x="58.5634%" y="517" width="3.4394%" height="15" fill="rgb(249,171,38)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="527.50">&lt;as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,620 samples, 3.44%)</title><rect x="58.5634%" y="501" width="3.4394%" height="15" fill="rgb(242,144,32)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="511.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,620 samples, 3.44%)</title><rect x="58.5634%" y="485" width="3.4394%" height="15" fill="rgb(217,117,21)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="495.50">tre..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,620 samples, 3.44%)</title><rect x="58.5634%" y="469" width="3.4394%" height="15" fill="rgb(249,87,1)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="479.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,620 samples, 3.44%)</title><rect x="58.5634%" y="453" width="3.4394%" height="15" fill="rgb(248,196,48)" fg:x="61638" fg:w="3620"/><text x="58.8134%" y="463.50">&lt;co..</text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="62.0352%" y="389" width="0.0162%" height="15" fill="rgb(251,206,33)" fg:x="65292" fg:w="17"/><text x="62.2852%" y="399.50"></text></g><g><title>rust_dealloc (16 samples, 0.02%)</title><rect x="62.0542%" y="309" width="0.0152%" height="15" fill="rgb(232,141,28)" fg:x="65312" fg:w="16"/><text x="62.3042%" y="319.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="62.0998%" y="277" width="0.0171%" height="15" fill="rgb(209,167,14)" fg:x="65360" fg:w="18"/><text x="62.3498%" y="287.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="62.0998%" y="261" width="0.0171%" height="15" fill="rgb(225,11,50)" fg:x="65360" fg:w="18"/><text x="62.3498%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (65 samples, 0.06%)</title><rect x="62.0694%" y="309" width="0.0618%" height="15" fill="rgb(209,50,20)" fg:x="65328" fg:w="65"/><text x="62.3194%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (52 samples, 0.05%)</title><rect x="62.0817%" y="293" width="0.0494%" height="15" fill="rgb(212,17,46)" fg:x="65341" fg:w="52"/><text x="62.3317%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (13 samples, 0.01%)</title><rect x="62.1188%" y="277" width="0.0124%" height="15" fill="rgb(216,101,39)" fg:x="65380" fg:w="13"/><text x="62.3688%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (86 samples, 0.08%)</title><rect x="62.0542%" y="341" width="0.0817%" height="15" fill="rgb(212,228,48)" fg:x="65312" fg:w="86"/><text x="62.3042%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (86 samples, 0.08%)</title><rect x="62.0542%" y="325" width="0.0817%" height="15" fill="rgb(250,6,50)" fg:x="65312" fg:w="86"/><text x="62.3042%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (95 samples, 0.09%)</title><rect x="62.0542%" y="373" width="0.0903%" height="15" fill="rgb(250,160,48)" fg:x="65312" fg:w="95"/><text x="62.3042%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (95 samples, 0.09%)</title><rect x="62.0542%" y="357" width="0.0903%" height="15" fill="rgb(244,216,33)" fg:x="65312" fg:w="95"/><text x="62.3042%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (106 samples, 0.10%)</title><rect x="62.0513%" y="389" width="0.1007%" height="15" fill="rgb(207,157,5)" fg:x="65309" fg:w="106"/><text x="62.3013%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (137 samples, 0.13%)</title><rect x="62.0323%" y="421" width="0.1302%" height="15" fill="rgb(228,199,8)" fg:x="65289" fg:w="137"/><text x="62.2823%" y="431.50"></text></g><g><title>rust_dealloc (134 samples, 0.13%)</title><rect x="62.0352%" y="405" width="0.1273%" height="15" fill="rgb(227,80,20)" fg:x="65292" fg:w="134"/><text x="62.2852%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="62.1520%" y="389" width="0.0105%" height="15" fill="rgb(222,9,33)" fg:x="65415" fg:w="11"/><text x="62.4020%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (30 samples, 0.03%)</title><rect x="62.1644%" y="373" width="0.0285%" height="15" fill="rgb(239,44,28)" fg:x="65428" fg:w="30"/><text x="62.4144%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (11 samples, 0.01%)</title><rect x="62.1824%" y="357" width="0.0105%" height="15" fill="rgb(249,187,43)" fg:x="65447" fg:w="11"/><text x="62.4324%" y="367.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="62.1929%" y="373" width="0.0124%" height="15" fill="rgb(216,141,28)" fg:x="65458" fg:w="13"/><text x="62.4429%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="62.1929%" y="357" width="0.0124%" height="15" fill="rgb(230,154,53)" fg:x="65458" fg:w="13"/><text x="62.4429%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="62.1929%" y="341" width="0.0124%" height="15" fill="rgb(227,82,4)" fg:x="65458" fg:w="13"/><text x="62.4429%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (14 samples, 0.01%)</title><rect x="62.2052%" y="373" width="0.0133%" height="15" fill="rgb(220,107,16)" fg:x="65471" fg:w="14"/><text x="62.4552%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (58 samples, 0.06%)</title><rect x="62.1644%" y="421" width="0.0551%" height="15" fill="rgb(207,187,2)" fg:x="65428" fg:w="58"/><text x="62.4144%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (58 samples, 0.06%)</title><rect x="62.1644%" y="405" width="0.0551%" height="15" fill="rgb(210,162,52)" fg:x="65428" fg:w="58"/><text x="62.4144%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.06%)</title><rect x="62.1644%" y="389" width="0.0551%" height="15" fill="rgb(217,216,49)" fg:x="65428" fg:w="58"/><text x="62.4144%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="62.6936%" y="261" width="0.0190%" height="15" fill="rgb(218,146,49)" fg:x="65985" fg:w="20"/><text x="62.9436%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="62.6936%" y="245" width="0.0190%" height="15" fill="rgb(216,55,40)" fg:x="65985" fg:w="20"/><text x="62.9436%" y="255.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="62.6936%" y="229" width="0.0190%" height="15" fill="rgb(208,196,21)" fg:x="65985" fg:w="20"/><text x="62.9436%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="62.6936%" y="213" width="0.0190%" height="15" fill="rgb(242,117,42)" fg:x="65985" fg:w="20"/><text x="62.9436%" y="223.50"></text></g><g><title>core::mem::drop (786 samples, 0.75%)</title><rect x="62.6917%" y="309" width="0.7468%" height="15" fill="rgb(210,11,23)" fg:x="65983" fg:w="786"/><text x="62.9417%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (786 samples, 0.75%)</title><rect x="62.6917%" y="293" width="0.7468%" height="15" fill="rgb(217,110,2)" fg:x="65983" fg:w="786"/><text x="62.9417%" y="303.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (786 samples, 0.75%)</title><rect x="62.6917%" y="277" width="0.7468%" height="15" fill="rgb(229,77,54)" fg:x="65983" fg:w="786"/><text x="62.9417%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (758 samples, 0.72%)</title><rect x="62.7183%" y="261" width="0.7202%" height="15" fill="rgb(218,53,16)" fg:x="66011" fg:w="758"/><text x="62.9683%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_sub (758 samples, 0.72%)</title><rect x="62.7183%" y="245" width="0.7202%" height="15" fill="rgb(215,38,13)" fg:x="66011" fg:w="758"/><text x="62.9683%" y="255.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="63.4755%" y="85" width="0.0143%" height="15" fill="rgb(235,42,18)" fg:x="66808" fg:w="15"/><text x="63.7255%" y="95.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (26 samples, 0.02%)</title><rect x="63.5591%" y="53" width="0.0247%" height="15" fill="rgb(219,66,54)" fg:x="66896" fg:w="26"/><text x="63.8091%" y="63.50"></text></g><g><title> (26 samples, 0.02%)</title><rect x="63.5591%" y="37" width="0.0247%" height="15" fill="rgb(222,205,4)" fg:x="66896" fg:w="26"/><text x="63.8091%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (108 samples, 0.10%)</title><rect x="63.4917%" y="85" width="0.1026%" height="15" fill="rgb(227,213,46)" fg:x="66825" fg:w="108"/><text x="63.7417%" y="95.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (97 samples, 0.09%)</title><rect x="63.5021%" y="69" width="0.0922%" height="15" fill="rgb(250,145,42)" fg:x="66836" fg:w="97"/><text x="63.7521%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (152 samples, 0.14%)</title><rect x="63.4755%" y="117" width="0.1444%" height="15" fill="rgb(219,15,2)" fg:x="66808" fg:w="152"/><text x="63.7255%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (152 samples, 0.14%)</title><rect x="63.4755%" y="101" width="0.1444%" height="15" fill="rgb(231,181,52)" fg:x="66808" fg:w="152"/><text x="63.7255%" y="111.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (27 samples, 0.03%)</title><rect x="63.5943%" y="85" width="0.0257%" height="15" fill="rgb(235,1,42)" fg:x="66933" fg:w="27"/><text x="63.8443%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (160 samples, 0.15%)</title><rect x="63.4755%" y="149" width="0.1520%" height="15" fill="rgb(249,88,27)" fg:x="66808" fg:w="160"/><text x="63.7255%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (160 samples, 0.15%)</title><rect x="63.4755%" y="133" width="0.1520%" height="15" fill="rgb(235,145,16)" fg:x="66808" fg:w="160"/><text x="63.7255%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (170 samples, 0.16%)</title><rect x="63.4727%" y="165" width="0.1615%" height="15" fill="rgb(237,114,19)" fg:x="66805" fg:w="170"/><text x="63.7227%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (193 samples, 0.18%)</title><rect x="63.4622%" y="245" width="0.1834%" height="15" fill="rgb(238,51,50)" fg:x="66794" fg:w="193"/><text x="63.7122%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (193 samples, 0.18%)</title><rect x="63.4622%" y="229" width="0.1834%" height="15" fill="rgb(205,194,25)" fg:x="66794" fg:w="193"/><text x="63.7122%" y="239.50"></text></g><g><title>__rg_dealloc (193 samples, 0.18%)</title><rect x="63.4622%" y="213" width="0.1834%" height="15" fill="rgb(215,203,17)" fg:x="66794" fg:w="193"/><text x="63.7122%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (193 samples, 0.18%)</title><rect x="63.4622%" y="197" width="0.1834%" height="15" fill="rgb(233,112,49)" fg:x="66794" fg:w="193"/><text x="63.7122%" y="207.50"></text></g><g><title>rust_dealloc (193 samples, 0.18%)</title><rect x="63.4622%" y="181" width="0.1834%" height="15" fill="rgb(241,130,26)" fg:x="66794" fg:w="193"/><text x="63.7122%" y="191.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="63.6342%" y="165" width="0.0114%" height="15" fill="rgb(252,223,19)" fg:x="66975" fg:w="12"/><text x="63.8842%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1,007 samples, 0.96%)</title><rect x="62.6898%" y="325" width="0.9568%" height="15" fill="rgb(211,95,25)" fg:x="65981" fg:w="1007"/><text x="62.9398%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (219 samples, 0.21%)</title><rect x="63.4385%" y="309" width="0.2081%" height="15" fill="rgb(251,182,27)" fg:x="66769" fg:w="219"/><text x="63.6885%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (219 samples, 0.21%)</title><rect x="63.4385%" y="293" width="0.2081%" height="15" fill="rgb(238,24,4)" fg:x="66769" fg:w="219"/><text x="63.6885%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (219 samples, 0.21%)</title><rect x="63.4385%" y="277" width="0.2081%" height="15" fill="rgb(224,220,25)" fg:x="66769" fg:w="219"/><text x="63.6885%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (219 samples, 0.21%)</title><rect x="63.4385%" y="261" width="0.2081%" height="15" fill="rgb(239,133,26)" fg:x="66769" fg:w="219"/><text x="63.6885%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,226 samples, 1.16%)</title><rect x="63.6475%" y="325" width="1.1648%" height="15" fill="rgb(211,94,48)" fg:x="66989" fg:w="1226"/><text x="63.8975%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,226 samples, 1.16%)</title><rect x="63.6475%" y="309" width="1.1648%" height="15" fill="rgb(239,87,6)" fg:x="66989" fg:w="1226"/><text x="63.8975%" y="319.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="64.8333%" y="293" width="0.0124%" height="15" fill="rgb(227,62,0)" fg:x="68237" fg:w="13"/><text x="65.0833%" y="303.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (34 samples, 0.03%)</title><rect x="64.9064%" y="197" width="0.0323%" height="15" fill="rgb(211,226,4)" fg:x="68314" fg:w="34"/><text x="65.1564%" y="207.50"></text></g><g><title> (34 samples, 0.03%)</title><rect x="64.9064%" y="181" width="0.0323%" height="15" fill="rgb(253,38,52)" fg:x="68314" fg:w="34"/><text x="65.1564%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (81 samples, 0.08%)</title><rect x="64.8770%" y="229" width="0.0770%" height="15" fill="rgb(229,126,40)" fg:x="68283" fg:w="81"/><text x="65.1270%" y="239.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (68 samples, 0.06%)</title><rect x="64.8893%" y="213" width="0.0646%" height="15" fill="rgb(229,165,44)" fg:x="68296" fg:w="68"/><text x="65.1393%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (16 samples, 0.02%)</title><rect x="64.9387%" y="197" width="0.0152%" height="15" fill="rgb(247,95,47)" fg:x="68348" fg:w="16"/><text x="65.1887%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,879 samples, 2.74%)</title><rect x="62.2195%" y="389" width="2.7354%" height="15" fill="rgb(216,140,30)" fg:x="65486" fg:w="2879"/><text x="62.4695%" y="399.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (2,870 samples, 2.73%)</title><rect x="62.2280%" y="373" width="2.7268%" height="15" fill="rgb(246,214,8)" fg:x="65495" fg:w="2870"/><text x="62.4780%" y="383.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (2,859 samples, 2.72%)</title><rect x="62.2385%" y="357" width="2.7164%" height="15" fill="rgb(227,224,15)" fg:x="65506" fg:w="2859"/><text x="62.4885%" y="367.50">co..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,859 samples, 2.72%)</title><rect x="62.2385%" y="341" width="2.7164%" height="15" fill="rgb(233,175,4)" fg:x="65506" fg:w="2859"/><text x="62.4885%" y="351.50">&lt;a..</text></g><g><title>rust_dealloc (150 samples, 0.14%)</title><rect x="64.8124%" y="325" width="0.1425%" height="15" fill="rgb(221,66,45)" fg:x="68215" fg:w="150"/><text x="65.0624%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (128 samples, 0.12%)</title><rect x="64.8333%" y="309" width="0.1216%" height="15" fill="rgb(221,178,18)" fg:x="68237" fg:w="128"/><text x="65.0833%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (105 samples, 0.10%)</title><rect x="64.8551%" y="293" width="0.0998%" height="15" fill="rgb(213,81,29)" fg:x="68260" fg:w="105"/><text x="65.1051%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (105 samples, 0.10%)</title><rect x="64.8551%" y="277" width="0.0998%" height="15" fill="rgb(220,89,49)" fg:x="68260" fg:w="105"/><text x="65.1051%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (105 samples, 0.10%)</title><rect x="64.8551%" y="261" width="0.0998%" height="15" fill="rgb(227,60,33)" fg:x="68260" fg:w="105"/><text x="65.1051%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (105 samples, 0.10%)</title><rect x="64.8551%" y="245" width="0.0998%" height="15" fill="rgb(205,113,12)" fg:x="68260" fg:w="105"/><text x="65.1051%" y="255.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (12 samples, 0.01%)</title><rect x="65.0252%" y="165" width="0.0114%" height="15" fill="rgb(211,32,1)" fg:x="68439" fg:w="12"/><text x="65.2752%" y="175.50"></text></g><g><title> (12 samples, 0.01%)</title><rect x="65.0252%" y="149" width="0.0114%" height="15" fill="rgb(246,2,12)" fg:x="68439" fg:w="12"/><text x="65.2752%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (55 samples, 0.05%)</title><rect x="64.9967%" y="197" width="0.0523%" height="15" fill="rgb(243,37,27)" fg:x="68409" fg:w="55"/><text x="65.2467%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (45 samples, 0.04%)</title><rect x="65.0062%" y="181" width="0.0428%" height="15" fill="rgb(248,211,31)" fg:x="68419" fg:w="45"/><text x="65.2562%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (13 samples, 0.01%)</title><rect x="65.0366%" y="165" width="0.0124%" height="15" fill="rgb(242,146,47)" fg:x="68451" fg:w="13"/><text x="65.2866%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (77 samples, 0.07%)</title><rect x="64.9891%" y="229" width="0.0732%" height="15" fill="rgb(206,70,20)" fg:x="68401" fg:w="77"/><text x="65.2391%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (77 samples, 0.07%)</title><rect x="64.9891%" y="213" width="0.0732%" height="15" fill="rgb(215,10,51)" fg:x="68401" fg:w="77"/><text x="65.2391%" y="223.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="65.0489%" y="197" width="0.0133%" height="15" fill="rgb(243,178,53)" fg:x="68464" fg:w="14"/><text x="65.2989%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (106 samples, 0.10%)</title><rect x="64.9758%" y="277" width="0.1007%" height="15" fill="rgb(233,221,20)" fg:x="68387" fg:w="106"/><text x="65.2258%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (92 samples, 0.09%)</title><rect x="64.9891%" y="261" width="0.0874%" height="15" fill="rgb(218,95,35)" fg:x="68401" fg:w="92"/><text x="65.2391%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (92 samples, 0.09%)</title><rect x="64.9891%" y="245" width="0.0874%" height="15" fill="rgb(229,13,5)" fg:x="68401" fg:w="92"/><text x="65.2391%" y="255.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="65.0622%" y="229" width="0.0143%" height="15" fill="rgb(252,164,30)" fg:x="68478" fg:w="15"/><text x="65.3122%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="65.0622%" y="213" width="0.0143%" height="15" fill="rgb(232,68,36)" fg:x="68478" fg:w="15"/><text x="65.3122%" y="223.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (15 samples, 0.01%)</title><rect x="65.0622%" y="197" width="0.0143%" height="15" fill="rgb(219,59,54)" fg:x="68478" fg:w="15"/><text x="65.3122%" y="207.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="65.0622%" y="181" width="0.0143%" height="15" fill="rgb(250,92,33)" fg:x="68478" fg:w="15"/><text x="65.3122%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (3,014 samples, 2.86%)</title><rect x="62.2195%" y="405" width="2.8637%" height="15" fill="rgb(229,162,54)" fg:x="65486" fg:w="3014"/><text x="62.4695%" y="415.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (135 samples, 0.13%)</title><rect x="64.9549%" y="389" width="0.1283%" height="15" fill="rgb(244,114,52)" fg:x="68365" fg:w="135"/><text x="65.2049%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (135 samples, 0.13%)</title><rect x="64.9549%" y="373" width="0.1283%" height="15" fill="rgb(212,211,43)" fg:x="68365" fg:w="135"/><text x="65.2049%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (135 samples, 0.13%)</title><rect x="64.9549%" y="357" width="0.1283%" height="15" fill="rgb(226,147,8)" fg:x="68365" fg:w="135"/><text x="65.2049%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (123 samples, 0.12%)</title><rect x="64.9663%" y="341" width="0.1169%" height="15" fill="rgb(226,23,13)" fg:x="68377" fg:w="123"/><text x="65.2163%" y="351.50"></text></g><g><title>__rg_dealloc (123 samples, 0.12%)</title><rect x="64.9663%" y="325" width="0.1169%" height="15" fill="rgb(240,63,4)" fg:x="68377" fg:w="123"/><text x="65.2163%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (123 samples, 0.12%)</title><rect x="64.9663%" y="309" width="0.1169%" height="15" fill="rgb(221,1,32)" fg:x="68377" fg:w="123"/><text x="65.2163%" y="319.50"></text></g><g><title>rust_dealloc (123 samples, 0.12%)</title><rect x="64.9663%" y="293" width="0.1169%" height="15" fill="rgb(242,117,10)" fg:x="68377" fg:w="123"/><text x="65.2163%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (17 samples, 0.02%)</title><rect x="65.0831%" y="389" width="0.0162%" height="15" fill="rgb(249,172,44)" fg:x="68500" fg:w="17"/><text x="65.3331%" y="399.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (21 samples, 0.02%)</title><rect x="65.1962%" y="261" width="0.0200%" height="15" fill="rgb(244,46,45)" fg:x="68619" fg:w="21"/><text x="65.4462%" y="271.50"></text></g><g><title> (21 samples, 0.02%)</title><rect x="65.1962%" y="245" width="0.0200%" height="15" fill="rgb(206,43,17)" fg:x="68619" fg:w="21"/><text x="65.4462%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (71 samples, 0.07%)</title><rect x="65.1572%" y="293" width="0.0675%" height="15" fill="rgb(239,218,39)" fg:x="68578" fg:w="71"/><text x="65.4072%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (57 samples, 0.05%)</title><rect x="65.1705%" y="277" width="0.0542%" height="15" fill="rgb(208,169,54)" fg:x="68592" fg:w="57"/><text x="65.4205%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (96 samples, 0.09%)</title><rect x="65.1373%" y="325" width="0.0912%" height="15" fill="rgb(247,25,42)" fg:x="68557" fg:w="96"/><text x="65.3873%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (96 samples, 0.09%)</title><rect x="65.1373%" y="309" width="0.0912%" height="15" fill="rgb(226,23,31)" fg:x="68557" fg:w="96"/><text x="65.3873%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (97 samples, 0.09%)</title><rect x="65.1373%" y="357" width="0.0922%" height="15" fill="rgb(247,16,28)" fg:x="68557" fg:w="97"/><text x="65.3873%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (97 samples, 0.09%)</title><rect x="65.1373%" y="341" width="0.0922%" height="15" fill="rgb(231,147,38)" fg:x="68557" fg:w="97"/><text x="65.3873%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (111 samples, 0.11%)</title><rect x="65.1249%" y="373" width="0.1055%" height="15" fill="rgb(253,81,48)" fg:x="68544" fg:w="111"/><text x="65.3749%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (3,398 samples, 3.23%)</title><rect x="62.0029%" y="437" width="3.2285%" height="15" fill="rgb(249,222,43)" fg:x="65258" fg:w="3398"/><text x="62.2529%" y="447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (3,170 samples, 3.01%)</title><rect x="62.2195%" y="421" width="3.0119%" height="15" fill="rgb(221,3,27)" fg:x="65486" fg:w="3170"/><text x="62.4695%" y="431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (156 samples, 0.15%)</title><rect x="65.0831%" y="405" width="0.1482%" height="15" fill="rgb(228,180,5)" fg:x="68500" fg:w="156"/><text x="65.3331%" y="415.50"></text></g><g><title>rust_dealloc (139 samples, 0.13%)</title><rect x="65.0993%" y="389" width="0.1321%" height="15" fill="rgb(227,131,42)" fg:x="68517" fg:w="139"/><text x="65.3493%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (98 samples, 0.09%)</title><rect x="65.2950%" y="373" width="0.0931%" height="15" fill="rgb(212,3,39)" fg:x="68723" fg:w="98"/><text x="65.5450%" y="383.50"></text></g><g><title>core::cmp::PartialOrd::ge (98 samples, 0.09%)</title><rect x="65.2950%" y="357" width="0.0931%" height="15" fill="rgb(226,45,5)" fg:x="68723" fg:w="98"/><text x="65.5450%" y="367.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (97 samples, 0.09%)</title><rect x="65.2960%" y="341" width="0.0922%" height="15" fill="rgb(215,167,45)" fg:x="68724" fg:w="97"/><text x="65.5460%" y="351.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (97 samples, 0.09%)</title><rect x="65.2960%" y="325" width="0.0922%" height="15" fill="rgb(250,218,53)" fg:x="68724" fg:w="97"/><text x="65.5460%" y="335.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (97 samples, 0.09%)</title><rect x="65.2960%" y="309" width="0.0922%" height="15" fill="rgb(207,140,0)" fg:x="68724" fg:w="97"/><text x="65.5460%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (46 samples, 0.04%)</title><rect x="65.3444%" y="293" width="0.0437%" height="15" fill="rgb(238,133,51)" fg:x="68775" fg:w="46"/><text x="65.5944%" y="303.50"></text></g><g><title>std::time::SystemTime::duration_since (190 samples, 0.18%)</title><rect x="65.2314%" y="421" width="0.1805%" height="15" fill="rgb(218,203,53)" fg:x="68656" fg:w="190"/><text x="65.4814%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (190 samples, 0.18%)</title><rect x="65.2314%" y="405" width="0.1805%" height="15" fill="rgb(226,184,25)" fg:x="68656" fg:w="190"/><text x="65.4814%" y="415.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (190 samples, 0.18%)</title><rect x="65.2314%" y="389" width="0.1805%" height="15" fill="rgb(231,121,21)" fg:x="68656" fg:w="190"/><text x="65.4814%" y="399.50"></text></g><g><title>core::time::Duration::new (25 samples, 0.02%)</title><rect x="65.3881%" y="373" width="0.0238%" height="15" fill="rgb(251,14,34)" fg:x="68821" fg:w="25"/><text x="65.6381%" y="383.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,229 samples, 4.02%)</title><rect x="62.0029%" y="1157" width="4.0181%" height="15" fill="rgb(249,193,11)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="1167.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,229 samples, 4.02%)</title><rect x="62.0029%" y="1141" width="4.0181%" height="15" fill="rgb(220,172,37)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="1151.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,229 samples, 4.02%)</title><rect x="62.0029%" y="1125" width="4.0181%" height="15" fill="rgb(231,229,43)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="1135.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="1109" width="4.0181%" height="15" fill="rgb(250,161,5)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="1119.50">core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="1093" width="4.0181%" height="15" fill="rgb(218,225,18)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="1103.50">std:..</text></g><g><title>std::panic::catch_unwind (4,229 samples, 4.02%)</title><rect x="62.0029%" y="1077" width="4.0181%" height="15" fill="rgb(245,45,42)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="1087.50">std:..</text></g><g><title>std::panicking::try (4,229 samples, 4.02%)</title><rect x="62.0029%" y="1061" width="4.0181%" height="15" fill="rgb(211,115,1)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="1071.50">std:..</text></g><g><title>std::panicking::try::do_call (4,229 samples, 4.02%)</title><rect x="62.0029%" y="1045" width="4.0181%" height="15" fill="rgb(248,133,52)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="1055.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,229 samples, 4.02%)</title><rect x="62.0029%" y="1029" width="4.0181%" height="15" fill="rgb(238,100,21)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="1039.50">&lt;cor..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="1013" width="4.0181%" height="15" fill="rgb(247,144,11)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="1023.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,229 samples, 4.02%)</title><rect x="62.0029%" y="997" width="4.0181%" height="15" fill="rgb(206,164,16)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="1007.50">std:..</text></g><g><title>core::ops::function::FnOnce::call_once (4,229 samples, 4.02%)</title><rect x="62.0029%" y="981" width="4.0181%" height="15" fill="rgb(222,34,3)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="991.50">core..</text></g><g><title>async_global_executor::threading::thread_main_loop (4,229 samples, 4.02%)</title><rect x="62.0029%" y="965" width="4.0181%" height="15" fill="rgb(248,82,4)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="975.50">asyn..</text></g><g><title>std::panic::catch_unwind (4,229 samples, 4.02%)</title><rect x="62.0029%" y="949" width="4.0181%" height="15" fill="rgb(228,81,46)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="959.50">std:..</text></g><g><title>std::panicking::try (4,229 samples, 4.02%)</title><rect x="62.0029%" y="933" width="4.0181%" height="15" fill="rgb(227,67,47)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="943.50">std:..</text></g><g><title>std::panicking::try::do_call (4,229 samples, 4.02%)</title><rect x="62.0029%" y="917" width="4.0181%" height="15" fill="rgb(215,93,53)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="927.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="901" width="4.0181%" height="15" fill="rgb(248,194,39)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="911.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,229 samples, 4.02%)</title><rect x="62.0029%" y="885" width="4.0181%" height="15" fill="rgb(215,5,19)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="895.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,229 samples, 4.02%)</title><rect x="62.0029%" y="869" width="4.0181%" height="15" fill="rgb(226,215,51)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="879.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="853" width="4.0181%" height="15" fill="rgb(225,56,26)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="863.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on (4,229 samples, 4.02%)</title><rect x="62.0029%" y="837" width="4.0181%" height="15" fill="rgb(222,75,29)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="847.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="821" width="4.0181%" height="15" fill="rgb(236,139,6)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="831.50">asyn..</text></g><g><title>async_io::driver::block_on (4,229 samples, 4.02%)</title><rect x="62.0029%" y="805" width="4.0181%" height="15" fill="rgb(223,137,36)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="815.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,229 samples, 4.02%)</title><rect x="62.0029%" y="789" width="4.0181%" height="15" fill="rgb(226,99,2)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="799.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,229 samples, 4.02%)</title><rect x="62.0029%" y="773" width="4.0181%" height="15" fill="rgb(206,133,23)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="783.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="757" width="4.0181%" height="15" fill="rgb(243,173,15)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="767.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,229 samples, 4.02%)</title><rect x="62.0029%" y="741" width="4.0181%" height="15" fill="rgb(228,69,28)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="751.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,229 samples, 4.02%)</title><rect x="62.0029%" y="725" width="4.0181%" height="15" fill="rgb(212,51,22)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="735.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="709" width="4.0181%" height="15" fill="rgb(227,113,0)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="719.50">asyn..</text></g><g><title>async_task::runnable::Runnable::run (4,229 samples, 4.02%)</title><rect x="62.0029%" y="693" width="4.0181%" height="15" fill="rgb(252,84,27)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="703.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,229 samples, 4.02%)</title><rect x="62.0029%" y="677" width="4.0181%" height="15" fill="rgb(223,145,39)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="687.50">asyn..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,229 samples, 4.02%)</title><rect x="62.0029%" y="661" width="4.0181%" height="15" fill="rgb(239,219,30)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="671.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,229 samples, 4.02%)</title><rect x="62.0029%" y="645" width="4.0181%" height="15" fill="rgb(224,196,39)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="655.50">&lt;cor..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="629" width="4.0181%" height="15" fill="rgb(205,35,43)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="639.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,229 samples, 4.02%)</title><rect x="62.0029%" y="613" width="4.0181%" height="15" fill="rgb(228,201,21)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="623.50">&lt;asy..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,229 samples, 4.02%)</title><rect x="62.0029%" y="597" width="4.0181%" height="15" fill="rgb(237,118,16)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="607.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,229 samples, 4.02%)</title><rect x="62.0029%" y="581" width="4.0181%" height="15" fill="rgb(241,17,19)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="591.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,229 samples, 4.02%)</title><rect x="62.0029%" y="565" width="4.0181%" height="15" fill="rgb(214,10,25)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="575.50">std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="549" width="4.0181%" height="15" fill="rgb(238,37,29)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="559.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="533" width="4.0181%" height="15" fill="rgb(253,83,25)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="543.50">&lt;asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,229 samples, 4.02%)</title><rect x="62.0029%" y="517" width="4.0181%" height="15" fill="rgb(234,192,12)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="527.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="501" width="4.0181%" height="15" fill="rgb(241,216,45)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="511.50">trem..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,229 samples, 4.02%)</title><rect x="62.0029%" y="485" width="4.0181%" height="15" fill="rgb(242,22,33)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="495.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,229 samples, 4.02%)</title><rect x="62.0029%" y="469" width="4.0181%" height="15" fill="rgb(231,105,49)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="479.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (4,229 samples, 4.02%)</title><rect x="62.0029%" y="453" width="4.0181%" height="15" fill="rgb(218,204,15)" fg:x="65258" fg:w="4229"/><text x="62.2529%" y="463.50">&lt;tre..</text></g><g><title>tremor_common::time::nanotime (831 samples, 0.79%)</title><rect x="65.2314%" y="437" width="0.7895%" height="15" fill="rgb(235,138,41)" fg:x="68656" fg:w="831"/><text x="65.4814%" y="447.50"></text></g><g><title>std::time::SystemTime::now (641 samples, 0.61%)</title><rect x="65.4119%" y="421" width="0.6090%" height="15" fill="rgb(246,0,9)" fg:x="68846" fg:w="641"/><text x="65.6619%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (641 samples, 0.61%)</title><rect x="65.4119%" y="405" width="0.6090%" height="15" fill="rgb(210,74,4)" fg:x="68846" fg:w="641"/><text x="65.6619%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::now (641 samples, 0.61%)</title><rect x="65.4119%" y="389" width="0.6090%" height="15" fill="rgb(250,60,41)" fg:x="68846" fg:w="641"/><text x="65.6619%" y="399.50"></text></g><g><title>__clock_gettime_2 (641 samples, 0.61%)</title><rect x="65.4119%" y="373" width="0.6090%" height="15" fill="rgb(220,115,12)" fg:x="68846" fg:w="641"/><text x="65.6619%" y="383.50"></text></g><g><title>__vdso_clock_gettime (641 samples, 0.61%)</title><rect x="65.4119%" y="357" width="0.6090%" height="15" fill="rgb(237,100,13)" fg:x="68846" fg:w="641"/><text x="65.6619%" y="367.50"></text></g><g><title>[[vdso]] (446 samples, 0.42%)</title><rect x="65.5971%" y="341" width="0.4238%" height="15" fill="rgb(213,55,26)" fg:x="69041" fg:w="446"/><text x="65.8471%" y="351.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (65 samples, 0.06%)</title><rect x="66.0209%" y="1157" width="0.0618%" height="15" fill="rgb(216,17,4)" fg:x="69487" fg:w="65"/><text x="66.2709%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (773 samples, 0.73%)</title><rect x="66.1786%" y="581" width="0.7344%" height="15" fill="rgb(220,153,47)" fg:x="69653" fg:w="773"/><text x="66.4286%" y="591.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (826 samples, 0.78%)</title><rect x="66.1416%" y="597" width="0.7848%" height="15" fill="rgb(215,131,9)" fg:x="69614" fg:w="826"/><text x="66.3916%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.01%)</title><rect x="66.9131%" y="581" width="0.0133%" height="15" fill="rgb(233,46,42)" fg:x="70426" fg:w="14"/><text x="67.1631%" y="591.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,262 samples, 1.20%)</title><rect x="66.1007%" y="613" width="1.1990%" height="15" fill="rgb(226,86,7)" fg:x="69571" fg:w="1262"/><text x="66.3507%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (393 samples, 0.37%)</title><rect x="66.9264%" y="597" width="0.3734%" height="15" fill="rgb(239,226,21)" fg:x="70440" fg:w="393"/><text x="67.1764%" y="607.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,291 samples, 1.23%)</title><rect x="66.0827%" y="645" width="1.2266%" height="15" fill="rgb(244,137,22)" fg:x="69552" fg:w="1291"/><text x="66.3327%" y="655.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,291 samples, 1.23%)</title><rect x="66.0827%" y="629" width="1.2266%" height="15" fill="rgb(211,139,35)" fg:x="69552" fg:w="1291"/><text x="66.3327%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="67.4033%" y="453" width="0.0257%" height="15" fill="rgb(214,62,50)" fg:x="70942" fg:w="27"/><text x="67.6533%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (26 samples, 0.02%)</title><rect x="67.4043%" y="437" width="0.0247%" height="15" fill="rgb(212,113,44)" fg:x="70943" fg:w="26"/><text x="67.6543%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,432 samples, 1.36%)</title><rect x="66.0827%" y="661" width="1.3606%" height="15" fill="rgb(226,150,43)" fg:x="69552" fg:w="1432"/><text x="66.3327%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (141 samples, 0.13%)</title><rect x="67.3093%" y="645" width="0.1340%" height="15" fill="rgb(250,71,37)" fg:x="70843" fg:w="141"/><text x="67.5593%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (141 samples, 0.13%)</title><rect x="67.3093%" y="629" width="0.1340%" height="15" fill="rgb(219,76,19)" fg:x="70843" fg:w="141"/><text x="67.5593%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (141 samples, 0.13%)</title><rect x="67.3093%" y="613" width="0.1340%" height="15" fill="rgb(250,39,11)" fg:x="70843" fg:w="141"/><text x="67.5593%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (141 samples, 0.13%)</title><rect x="67.3093%" y="597" width="0.1340%" height="15" fill="rgb(230,64,31)" fg:x="70843" fg:w="141"/><text x="67.5593%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (141 samples, 0.13%)</title><rect x="67.3093%" y="581" width="0.1340%" height="15" fill="rgb(208,222,23)" fg:x="70843" fg:w="141"/><text x="67.5593%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (140 samples, 0.13%)</title><rect x="67.3102%" y="565" width="0.1330%" height="15" fill="rgb(227,125,18)" fg:x="70844" fg:w="140"/><text x="67.5602%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (140 samples, 0.13%)</title><rect x="67.3102%" y="549" width="0.1330%" height="15" fill="rgb(234,210,9)" fg:x="70844" fg:w="140"/><text x="67.5602%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (140 samples, 0.13%)</title><rect x="67.3102%" y="533" width="0.1330%" height="15" fill="rgb(217,127,24)" fg:x="70844" fg:w="140"/><text x="67.5602%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (140 samples, 0.13%)</title><rect x="67.3102%" y="517" width="0.1330%" height="15" fill="rgb(239,141,48)" fg:x="70844" fg:w="140"/><text x="67.5602%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (140 samples, 0.13%)</title><rect x="67.3102%" y="501" width="0.1330%" height="15" fill="rgb(227,109,8)" fg:x="70844" fg:w="140"/><text x="67.5602%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (42 samples, 0.04%)</title><rect x="67.4033%" y="485" width="0.0399%" height="15" fill="rgb(235,184,23)" fg:x="70942" fg:w="42"/><text x="67.6533%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (42 samples, 0.04%)</title><rect x="67.4033%" y="469" width="0.0399%" height="15" fill="rgb(227,226,48)" fg:x="70942" fg:w="42"/><text x="67.6533%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (15 samples, 0.01%)</title><rect x="67.4290%" y="453" width="0.0143%" height="15" fill="rgb(206,150,11)" fg:x="70969" fg:w="15"/><text x="67.6790%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="67.4290%" y="437" width="0.0143%" height="15" fill="rgb(254,2,33)" fg:x="70969" fg:w="15"/><text x="67.6790%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="67.4299%" y="421" width="0.0133%" height="15" fill="rgb(243,160,20)" fg:x="70970" fg:w="14"/><text x="67.6799%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::empty (11 samples, 0.01%)</title><rect x="67.4793%" y="373" width="0.0105%" height="15" fill="rgb(218,208,30)" fg:x="71022" fg:w="11"/><text x="67.7293%" y="383.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (11 samples, 0.01%)</title><rect x="67.4793%" y="357" width="0.0105%" height="15" fill="rgb(224,120,49)" fg:x="71022" fg:w="11"/><text x="67.7293%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (223 samples, 0.21%)</title><rect x="67.4480%" y="421" width="0.2119%" height="15" fill="rgb(246,12,2)" fg:x="70989" fg:w="223"/><text x="67.6980%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (223 samples, 0.21%)</title><rect x="67.4480%" y="405" width="0.2119%" height="15" fill="rgb(236,117,3)" fg:x="70989" fg:w="223"/><text x="67.6980%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (208 samples, 0.20%)</title><rect x="67.4622%" y="389" width="0.1976%" height="15" fill="rgb(216,128,52)" fg:x="71004" fg:w="208"/><text x="67.7122%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (179 samples, 0.17%)</title><rect x="67.4898%" y="373" width="0.1701%" height="15" fill="rgb(246,145,19)" fg:x="71033" fg:w="179"/><text x="67.7398%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (179 samples, 0.17%)</title><rect x="67.4898%" y="357" width="0.1701%" height="15" fill="rgb(222,11,46)" fg:x="71033" fg:w="179"/><text x="67.7398%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (232 samples, 0.22%)</title><rect x="67.4432%" y="645" width="0.2204%" height="15" fill="rgb(245,82,36)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (232 samples, 0.22%)</title><rect x="67.4432%" y="629" width="0.2204%" height="15" fill="rgb(250,73,51)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (232 samples, 0.22%)</title><rect x="67.4432%" y="613" width="0.2204%" height="15" fill="rgb(221,189,23)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (232 samples, 0.22%)</title><rect x="67.4432%" y="597" width="0.2204%" height="15" fill="rgb(210,33,7)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="607.50"></text></g><g><title>value_trait::Builder::object (232 samples, 0.22%)</title><rect x="67.4432%" y="581" width="0.2204%" height="15" fill="rgb(210,107,22)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (232 samples, 0.22%)</title><rect x="67.4432%" y="565" width="0.2204%" height="15" fill="rgb(222,116,37)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (232 samples, 0.22%)</title><rect x="67.4432%" y="549" width="0.2204%" height="15" fill="rgb(254,17,48)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (232 samples, 0.22%)</title><rect x="67.4432%" y="533" width="0.2204%" height="15" fill="rgb(224,36,32)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (232 samples, 0.22%)</title><rect x="67.4432%" y="517" width="0.2204%" height="15" fill="rgb(232,90,46)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (232 samples, 0.22%)</title><rect x="67.4432%" y="501" width="0.2204%" height="15" fill="rgb(241,66,40)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="511.50"></text></g><g><title>alloc::alloc::alloc (232 samples, 0.22%)</title><rect x="67.4432%" y="485" width="0.2204%" height="15" fill="rgb(249,184,29)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="495.50"></text></g><g><title>__rg_alloc (232 samples, 0.22%)</title><rect x="67.4432%" y="469" width="0.2204%" height="15" fill="rgb(231,181,1)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (232 samples, 0.22%)</title><rect x="67.4432%" y="453" width="0.2204%" height="15" fill="rgb(224,94,2)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="463.50"></text></g><g><title>rust_alloc (232 samples, 0.22%)</title><rect x="67.4432%" y="437" width="0.2204%" height="15" fill="rgb(229,170,15)" fg:x="70984" fg:w="232"/><text x="67.6932%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::empty (16 samples, 0.02%)</title><rect x="67.7064%" y="453" width="0.0152%" height="15" fill="rgb(240,127,35)" fg:x="71261" fg:w="16"/><text x="67.9564%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (16 samples, 0.02%)</title><rect x="67.7064%" y="437" width="0.0152%" height="15" fill="rgb(248,196,34)" fg:x="71261" fg:w="16"/><text x="67.9564%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.11%)</title><rect x="67.6770%" y="501" width="0.1064%" height="15" fill="rgb(236,137,7)" fg:x="71230" fg:w="112"/><text x="67.9270%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.11%)</title><rect x="67.6770%" y="485" width="0.1064%" height="15" fill="rgb(235,127,16)" fg:x="71230" fg:w="112"/><text x="67.9270%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (92 samples, 0.09%)</title><rect x="67.6960%" y="469" width="0.0874%" height="15" fill="rgb(250,192,54)" fg:x="71250" fg:w="92"/><text x="67.9460%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (65 samples, 0.06%)</title><rect x="67.7216%" y="453" width="0.0618%" height="15" fill="rgb(218,98,20)" fg:x="71277" fg:w="65"/><text x="67.9716%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (65 samples, 0.06%)</title><rect x="67.7216%" y="437" width="0.0618%" height="15" fill="rgb(230,176,47)" fg:x="71277" fg:w="65"/><text x="67.9716%" y="447.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,794 samples, 1.70%)</title><rect x="66.0827%" y="1157" width="1.7045%" height="15" fill="rgb(244,2,33)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,794 samples, 1.70%)</title><rect x="66.0827%" y="1141" width="1.7045%" height="15" fill="rgb(231,100,17)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="1151.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (1,794 samples, 1.70%)</title><rect x="66.0827%" y="1125" width="1.7045%" height="15" fill="rgb(245,23,12)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (1,794 samples, 1.70%)</title><rect x="66.0827%" y="1109" width="1.7045%" height="15" fill="rgb(249,55,22)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="1119.50"></text></g><g><title>std::panicking::try (1,794 samples, 1.70%)</title><rect x="66.0827%" y="1093" width="1.7045%" height="15" fill="rgb(207,134,9)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (1,794 samples, 1.70%)</title><rect x="66.0827%" y="1077" width="1.7045%" height="15" fill="rgb(218,134,0)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="1087.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (1,794 samples, 1.70%)</title><rect x="66.0827%" y="1061" width="1.7045%" height="15" fill="rgb(213,212,33)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,794 samples, 1.70%)</title><rect x="66.0827%" y="1045" width="1.7045%" height="15" fill="rgb(252,106,18)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,794 samples, 1.70%)</title><rect x="66.0827%" y="1029" width="1.7045%" height="15" fill="rgb(208,126,42)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="1039.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (1,794 samples, 1.70%)</title><rect x="66.0827%" y="1013" width="1.7045%" height="15" fill="rgb(246,175,29)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="1023.50"></text></g><g><title>async_global_executor::reactor::block_on (1,794 samples, 1.70%)</title><rect x="66.0827%" y="997" width="1.7045%" height="15" fill="rgb(215,13,50)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="1007.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,794 samples, 1.70%)</title><rect x="66.0827%" y="981" width="1.7045%" height="15" fill="rgb(216,172,15)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="991.50"></text></g><g><title>async_io::driver::block_on (1,794 samples, 1.70%)</title><rect x="66.0827%" y="965" width="1.7045%" height="15" fill="rgb(212,103,13)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="975.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,794 samples, 1.70%)</title><rect x="66.0827%" y="949" width="1.7045%" height="15" fill="rgb(231,171,36)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,794 samples, 1.70%)</title><rect x="66.0827%" y="933" width="1.7045%" height="15" fill="rgb(250,123,20)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="943.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,794 samples, 1.70%)</title><rect x="66.0827%" y="917" width="1.7045%" height="15" fill="rgb(212,53,50)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="927.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,794 samples, 1.70%)</title><rect x="66.0827%" y="901" width="1.7045%" height="15" fill="rgb(243,54,12)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,794 samples, 1.70%)</title><rect x="66.0827%" y="885" width="1.7045%" height="15" fill="rgb(234,101,34)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="895.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,794 samples, 1.70%)</title><rect x="66.0827%" y="869" width="1.7045%" height="15" fill="rgb(254,67,22)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="879.50"></text></g><g><title>async_task::runnable::Runnable::run (1,794 samples, 1.70%)</title><rect x="66.0827%" y="853" width="1.7045%" height="15" fill="rgb(250,35,47)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,794 samples, 1.70%)</title><rect x="66.0827%" y="837" width="1.7045%" height="15" fill="rgb(226,126,38)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,794 samples, 1.70%)</title><rect x="66.0827%" y="821" width="1.7045%" height="15" fill="rgb(216,138,53)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,794 samples, 1.70%)</title><rect x="66.0827%" y="805" width="1.7045%" height="15" fill="rgb(246,199,43)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="815.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,794 samples, 1.70%)</title><rect x="66.0827%" y="789" width="1.7045%" height="15" fill="rgb(232,125,11)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="799.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,794 samples, 1.70%)</title><rect x="66.0827%" y="773" width="1.7045%" height="15" fill="rgb(218,219,45)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="783.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,794 samples, 1.70%)</title><rect x="66.0827%" y="757" width="1.7045%" height="15" fill="rgb(216,102,54)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,794 samples, 1.70%)</title><rect x="66.0827%" y="741" width="1.7045%" height="15" fill="rgb(250,228,7)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,794 samples, 1.70%)</title><rect x="66.0827%" y="725" width="1.7045%" height="15" fill="rgb(226,125,25)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="735.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,794 samples, 1.70%)</title><rect x="66.0827%" y="709" width="1.7045%" height="15" fill="rgb(224,165,27)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="719.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,794 samples, 1.70%)</title><rect x="66.0827%" y="693" width="1.7045%" height="15" fill="rgb(233,86,3)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,794 samples, 1.70%)</title><rect x="66.0827%" y="677" width="1.7045%" height="15" fill="rgb(228,116,20)" fg:x="69552" fg:w="1794"/><text x="66.3327%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (362 samples, 0.34%)</title><rect x="67.4432%" y="661" width="0.3439%" height="15" fill="rgb(209,192,17)" fg:x="70984" fg:w="362"/><text x="67.6932%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (130 samples, 0.12%)</title><rect x="67.6637%" y="645" width="0.1235%" height="15" fill="rgb(224,88,34)" fg:x="71216" fg:w="130"/><text x="67.9137%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (130 samples, 0.12%)</title><rect x="67.6637%" y="629" width="0.1235%" height="15" fill="rgb(233,38,6)" fg:x="71216" fg:w="130"/><text x="67.9137%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (130 samples, 0.12%)</title><rect x="67.6637%" y="613" width="0.1235%" height="15" fill="rgb(212,59,30)" fg:x="71216" fg:w="130"/><text x="67.9137%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (130 samples, 0.12%)</title><rect x="67.6637%" y="597" width="0.1235%" height="15" fill="rgb(213,80,3)" fg:x="71216" fg:w="130"/><text x="67.9137%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (130 samples, 0.12%)</title><rect x="67.6637%" y="581" width="0.1235%" height="15" fill="rgb(251,178,7)" fg:x="71216" fg:w="130"/><text x="67.9137%" y="591.50"></text></g><g><title>alloc::alloc::alloc (130 samples, 0.12%)</title><rect x="67.6637%" y="565" width="0.1235%" height="15" fill="rgb(213,154,26)" fg:x="71216" fg:w="130"/><text x="67.9137%" y="575.50"></text></g><g><title>__rg_alloc (130 samples, 0.12%)</title><rect x="67.6637%" y="549" width="0.1235%" height="15" fill="rgb(238,165,49)" fg:x="71216" fg:w="130"/><text x="67.9137%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (130 samples, 0.12%)</title><rect x="67.6637%" y="533" width="0.1235%" height="15" fill="rgb(248,91,46)" fg:x="71216" fg:w="130"/><text x="67.9137%" y="543.50"></text></g><g><title>rust_alloc (130 samples, 0.12%)</title><rect x="67.6637%" y="517" width="0.1235%" height="15" fill="rgb(244,21,52)" fg:x="71216" fg:w="130"/><text x="67.9137%" y="527.50"></text></g><g><title>__x64_sys_futex (42 samples, 0.04%)</title><rect x="67.9772%" y="773" width="0.0399%" height="15" fill="rgb(247,122,20)" fg:x="71546" fg:w="42"/><text x="68.2272%" y="783.50"></text></g><g><title>do_futex (36 samples, 0.03%)</title><rect x="67.9829%" y="757" width="0.0342%" height="15" fill="rgb(218,27,9)" fg:x="71552" fg:w="36"/><text x="68.2329%" y="767.50"></text></g><g><title>futex_wake (33 samples, 0.03%)</title><rect x="67.9857%" y="741" width="0.0314%" height="15" fill="rgb(246,7,6)" fg:x="71555" fg:w="33"/><text x="68.2357%" y="751.50"></text></g><g><title>syscall_exit_to_user_mode (81 samples, 0.08%)</title><rect x="68.0181%" y="773" width="0.0770%" height="15" fill="rgb(227,135,54)" fg:x="71589" fg:w="81"/><text x="68.2681%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (135 samples, 0.13%)</title><rect x="67.9705%" y="805" width="0.1283%" height="15" fill="rgb(247,14,11)" fg:x="71539" fg:w="135"/><text x="68.2205%" y="815.50"></text></g><g><title>do_syscall_64 (132 samples, 0.13%)</title><rect x="67.9734%" y="789" width="0.1254%" height="15" fill="rgb(206,149,34)" fg:x="71542" fg:w="132"/><text x="68.2234%" y="799.50"></text></g><g><title>core::mem::drop (174 samples, 0.17%)</title><rect x="67.9392%" y="933" width="0.1653%" height="15" fill="rgb(227,228,4)" fg:x="71506" fg:w="174"/><text x="68.1892%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (174 samples, 0.17%)</title><rect x="67.9392%" y="917" width="0.1653%" height="15" fill="rgb(238,218,28)" fg:x="71506" fg:w="174"/><text x="68.1892%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (173 samples, 0.16%)</title><rect x="67.9401%" y="901" width="0.1644%" height="15" fill="rgb(252,86,40)" fg:x="71507" fg:w="173"/><text x="68.1901%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (173 samples, 0.16%)</title><rect x="67.9401%" y="885" width="0.1644%" height="15" fill="rgb(251,225,11)" fg:x="71507" fg:w="173"/><text x="68.1901%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (173 samples, 0.16%)</title><rect x="67.9401%" y="869" width="0.1644%" height="15" fill="rgb(206,46,49)" fg:x="71507" fg:w="173"/><text x="68.1901%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (173 samples, 0.16%)</title><rect x="67.9401%" y="853" width="0.1644%" height="15" fill="rgb(245,128,24)" fg:x="71507" fg:w="173"/><text x="68.1901%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (173 samples, 0.16%)</title><rect x="67.9401%" y="837" width="0.1644%" height="15" fill="rgb(219,177,34)" fg:x="71507" fg:w="173"/><text x="68.1901%" y="847.50"></text></g><g><title>__GI___lll_lock_wake (159 samples, 0.15%)</title><rect x="67.9534%" y="821" width="0.1511%" height="15" fill="rgb(218,60,48)" fg:x="71521" fg:w="159"/><text x="68.2034%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (32 samples, 0.03%)</title><rect x="68.1045%" y="933" width="0.0304%" height="15" fill="rgb(221,11,5)" fg:x="71680" fg:w="32"/><text x="68.3545%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (29 samples, 0.03%)</title><rect x="68.1074%" y="917" width="0.0276%" height="15" fill="rgb(220,148,13)" fg:x="71683" fg:w="29"/><text x="68.3574%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="68.1074%" y="901" width="0.0276%" height="15" fill="rgb(210,16,3)" fg:x="71683" fg:w="29"/><text x="68.3574%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (27 samples, 0.03%)</title><rect x="68.1093%" y="885" width="0.0257%" height="15" fill="rgb(236,80,2)" fg:x="71685" fg:w="27"/><text x="68.3593%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (27 samples, 0.03%)</title><rect x="68.1093%" y="869" width="0.0257%" height="15" fill="rgb(239,129,19)" fg:x="71685" fg:w="27"/><text x="68.3593%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (27 samples, 0.03%)</title><rect x="68.1093%" y="853" width="0.0257%" height="15" fill="rgb(220,106,35)" fg:x="71685" fg:w="27"/><text x="68.3593%" y="863.50"></text></g><g><title>__perf_event_task_sched_out (28 samples, 0.03%)</title><rect x="68.3525%" y="709" width="0.0266%" height="15" fill="rgb(252,139,45)" fg:x="71941" fg:w="28"/><text x="68.6025%" y="719.50"></text></g><g><title>__calc_delta (14 samples, 0.01%)</title><rect x="68.4513%" y="661" width="0.0133%" height="15" fill="rgb(229,8,36)" fg:x="72045" fg:w="14"/><text x="68.7013%" y="671.50"></text></g><g><title>cpuacct_charge (16 samples, 0.02%)</title><rect x="68.4684%" y="661" width="0.0152%" height="15" fill="rgb(230,126,33)" fg:x="72063" fg:w="16"/><text x="68.7184%" y="671.50"></text></g><g><title>update_curr (59 samples, 0.06%)</title><rect x="68.4295%" y="677" width="0.0561%" height="15" fill="rgb(239,140,21)" fg:x="72022" fg:w="59"/><text x="68.6795%" y="687.50"></text></g><g><title>__update_load_avg_cfs_rq (11 samples, 0.01%)</title><rect x="68.4922%" y="661" width="0.0105%" height="15" fill="rgb(254,104,9)" fg:x="72088" fg:w="11"/><text x="68.7422%" y="671.50"></text></g><g><title>dequeue_entity (119 samples, 0.11%)</title><rect x="68.4000%" y="693" width="0.1131%" height="15" fill="rgb(239,52,14)" fg:x="71991" fg:w="119"/><text x="68.6500%" y="703.50"></text></g><g><title>update_load_avg (29 samples, 0.03%)</title><rect x="68.4855%" y="677" width="0.0276%" height="15" fill="rgb(208,227,44)" fg:x="72081" fg:w="29"/><text x="68.7355%" y="687.50"></text></g><g><title>__update_load_avg_se (11 samples, 0.01%)</title><rect x="68.5026%" y="661" width="0.0105%" height="15" fill="rgb(246,18,19)" fg:x="72099" fg:w="11"/><text x="68.7526%" y="671.50"></text></g><g><title>dequeue_task_fair (139 samples, 0.13%)</title><rect x="68.3829%" y="709" width="0.1321%" height="15" fill="rgb(235,228,25)" fg:x="71973" fg:w="139"/><text x="68.6329%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (23 samples, 0.02%)</title><rect x="68.5463%" y="677" width="0.0219%" height="15" fill="rgb(240,156,20)" fg:x="72145" fg:w="23"/><text x="68.7963%" y="687.50"></text></g><g><title>native_write_msr (23 samples, 0.02%)</title><rect x="68.5463%" y="661" width="0.0219%" height="15" fill="rgb(224,8,20)" fg:x="72145" fg:w="23"/><text x="68.7963%" y="671.50"></text></g><g><title>__perf_event_task_sched_in (27 samples, 0.03%)</title><rect x="68.5454%" y="693" width="0.0257%" height="15" fill="rgb(214,12,52)" fg:x="72144" fg:w="27"/><text x="68.7954%" y="703.50"></text></g><g><title>finish_task_switch.isra.0 (65 samples, 0.06%)</title><rect x="68.5150%" y="709" width="0.0618%" height="15" fill="rgb(211,220,47)" fg:x="72112" fg:w="65"/><text x="68.7650%" y="719.50"></text></g><g><title>pick_next_task_fair (17 samples, 0.02%)</title><rect x="68.5767%" y="709" width="0.0162%" height="15" fill="rgb(250,173,5)" fg:x="72177" fg:w="17"/><text x="68.8267%" y="719.50"></text></g><g><title>newidle_balance (12 samples, 0.01%)</title><rect x="68.5815%" y="693" width="0.0114%" height="15" fill="rgb(250,125,52)" fg:x="72182" fg:w="12"/><text x="68.8315%" y="703.50"></text></g><g><title>psi_group_change (71 samples, 0.07%)</title><rect x="68.6138%" y="693" width="0.0675%" height="15" fill="rgb(209,133,18)" fg:x="72216" fg:w="71"/><text x="68.8638%" y="703.50"></text></g><g><title>psi_task_switch (92 samples, 0.09%)</title><rect x="68.5986%" y="709" width="0.0874%" height="15" fill="rgb(216,173,22)" fg:x="72200" fg:w="92"/><text x="68.8486%" y="719.50"></text></g><g><title>put_prev_task_fair (13 samples, 0.01%)</title><rect x="68.6860%" y="709" width="0.0124%" height="15" fill="rgb(205,3,22)" fg:x="72292" fg:w="13"/><text x="68.9360%" y="719.50"></text></g><g><title>futex_wait_queue (446 samples, 0.42%)</title><rect x="68.3031%" y="757" width="0.4238%" height="15" fill="rgb(248,22,20)" fg:x="71889" fg:w="446"/><text x="68.5531%" y="767.50"></text></g><g><title>schedule (432 samples, 0.41%)</title><rect x="68.3164%" y="741" width="0.4105%" height="15" fill="rgb(233,6,29)" fg:x="71903" fg:w="432"/><text x="68.5664%" y="751.50"></text></g><g><title>__schedule (423 samples, 0.40%)</title><rect x="68.3249%" y="725" width="0.4019%" height="15" fill="rgb(240,22,54)" fg:x="71912" fg:w="423"/><text x="68.5749%" y="735.50"></text></g><g><title>update_rq_clock (22 samples, 0.02%)</title><rect x="68.7059%" y="709" width="0.0209%" height="15" fill="rgb(231,133,32)" fg:x="72313" fg:w="22"/><text x="68.9559%" y="719.50"></text></g><g><title>futex_q_lock (30 samples, 0.03%)</title><rect x="68.7373%" y="741" width="0.0285%" height="15" fill="rgb(248,193,4)" fg:x="72346" fg:w="30"/><text x="68.9873%" y="751.50"></text></g><g><title>__x64_sys_futex (530 samples, 0.50%)</title><rect x="68.2651%" y="805" width="0.5036%" height="15" fill="rgb(211,178,46)" fg:x="71849" fg:w="530"/><text x="68.5151%" y="815.50"></text></g><g><title>do_futex (515 samples, 0.49%)</title><rect x="68.2793%" y="789" width="0.4893%" height="15" fill="rgb(224,5,42)" fg:x="71864" fg:w="515"/><text x="68.5293%" y="799.50"></text></g><g><title>futex_wait (512 samples, 0.49%)</title><rect x="68.2822%" y="773" width="0.4865%" height="15" fill="rgb(239,176,25)" fg:x="71867" fg:w="512"/><text x="68.5322%" y="783.50"></text></g><g><title>futex_wait_setup (44 samples, 0.04%)</title><rect x="68.7268%" y="757" width="0.0418%" height="15" fill="rgb(245,187,50)" fg:x="72335" fg:w="44"/><text x="68.9768%" y="767.50"></text></g><g><title>__get_user_8 (13 samples, 0.01%)</title><rect x="68.8646%" y="757" width="0.0124%" height="15" fill="rgb(248,24,15)" fg:x="72480" fg:w="13"/><text x="69.1146%" y="767.50"></text></g><g><title>__rseq_handle_notify_resume (35 samples, 0.03%)</title><rect x="68.8523%" y="773" width="0.0333%" height="15" fill="rgb(205,166,13)" fg:x="72467" fg:w="35"/><text x="69.1023%" y="783.50"></text></g><g><title>exit_to_user_mode_prepare (56 samples, 0.05%)</title><rect x="68.8418%" y="789" width="0.0532%" height="15" fill="rgb(208,114,23)" fg:x="72456" fg:w="56"/><text x="69.0918%" y="799.50"></text></g><g><title>syscall_exit_to_user_mode (149 samples, 0.14%)</title><rect x="68.7696%" y="805" width="0.1416%" height="15" fill="rgb(239,127,18)" fg:x="72380" fg:w="149"/><text x="69.0196%" y="815.50"></text></g><g><title>syscall_exit_work (17 samples, 0.02%)</title><rect x="68.8950%" y="789" width="0.0162%" height="15" fill="rgb(219,154,28)" fg:x="72512" fg:w="17"/><text x="69.1450%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (701 samples, 0.67%)</title><rect x="68.2546%" y="837" width="0.6660%" height="15" fill="rgb(225,157,23)" fg:x="71838" fg:w="701"/><text x="68.5046%" y="847.50"></text></g><g><title>do_syscall_64 (698 samples, 0.66%)</title><rect x="68.2575%" y="821" width="0.6632%" height="15" fill="rgb(219,8,6)" fg:x="71841" fg:w="698"/><text x="68.5075%" y="831.50"></text></g><g><title>event_listener::Inner::lock (832 samples, 0.79%)</title><rect x="68.1349%" y="933" width="0.7905%" height="15" fill="rgb(212,47,6)" fg:x="71712" fg:w="832"/><text x="68.3849%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (832 samples, 0.79%)</title><rect x="68.1349%" y="917" width="0.7905%" height="15" fill="rgb(224,190,4)" fg:x="71712" fg:w="832"/><text x="68.3849%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (829 samples, 0.79%)</title><rect x="68.1378%" y="901" width="0.7876%" height="15" fill="rgb(239,183,29)" fg:x="71715" fg:w="829"/><text x="68.3878%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (824 samples, 0.78%)</title><rect x="68.1425%" y="885" width="0.7829%" height="15" fill="rgb(213,57,7)" fg:x="71720" fg:w="824"/><text x="68.3925%" y="895.50"></text></g><g><title>___pthread_mutex_lock (824 samples, 0.78%)</title><rect x="68.1425%" y="869" width="0.7829%" height="15" fill="rgb(216,148,1)" fg:x="71720" fg:w="824"/><text x="68.3925%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (747 samples, 0.71%)</title><rect x="68.2157%" y="853" width="0.7097%" height="15" fill="rgb(236,182,29)" fg:x="71797" fg:w="747"/><text x="68.4657%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,077 samples, 1.02%)</title><rect x="67.9230%" y="949" width="1.0233%" height="15" fill="rgb(244,120,48)" fg:x="71489" fg:w="1077"/><text x="68.1730%" y="959.50"></text></g><g><title>event_listener::List::remove (22 samples, 0.02%)</title><rect x="68.9254%" y="933" width="0.0209%" height="15" fill="rgb(206,71,34)" fg:x="72544" fg:w="22"/><text x="69.1754%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (16 samples, 0.02%)</title><rect x="68.9311%" y="917" width="0.0152%" height="15" fill="rgb(242,32,6)" fg:x="72550" fg:w="16"/><text x="69.1811%" y="927.50"></text></g><g><title>core::mem::replace (16 samples, 0.02%)</title><rect x="68.9311%" y="901" width="0.0152%" height="15" fill="rgb(241,35,3)" fg:x="72550" fg:w="16"/><text x="69.1811%" y="911.50"></text></g><g><title>core::ptr::read (16 samples, 0.02%)</title><rect x="68.9311%" y="885" width="0.0152%" height="15" fill="rgb(222,62,19)" fg:x="72550" fg:w="16"/><text x="69.1811%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (62 samples, 0.06%)</title><rect x="68.9758%" y="933" width="0.0589%" height="15" fill="rgb(223,110,41)" fg:x="72597" fg:w="62"/><text x="69.2258%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (51 samples, 0.05%)</title><rect x="69.1582%" y="917" width="0.0485%" height="15" fill="rgb(208,224,4)" fg:x="72789" fg:w="51"/><text x="69.4082%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (50 samples, 0.05%)</title><rect x="69.1591%" y="901" width="0.0475%" height="15" fill="rgb(241,137,19)" fg:x="72790" fg:w="50"/><text x="69.4091%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (50 samples, 0.05%)</title><rect x="69.1591%" y="885" width="0.0475%" height="15" fill="rgb(244,24,17)" fg:x="72790" fg:w="50"/><text x="69.4091%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (50 samples, 0.05%)</title><rect x="69.1591%" y="869" width="0.0475%" height="15" fill="rgb(245,178,49)" fg:x="72790" fg:w="50"/><text x="69.4091%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (235 samples, 0.22%)</title><rect x="69.2133%" y="917" width="0.2233%" height="15" fill="rgb(219,160,38)" fg:x="72847" fg:w="235"/><text x="69.4633%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (235 samples, 0.22%)</title><rect x="69.2133%" y="901" width="0.2233%" height="15" fill="rgb(228,137,14)" fg:x="72847" fg:w="235"/><text x="69.4633%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (389 samples, 0.37%)</title><rect x="69.4366%" y="917" width="0.3696%" height="15" fill="rgb(237,134,11)" fg:x="73082" fg:w="389"/><text x="69.6866%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (388 samples, 0.37%)</title><rect x="69.4375%" y="901" width="0.3686%" height="15" fill="rgb(211,126,44)" fg:x="73083" fg:w="388"/><text x="69.6875%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (824 samples, 0.78%)</title><rect x="69.0347%" y="933" width="0.7829%" height="15" fill="rgb(226,171,33)" fg:x="72659" fg:w="824"/><text x="69.2847%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (12 samples, 0.01%)</title><rect x="69.8062%" y="917" width="0.0114%" height="15" fill="rgb(253,99,13)" fg:x="73471" fg:w="12"/><text x="70.0562%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_store (12 samples, 0.01%)</title><rect x="69.8062%" y="901" width="0.0114%" height="15" fill="rgb(244,48,7)" fg:x="73471" fg:w="12"/><text x="70.0562%" y="911.50"></text></g><g><title>__x64_sys_futex (33 samples, 0.03%)</title><rect x="69.8366%" y="773" width="0.0314%" height="15" fill="rgb(244,217,54)" fg:x="73503" fg:w="33"/><text x="70.0866%" y="783.50"></text></g><g><title>do_futex (31 samples, 0.03%)</title><rect x="69.8385%" y="757" width="0.0295%" height="15" fill="rgb(224,15,18)" fg:x="73505" fg:w="31"/><text x="70.0885%" y="767.50"></text></g><g><title>futex_wake (31 samples, 0.03%)</title><rect x="69.8385%" y="741" width="0.0295%" height="15" fill="rgb(244,99,12)" fg:x="73505" fg:w="31"/><text x="70.0885%" y="751.50"></text></g><g><title>wake_up_q (23 samples, 0.02%)</title><rect x="69.8461%" y="725" width="0.0219%" height="15" fill="rgb(233,226,8)" fg:x="73513" fg:w="23"/><text x="70.0961%" y="735.50"></text></g><g><title>try_to_wake_up (22 samples, 0.02%)</title><rect x="69.8470%" y="709" width="0.0209%" height="15" fill="rgb(229,211,3)" fg:x="73514" fg:w="22"/><text x="70.0970%" y="719.50"></text></g><g><title>syscall_exit_to_user_mode (15 samples, 0.01%)</title><rect x="69.8689%" y="773" width="0.0143%" height="15" fill="rgb(216,140,21)" fg:x="73537" fg:w="15"/><text x="70.1189%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (61 samples, 0.06%)</title><rect x="69.8280%" y="917" width="0.0580%" height="15" fill="rgb(234,122,30)" fg:x="73494" fg:w="61"/><text x="70.0780%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (60 samples, 0.06%)</title><rect x="69.8290%" y="901" width="0.0570%" height="15" fill="rgb(236,25,46)" fg:x="73495" fg:w="60"/><text x="70.0790%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.06%)</title><rect x="69.8290%" y="885" width="0.0570%" height="15" fill="rgb(217,52,54)" fg:x="73495" fg:w="60"/><text x="70.0790%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (60 samples, 0.06%)</title><rect x="69.8290%" y="869" width="0.0570%" height="15" fill="rgb(222,29,26)" fg:x="73495" fg:w="60"/><text x="70.0790%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (60 samples, 0.06%)</title><rect x="69.8290%" y="853" width="0.0570%" height="15" fill="rgb(216,177,29)" fg:x="73495" fg:w="60"/><text x="70.0790%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (60 samples, 0.06%)</title><rect x="69.8290%" y="837" width="0.0570%" height="15" fill="rgb(247,136,51)" fg:x="73495" fg:w="60"/><text x="70.0790%" y="847.50"></text></g><g><title>__GI___lll_lock_wake (55 samples, 0.05%)</title><rect x="69.8337%" y="821" width="0.0523%" height="15" fill="rgb(231,47,47)" fg:x="73500" fg:w="55"/><text x="70.0837%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (52 samples, 0.05%)</title><rect x="69.8366%" y="805" width="0.0494%" height="15" fill="rgb(211,192,36)" fg:x="73503" fg:w="52"/><text x="70.0866%" y="815.50"></text></g><g><title>do_syscall_64 (52 samples, 0.05%)</title><rect x="69.8366%" y="789" width="0.0494%" height="15" fill="rgb(229,156,32)" fg:x="73503" fg:w="52"/><text x="70.0866%" y="799.50"></text></g><g><title>event_listener::Inner::lock (15 samples, 0.01%)</title><rect x="69.8993%" y="917" width="0.0143%" height="15" fill="rgb(248,213,20)" fg:x="73569" fg:w="15"/><text x="70.1493%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="69.8993%" y="901" width="0.0143%" height="15" fill="rgb(217,64,7)" fg:x="73569" fg:w="15"/><text x="70.1493%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="69.8993%" y="885" width="0.0143%" height="15" fill="rgb(232,142,8)" fg:x="73569" fg:w="15"/><text x="70.1493%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="69.8993%" y="869" width="0.0143%" height="15" fill="rgb(224,92,44)" fg:x="73569" fg:w="15"/><text x="70.1493%" y="879.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="69.8993%" y="853" width="0.0143%" height="15" fill="rgb(214,169,17)" fg:x="73569" fg:w="15"/><text x="70.1493%" y="863.50"></text></g><g><title>enqueue_task_fair (18 samples, 0.02%)</title><rect x="69.9335%" y="533" width="0.0171%" height="15" fill="rgb(210,59,37)" fg:x="73605" fg:w="18"/><text x="70.1835%" y="543.50"></text></g><g><title>enqueue_entity (13 samples, 0.01%)</title><rect x="69.9382%" y="517" width="0.0124%" height="15" fill="rgb(214,116,48)" fg:x="73610" fg:w="13"/><text x="70.1882%" y="527.50"></text></g><g><title>ttwu_do_activate (24 samples, 0.02%)</title><rect x="69.9335%" y="565" width="0.0228%" height="15" fill="rgb(244,191,6)" fg:x="73605" fg:w="24"/><text x="70.1835%" y="575.50"></text></g><g><title>enqueue_task (24 samples, 0.02%)</title><rect x="69.9335%" y="549" width="0.0228%" height="15" fill="rgb(241,50,52)" fg:x="73605" fg:w="24"/><text x="70.1835%" y="559.50"></text></g><g><title>__x64_sys_futex (38 samples, 0.04%)</title><rect x="69.9230%" y="645" width="0.0361%" height="15" fill="rgb(236,75,39)" fg:x="73594" fg:w="38"/><text x="70.1730%" y="655.50"></text></g><g><title>do_futex (38 samples, 0.04%)</title><rect x="69.9230%" y="629" width="0.0361%" height="15" fill="rgb(236,99,0)" fg:x="73594" fg:w="38"/><text x="70.1730%" y="639.50"></text></g><g><title>futex_wake (38 samples, 0.04%)</title><rect x="69.9230%" y="613" width="0.0361%" height="15" fill="rgb(207,202,15)" fg:x="73594" fg:w="38"/><text x="70.1730%" y="623.50"></text></g><g><title>wake_up_q (34 samples, 0.03%)</title><rect x="69.9268%" y="597" width="0.0323%" height="15" fill="rgb(233,207,14)" fg:x="73598" fg:w="34"/><text x="70.1768%" y="607.50"></text></g><g><title>try_to_wake_up (34 samples, 0.03%)</title><rect x="69.9268%" y="581" width="0.0323%" height="15" fill="rgb(226,27,51)" fg:x="73598" fg:w="34"/><text x="70.1768%" y="591.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (45 samples, 0.04%)</title><rect x="69.9221%" y="741" width="0.0428%" height="15" fill="rgb(206,104,42)" fg:x="73593" fg:w="45"/><text x="70.1721%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (45 samples, 0.04%)</title><rect x="69.9221%" y="725" width="0.0428%" height="15" fill="rgb(212,225,4)" fg:x="73593" fg:w="45"/><text x="70.1721%" y="735.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (45 samples, 0.04%)</title><rect x="69.9221%" y="709" width="0.0428%" height="15" fill="rgb(233,96,42)" fg:x="73593" fg:w="45"/><text x="70.1721%" y="719.50"></text></g><g><title>__GI___pthread_cond_signal (45 samples, 0.04%)</title><rect x="69.9221%" y="693" width="0.0428%" height="15" fill="rgb(229,21,32)" fg:x="73593" fg:w="45"/><text x="70.1721%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (44 samples, 0.04%)</title><rect x="69.9230%" y="677" width="0.0418%" height="15" fill="rgb(226,216,24)" fg:x="73594" fg:w="44"/><text x="70.1730%" y="687.50"></text></g><g><title>do_syscall_64 (44 samples, 0.04%)</title><rect x="69.9230%" y="661" width="0.0418%" height="15" fill="rgb(221,163,17)" fg:x="73594" fg:w="44"/><text x="70.1730%" y="671.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (51 samples, 0.05%)</title><rect x="69.9173%" y="789" width="0.0485%" height="15" fill="rgb(216,216,42)" fg:x="73588" fg:w="51"/><text x="70.1673%" y="799.50"></text></g><g><title>parking::Unparker::unpark (48 samples, 0.05%)</title><rect x="69.9202%" y="773" width="0.0456%" height="15" fill="rgb(240,118,7)" fg:x="73591" fg:w="48"/><text x="70.1702%" y="783.50"></text></g><g><title>parking::Inner::unpark (48 samples, 0.05%)</title><rect x="69.9202%" y="757" width="0.0456%" height="15" fill="rgb(221,67,37)" fg:x="73591" fg:w="48"/><text x="70.1702%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (54 samples, 0.05%)</title><rect x="69.9173%" y="821" width="0.0513%" height="15" fill="rgb(241,32,44)" fg:x="73588" fg:w="54"/><text x="70.1673%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (54 samples, 0.05%)</title><rect x="69.9173%" y="805" width="0.0513%" height="15" fill="rgb(235,204,43)" fg:x="73588" fg:w="54"/><text x="70.1673%" y="815.50"></text></g><g><title>async_executor::State::notify (62 samples, 0.06%)</title><rect x="69.9145%" y="837" width="0.0589%" height="15" fill="rgb(213,116,10)" fg:x="73585" fg:w="62"/><text x="70.1645%" y="847.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (66 samples, 0.06%)</title><rect x="69.9145%" y="853" width="0.0627%" height="15" fill="rgb(239,15,48)" fg:x="73585" fg:w="66"/><text x="70.1645%" y="863.50"></text></g><g><title>event_listener::List::notify (70 samples, 0.07%)</title><rect x="69.9135%" y="917" width="0.0665%" height="15" fill="rgb(207,123,36)" fg:x="73584" fg:w="70"/><text x="70.1635%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (70 samples, 0.07%)</title><rect x="69.9135%" y="901" width="0.0665%" height="15" fill="rgb(209,103,30)" fg:x="73584" fg:w="70"/><text x="70.1635%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (70 samples, 0.07%)</title><rect x="69.9135%" y="885" width="0.0665%" height="15" fill="rgb(238,100,19)" fg:x="73584" fg:w="70"/><text x="70.1635%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (69 samples, 0.07%)</title><rect x="69.9145%" y="869" width="0.0656%" height="15" fill="rgb(244,30,14)" fg:x="73585" fg:w="69"/><text x="70.1645%" y="879.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,962 samples, 1.86%)</title><rect x="68.9463%" y="949" width="1.8641%" height="15" fill="rgb(249,174,6)" fg:x="72566" fg:w="1962"/><text x="69.1963%" y="959.50">a..</text></g><g><title>event_listener::Event::notify (1,045 samples, 0.99%)</title><rect x="69.8176%" y="933" width="0.9929%" height="15" fill="rgb(235,213,41)" fg:x="73483" fg:w="1045"/><text x="70.0676%" y="943.50"></text></g><g><title>event_listener::full_fence (874 samples, 0.83%)</title><rect x="69.9800%" y="917" width="0.8304%" height="15" fill="rgb(213,118,6)" fg:x="73654" fg:w="874"/><text x="70.2300%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (873 samples, 0.83%)</title><rect x="69.9810%" y="901" width="0.8295%" height="15" fill="rgb(235,44,51)" fg:x="73655" fg:w="873"/><text x="70.2310%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (873 samples, 0.83%)</title><rect x="69.9810%" y="885" width="0.8295%" height="15" fill="rgb(217,9,53)" fg:x="73655" fg:w="873"/><text x="70.2310%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (873 samples, 0.83%)</title><rect x="69.9810%" y="869" width="0.8295%" height="15" fill="rgb(237,172,34)" fg:x="73655" fg:w="873"/><text x="70.2310%" y="879.50"></text></g><g><title>_raw_spin_lock (11 samples, 0.01%)</title><rect x="70.9178%" y="709" width="0.0105%" height="15" fill="rgb(206,206,11)" fg:x="74641" fg:w="11"/><text x="71.1678%" y="719.50"></text></g><g><title>__x64_sys_futex (55 samples, 0.05%)</title><rect x="70.8893%" y="757" width="0.0523%" height="15" fill="rgb(214,149,29)" fg:x="74611" fg:w="55"/><text x="71.1393%" y="767.50"></text></g><g><title>do_futex (47 samples, 0.04%)</title><rect x="70.8969%" y="741" width="0.0447%" height="15" fill="rgb(208,123,3)" fg:x="74619" fg:w="47"/><text x="71.1469%" y="751.50"></text></g><g><title>futex_wake (45 samples, 0.04%)</title><rect x="70.8988%" y="725" width="0.0428%" height="15" fill="rgb(229,126,4)" fg:x="74621" fg:w="45"/><text x="71.1488%" y="735.50"></text></g><g><title>syscall_exit_to_user_mode (62 samples, 0.06%)</title><rect x="70.9425%" y="757" width="0.0589%" height="15" fill="rgb(222,92,36)" fg:x="74667" fg:w="62"/><text x="71.1925%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (182 samples, 0.17%)</title><rect x="70.8361%" y="901" width="0.1729%" height="15" fill="rgb(216,39,41)" fg:x="74555" fg:w="182"/><text x="71.0861%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (180 samples, 0.17%)</title><rect x="70.8380%" y="885" width="0.1710%" height="15" fill="rgb(253,127,28)" fg:x="74557" fg:w="180"/><text x="71.0880%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (180 samples, 0.17%)</title><rect x="70.8380%" y="869" width="0.1710%" height="15" fill="rgb(249,152,51)" fg:x="74557" fg:w="180"/><text x="71.0880%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (180 samples, 0.17%)</title><rect x="70.8380%" y="853" width="0.1710%" height="15" fill="rgb(209,123,42)" fg:x="74557" fg:w="180"/><text x="71.0880%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (177 samples, 0.17%)</title><rect x="70.8409%" y="837" width="0.1682%" height="15" fill="rgb(241,118,22)" fg:x="74560" fg:w="177"/><text x="71.0909%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (177 samples, 0.17%)</title><rect x="70.8409%" y="821" width="0.1682%" height="15" fill="rgb(208,25,7)" fg:x="74560" fg:w="177"/><text x="71.0909%" y="831.50"></text></g><g><title>__GI___lll_lock_wake (147 samples, 0.14%)</title><rect x="70.8694%" y="805" width="0.1397%" height="15" fill="rgb(243,144,39)" fg:x="74590" fg:w="147"/><text x="71.1194%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (130 samples, 0.12%)</title><rect x="70.8855%" y="789" width="0.1235%" height="15" fill="rgb(250,50,5)" fg:x="74607" fg:w="130"/><text x="71.1355%" y="799.50"></text></g><g><title>do_syscall_64 (128 samples, 0.12%)</title><rect x="70.8874%" y="773" width="0.1216%" height="15" fill="rgb(207,67,11)" fg:x="74609" fg:w="128"/><text x="71.1374%" y="783.50"></text></g><g><title>futex_q_unlock (11 samples, 0.01%)</title><rect x="71.1031%" y="709" width="0.0105%" height="15" fill="rgb(245,204,40)" fg:x="74836" fg:w="11"/><text x="71.3531%" y="719.50"></text></g><g><title>__x64_sys_futex (34 samples, 0.03%)</title><rect x="71.0831%" y="773" width="0.0323%" height="15" fill="rgb(238,228,24)" fg:x="74815" fg:w="34"/><text x="71.3331%" y="783.50"></text></g><g><title>do_futex (32 samples, 0.03%)</title><rect x="71.0850%" y="757" width="0.0304%" height="15" fill="rgb(217,116,22)" fg:x="74817" fg:w="32"/><text x="71.3350%" y="767.50"></text></g><g><title>futex_wait (31 samples, 0.03%)</title><rect x="71.0860%" y="741" width="0.0295%" height="15" fill="rgb(234,98,12)" fg:x="74818" fg:w="31"/><text x="71.3360%" y="751.50"></text></g><g><title>futex_wait_setup (28 samples, 0.03%)</title><rect x="71.0888%" y="725" width="0.0266%" height="15" fill="rgb(242,170,50)" fg:x="74821" fg:w="28"/><text x="71.3388%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (57 samples, 0.05%)</title><rect x="71.0803%" y="805" width="0.0542%" height="15" fill="rgb(235,7,5)" fg:x="74812" fg:w="57"/><text x="71.3303%" y="815.50"></text></g><g><title>do_syscall_64 (56 samples, 0.05%)</title><rect x="71.0812%" y="789" width="0.0532%" height="15" fill="rgb(241,114,28)" fg:x="74813" fg:w="56"/><text x="71.3312%" y="799.50"></text></g><g><title>syscall_exit_to_user_mode (18 samples, 0.02%)</title><rect x="71.1173%" y="773" width="0.0171%" height="15" fill="rgb(246,112,42)" fg:x="74851" fg:w="18"/><text x="71.3673%" y="783.50"></text></g><g><title>__GI___lll_lock_wait (80 samples, 0.08%)</title><rect x="71.0603%" y="821" width="0.0760%" height="15" fill="rgb(248,228,14)" fg:x="74791" fg:w="80"/><text x="71.3103%" y="831.50"></text></g><g><title>event_listener::Inner::lock (135 samples, 0.13%)</title><rect x="71.0090%" y="901" width="0.1283%" height="15" fill="rgb(208,133,18)" fg:x="74737" fg:w="135"/><text x="71.2590%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (135 samples, 0.13%)</title><rect x="71.0090%" y="885" width="0.1283%" height="15" fill="rgb(207,35,49)" fg:x="74737" fg:w="135"/><text x="71.2590%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (130 samples, 0.12%)</title><rect x="71.0138%" y="869" width="0.1235%" height="15" fill="rgb(205,68,36)" fg:x="74742" fg:w="130"/><text x="71.2638%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (124 samples, 0.12%)</title><rect x="71.0195%" y="853" width="0.1178%" height="15" fill="rgb(245,62,40)" fg:x="74748" fg:w="124"/><text x="71.2695%" y="863.50"></text></g><g><title>___pthread_mutex_lock (124 samples, 0.12%)</title><rect x="71.0195%" y="837" width="0.1178%" height="15" fill="rgb(228,27,24)" fg:x="74748" fg:w="124"/><text x="71.2695%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (332 samples, 0.32%)</title><rect x="70.8352%" y="917" width="0.3154%" height="15" fill="rgb(253,19,12)" fg:x="74554" fg:w="332"/><text x="71.0852%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (382 samples, 0.36%)</title><rect x="70.8133%" y="949" width="0.3629%" height="15" fill="rgb(232,28,20)" fg:x="74531" fg:w="382"/><text x="71.0633%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (360 samples, 0.34%)</title><rect x="70.8342%" y="933" width="0.3420%" height="15" fill="rgb(218,35,51)" fg:x="74553" fg:w="360"/><text x="71.0842%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (27 samples, 0.03%)</title><rect x="71.1506%" y="917" width="0.0257%" height="15" fill="rgb(212,90,40)" fg:x="74886" fg:w="27"/><text x="71.4006%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="71.1506%" y="901" width="0.0257%" height="15" fill="rgb(220,172,12)" fg:x="74886" fg:w="27"/><text x="71.4006%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.03%)</title><rect x="71.1506%" y="885" width="0.0257%" height="15" fill="rgb(226,159,20)" fg:x="74886" fg:w="27"/><text x="71.4006%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.03%)</title><rect x="71.1506%" y="869" width="0.0257%" height="15" fill="rgb(234,205,16)" fg:x="74886" fg:w="27"/><text x="71.4006%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="71.1781%" y="933" width="0.0390%" height="15" fill="rgb(207,9,39)" fg:x="74915" fg:w="41"/><text x="71.4281%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (41 samples, 0.04%)</title><rect x="71.1781%" y="917" width="0.0390%" height="15" fill="rgb(249,143,15)" fg:x="74915" fg:w="41"/><text x="71.4281%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (41 samples, 0.04%)</title><rect x="71.1781%" y="901" width="0.0390%" height="15" fill="rgb(253,133,29)" fg:x="74915" fg:w="41"/><text x="71.4281%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (32 samples, 0.03%)</title><rect x="71.2171%" y="933" width="0.0304%" height="15" fill="rgb(221,187,0)" fg:x="74956" fg:w="32"/><text x="71.4671%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (28 samples, 0.03%)</title><rect x="71.2209%" y="917" width="0.0266%" height="15" fill="rgb(205,204,26)" fg:x="74960" fg:w="28"/><text x="71.4709%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="71.2209%" y="901" width="0.0266%" height="15" fill="rgb(224,68,54)" fg:x="74960" fg:w="28"/><text x="71.4709%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (28 samples, 0.03%)</title><rect x="71.2209%" y="885" width="0.0266%" height="15" fill="rgb(209,67,4)" fg:x="74960" fg:w="28"/><text x="71.4709%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (28 samples, 0.03%)</title><rect x="71.2209%" y="869" width="0.0266%" height="15" fill="rgb(228,229,18)" fg:x="74960" fg:w="28"/><text x="71.4709%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (28 samples, 0.03%)</title><rect x="71.2209%" y="853" width="0.0266%" height="15" fill="rgb(231,89,13)" fg:x="74960" fg:w="28"/><text x="71.4709%" y="863.50"></text></g><g><title>event_listener::Inner::lock (24 samples, 0.02%)</title><rect x="71.2475%" y="933" width="0.0228%" height="15" fill="rgb(210,182,18)" fg:x="74988" fg:w="24"/><text x="71.4975%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="71.2475%" y="917" width="0.0228%" height="15" fill="rgb(240,105,2)" fg:x="74988" fg:w="24"/><text x="71.4975%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.02%)</title><rect x="71.2485%" y="901" width="0.0219%" height="15" fill="rgb(207,170,50)" fg:x="74989" fg:w="23"/><text x="71.4985%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (23 samples, 0.02%)</title><rect x="71.2485%" y="885" width="0.0219%" height="15" fill="rgb(232,133,24)" fg:x="74989" fg:w="23"/><text x="71.4985%" y="895.50"></text></g><g><title>___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="71.2485%" y="869" width="0.0219%" height="15" fill="rgb(235,166,27)" fg:x="74989" fg:w="23"/><text x="71.4985%" y="879.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,575 samples, 3.40%)</title><rect x="67.8879%" y="965" width="3.3967%" height="15" fill="rgb(209,19,13)" fg:x="71452" fg:w="3575"/><text x="68.1379%" y="975.50">&lt;as..</text></g><g><title>event_listener::Event::listen (114 samples, 0.11%)</title><rect x="71.1762%" y="949" width="0.1083%" height="15" fill="rgb(226,79,39)" fg:x="74913" fg:w="114"/><text x="71.4262%" y="959.50"></text></g><g><title>event_listener::full_fence (13 samples, 0.01%)</title><rect x="71.2722%" y="933" width="0.0124%" height="15" fill="rgb(222,163,10)" fg:x="75014" fg:w="13"/><text x="71.5222%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (12 samples, 0.01%)</title><rect x="71.2732%" y="917" width="0.0114%" height="15" fill="rgb(214,44,19)" fg:x="75015" fg:w="12"/><text x="71.5232%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (12 samples, 0.01%)</title><rect x="71.2732%" y="901" width="0.0114%" height="15" fill="rgb(210,217,13)" fg:x="75015" fg:w="12"/><text x="71.5232%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="71.2732%" y="885" width="0.0114%" height="15" fill="rgb(237,61,54)" fg:x="75015" fg:w="12"/><text x="71.5232%" y="895.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (18 samples, 0.02%)</title><rect x="71.2846%" y="965" width="0.0171%" height="15" fill="rgb(226,184,24)" fg:x="75027" fg:w="18"/><text x="71.5346%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (822 samples, 0.78%)</title><rect x="71.3017%" y="965" width="0.7810%" height="15" fill="rgb(223,226,4)" fg:x="75045" fg:w="822"/><text x="71.5517%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (210 samples, 0.20%)</title><rect x="72.0922%" y="949" width="0.1995%" height="15" fill="rgb(210,26,41)" fg:x="75877" fg:w="210"/><text x="72.3422%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (626 samples, 0.59%)</title><rect x="72.3012%" y="917" width="0.5948%" height="15" fill="rgb(220,221,6)" fg:x="76097" fg:w="626"/><text x="72.5512%" y="927.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="72.9368%" y="741" width="0.0114%" height="15" fill="rgb(225,89,49)" fg:x="76766" fg:w="12"/><text x="73.1868%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (21 samples, 0.02%)</title><rect x="73.0043%" y="709" width="0.0200%" height="15" fill="rgb(218,70,45)" fg:x="76837" fg:w="21"/><text x="73.2543%" y="719.50"></text></g><g><title> (21 samples, 0.02%)</title><rect x="73.0043%" y="693" width="0.0200%" height="15" fill="rgb(238,166,21)" fg:x="76837" fg:w="21"/><text x="73.2543%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (83 samples, 0.08%)</title><rect x="72.9558%" y="741" width="0.0789%" height="15" fill="rgb(224,141,44)" fg:x="76786" fg:w="83"/><text x="73.2058%" y="751.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (70 samples, 0.07%)</title><rect x="72.9682%" y="725" width="0.0665%" height="15" fill="rgb(230,12,49)" fg:x="76799" fg:w="70"/><text x="73.2182%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (136 samples, 0.13%)</title><rect x="72.9330%" y="773" width="0.1292%" height="15" fill="rgb(212,174,12)" fg:x="76762" fg:w="136"/><text x="73.1830%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (136 samples, 0.13%)</title><rect x="72.9330%" y="757" width="0.1292%" height="15" fill="rgb(246,67,9)" fg:x="76762" fg:w="136"/><text x="73.1830%" y="767.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (28 samples, 0.03%)</title><rect x="73.0356%" y="741" width="0.0266%" height="15" fill="rgb(239,35,23)" fg:x="76870" fg:w="28"/><text x="73.2856%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (138 samples, 0.13%)</title><rect x="72.9330%" y="805" width="0.1311%" height="15" fill="rgb(211,167,0)" fg:x="76762" fg:w="138"/><text x="73.1830%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (138 samples, 0.13%)</title><rect x="72.9330%" y="789" width="0.1311%" height="15" fill="rgb(225,119,45)" fg:x="76762" fg:w="138"/><text x="73.1830%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (160 samples, 0.15%)</title><rect x="72.9150%" y="821" width="0.1520%" height="15" fill="rgb(210,162,6)" fg:x="76743" fg:w="160"/><text x="73.1650%" y="831.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,487 samples, 5.21%)</title><rect x="67.8584%" y="981" width="5.2133%" height="15" fill="rgb(208,118,35)" fg:x="71421" fg:w="5487"/><text x="68.1084%" y="991.50">&lt;async..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,041 samples, 0.99%)</title><rect x="72.0827%" y="965" width="0.9891%" height="15" fill="rgb(239,4,53)" fg:x="75867" fg:w="1041"/><text x="72.3327%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (821 samples, 0.78%)</title><rect x="72.2917%" y="949" width="0.7800%" height="15" fill="rgb(213,130,21)" fg:x="76087" fg:w="821"/><text x="72.5417%" y="959.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (821 samples, 0.78%)</title><rect x="72.2917%" y="933" width="0.7800%" height="15" fill="rgb(235,148,0)" fg:x="76087" fg:w="821"/><text x="72.5417%" y="943.50"></text></g><g><title>alloc::alloc::box_free (185 samples, 0.18%)</title><rect x="72.8960%" y="917" width="0.1758%" height="15" fill="rgb(244,224,18)" fg:x="76723" fg:w="185"/><text x="73.1460%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (185 samples, 0.18%)</title><rect x="72.8960%" y="901" width="0.1758%" height="15" fill="rgb(211,214,4)" fg:x="76723" fg:w="185"/><text x="73.1460%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (185 samples, 0.18%)</title><rect x="72.8960%" y="885" width="0.1758%" height="15" fill="rgb(206,119,25)" fg:x="76723" fg:w="185"/><text x="73.1460%" y="895.50"></text></g><g><title>__rg_dealloc (185 samples, 0.18%)</title><rect x="72.8960%" y="869" width="0.1758%" height="15" fill="rgb(243,93,47)" fg:x="76723" fg:w="185"/><text x="73.1460%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (185 samples, 0.18%)</title><rect x="72.8960%" y="853" width="0.1758%" height="15" fill="rgb(224,194,6)" fg:x="76723" fg:w="185"/><text x="73.1460%" y="863.50"></text></g><g><title>rust_dealloc (174 samples, 0.17%)</title><rect x="72.9064%" y="837" width="0.1653%" height="15" fill="rgb(243,229,6)" fg:x="76734" fg:w="174"/><text x="73.1564%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,933 samples, 5.64%)</title><rect x="67.8147%" y="997" width="5.6371%" height="15" fill="rgb(207,23,50)" fg:x="71375" fg:w="5933"/><text x="68.0647%" y="1007.50">&lt;async_..</text></g><g><title>__memcpy_avx_unaligned_erms (400 samples, 0.38%)</title><rect x="73.0717%" y="981" width="0.3800%" height="15" fill="rgb(253,192,32)" fg:x="76908" fg:w="400"/><text x="73.3217%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,398 samples, 6.08%)</title><rect x="67.7872%" y="1157" width="6.0789%" height="15" fill="rgb(213,21,6)" fg:x="71346" fg:w="6398"/><text x="68.0372%" y="1167.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,394 samples, 6.08%)</title><rect x="67.7910%" y="1141" width="6.0751%" height="15" fill="rgb(243,151,13)" fg:x="71350" fg:w="6394"/><text x="68.0410%" y="1151.50">std::thr..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,394 samples, 6.08%)</title><rect x="67.7910%" y="1125" width="6.0751%" height="15" fill="rgb(233,165,41)" fg:x="71350" fg:w="6394"/><text x="68.0410%" y="1135.50">async_st..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,394 samples, 6.08%)</title><rect x="67.7910%" y="1109" width="6.0751%" height="15" fill="rgb(246,176,45)" fg:x="71350" fg:w="6394"/><text x="68.0410%" y="1119.50">&lt;async_s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,394 samples, 6.08%)</title><rect x="67.7910%" y="1093" width="6.0751%" height="15" fill="rgb(217,170,52)" fg:x="71350" fg:w="6394"/><text x="68.0410%" y="1103.50">&lt;core::f..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,394 samples, 6.08%)</title><rect x="67.7910%" y="1077" width="6.0751%" height="15" fill="rgb(214,203,54)" fg:x="71350" fg:w="6394"/><text x="68.0410%" y="1087.50">tremor_r..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,394 samples, 6.08%)</title><rect x="67.7910%" y="1061" width="6.0751%" height="15" fill="rgb(248,215,49)" fg:x="71350" fg:w="6394"/><text x="68.0410%" y="1071.50">&lt;async_s..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,394 samples, 6.08%)</title><rect x="67.7910%" y="1045" width="6.0751%" height="15" fill="rgb(208,46,10)" fg:x="71350" fg:w="6394"/><text x="68.0410%" y="1055.50">&lt;tremor_..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,394 samples, 6.08%)</title><rect x="67.7910%" y="1029" width="6.0751%" height="15" fill="rgb(254,5,31)" fg:x="71350" fg:w="6394"/><text x="68.0410%" y="1039.50">&lt;async_s..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,394 samples, 6.08%)</title><rect x="67.7910%" y="1013" width="6.0751%" height="15" fill="rgb(222,104,33)" fg:x="71350" fg:w="6394"/><text x="68.0410%" y="1023.50">&lt;tremor_..</text></g><g><title>__memcpy_avx_unaligned_erms (436 samples, 0.41%)</title><rect x="73.4518%" y="997" width="0.4143%" height="15" fill="rgb(248,49,16)" fg:x="77308" fg:w="436"/><text x="73.7018%" y="1007.50"></text></g><g><title>tremor_common::time::nanotime (13 samples, 0.01%)</title><rect x="73.8660%" y="1157" width="0.0124%" height="15" fill="rgb(232,198,41)" fg:x="77744" fg:w="13"/><text x="74.1160%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (13 samples, 0.01%)</title><rect x="73.8660%" y="1141" width="0.0124%" height="15" fill="rgb(214,125,3)" fg:x="77744" fg:w="13"/><text x="74.1160%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (13 samples, 0.01%)</title><rect x="73.8660%" y="1125" width="0.0124%" height="15" fill="rgb(229,220,28)" fg:x="77744" fg:w="13"/><text x="74.1160%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (13 samples, 0.01%)</title><rect x="73.8660%" y="1109" width="0.0124%" height="15" fill="rgb(222,64,37)" fg:x="77744" fg:w="13"/><text x="74.1160%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (54 samples, 0.05%)</title><rect x="73.8784%" y="1157" width="0.0513%" height="15" fill="rgb(249,184,13)" fg:x="77757" fg:w="54"/><text x="74.1284%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (12 samples, 0.01%)</title><rect x="73.9316%" y="1157" width="0.0114%" height="15" fill="rgb(252,176,6)" fg:x="77813" fg:w="12"/><text x="74.1816%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="73.9316%" y="1141" width="0.0114%" height="15" fill="rgb(228,153,7)" fg:x="77813" fg:w="12"/><text x="74.1816%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (12 samples, 0.01%)</title><rect x="73.9316%" y="1125" width="0.0114%" height="15" fill="rgb(242,193,5)" fg:x="77813" fg:w="12"/><text x="74.1816%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (12 samples, 0.01%)</title><rect x="73.9430%" y="1157" width="0.0114%" height="15" fill="rgb(232,140,9)" fg:x="77825" fg:w="12"/><text x="74.1930%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="74.0247%" y="1045" width="0.0133%" height="15" fill="rgb(213,222,16)" fg:x="77911" fg:w="14"/><text x="74.2747%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="74.0247%" y="1029" width="0.0133%" height="15" fill="rgb(222,75,50)" fg:x="77911" fg:w="14"/><text x="74.2747%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="74.0247%" y="1013" width="0.0133%" height="15" fill="rgb(205,180,2)" fg:x="77911" fg:w="14"/><text x="74.2747%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="74.0247%" y="997" width="0.0133%" height="15" fill="rgb(216,34,7)" fg:x="77911" fg:w="14"/><text x="74.2747%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="74.0247%" y="981" width="0.0133%" height="15" fill="rgb(253,16,32)" fg:x="77911" fg:w="14"/><text x="74.2747%" y="991.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="74.0247%" y="965" width="0.0133%" height="15" fill="rgb(208,97,28)" fg:x="77911" fg:w="14"/><text x="74.2747%" y="975.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="74.0247%" y="949" width="0.0133%" height="15" fill="rgb(225,92,11)" fg:x="77911" fg:w="14"/><text x="74.2747%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="74.0247%" y="933" width="0.0133%" height="15" fill="rgb(243,38,12)" fg:x="77911" fg:w="14"/><text x="74.2747%" y="943.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (48 samples, 0.05%)</title><rect x="74.0124%" y="1141" width="0.0456%" height="15" fill="rgb(208,139,16)" fg:x="77898" fg:w="48"/><text x="74.2624%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="74.0247%" y="1125" width="0.0333%" height="15" fill="rgb(227,24,9)" fg:x="77911" fg:w="35"/><text x="74.2747%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="74.0247%" y="1109" width="0.0333%" height="15" fill="rgb(206,62,11)" fg:x="77911" fg:w="35"/><text x="74.2747%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35 samples, 0.03%)</title><rect x="74.0247%" y="1093" width="0.0333%" height="15" fill="rgb(228,134,27)" fg:x="77911" fg:w="35"/><text x="74.2747%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (35 samples, 0.03%)</title><rect x="74.0247%" y="1077" width="0.0333%" height="15" fill="rgb(205,55,33)" fg:x="77911" fg:w="35"/><text x="74.2747%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35 samples, 0.03%)</title><rect x="74.0247%" y="1061" width="0.0333%" height="15" fill="rgb(243,75,43)" fg:x="77911" fg:w="35"/><text x="74.2747%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (21 samples, 0.02%)</title><rect x="74.0380%" y="1045" width="0.0200%" height="15" fill="rgb(223,27,42)" fg:x="77925" fg:w="21"/><text x="74.2880%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="74.0380%" y="1029" width="0.0200%" height="15" fill="rgb(232,189,33)" fg:x="77925" fg:w="21"/><text x="74.2880%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (126 samples, 0.12%)</title><rect x="73.9572%" y="1157" width="0.1197%" height="15" fill="rgb(210,9,39)" fg:x="77840" fg:w="126"/><text x="74.2072%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (20 samples, 0.02%)</title><rect x="74.0770%" y="1157" width="0.0190%" height="15" fill="rgb(242,85,26)" fg:x="77966" fg:w="20"/><text x="74.3270%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (17 samples, 0.02%)</title><rect x="74.2461%" y="1013" width="0.0162%" height="15" fill="rgb(248,44,4)" fg:x="78144" fg:w="17"/><text x="74.4961%" y="1023.50"></text></g><g><title>core::mem::replace (17 samples, 0.02%)</title><rect x="74.2461%" y="997" width="0.0162%" height="15" fill="rgb(250,96,46)" fg:x="78144" fg:w="17"/><text x="74.4961%" y="1007.50"></text></g><g><title>core::ptr::read (17 samples, 0.02%)</title><rect x="74.2461%" y="981" width="0.0162%" height="15" fill="rgb(229,116,26)" fg:x="78144" fg:w="17"/><text x="74.4961%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (162 samples, 0.15%)</title><rect x="74.3411%" y="997" width="0.1539%" height="15" fill="rgb(246,94,34)" fg:x="78244" fg:w="162"/><text x="74.5911%" y="1007.50"></text></g><g><title>core::mem::replace (162 samples, 0.15%)</title><rect x="74.3411%" y="981" width="0.1539%" height="15" fill="rgb(251,73,21)" fg:x="78244" fg:w="162"/><text x="74.5911%" y="991.50"></text></g><g><title>core::ptr::read (161 samples, 0.15%)</title><rect x="74.3420%" y="965" width="0.1530%" height="15" fill="rgb(254,121,25)" fg:x="78245" fg:w="161"/><text x="74.5920%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (308 samples, 0.29%)</title><rect x="74.2622%" y="1013" width="0.2926%" height="15" fill="rgb(215,161,49)" fg:x="78161" fg:w="308"/><text x="74.5122%" y="1023.50"></text></g><g><title>core::mem::drop (63 samples, 0.06%)</title><rect x="74.4950%" y="997" width="0.0599%" height="15" fill="rgb(221,43,13)" fg:x="78406" fg:w="63"/><text x="74.7450%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (63 samples, 0.06%)</title><rect x="74.4950%" y="981" width="0.0599%" height="15" fill="rgb(249,5,37)" fg:x="78406" fg:w="63"/><text x="74.7450%" y="991.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="74.5549%" y="997" width="0.0133%" height="15" fill="rgb(226,25,44)" fg:x="78469" fg:w="14"/><text x="74.8049%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::done (11 samples, 0.01%)</title><rect x="74.5824%" y="965" width="0.0105%" height="15" fill="rgb(238,189,16)" fg:x="78498" fg:w="11"/><text x="74.8324%" y="975.50"></text></g><g><title>std::thread::panicking (11 samples, 0.01%)</title><rect x="74.5824%" y="949" width="0.0105%" height="15" fill="rgb(251,186,8)" fg:x="78498" fg:w="11"/><text x="74.8324%" y="959.50"></text></g><g><title>std::panicking::panicking (11 samples, 0.01%)</title><rect x="74.5824%" y="933" width="0.0105%" height="15" fill="rgb(254,34,31)" fg:x="78498" fg:w="11"/><text x="74.8324%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (11 samples, 0.01%)</title><rect x="74.5824%" y="917" width="0.0105%" height="15" fill="rgb(225,215,27)" fg:x="78498" fg:w="11"/><text x="74.8324%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="74.5929%" y="949" width="0.0171%" height="15" fill="rgb(221,192,48)" fg:x="78509" fg:w="18"/><text x="74.8429%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (317 samples, 0.30%)</title><rect x="74.6100%" y="933" width="0.3012%" height="15" fill="rgb(219,137,20)" fg:x="78527" fg:w="317"/><text x="74.8600%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (388 samples, 0.37%)</title><rect x="74.5549%" y="1013" width="0.3686%" height="15" fill="rgb(219,84,11)" fg:x="78469" fg:w="388"/><text x="74.8049%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (374 samples, 0.36%)</title><rect x="74.5682%" y="997" width="0.3553%" height="15" fill="rgb(224,10,23)" fg:x="78483" fg:w="374"/><text x="74.8182%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (374 samples, 0.36%)</title><rect x="74.5682%" y="981" width="0.3553%" height="15" fill="rgb(248,22,39)" fg:x="78483" fg:w="374"/><text x="74.8182%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (348 samples, 0.33%)</title><rect x="74.5929%" y="965" width="0.3306%" height="15" fill="rgb(212,154,20)" fg:x="78509" fg:w="348"/><text x="74.8429%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (330 samples, 0.31%)</title><rect x="74.6100%" y="949" width="0.3135%" height="15" fill="rgb(236,199,50)" fg:x="78527" fg:w="330"/><text x="74.8600%" y="959.50"></text></g><g><title>___pthread_mutex_unlock (13 samples, 0.01%)</title><rect x="74.9112%" y="933" width="0.0124%" height="15" fill="rgb(211,9,17)" fg:x="78844" fg:w="13"/><text x="75.1612%" y="943.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="74.9378%" y="965" width="0.0114%" height="15" fill="rgb(243,216,36)" fg:x="78872" fg:w="12"/><text x="75.1878%" y="975.50"></text></g><g><title>core::task::wake::Waker::will_wake (38 samples, 0.04%)</title><rect x="74.9235%" y="1013" width="0.0361%" height="15" fill="rgb(250,2,10)" fg:x="78857" fg:w="38"/><text x="75.1735%" y="1023.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (38 samples, 0.04%)</title><rect x="74.9235%" y="997" width="0.0361%" height="15" fill="rgb(226,50,48)" fg:x="78857" fg:w="38"/><text x="75.1735%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (23 samples, 0.02%)</title><rect x="74.9378%" y="981" width="0.0219%" height="15" fill="rgb(243,81,16)" fg:x="78872" fg:w="23"/><text x="75.1878%" y="991.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="74.9492%" y="965" width="0.0105%" height="15" fill="rgb(250,14,2)" fg:x="78884" fg:w="11"/><text x="75.1992%" y="975.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="74.9710%" y="981" width="0.0114%" height="15" fill="rgb(233,135,29)" fg:x="78907" fg:w="12"/><text x="75.2210%" y="991.50"></text></g><g><title>std::sync::poison::Flag::borrow (12 samples, 0.01%)</title><rect x="74.9710%" y="965" width="0.0114%" height="15" fill="rgb(224,64,43)" fg:x="78907" fg:w="12"/><text x="75.2210%" y="975.50"></text></g><g><title>std::thread::panicking (12 samples, 0.01%)</title><rect x="74.9710%" y="949" width="0.0114%" height="15" fill="rgb(238,84,13)" fg:x="78907" fg:w="12"/><text x="75.2210%" y="959.50"></text></g><g><title>std::panicking::panicking (12 samples, 0.01%)</title><rect x="74.9710%" y="933" width="0.0114%" height="15" fill="rgb(253,48,26)" fg:x="78907" fg:w="12"/><text x="75.2210%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (12 samples, 0.01%)</title><rect x="74.9710%" y="917" width="0.0114%" height="15" fill="rgb(205,223,31)" fg:x="78907" fg:w="12"/><text x="75.2210%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="74.9710%" y="901" width="0.0114%" height="15" fill="rgb(221,41,32)" fg:x="78907" fg:w="12"/><text x="75.2210%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="74.9710%" y="885" width="0.0114%" height="15" fill="rgb(213,158,31)" fg:x="78907" fg:w="12"/><text x="75.2210%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,274 samples, 1.21%)</title><rect x="74.1606%" y="1029" width="1.2105%" height="15" fill="rgb(245,126,43)" fg:x="78054" fg:w="1274"/><text x="74.4106%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (433 samples, 0.41%)</title><rect x="74.9596%" y="1013" width="0.4114%" height="15" fill="rgb(227,7,22)" fg:x="78895" fg:w="433"/><text x="75.2096%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (421 samples, 0.40%)</title><rect x="74.9710%" y="997" width="0.4000%" height="15" fill="rgb(252,90,44)" fg:x="78907" fg:w="421"/><text x="75.2210%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (409 samples, 0.39%)</title><rect x="74.9824%" y="981" width="0.3886%" height="15" fill="rgb(253,91,0)" fg:x="78919" fg:w="409"/><text x="75.2324%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (405 samples, 0.38%)</title><rect x="74.9862%" y="965" width="0.3848%" height="15" fill="rgb(252,175,49)" fg:x="78923" fg:w="405"/><text x="75.2362%" y="975.50"></text></g><g><title>___pthread_mutex_lock (405 samples, 0.38%)</title><rect x="74.9862%" y="949" width="0.3848%" height="15" fill="rgb(246,150,1)" fg:x="78923" fg:w="405"/><text x="75.2362%" y="959.50"></text></g><g><title>ksys_write (18 samples, 0.02%)</title><rect x="75.3720%" y="757" width="0.0171%" height="15" fill="rgb(241,192,25)" fg:x="79329" fg:w="18"/><text x="75.6220%" y="767.50"></text></g><g><title>vfs_write (17 samples, 0.02%)</title><rect x="75.3729%" y="741" width="0.0162%" height="15" fill="rgb(239,187,11)" fg:x="79330" fg:w="17"/><text x="75.6229%" y="751.50"></text></g><g><title>eventfd_write (17 samples, 0.02%)</title><rect x="75.3729%" y="725" width="0.0162%" height="15" fill="rgb(218,202,51)" fg:x="79330" fg:w="17"/><text x="75.6229%" y="735.50"></text></g><g><title>__wake_up_common (16 samples, 0.02%)</title><rect x="75.3739%" y="709" width="0.0152%" height="15" fill="rgb(225,176,8)" fg:x="79331" fg:w="16"/><text x="75.6239%" y="719.50"></text></g><g><title>ep_poll_callback (15 samples, 0.01%)</title><rect x="75.3748%" y="693" width="0.0143%" height="15" fill="rgb(219,122,41)" fg:x="79332" fg:w="15"/><text x="75.6248%" y="703.50"></text></g><g><title>__wake_up_common_lock (15 samples, 0.01%)</title><rect x="75.3748%" y="677" width="0.0143%" height="15" fill="rgb(248,140,20)" fg:x="79332" fg:w="15"/><text x="75.6248%" y="687.50"></text></g><g><title>__wake_up_common (15 samples, 0.01%)</title><rect x="75.3748%" y="661" width="0.0143%" height="15" fill="rgb(245,41,37)" fg:x="79332" fg:w="15"/><text x="75.6248%" y="671.50"></text></g><g><title>autoremove_wake_function (14 samples, 0.01%)</title><rect x="75.3758%" y="645" width="0.0133%" height="15" fill="rgb(235,82,39)" fg:x="79333" fg:w="14"/><text x="75.6258%" y="655.50"></text></g><g><title>try_to_wake_up (14 samples, 0.01%)</title><rect x="75.3758%" y="629" width="0.0133%" height="15" fill="rgb(230,108,42)" fg:x="79333" fg:w="14"/><text x="75.6258%" y="639.50"></text></g><g><title>ttwu_do_activate (11 samples, 0.01%)</title><rect x="75.3786%" y="613" width="0.0105%" height="15" fill="rgb(215,150,50)" fg:x="79336" fg:w="11"/><text x="75.6286%" y="623.50"></text></g><g><title>enqueue_task (11 samples, 0.01%)</title><rect x="75.3786%" y="597" width="0.0105%" height="15" fill="rgb(233,212,5)" fg:x="79336" fg:w="11"/><text x="75.6286%" y="607.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (22 samples, 0.02%)</title><rect x="75.3710%" y="1029" width="0.0209%" height="15" fill="rgb(245,80,22)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="1039.50"></text></g><g><title>event_listener::Event::notify (22 samples, 0.02%)</title><rect x="75.3710%" y="1013" width="0.0209%" height="15" fill="rgb(238,129,16)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="1023.50"></text></g><g><title>event_listener::List::notify (22 samples, 0.02%)</title><rect x="75.3710%" y="997" width="0.0209%" height="15" fill="rgb(240,19,0)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (22 samples, 0.02%)</title><rect x="75.3710%" y="981" width="0.0209%" height="15" fill="rgb(232,42,35)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (22 samples, 0.02%)</title><rect x="75.3710%" y="965" width="0.0209%" height="15" fill="rgb(223,130,24)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (22 samples, 0.02%)</title><rect x="75.3710%" y="949" width="0.0209%" height="15" fill="rgb(237,16,22)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="959.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (22 samples, 0.02%)</title><rect x="75.3710%" y="933" width="0.0209%" height="15" fill="rgb(248,192,20)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="943.50"></text></g><g><title>async_executor::State::notify (22 samples, 0.02%)</title><rect x="75.3710%" y="917" width="0.0209%" height="15" fill="rgb(233,167,2)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (22 samples, 0.02%)</title><rect x="75.3710%" y="901" width="0.0209%" height="15" fill="rgb(252,71,44)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (22 samples, 0.02%)</title><rect x="75.3710%" y="885" width="0.0209%" height="15" fill="rgb(238,37,47)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="895.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (22 samples, 0.02%)</title><rect x="75.3710%" y="869" width="0.0209%" height="15" fill="rgb(214,202,54)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="879.50"></text></g><g><title>async_io::reactor::Reactor::notify (22 samples, 0.02%)</title><rect x="75.3710%" y="853" width="0.0209%" height="15" fill="rgb(254,165,40)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="863.50"></text></g><g><title>polling::Poller::notify (22 samples, 0.02%)</title><rect x="75.3710%" y="837" width="0.0209%" height="15" fill="rgb(246,173,38)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="847.50"></text></g><g><title>polling::epoll::Poller::notify (22 samples, 0.02%)</title><rect x="75.3710%" y="821" width="0.0209%" height="15" fill="rgb(215,3,27)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="831.50"></text></g><g><title>__GI___write (22 samples, 0.02%)</title><rect x="75.3710%" y="805" width="0.0209%" height="15" fill="rgb(239,169,51)" fg:x="79328" fg:w="22"/><text x="75.6210%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="75.3720%" y="789" width="0.0200%" height="15" fill="rgb(212,5,25)" fg:x="79329" fg:w="21"/><text x="75.6220%" y="799.50"></text></g><g><title>do_syscall_64 (21 samples, 0.02%)</title><rect x="75.3720%" y="773" width="0.0200%" height="15" fill="rgb(243,45,17)" fg:x="79329" fg:w="21"/><text x="75.6220%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,380 samples, 1.31%)</title><rect x="74.0969%" y="1141" width="1.3112%" height="15" fill="rgb(242,97,9)" fg:x="77987" fg:w="1380"/><text x="74.3469%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,378 samples, 1.31%)</title><rect x="74.0988%" y="1125" width="1.3093%" height="15" fill="rgb(228,71,31)" fg:x="77989" fg:w="1378"/><text x="74.3488%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,378 samples, 1.31%)</title><rect x="74.0988%" y="1109" width="1.3093%" height="15" fill="rgb(252,184,16)" fg:x="77989" fg:w="1378"/><text x="74.3488%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,378 samples, 1.31%)</title><rect x="74.0988%" y="1093" width="1.3093%" height="15" fill="rgb(236,169,46)" fg:x="77989" fg:w="1378"/><text x="74.3488%" y="1103.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,378 samples, 1.31%)</title><rect x="74.0988%" y="1077" width="1.3093%" height="15" fill="rgb(207,17,47)" fg:x="77989" fg:w="1378"/><text x="74.3488%" y="1087.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,378 samples, 1.31%)</title><rect x="74.0988%" y="1061" width="1.3093%" height="15" fill="rgb(206,201,28)" fg:x="77989" fg:w="1378"/><text x="74.3488%" y="1071.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,378 samples, 1.31%)</title><rect x="74.0988%" y="1045" width="1.3093%" height="15" fill="rgb(224,184,23)" fg:x="77989" fg:w="1378"/><text x="74.3488%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (17 samples, 0.02%)</title><rect x="75.3919%" y="1029" width="0.0162%" height="15" fill="rgb(208,139,48)" fg:x="79350" fg:w="17"/><text x="75.6419%" y="1039.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="75.4831%" y="1061" width="0.0295%" height="15" fill="rgb(208,130,10)" fg:x="79446" fg:w="31"/><text x="75.7331%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (413 samples, 0.39%)</title><rect x="75.5696%" y="1045" width="0.3924%" height="15" fill="rgb(211,213,45)" fg:x="79537" fg:w="413"/><text x="75.8196%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (760 samples, 0.72%)</title><rect x="76.0162%" y="1029" width="0.7221%" height="15" fill="rgb(235,100,30)" fg:x="80007" fg:w="760"/><text x="76.2662%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (235 samples, 0.22%)</title><rect x="76.8333%" y="1013" width="0.2233%" height="15" fill="rgb(206,144,31)" fg:x="80867" fg:w="235"/><text x="77.0833%" y="1023.50"></text></g><g><title>core::ptr::write (235 samples, 0.22%)</title><rect x="76.8333%" y="997" width="0.2233%" height="15" fill="rgb(224,200,26)" fg:x="80867" fg:w="235"/><text x="77.0833%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (222 samples, 0.21%)</title><rect x="76.8456%" y="981" width="0.2109%" height="15" fill="rgb(247,104,53)" fg:x="80880" fg:w="222"/><text x="77.0956%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (302 samples, 0.29%)</title><rect x="77.0565%" y="1013" width="0.2869%" height="15" fill="rgb(220,14,17)" fg:x="81102" fg:w="302"/><text x="77.3065%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (302 samples, 0.29%)</title><rect x="77.0565%" y="997" width="0.2869%" height="15" fill="rgb(230,140,40)" fg:x="81102" fg:w="302"/><text x="77.3065%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (57 samples, 0.05%)</title><rect x="77.3435%" y="1013" width="0.0542%" height="15" fill="rgb(229,2,41)" fg:x="81404" fg:w="57"/><text x="77.5935%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (57 samples, 0.05%)</title><rect x="77.3435%" y="997" width="0.0542%" height="15" fill="rgb(232,89,16)" fg:x="81404" fg:w="57"/><text x="77.5935%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,524 samples, 1.45%)</title><rect x="75.9620%" y="1045" width="1.4480%" height="15" fill="rgb(247,59,52)" fg:x="79950" fg:w="1524"/><text x="76.2120%" y="1055.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (707 samples, 0.67%)</title><rect x="76.7382%" y="1029" width="0.6717%" height="15" fill="rgb(226,110,21)" fg:x="80767" fg:w="707"/><text x="76.9882%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (13 samples, 0.01%)</title><rect x="77.3976%" y="1013" width="0.0124%" height="15" fill="rgb(224,176,43)" fg:x="81461" fg:w="13"/><text x="77.6476%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_store (13 samples, 0.01%)</title><rect x="77.3976%" y="997" width="0.0124%" height="15" fill="rgb(221,73,6)" fg:x="81461" fg:w="13"/><text x="77.6476%" y="1007.50"></text></g><g><title>enqueue_task_fair (33 samples, 0.03%)</title><rect x="77.5135%" y="773" width="0.0314%" height="15" fill="rgb(232,78,19)" fg:x="81583" fg:w="33"/><text x="77.7635%" y="783.50"></text></g><g><title>enqueue_entity (21 samples, 0.02%)</title><rect x="77.5249%" y="757" width="0.0200%" height="15" fill="rgb(233,112,48)" fg:x="81595" fg:w="21"/><text x="77.7749%" y="767.50"></text></g><g><title>ttwu_do_activate (64 samples, 0.06%)</title><rect x="77.5126%" y="805" width="0.0608%" height="15" fill="rgb(243,131,47)" fg:x="81582" fg:w="64"/><text x="77.7626%" y="815.50"></text></g><g><title>enqueue_task (63 samples, 0.06%)</title><rect x="77.5135%" y="789" width="0.0599%" height="15" fill="rgb(226,51,1)" fg:x="81583" fg:w="63"/><text x="77.7635%" y="799.50"></text></g><g><title>psi_task_change (22 samples, 0.02%)</title><rect x="77.5525%" y="773" width="0.0209%" height="15" fill="rgb(247,58,7)" fg:x="81624" fg:w="22"/><text x="77.8025%" y="783.50"></text></g><g><title>psi_group_change (14 samples, 0.01%)</title><rect x="77.5601%" y="757" width="0.0133%" height="15" fill="rgb(209,7,32)" fg:x="81632" fg:w="14"/><text x="77.8101%" y="767.50"></text></g><g><title>ttwu_queue_wakelist (11 samples, 0.01%)</title><rect x="77.5791%" y="805" width="0.0105%" height="15" fill="rgb(209,39,41)" fg:x="81652" fg:w="11"/><text x="77.8291%" y="815.50"></text></g><g><title>__x64_sys_futex (139 samples, 0.13%)</title><rect x="77.4632%" y="885" width="0.1321%" height="15" fill="rgb(226,182,46)" fg:x="81530" fg:w="139"/><text x="77.7132%" y="895.50"></text></g><g><title>do_futex (137 samples, 0.13%)</title><rect x="77.4651%" y="869" width="0.1302%" height="15" fill="rgb(230,219,10)" fg:x="81532" fg:w="137"/><text x="77.7151%" y="879.50"></text></g><g><title>futex_wake (136 samples, 0.13%)</title><rect x="77.4660%" y="853" width="0.1292%" height="15" fill="rgb(227,175,30)" fg:x="81533" fg:w="136"/><text x="77.7160%" y="863.50"></text></g><g><title>wake_up_q (105 samples, 0.10%)</title><rect x="77.4955%" y="837" width="0.0998%" height="15" fill="rgb(217,2,50)" fg:x="81564" fg:w="105"/><text x="77.7455%" y="847.50"></text></g><g><title>try_to_wake_up (101 samples, 0.10%)</title><rect x="77.4993%" y="821" width="0.0960%" height="15" fill="rgb(229,160,0)" fg:x="81568" fg:w="101"/><text x="77.7493%" y="831.50"></text></g><g><title>syscall_exit_to_user_mode (33 samples, 0.03%)</title><rect x="77.5971%" y="885" width="0.0314%" height="15" fill="rgb(207,78,37)" fg:x="81671" fg:w="33"/><text x="77.8471%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (214 samples, 0.20%)</title><rect x="77.4318%" y="949" width="0.2033%" height="15" fill="rgb(225,57,0)" fg:x="81497" fg:w="214"/><text x="77.6818%" y="959.50"></text></g><g><title>__GI___lll_lock_wake (195 samples, 0.19%)</title><rect x="77.4499%" y="933" width="0.1853%" height="15" fill="rgb(232,154,2)" fg:x="81516" fg:w="195"/><text x="77.6999%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (186 samples, 0.18%)</title><rect x="77.4584%" y="917" width="0.1767%" height="15" fill="rgb(241,212,25)" fg:x="81525" fg:w="186"/><text x="77.7084%" y="927.50"></text></g><g><title>do_syscall_64 (183 samples, 0.17%)</title><rect x="77.4613%" y="901" width="0.1739%" height="15" fill="rgb(226,69,20)" fg:x="81528" fg:w="183"/><text x="77.7113%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (216 samples, 0.21%)</title><rect x="77.4309%" y="1029" width="0.2052%" height="15" fill="rgb(247,184,54)" fg:x="81496" fg:w="216"/><text x="77.6809%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (215 samples, 0.20%)</title><rect x="77.4318%" y="1013" width="0.2043%" height="15" fill="rgb(210,145,0)" fg:x="81497" fg:w="215"/><text x="77.6818%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (215 samples, 0.20%)</title><rect x="77.4318%" y="997" width="0.2043%" height="15" fill="rgb(253,82,12)" fg:x="81497" fg:w="215"/><text x="77.6818%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (215 samples, 0.20%)</title><rect x="77.4318%" y="981" width="0.2043%" height="15" fill="rgb(245,42,11)" fg:x="81497" fg:w="215"/><text x="77.6818%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (215 samples, 0.20%)</title><rect x="77.4318%" y="965" width="0.2043%" height="15" fill="rgb(219,147,32)" fg:x="81497" fg:w="215"/><text x="77.6818%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.02%)</title><rect x="77.6361%" y="1029" width="0.0162%" height="15" fill="rgb(246,12,7)" fg:x="81712" fg:w="17"/><text x="77.8861%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.02%)</title><rect x="77.6361%" y="1013" width="0.0162%" height="15" fill="rgb(243,50,9)" fg:x="81712" fg:w="17"/><text x="77.8861%" y="1023.50"></text></g><g><title>event_listener::Inner::lock (43 samples, 0.04%)</title><rect x="77.6570%" y="1029" width="0.0409%" height="15" fill="rgb(219,149,6)" fg:x="81734" fg:w="43"/><text x="77.9070%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (43 samples, 0.04%)</title><rect x="77.6570%" y="1013" width="0.0409%" height="15" fill="rgb(241,51,42)" fg:x="81734" fg:w="43"/><text x="77.9070%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (43 samples, 0.04%)</title><rect x="77.6570%" y="997" width="0.0409%" height="15" fill="rgb(226,128,27)" fg:x="81734" fg:w="43"/><text x="77.9070%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (40 samples, 0.04%)</title><rect x="77.6599%" y="981" width="0.0380%" height="15" fill="rgb(244,144,4)" fg:x="81737" fg:w="40"/><text x="77.9099%" y="991.50"></text></g><g><title>___pthread_mutex_lock (40 samples, 0.04%)</title><rect x="77.6599%" y="965" width="0.0380%" height="15" fill="rgb(221,4,13)" fg:x="81737" fg:w="40"/><text x="77.9099%" y="975.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.01%)</title><rect x="77.7501%" y="805" width="0.0105%" height="15" fill="rgb(208,170,28)" fg:x="81832" fg:w="11"/><text x="78.0001%" y="815.50"></text></g><g><title>syscall_exit_to_user_mode (16 samples, 0.02%)</title><rect x="77.7615%" y="805" width="0.0152%" height="15" fill="rgb(226,131,13)" fg:x="81844" fg:w="16"/><text x="78.0115%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.03%)</title><rect x="77.7492%" y="837" width="0.0285%" height="15" fill="rgb(215,72,41)" fg:x="81831" fg:w="30"/><text x="77.9992%" y="847.50"></text></g><g><title>do_syscall_64 (30 samples, 0.03%)</title><rect x="77.7492%" y="821" width="0.0285%" height="15" fill="rgb(243,108,20)" fg:x="81831" fg:w="30"/><text x="77.9992%" y="831.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (62 samples, 0.06%)</title><rect x="77.7197%" y="869" width="0.0589%" height="15" fill="rgb(230,189,17)" fg:x="81800" fg:w="62"/><text x="77.9697%" y="879.50"></text></g><g><title>__GI___lll_lock_wake (35 samples, 0.03%)</title><rect x="77.7454%" y="853" width="0.0333%" height="15" fill="rgb(220,50,17)" fg:x="81827" fg:w="35"/><text x="77.9954%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (66 samples, 0.06%)</title><rect x="77.7169%" y="933" width="0.0627%" height="15" fill="rgb(248,152,48)" fg:x="81797" fg:w="66"/><text x="77.9669%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.06%)</title><rect x="77.7169%" y="917" width="0.0627%" height="15" fill="rgb(244,91,11)" fg:x="81797" fg:w="66"/><text x="77.9669%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (64 samples, 0.06%)</title><rect x="77.7188%" y="901" width="0.0608%" height="15" fill="rgb(220,157,5)" fg:x="81799" fg:w="64"/><text x="77.9688%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (63 samples, 0.06%)</title><rect x="77.7197%" y="885" width="0.0599%" height="15" fill="rgb(253,137,8)" fg:x="81800" fg:w="63"/><text x="77.9697%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (12 samples, 0.01%)</title><rect x="77.7796%" y="933" width="0.0114%" height="15" fill="rgb(217,137,51)" fg:x="81863" fg:w="12"/><text x="78.0296%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="77.7796%" y="917" width="0.0114%" height="15" fill="rgb(218,209,53)" fg:x="81863" fg:w="12"/><text x="78.0296%" y="927.50"></text></g><g><title>enqueue_task_fair (15 samples, 0.01%)</title><rect x="77.8423%" y="613" width="0.0143%" height="15" fill="rgb(249,137,25)" fg:x="81929" fg:w="15"/><text x="78.0923%" y="623.50"></text></g><g><title>ttwu_do_activate (33 samples, 0.03%)</title><rect x="77.8413%" y="645" width="0.0314%" height="15" fill="rgb(239,155,26)" fg:x="81928" fg:w="33"/><text x="78.0913%" y="655.50"></text></g><g><title>enqueue_task (32 samples, 0.03%)</title><rect x="77.8423%" y="629" width="0.0304%" height="15" fill="rgb(227,85,46)" fg:x="81929" fg:w="32"/><text x="78.0923%" y="639.50"></text></g><g><title>psi_task_change (12 samples, 0.01%)</title><rect x="77.8613%" y="613" width="0.0114%" height="15" fill="rgb(251,107,43)" fg:x="81949" fg:w="12"/><text x="78.1113%" y="623.50"></text></g><g><title>__wake_up_common (61 samples, 0.06%)</title><rect x="77.8242%" y="693" width="0.0580%" height="15" fill="rgb(234,170,33)" fg:x="81910" fg:w="61"/><text x="78.0742%" y="703.50"></text></g><g><title>autoremove_wake_function (60 samples, 0.06%)</title><rect x="77.8252%" y="677" width="0.0570%" height="15" fill="rgb(206,29,35)" fg:x="81911" fg:w="60"/><text x="78.0752%" y="687.50"></text></g><g><title>try_to_wake_up (54 samples, 0.05%)</title><rect x="77.8309%" y="661" width="0.0513%" height="15" fill="rgb(227,138,25)" fg:x="81917" fg:w="54"/><text x="78.0809%" y="671.50"></text></g><g><title>__wake_up_common_lock (63 samples, 0.06%)</title><rect x="77.8233%" y="709" width="0.0599%" height="15" fill="rgb(249,131,35)" fg:x="81909" fg:w="63"/><text x="78.0733%" y="719.50"></text></g><g><title>__wake_up_common (77 samples, 0.07%)</title><rect x="77.8204%" y="741" width="0.0732%" height="15" fill="rgb(239,6,40)" fg:x="81906" fg:w="77"/><text x="78.0704%" y="751.50"></text></g><g><title>ep_poll_callback (77 samples, 0.07%)</title><rect x="77.8204%" y="725" width="0.0732%" height="15" fill="rgb(246,136,47)" fg:x="81906" fg:w="77"/><text x="78.0704%" y="735.50"></text></g><g><title>_raw_read_lock_irqsave (11 samples, 0.01%)</title><rect x="77.8831%" y="709" width="0.0105%" height="15" fill="rgb(253,58,26)" fg:x="81972" fg:w="11"/><text x="78.1331%" y="719.50"></text></g><g><title>ksys_write (98 samples, 0.09%)</title><rect x="77.8024%" y="789" width="0.0931%" height="15" fill="rgb(237,141,10)" fg:x="81887" fg:w="98"/><text x="78.0524%" y="799.50"></text></g><g><title>vfs_write (84 samples, 0.08%)</title><rect x="77.8157%" y="773" width="0.0798%" height="15" fill="rgb(234,156,12)" fg:x="81901" fg:w="84"/><text x="78.0657%" y="783.50"></text></g><g><title>eventfd_write (82 samples, 0.08%)</title><rect x="77.8176%" y="757" width="0.0779%" height="15" fill="rgb(243,224,36)" fg:x="81903" fg:w="82"/><text x="78.0676%" y="767.50"></text></g><g><title>syscall_exit_to_user_mode (24 samples, 0.02%)</title><rect x="77.8955%" y="789" width="0.0228%" height="15" fill="rgb(205,229,51)" fg:x="81985" fg:w="24"/><text x="78.1455%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (128 samples, 0.12%)</title><rect x="77.7995%" y="821" width="0.1216%" height="15" fill="rgb(223,189,4)" fg:x="81884" fg:w="128"/><text x="78.0495%" y="831.50"></text></g><g><title>do_syscall_64 (127 samples, 0.12%)</title><rect x="77.8005%" y="805" width="0.1207%" height="15" fill="rgb(249,167,54)" fg:x="81885" fg:w="127"/><text x="78.0505%" y="815.50"></text></g><g><title>async_io::reactor::Reactor::notify (136 samples, 0.13%)</title><rect x="77.7929%" y="885" width="0.1292%" height="15" fill="rgb(218,34,28)" fg:x="81877" fg:w="136"/><text x="78.0429%" y="895.50"></text></g><g><title>polling::Poller::notify (136 samples, 0.13%)</title><rect x="77.7929%" y="869" width="0.1292%" height="15" fill="rgb(232,109,42)" fg:x="81877" fg:w="136"/><text x="78.0429%" y="879.50"></text></g><g><title>polling::epoll::Poller::notify (135 samples, 0.13%)</title><rect x="77.7938%" y="853" width="0.1283%" height="15" fill="rgb(248,214,46)" fg:x="81878" fg:w="135"/><text x="78.0438%" y="863.50"></text></g><g><title>__GI___write (134 samples, 0.13%)</title><rect x="77.7948%" y="837" width="0.1273%" height="15" fill="rgb(244,216,40)" fg:x="81879" fg:w="134"/><text x="78.0448%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (17 samples, 0.02%)</title><rect x="77.9325%" y="853" width="0.0162%" height="15" fill="rgb(231,226,31)" fg:x="82024" fg:w="17"/><text x="78.1825%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_swap (17 samples, 0.02%)</title><rect x="77.9325%" y="837" width="0.0162%" height="15" fill="rgb(238,38,43)" fg:x="82024" fg:w="17"/><text x="78.1825%" y="847.50"></text></g><g><title>_raw_spin_lock (11 samples, 0.01%)</title><rect x="78.0124%" y="709" width="0.0105%" height="15" fill="rgb(208,88,43)" fg:x="82108" fg:w="11"/><text x="78.2624%" y="719.50"></text></g><g><title>futex_wake_mark (23 samples, 0.02%)</title><rect x="78.0247%" y="709" width="0.0219%" height="15" fill="rgb(205,136,37)" fg:x="82121" fg:w="23"/><text x="78.2747%" y="719.50"></text></g><g><title>select_task_rq_fair (31 samples, 0.03%)</title><rect x="78.0798%" y="677" width="0.0295%" height="15" fill="rgb(237,34,14)" fg:x="82179" fg:w="31"/><text x="78.3298%" y="687.50"></text></g><g><title>available_idle_cpu (12 samples, 0.01%)</title><rect x="78.0979%" y="661" width="0.0114%" height="15" fill="rgb(236,193,44)" fg:x="82198" fg:w="12"/><text x="78.3479%" y="671.50"></text></g><g><title>enqueue_task_fair (71 samples, 0.07%)</title><rect x="78.1102%" y="645" width="0.0675%" height="15" fill="rgb(231,48,10)" fg:x="82211" fg:w="71"/><text x="78.3602%" y="655.50"></text></g><g><title>enqueue_entity (53 samples, 0.05%)</title><rect x="78.1273%" y="629" width="0.0504%" height="15" fill="rgb(213,141,34)" fg:x="82229" fg:w="53"/><text x="78.3773%" y="639.50"></text></g><g><title>update_load_avg (17 samples, 0.02%)</title><rect x="78.1615%" y="613" width="0.0162%" height="15" fill="rgb(249,130,34)" fg:x="82265" fg:w="17"/><text x="78.4115%" y="623.50"></text></g><g><title>psi_group_change (16 samples, 0.02%)</title><rect x="78.1777%" y="645" width="0.0152%" height="15" fill="rgb(219,42,41)" fg:x="82282" fg:w="16"/><text x="78.4277%" y="655.50"></text></g><g><title>psi_group_change (39 samples, 0.04%)</title><rect x="78.2128%" y="629" width="0.0371%" height="15" fill="rgb(224,100,54)" fg:x="82319" fg:w="39"/><text x="78.4628%" y="639.50"></text></g><g><title>ttwu_do_activate (150 samples, 0.14%)</title><rect x="78.1093%" y="677" width="0.1425%" height="15" fill="rgb(229,200,27)" fg:x="82210" fg:w="150"/><text x="78.3593%" y="687.50"></text></g><g><title>enqueue_task (150 samples, 0.14%)</title><rect x="78.1093%" y="661" width="0.1425%" height="15" fill="rgb(217,118,10)" fg:x="82210" fg:w="150"/><text x="78.3593%" y="671.50"></text></g><g><title>psi_task_change (62 samples, 0.06%)</title><rect x="78.1929%" y="645" width="0.0589%" height="15" fill="rgb(206,22,3)" fg:x="82298" fg:w="62"/><text x="78.4429%" y="655.50"></text></g><g><title>ttwu_do_wakeup (13 samples, 0.01%)</title><rect x="78.2518%" y="677" width="0.0124%" height="15" fill="rgb(232,163,46)" fg:x="82360" fg:w="13"/><text x="78.5018%" y="687.50"></text></g><g><title>check_preempt_curr (13 samples, 0.01%)</title><rect x="78.2518%" y="661" width="0.0124%" height="15" fill="rgb(206,95,13)" fg:x="82360" fg:w="13"/><text x="78.5018%" y="671.50"></text></g><g><title>ttwu_queue_wakelist (29 samples, 0.03%)</title><rect x="78.2641%" y="677" width="0.0276%" height="15" fill="rgb(253,154,18)" fg:x="82373" fg:w="29"/><text x="78.5141%" y="687.50"></text></g><g><title>__x64_sys_futex (343 samples, 0.33%)</title><rect x="77.9829%" y="757" width="0.3259%" height="15" fill="rgb(219,32,23)" fg:x="82077" fg:w="343"/><text x="78.2329%" y="767.50"></text></g><g><title>do_futex (335 samples, 0.32%)</title><rect x="77.9905%" y="741" width="0.3183%" height="15" fill="rgb(230,191,45)" fg:x="82085" fg:w="335"/><text x="78.2405%" y="751.50"></text></g><g><title>futex_wake (333 samples, 0.32%)</title><rect x="77.9924%" y="725" width="0.3164%" height="15" fill="rgb(229,64,36)" fg:x="82087" fg:w="333"/><text x="78.2424%" y="735.50"></text></g><g><title>wake_up_q (265 samples, 0.25%)</title><rect x="78.0570%" y="709" width="0.2518%" height="15" fill="rgb(205,129,25)" fg:x="82155" fg:w="265"/><text x="78.3070%" y="719.50"></text></g><g><title>try_to_wake_up (259 samples, 0.25%)</title><rect x="78.0627%" y="693" width="0.2461%" height="15" fill="rgb(254,112,7)" fg:x="82161" fg:w="259"/><text x="78.3127%" y="703.50"></text></g><g><title>update_rq_clock (18 samples, 0.02%)</title><rect x="78.2917%" y="677" width="0.0171%" height="15" fill="rgb(226,53,48)" fg:x="82402" fg:w="18"/><text x="78.5417%" y="687.50"></text></g><g><title>syscall_exit_to_user_mode (67 samples, 0.06%)</title><rect x="78.3116%" y="757" width="0.0637%" height="15" fill="rgb(214,153,38)" fg:x="82423" fg:w="67"/><text x="78.5616%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (420 samples, 0.40%)</title><rect x="77.9810%" y="789" width="0.3990%" height="15" fill="rgb(243,101,7)" fg:x="82075" fg:w="420"/><text x="78.2310%" y="799.50"></text></g><g><title>do_syscall_64 (419 samples, 0.40%)</title><rect x="77.9819%" y="773" width="0.3981%" height="15" fill="rgb(240,140,22)" fg:x="82076" fg:w="419"/><text x="78.2319%" y="783.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (457 samples, 0.43%)</title><rect x="77.9487%" y="853" width="0.4342%" height="15" fill="rgb(235,114,2)" fg:x="82041" fg:w="457"/><text x="78.1987%" y="863.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (457 samples, 0.43%)</title><rect x="77.9487%" y="837" width="0.4342%" height="15" fill="rgb(242,59,12)" fg:x="82041" fg:w="457"/><text x="78.1987%" y="847.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (457 samples, 0.43%)</title><rect x="77.9487%" y="821" width="0.4342%" height="15" fill="rgb(252,134,9)" fg:x="82041" fg:w="457"/><text x="78.1987%" y="831.50"></text></g><g><title>__GI___pthread_cond_signal (457 samples, 0.43%)</title><rect x="77.9487%" y="805" width="0.4342%" height="15" fill="rgb(236,4,44)" fg:x="82041" fg:w="457"/><text x="78.1987%" y="815.50"></text></g><g><title>parking::Unparker::unpark (508 samples, 0.48%)</title><rect x="77.9259%" y="885" width="0.4827%" height="15" fill="rgb(254,172,41)" fg:x="82017" fg:w="508"/><text x="78.1759%" y="895.50"></text></g><g><title>parking::Inner::unpark (504 samples, 0.48%)</title><rect x="77.9297%" y="869" width="0.4789%" height="15" fill="rgb(244,63,20)" fg:x="82021" fg:w="504"/><text x="78.1797%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.03%)</title><rect x="78.3829%" y="853" width="0.0257%" height="15" fill="rgb(250,73,31)" fg:x="82498" fg:w="27"/><text x="78.6329%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.03%)</title><rect x="78.3829%" y="837" width="0.0257%" height="15" fill="rgb(241,38,36)" fg:x="82498" fg:w="27"/><text x="78.6329%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.03%)</title><rect x="78.3829%" y="821" width="0.0257%" height="15" fill="rgb(245,211,2)" fg:x="82498" fg:w="27"/><text x="78.6329%" y="831.50"></text></g><g><title>___pthread_mutex_lock (27 samples, 0.03%)</title><rect x="78.3829%" y="805" width="0.0257%" height="15" fill="rgb(206,120,28)" fg:x="82498" fg:w="27"/><text x="78.6329%" y="815.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (652 samples, 0.62%)</title><rect x="77.7910%" y="901" width="0.6195%" height="15" fill="rgb(211,59,34)" fg:x="81875" fg:w="652"/><text x="78.0410%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (670 samples, 0.64%)</title><rect x="77.7910%" y="933" width="0.6366%" height="15" fill="rgb(233,168,5)" fg:x="81875" fg:w="670"/><text x="78.0410%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (670 samples, 0.64%)</title><rect x="77.7910%" y="917" width="0.6366%" height="15" fill="rgb(234,33,13)" fg:x="81875" fg:w="670"/><text x="78.0410%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="78.4105%" y="901" width="0.0171%" height="15" fill="rgb(231,150,26)" fg:x="82527" fg:w="18"/><text x="78.6605%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="78.4105%" y="885" width="0.0171%" height="15" fill="rgb(217,191,4)" fg:x="82527" fg:w="18"/><text x="78.6605%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.02%)</title><rect x="78.4114%" y="869" width="0.0162%" height="15" fill="rgb(246,198,38)" fg:x="82528" fg:w="17"/><text x="78.6614%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.02%)</title><rect x="78.4114%" y="853" width="0.0162%" height="15" fill="rgb(245,64,37)" fg:x="82528" fg:w="17"/><text x="78.6614%" y="863.50"></text></g><g><title>__x64_sys_futex (25 samples, 0.02%)</title><rect x="78.4627%" y="821" width="0.0238%" height="15" fill="rgb(250,30,36)" fg:x="82582" fg:w="25"/><text x="78.7127%" y="831.50"></text></g><g><title>do_futex (23 samples, 0.02%)</title><rect x="78.4646%" y="805" width="0.0219%" height="15" fill="rgb(217,86,53)" fg:x="82584" fg:w="23"/><text x="78.7146%" y="815.50"></text></g><g><title>futex_wait (23 samples, 0.02%)</title><rect x="78.4646%" y="789" width="0.0219%" height="15" fill="rgb(228,157,16)" fg:x="82584" fg:w="23"/><text x="78.7146%" y="799.50"></text></g><g><title>futex_wait_setup (19 samples, 0.02%)</title><rect x="78.4684%" y="773" width="0.0181%" height="15" fill="rgb(217,59,31)" fg:x="82588" fg:w="19"/><text x="78.7184%" y="783.50"></text></g><g><title>syscall_exit_to_user_mode (15 samples, 0.01%)</title><rect x="78.4865%" y="821" width="0.0143%" height="15" fill="rgb(237,138,41)" fg:x="82607" fg:w="15"/><text x="78.7365%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (42 samples, 0.04%)</title><rect x="78.4618%" y="853" width="0.0399%" height="15" fill="rgb(227,91,49)" fg:x="82581" fg:w="42"/><text x="78.7118%" y="863.50"></text></g><g><title>do_syscall_64 (42 samples, 0.04%)</title><rect x="78.4618%" y="837" width="0.0399%" height="15" fill="rgb(247,21,44)" fg:x="82581" fg:w="42"/><text x="78.7118%" y="847.50"></text></g><g><title>async_executor::State::notify (834 samples, 0.79%)</title><rect x="77.7102%" y="949" width="0.7924%" height="15" fill="rgb(219,210,51)" fg:x="81790" fg:w="834"/><text x="77.9602%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (79 samples, 0.08%)</title><rect x="78.4276%" y="933" width="0.0751%" height="15" fill="rgb(209,140,6)" fg:x="82545" fg:w="79"/><text x="78.6776%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (75 samples, 0.07%)</title><rect x="78.4314%" y="917" width="0.0713%" height="15" fill="rgb(221,188,24)" fg:x="82549" fg:w="75"/><text x="78.6814%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (72 samples, 0.07%)</title><rect x="78.4342%" y="901" width="0.0684%" height="15" fill="rgb(232,154,20)" fg:x="82552" fg:w="72"/><text x="78.6842%" y="911.50"></text></g><g><title>___pthread_mutex_lock (72 samples, 0.07%)</title><rect x="78.4342%" y="885" width="0.0684%" height="15" fill="rgb(244,137,50)" fg:x="82552" fg:w="72"/><text x="78.6842%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (49 samples, 0.05%)</title><rect x="78.4561%" y="869" width="0.0466%" height="15" fill="rgb(225,185,43)" fg:x="82575" fg:w="49"/><text x="78.7061%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (27 samples, 0.03%)</title><rect x="78.5083%" y="917" width="0.0257%" height="15" fill="rgb(213,205,38)" fg:x="82630" fg:w="27"/><text x="78.7583%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (27 samples, 0.03%)</title><rect x="78.5083%" y="901" width="0.0257%" height="15" fill="rgb(236,73,12)" fg:x="82630" fg:w="27"/><text x="78.7583%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (880 samples, 0.84%)</title><rect x="77.7093%" y="965" width="0.8361%" height="15" fill="rgb(235,219,13)" fg:x="81789" fg:w="880"/><text x="77.9593%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (45 samples, 0.04%)</title><rect x="78.5026%" y="949" width="0.0428%" height="15" fill="rgb(218,59,36)" fg:x="82624" fg:w="45"/><text x="78.7526%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (45 samples, 0.04%)</title><rect x="78.5026%" y="933" width="0.0428%" height="15" fill="rgb(205,110,39)" fg:x="82624" fg:w="45"/><text x="78.7526%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (32 samples, 0.03%)</title><rect x="78.5454%" y="965" width="0.0304%" height="15" fill="rgb(218,206,42)" fg:x="82669" fg:w="32"/><text x="78.7954%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (32 samples, 0.03%)</title><rect x="78.5454%" y="949" width="0.0304%" height="15" fill="rgb(248,125,24)" fg:x="82669" fg:w="32"/><text x="78.7954%" y="959.50"></text></g><g><title>event_listener::List::notify (928 samples, 0.88%)</title><rect x="77.6979%" y="1029" width="0.8817%" height="15" fill="rgb(242,28,27)" fg:x="81777" fg:w="928"/><text x="77.9479%" y="1039.50"></text></g><g><title>core::task::wake::Waker::wake (922 samples, 0.88%)</title><rect x="77.7036%" y="1013" width="0.8760%" height="15" fill="rgb(216,228,15)" fg:x="81783" fg:w="922"/><text x="77.9536%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (922 samples, 0.88%)</title><rect x="77.7036%" y="997" width="0.8760%" height="15" fill="rgb(235,116,46)" fg:x="81783" fg:w="922"/><text x="77.9536%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (916 samples, 0.87%)</title><rect x="77.7093%" y="981" width="0.8703%" height="15" fill="rgb(224,18,32)" fg:x="81789" fg:w="916"/><text x="77.9593%" y="991.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (4,316 samples, 4.10%)</title><rect x="75.5164%" y="1061" width="4.1007%" height="15" fill="rgb(252,5,12)" fg:x="79481" fg:w="4316"/><text x="75.7664%" y="1071.50">asyn..</text></g><g><title>event_listener::Event::notify (2,323 samples, 2.21%)</title><rect x="77.4100%" y="1045" width="2.2071%" height="15" fill="rgb(251,36,5)" fg:x="81474" fg:w="2323"/><text x="77.6600%" y="1055.50">e..</text></g><g><title>event_listener::full_fence (1,092 samples, 1.04%)</title><rect x="78.5796%" y="1029" width="1.0375%" height="15" fill="rgb(217,53,14)" fg:x="82705" fg:w="1092"/><text x="78.8296%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1,069 samples, 1.02%)</title><rect x="78.6014%" y="1013" width="1.0157%" height="15" fill="rgb(215,86,45)" fg:x="82728" fg:w="1069"/><text x="78.8514%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,069 samples, 1.02%)</title><rect x="78.6014%" y="997" width="1.0157%" height="15" fill="rgb(242,169,11)" fg:x="82728" fg:w="1069"/><text x="78.8514%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,069 samples, 1.02%)</title><rect x="78.6014%" y="981" width="1.0157%" height="15" fill="rgb(211,213,45)" fg:x="82728" fg:w="1069"/><text x="78.8514%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (12 samples, 0.01%)</title><rect x="79.6171%" y="1061" width="0.0114%" height="15" fill="rgb(205,88,11)" fg:x="83797" fg:w="12"/><text x="79.8671%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (401 samples, 0.38%)</title><rect x="79.6285%" y="1061" width="0.3810%" height="15" fill="rgb(252,69,26)" fg:x="83809" fg:w="401"/><text x="79.8785%" y="1071.50"></text></g><g><title>core::mem::replace (401 samples, 0.38%)</title><rect x="79.6285%" y="1045" width="0.3810%" height="15" fill="rgb(246,123,37)" fg:x="83809" fg:w="401"/><text x="79.8785%" y="1055.50"></text></g><g><title>core::ptr::read (393 samples, 0.37%)</title><rect x="79.6361%" y="1029" width="0.3734%" height="15" fill="rgb(212,205,5)" fg:x="83817" fg:w="393"/><text x="79.8861%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (372 samples, 0.35%)</title><rect x="79.6561%" y="1013" width="0.3534%" height="15" fill="rgb(253,148,0)" fg:x="83838" fg:w="372"/><text x="79.9061%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (431 samples, 0.41%)</title><rect x="80.0095%" y="1061" width="0.4095%" height="15" fill="rgb(239,22,4)" fg:x="84210" fg:w="431"/><text x="80.2595%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (417 samples, 0.40%)</title><rect x="80.0228%" y="1045" width="0.3962%" height="15" fill="rgb(226,26,53)" fg:x="84224" fg:w="417"/><text x="80.2728%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (12 samples, 0.01%)</title><rect x="80.4399%" y="1045" width="0.0114%" height="15" fill="rgb(225,229,45)" fg:x="84663" fg:w="12"/><text x="80.6899%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (12 samples, 0.01%)</title><rect x="80.4399%" y="1029" width="0.0114%" height="15" fill="rgb(220,60,37)" fg:x="84663" fg:w="12"/><text x="80.6899%" y="1039.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="80.4399%" y="1013" width="0.0114%" height="15" fill="rgb(217,180,35)" fg:x="84663" fg:w="12"/><text x="80.6899%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="80.4399%" y="997" width="0.0114%" height="15" fill="rgb(229,7,53)" fg:x="84663" fg:w="12"/><text x="80.6899%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="80.4399%" y="981" width="0.0114%" height="15" fill="rgb(254,137,3)" fg:x="84663" fg:w="12"/><text x="80.6899%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="80.4399%" y="965" width="0.0114%" height="15" fill="rgb(215,140,41)" fg:x="84663" fg:w="12"/><text x="80.6899%" y="975.50"></text></g><g><title>__GI___lll_lock_wake (12 samples, 0.01%)</title><rect x="80.4399%" y="949" width="0.0114%" height="15" fill="rgb(250,80,15)" fg:x="84663" fg:w="12"/><text x="80.6899%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="80.4399%" y="933" width="0.0114%" height="15" fill="rgb(252,191,6)" fg:x="84663" fg:w="12"/><text x="80.6899%" y="943.50"></text></g><g><title>do_syscall_64 (12 samples, 0.01%)</title><rect x="80.4399%" y="917" width="0.0114%" height="15" fill="rgb(246,217,18)" fg:x="84663" fg:w="12"/><text x="80.6899%" y="927.50"></text></g><g><title>futex_wait_queue (13 samples, 0.01%)</title><rect x="80.4589%" y="869" width="0.0124%" height="15" fill="rgb(223,93,7)" fg:x="84683" fg:w="13"/><text x="80.7089%" y="879.50"></text></g><g><title>schedule (13 samples, 0.01%)</title><rect x="80.4589%" y="853" width="0.0124%" height="15" fill="rgb(225,55,52)" fg:x="84683" fg:w="13"/><text x="80.7089%" y="863.50"></text></g><g><title>__schedule (13 samples, 0.01%)</title><rect x="80.4589%" y="837" width="0.0124%" height="15" fill="rgb(240,31,24)" fg:x="84683" fg:w="13"/><text x="80.7089%" y="847.50"></text></g><g><title>__x64_sys_futex (15 samples, 0.01%)</title><rect x="80.4580%" y="917" width="0.0143%" height="15" fill="rgb(205,56,52)" fg:x="84682" fg:w="15"/><text x="80.7080%" y="927.50"></text></g><g><title>do_futex (15 samples, 0.01%)</title><rect x="80.4580%" y="901" width="0.0143%" height="15" fill="rgb(246,146,12)" fg:x="84682" fg:w="15"/><text x="80.7080%" y="911.50"></text></g><g><title>futex_wait (15 samples, 0.01%)</title><rect x="80.4580%" y="885" width="0.0143%" height="15" fill="rgb(239,84,36)" fg:x="84682" fg:w="15"/><text x="80.7080%" y="895.50"></text></g><g><title>event_listener::Inner::lock (22 samples, 0.02%)</title><rect x="80.4561%" y="1045" width="0.0209%" height="15" fill="rgb(207,41,40)" fg:x="84680" fg:w="22"/><text x="80.7061%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="80.4561%" y="1029" width="0.0209%" height="15" fill="rgb(241,179,25)" fg:x="84680" fg:w="22"/><text x="80.7061%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.02%)</title><rect x="80.4570%" y="1013" width="0.0200%" height="15" fill="rgb(210,0,34)" fg:x="84681" fg:w="21"/><text x="80.7070%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (21 samples, 0.02%)</title><rect x="80.4570%" y="997" width="0.0200%" height="15" fill="rgb(225,217,29)" fg:x="84681" fg:w="21"/><text x="80.7070%" y="1007.50"></text></g><g><title>___pthread_mutex_lock (21 samples, 0.02%)</title><rect x="80.4570%" y="981" width="0.0200%" height="15" fill="rgb(216,191,38)" fg:x="84681" fg:w="21"/><text x="80.7070%" y="991.50"></text></g><g><title>__GI___lll_lock_wait (21 samples, 0.02%)</title><rect x="80.4570%" y="965" width="0.0200%" height="15" fill="rgb(232,140,52)" fg:x="84681" fg:w="21"/><text x="80.7070%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="80.4580%" y="949" width="0.0190%" height="15" fill="rgb(223,158,51)" fg:x="84682" fg:w="20"/><text x="80.7080%" y="959.50"></text></g><g><title>do_syscall_64 (20 samples, 0.02%)</title><rect x="80.4580%" y="933" width="0.0190%" height="15" fill="rgb(235,29,51)" fg:x="84682" fg:w="20"/><text x="80.7080%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (7,031 samples, 6.68%)</title><rect x="74.0969%" y="1157" width="6.6803%" height="15" fill="rgb(215,181,18)" fg:x="77987" fg:w="7031"/><text x="74.3469%" y="1167.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,651 samples, 5.37%)</title><rect x="75.4081%" y="1141" width="5.3691%" height="15" fill="rgb(227,125,34)" fg:x="79367" fg:w="5651"/><text x="75.6581%" y="1151.50">&lt;core::..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (5,651 samples, 5.37%)</title><rect x="75.4081%" y="1125" width="5.3691%" height="15" fill="rgb(230,197,49)" fg:x="79367" fg:w="5651"/><text x="75.6581%" y="1135.50">tremor_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,651 samples, 5.37%)</title><rect x="75.4081%" y="1109" width="5.3691%" height="15" fill="rgb(239,141,16)" fg:x="79367" fg:w="5651"/><text x="75.6581%" y="1119.50">&lt;core::..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (5,651 samples, 5.37%)</title><rect x="75.4081%" y="1093" width="5.3691%" height="15" fill="rgb(225,105,43)" fg:x="79367" fg:w="5651"/><text x="75.6581%" y="1103.50">tremor_..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (5,651 samples, 5.37%)</title><rect x="75.4081%" y="1077" width="5.3691%" height="15" fill="rgb(214,131,14)" fg:x="79367" fg:w="5651"/><text x="75.6581%" y="1087.50">&lt;async_..</text></g><g><title>event_listener::Event::notify (370 samples, 0.35%)</title><rect x="80.4257%" y="1061" width="0.3515%" height="15" fill="rgb(229,177,11)" fg:x="84648" fg:w="370"/><text x="80.6757%" y="1071.50"></text></g><g><title>event_listener::full_fence (316 samples, 0.30%)</title><rect x="80.4770%" y="1045" width="0.3002%" height="15" fill="rgb(231,180,14)" fg:x="84702" fg:w="316"/><text x="80.7270%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (305 samples, 0.29%)</title><rect x="80.4874%" y="1029" width="0.2898%" height="15" fill="rgb(232,88,2)" fg:x="84713" fg:w="305"/><text x="80.7374%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (305 samples, 0.29%)</title><rect x="80.4874%" y="1013" width="0.2898%" height="15" fill="rgb(205,220,8)" fg:x="84713" fg:w="305"/><text x="80.7374%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (305 samples, 0.29%)</title><rect x="80.4874%" y="997" width="0.2898%" height="15" fill="rgb(225,23,53)" fg:x="84713" fg:w="305"/><text x="80.7374%" y="1007.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (17 samples, 0.02%)</title><rect x="80.7772%" y="1157" width="0.0162%" height="15" fill="rgb(213,62,29)" fg:x="85018" fg:w="17"/><text x="81.0272%" y="1167.50"></text></g><g><title>[unknown] (80,118 samples, 76.12%)</title><rect x="4.6879%" y="1173" width="76.1216%" height="15" fill="rgb(227,75,7)" fg:x="4934" fg:w="80118"/><text x="4.9379%" y="1183.50">[unknown]</text></g><g><title>tremor_script::srs::EventPayload::try_new (17 samples, 0.02%)</title><rect x="80.7933%" y="1157" width="0.0162%" height="15" fill="rgb(207,105,14)" fg:x="85035" fg:w="17"/><text x="81.0433%" y="1167.50"></text></g><g><title>snmalloc::AllocPool&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt;::acquire (12 samples, 0.01%)</title><rect x="80.8190%" y="709" width="0.0114%" height="15" fill="rgb(245,62,29)" fg:x="85062" fg:w="12"/><text x="81.0690%" y="719.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (12 samples, 0.01%)</title><rect x="80.8190%" y="693" width="0.0114%" height="15" fill="rgb(236,202,4)" fg:x="85062" fg:w="12"/><text x="81.0690%" y="703.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (12 samples, 0.01%)</title><rect x="80.8190%" y="677" width="0.0114%" height="15" fill="rgb(250,67,1)" fg:x="85062" fg:w="12"/><text x="81.0690%" y="687.50"></text></g><g><title>snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;::alloc_chunk&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, 4096ul, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (12 samples, 0.01%)</title><rect x="80.8190%" y="661" width="0.0114%" height="15" fill="rgb(253,115,44)" fg:x="85062" fg:w="12"/><text x="81.0690%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::Allocator (12 samples, 0.01%)</title><rect x="80.8190%" y="645" width="0.0114%" height="15" fill="rgb(251,139,18)" fg:x="85062" fg:w="12"/><text x="81.0690%" y="655.50"></text></g><g><title>async_channel::bounded (13 samples, 0.01%)</title><rect x="80.8190%" y="933" width="0.0124%" height="15" fill="rgb(218,22,32)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="80.8190%" y="917" width="0.0124%" height="15" fill="rgb(243,53,5)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="80.8190%" y="901" width="0.0124%" height="15" fill="rgb(227,56,16)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="80.8190%" y="885" width="0.0124%" height="15" fill="rgb(245,53,0)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="80.8190%" y="869" width="0.0124%" height="15" fill="rgb(216,170,35)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="879.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="80.8190%" y="853" width="0.0124%" height="15" fill="rgb(211,200,8)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="863.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="80.8190%" y="837" width="0.0124%" height="15" fill="rgb(228,204,44)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="80.8190%" y="821" width="0.0124%" height="15" fill="rgb(214,121,17)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="831.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="80.8190%" y="805" width="0.0124%" height="15" fill="rgb(233,64,38)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="80.8190%" y="789" width="0.0124%" height="15" fill="rgb(253,54,19)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="80.8190%" y="773" width="0.0124%" height="15" fill="rgb(253,94,18)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="80.8190%" y="757" width="0.0124%" height="15" fill="rgb(227,57,52)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="80.8190%" y="741" width="0.0124%" height="15" fill="rgb(230,228,50)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="751.50"></text></g><g><title>snmalloc::init_thread_allocator (13 samples, 0.01%)</title><rect x="80.8190%" y="725" width="0.0124%" height="15" fill="rgb(217,205,27)" fg:x="85062" fg:w="13"/><text x="81.0690%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (19 samples, 0.02%)</title><rect x="80.9568%" y="469" width="0.0181%" height="15" fill="rgb(252,71,50)" fg:x="85207" fg:w="19"/><text x="81.2068%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (15 samples, 0.01%)</title><rect x="80.9606%" y="453" width="0.0143%" height="15" fill="rgb(209,86,4)" fg:x="85211" fg:w="15"/><text x="81.2106%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.01%)</title><rect x="80.9634%" y="437" width="0.0114%" height="15" fill="rgb(229,94,0)" fg:x="85214" fg:w="12"/><text x="81.2134%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="80.9748%" y="469" width="0.0124%" height="15" fill="rgb(252,223,21)" fg:x="85226" fg:w="13"/><text x="81.2248%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (95 samples, 0.09%)</title><rect x="80.9140%" y="533" width="0.0903%" height="15" fill="rgb(230,210,4)" fg:x="85162" fg:w="95"/><text x="81.1640%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (78 samples, 0.07%)</title><rect x="80.9302%" y="517" width="0.0741%" height="15" fill="rgb(240,149,38)" fg:x="85179" fg:w="78"/><text x="81.1802%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (64 samples, 0.06%)</title><rect x="80.9435%" y="501" width="0.0608%" height="15" fill="rgb(254,105,20)" fg:x="85193" fg:w="64"/><text x="81.1935%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (53 samples, 0.05%)</title><rect x="80.9539%" y="485" width="0.0504%" height="15" fill="rgb(253,87,46)" fg:x="85204" fg:w="53"/><text x="81.2039%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.10%)</title><rect x="80.9140%" y="565" width="0.0998%" height="15" fill="rgb(253,116,33)" fg:x="85162" fg:w="105"/><text x="81.1640%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (105 samples, 0.10%)</title><rect x="80.9140%" y="549" width="0.0998%" height="15" fill="rgb(229,198,5)" fg:x="85162" fg:w="105"/><text x="81.1640%" y="559.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (254 samples, 0.24%)</title><rect x="81.1031%" y="533" width="0.2413%" height="15" fill="rgb(242,38,37)" fg:x="85361" fg:w="254"/><text x="81.3531%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (185 samples, 0.18%)</title><rect x="81.1686%" y="517" width="0.1758%" height="15" fill="rgb(242,69,53)" fg:x="85430" fg:w="185"/><text x="81.4186%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (185 samples, 0.18%)</title><rect x="81.1686%" y="501" width="0.1758%" height="15" fill="rgb(249,80,16)" fg:x="85430" fg:w="185"/><text x="81.4186%" y="511.50"></text></g><g><title>async_executor::steal (351 samples, 0.33%)</title><rect x="81.0138%" y="565" width="0.3335%" height="15" fill="rgb(206,128,11)" fg:x="85267" fg:w="351"/><text x="81.2638%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (342 samples, 0.32%)</title><rect x="81.0223%" y="549" width="0.3249%" height="15" fill="rgb(212,35,20)" fg:x="85276" fg:w="342"/><text x="81.2723%" y="559.50"></text></g><g><title>concurrent_queue::full_fence (384 samples, 0.36%)</title><rect x="81.5582%" y="533" width="0.3648%" height="15" fill="rgb(236,79,13)" fg:x="85840" fg:w="384"/><text x="81.8082%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (383 samples, 0.36%)</title><rect x="81.5591%" y="517" width="0.3639%" height="15" fill="rgb(233,123,3)" fg:x="85841" fg:w="383"/><text x="81.8091%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (383 samples, 0.36%)</title><rect x="81.5591%" y="501" width="0.3639%" height="15" fill="rgb(214,93,52)" fg:x="85841" fg:w="383"/><text x="81.8091%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (383 samples, 0.36%)</title><rect x="81.5591%" y="485" width="0.3639%" height="15" fill="rgb(251,37,40)" fg:x="85841" fg:w="383"/><text x="81.8091%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (564 samples, 0.54%)</title><rect x="81.4233%" y="549" width="0.5359%" height="15" fill="rgb(227,80,54)" fg:x="85698" fg:w="564"/><text x="81.6733%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (37 samples, 0.04%)</title><rect x="81.9240%" y="533" width="0.0352%" height="15" fill="rgb(254,48,11)" fg:x="86225" fg:w="37"/><text x="82.1740%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.03%)</title><rect x="81.9297%" y="517" width="0.0295%" height="15" fill="rgb(235,193,26)" fg:x="86231" fg:w="31"/><text x="82.1797%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (135 samples, 0.13%)</title><rect x="81.9867%" y="533" width="0.1283%" height="15" fill="rgb(229,99,21)" fg:x="86291" fg:w="135"/><text x="82.2367%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (135 samples, 0.13%)</title><rect x="81.9867%" y="517" width="0.1283%" height="15" fill="rgb(211,140,41)" fg:x="86291" fg:w="135"/><text x="82.2367%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (135 samples, 0.13%)</title><rect x="81.9867%" y="501" width="0.1283%" height="15" fill="rgb(240,227,30)" fg:x="86291" fg:w="135"/><text x="82.2367%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (135 samples, 0.13%)</title><rect x="81.9867%" y="485" width="0.1283%" height="15" fill="rgb(215,224,45)" fg:x="86291" fg:w="135"/><text x="82.2367%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="82.1159%" y="517" width="0.0105%" height="15" fill="rgb(206,123,31)" fg:x="86427" fg:w="11"/><text x="82.3659%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="82.1159%" y="501" width="0.0105%" height="15" fill="rgb(210,138,16)" fg:x="86427" fg:w="11"/><text x="82.3659%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (13 samples, 0.01%)</title><rect x="82.1159%" y="533" width="0.0124%" height="15" fill="rgb(228,57,28)" fg:x="86427" fg:w="13"/><text x="82.3659%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (43 samples, 0.04%)</title><rect x="82.1387%" y="533" width="0.0409%" height="15" fill="rgb(242,170,10)" fg:x="86451" fg:w="43"/><text x="82.3887%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (43 samples, 0.04%)</title><rect x="82.1387%" y="517" width="0.0409%" height="15" fill="rgb(228,214,39)" fg:x="86451" fg:w="43"/><text x="82.3887%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (50 samples, 0.05%)</title><rect x="82.1796%" y="533" width="0.0475%" height="15" fill="rgb(218,179,33)" fg:x="86494" fg:w="50"/><text x="82.4296%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_or (50 samples, 0.05%)</title><rect x="82.1796%" y="517" width="0.0475%" height="15" fill="rgb(235,193,39)" fg:x="86494" fg:w="50"/><text x="82.4296%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,036 samples, 0.98%)</title><rect x="81.3473%" y="565" width="0.9843%" height="15" fill="rgb(219,221,36)" fg:x="85618" fg:w="1036"/><text x="81.5973%" y="575.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (392 samples, 0.37%)</title><rect x="81.9591%" y="549" width="0.3724%" height="15" fill="rgb(248,218,19)" fg:x="86262" fg:w="392"/><text x="82.2091%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (110 samples, 0.10%)</title><rect x="82.2271%" y="533" width="0.1045%" height="15" fill="rgb(205,50,9)" fg:x="86544" fg:w="110"/><text x="82.4771%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (110 samples, 0.10%)</title><rect x="82.2271%" y="517" width="0.1045%" height="15" fill="rgb(238,81,28)" fg:x="86544" fg:w="110"/><text x="82.4771%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (62 samples, 0.06%)</title><rect x="82.3382%" y="501" width="0.0589%" height="15" fill="rgb(235,110,19)" fg:x="86661" fg:w="62"/><text x="82.5882%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (62 samples, 0.06%)</title><rect x="82.3382%" y="485" width="0.0589%" height="15" fill="rgb(214,7,14)" fg:x="86661" fg:w="62"/><text x="82.5882%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (156 samples, 0.15%)</title><rect x="82.3316%" y="565" width="0.1482%" height="15" fill="rgb(211,77,3)" fg:x="86654" fg:w="156"/><text x="82.5816%" y="575.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (156 samples, 0.15%)</title><rect x="82.3316%" y="549" width="0.1482%" height="15" fill="rgb(229,5,9)" fg:x="86654" fg:w="156"/><text x="82.5816%" y="559.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (156 samples, 0.15%)</title><rect x="82.3316%" y="533" width="0.1482%" height="15" fill="rgb(225,90,11)" fg:x="86654" fg:w="156"/><text x="82.5816%" y="543.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (151 samples, 0.14%)</title><rect x="82.3363%" y="517" width="0.1435%" height="15" fill="rgb(242,56,8)" fg:x="86659" fg:w="151"/><text x="82.5863%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (87 samples, 0.08%)</title><rect x="82.3971%" y="501" width="0.0827%" height="15" fill="rgb(249,212,39)" fg:x="86723" fg:w="87"/><text x="82.6471%" y="511.50"></text></g><g><title>___pthread_rwlock_unlock (87 samples, 0.08%)</title><rect x="82.3971%" y="485" width="0.0827%" height="15" fill="rgb(236,90,9)" fg:x="86723" fg:w="87"/><text x="82.6471%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.01%)</title><rect x="82.4836%" y="533" width="0.0133%" height="15" fill="rgb(206,88,35)" fg:x="86814" fg:w="14"/><text x="82.7336%" y="543.50"></text></g><g><title>fastrand::usize (18 samples, 0.02%)</title><rect x="82.4808%" y="565" width="0.0171%" height="15" fill="rgb(205,126,30)" fg:x="86811" fg:w="18"/><text x="82.7308%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.02%)</title><rect x="82.4817%" y="549" width="0.0162%" height="15" fill="rgb(230,176,12)" fg:x="86812" fg:w="17"/><text x="82.7317%" y="559.50"></text></g><g><title>___pthread_rwlock_rdlock (101 samples, 0.10%)</title><rect x="82.5093%" y="517" width="0.0960%" height="15" fill="rgb(243,19,9)" fg:x="86841" fg:w="101"/><text x="82.7593%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1,852 samples, 1.76%)</title><rect x="80.8798%" y="581" width="1.7596%" height="15" fill="rgb(245,171,17)" fg:x="85126" fg:w="1852"/><text x="81.1298%" y="591.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (149 samples, 0.14%)</title><rect x="82.4979%" y="565" width="0.1416%" height="15" fill="rgb(227,52,21)" fg:x="86829" fg:w="149"/><text x="82.7479%" y="575.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (145 samples, 0.14%)</title><rect x="82.5017%" y="549" width="0.1378%" height="15" fill="rgb(238,69,14)" fg:x="86833" fg:w="145"/><text x="82.7517%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (143 samples, 0.14%)</title><rect x="82.5036%" y="533" width="0.1359%" height="15" fill="rgb(241,156,39)" fg:x="86835" fg:w="143"/><text x="82.7536%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (36 samples, 0.03%)</title><rect x="82.6052%" y="517" width="0.0342%" height="15" fill="rgb(212,227,28)" fg:x="86942" fg:w="36"/><text x="82.8552%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (36 samples, 0.03%)</title><rect x="82.6052%" y="501" width="0.0342%" height="15" fill="rgb(209,118,27)" fg:x="86942" fg:w="36"/><text x="82.8552%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (28 samples, 0.03%)</title><rect x="82.6404%" y="565" width="0.0266%" height="15" fill="rgb(226,102,5)" fg:x="86979" fg:w="28"/><text x="82.8904%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="82.6404%" y="549" width="0.0266%" height="15" fill="rgb(223,34,3)" fg:x="86979" fg:w="28"/><text x="82.8904%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (26 samples, 0.02%)</title><rect x="82.6423%" y="533" width="0.0247%" height="15" fill="rgb(221,81,38)" fg:x="86981" fg:w="26"/><text x="82.8923%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (26 samples, 0.02%)</title><rect x="82.6423%" y="517" width="0.0247%" height="15" fill="rgb(236,219,28)" fg:x="86981" fg:w="26"/><text x="82.8923%" y="527.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (26 samples, 0.02%)</title><rect x="82.6423%" y="501" width="0.0247%" height="15" fill="rgb(213,200,14)" fg:x="86981" fg:w="26"/><text x="82.8923%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (26 samples, 0.02%)</title><rect x="82.6670%" y="565" width="0.0247%" height="15" fill="rgb(240,33,19)" fg:x="87007" fg:w="26"/><text x="82.9170%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.02%)</title><rect x="82.6670%" y="549" width="0.0247%" height="15" fill="rgb(233,113,27)" fg:x="87007" fg:w="26"/><text x="82.9170%" y="559.50"></text></g><g><title>__fdget_pos (17 samples, 0.02%)</title><rect x="82.7135%" y="405" width="0.0162%" height="15" fill="rgb(220,221,18)" fg:x="87056" fg:w="17"/><text x="82.9635%" y="415.50"></text></g><g><title>__fget_light (17 samples, 0.02%)</title><rect x="82.7135%" y="389" width="0.0162%" height="15" fill="rgb(238,92,8)" fg:x="87056" fg:w="17"/><text x="82.9635%" y="399.50"></text></g><g><title>select_task_rq_fair (17 samples, 0.02%)</title><rect x="82.7743%" y="277" width="0.0162%" height="15" fill="rgb(222,164,16)" fg:x="87120" fg:w="17"/><text x="83.0243%" y="287.50"></text></g><g><title>enqueue_task_fair (43 samples, 0.04%)</title><rect x="82.7914%" y="245" width="0.0409%" height="15" fill="rgb(241,119,3)" fg:x="87138" fg:w="43"/><text x="83.0414%" y="255.50"></text></g><g><title>enqueue_entity (29 samples, 0.03%)</title><rect x="82.8048%" y="229" width="0.0276%" height="15" fill="rgb(241,44,8)" fg:x="87152" fg:w="29"/><text x="83.0548%" y="239.50"></text></g><g><title>psi_group_change (18 samples, 0.02%)</title><rect x="82.8494%" y="229" width="0.0171%" height="15" fill="rgb(230,36,40)" fg:x="87199" fg:w="18"/><text x="83.0994%" y="239.50"></text></g><g><title>ttwu_do_activate (81 samples, 0.08%)</title><rect x="82.7905%" y="277" width="0.0770%" height="15" fill="rgb(243,16,36)" fg:x="87137" fg:w="81"/><text x="83.0405%" y="287.50"></text></g><g><title>enqueue_task (80 samples, 0.08%)</title><rect x="82.7914%" y="261" width="0.0760%" height="15" fill="rgb(231,4,26)" fg:x="87138" fg:w="80"/><text x="83.0414%" y="271.50"></text></g><g><title>psi_task_change (29 samples, 0.03%)</title><rect x="82.8399%" y="245" width="0.0276%" height="15" fill="rgb(240,9,31)" fg:x="87189" fg:w="29"/><text x="83.0899%" y="255.50"></text></g><g><title>ttwu_do_wakeup (12 samples, 0.01%)</title><rect x="82.8675%" y="277" width="0.0114%" height="15" fill="rgb(207,173,15)" fg:x="87218" fg:w="12"/><text x="83.1175%" y="287.50"></text></g><g><title>check_preempt_curr (12 samples, 0.01%)</title><rect x="82.8675%" y="261" width="0.0114%" height="15" fill="rgb(224,192,53)" fg:x="87218" fg:w="12"/><text x="83.1175%" y="271.50"></text></g><g><title>__wake_up_common (147 samples, 0.14%)</title><rect x="82.7553%" y="325" width="0.1397%" height="15" fill="rgb(223,67,28)" fg:x="87100" fg:w="147"/><text x="83.0053%" y="335.50"></text></g><g><title>autoremove_wake_function (144 samples, 0.14%)</title><rect x="82.7582%" y="309" width="0.1368%" height="15" fill="rgb(211,20,47)" fg:x="87103" fg:w="144"/><text x="83.0082%" y="319.50"></text></g><g><title>try_to_wake_up (141 samples, 0.13%)</title><rect x="82.7610%" y="293" width="0.1340%" height="15" fill="rgb(240,228,2)" fg:x="87106" fg:w="141"/><text x="83.0110%" y="303.50"></text></g><g><title>update_rq_clock (12 samples, 0.01%)</title><rect x="82.8836%" y="277" width="0.0114%" height="15" fill="rgb(248,151,12)" fg:x="87235" fg:w="12"/><text x="83.1336%" y="287.50"></text></g><g><title>__wake_up_common_lock (154 samples, 0.15%)</title><rect x="82.7553%" y="341" width="0.1463%" height="15" fill="rgb(244,8,39)" fg:x="87100" fg:w="154"/><text x="83.0053%" y="351.50"></text></g><g><title>_raw_read_lock_irqsave (11 samples, 0.01%)</title><rect x="82.9017%" y="341" width="0.0105%" height="15" fill="rgb(222,26,8)" fg:x="87254" fg:w="11"/><text x="83.1517%" y="351.50"></text></g><g><title>__wake_up_common (186 samples, 0.18%)</title><rect x="82.7411%" y="373" width="0.1767%" height="15" fill="rgb(213,106,44)" fg:x="87085" fg:w="186"/><text x="82.9911%" y="383.50"></text></g><g><title>ep_poll_callback (182 samples, 0.17%)</title><rect x="82.7449%" y="357" width="0.1729%" height="15" fill="rgb(214,129,20)" fg:x="87089" fg:w="182"/><text x="82.9949%" y="367.50"></text></g><g><title>_raw_spin_lock_irq (15 samples, 0.01%)</title><rect x="82.9207%" y="373" width="0.0143%" height="15" fill="rgb(212,32,13)" fg:x="87274" fg:w="15"/><text x="83.1707%" y="383.50"></text></g><g><title>ksys_write (235 samples, 0.22%)</title><rect x="82.7126%" y="421" width="0.2233%" height="15" fill="rgb(208,168,33)" fg:x="87055" fg:w="235"/><text x="82.9626%" y="431.50"></text></g><g><title>vfs_write (213 samples, 0.20%)</title><rect x="82.7335%" y="405" width="0.2024%" height="15" fill="rgb(231,207,8)" fg:x="87077" fg:w="213"/><text x="82.9835%" y="415.50"></text></g><g><title>eventfd_write (210 samples, 0.20%)</title><rect x="82.7363%" y="389" width="0.1995%" height="15" fill="rgb(235,219,23)" fg:x="87080" fg:w="210"/><text x="82.9863%" y="399.50"></text></g><g><title>syscall_exit_to_user_mode (31 samples, 0.03%)</title><rect x="82.9378%" y="421" width="0.0295%" height="15" fill="rgb(226,216,26)" fg:x="87292" fg:w="31"/><text x="83.1878%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (277 samples, 0.26%)</title><rect x="82.7059%" y="453" width="0.2632%" height="15" fill="rgb(239,137,16)" fg:x="87048" fg:w="277"/><text x="82.9559%" y="463.50"></text></g><g><title>do_syscall_64 (277 samples, 0.26%)</title><rect x="82.7059%" y="437" width="0.2632%" height="15" fill="rgb(207,12,36)" fg:x="87048" fg:w="277"/><text x="82.9559%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::notify (290 samples, 0.28%)</title><rect x="82.6955%" y="517" width="0.2755%" height="15" fill="rgb(210,214,24)" fg:x="87037" fg:w="290"/><text x="82.9455%" y="527.50"></text></g><g><title>polling::Poller::notify (290 samples, 0.28%)</title><rect x="82.6955%" y="501" width="0.2755%" height="15" fill="rgb(206,56,30)" fg:x="87037" fg:w="290"/><text x="82.9455%" y="511.50"></text></g><g><title>polling::epoll::Poller::notify (288 samples, 0.27%)</title><rect x="82.6974%" y="485" width="0.2736%" height="15" fill="rgb(228,143,26)" fg:x="87039" fg:w="288"/><text x="82.9474%" y="495.50"></text></g><g><title>__GI___write (288 samples, 0.27%)</title><rect x="82.6974%" y="469" width="0.2736%" height="15" fill="rgb(216,218,46)" fg:x="87039" fg:w="288"/><text x="82.9474%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (45 samples, 0.04%)</title><rect x="82.9853%" y="485" width="0.0428%" height="15" fill="rgb(206,6,19)" fg:x="87342" fg:w="45"/><text x="83.2353%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (45 samples, 0.04%)</title><rect x="82.9853%" y="469" width="0.0428%" height="15" fill="rgb(239,177,51)" fg:x="87342" fg:w="45"/><text x="83.2353%" y="479.50"></text></g><g><title>__entry_text_start (12 samples, 0.01%)</title><rect x="83.0822%" y="421" width="0.0114%" height="15" fill="rgb(216,55,25)" fg:x="87444" fg:w="12"/><text x="83.3322%" y="431.50"></text></g><g><title>_raw_spin_lock (30 samples, 0.03%)</title><rect x="83.1857%" y="341" width="0.0285%" height="15" fill="rgb(231,163,29)" fg:x="87553" fg:w="30"/><text x="83.4357%" y="351.50"></text></g><g><title>futex_hash (13 samples, 0.01%)</title><rect x="83.2143%" y="341" width="0.0124%" height="15" fill="rgb(232,149,50)" fg:x="87583" fg:w="13"/><text x="83.4643%" y="351.50"></text></g><g><title>futex_wake_mark (53 samples, 0.05%)</title><rect x="83.2266%" y="341" width="0.0504%" height="15" fill="rgb(223,142,48)" fg:x="87596" fg:w="53"/><text x="83.4766%" y="351.50"></text></g><g><title>__futex_unqueue (19 samples, 0.02%)</title><rect x="83.2589%" y="325" width="0.0181%" height="15" fill="rgb(245,83,23)" fg:x="87630" fg:w="19"/><text x="83.5089%" y="335.50"></text></g><g><title>select_task_rq_fair (94 samples, 0.09%)</title><rect x="83.3501%" y="309" width="0.0893%" height="15" fill="rgb(224,63,2)" fg:x="87726" fg:w="94"/><text x="83.6001%" y="319.50"></text></g><g><title>available_idle_cpu (40 samples, 0.04%)</title><rect x="83.4014%" y="293" width="0.0380%" height="15" fill="rgb(218,65,53)" fg:x="87780" fg:w="40"/><text x="83.6514%" y="303.50"></text></g><g><title>reweight_entity (23 samples, 0.02%)</title><rect x="83.5867%" y="245" width="0.0219%" height="15" fill="rgb(221,84,29)" fg:x="87975" fg:w="23"/><text x="83.8367%" y="255.50"></text></g><g><title>update_cfs_group (18 samples, 0.02%)</title><rect x="83.6086%" y="245" width="0.0171%" height="15" fill="rgb(234,0,32)" fg:x="87998" fg:w="18"/><text x="83.8586%" y="255.50"></text></g><g><title>__update_load_avg_cfs_rq (17 samples, 0.02%)</title><rect x="83.6523%" y="229" width="0.0162%" height="15" fill="rgb(206,20,16)" fg:x="88044" fg:w="17"/><text x="83.9023%" y="239.50"></text></g><g><title>enqueue_task_fair (231 samples, 0.22%)</title><rect x="83.4622%" y="277" width="0.2195%" height="15" fill="rgb(244,172,18)" fg:x="87844" fg:w="231"/><text x="83.7122%" y="287.50"></text></g><g><title>enqueue_entity (167 samples, 0.16%)</title><rect x="83.5230%" y="261" width="0.1587%" height="15" fill="rgb(254,133,1)" fg:x="87908" fg:w="167"/><text x="83.7730%" y="271.50"></text></g><g><title>update_load_avg (54 samples, 0.05%)</title><rect x="83.6304%" y="245" width="0.0513%" height="15" fill="rgb(222,206,41)" fg:x="88021" fg:w="54"/><text x="83.8804%" y="255.50"></text></g><g><title>__update_load_avg_se (14 samples, 0.01%)</title><rect x="83.6684%" y="229" width="0.0133%" height="15" fill="rgb(212,3,42)" fg:x="88061" fg:w="14"/><text x="83.9184%" y="239.50"></text></g><g><title>psi_group_change (35 samples, 0.03%)</title><rect x="83.6827%" y="277" width="0.0333%" height="15" fill="rgb(241,11,4)" fg:x="88076" fg:w="35"/><text x="83.9327%" y="287.50"></text></g><g><title>psi_group_change (113 samples, 0.11%)</title><rect x="83.7549%" y="261" width="0.1074%" height="15" fill="rgb(205,19,26)" fg:x="88152" fg:w="113"/><text x="84.0049%" y="271.50"></text></g><g><title>ttwu_do_activate (454 samples, 0.43%)</title><rect x="83.4394%" y="309" width="0.4314%" height="15" fill="rgb(210,179,32)" fg:x="87820" fg:w="454"/><text x="83.6894%" y="319.50"></text></g><g><title>enqueue_task (445 samples, 0.42%)</title><rect x="83.4480%" y="293" width="0.4228%" height="15" fill="rgb(227,116,49)" fg:x="87829" fg:w="445"/><text x="83.6980%" y="303.50"></text></g><g><title>psi_task_change (163 samples, 0.15%)</title><rect x="83.7159%" y="277" width="0.1549%" height="15" fill="rgb(211,146,6)" fg:x="88111" fg:w="163"/><text x="83.9659%" y="287.50"></text></g><g><title>ttwu_do_wakeup (44 samples, 0.04%)</title><rect x="83.8708%" y="309" width="0.0418%" height="15" fill="rgb(219,44,39)" fg:x="88274" fg:w="44"/><text x="84.1208%" y="319.50"></text></g><g><title>check_preempt_curr (40 samples, 0.04%)</title><rect x="83.8746%" y="293" width="0.0380%" height="15" fill="rgb(234,128,11)" fg:x="88278" fg:w="40"/><text x="84.1246%" y="303.50"></text></g><g><title>resched_curr (30 samples, 0.03%)</title><rect x="83.8841%" y="277" width="0.0285%" height="15" fill="rgb(220,183,53)" fg:x="88288" fg:w="30"/><text x="84.1341%" y="287.50"></text></g><g><title>ttwu_queue_wakelist (26 samples, 0.02%)</title><rect x="83.9126%" y="309" width="0.0247%" height="15" fill="rgb(213,219,32)" fg:x="88318" fg:w="26"/><text x="84.1626%" y="319.50"></text></g><g><title>sched_clock_cpu (20 samples, 0.02%)</title><rect x="83.9677%" y="293" width="0.0190%" height="15" fill="rgb(232,156,16)" fg:x="88376" fg:w="20"/><text x="84.2177%" y="303.50"></text></g><g><title>native_sched_clock (18 samples, 0.02%)</title><rect x="83.9696%" y="277" width="0.0171%" height="15" fill="rgb(246,135,34)" fg:x="88378" fg:w="18"/><text x="84.2196%" y="287.50"></text></g><g><title>__x64_sys_futex (919 samples, 0.87%)</title><rect x="83.1154%" y="389" width="0.8732%" height="15" fill="rgb(241,99,0)" fg:x="87479" fg:w="919"/><text x="83.3654%" y="399.50"></text></g><g><title>do_futex (907 samples, 0.86%)</title><rect x="83.1268%" y="373" width="0.8618%" height="15" fill="rgb(222,103,45)" fg:x="87491" fg:w="907"/><text x="83.3768%" y="383.50"></text></g><g><title>futex_wake (899 samples, 0.85%)</title><rect x="83.1344%" y="357" width="0.8542%" height="15" fill="rgb(212,57,4)" fg:x="87499" fg:w="899"/><text x="83.3844%" y="367.50"></text></g><g><title>wake_up_q (738 samples, 0.70%)</title><rect x="83.2874%" y="341" width="0.7012%" height="15" fill="rgb(215,68,47)" fg:x="87660" fg:w="738"/><text x="83.5374%" y="351.50"></text></g><g><title>try_to_wake_up (729 samples, 0.69%)</title><rect x="83.2960%" y="325" width="0.6926%" height="15" fill="rgb(230,84,2)" fg:x="87669" fg:w="729"/><text x="83.5460%" y="335.50"></text></g><g><title>update_rq_clock (54 samples, 0.05%)</title><rect x="83.9373%" y="309" width="0.0513%" height="15" fill="rgb(220,102,14)" fg:x="88344" fg:w="54"/><text x="84.1873%" y="319.50"></text></g><g><title>exit_to_user_mode_prepare (12 samples, 0.01%)</title><rect x="84.1682%" y="373" width="0.0114%" height="15" fill="rgb(240,10,32)" fg:x="88587" fg:w="12"/><text x="84.4182%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (205 samples, 0.19%)</title><rect x="83.9933%" y="389" width="0.1948%" height="15" fill="rgb(215,47,27)" fg:x="88403" fg:w="205"/><text x="84.2433%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,160 samples, 1.10%)</title><rect x="83.0983%" y="421" width="1.1021%" height="15" fill="rgb(233,188,43)" fg:x="87461" fg:w="1160"/><text x="83.3483%" y="431.50"></text></g><g><title>do_syscall_64 (1,150 samples, 1.09%)</title><rect x="83.1078%" y="405" width="1.0926%" height="15" fill="rgb(253,190,1)" fg:x="87471" fg:w="1150"/><text x="83.3578%" y="415.50"></text></g><g><title>syscall_trace_enter.constprop.0 (13 samples, 0.01%)</title><rect x="84.1881%" y="389" width="0.0124%" height="15" fill="rgb(206,114,52)" fg:x="88608" fg:w="13"/><text x="84.4381%" y="399.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1,239 samples, 1.18%)</title><rect x="83.0280%" y="485" width="1.1772%" height="15" fill="rgb(233,120,37)" fg:x="87387" fg:w="1239"/><text x="83.2780%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1,239 samples, 1.18%)</title><rect x="83.0280%" y="469" width="1.1772%" height="15" fill="rgb(214,52,39)" fg:x="87387" fg:w="1239"/><text x="83.2780%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1,239 samples, 1.18%)</title><rect x="83.0280%" y="453" width="1.1772%" height="15" fill="rgb(223,80,29)" fg:x="87387" fg:w="1239"/><text x="83.2780%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (1,239 samples, 1.18%)</title><rect x="83.0280%" y="437" width="1.1772%" height="15" fill="rgb(230,101,40)" fg:x="87387" fg:w="1239"/><text x="83.2780%" y="447.50"></text></g><g><title>parking::Unparker::unpark (1,342 samples, 1.28%)</title><rect x="82.9720%" y="517" width="1.2751%" height="15" fill="rgb(219,211,8)" fg:x="87328" fg:w="1342"/><text x="83.2220%" y="527.50"></text></g><g><title>parking::Inner::unpark (1,337 samples, 1.27%)</title><rect x="82.9767%" y="501" width="1.2703%" height="15" fill="rgb(252,126,28)" fg:x="87333" fg:w="1337"/><text x="83.2267%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (44 samples, 0.04%)</title><rect x="84.2052%" y="485" width="0.0418%" height="15" fill="rgb(215,56,38)" fg:x="88626" fg:w="44"/><text x="84.4552%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (43 samples, 0.04%)</title><rect x="84.2062%" y="469" width="0.0409%" height="15" fill="rgb(249,55,44)" fg:x="88627" fg:w="43"/><text x="84.4562%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (42 samples, 0.04%)</title><rect x="84.2071%" y="453" width="0.0399%" height="15" fill="rgb(220,221,32)" fg:x="88628" fg:w="42"/><text x="84.4571%" y="463.50"></text></g><g><title>___pthread_mutex_lock (42 samples, 0.04%)</title><rect x="84.2071%" y="437" width="0.0399%" height="15" fill="rgb(212,216,41)" fg:x="88628" fg:w="42"/><text x="84.4571%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (1,638 samples, 1.56%)</title><rect x="82.6945%" y="533" width="1.5563%" height="15" fill="rgb(228,213,43)" fg:x="87036" fg:w="1638"/><text x="82.9445%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (1,670 samples, 1.59%)</title><rect x="82.6917%" y="565" width="1.5867%" height="15" fill="rgb(211,31,26)" fg:x="87033" fg:w="1670"/><text x="82.9417%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1,668 samples, 1.58%)</title><rect x="82.6936%" y="549" width="1.5848%" height="15" fill="rgb(229,202,19)" fg:x="87035" fg:w="1668"/><text x="82.9436%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (29 samples, 0.03%)</title><rect x="84.2508%" y="533" width="0.0276%" height="15" fill="rgb(229,105,46)" fg:x="88674" fg:w="29"/><text x="84.5008%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="84.2508%" y="517" width="0.0276%" height="15" fill="rgb(235,108,1)" fg:x="88674" fg:w="29"/><text x="84.5008%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (29 samples, 0.03%)</title><rect x="84.2508%" y="501" width="0.0276%" height="15" fill="rgb(245,111,35)" fg:x="88674" fg:w="29"/><text x="84.5008%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (29 samples, 0.03%)</title><rect x="84.2508%" y="485" width="0.0276%" height="15" fill="rgb(219,185,31)" fg:x="88674" fg:w="29"/><text x="84.5008%" y="495.50"></text></g><g><title>async_executor::State::notify (1,741 samples, 1.65%)</title><rect x="82.6394%" y="581" width="1.6542%" height="15" fill="rgb(214,4,43)" fg:x="86978" fg:w="1741"/><text x="82.8894%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.02%)</title><rect x="84.2784%" y="565" width="0.0152%" height="15" fill="rgb(235,227,40)" fg:x="88703" fg:w="16"/><text x="84.5284%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="84.2803%" y="549" width="0.0133%" height="15" fill="rgb(230,88,30)" fg:x="88705" fg:w="14"/><text x="84.5303%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="84.2803%" y="533" width="0.0133%" height="15" fill="rgb(216,217,1)" fg:x="88705" fg:w="14"/><text x="84.5303%" y="543.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="84.2803%" y="517" width="0.0133%" height="15" fill="rgb(248,139,50)" fg:x="88705" fg:w="14"/><text x="84.5303%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (50 samples, 0.05%)</title><rect x="84.3069%" y="549" width="0.0475%" height="15" fill="rgb(233,1,21)" fg:x="88733" fg:w="50"/><text x="84.5569%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (49 samples, 0.05%)</title><rect x="84.3078%" y="533" width="0.0466%" height="15" fill="rgb(215,183,12)" fg:x="88734" fg:w="49"/><text x="84.5578%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (48 samples, 0.05%)</title><rect x="84.3088%" y="517" width="0.0456%" height="15" fill="rgb(229,104,42)" fg:x="88735" fg:w="48"/><text x="84.5588%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (48 samples, 0.05%)</title><rect x="84.3088%" y="501" width="0.0456%" height="15" fill="rgb(243,34,48)" fg:x="88735" fg:w="48"/><text x="84.5588%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (47 samples, 0.04%)</title><rect x="84.3097%" y="485" width="0.0447%" height="15" fill="rgb(239,11,44)" fg:x="88736" fg:w="47"/><text x="84.5597%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (47 samples, 0.04%)</title><rect x="84.3097%" y="469" width="0.0447%" height="15" fill="rgb(231,98,35)" fg:x="88736" fg:w="47"/><text x="84.5597%" y="479.50"></text></g><g><title>async_executor::Sleepers::insert (71 samples, 0.07%)</title><rect x="84.3059%" y="565" width="0.0675%" height="15" fill="rgb(233,28,25)" fg:x="88732" fg:w="71"/><text x="84.5559%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="84.3629%" y="549" width="0.0105%" height="15" fill="rgb(234,123,11)" fg:x="88792" fg:w="11"/><text x="84.6129%" y="559.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="84.3629%" y="533" width="0.0105%" height="15" fill="rgb(220,69,3)" fg:x="88792" fg:w="11"/><text x="84.6129%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="84.3962%" y="549" width="0.0114%" height="15" fill="rgb(214,64,36)" fg:x="88827" fg:w="12"/><text x="84.6462%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="84.4076%" y="549" width="0.0314%" height="15" fill="rgb(211,138,32)" fg:x="88839" fg:w="33"/><text x="84.6576%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (33 samples, 0.03%)</title><rect x="84.4076%" y="533" width="0.0314%" height="15" fill="rgb(213,118,47)" fg:x="88839" fg:w="33"/><text x="84.6576%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="84.4086%" y="517" width="0.0304%" height="15" fill="rgb(243,124,49)" fg:x="88840" fg:w="32"/><text x="84.6586%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="84.4086%" y="501" width="0.0304%" height="15" fill="rgb(221,30,28)" fg:x="88840" fg:w="32"/><text x="84.6586%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (32 samples, 0.03%)</title><rect x="84.4086%" y="485" width="0.0304%" height="15" fill="rgb(246,37,13)" fg:x="88840" fg:w="32"/><text x="84.6586%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (32 samples, 0.03%)</title><rect x="84.4086%" y="469" width="0.0304%" height="15" fill="rgb(249,66,14)" fg:x="88840" fg:w="32"/><text x="84.6586%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.01%)</title><rect x="84.4390%" y="549" width="0.0133%" height="15" fill="rgb(213,166,5)" fg:x="88872" fg:w="14"/><text x="84.6890%" y="559.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="84.4399%" y="533" width="0.0124%" height="15" fill="rgb(221,66,24)" fg:x="88873" fg:w="13"/><text x="84.6899%" y="543.50"></text></g><g><title>async_executor::Sleepers::update (85 samples, 0.08%)</title><rect x="84.3772%" y="565" width="0.0808%" height="15" fill="rgb(210,132,17)" fg:x="88807" fg:w="85"/><text x="84.6272%" y="575.50"></text></g><g><title>__x64_sys_futex (30 samples, 0.03%)</title><rect x="84.5549%" y="437" width="0.0285%" height="15" fill="rgb(243,202,5)" fg:x="88994" fg:w="30"/><text x="84.8049%" y="447.50"></text></g><g><title>do_futex (21 samples, 0.02%)</title><rect x="84.5634%" y="421" width="0.0200%" height="15" fill="rgb(233,70,48)" fg:x="89003" fg:w="21"/><text x="84.8134%" y="431.50"></text></g><g><title>futex_wake (21 samples, 0.02%)</title><rect x="84.5634%" y="405" width="0.0200%" height="15" fill="rgb(238,41,26)" fg:x="89003" fg:w="21"/><text x="84.8134%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (55 samples, 0.05%)</title><rect x="84.5853%" y="437" width="0.0523%" height="15" fill="rgb(241,19,31)" fg:x="89026" fg:w="55"/><text x="84.8353%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (95 samples, 0.09%)</title><rect x="84.5530%" y="469" width="0.0903%" height="15" fill="rgb(214,76,10)" fg:x="88992" fg:w="95"/><text x="84.8030%" y="479.50"></text></g><g><title>do_syscall_64 (94 samples, 0.09%)</title><rect x="84.5539%" y="453" width="0.0893%" height="15" fill="rgb(254,202,22)" fg:x="88993" fg:w="94"/><text x="84.8039%" y="463.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (195 samples, 0.19%)</title><rect x="84.4656%" y="501" width="0.1853%" height="15" fill="rgb(214,72,24)" fg:x="88900" fg:w="195"/><text x="84.7156%" y="511.50"></text></g><g><title>__GI___lll_lock_wake (109 samples, 0.10%)</title><rect x="84.5473%" y="485" width="0.1036%" height="15" fill="rgb(221,92,46)" fg:x="88986" fg:w="109"/><text x="84.7973%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (204 samples, 0.19%)</title><rect x="84.4580%" y="565" width="0.1938%" height="15" fill="rgb(246,13,50)" fg:x="88892" fg:w="204"/><text x="84.7080%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (204 samples, 0.19%)</title><rect x="84.4580%" y="549" width="0.1938%" height="15" fill="rgb(240,165,38)" fg:x="88892" fg:w="204"/><text x="84.7080%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (197 samples, 0.19%)</title><rect x="84.4646%" y="533" width="0.1872%" height="15" fill="rgb(241,24,51)" fg:x="88899" fg:w="197"/><text x="84.7146%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (196 samples, 0.19%)</title><rect x="84.4656%" y="517" width="0.1862%" height="15" fill="rgb(227,51,44)" fg:x="88900" fg:w="196"/><text x="84.7156%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (83 samples, 0.08%)</title><rect x="84.6518%" y="565" width="0.0789%" height="15" fill="rgb(231,121,3)" fg:x="89096" fg:w="83"/><text x="84.9018%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (83 samples, 0.08%)</title><rect x="84.6518%" y="549" width="0.0789%" height="15" fill="rgb(245,3,41)" fg:x="89096" fg:w="83"/><text x="84.9018%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (35 samples, 0.03%)</title><rect x="84.7306%" y="565" width="0.0333%" height="15" fill="rgb(214,13,26)" fg:x="89179" fg:w="35"/><text x="84.9806%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_store (35 samples, 0.03%)</title><rect x="84.7306%" y="549" width="0.0333%" height="15" fill="rgb(252,75,11)" fg:x="89179" fg:w="35"/><text x="84.9806%" y="559.50"></text></g><g><title>__x64_sys_futex (22 samples, 0.02%)</title><rect x="84.9729%" y="453" width="0.0209%" height="15" fill="rgb(218,226,17)" fg:x="89434" fg:w="22"/><text x="85.2229%" y="463.50"></text></g><g><title>do_futex (22 samples, 0.02%)</title><rect x="84.9729%" y="437" width="0.0209%" height="15" fill="rgb(248,89,38)" fg:x="89434" fg:w="22"/><text x="85.2229%" y="447.50"></text></g><g><title>futex_wait (22 samples, 0.02%)</title><rect x="84.9729%" y="421" width="0.0209%" height="15" fill="rgb(237,73,46)" fg:x="89434" fg:w="22"/><text x="85.2229%" y="431.50"></text></g><g><title>futex_wait_setup (21 samples, 0.02%)</title><rect x="84.9739%" y="405" width="0.0200%" height="15" fill="rgb(242,78,33)" fg:x="89435" fg:w="21"/><text x="85.2239%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (11 samples, 0.01%)</title><rect x="84.9938%" y="453" width="0.0105%" height="15" fill="rgb(235,60,3)" fg:x="89456" fg:w="11"/><text x="85.2438%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (35 samples, 0.03%)</title><rect x="84.9720%" y="485" width="0.0333%" height="15" fill="rgb(216,172,19)" fg:x="89433" fg:w="35"/><text x="85.2220%" y="495.50"></text></g><g><title>do_syscall_64 (34 samples, 0.03%)</title><rect x="84.9729%" y="469" width="0.0323%" height="15" fill="rgb(227,6,42)" fg:x="89434" fg:w="34"/><text x="85.2229%" y="479.50"></text></g><g><title>async_executor::Ticker::sleep (751 samples, 0.71%)</title><rect x="84.2936%" y="581" width="0.7135%" height="15" fill="rgb(223,207,42)" fg:x="88719" fg:w="751"/><text x="84.5436%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (256 samples, 0.24%)</title><rect x="84.7639%" y="565" width="0.2432%" height="15" fill="rgb(246,138,30)" fg:x="89214" fg:w="256"/><text x="85.0139%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (247 samples, 0.23%)</title><rect x="84.7724%" y="549" width="0.2347%" height="15" fill="rgb(251,199,47)" fg:x="89223" fg:w="247"/><text x="85.0224%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (238 samples, 0.23%)</title><rect x="84.7810%" y="533" width="0.2261%" height="15" fill="rgb(228,218,44)" fg:x="89232" fg:w="238"/><text x="85.0310%" y="543.50"></text></g><g><title>___pthread_mutex_lock (238 samples, 0.23%)</title><rect x="84.7810%" y="517" width="0.2261%" height="15" fill="rgb(220,68,6)" fg:x="89232" fg:w="238"/><text x="85.0310%" y="527.50"></text></g><g><title>__GI___lll_lock_wait (59 samples, 0.06%)</title><rect x="84.9511%" y="501" width="0.0561%" height="15" fill="rgb(240,60,26)" fg:x="89411" fg:w="59"/><text x="85.2011%" y="511.50"></text></g><g><title>async_executor::Sleepers::remove (31 samples, 0.03%)</title><rect x="85.0100%" y="565" width="0.0295%" height="15" fill="rgb(211,200,19)" fg:x="89473" fg:w="31"/><text x="85.2600%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (16 samples, 0.02%)</title><rect x="85.0242%" y="549" width="0.0152%" height="15" fill="rgb(242,145,30)" fg:x="89488" fg:w="16"/><text x="85.2742%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (16 samples, 0.02%)</title><rect x="85.0242%" y="533" width="0.0152%" height="15" fill="rgb(225,64,13)" fg:x="89488" fg:w="16"/><text x="85.2742%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="85.0242%" y="517" width="0.0152%" height="15" fill="rgb(218,103,35)" fg:x="89488" fg:w="16"/><text x="85.2742%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (16 samples, 0.02%)</title><rect x="85.0242%" y="501" width="0.0152%" height="15" fill="rgb(216,93,46)" fg:x="89488" fg:w="16"/><text x="85.2742%" y="511.50"></text></g><g><title>core::mem::drop (16 samples, 0.02%)</title><rect x="85.0242%" y="485" width="0.0152%" height="15" fill="rgb(225,159,27)" fg:x="89488" fg:w="16"/><text x="85.2742%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (16 samples, 0.02%)</title><rect x="85.0242%" y="469" width="0.0152%" height="15" fill="rgb(225,204,11)" fg:x="89488" fg:w="16"/><text x="85.2742%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="85.0242%" y="453" width="0.0152%" height="15" fill="rgb(205,56,4)" fg:x="89488" fg:w="16"/><text x="85.2742%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.02%)</title><rect x="85.0242%" y="437" width="0.0152%" height="15" fill="rgb(206,6,35)" fg:x="89488" fg:w="16"/><text x="85.2742%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.02%)</title><rect x="85.0242%" y="421" width="0.0152%" height="15" fill="rgb(247,73,52)" fg:x="89488" fg:w="16"/><text x="85.2742%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.02%)</title><rect x="85.0689%" y="469" width="0.0181%" height="15" fill="rgb(246,97,4)" fg:x="89535" fg:w="19"/><text x="85.3189%" y="479.50"></text></g><g><title>do_syscall_64 (19 samples, 0.02%)</title><rect x="85.0689%" y="453" width="0.0181%" height="15" fill="rgb(212,37,15)" fg:x="89535" fg:w="19"/><text x="85.3189%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (52 samples, 0.05%)</title><rect x="85.0394%" y="565" width="0.0494%" height="15" fill="rgb(208,130,40)" fg:x="89504" fg:w="52"/><text x="85.2894%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.05%)</title><rect x="85.0394%" y="549" width="0.0494%" height="15" fill="rgb(236,55,29)" fg:x="89504" fg:w="52"/><text x="85.2894%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (50 samples, 0.05%)</title><rect x="85.0413%" y="533" width="0.0475%" height="15" fill="rgb(209,156,45)" fg:x="89506" fg:w="50"/><text x="85.2913%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (50 samples, 0.05%)</title><rect x="85.0413%" y="517" width="0.0475%" height="15" fill="rgb(249,107,4)" fg:x="89506" fg:w="50"/><text x="85.2913%" y="527.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (50 samples, 0.05%)</title><rect x="85.0413%" y="501" width="0.0475%" height="15" fill="rgb(227,7,13)" fg:x="89506" fg:w="50"/><text x="85.2913%" y="511.50"></text></g><g><title>__GI___lll_lock_wake (28 samples, 0.03%)</title><rect x="85.0622%" y="485" width="0.0266%" height="15" fill="rgb(250,129,14)" fg:x="89528" fg:w="28"/><text x="85.3122%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (32 samples, 0.03%)</title><rect x="85.0888%" y="565" width="0.0304%" height="15" fill="rgb(229,92,13)" fg:x="89556" fg:w="32"/><text x="85.3388%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (32 samples, 0.03%)</title><rect x="85.0888%" y="549" width="0.0304%" height="15" fill="rgb(245,98,39)" fg:x="89556" fg:w="32"/><text x="85.3388%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (29 samples, 0.03%)</title><rect x="85.1192%" y="565" width="0.0276%" height="15" fill="rgb(234,135,48)" fg:x="89588" fg:w="29"/><text x="85.3692%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (29 samples, 0.03%)</title><rect x="85.1192%" y="549" width="0.0276%" height="15" fill="rgb(230,98,28)" fg:x="89588" fg:w="29"/><text x="85.3692%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,556 samples, 4.33%)</title><rect x="80.8665%" y="645" width="4.3287%" height="15" fill="rgb(223,121,0)" fg:x="85112" fg:w="4556"/><text x="81.1165%" y="655.50">&lt;core..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (4,555 samples, 4.33%)</title><rect x="80.8675%" y="629" width="4.3278%" height="15" fill="rgb(234,173,33)" fg:x="85113" fg:w="4555"/><text x="81.1175%" y="639.50">async..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4,551 samples, 4.32%)</title><rect x="80.8713%" y="613" width="4.3240%" height="15" fill="rgb(245,47,8)" fg:x="85117" fg:w="4551"/><text x="81.1213%" y="623.50">&lt;futu..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (4,546 samples, 4.32%)</title><rect x="80.8760%" y="597" width="4.3192%" height="15" fill="rgb(205,17,20)" fg:x="85122" fg:w="4546"/><text x="81.1260%" y="607.50">async..</text></g><g><title>async_executor::Ticker::wake (198 samples, 0.19%)</title><rect x="85.0071%" y="581" width="0.1881%" height="15" fill="rgb(232,151,16)" fg:x="89470" fg:w="198"/><text x="85.2571%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (51 samples, 0.05%)</title><rect x="85.1468%" y="565" width="0.0485%" height="15" fill="rgb(208,30,32)" fg:x="89617" fg:w="51"/><text x="85.3968%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (49 samples, 0.05%)</title><rect x="85.1487%" y="549" width="0.0466%" height="15" fill="rgb(254,26,3)" fg:x="89619" fg:w="49"/><text x="85.3987%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (48 samples, 0.05%)</title><rect x="85.1496%" y="533" width="0.0456%" height="15" fill="rgb(240,177,30)" fg:x="89620" fg:w="48"/><text x="85.3996%" y="543.50"></text></g><g><title>___pthread_mutex_lock (48 samples, 0.05%)</title><rect x="85.1496%" y="517" width="0.0456%" height="15" fill="rgb(248,76,44)" fg:x="89620" fg:w="48"/><text x="85.3996%" y="527.50"></text></g><g><title>__GI___lll_lock_wait (22 samples, 0.02%)</title><rect x="85.1743%" y="501" width="0.0209%" height="15" fill="rgb(241,186,54)" fg:x="89646" fg:w="22"/><text x="85.4243%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="85.1838%" y="485" width="0.0114%" height="15" fill="rgb(249,171,29)" fg:x="89656" fg:w="12"/><text x="85.4338%" y="495.50"></text></g><g><title>do_syscall_64 (12 samples, 0.01%)</title><rect x="85.1838%" y="469" width="0.0114%" height="15" fill="rgb(237,151,44)" fg:x="89656" fg:w="12"/><text x="85.4338%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,596 samples, 4.37%)</title><rect x="80.8532%" y="677" width="4.3667%" height="15" fill="rgb(228,174,30)" fg:x="85098" fg:w="4596"/><text x="81.1032%" y="687.50">&lt;core..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (4,596 samples, 4.37%)</title><rect x="80.8532%" y="661" width="4.3667%" height="15" fill="rgb(252,14,37)" fg:x="85098" fg:w="4596"/><text x="81.1032%" y="671.50">async..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="85.1962%" y="645" width="0.0238%" height="15" fill="rgb(207,111,40)" fg:x="89669" fg:w="25"/><text x="85.4462%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="85.1962%" y="629" width="0.0238%" height="15" fill="rgb(248,171,54)" fg:x="89669" fg:w="25"/><text x="85.4462%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (28 samples, 0.03%)</title><rect x="85.2874%" y="549" width="0.0266%" height="15" fill="rgb(211,127,2)" fg:x="89765" fg:w="28"/><text x="85.5374%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (28 samples, 0.03%)</title><rect x="85.2874%" y="533" width="0.0266%" height="15" fill="rgb(236,87,47)" fg:x="89765" fg:w="28"/><text x="85.5374%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17 samples, 0.02%)</title><rect x="85.3150%" y="533" width="0.0162%" height="15" fill="rgb(223,190,45)" fg:x="89794" fg:w="17"/><text x="85.5650%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::_{{closure}} (30 samples, 0.03%)</title><rect x="85.3378%" y="485" width="0.0285%" height="15" fill="rgb(215,5,16)" fg:x="89818" fg:w="30"/><text x="85.5878%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="85.9667%" y="469" width="0.0124%" height="15" fill="rgb(252,82,33)" fg:x="90480" fg:w="13"/><text x="86.2167%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="85.9667%" y="453" width="0.0124%" height="15" fill="rgb(247,213,44)" fg:x="90480" fg:w="13"/><text x="86.2167%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.02%)</title><rect x="85.9791%" y="469" width="0.0152%" height="15" fill="rgb(205,196,44)" fg:x="90493" fg:w="16"/><text x="86.2291%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (16 samples, 0.02%)</title><rect x="85.9791%" y="453" width="0.0152%" height="15" fill="rgb(237,96,54)" fg:x="90493" fg:w="16"/><text x="86.2291%" y="463.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="85.9943%" y="469" width="0.0276%" height="15" fill="rgb(230,113,34)" fg:x="90509" fg:w="29"/><text x="86.2443%" y="479.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.01%)</title><rect x="86.0086%" y="453" width="0.0133%" height="15" fill="rgb(221,224,12)" fg:x="90524" fg:w="14"/><text x="86.2586%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="86.0485%" y="453" width="0.0105%" height="15" fill="rgb(219,112,44)" fg:x="90566" fg:w="11"/><text x="86.2985%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (24 samples, 0.02%)</title><rect x="86.3316%" y="373" width="0.0228%" height="15" fill="rgb(210,31,13)" fg:x="90864" fg:w="24"/><text x="86.5816%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (11 samples, 0.01%)</title><rect x="86.3439%" y="357" width="0.0105%" height="15" fill="rgb(230,25,16)" fg:x="90877" fg:w="11"/><text x="86.5939%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (430 samples, 0.41%)</title><rect x="86.0238%" y="469" width="0.4086%" height="15" fill="rgb(246,108,53)" fg:x="90540" fg:w="430"/><text x="86.2738%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (393 samples, 0.37%)</title><rect x="86.0589%" y="453" width="0.3734%" height="15" fill="rgb(241,172,50)" fg:x="90577" fg:w="393"/><text x="86.3089%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (114 samples, 0.11%)</title><rect x="86.3240%" y="437" width="0.1083%" height="15" fill="rgb(235,141,10)" fg:x="90856" fg:w="114"/><text x="86.5740%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (106 samples, 0.10%)</title><rect x="86.3316%" y="421" width="0.1007%" height="15" fill="rgb(220,174,43)" fg:x="90864" fg:w="106"/><text x="86.5816%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (106 samples, 0.10%)</title><rect x="86.3316%" y="405" width="0.1007%" height="15" fill="rgb(215,181,40)" fg:x="90864" fg:w="106"/><text x="86.5816%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.10%)</title><rect x="86.3316%" y="389" width="0.1007%" height="15" fill="rgb(230,97,2)" fg:x="90864" fg:w="106"/><text x="86.5816%" y="399.50"></text></g><g><title>core::mem::drop (82 samples, 0.08%)</title><rect x="86.3544%" y="373" width="0.0779%" height="15" fill="rgb(211,25,27)" fg:x="90888" fg:w="82"/><text x="86.6044%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (82 samples, 0.08%)</title><rect x="86.3544%" y="357" width="0.0779%" height="15" fill="rgb(230,87,26)" fg:x="90888" fg:w="82"/><text x="86.6044%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 0.08%)</title><rect x="86.3544%" y="341" width="0.0779%" height="15" fill="rgb(227,160,17)" fg:x="90888" fg:w="82"/><text x="86.6044%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (31 samples, 0.03%)</title><rect x="86.4029%" y="325" width="0.0295%" height="15" fill="rgb(244,85,34)" fg:x="90939" fg:w="31"/><text x="86.6529%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (13 samples, 0.01%)</title><rect x="86.4200%" y="309" width="0.0124%" height="15" fill="rgb(207,70,0)" fg:x="90957" fg:w="13"/><text x="86.6700%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (13 samples, 0.01%)</title><rect x="86.4200%" y="293" width="0.0124%" height="15" fill="rgb(223,129,7)" fg:x="90957" fg:w="13"/><text x="86.6700%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.01%)</title><rect x="86.4200%" y="277" width="0.0124%" height="15" fill="rgb(246,105,7)" fg:x="90957" fg:w="13"/><text x="86.6700%" y="287.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="86.4200%" y="261" width="0.0124%" height="15" fill="rgb(215,154,42)" fg:x="90957" fg:w="13"/><text x="86.6700%" y="271.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="86.4219%" y="245" width="0.0105%" height="15" fill="rgb(220,215,30)" fg:x="90959" fg:w="11"/><text x="86.6719%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (16 samples, 0.02%)</title><rect x="86.6974%" y="437" width="0.0152%" height="15" fill="rgb(228,81,51)" fg:x="91249" fg:w="16"/><text x="86.9474%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="86.6974%" y="453" width="0.0162%" height="15" fill="rgb(247,71,54)" fg:x="91249" fg:w="17"/><text x="86.9474%" y="463.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (287 samples, 0.27%)</title><rect x="86.4418%" y="469" width="0.2727%" height="15" fill="rgb(234,176,34)" fg:x="90980" fg:w="287"/><text x="86.6918%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (243 samples, 0.23%)</title><rect x="86.7544%" y="437" width="0.2309%" height="15" fill="rgb(241,103,54)" fg:x="91309" fg:w="243"/><text x="87.0044%" y="447.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="86.9910%" y="325" width="0.0143%" height="15" fill="rgb(228,22,34)" fg:x="91558" fg:w="15"/><text x="87.2410%" y="335.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="87.0138%" y="293" width="0.0114%" height="15" fill="rgb(241,179,48)" fg:x="91582" fg:w="12"/><text x="87.2638%" y="303.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="87.0603%" y="165" width="0.0114%" height="15" fill="rgb(235,167,37)" fg:x="91631" fg:w="12"/><text x="87.3103%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="87.0603%" y="149" width="0.0114%" height="15" fill="rgb(213,109,30)" fg:x="91631" fg:w="12"/><text x="87.3103%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (29 samples, 0.03%)</title><rect x="87.0499%" y="213" width="0.0276%" height="15" fill="rgb(222,172,16)" fg:x="91620" fg:w="29"/><text x="87.2999%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (29 samples, 0.03%)</title><rect x="87.0499%" y="197" width="0.0276%" height="15" fill="rgb(233,192,5)" fg:x="91620" fg:w="29"/><text x="87.2999%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (25 samples, 0.02%)</title><rect x="87.0537%" y="181" width="0.0238%" height="15" fill="rgb(247,189,41)" fg:x="91624" fg:w="25"/><text x="87.3037%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (40 samples, 0.04%)</title><rect x="87.0499%" y="229" width="0.0380%" height="15" fill="rgb(218,134,47)" fg:x="91620" fg:w="40"/><text x="87.2999%" y="239.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="87.0774%" y="213" width="0.0105%" height="15" fill="rgb(216,29,3)" fg:x="91649" fg:w="11"/><text x="87.3274%" y="223.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="87.0774%" y="197" width="0.0105%" height="15" fill="rgb(246,140,12)" fg:x="91649" fg:w="11"/><text x="87.3274%" y="207.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="87.0774%" y="181" width="0.0105%" height="15" fill="rgb(230,136,11)" fg:x="91649" fg:w="11"/><text x="87.3274%" y="191.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="87.0774%" y="165" width="0.0105%" height="15" fill="rgb(247,22,47)" fg:x="91649" fg:w="11"/><text x="87.3274%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (60 samples, 0.06%)</title><rect x="87.0423%" y="245" width="0.0570%" height="15" fill="rgb(218,84,22)" fg:x="91612" fg:w="60"/><text x="87.2923%" y="255.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (29 samples, 0.03%)</title><rect x="87.1230%" y="229" width="0.0276%" height="15" fill="rgb(216,87,39)" fg:x="91697" fg:w="29"/><text x="87.3730%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (329 samples, 0.31%)</title><rect x="87.0404%" y="277" width="0.3126%" height="15" fill="rgb(221,178,8)" fg:x="91610" fg:w="329"/><text x="87.2904%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (329 samples, 0.31%)</title><rect x="87.0404%" y="261" width="0.3126%" height="15" fill="rgb(230,42,11)" fg:x="91610" fg:w="329"/><text x="87.2904%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (267 samples, 0.25%)</title><rect x="87.0993%" y="245" width="0.2537%" height="15" fill="rgb(237,229,4)" fg:x="91672" fg:w="267"/><text x="87.3493%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (213 samples, 0.20%)</title><rect x="87.1506%" y="229" width="0.2024%" height="15" fill="rgb(222,31,33)" fg:x="91726" fg:w="213"/><text x="87.4006%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (213 samples, 0.20%)</title><rect x="87.1506%" y="213" width="0.2024%" height="15" fill="rgb(210,17,39)" fg:x="91726" fg:w="213"/><text x="87.4006%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (213 samples, 0.20%)</title><rect x="87.1506%" y="197" width="0.2024%" height="15" fill="rgb(244,93,20)" fg:x="91726" fg:w="213"/><text x="87.4006%" y="207.50"></text></g><g><title>snmalloc::FreeListIter::take (14 samples, 0.01%)</title><rect x="87.3663%" y="245" width="0.0133%" height="15" fill="rgb(210,40,47)" fg:x="91953" fg:w="14"/><text x="87.6163%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (14 samples, 0.01%)</title><rect x="87.3663%" y="229" width="0.0133%" height="15" fill="rgb(239,211,47)" fg:x="91953" fg:w="14"/><text x="87.6163%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.04%)</title><rect x="87.3530%" y="277" width="0.0361%" height="15" fill="rgb(251,223,49)" fg:x="91939" fg:w="38"/><text x="87.6030%" y="287.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (29 samples, 0.03%)</title><rect x="87.3615%" y="261" width="0.0276%" height="15" fill="rgb(221,149,5)" fg:x="91948" fg:w="29"/><text x="87.6115%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::empty (40 samples, 0.04%)</title><rect x="87.3891%" y="277" width="0.0380%" height="15" fill="rgb(219,224,51)" fg:x="91977" fg:w="40"/><text x="87.6391%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (40 samples, 0.04%)</title><rect x="87.3891%" y="261" width="0.0380%" height="15" fill="rgb(223,7,8)" fg:x="91977" fg:w="40"/><text x="87.6391%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (560 samples, 0.53%)</title><rect x="87.0062%" y="325" width="0.5321%" height="15" fill="rgb(241,217,22)" fg:x="91574" fg:w="560"/><text x="87.2562%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (560 samples, 0.53%)</title><rect x="87.0062%" y="309" width="0.5321%" height="15" fill="rgb(248,209,0)" fg:x="91574" fg:w="560"/><text x="87.2562%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (540 samples, 0.51%)</title><rect x="87.0252%" y="293" width="0.5131%" height="15" fill="rgb(217,205,4)" fg:x="91594" fg:w="540"/><text x="87.2752%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (117 samples, 0.11%)</title><rect x="87.4271%" y="277" width="0.1112%" height="15" fill="rgb(228,124,39)" fg:x="92017" fg:w="117"/><text x="87.6771%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (117 samples, 0.11%)</title><rect x="87.4271%" y="261" width="0.1112%" height="15" fill="rgb(250,116,42)" fg:x="92017" fg:w="117"/><text x="87.6771%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (882 samples, 0.84%)</title><rect x="86.7145%" y="453" width="0.8380%" height="15" fill="rgb(223,202,9)" fg:x="91267" fg:w="882"/><text x="86.9645%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (597 samples, 0.57%)</title><rect x="86.9853%" y="437" width="0.5672%" height="15" fill="rgb(242,222,40)" fg:x="91552" fg:w="597"/><text x="87.2353%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (597 samples, 0.57%)</title><rect x="86.9853%" y="421" width="0.5672%" height="15" fill="rgb(229,99,46)" fg:x="91552" fg:w="597"/><text x="87.2353%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (597 samples, 0.57%)</title><rect x="86.9853%" y="405" width="0.5672%" height="15" fill="rgb(225,56,46)" fg:x="91552" fg:w="597"/><text x="87.2353%" y="415.50"></text></g><g><title>alloc::alloc::alloc (594 samples, 0.56%)</title><rect x="86.9881%" y="389" width="0.5644%" height="15" fill="rgb(227,94,5)" fg:x="91555" fg:w="594"/><text x="87.2381%" y="399.50"></text></g><g><title>__rg_alloc (594 samples, 0.56%)</title><rect x="86.9881%" y="373" width="0.5644%" height="15" fill="rgb(205,112,38)" fg:x="91555" fg:w="594"/><text x="87.2381%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (594 samples, 0.56%)</title><rect x="86.9881%" y="357" width="0.5644%" height="15" fill="rgb(231,133,46)" fg:x="91555" fg:w="594"/><text x="87.2381%" y="367.50"></text></g><g><title>rust_alloc (591 samples, 0.56%)</title><rect x="86.9910%" y="341" width="0.5615%" height="15" fill="rgb(217,16,9)" fg:x="91558" fg:w="591"/><text x="87.2410%" y="351.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="87.5382%" y="325" width="0.0143%" height="15" fill="rgb(249,173,9)" fg:x="92134" fg:w="15"/><text x="87.7882%" y="335.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (889 samples, 0.84%)</title><rect x="86.7145%" y="469" width="0.8447%" height="15" fill="rgb(205,163,53)" fg:x="91267" fg:w="889"/><text x="86.9645%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="87.6513%" y="373" width="0.0143%" height="15" fill="rgb(217,54,41)" fg:x="92253" fg:w="15"/><text x="87.9013%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (16 samples, 0.02%)</title><rect x="87.6722%" y="325" width="0.0152%" height="15" fill="rgb(228,216,12)" fg:x="92275" fg:w="16"/><text x="87.9222%" y="335.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (136 samples, 0.13%)</title><rect x="87.5658%" y="453" width="0.1292%" height="15" fill="rgb(244,228,15)" fg:x="92163" fg:w="136"/><text x="87.8158%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (80 samples, 0.08%)</title><rect x="87.6190%" y="437" width="0.0760%" height="15" fill="rgb(221,176,53)" fg:x="92219" fg:w="80"/><text x="87.8690%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (46 samples, 0.04%)</title><rect x="87.6513%" y="421" width="0.0437%" height="15" fill="rgb(205,94,34)" fg:x="92253" fg:w="46"/><text x="87.9013%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (46 samples, 0.04%)</title><rect x="87.6513%" y="405" width="0.0437%" height="15" fill="rgb(213,110,48)" fg:x="92253" fg:w="46"/><text x="87.9013%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (46 samples, 0.04%)</title><rect x="87.6513%" y="389" width="0.0437%" height="15" fill="rgb(236,142,28)" fg:x="92253" fg:w="46"/><text x="87.9013%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.03%)</title><rect x="87.6694%" y="373" width="0.0257%" height="15" fill="rgb(225,135,29)" fg:x="92272" fg:w="27"/><text x="87.9194%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="87.6722%" y="357" width="0.0228%" height="15" fill="rgb(252,45,31)" fg:x="92275" fg:w="24"/><text x="87.9222%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.02%)</title><rect x="87.6722%" y="341" width="0.0228%" height="15" fill="rgb(211,187,50)" fg:x="92275" fg:w="24"/><text x="87.9222%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="88.0380%" y="437" width="0.0323%" height="15" fill="rgb(229,109,7)" fg:x="92660" fg:w="34"/><text x="88.2880%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (17 samples, 0.02%)</title><rect x="88.0542%" y="421" width="0.0162%" height="15" fill="rgb(251,131,51)" fg:x="92677" fg:w="17"/><text x="88.3042%" y="431.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (397 samples, 0.38%)</title><rect x="87.6950%" y="453" width="0.3772%" height="15" fill="rgb(251,180,35)" fg:x="92299" fg:w="397"/><text x="87.9450%" y="463.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (541 samples, 0.51%)</title><rect x="87.5591%" y="469" width="0.5140%" height="15" fill="rgb(211,46,32)" fg:x="92156" fg:w="541"/><text x="87.8091%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2,220 samples, 2.11%)</title><rect x="88.0732%" y="469" width="2.1093%" height="15" fill="rgb(248,123,17)" fg:x="92697" fg:w="2220"/><text x="88.3232%" y="479.50">_..</text></g><g><title>rust_dealloc (20 samples, 0.02%)</title><rect x="90.2147%" y="277" width="0.0190%" height="15" fill="rgb(227,141,18)" fg:x="94951" fg:w="20"/><text x="90.4647%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (28 samples, 0.03%)</title><rect x="90.3040%" y="181" width="0.0266%" height="15" fill="rgb(216,102,9)" fg:x="95045" fg:w="28"/><text x="90.5540%" y="191.50"></text></g><g><title> (28 samples, 0.03%)</title><rect x="90.3040%" y="165" width="0.0266%" height="15" fill="rgb(253,47,13)" fg:x="95045" fg:w="28"/><text x="90.5540%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (93 samples, 0.09%)</title><rect x="90.2594%" y="213" width="0.0884%" height="15" fill="rgb(226,93,23)" fg:x="94998" fg:w="93"/><text x="90.5094%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (89 samples, 0.08%)</title><rect x="90.2632%" y="197" width="0.0846%" height="15" fill="rgb(247,104,17)" fg:x="95002" fg:w="89"/><text x="90.5132%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="90.3363%" y="181" width="0.0114%" height="15" fill="rgb(233,203,26)" fg:x="95079" fg:w="12"/><text x="90.5863%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (154 samples, 0.15%)</title><rect x="90.2423%" y="277" width="0.1463%" height="15" fill="rgb(244,98,49)" fg:x="94980" fg:w="154"/><text x="90.4923%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (154 samples, 0.15%)</title><rect x="90.2423%" y="261" width="0.1463%" height="15" fill="rgb(235,134,22)" fg:x="94980" fg:w="154"/><text x="90.4923%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (154 samples, 0.15%)</title><rect x="90.2423%" y="245" width="0.1463%" height="15" fill="rgb(221,70,32)" fg:x="94980" fg:w="154"/><text x="90.4923%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (154 samples, 0.15%)</title><rect x="90.2423%" y="229" width="0.1463%" height="15" fill="rgb(238,15,50)" fg:x="94980" fg:w="154"/><text x="90.4923%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (41 samples, 0.04%)</title><rect x="90.3496%" y="213" width="0.0390%" height="15" fill="rgb(215,221,48)" fg:x="95093" fg:w="41"/><text x="90.5996%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (184 samples, 0.17%)</title><rect x="90.2147%" y="293" width="0.1748%" height="15" fill="rgb(236,73,3)" fg:x="94951" fg:w="184"/><text x="90.4647%" y="303.50"></text></g><g><title>rust_dealloc (249 samples, 0.24%)</title><rect x="90.1976%" y="309" width="0.2366%" height="15" fill="rgb(250,107,11)" fg:x="94933" fg:w="249"/><text x="90.4476%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (47 samples, 0.04%)</title><rect x="90.3895%" y="293" width="0.0447%" height="15" fill="rgb(242,39,14)" fg:x="95135" fg:w="47"/><text x="90.6395%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (267 samples, 0.25%)</title><rect x="90.1824%" y="469" width="0.2537%" height="15" fill="rgb(248,164,37)" fg:x="94917" fg:w="267"/><text x="90.4324%" y="479.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (267 samples, 0.25%)</title><rect x="90.1824%" y="453" width="0.2537%" height="15" fill="rgb(217,60,12)" fg:x="94917" fg:w="267"/><text x="90.4324%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (251 samples, 0.24%)</title><rect x="90.1976%" y="437" width="0.2385%" height="15" fill="rgb(240,125,29)" fg:x="94933" fg:w="251"/><text x="90.4476%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (251 samples, 0.24%)</title><rect x="90.1976%" y="421" width="0.2385%" height="15" fill="rgb(208,207,28)" fg:x="94933" fg:w="251"/><text x="90.4476%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (251 samples, 0.24%)</title><rect x="90.1976%" y="405" width="0.2385%" height="15" fill="rgb(209,159,27)" fg:x="94933" fg:w="251"/><text x="90.4476%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (251 samples, 0.24%)</title><rect x="90.1976%" y="389" width="0.2385%" height="15" fill="rgb(251,176,53)" fg:x="94933" fg:w="251"/><text x="90.4476%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (251 samples, 0.24%)</title><rect x="90.1976%" y="373" width="0.2385%" height="15" fill="rgb(211,85,7)" fg:x="94933" fg:w="251"/><text x="90.4476%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (251 samples, 0.24%)</title><rect x="90.1976%" y="357" width="0.2385%" height="15" fill="rgb(216,64,54)" fg:x="94933" fg:w="251"/><text x="90.4476%" y="367.50"></text></g><g><title>__rg_dealloc (251 samples, 0.24%)</title><rect x="90.1976%" y="341" width="0.2385%" height="15" fill="rgb(217,54,24)" fg:x="94933" fg:w="251"/><text x="90.4476%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (251 samples, 0.24%)</title><rect x="90.1976%" y="325" width="0.2385%" height="15" fill="rgb(208,206,53)" fg:x="94933" fg:w="251"/><text x="90.4476%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (41 samples, 0.04%)</title><rect x="90.4361%" y="453" width="0.0390%" height="15" fill="rgb(251,74,39)" fg:x="95184" fg:w="41"/><text x="90.6861%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (48 samples, 0.05%)</title><rect x="90.4361%" y="469" width="0.0456%" height="15" fill="rgb(226,47,5)" fg:x="95184" fg:w="48"/><text x="90.6861%" y="479.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="90.5036%" y="341" width="0.0105%" height="15" fill="rgb(234,111,33)" fg:x="95255" fg:w="11"/><text x="90.7536%" y="351.50"></text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="90.5140%" y="325" width="0.0162%" height="15" fill="rgb(251,14,10)" fg:x="95266" fg:w="17"/><text x="90.7640%" y="335.50"></text></g><g><title>rust_dealloc (24 samples, 0.02%)</title><rect x="90.5321%" y="261" width="0.0228%" height="15" fill="rgb(232,43,0)" fg:x="95285" fg:w="24"/><text x="90.7821%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (20 samples, 0.02%)</title><rect x="90.5786%" y="213" width="0.0190%" height="15" fill="rgb(222,68,43)" fg:x="95334" fg:w="20"/><text x="90.8286%" y="223.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="90.5853%" y="197" width="0.0124%" height="15" fill="rgb(217,24,23)" fg:x="95341" fg:w="13"/><text x="90.8353%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (55 samples, 0.05%)</title><rect x="90.5596%" y="261" width="0.0523%" height="15" fill="rgb(229,209,14)" fg:x="95314" fg:w="55"/><text x="90.8096%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (55 samples, 0.05%)</title><rect x="90.5596%" y="245" width="0.0523%" height="15" fill="rgb(250,149,48)" fg:x="95314" fg:w="55"/><text x="90.8096%" y="255.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (54 samples, 0.05%)</title><rect x="90.5606%" y="229" width="0.0513%" height="15" fill="rgb(210,120,37)" fg:x="95315" fg:w="54"/><text x="90.8106%" y="239.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="90.5976%" y="213" width="0.0143%" height="15" fill="rgb(210,21,8)" fg:x="95354" fg:w="15"/><text x="90.8476%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="90.5976%" y="197" width="0.0143%" height="15" fill="rgb(243,145,7)" fg:x="95354" fg:w="15"/><text x="90.8476%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (90 samples, 0.09%)</title><rect x="90.5321%" y="293" width="0.0855%" height="15" fill="rgb(238,178,32)" fg:x="95285" fg:w="90"/><text x="90.7821%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (90 samples, 0.09%)</title><rect x="90.5321%" y="277" width="0.0855%" height="15" fill="rgb(222,4,10)" fg:x="95285" fg:w="90"/><text x="90.7821%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (102 samples, 0.10%)</title><rect x="90.5321%" y="325" width="0.0969%" height="15" fill="rgb(239,7,37)" fg:x="95285" fg:w="102"/><text x="90.7821%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (102 samples, 0.10%)</title><rect x="90.5321%" y="309" width="0.0969%" height="15" fill="rgb(215,31,37)" fg:x="95285" fg:w="102"/><text x="90.7821%" y="319.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="90.6176%" y="293" width="0.0114%" height="15" fill="rgb(224,83,33)" fg:x="95375" fg:w="12"/><text x="90.8676%" y="303.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="90.6176%" y="277" width="0.0114%" height="15" fill="rgb(239,55,3)" fg:x="95375" fg:w="12"/><text x="90.8676%" y="287.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="90.6176%" y="261" width="0.0114%" height="15" fill="rgb(247,92,11)" fg:x="95375" fg:w="12"/><text x="90.8676%" y="271.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="90.6176%" y="245" width="0.0114%" height="15" fill="rgb(239,200,7)" fg:x="95375" fg:w="12"/><text x="90.8676%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (129 samples, 0.12%)</title><rect x="90.5140%" y="341" width="0.1226%" height="15" fill="rgb(227,115,8)" fg:x="95266" fg:w="129"/><text x="90.7640%" y="351.50"></text></g><g><title>rust_dealloc (151 samples, 0.14%)</title><rect x="90.5036%" y="357" width="0.1435%" height="15" fill="rgb(215,189,27)" fg:x="95255" fg:w="151"/><text x="90.7536%" y="367.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="90.6366%" y="341" width="0.0105%" height="15" fill="rgb(251,216,39)" fg:x="95395" fg:w="11"/><text x="90.8866%" y="351.50"></text></g><g><title>alloc::alloc::box_free (179 samples, 0.17%)</title><rect x="90.4922%" y="437" width="0.1701%" height="15" fill="rgb(207,29,47)" fg:x="95243" fg:w="179"/><text x="90.7422%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (168 samples, 0.16%)</title><rect x="90.5026%" y="421" width="0.1596%" height="15" fill="rgb(210,71,34)" fg:x="95254" fg:w="168"/><text x="90.7526%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (167 samples, 0.16%)</title><rect x="90.5036%" y="405" width="0.1587%" height="15" fill="rgb(253,217,51)" fg:x="95255" fg:w="167"/><text x="90.7536%" y="415.50"></text></g><g><title>__rg_dealloc (167 samples, 0.16%)</title><rect x="90.5036%" y="389" width="0.1587%" height="15" fill="rgb(222,117,46)" fg:x="95255" fg:w="167"/><text x="90.7536%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (167 samples, 0.16%)</title><rect x="90.5036%" y="373" width="0.1587%" height="15" fill="rgb(226,132,6)" fg:x="95255" fg:w="167"/><text x="90.7536%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (16 samples, 0.02%)</title><rect x="90.6470%" y="357" width="0.0152%" height="15" fill="rgb(254,145,51)" fg:x="95406" fg:w="16"/><text x="90.8970%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (202 samples, 0.19%)</title><rect x="90.4817%" y="469" width="0.1919%" height="15" fill="rgb(231,199,27)" fg:x="95232" fg:w="202"/><text x="90.7317%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (202 samples, 0.19%)</title><rect x="90.4817%" y="453" width="0.1919%" height="15" fill="rgb(245,158,14)" fg:x="95232" fg:w="202"/><text x="90.7317%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="90.6622%" y="437" width="0.0114%" height="15" fill="rgb(240,113,14)" fg:x="95422" fg:w="12"/><text x="90.9122%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="90.6622%" y="421" width="0.0114%" height="15" fill="rgb(210,20,13)" fg:x="95422" fg:w="12"/><text x="90.9122%" y="431.50"></text></g><g><title>core::time::Duration::as_nanos (27 samples, 0.03%)</title><rect x="90.7525%" y="453" width="0.0257%" height="15" fill="rgb(241,144,13)" fg:x="95517" fg:w="27"/><text x="91.0025%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (171 samples, 0.16%)</title><rect x="90.9150%" y="405" width="0.1625%" height="15" fill="rgb(235,43,34)" fg:x="95688" fg:w="171"/><text x="91.1650%" y="415.50"></text></g><g><title>core::cmp::PartialOrd::ge (171 samples, 0.16%)</title><rect x="90.9150%" y="389" width="0.1625%" height="15" fill="rgb(208,36,20)" fg:x="95688" fg:w="171"/><text x="91.1650%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (167 samples, 0.16%)</title><rect x="90.9188%" y="373" width="0.1587%" height="15" fill="rgb(239,204,10)" fg:x="95692" fg:w="167"/><text x="91.1688%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (167 samples, 0.16%)</title><rect x="90.9188%" y="357" width="0.1587%" height="15" fill="rgb(217,84,43)" fg:x="95692" fg:w="167"/><text x="91.1688%" y="367.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (167 samples, 0.16%)</title><rect x="90.9188%" y="341" width="0.1587%" height="15" fill="rgb(241,170,50)" fg:x="95692" fg:w="167"/><text x="91.1688%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (95 samples, 0.09%)</title><rect x="90.9872%" y="325" width="0.0903%" height="15" fill="rgb(226,205,29)" fg:x="95764" fg:w="95"/><text x="91.2372%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (388 samples, 0.37%)</title><rect x="90.7781%" y="437" width="0.3686%" height="15" fill="rgb(233,113,1)" fg:x="95544" fg:w="388"/><text x="91.0281%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (388 samples, 0.37%)</title><rect x="90.7781%" y="421" width="0.3686%" height="15" fill="rgb(253,98,13)" fg:x="95544" fg:w="388"/><text x="91.0281%" y="431.50"></text></g><g><title>core::time::Duration::new (73 samples, 0.07%)</title><rect x="91.0774%" y="405" width="0.0694%" height="15" fill="rgb(211,115,12)" fg:x="95859" fg:w="73"/><text x="91.3274%" y="415.50"></text></g><g><title>std::time::SystemTime::duration_since (418 samples, 0.40%)</title><rect x="90.7781%" y="453" width="0.3971%" height="15" fill="rgb(208,12,16)" fg:x="95544" fg:w="418"/><text x="91.0281%" y="463.50"></text></g><g><title>tremor_common::time::nanotime (30 samples, 0.03%)</title><rect x="91.1468%" y="437" width="0.0285%" height="15" fill="rgb(237,193,54)" fg:x="95932" fg:w="30"/><text x="91.3968%" y="447.50"></text></g><g><title>tremor_common::time::nanotime (2,141 samples, 2.03%)</title><rect x="90.6736%" y="469" width="2.0342%" height="15" fill="rgb(243,22,42)" fg:x="95434" fg:w="2141"/><text x="90.9236%" y="479.50">t..</text></g><g><title>std::time::SystemTime::now (1,613 samples, 1.53%)</title><rect x="91.1753%" y="453" width="1.5325%" height="15" fill="rgb(233,151,36)" fg:x="95962" fg:w="1613"/><text x="91.4253%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,613 samples, 1.53%)</title><rect x="91.1753%" y="437" width="1.5325%" height="15" fill="rgb(237,57,45)" fg:x="95962" fg:w="1613"/><text x="91.4253%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::now (1,613 samples, 1.53%)</title><rect x="91.1753%" y="421" width="1.5325%" height="15" fill="rgb(221,88,17)" fg:x="95962" fg:w="1613"/><text x="91.4253%" y="431.50"></text></g><g><title>__clock_gettime_2 (1,321 samples, 1.26%)</title><rect x="91.4527%" y="405" width="1.2551%" height="15" fill="rgb(230,79,15)" fg:x="96254" fg:w="1321"/><text x="91.7027%" y="415.50"></text></g><g><title>__vdso_clock_gettime (1,260 samples, 1.20%)</title><rect x="91.5107%" y="389" width="1.1971%" height="15" fill="rgb(213,57,13)" fg:x="96315" fg:w="1260"/><text x="91.7607%" y="399.50"></text></g><g><title>[[vdso]] (759 samples, 0.72%)</title><rect x="91.9867%" y="373" width="0.7211%" height="15" fill="rgb(222,116,39)" fg:x="96816" fg:w="759"/><text x="92.2367%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="92.7183%" y="405" width="0.0114%" height="15" fill="rgb(245,107,2)" fg:x="97586" fg:w="12"/><text x="92.9683%" y="415.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (11 samples, 0.01%)</title><rect x="92.7192%" y="389" width="0.0105%" height="15" fill="rgb(238,1,10)" fg:x="97587" fg:w="11"/><text x="92.9692%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.01%)</title><rect x="92.7297%" y="309" width="0.0114%" height="15" fill="rgb(249,4,48)" fg:x="97598" fg:w="12"/><text x="92.9797%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (23 samples, 0.02%)</title><rect x="92.7297%" y="357" width="0.0219%" height="15" fill="rgb(223,151,18)" fg:x="97598" fg:w="23"/><text x="92.9797%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (23 samples, 0.02%)</title><rect x="92.7297%" y="341" width="0.0219%" height="15" fill="rgb(227,65,43)" fg:x="97598" fg:w="23"/><text x="92.9797%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (23 samples, 0.02%)</title><rect x="92.7297%" y="325" width="0.0219%" height="15" fill="rgb(218,40,45)" fg:x="97598" fg:w="23"/><text x="92.9797%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (11 samples, 0.01%)</title><rect x="92.7411%" y="309" width="0.0105%" height="15" fill="rgb(252,121,31)" fg:x="97610" fg:w="11"/><text x="92.9911%" y="319.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="92.7411%" y="293" width="0.0105%" height="15" fill="rgb(219,158,43)" fg:x="97610" fg:w="11"/><text x="92.9911%" y="303.50"></text></g><g><title>core::mem::drop (24 samples, 0.02%)</title><rect x="92.7297%" y="405" width="0.0228%" height="15" fill="rgb(231,162,42)" fg:x="97598" fg:w="24"/><text x="92.9797%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (24 samples, 0.02%)</title><rect x="92.7297%" y="389" width="0.0228%" height="15" fill="rgb(217,179,25)" fg:x="97598" fg:w="24"/><text x="92.9797%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="92.7297%" y="373" width="0.0228%" height="15" fill="rgb(206,212,31)" fg:x="97598" fg:w="24"/><text x="92.9797%" y="383.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (64 samples, 0.06%)</title><rect x="92.7078%" y="469" width="0.0608%" height="15" fill="rgb(235,144,12)" fg:x="97575" fg:w="64"/><text x="92.9578%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (53 samples, 0.05%)</title><rect x="92.7183%" y="453" width="0.0504%" height="15" fill="rgb(213,51,10)" fg:x="97586" fg:w="53"/><text x="92.9683%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (53 samples, 0.05%)</title><rect x="92.7183%" y="437" width="0.0504%" height="15" fill="rgb(231,145,14)" fg:x="97586" fg:w="53"/><text x="92.9683%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.05%)</title><rect x="92.7183%" y="421" width="0.0504%" height="15" fill="rgb(235,15,28)" fg:x="97586" fg:w="53"/><text x="92.9683%" y="431.50"></text></g><g><title>core::ptr::read (17 samples, 0.02%)</title><rect x="92.7525%" y="405" width="0.0162%" height="15" fill="rgb(237,206,10)" fg:x="97622" fg:w="17"/><text x="93.0025%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,914 samples, 7.52%)</title><rect x="85.2608%" y="629" width="7.5192%" height="15" fill="rgb(236,227,27)" fg:x="89737" fg:w="7914"/><text x="85.5108%" y="639.50">&lt;core::fut..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (7,914 samples, 7.52%)</title><rect x="85.2608%" y="613" width="7.5192%" height="15" fill="rgb(246,83,35)" fg:x="89737" fg:w="7914"/><text x="85.5108%" y="623.50">async_exec..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (7,887 samples, 7.49%)</title><rect x="85.2865%" y="597" width="7.4936%" height="15" fill="rgb(220,136,24)" fg:x="89764" fg:w="7887"/><text x="85.5365%" y="607.50">&lt;async_std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (7,887 samples, 7.49%)</title><rect x="85.2865%" y="581" width="7.4936%" height="15" fill="rgb(217,3,25)" fg:x="89764" fg:w="7887"/><text x="85.5365%" y="591.50">async_std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,887 samples, 7.49%)</title><rect x="85.2865%" y="565" width="7.4936%" height="15" fill="rgb(239,24,14)" fg:x="89764" fg:w="7887"/><text x="85.5365%" y="575.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,858 samples, 7.47%)</title><rect x="85.3140%" y="549" width="7.4660%" height="15" fill="rgb(244,16,53)" fg:x="89793" fg:w="7858"/><text x="85.5640%" y="559.50">std::threa..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (7,836 samples, 7.45%)</title><rect x="85.3349%" y="533" width="7.4451%" height="15" fill="rgb(208,175,44)" fg:x="89815" fg:w="7836"/><text x="85.5849%" y="543.50">async_std:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,836 samples, 7.45%)</title><rect x="85.3349%" y="517" width="7.4451%" height="15" fill="rgb(252,18,48)" fg:x="89815" fg:w="7836"/><text x="85.5849%" y="527.50">&lt;async_std..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,836 samples, 7.45%)</title><rect x="85.3349%" y="501" width="7.4451%" height="15" fill="rgb(234,199,32)" fg:x="89815" fg:w="7836"/><text x="85.5849%" y="511.50">&lt;core::fut..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (7,803 samples, 7.41%)</title><rect x="85.3663%" y="485" width="7.4138%" height="15" fill="rgb(225,77,54)" fg:x="89848" fg:w="7803"/><text x="85.6163%" y="495.50">tremor_run..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (11 samples, 0.01%)</title><rect x="92.7696%" y="469" width="0.0105%" height="15" fill="rgb(225,42,25)" fg:x="97640" fg:w="11"/><text x="93.0196%" y="479.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7,918 samples, 7.52%)</title><rect x="85.2608%" y="645" width="7.5230%" height="15" fill="rgb(242,227,46)" fg:x="89737" fg:w="7918"/><text x="85.5108%" y="655.50">&lt;core::pin..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (17 samples, 0.02%)</title><rect x="92.7838%" y="645" width="0.0162%" height="15" fill="rgb(246,197,35)" fg:x="97655" fg:w="17"/><text x="93.0338%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.02%)</title><rect x="92.7848%" y="629" width="0.0152%" height="15" fill="rgb(215,159,26)" fg:x="97656" fg:w="16"/><text x="93.0348%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.02%)</title><rect x="92.7848%" y="613" width="0.0152%" height="15" fill="rgb(212,194,50)" fg:x="97656" fg:w="16"/><text x="93.0348%" y="623.50"></text></g><g><title>ttwu_do_activate (12 samples, 0.01%)</title><rect x="92.8228%" y="309" width="0.0114%" height="15" fill="rgb(246,132,1)" fg:x="97696" fg:w="12"/><text x="93.0728%" y="319.50"></text></g><g><title>enqueue_task (12 samples, 0.01%)</title><rect x="92.8228%" y="293" width="0.0114%" height="15" fill="rgb(217,71,7)" fg:x="97696" fg:w="12"/><text x="93.0728%" y="303.50"></text></g><g><title>__wake_up_common (17 samples, 0.02%)</title><rect x="92.8200%" y="357" width="0.0162%" height="15" fill="rgb(252,59,32)" fg:x="97693" fg:w="17"/><text x="93.0700%" y="367.50"></text></g><g><title>autoremove_wake_function (17 samples, 0.02%)</title><rect x="92.8200%" y="341" width="0.0162%" height="15" fill="rgb(253,204,25)" fg:x="97693" fg:w="17"/><text x="93.0700%" y="351.50"></text></g><g><title>try_to_wake_up (17 samples, 0.02%)</title><rect x="92.8200%" y="325" width="0.0162%" height="15" fill="rgb(232,21,16)" fg:x="97693" fg:w="17"/><text x="93.0700%" y="335.50"></text></g><g><title>__wake_up_common_lock (19 samples, 0.02%)</title><rect x="92.8190%" y="373" width="0.0181%" height="15" fill="rgb(248,90,29)" fg:x="97692" fg:w="19"/><text x="93.0690%" y="383.50"></text></g><g><title>__wake_up_common (27 samples, 0.03%)</title><rect x="92.8143%" y="405" width="0.0257%" height="15" fill="rgb(249,223,7)" fg:x="97687" fg:w="27"/><text x="93.0643%" y="415.50"></text></g><g><title>ep_poll_callback (27 samples, 0.03%)</title><rect x="92.8143%" y="389" width="0.0257%" height="15" fill="rgb(231,119,42)" fg:x="97687" fg:w="27"/><text x="93.0643%" y="399.50"></text></g><g><title>ksys_write (37 samples, 0.04%)</title><rect x="92.8095%" y="453" width="0.0352%" height="15" fill="rgb(215,41,35)" fg:x="97682" fg:w="37"/><text x="93.0595%" y="463.50"></text></g><g><title>vfs_write (34 samples, 0.03%)</title><rect x="92.8124%" y="437" width="0.0323%" height="15" fill="rgb(220,44,45)" fg:x="97685" fg:w="34"/><text x="93.0624%" y="447.50"></text></g><g><title>eventfd_write (34 samples, 0.03%)</title><rect x="92.8124%" y="421" width="0.0323%" height="15" fill="rgb(253,197,36)" fg:x="97685" fg:w="34"/><text x="93.0624%" y="431.50"></text></g><g><title>async_io::reactor::Reactor::notify (44 samples, 0.04%)</title><rect x="92.8048%" y="549" width="0.0418%" height="15" fill="rgb(245,225,54)" fg:x="97677" fg:w="44"/><text x="93.0548%" y="559.50"></text></g><g><title>polling::Poller::notify (44 samples, 0.04%)</title><rect x="92.8048%" y="533" width="0.0418%" height="15" fill="rgb(239,94,37)" fg:x="97677" fg:w="44"/><text x="93.0548%" y="543.50"></text></g><g><title>polling::epoll::Poller::notify (43 samples, 0.04%)</title><rect x="92.8057%" y="517" width="0.0409%" height="15" fill="rgb(242,217,10)" fg:x="97678" fg:w="43"/><text x="93.0557%" y="527.50"></text></g><g><title>__GI___write (43 samples, 0.04%)</title><rect x="92.8057%" y="501" width="0.0409%" height="15" fill="rgb(250,193,7)" fg:x="97678" fg:w="43"/><text x="93.0557%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (42 samples, 0.04%)</title><rect x="92.8067%" y="485" width="0.0399%" height="15" fill="rgb(230,104,19)" fg:x="97679" fg:w="42"/><text x="93.0567%" y="495.50"></text></g><g><title>do_syscall_64 (41 samples, 0.04%)</title><rect x="92.8076%" y="469" width="0.0390%" height="15" fill="rgb(230,181,4)" fg:x="97680" fg:w="41"/><text x="93.0576%" y="479.50"></text></g><g><title>ttwu_do_activate (24 samples, 0.02%)</title><rect x="92.8798%" y="341" width="0.0228%" height="15" fill="rgb(216,219,49)" fg:x="97756" fg:w="24"/><text x="93.1298%" y="351.50"></text></g><g><title>enqueue_task (24 samples, 0.02%)</title><rect x="92.8798%" y="325" width="0.0228%" height="15" fill="rgb(254,144,0)" fg:x="97756" fg:w="24"/><text x="93.1298%" y="335.50"></text></g><g><title>psi_task_change (13 samples, 0.01%)</title><rect x="92.8903%" y="309" width="0.0124%" height="15" fill="rgb(205,209,38)" fg:x="97767" fg:w="13"/><text x="93.1403%" y="319.50"></text></g><g><title>__x64_sys_futex (61 samples, 0.06%)</title><rect x="92.8504%" y="421" width="0.0580%" height="15" fill="rgb(240,21,42)" fg:x="97725" fg:w="61"/><text x="93.1004%" y="431.50"></text></g><g><title>do_futex (59 samples, 0.06%)</title><rect x="92.8523%" y="405" width="0.0561%" height="15" fill="rgb(241,132,3)" fg:x="97727" fg:w="59"/><text x="93.1023%" y="415.50"></text></g><g><title>futex_wake (59 samples, 0.06%)</title><rect x="92.8523%" y="389" width="0.0561%" height="15" fill="rgb(225,14,2)" fg:x="97727" fg:w="59"/><text x="93.1023%" y="399.50"></text></g><g><title>wake_up_q (41 samples, 0.04%)</title><rect x="92.8694%" y="373" width="0.0390%" height="15" fill="rgb(210,141,35)" fg:x="97745" fg:w="41"/><text x="93.1194%" y="383.50"></text></g><g><title>try_to_wake_up (39 samples, 0.04%)</title><rect x="92.8713%" y="357" width="0.0371%" height="15" fill="rgb(251,14,44)" fg:x="97747" fg:w="39"/><text x="93.1213%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (72 samples, 0.07%)</title><rect x="92.8504%" y="453" width="0.0684%" height="15" fill="rgb(247,48,18)" fg:x="97725" fg:w="72"/><text x="93.1004%" y="463.50"></text></g><g><title>do_syscall_64 (72 samples, 0.07%)</title><rect x="92.8504%" y="437" width="0.0684%" height="15" fill="rgb(225,0,40)" fg:x="97725" fg:w="72"/><text x="93.1004%" y="447.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (75 samples, 0.07%)</title><rect x="92.8494%" y="517" width="0.0713%" height="15" fill="rgb(221,31,33)" fg:x="97724" fg:w="75"/><text x="93.0994%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (75 samples, 0.07%)</title><rect x="92.8494%" y="501" width="0.0713%" height="15" fill="rgb(237,42,40)" fg:x="97724" fg:w="75"/><text x="93.0994%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (75 samples, 0.07%)</title><rect x="92.8494%" y="485" width="0.0713%" height="15" fill="rgb(233,51,29)" fg:x="97724" fg:w="75"/><text x="93.0994%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (75 samples, 0.07%)</title><rect x="92.8494%" y="469" width="0.0713%" height="15" fill="rgb(226,58,20)" fg:x="97724" fg:w="75"/><text x="93.0994%" y="479.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (123 samples, 0.12%)</title><rect x="92.8048%" y="565" width="0.1169%" height="15" fill="rgb(208,98,7)" fg:x="97677" fg:w="123"/><text x="93.0548%" y="575.50"></text></g><g><title>parking::Unparker::unpark (79 samples, 0.08%)</title><rect x="92.8466%" y="549" width="0.0751%" height="15" fill="rgb(228,143,44)" fg:x="97721" fg:w="79"/><text x="93.0966%" y="559.50"></text></g><g><title>parking::Inner::unpark (77 samples, 0.07%)</title><rect x="92.8485%" y="533" width="0.0732%" height="15" fill="rgb(246,55,38)" fg:x="97723" fg:w="77"/><text x="93.0985%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (124 samples, 0.12%)</title><rect x="92.8048%" y="597" width="0.1178%" height="15" fill="rgb(247,87,16)" fg:x="97677" fg:w="124"/><text x="93.0548%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (124 samples, 0.12%)</title><rect x="92.8048%" y="581" width="0.1178%" height="15" fill="rgb(234,129,42)" fg:x="97677" fg:w="124"/><text x="93.0548%" y="591.50"></text></g><g><title>async_executor::State::notify (130 samples, 0.12%)</title><rect x="92.8000%" y="613" width="0.1235%" height="15" fill="rgb(220,82,16)" fg:x="97672" fg:w="130"/><text x="93.0500%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (133 samples, 0.13%)</title><rect x="92.8000%" y="629" width="0.1264%" height="15" fill="rgb(211,88,4)" fg:x="97672" fg:w="133"/><text x="93.0500%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (135 samples, 0.13%)</title><rect x="92.8000%" y="645" width="0.1283%" height="15" fill="rgb(248,151,21)" fg:x="97672" fg:w="135"/><text x="93.0500%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (76 samples, 0.07%)</title><rect x="92.9283%" y="645" width="0.0722%" height="15" fill="rgb(238,163,6)" fg:x="97807" fg:w="76"/><text x="93.1783%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (76 samples, 0.07%)</title><rect x="92.9283%" y="629" width="0.0722%" height="15" fill="rgb(209,183,11)" fg:x="97807" fg:w="76"/><text x="93.1783%" y="639.50"></text></g><g><title>async_task::runnable::Runnable::run (8,188 samples, 7.78%)</title><rect x="85.2219%" y="677" width="7.7796%" height="15" fill="rgb(219,37,20)" fg:x="89696" fg:w="8188"/><text x="85.4719%" y="687.50">async_task:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,180 samples, 7.77%)</title><rect x="85.2295%" y="661" width="7.7720%" height="15" fill="rgb(210,158,4)" fg:x="89704" fg:w="8180"/><text x="85.4795%" y="671.50">async_task:..</text></g><g><title>async_executor::Executor::run::{{closure}} (12,802 samples, 12.16%)</title><rect x="80.8466%" y="741" width="12.1634%" height="15" fill="rgb(221,167,53)" fg:x="85091" fg:w="12802"/><text x="81.0966%" y="751.50">async_executor::Ex..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,799 samples, 12.16%)</title><rect x="80.8494%" y="725" width="12.1606%" height="15" fill="rgb(237,151,45)" fg:x="85094" fg:w="12799"/><text x="81.0994%" y="735.50">&lt;futures_lite::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,799 samples, 12.16%)</title><rect x="80.8494%" y="709" width="12.1606%" height="15" fill="rgb(231,39,3)" fg:x="85094" fg:w="12799"/><text x="81.0994%" y="719.50">&lt;core::future::fro..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (12,796 samples, 12.16%)</title><rect x="80.8523%" y="693" width="12.1577%" height="15" fill="rgb(212,167,28)" fg:x="85097" fg:w="12796"/><text x="81.1023%" y="703.50">async_executor::Ex..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="93.0527%" y="533" width="0.0190%" height="15" fill="rgb(232,178,8)" fg:x="97938" fg:w="20"/><text x="93.3027%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (20 samples, 0.02%)</title><rect x="93.0527%" y="517" width="0.0190%" height="15" fill="rgb(225,151,20)" fg:x="97938" fg:w="20"/><text x="93.3027%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.02%)</title><rect x="93.0527%" y="501" width="0.0190%" height="15" fill="rgb(238,3,37)" fg:x="97938" fg:w="20"/><text x="93.3027%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.02%)</title><rect x="93.0537%" y="485" width="0.0181%" height="15" fill="rgb(251,147,42)" fg:x="97939" fg:w="19"/><text x="93.3037%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.02%)</title><rect x="93.0556%" y="469" width="0.0162%" height="15" fill="rgb(208,173,10)" fg:x="97941" fg:w="17"/><text x="93.3056%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.01%)</title><rect x="93.0575%" y="453" width="0.0143%" height="15" fill="rgb(246,225,4)" fg:x="97943" fg:w="15"/><text x="93.3075%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 0.01%)</title><rect x="93.0584%" y="437" width="0.0133%" height="15" fill="rgb(248,102,6)" fg:x="97944" fg:w="14"/><text x="93.3084%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (14 samples, 0.01%)</title><rect x="93.0584%" y="421" width="0.0133%" height="15" fill="rgb(232,6,21)" fg:x="97944" fg:w="14"/><text x="93.3084%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (14 samples, 0.01%)</title><rect x="93.0584%" y="405" width="0.0133%" height="15" fill="rgb(221,179,22)" fg:x="97944" fg:w="14"/><text x="93.3084%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 0.01%)</title><rect x="93.0584%" y="389" width="0.0133%" height="15" fill="rgb(252,50,20)" fg:x="97944" fg:w="14"/><text x="93.3084%" y="399.50"></text></g><g><title>concurrent_queue::full_fence (11 samples, 0.01%)</title><rect x="93.0898%" y="501" width="0.0105%" height="15" fill="rgb(222,56,38)" fg:x="97977" fg:w="11"/><text x="93.3398%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (11 samples, 0.01%)</title><rect x="93.0898%" y="485" width="0.0105%" height="15" fill="rgb(206,193,29)" fg:x="97977" fg:w="11"/><text x="93.3398%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.01%)</title><rect x="93.0898%" y="469" width="0.0105%" height="15" fill="rgb(239,192,45)" fg:x="97977" fg:w="11"/><text x="93.3398%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="93.0898%" y="453" width="0.0105%" height="15" fill="rgb(254,18,36)" fg:x="97977" fg:w="11"/><text x="93.3398%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (55 samples, 0.05%)</title><rect x="93.0803%" y="517" width="0.0523%" height="15" fill="rgb(221,127,11)" fg:x="97967" fg:w="55"/><text x="93.3303%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (34 samples, 0.03%)</title><rect x="93.1002%" y="501" width="0.0323%" height="15" fill="rgb(234,146,35)" fg:x="97988" fg:w="34"/><text x="93.3502%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (34 samples, 0.03%)</title><rect x="93.1002%" y="485" width="0.0323%" height="15" fill="rgb(254,201,37)" fg:x="97988" fg:w="34"/><text x="93.3502%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (18 samples, 0.02%)</title><rect x="93.1335%" y="501" width="0.0171%" height="15" fill="rgb(211,202,23)" fg:x="98023" fg:w="18"/><text x="93.3835%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (17 samples, 0.02%)</title><rect x="93.1344%" y="485" width="0.0162%" height="15" fill="rgb(237,91,2)" fg:x="98024" fg:w="17"/><text x="93.3844%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (17 samples, 0.02%)</title><rect x="93.1344%" y="469" width="0.0162%" height="15" fill="rgb(226,228,36)" fg:x="98024" fg:w="17"/><text x="93.3844%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.02%)</title><rect x="93.1344%" y="453" width="0.0162%" height="15" fill="rgb(213,63,50)" fg:x="98024" fg:w="17"/><text x="93.3844%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (86 samples, 0.08%)</title><rect x="93.0717%" y="533" width="0.0817%" height="15" fill="rgb(235,194,19)" fg:x="97958" fg:w="86"/><text x="93.3217%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (22 samples, 0.02%)</title><rect x="93.1325%" y="517" width="0.0209%" height="15" fill="rgb(207,204,18)" fg:x="98022" fg:w="22"/><text x="93.3825%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.01%)</title><rect x="93.1553%" y="469" width="0.0114%" height="15" fill="rgb(248,8,7)" fg:x="98046" fg:w="12"/><text x="93.4053%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.01%)</title><rect x="93.1553%" y="453" width="0.0114%" height="15" fill="rgb(223,145,47)" fg:x="98046" fg:w="12"/><text x="93.4053%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (27 samples, 0.03%)</title><rect x="93.1534%" y="533" width="0.0257%" height="15" fill="rgb(228,84,11)" fg:x="98044" fg:w="27"/><text x="93.4034%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="93.1534%" y="517" width="0.0257%" height="15" fill="rgb(218,76,45)" fg:x="98044" fg:w="27"/><text x="93.4034%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (26 samples, 0.02%)</title><rect x="93.1544%" y="501" width="0.0247%" height="15" fill="rgb(223,80,15)" fg:x="98045" fg:w="26"/><text x="93.4044%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (26 samples, 0.02%)</title><rect x="93.1544%" y="485" width="0.0247%" height="15" fill="rgb(219,218,33)" fg:x="98045" fg:w="26"/><text x="93.4044%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (13 samples, 0.01%)</title><rect x="93.1667%" y="469" width="0.0124%" height="15" fill="rgb(208,51,11)" fg:x="98058" fg:w="13"/><text x="93.4167%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (13 samples, 0.01%)</title><rect x="93.1667%" y="453" width="0.0124%" height="15" fill="rgb(229,165,39)" fg:x="98058" fg:w="13"/><text x="93.4167%" y="463.50"></text></g><g><title>___pthread_rwlock_rdlock (23 samples, 0.02%)</title><rect x="93.1933%" y="485" width="0.0219%" height="15" fill="rgb(241,100,24)" fg:x="98086" fg:w="23"/><text x="93.4433%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (194 samples, 0.18%)</title><rect x="93.0508%" y="549" width="0.1843%" height="15" fill="rgb(228,14,23)" fg:x="97936" fg:w="194"/><text x="93.3008%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (48 samples, 0.05%)</title><rect x="93.1895%" y="533" width="0.0456%" height="15" fill="rgb(247,116,52)" fg:x="98082" fg:w="48"/><text x="93.4395%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (48 samples, 0.05%)</title><rect x="93.1895%" y="517" width="0.0456%" height="15" fill="rgb(216,149,33)" fg:x="98082" fg:w="48"/><text x="93.4395%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (47 samples, 0.04%)</title><rect x="93.1905%" y="501" width="0.0447%" height="15" fill="rgb(238,142,29)" fg:x="98083" fg:w="47"/><text x="93.4405%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.02%)</title><rect x="93.2152%" y="485" width="0.0200%" height="15" fill="rgb(224,83,40)" fg:x="98109" fg:w="21"/><text x="93.4652%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.02%)</title><rect x="93.2152%" y="469" width="0.0200%" height="15" fill="rgb(234,165,11)" fg:x="98109" fg:w="21"/><text x="93.4652%" y="479.50"></text></g><g><title>async_executor::Sleepers::update (18 samples, 0.02%)</title><rect x="93.2371%" y="533" width="0.0171%" height="15" fill="rgb(215,96,23)" fg:x="98132" fg:w="18"/><text x="93.4871%" y="543.50"></text></g><g><title>core::task::wake::Waker::will_wake (11 samples, 0.01%)</title><rect x="93.2437%" y="517" width="0.0105%" height="15" fill="rgb(233,179,26)" fg:x="98139" fg:w="11"/><text x="93.4937%" y="527.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (11 samples, 0.01%)</title><rect x="93.2437%" y="501" width="0.0105%" height="15" fill="rgb(225,129,33)" fg:x="98139" fg:w="11"/><text x="93.4937%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (30 samples, 0.03%)</title><rect x="93.2542%" y="533" width="0.0285%" height="15" fill="rgb(237,49,13)" fg:x="98150" fg:w="30"/><text x="93.5042%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="93.2542%" y="517" width="0.0285%" height="15" fill="rgb(211,3,31)" fg:x="98150" fg:w="30"/><text x="93.5042%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (29 samples, 0.03%)</title><rect x="93.2551%" y="501" width="0.0276%" height="15" fill="rgb(216,152,19)" fg:x="98151" fg:w="29"/><text x="93.5051%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (27 samples, 0.03%)</title><rect x="93.2570%" y="485" width="0.0257%" height="15" fill="rgb(251,121,35)" fg:x="98153" fg:w="27"/><text x="93.5070%" y="495.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (27 samples, 0.03%)</title><rect x="93.2570%" y="469" width="0.0257%" height="15" fill="rgb(210,217,47)" fg:x="98153" fg:w="27"/><text x="93.5070%" y="479.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (283 samples, 0.27%)</title><rect x="93.0423%" y="661" width="0.2689%" height="15" fill="rgb(244,116,22)" fg:x="97927" fg:w="283"/><text x="93.2923%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (280 samples, 0.27%)</title><rect x="93.0451%" y="645" width="0.2660%" height="15" fill="rgb(228,17,21)" fg:x="97930" fg:w="280"/><text x="93.2951%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (280 samples, 0.27%)</title><rect x="93.0451%" y="629" width="0.2660%" height="15" fill="rgb(240,149,34)" fg:x="97930" fg:w="280"/><text x="93.2951%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (277 samples, 0.26%)</title><rect x="93.0480%" y="613" width="0.2632%" height="15" fill="rgb(208,125,47)" fg:x="97933" fg:w="277"/><text x="93.2980%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (276 samples, 0.26%)</title><rect x="93.0489%" y="597" width="0.2622%" height="15" fill="rgb(249,186,39)" fg:x="97934" fg:w="276"/><text x="93.2989%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (276 samples, 0.26%)</title><rect x="93.0489%" y="581" width="0.2622%" height="15" fill="rgb(240,220,33)" fg:x="97934" fg:w="276"/><text x="93.2989%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (276 samples, 0.26%)</title><rect x="93.0489%" y="565" width="0.2622%" height="15" fill="rgb(243,110,23)" fg:x="97934" fg:w="276"/><text x="93.2989%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (80 samples, 0.08%)</title><rect x="93.2352%" y="549" width="0.0760%" height="15" fill="rgb(219,163,46)" fg:x="98130" fg:w="80"/><text x="93.4852%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="93.2827%" y="533" width="0.0285%" height="15" fill="rgb(216,126,30)" fg:x="98180" fg:w="30"/><text x="93.5327%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.02%)</title><rect x="93.2884%" y="517" width="0.0228%" height="15" fill="rgb(208,139,11)" fg:x="98186" fg:w="24"/><text x="93.5384%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (24 samples, 0.02%)</title><rect x="93.2884%" y="501" width="0.0228%" height="15" fill="rgb(213,118,36)" fg:x="98186" fg:w="24"/><text x="93.5384%" y="511.50"></text></g><g><title>___pthread_mutex_lock (24 samples, 0.02%)</title><rect x="93.2884%" y="485" width="0.0228%" height="15" fill="rgb(226,43,17)" fg:x="98186" fg:w="24"/><text x="93.5384%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (16 samples, 0.02%)</title><rect x="93.3416%" y="597" width="0.0152%" height="15" fill="rgb(254,217,4)" fg:x="98242" fg:w="16"/><text x="93.5916%" y="607.50"></text></g><g><title>core::mem::replace (16 samples, 0.02%)</title><rect x="93.3416%" y="581" width="0.0152%" height="15" fill="rgb(210,134,47)" fg:x="98242" fg:w="16"/><text x="93.5916%" y="591.50"></text></g><g><title>core::ptr::read (16 samples, 0.02%)</title><rect x="93.3416%" y="565" width="0.0152%" height="15" fill="rgb(237,24,49)" fg:x="98242" fg:w="16"/><text x="93.5916%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (21 samples, 0.02%)</title><rect x="93.3406%" y="613" width="0.0200%" height="15" fill="rgb(251,39,46)" fg:x="98241" fg:w="21"/><text x="93.5906%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="93.3634%" y="533" width="0.0190%" height="15" fill="rgb(251,220,3)" fg:x="98265" fg:w="20"/><text x="93.6134%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (24 samples, 0.02%)</title><rect x="93.3606%" y="613" width="0.0228%" height="15" fill="rgb(228,105,12)" fg:x="98262" fg:w="24"/><text x="93.6106%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (22 samples, 0.02%)</title><rect x="93.3625%" y="597" width="0.0209%" height="15" fill="rgb(215,196,1)" fg:x="98264" fg:w="22"/><text x="93.6125%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="93.3625%" y="581" width="0.0209%" height="15" fill="rgb(214,33,39)" fg:x="98264" fg:w="22"/><text x="93.6125%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.02%)</title><rect x="93.3625%" y="565" width="0.0209%" height="15" fill="rgb(220,19,52)" fg:x="98264" fg:w="22"/><text x="93.6125%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (21 samples, 0.02%)</title><rect x="93.3634%" y="549" width="0.0200%" height="15" fill="rgb(221,78,38)" fg:x="98265" fg:w="21"/><text x="93.6134%" y="559.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (112 samples, 0.11%)</title><rect x="93.3311%" y="629" width="0.1064%" height="15" fill="rgb(253,30,16)" fg:x="98231" fg:w="112"/><text x="93.5811%" y="639.50"></text></g><g><title>event_listener::Inner::lock (51 samples, 0.05%)</title><rect x="93.3891%" y="613" width="0.0485%" height="15" fill="rgb(242,65,0)" fg:x="98292" fg:w="51"/><text x="93.6391%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (51 samples, 0.05%)</title><rect x="93.3891%" y="597" width="0.0485%" height="15" fill="rgb(235,201,12)" fg:x="98292" fg:w="51"/><text x="93.6391%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (51 samples, 0.05%)</title><rect x="93.3891%" y="581" width="0.0485%" height="15" fill="rgb(233,161,9)" fg:x="98292" fg:w="51"/><text x="93.6391%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (44 samples, 0.04%)</title><rect x="93.3957%" y="565" width="0.0418%" height="15" fill="rgb(241,207,41)" fg:x="98299" fg:w="44"/><text x="93.6457%" y="575.50"></text></g><g><title>___pthread_mutex_lock (44 samples, 0.04%)</title><rect x="93.3957%" y="549" width="0.0418%" height="15" fill="rgb(212,69,46)" fg:x="98299" fg:w="44"/><text x="93.6457%" y="559.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (73 samples, 0.07%)</title><rect x="93.4375%" y="629" width="0.0694%" height="15" fill="rgb(239,69,45)" fg:x="98343" fg:w="73"/><text x="93.6875%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (73 samples, 0.07%)</title><rect x="93.4375%" y="613" width="0.0694%" height="15" fill="rgb(242,117,48)" fg:x="98343" fg:w="73"/><text x="93.6875%" y="623.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (46 samples, 0.04%)</title><rect x="93.4632%" y="597" width="0.0437%" height="15" fill="rgb(228,41,36)" fg:x="98370" fg:w="46"/><text x="93.7132%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (45 samples, 0.04%)</title><rect x="93.4641%" y="581" width="0.0428%" height="15" fill="rgb(212,3,32)" fg:x="98371" fg:w="45"/><text x="93.7141%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (45 samples, 0.04%)</title><rect x="93.4641%" y="565" width="0.0428%" height="15" fill="rgb(233,41,49)" fg:x="98371" fg:w="45"/><text x="93.7141%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (45 samples, 0.04%)</title><rect x="93.4641%" y="549" width="0.0428%" height="15" fill="rgb(252,170,49)" fg:x="98371" fg:w="45"/><text x="93.7141%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (498 samples, 0.47%)</title><rect x="93.0385%" y="693" width="0.4732%" height="15" fill="rgb(229,53,26)" fg:x="97923" fg:w="498"/><text x="93.2885%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (496 samples, 0.47%)</title><rect x="93.0404%" y="677" width="0.4713%" height="15" fill="rgb(217,157,12)" fg:x="97925" fg:w="496"/><text x="93.2904%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (211 samples, 0.20%)</title><rect x="93.3112%" y="661" width="0.2005%" height="15" fill="rgb(227,17,9)" fg:x="98210" fg:w="211"/><text x="93.5612%" y="671.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (205 samples, 0.19%)</title><rect x="93.3169%" y="645" width="0.1948%" height="15" fill="rgb(218,84,12)" fg:x="98216" fg:w="205"/><text x="93.5669%" y="655.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13,347 samples, 12.68%)</title><rect x="80.8361%" y="773" width="12.6812%" height="15" fill="rgb(212,79,24)" fg:x="85080" fg:w="13347"/><text x="81.0861%" y="783.50">&lt;futures_lite::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,337 samples, 12.67%)</title><rect x="80.8456%" y="757" width="12.6717%" height="15" fill="rgb(217,222,37)" fg:x="85090" fg:w="13337"/><text x="81.0956%" y="767.50">&lt;core::future::from..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (534 samples, 0.51%)</title><rect x="93.0100%" y="741" width="0.5074%" height="15" fill="rgb(246,208,8)" fg:x="97893" fg:w="534"/><text x="93.2600%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (507 samples, 0.48%)</title><rect x="93.0356%" y="725" width="0.4817%" height="15" fill="rgb(244,133,10)" fg:x="97920" fg:w="507"/><text x="93.2856%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (506 samples, 0.48%)</title><rect x="93.0366%" y="709" width="0.4808%" height="15" fill="rgb(209,219,41)" fg:x="97921" fg:w="506"/><text x="93.2866%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::get (11 samples, 0.01%)</title><rect x="93.5183%" y="773" width="0.0105%" height="15" fill="rgb(253,175,45)" fg:x="98428" fg:w="11"/><text x="93.7683%" y="783.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="93.5183%" y="757" width="0.0105%" height="15" fill="rgb(235,100,37)" fg:x="98428" fg:w="11"/><text x="93.7683%" y="767.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (11 samples, 0.01%)</title><rect x="93.5183%" y="741" width="0.0105%" height="15" fill="rgb(225,87,19)" fg:x="98428" fg:w="11"/><text x="93.7683%" y="751.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (11 samples, 0.01%)</title><rect x="93.5183%" y="725" width="0.0105%" height="15" fill="rgb(217,152,17)" fg:x="98428" fg:w="11"/><text x="93.7683%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (11 samples, 0.01%)</title><rect x="93.5183%" y="709" width="0.0105%" height="15" fill="rgb(235,72,13)" fg:x="98428" fg:w="11"/><text x="93.7683%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (111 samples, 0.11%)</title><rect x="93.5287%" y="773" width="0.1055%" height="15" fill="rgb(233,140,18)" fg:x="98439" fg:w="111"/><text x="93.7787%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (111 samples, 0.11%)</title><rect x="93.5287%" y="757" width="0.1055%" height="15" fill="rgb(207,212,28)" fg:x="98439" fg:w="111"/><text x="93.7787%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (110 samples, 0.10%)</title><rect x="93.5297%" y="741" width="0.1045%" height="15" fill="rgb(220,130,25)" fg:x="98440" fg:w="110"/><text x="93.7797%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (109 samples, 0.10%)</title><rect x="93.5306%" y="725" width="0.1036%" height="15" fill="rgb(205,55,34)" fg:x="98441" fg:w="109"/><text x="93.7806%" y="735.50"></text></g><g><title>__GI___pthread_mutex_trylock (109 samples, 0.10%)</title><rect x="93.5306%" y="709" width="0.1036%" height="15" fill="rgb(237,54,35)" fg:x="98441" fg:w="109"/><text x="93.7806%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (14 samples, 0.01%)</title><rect x="93.6485%" y="533" width="0.0133%" height="15" fill="rgb(208,67,23)" fg:x="98565" fg:w="14"/><text x="93.8985%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (14 samples, 0.01%)</title><rect x="93.6485%" y="517" width="0.0133%" height="15" fill="rgb(206,207,50)" fg:x="98565" fg:w="14"/><text x="93.8985%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (15 samples, 0.01%)</title><rect x="93.6485%" y="581" width="0.0143%" height="15" fill="rgb(213,211,42)" fg:x="98565" fg:w="15"/><text x="93.8985%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (15 samples, 0.01%)</title><rect x="93.6485%" y="565" width="0.0143%" height="15" fill="rgb(252,197,50)" fg:x="98565" fg:w="15"/><text x="93.8985%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (15 samples, 0.01%)</title><rect x="93.6485%" y="549" width="0.0143%" height="15" fill="rgb(251,211,41)" fg:x="98565" fg:w="15"/><text x="93.8985%" y="559.50"></text></g><g><title>rust_dealloc (20 samples, 0.02%)</title><rect x="93.6485%" y="597" width="0.0190%" height="15" fill="rgb(229,211,5)" fg:x="98565" fg:w="20"/><text x="93.8985%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (21 samples, 0.02%)</title><rect x="93.6485%" y="693" width="0.0200%" height="15" fill="rgb(239,36,31)" fg:x="98565" fg:w="21"/><text x="93.8985%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (21 samples, 0.02%)</title><rect x="93.6485%" y="677" width="0.0200%" height="15" fill="rgb(248,67,31)" fg:x="98565" fg:w="21"/><text x="93.8985%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="93.6485%" y="661" width="0.0200%" height="15" fill="rgb(249,55,44)" fg:x="98565" fg:w="21"/><text x="93.8985%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="93.6485%" y="645" width="0.0200%" height="15" fill="rgb(216,82,12)" fg:x="98565" fg:w="21"/><text x="93.8985%" y="655.50"></text></g><g><title>__rg_dealloc (21 samples, 0.02%)</title><rect x="93.6485%" y="629" width="0.0200%" height="15" fill="rgb(242,174,1)" fg:x="98565" fg:w="21"/><text x="93.8985%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (21 samples, 0.02%)</title><rect x="93.6485%" y="613" width="0.0200%" height="15" fill="rgb(208,120,29)" fg:x="98565" fg:w="21"/><text x="93.8985%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="93.6475%" y="741" width="0.0219%" height="15" fill="rgb(221,105,43)" fg:x="98564" fg:w="23"/><text x="93.8975%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (22 samples, 0.02%)</title><rect x="93.6485%" y="725" width="0.0209%" height="15" fill="rgb(234,124,22)" fg:x="98565" fg:w="22"/><text x="93.8985%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (22 samples, 0.02%)</title><rect x="93.6485%" y="709" width="0.0209%" height="15" fill="rgb(212,23,30)" fg:x="98565" fg:w="22"/><text x="93.8985%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="93.7036%" y="453" width="0.0722%" height="15" fill="rgb(219,122,53)" fg:x="98623" fg:w="76"/><text x="93.9536%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (76 samples, 0.07%)</title><rect x="93.7036%" y="437" width="0.0722%" height="15" fill="rgb(248,84,24)" fg:x="98623" fg:w="76"/><text x="93.9536%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (68 samples, 0.06%)</title><rect x="93.7112%" y="421" width="0.0646%" height="15" fill="rgb(245,115,18)" fg:x="98631" fg:w="68"/><text x="93.9612%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (60 samples, 0.06%)</title><rect x="93.7188%" y="405" width="0.0570%" height="15" fill="rgb(227,176,51)" fg:x="98639" fg:w="60"/><text x="93.9688%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (60 samples, 0.06%)</title><rect x="93.7188%" y="389" width="0.0570%" height="15" fill="rgb(229,63,42)" fg:x="98639" fg:w="60"/><text x="93.9688%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (60 samples, 0.06%)</title><rect x="93.7188%" y="373" width="0.0570%" height="15" fill="rgb(247,202,24)" fg:x="98639" fg:w="60"/><text x="93.9688%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (13 samples, 0.01%)</title><rect x="93.7805%" y="453" width="0.0124%" height="15" fill="rgb(244,173,20)" fg:x="98704" fg:w="13"/><text x="94.0305%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (13 samples, 0.01%)</title><rect x="93.7805%" y="437" width="0.0124%" height="15" fill="rgb(242,81,47)" fg:x="98704" fg:w="13"/><text x="94.0305%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (116 samples, 0.11%)</title><rect x="93.7026%" y="501" width="0.1102%" height="15" fill="rgb(231,185,54)" fg:x="98622" fg:w="116"/><text x="93.9526%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (116 samples, 0.11%)</title><rect x="93.7026%" y="485" width="0.1102%" height="15" fill="rgb(243,55,32)" fg:x="98622" fg:w="116"/><text x="93.9526%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (115 samples, 0.11%)</title><rect x="93.7036%" y="469" width="0.1093%" height="15" fill="rgb(208,167,19)" fg:x="98623" fg:w="115"/><text x="93.9536%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (21 samples, 0.02%)</title><rect x="93.7929%" y="453" width="0.0200%" height="15" fill="rgb(231,72,35)" fg:x="98717" fg:w="21"/><text x="94.0429%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (21 samples, 0.02%)</title><rect x="93.7929%" y="437" width="0.0200%" height="15" fill="rgb(250,173,51)" fg:x="98717" fg:w="21"/><text x="94.0429%" y="447.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (117 samples, 0.11%)</title><rect x="93.7026%" y="693" width="0.1112%" height="15" fill="rgb(209,5,22)" fg:x="98622" fg:w="117"/><text x="93.9526%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (117 samples, 0.11%)</title><rect x="93.7026%" y="677" width="0.1112%" height="15" fill="rgb(250,174,19)" fg:x="98622" fg:w="117"/><text x="93.9526%" y="687.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (117 samples, 0.11%)</title><rect x="93.7026%" y="661" width="0.1112%" height="15" fill="rgb(217,3,49)" fg:x="98622" fg:w="117"/><text x="93.9526%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (117 samples, 0.11%)</title><rect x="93.7026%" y="645" width="0.1112%" height="15" fill="rgb(218,225,5)" fg:x="98622" fg:w="117"/><text x="93.9526%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (117 samples, 0.11%)</title><rect x="93.7026%" y="629" width="0.1112%" height="15" fill="rgb(236,89,11)" fg:x="98622" fg:w="117"/><text x="93.9526%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (117 samples, 0.11%)</title><rect x="93.7026%" y="613" width="0.1112%" height="15" fill="rgb(206,33,28)" fg:x="98622" fg:w="117"/><text x="93.9526%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (117 samples, 0.11%)</title><rect x="93.7026%" y="597" width="0.1112%" height="15" fill="rgb(241,56,42)" fg:x="98622" fg:w="117"/><text x="93.9526%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (117 samples, 0.11%)</title><rect x="93.7026%" y="581" width="0.1112%" height="15" fill="rgb(222,44,11)" fg:x="98622" fg:w="117"/><text x="93.9526%" y="591.50"></text></g><g><title>alloc::alloc::alloc (117 samples, 0.11%)</title><rect x="93.7026%" y="565" width="0.1112%" height="15" fill="rgb(234,111,20)" fg:x="98622" fg:w="117"/><text x="93.9526%" y="575.50"></text></g><g><title>__rg_alloc (117 samples, 0.11%)</title><rect x="93.7026%" y="549" width="0.1112%" height="15" fill="rgb(237,77,6)" fg:x="98622" fg:w="117"/><text x="93.9526%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (117 samples, 0.11%)</title><rect x="93.7026%" y="533" width="0.1112%" height="15" fill="rgb(235,111,23)" fg:x="98622" fg:w="117"/><text x="93.9526%" y="543.50"></text></g><g><title>rust_alloc (117 samples, 0.11%)</title><rect x="93.7026%" y="517" width="0.1112%" height="15" fill="rgb(251,135,29)" fg:x="98622" fg:w="117"/><text x="93.9526%" y="527.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (118 samples, 0.11%)</title><rect x="93.7026%" y="709" width="0.1121%" height="15" fill="rgb(217,57,1)" fg:x="98622" fg:w="118"/><text x="93.9526%" y="719.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (141 samples, 0.13%)</title><rect x="93.6836%" y="725" width="0.1340%" height="15" fill="rgb(249,119,31)" fg:x="98602" fg:w="141"/><text x="93.9336%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (147 samples, 0.14%)</title><rect x="93.6789%" y="741" width="0.1397%" height="15" fill="rgb(233,164,33)" fg:x="98597" fg:w="147"/><text x="93.9289%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (19 samples, 0.02%)</title><rect x="93.8185%" y="741" width="0.0181%" height="15" fill="rgb(250,217,43)" fg:x="98744" fg:w="19"/><text x="94.0685%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (17 samples, 0.02%)</title><rect x="93.8204%" y="725" width="0.0162%" height="15" fill="rgb(232,154,50)" fg:x="98746" fg:w="17"/><text x="94.0704%" y="735.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (16 samples, 0.02%)</title><rect x="93.8214%" y="709" width="0.0152%" height="15" fill="rgb(227,190,8)" fg:x="98747" fg:w="16"/><text x="94.0714%" y="719.50"></text></g><g><title>core::mem::drop (22 samples, 0.02%)</title><rect x="93.8366%" y="741" width="0.0209%" height="15" fill="rgb(209,217,32)" fg:x="98763" fg:w="22"/><text x="94.0866%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="93.8366%" y="725" width="0.0209%" height="15" fill="rgb(243,203,50)" fg:x="98763" fg:w="22"/><text x="94.0866%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="93.8366%" y="709" width="0.0209%" height="15" fill="rgb(232,152,27)" fg:x="98763" fg:w="22"/><text x="94.0866%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.02%)</title><rect x="93.8366%" y="693" width="0.0209%" height="15" fill="rgb(240,34,29)" fg:x="98763" fg:w="22"/><text x="94.0866%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (22 samples, 0.02%)</title><rect x="93.8366%" y="677" width="0.0209%" height="15" fill="rgb(215,185,52)" fg:x="98763" fg:w="22"/><text x="94.0866%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (22 samples, 0.02%)</title><rect x="93.8366%" y="661" width="0.0209%" height="15" fill="rgb(240,89,49)" fg:x="98763" fg:w="22"/><text x="94.0866%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="93.8613%" y="741" width="0.0143%" height="15" fill="rgb(225,12,52)" fg:x="98789" fg:w="15"/><text x="94.1113%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="93.8622%" y="725" width="0.0133%" height="15" fill="rgb(239,128,45)" fg:x="98790" fg:w="14"/><text x="94.1122%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="93.8622%" y="709" width="0.0133%" height="15" fill="rgb(211,78,47)" fg:x="98790" fg:w="14"/><text x="94.1122%" y="719.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="93.8622%" y="693" width="0.0133%" height="15" fill="rgb(232,31,21)" fg:x="98790" fg:w="14"/><text x="94.1122%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (270 samples, 0.26%)</title><rect x="93.6409%" y="757" width="0.2565%" height="15" fill="rgb(222,168,14)" fg:x="98557" fg:w="270"/><text x="93.8909%" y="767.50"></text></g><g><title>std::time::Instant::now (23 samples, 0.02%)</title><rect x="93.8755%" y="741" width="0.0219%" height="15" fill="rgb(209,128,24)" fg:x="98804" fg:w="23"/><text x="94.1255%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (23 samples, 0.02%)</title><rect x="93.8755%" y="725" width="0.0219%" height="15" fill="rgb(249,35,13)" fg:x="98804" fg:w="23"/><text x="94.1255%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (23 samples, 0.02%)</title><rect x="93.8755%" y="709" width="0.0219%" height="15" fill="rgb(218,7,2)" fg:x="98804" fg:w="23"/><text x="94.1255%" y="719.50"></text></g><g><title>__clock_gettime_2 (22 samples, 0.02%)</title><rect x="93.8765%" y="693" width="0.0209%" height="15" fill="rgb(238,107,27)" fg:x="98805" fg:w="22"/><text x="94.1265%" y="703.50"></text></g><g><title>__vdso_clock_gettime (22 samples, 0.02%)</title><rect x="93.8765%" y="677" width="0.0209%" height="15" fill="rgb(217,88,38)" fg:x="98805" fg:w="22"/><text x="94.1265%" y="687.50"></text></g><g><title>[[vdso]] (17 samples, 0.02%)</title><rect x="93.8812%" y="661" width="0.0162%" height="15" fill="rgb(230,207,0)" fg:x="98810" fg:w="17"/><text x="94.1312%" y="671.50"></text></g><g><title>__fdget_pos (27 samples, 0.03%)</title><rect x="93.9838%" y="661" width="0.0257%" height="15" fill="rgb(249,64,54)" fg:x="98918" fg:w="27"/><text x="94.2338%" y="671.50"></text></g><g><title>__fget_light (26 samples, 0.02%)</title><rect x="93.9848%" y="645" width="0.0247%" height="15" fill="rgb(231,7,11)" fg:x="98919" fg:w="26"/><text x="94.2348%" y="655.50"></text></g><g><title>__wake_up_common (21 samples, 0.02%)</title><rect x="94.0532%" y="613" width="0.0200%" height="15" fill="rgb(205,149,21)" fg:x="98991" fg:w="21"/><text x="94.3032%" y="623.50"></text></g><g><title>ep_poll_callback (16 samples, 0.02%)</title><rect x="94.0580%" y="597" width="0.0152%" height="15" fill="rgb(215,126,34)" fg:x="98996" fg:w="16"/><text x="94.3080%" y="607.50"></text></g><g><title>_raw_spin_lock_irq (18 samples, 0.02%)</title><rect x="94.0789%" y="613" width="0.0171%" height="15" fill="rgb(241,132,45)" fg:x="99018" fg:w="18"/><text x="94.3289%" y="623.50"></text></g><g><title>eventfd_read (55 samples, 0.05%)</title><rect x="94.0447%" y="629" width="0.0523%" height="15" fill="rgb(252,69,32)" fg:x="98982" fg:w="55"/><text x="94.2947%" y="639.50"></text></g><g><title>new_sync_read (70 samples, 0.07%)</title><rect x="94.0314%" y="645" width="0.0665%" height="15" fill="rgb(232,204,19)" fg:x="98968" fg:w="70"/><text x="94.2814%" y="655.50"></text></g><g><title>ksys_read (134 samples, 0.13%)</title><rect x="93.9762%" y="677" width="0.1273%" height="15" fill="rgb(249,15,47)" fg:x="98910" fg:w="134"/><text x="94.2262%" y="687.50"></text></g><g><title>vfs_read (89 samples, 0.08%)</title><rect x="94.0190%" y="661" width="0.0846%" height="15" fill="rgb(209,227,23)" fg:x="98955" fg:w="89"/><text x="94.2690%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (80 samples, 0.08%)</title><rect x="94.1036%" y="677" width="0.0760%" height="15" fill="rgb(248,92,24)" fg:x="99044" fg:w="80"/><text x="94.3536%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (240 samples, 0.23%)</title><rect x="93.9610%" y="709" width="0.2280%" height="15" fill="rgb(247,59,2)" fg:x="98894" fg:w="240"/><text x="94.2110%" y="719.50"></text></g><g><title>do_syscall_64 (234 samples, 0.22%)</title><rect x="93.9667%" y="693" width="0.2223%" height="15" fill="rgb(221,30,5)" fg:x="98900" fg:w="234"/><text x="94.2167%" y="703.50"></text></g><g><title>__libc_read (264 samples, 0.25%)</title><rect x="93.9401%" y="725" width="0.2508%" height="15" fill="rgb(208,108,53)" fg:x="98872" fg:w="264"/><text x="94.1901%" y="735.50"></text></g><g><title>__entry_text_start (12 samples, 0.01%)</title><rect x="94.2024%" y="709" width="0.0114%" height="15" fill="rgb(211,183,26)" fg:x="99148" fg:w="12"/><text x="94.4524%" y="719.50"></text></g><g><title>__fget_light (22 samples, 0.02%)</title><rect x="94.2860%" y="645" width="0.0209%" height="15" fill="rgb(232,132,4)" fg:x="99236" fg:w="22"/><text x="94.5360%" y="655.50"></text></g><g><title>ep_done_scan (16 samples, 0.02%)</title><rect x="94.3297%" y="645" width="0.0152%" height="15" fill="rgb(253,128,37)" fg:x="99282" fg:w="16"/><text x="94.5797%" y="655.50"></text></g><g><title>_raw_write_lock_irq (12 samples, 0.01%)</title><rect x="94.3335%" y="629" width="0.0114%" height="15" fill="rgb(221,58,24)" fg:x="99286" fg:w="12"/><text x="94.5835%" y="639.50"></text></g><g><title>ep_item_poll.isra.0 (33 samples, 0.03%)</title><rect x="94.3449%" y="645" width="0.0314%" height="15" fill="rgb(230,54,45)" fg:x="99298" fg:w="33"/><text x="94.5949%" y="655.50"></text></g><g><title>eventfd_poll (22 samples, 0.02%)</title><rect x="94.3553%" y="629" width="0.0209%" height="15" fill="rgb(254,21,18)" fg:x="99309" fg:w="22"/><text x="94.6053%" y="639.50"></text></g><g><title>__perf_event_task_sched_out (13 samples, 0.01%)</title><rect x="94.4238%" y="597" width="0.0124%" height="15" fill="rgb(221,108,0)" fg:x="99381" fg:w="13"/><text x="94.6738%" y="607.50"></text></g><g><title>update_cfs_group (11 samples, 0.01%)</title><rect x="94.4684%" y="565" width="0.0105%" height="15" fill="rgb(206,95,1)" fg:x="99428" fg:w="11"/><text x="94.7184%" y="575.50"></text></g><g><title>cpuacct_charge (14 samples, 0.01%)</title><rect x="94.5102%" y="549" width="0.0133%" height="15" fill="rgb(237,52,5)" fg:x="99472" fg:w="14"/><text x="94.7602%" y="559.50"></text></g><g><title>update_curr (51 samples, 0.05%)</title><rect x="94.4789%" y="565" width="0.0485%" height="15" fill="rgb(218,150,34)" fg:x="99439" fg:w="51"/><text x="94.7289%" y="575.50"></text></g><g><title>__update_load_avg_cfs_rq (15 samples, 0.01%)</title><rect x="94.5359%" y="549" width="0.0143%" height="15" fill="rgb(235,194,28)" fg:x="99499" fg:w="15"/><text x="94.7859%" y="559.50"></text></g><g><title>dequeue_entity (119 samples, 0.11%)</title><rect x="94.4485%" y="581" width="0.1131%" height="15" fill="rgb(245,92,18)" fg:x="99407" fg:w="119"/><text x="94.6985%" y="591.50"></text></g><g><title>update_load_avg (36 samples, 0.03%)</title><rect x="94.5273%" y="565" width="0.0342%" height="15" fill="rgb(253,203,53)" fg:x="99490" fg:w="36"/><text x="94.7773%" y="575.50"></text></g><g><title>__update_load_avg_se (12 samples, 0.01%)</title><rect x="94.5501%" y="549" width="0.0114%" height="15" fill="rgb(249,185,47)" fg:x="99514" fg:w="12"/><text x="94.8001%" y="559.50"></text></g><g><title>dequeue_task_fair (132 samples, 0.13%)</title><rect x="94.4371%" y="597" width="0.1254%" height="15" fill="rgb(252,194,52)" fg:x="99395" fg:w="132"/><text x="94.6871%" y="607.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (53 samples, 0.05%)</title><rect x="94.5948%" y="565" width="0.0504%" height="15" fill="rgb(210,53,36)" fg:x="99561" fg:w="53"/><text x="94.8448%" y="575.50"></text></g><g><title>native_write_msr (49 samples, 0.05%)</title><rect x="94.5986%" y="549" width="0.0466%" height="15" fill="rgb(237,37,25)" fg:x="99565" fg:w="49"/><text x="94.8486%" y="559.50"></text></g><g><title>__perf_event_task_sched_in (63 samples, 0.06%)</title><rect x="94.5900%" y="581" width="0.0599%" height="15" fill="rgb(242,116,27)" fg:x="99556" fg:w="63"/><text x="94.8400%" y="591.50"></text></g><g><title>finish_task_switch.isra.0 (98 samples, 0.09%)</title><rect x="94.5625%" y="597" width="0.0931%" height="15" fill="rgb(213,185,26)" fg:x="99527" fg:w="98"/><text x="94.8125%" y="607.50"></text></g><g><title>pick_next_task_fair (12 samples, 0.01%)</title><rect x="94.6556%" y="597" width="0.0114%" height="15" fill="rgb(225,204,8)" fg:x="99625" fg:w="12"/><text x="94.9056%" y="607.50"></text></g><g><title>psi_group_change (36 samples, 0.03%)</title><rect x="94.6850%" y="581" width="0.0342%" height="15" fill="rgb(254,111,37)" fg:x="99656" fg:w="36"/><text x="94.9350%" y="591.50"></text></g><g><title>psi_task_switch (57 samples, 0.05%)</title><rect x="94.6727%" y="597" width="0.0542%" height="15" fill="rgb(242,35,9)" fg:x="99643" fg:w="57"/><text x="94.9227%" y="607.50"></text></g><g><title>put_prev_task_fair (14 samples, 0.01%)</title><rect x="94.7268%" y="597" width="0.0133%" height="15" fill="rgb(232,138,49)" fg:x="99700" fg:w="14"/><text x="94.9768%" y="607.50"></text></g><g><title>sched_clock_cpu (14 samples, 0.01%)</title><rect x="94.7506%" y="581" width="0.0133%" height="15" fill="rgb(247,56,4)" fg:x="99725" fg:w="14"/><text x="95.0006%" y="591.50"></text></g><g><title>native_sched_clock (13 samples, 0.01%)</title><rect x="94.7515%" y="565" width="0.0124%" height="15" fill="rgb(226,179,17)" fg:x="99726" fg:w="13"/><text x="95.0015%" y="575.50"></text></g><g><title>do_epoll_wait (548 samples, 0.52%)</title><rect x="94.2451%" y="661" width="0.5207%" height="15" fill="rgb(216,163,45)" fg:x="99193" fg:w="548"/><text x="94.4951%" y="671.50"></text></g><g><title>schedule_hrtimeout_range_clock (396 samples, 0.38%)</title><rect x="94.3895%" y="645" width="0.3762%" height="15" fill="rgb(211,157,3)" fg:x="99345" fg:w="396"/><text x="94.6395%" y="655.50"></text></g><g><title>schedule (385 samples, 0.37%)</title><rect x="94.4000%" y="629" width="0.3658%" height="15" fill="rgb(234,44,20)" fg:x="99356" fg:w="385"/><text x="94.6500%" y="639.50"></text></g><g><title>__schedule (383 samples, 0.36%)</title><rect x="94.4019%" y="613" width="0.3639%" height="15" fill="rgb(254,138,23)" fg:x="99358" fg:w="383"/><text x="94.6519%" y="623.50"></text></g><g><title>update_rq_clock (21 samples, 0.02%)</title><rect x="94.7458%" y="597" width="0.0200%" height="15" fill="rgb(206,119,39)" fg:x="99720" fg:w="21"/><text x="94.9958%" y="607.50"></text></g><g><title>__x64_sys_epoll_wait (558 samples, 0.53%)</title><rect x="94.2375%" y="677" width="0.5302%" height="15" fill="rgb(231,105,52)" fg:x="99185" fg:w="558"/><text x="94.4875%" y="687.50"></text></g><g><title>__rseq_handle_notify_resume (19 samples, 0.02%)</title><rect x="94.8580%" y="645" width="0.0181%" height="15" fill="rgb(250,20,5)" fg:x="99838" fg:w="19"/><text x="95.1080%" y="655.50"></text></g><g><title>exit_to_user_mode_prepare (36 samples, 0.03%)</title><rect x="94.8466%" y="661" width="0.0342%" height="15" fill="rgb(215,198,30)" fg:x="99826" fg:w="36"/><text x="95.0966%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (127 samples, 0.12%)</title><rect x="94.7686%" y="677" width="0.1207%" height="15" fill="rgb(246,142,8)" fg:x="99744" fg:w="127"/><text x="95.0186%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (717 samples, 0.68%)</title><rect x="94.2157%" y="709" width="0.6812%" height="15" fill="rgb(243,26,38)" fg:x="99162" fg:w="717"/><text x="94.4657%" y="719.50"></text></g><g><title>do_syscall_64 (702 samples, 0.67%)</title><rect x="94.2299%" y="693" width="0.6670%" height="15" fill="rgb(205,133,28)" fg:x="99177" fg:w="702"/><text x="94.4799%" y="703.50"></text></g><g><title>epoll_wait (748 samples, 0.71%)</title><rect x="94.1910%" y="725" width="0.7107%" height="15" fill="rgb(212,34,0)" fg:x="99136" fg:w="748"/><text x="94.4410%" y="735.50"></text></g><g><title>__entry_text_start (13 samples, 0.01%)</title><rect x="94.9273%" y="677" width="0.0124%" height="15" fill="rgb(251,226,22)" fg:x="99911" fg:w="13"/><text x="95.1773%" y="687.50"></text></g><g><title>_copy_from_user (16 samples, 0.02%)</title><rect x="94.9691%" y="629" width="0.0152%" height="15" fill="rgb(252,119,9)" fg:x="99955" fg:w="16"/><text x="95.2191%" y="639.50"></text></g><g><title>__fget_light (41 samples, 0.04%)</title><rect x="95.0166%" y="613" width="0.0390%" height="15" fill="rgb(213,150,50)" fg:x="100005" fg:w="41"/><text x="95.2666%" y="623.50"></text></g><g><title>ep_item_poll.isra.0 (14 samples, 0.01%)</title><rect x="95.0556%" y="613" width="0.0133%" height="15" fill="rgb(212,24,39)" fg:x="100046" fg:w="14"/><text x="95.3056%" y="623.50"></text></g><g><title>__x64_sys_epoll_ctl (146 samples, 0.14%)</title><rect x="94.9558%" y="645" width="0.1387%" height="15" fill="rgb(213,46,39)" fg:x="99941" fg:w="146"/><text x="95.2058%" y="655.50"></text></g><g><title>do_epoll_ctl (115 samples, 0.11%)</title><rect x="94.9853%" y="629" width="0.1093%" height="15" fill="rgb(239,106,12)" fg:x="99972" fg:w="115"/><text x="95.2353%" y="639.50"></text></g><g><title>mutex_unlock (13 samples, 0.01%)</title><rect x="95.0822%" y="613" width="0.0124%" height="15" fill="rgb(249,229,21)" fg:x="100074" fg:w="13"/><text x="95.3322%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (15 samples, 0.01%)</title><rect x="95.2447%" y="629" width="0.0143%" height="15" fill="rgb(212,158,3)" fg:x="100245" fg:w="15"/><text x="95.4947%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (179 samples, 0.17%)</title><rect x="95.0955%" y="645" width="0.1701%" height="15" fill="rgb(253,26,48)" fg:x="100088" fg:w="179"/><text x="95.3455%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (352 samples, 0.33%)</title><rect x="94.9416%" y="677" width="0.3344%" height="15" fill="rgb(238,178,20)" fg:x="99926" fg:w="352"/><text x="95.1916%" y="687.50"></text></g><g><title>do_syscall_64 (348 samples, 0.33%)</title><rect x="94.9454%" y="661" width="0.3306%" height="15" fill="rgb(208,86,15)" fg:x="99930" fg:w="348"/><text x="95.1954%" y="671.50"></text></g><g><title>syscall_trace_enter.constprop.0 (11 samples, 0.01%)</title><rect x="95.2656%" y="645" width="0.0105%" height="15" fill="rgb(239,42,53)" fg:x="100267" fg:w="11"/><text x="95.5156%" y="655.50"></text></g><g><title>__GI_epoll_ctl (394 samples, 0.37%)</title><rect x="94.9112%" y="693" width="0.3743%" height="15" fill="rgb(245,226,8)" fg:x="99894" fg:w="394"/><text x="95.1612%" y="703.50"></text></g><g><title>polling::epoll::Poller::modify (404 samples, 0.38%)</title><rect x="94.9036%" y="725" width="0.3838%" height="15" fill="rgb(216,176,32)" fg:x="99886" fg:w="404"/><text x="95.1536%" y="735.50"></text></g><g><title>polling::epoll::Poller::ctl (397 samples, 0.38%)</title><rect x="94.9102%" y="709" width="0.3772%" height="15" fill="rgb(231,186,21)" fg:x="99893" fg:w="397"/><text x="95.1602%" y="719.50"></text></g><g><title>__fget_light (21 samples, 0.02%)</title><rect x="95.3425%" y="645" width="0.0200%" height="15" fill="rgb(205,95,49)" fg:x="100348" fg:w="21"/><text x="95.5925%" y="655.50"></text></g><g><title>enqueue_hrtimer (14 samples, 0.01%)</title><rect x="95.4033%" y="629" width="0.0133%" height="15" fill="rgb(217,145,8)" fg:x="100412" fg:w="14"/><text x="95.6533%" y="639.50"></text></g><g><title>timerqueue_add (12 samples, 0.01%)</title><rect x="95.4052%" y="613" width="0.0114%" height="15" fill="rgb(239,144,48)" fg:x="100414" fg:w="12"/><text x="95.6552%" y="623.50"></text></g><g><title>hrtimer_start_range_ns (43 samples, 0.04%)</title><rect x="95.3862%" y="645" width="0.0409%" height="15" fill="rgb(214,189,23)" fg:x="100394" fg:w="43"/><text x="95.6362%" y="655.50"></text></g><g><title>hrtimer_try_to_cancel (19 samples, 0.02%)</title><rect x="95.4271%" y="645" width="0.0181%" height="15" fill="rgb(229,157,17)" fg:x="100437" fg:w="19"/><text x="95.6771%" y="655.50"></text></g><g><title>ktime_get (22 samples, 0.02%)</title><rect x="95.4451%" y="645" width="0.0209%" height="15" fill="rgb(230,5,48)" fg:x="100456" fg:w="22"/><text x="95.6951%" y="655.50"></text></g><g><title>read_tsc (11 samples, 0.01%)</title><rect x="95.4556%" y="629" width="0.0105%" height="15" fill="rgb(224,156,48)" fg:x="100467" fg:w="11"/><text x="95.7056%" y="639.50"></text></g><g><title>do_timerfd_settime (149 samples, 0.14%)</title><rect x="95.3273%" y="661" width="0.1416%" height="15" fill="rgb(223,14,29)" fg:x="100332" fg:w="149"/><text x="95.5773%" y="671.50"></text></g><g><title>get_itimerspec64 (19 samples, 0.02%)</title><rect x="95.4689%" y="661" width="0.0181%" height="15" fill="rgb(229,96,36)" fg:x="100481" fg:w="19"/><text x="95.7189%" y="671.50"></text></g><g><title>get_timespec64 (15 samples, 0.01%)</title><rect x="95.4727%" y="645" width="0.0143%" height="15" fill="rgb(231,102,53)" fg:x="100485" fg:w="15"/><text x="95.7227%" y="655.50"></text></g><g><title>__x64_sys_timerfd_settime (188 samples, 0.18%)</title><rect x="95.3131%" y="677" width="0.1786%" height="15" fill="rgb(210,77,38)" fg:x="100317" fg:w="188"/><text x="95.5631%" y="687.50"></text></g><g><title>syscall_exit_to_user_mode (105 samples, 0.10%)</title><rect x="95.4936%" y="677" width="0.0998%" height="15" fill="rgb(235,131,6)" fg:x="100507" fg:w="105"/><text x="95.7436%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (309 samples, 0.29%)</title><rect x="95.3074%" y="709" width="0.2936%" height="15" fill="rgb(252,55,38)" fg:x="100311" fg:w="309"/><text x="95.5574%" y="719.50"></text></g><g><title>do_syscall_64 (306 samples, 0.29%)</title><rect x="95.3102%" y="693" width="0.2907%" height="15" fill="rgb(246,38,14)" fg:x="100314" fg:w="306"/><text x="95.5602%" y="703.50"></text></g><g><title>polling::epoll::Poller::wait (1,769 samples, 1.68%)</title><rect x="93.9230%" y="741" width="1.6808%" height="15" fill="rgb(242,27,5)" fg:x="98854" fg:w="1769"/><text x="94.1730%" y="751.50"></text></g><g><title>syscall (332 samples, 0.32%)</title><rect x="95.2884%" y="725" width="0.3154%" height="15" fill="rgb(228,65,35)" fg:x="100291" fg:w="332"/><text x="95.5384%" y="735.50"></text></g><g><title>polling::Poller::wait (1,803 samples, 1.71%)</title><rect x="93.9040%" y="757" width="1.7131%" height="15" fill="rgb(245,93,11)" fg:x="98834" fg:w="1803"/><text x="94.1540%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (14 samples, 0.01%)</title><rect x="95.6038%" y="741" width="0.0133%" height="15" fill="rgb(213,1,31)" fg:x="100623" fg:w="14"/><text x="95.8538%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (14 samples, 0.01%)</title><rect x="95.6038%" y="725" width="0.0133%" height="15" fill="rgb(237,205,14)" fg:x="100623" fg:w="14"/><text x="95.8538%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (14 samples, 0.01%)</title><rect x="95.6038%" y="709" width="0.0133%" height="15" fill="rgb(232,118,45)" fg:x="100623" fg:w="14"/><text x="95.8538%" y="719.50"></text></g><g><title>__GI___pthread_mutex_trylock (14 samples, 0.01%)</title><rect x="95.6038%" y="693" width="0.0133%" height="15" fill="rgb(218,5,6)" fg:x="100623" fg:w="14"/><text x="95.8538%" y="703.50"></text></g><g><title>async_io::reactor::ReactorLock::react (2,088 samples, 1.98%)</title><rect x="93.6342%" y="773" width="1.9838%" height="15" fill="rgb(251,87,51)" fg:x="98550" fg:w="2088"/><text x="93.8842%" y="783.50">a..</text></g><g><title>core::sync::atomic::AtomicBool::store (13 samples, 0.01%)</title><rect x="95.6181%" y="725" width="0.0124%" height="15" fill="rgb(207,225,20)" fg:x="100638" fg:w="13"/><text x="95.8681%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_store (13 samples, 0.01%)</title><rect x="95.6181%" y="709" width="0.0124%" height="15" fill="rgb(222,78,54)" fg:x="100638" fg:w="13"/><text x="95.8681%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (16 samples, 0.02%)</title><rect x="95.6181%" y="773" width="0.0152%" height="15" fill="rgb(232,85,16)" fg:x="100638" fg:w="16"/><text x="95.8681%" y="783.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="95.6181%" y="757" width="0.0152%" height="15" fill="rgb(244,25,33)" fg:x="100638" fg:w="16"/><text x="95.8681%" y="767.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (16 samples, 0.02%)</title><rect x="95.6181%" y="741" width="0.0152%" height="15" fill="rgb(233,24,36)" fg:x="100638" fg:w="16"/><text x="95.8681%" y="751.50"></text></g><g><title>__GI___pthread_cond_wait (17 samples, 0.02%)</title><rect x="95.6599%" y="741" width="0.0162%" height="15" fill="rgb(253,49,54)" fg:x="100682" fg:w="17"/><text x="95.9099%" y="751.50"></text></g><g><title>__futex_abstimed_wait_common (17 samples, 0.02%)</title><rect x="95.6599%" y="725" width="0.0162%" height="15" fill="rgb(245,12,22)" fg:x="100682" fg:w="17"/><text x="95.9099%" y="735.50"></text></g><g><title>__entry_text_start (17 samples, 0.02%)</title><rect x="95.6599%" y="709" width="0.0162%" height="15" fill="rgb(253,141,28)" fg:x="100682" fg:w="17"/><text x="95.9099%" y="719.50"></text></g><g><title>__entry_text_start (21 samples, 0.02%)</title><rect x="95.7112%" y="709" width="0.0200%" height="15" fill="rgb(225,207,27)" fg:x="100736" fg:w="21"/><text x="95.9612%" y="719.50"></text></g><g><title>futex_hash (31 samples, 0.03%)</title><rect x="95.8318%" y="629" width="0.0295%" height="15" fill="rgb(220,84,2)" fg:x="100863" fg:w="31"/><text x="96.0818%" y="639.50"></text></g><g><title>__x64_sys_futex (129 samples, 0.12%)</title><rect x="95.7568%" y="677" width="0.1226%" height="15" fill="rgb(224,37,37)" fg:x="100784" fg:w="129"/><text x="96.0068%" y="687.50"></text></g><g><title>do_futex (94 samples, 0.09%)</title><rect x="95.7900%" y="661" width="0.0893%" height="15" fill="rgb(220,143,18)" fg:x="100819" fg:w="94"/><text x="96.0400%" y="671.50"></text></g><g><title>futex_wake (81 samples, 0.08%)</title><rect x="95.8024%" y="645" width="0.0770%" height="15" fill="rgb(210,88,33)" fg:x="100832" fg:w="81"/><text x="96.0524%" y="655.50"></text></g><g><title>get_futex_key (19 samples, 0.02%)</title><rect x="95.8613%" y="629" width="0.0181%" height="15" fill="rgb(219,87,51)" fg:x="100894" fg:w="19"/><text x="96.1113%" y="639.50"></text></g><g><title>exit_to_user_mode_prepare (16 samples, 0.02%)</title><rect x="96.1615%" y="661" width="0.0152%" height="15" fill="rgb(211,7,35)" fg:x="101210" fg:w="16"/><text x="96.4115%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (321 samples, 0.30%)</title><rect x="95.8822%" y="677" width="0.3050%" height="15" fill="rgb(232,77,2)" fg:x="100916" fg:w="321"/><text x="96.1322%" y="687.50"></text></g><g><title>syscall_exit_work (11 samples, 0.01%)</title><rect x="96.1767%" y="661" width="0.0105%" height="15" fill="rgb(249,94,25)" fg:x="101226" fg:w="11"/><text x="96.4267%" y="671.50"></text></g><g><title>__audit_syscall_entry (15 samples, 0.01%)</title><rect x="96.2062%" y="661" width="0.0143%" height="15" fill="rgb(215,112,2)" fg:x="101257" fg:w="15"/><text x="96.4562%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (519 samples, 0.49%)</title><rect x="95.7321%" y="709" width="0.4931%" height="15" fill="rgb(226,115,48)" fg:x="100758" fg:w="519"/><text x="95.9821%" y="719.50"></text></g><g><title>do_syscall_64 (510 samples, 0.48%)</title><rect x="95.7406%" y="693" width="0.4846%" height="15" fill="rgb(249,196,10)" fg:x="100767" fg:w="510"/><text x="95.9906%" y="703.50"></text></g><g><title>syscall_trace_enter.constprop.0 (40 samples, 0.04%)</title><rect x="96.1872%" y="677" width="0.0380%" height="15" fill="rgb(237,109,14)" fg:x="101237" fg:w="40"/><text x="96.4372%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (597 samples, 0.57%)</title><rect x="95.6760%" y="741" width="0.5672%" height="15" fill="rgb(217,103,53)" fg:x="100699" fg:w="597"/><text x="95.9260%" y="751.50"></text></g><g><title>__GI___lll_lock_wake (579 samples, 0.55%)</title><rect x="95.6931%" y="725" width="0.5501%" height="15" fill="rgb(244,137,9)" fg:x="100717" fg:w="579"/><text x="95.9431%" y="735.50"></text></g><g><title>syscall_return_via_sysret (19 samples, 0.02%)</title><rect x="96.2252%" y="709" width="0.0181%" height="15" fill="rgb(227,201,3)" fg:x="101277" fg:w="19"/><text x="96.4752%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (72 samples, 0.07%)</title><rect x="96.2461%" y="741" width="0.0684%" height="15" fill="rgb(243,94,6)" fg:x="101299" fg:w="72"/><text x="96.4961%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (72 samples, 0.07%)</title><rect x="96.2461%" y="725" width="0.0684%" height="15" fill="rgb(235,118,5)" fg:x="101299" fg:w="72"/><text x="96.4961%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="96.3924%" y="677" width="0.0133%" height="15" fill="rgb(247,10,30)" fg:x="101453" fg:w="14"/><text x="96.6424%" y="687.50"></text></g><g><title>__condvar_confirm_wakeup (11 samples, 0.01%)</title><rect x="96.4057%" y="677" width="0.0105%" height="15" fill="rgb(205,26,28)" fg:x="101467" fg:w="11"/><text x="96.6557%" y="687.50"></text></g><g><title>__condvar_dec_grefs (96 samples, 0.09%)</title><rect x="96.4162%" y="677" width="0.0912%" height="15" fill="rgb(206,99,35)" fg:x="101478" fg:w="96"/><text x="96.6662%" y="687.50"></text></g><g><title>__GI___pthread_disable_asynccancel (12 samples, 0.01%)</title><rect x="96.5482%" y="661" width="0.0114%" height="15" fill="rgb(238,130,40)" fg:x="101617" fg:w="12"/><text x="96.7982%" y="671.50"></text></g><g><title>__entry_text_start (22 samples, 0.02%)</title><rect x="96.5663%" y="661" width="0.0209%" height="15" fill="rgb(224,126,31)" fg:x="101636" fg:w="22"/><text x="96.8163%" y="671.50"></text></g><g><title>futex_unqueue (34 samples, 0.03%)</title><rect x="96.7734%" y="581" width="0.0323%" height="15" fill="rgb(254,105,17)" fg:x="101854" fg:w="34"/><text x="97.0234%" y="591.50"></text></g><g><title>_raw_spin_lock (15 samples, 0.01%)</title><rect x="97.0271%" y="517" width="0.0143%" height="15" fill="rgb(216,87,36)" fg:x="102121" fg:w="15"/><text x="97.2771%" y="527.50"></text></g><g><title>__perf_event_task_sched_out (88 samples, 0.08%)</title><rect x="96.9796%" y="533" width="0.0836%" height="15" fill="rgb(240,21,12)" fg:x="102071" fg:w="88"/><text x="97.2296%" y="543.50"></text></g><g><title>x86_pmu_disable (21 samples, 0.02%)</title><rect x="97.0432%" y="517" width="0.0200%" height="15" fill="rgb(245,192,34)" fg:x="102138" fg:w="21"/><text x="97.2932%" y="527.50"></text></g><g><title>reweight_entity (18 samples, 0.02%)</title><rect x="97.1753%" y="501" width="0.0171%" height="15" fill="rgb(226,100,49)" fg:x="102277" fg:w="18"/><text x="97.4253%" y="511.50"></text></g><g><title>update_cfs_group (41 samples, 0.04%)</title><rect x="97.1924%" y="501" width="0.0390%" height="15" fill="rgb(245,188,27)" fg:x="102295" fg:w="41"/><text x="97.4424%" y="511.50"></text></g><g><title>__calc_delta (32 samples, 0.03%)</title><rect x="97.3121%" y="485" width="0.0304%" height="15" fill="rgb(212,170,8)" fg:x="102421" fg:w="32"/><text x="97.5621%" y="495.50"></text></g><g><title>__cgroup_account_cputime (22 samples, 0.02%)</title><rect x="97.3425%" y="485" width="0.0209%" height="15" fill="rgb(217,113,29)" fg:x="102453" fg:w="22"/><text x="97.5925%" y="495.50"></text></g><g><title>cpuacct_charge (44 samples, 0.04%)</title><rect x="97.3672%" y="485" width="0.0418%" height="15" fill="rgb(237,30,3)" fg:x="102479" fg:w="44"/><text x="97.6172%" y="495.50"></text></g><g><title>update_curr (201 samples, 0.19%)</title><rect x="97.2314%" y="501" width="0.1910%" height="15" fill="rgb(227,19,28)" fg:x="102336" fg:w="201"/><text x="97.4814%" y="511.50"></text></g><g><title>update_min_vruntime (14 samples, 0.01%)</title><rect x="97.4090%" y="485" width="0.0133%" height="15" fill="rgb(239,172,45)" fg:x="102523" fg:w="14"/><text x="97.6590%" y="495.50"></text></g><g><title>__update_load_avg_cfs_rq (36 samples, 0.03%)</title><rect x="97.4489%" y="485" width="0.0342%" height="15" fill="rgb(254,55,39)" fg:x="102565" fg:w="36"/><text x="97.6989%" y="495.50"></text></g><g><title>dequeue_entity (437 samples, 0.42%)</title><rect x="97.1287%" y="517" width="0.4152%" height="15" fill="rgb(249,208,12)" fg:x="102228" fg:w="437"/><text x="97.3787%" y="527.50"></text></g><g><title>update_load_avg (128 samples, 0.12%)</title><rect x="97.4223%" y="501" width="0.1216%" height="15" fill="rgb(240,52,13)" fg:x="102537" fg:w="128"/><text x="97.6723%" y="511.50"></text></g><g><title>__update_load_avg_se (64 samples, 0.06%)</title><rect x="97.4831%" y="485" width="0.0608%" height="15" fill="rgb(252,149,13)" fg:x="102601" fg:w="64"/><text x="97.7331%" y="495.50"></text></g><g><title>dequeue_task_fair (508 samples, 0.48%)</title><rect x="97.0689%" y="533" width="0.4827%" height="15" fill="rgb(232,81,48)" fg:x="102165" fg:w="508"/><text x="97.3189%" y="543.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (161 samples, 0.15%)</title><rect x="97.6399%" y="501" width="0.1530%" height="15" fill="rgb(222,144,2)" fg:x="102766" fg:w="161"/><text x="97.8899%" y="511.50"></text></g><g><title>native_write_msr (154 samples, 0.15%)</title><rect x="97.6466%" y="485" width="0.1463%" height="15" fill="rgb(216,81,32)" fg:x="102773" fg:w="154"/><text x="97.8966%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (191 samples, 0.18%)</title><rect x="97.6285%" y="517" width="0.1815%" height="15" fill="rgb(244,78,51)" fg:x="102754" fg:w="191"/><text x="97.8785%" y="527.50"></text></g><g><title>_raw_spin_unlock (18 samples, 0.02%)</title><rect x="97.7929%" y="501" width="0.0171%" height="15" fill="rgb(217,66,21)" fg:x="102927" fg:w="18"/><text x="98.0429%" y="511.50"></text></g><g><title>finish_task_switch.isra.0 (294 samples, 0.28%)</title><rect x="97.5515%" y="533" width="0.2793%" height="15" fill="rgb(247,101,42)" fg:x="102673" fg:w="294"/><text x="97.8015%" y="543.50"></text></g><g><title>pick_next_task_fair (81 samples, 0.08%)</title><rect x="97.8309%" y="533" width="0.0770%" height="15" fill="rgb(227,81,39)" fg:x="102967" fg:w="81"/><text x="98.0809%" y="543.50"></text></g><g><title>newidle_balance (64 samples, 0.06%)</title><rect x="97.8470%" y="517" width="0.0608%" height="15" fill="rgb(220,223,44)" fg:x="102984" fg:w="64"/><text x="98.0970%" y="527.50"></text></g><g><title>pick_next_task_idle (21 samples, 0.02%)</title><rect x="97.9078%" y="533" width="0.0200%" height="15" fill="rgb(205,218,2)" fg:x="103048" fg:w="21"/><text x="98.1578%" y="543.50"></text></g><g><title>set_next_task_idle (19 samples, 0.02%)</title><rect x="97.9097%" y="517" width="0.0181%" height="15" fill="rgb(212,207,28)" fg:x="103050" fg:w="19"/><text x="98.1597%" y="527.50"></text></g><g><title>__update_idle_core (12 samples, 0.01%)</title><rect x="97.9164%" y="501" width="0.0114%" height="15" fill="rgb(224,12,41)" fg:x="103057" fg:w="12"/><text x="98.1664%" y="511.50"></text></g><g><title>iterate_groups (34 samples, 0.03%)</title><rect x="97.9496%" y="517" width="0.0323%" height="15" fill="rgb(216,118,12)" fg:x="103092" fg:w="34"/><text x="98.1996%" y="527.50"></text></g><g><title>psi_group_change (223 samples, 0.21%)</title><rect x="97.9886%" y="517" width="0.2119%" height="15" fill="rgb(252,97,46)" fg:x="103133" fg:w="223"/><text x="98.2386%" y="527.50"></text></g><g><title>psi_task_switch (307 samples, 0.29%)</title><rect x="97.9278%" y="533" width="0.2917%" height="15" fill="rgb(244,206,19)" fg:x="103069" fg:w="307"/><text x="98.1778%" y="543.50"></text></g><g><title>sched_clock_cpu (20 samples, 0.02%)</title><rect x="98.2005%" y="517" width="0.0190%" height="15" fill="rgb(231,84,31)" fg:x="103356" fg:w="20"/><text x="98.4505%" y="527.50"></text></g><g><title>native_sched_clock (16 samples, 0.02%)</title><rect x="98.2043%" y="501" width="0.0152%" height="15" fill="rgb(244,133,0)" fg:x="103360" fg:w="16"/><text x="98.4543%" y="511.50"></text></g><g><title>put_prev_task_fair (34 samples, 0.03%)</title><rect x="98.2195%" y="533" width="0.0323%" height="15" fill="rgb(223,15,50)" fg:x="103376" fg:w="34"/><text x="98.4695%" y="543.50"></text></g><g><title>put_prev_entity (16 samples, 0.02%)</title><rect x="98.2366%" y="517" width="0.0152%" height="15" fill="rgb(250,118,49)" fg:x="103394" fg:w="16"/><text x="98.4866%" y="527.50"></text></g><g><title>raw_spin_rq_lock_nested (17 samples, 0.02%)</title><rect x="98.2518%" y="533" width="0.0162%" height="15" fill="rgb(248,25,38)" fg:x="103410" fg:w="17"/><text x="98.5018%" y="543.50"></text></g><g><title>_raw_spin_lock (13 samples, 0.01%)</title><rect x="98.2556%" y="517" width="0.0124%" height="15" fill="rgb(215,70,14)" fg:x="103414" fg:w="13"/><text x="98.5056%" y="527.50"></text></g><g><title>sched_clock_cpu (36 samples, 0.03%)</title><rect x="98.3002%" y="517" width="0.0342%" height="15" fill="rgb(215,28,15)" fg:x="103461" fg:w="36"/><text x="98.5502%" y="527.50"></text></g><g><title>native_sched_clock (31 samples, 0.03%)</title><rect x="98.3050%" y="501" width="0.0295%" height="15" fill="rgb(243,6,28)" fg:x="103466" fg:w="31"/><text x="98.5550%" y="511.50"></text></g><g><title>futex_wait_queue (1,618 samples, 1.54%)</title><rect x="96.8057%" y="581" width="1.5373%" height="15" fill="rgb(222,130,1)" fg:x="101888" fg:w="1618"/><text x="97.0557%" y="591.50"></text></g><g><title>schedule (1,554 samples, 1.48%)</title><rect x="96.8665%" y="565" width="1.4765%" height="15" fill="rgb(236,166,44)" fg:x="101952" fg:w="1554"/><text x="97.1165%" y="575.50"></text></g><g><title>__schedule (1,521 samples, 1.45%)</title><rect x="96.8979%" y="549" width="1.4451%" height="15" fill="rgb(221,108,14)" fg:x="101985" fg:w="1521"/><text x="97.1479%" y="559.50"></text></g><g><title>update_rq_clock (73 samples, 0.07%)</title><rect x="98.2736%" y="533" width="0.0694%" height="15" fill="rgb(252,3,45)" fg:x="103433" fg:w="73"/><text x="98.5236%" y="543.50"></text></g><g><title>futex_get_value_locked (33 samples, 0.03%)</title><rect x="98.3629%" y="565" width="0.0314%" height="15" fill="rgb(237,68,30)" fg:x="103527" fg:w="33"/><text x="98.6129%" y="575.50"></text></g><g><title>__get_user_nocheck_4 (24 samples, 0.02%)</title><rect x="98.3715%" y="549" width="0.0228%" height="15" fill="rgb(211,79,22)" fg:x="103536" fg:w="24"/><text x="98.6215%" y="559.50"></text></g><g><title>_raw_spin_lock (16 samples, 0.02%)</title><rect x="98.4371%" y="549" width="0.0152%" height="15" fill="rgb(252,185,21)" fg:x="103605" fg:w="16"/><text x="98.6871%" y="559.50"></text></g><g><title>futex_q_lock (85 samples, 0.08%)</title><rect x="98.3943%" y="565" width="0.0808%" height="15" fill="rgb(225,189,26)" fg:x="103560" fg:w="85"/><text x="98.6443%" y="575.50"></text></g><g><title>futex_hash (24 samples, 0.02%)</title><rect x="98.4523%" y="549" width="0.0228%" height="15" fill="rgb(241,30,40)" fg:x="103621" fg:w="24"/><text x="98.7023%" y="559.50"></text></g><g><title>__x64_sys_futex (1,950 samples, 1.85%)</title><rect x="96.6356%" y="629" width="1.8527%" height="15" fill="rgb(235,215,44)" fg:x="101709" fg:w="1950"/><text x="96.8856%" y="639.50">_..</text></g><g><title>do_futex (1,897 samples, 1.80%)</title><rect x="96.6860%" y="613" width="1.8024%" height="15" fill="rgb(205,8,29)" fg:x="101762" fg:w="1897"/><text x="96.9360%" y="623.50">d..</text></g><g><title>futex_wait (1,891 samples, 1.80%)</title><rect x="96.6917%" y="597" width="1.7967%" height="15" fill="rgb(241,137,42)" fg:x="101768" fg:w="1891"/><text x="96.9417%" y="607.50">f..</text></g><g><title>futex_wait_setup (153 samples, 0.15%)</title><rect x="98.3430%" y="581" width="0.1454%" height="15" fill="rgb(237,155,2)" fg:x="103506" fg:w="153"/><text x="98.5930%" y="591.50"></text></g><g><title>get_futex_key (14 samples, 0.01%)</title><rect x="98.4751%" y="565" width="0.0133%" height="15" fill="rgb(245,29,42)" fg:x="103645" fg:w="14"/><text x="98.7251%" y="575.50"></text></g><g><title>syscall_enter_from_user_mode (14 samples, 0.01%)</title><rect x="98.4884%" y="629" width="0.0133%" height="15" fill="rgb(234,101,35)" fg:x="103659" fg:w="14"/><text x="98.7384%" y="639.50"></text></g><g><title>__get_user_8 (26 samples, 0.02%)</title><rect x="98.8950%" y="581" width="0.0247%" height="15" fill="rgb(228,64,37)" fg:x="104087" fg:w="26"/><text x="99.1450%" y="591.50"></text></g><g><title>__rseq_handle_notify_resume (87 samples, 0.08%)</title><rect x="98.8561%" y="597" width="0.0827%" height="15" fill="rgb(217,214,36)" fg:x="104046" fg:w="87"/><text x="99.1061%" y="607.50"></text></g><g><title>__put_user_nocheck_8 (17 samples, 0.02%)</title><rect x="98.9226%" y="581" width="0.0162%" height="15" fill="rgb(243,70,3)" fg:x="104116" fg:w="17"/><text x="99.1726%" y="591.50"></text></g><g><title>exit_to_user_mode_prepare (186 samples, 0.18%)</title><rect x="98.7952%" y="613" width="0.1767%" height="15" fill="rgb(253,158,52)" fg:x="103982" fg:w="186"/><text x="99.0452%" y="623.50"></text></g><g><title>switch_fpu_return (18 samples, 0.02%)</title><rect x="98.9549%" y="597" width="0.0171%" height="15" fill="rgb(234,111,54)" fg:x="104150" fg:w="18"/><text x="99.2049%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (566 samples, 0.54%)</title><rect x="98.5017%" y="629" width="0.5378%" height="15" fill="rgb(217,70,32)" fg:x="103673" fg:w="566"/><text x="98.7517%" y="639.50"></text></g><g><title>syscall_exit_work (71 samples, 0.07%)</title><rect x="98.9720%" y="613" width="0.0675%" height="15" fill="rgb(234,18,33)" fg:x="104168" fg:w="71"/><text x="99.2220%" y="623.50"></text></g><g><title>__audit_syscall_exit (23 samples, 0.02%)</title><rect x="99.0176%" y="597" width="0.0219%" height="15" fill="rgb(234,12,49)" fg:x="104216" fg:w="23"/><text x="99.2676%" y="607.50"></text></g><g><title>__audit_syscall_entry (18 samples, 0.02%)</title><rect x="99.0480%" y="613" width="0.0171%" height="15" fill="rgb(236,10,21)" fg:x="104248" fg:w="18"/><text x="99.2980%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,608 samples, 2.48%)</title><rect x="96.5891%" y="661" width="2.4779%" height="15" fill="rgb(248,182,45)" fg:x="101660" fg:w="2608"/><text x="96.8391%" y="671.50">en..</text></g><g><title>do_syscall_64 (2,597 samples, 2.47%)</title><rect x="96.5995%" y="645" width="2.4675%" height="15" fill="rgb(217,95,36)" fg:x="101671" fg:w="2597"/><text x="96.8495%" y="655.50">do..</text></g><g><title>syscall_trace_enter.constprop.0 (29 samples, 0.03%)</title><rect x="99.0394%" y="629" width="0.0276%" height="15" fill="rgb(212,110,31)" fg:x="104239" fg:w="29"/><text x="99.2894%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (2,727 samples, 2.59%)</title><rect x="96.5074%" y="677" width="2.5910%" height="15" fill="rgb(206,32,53)" fg:x="101574" fg:w="2727"/><text x="96.7574%" y="687.50">__..</text></g><g><title>syscall_return_via_sysret (33 samples, 0.03%)</title><rect x="99.0670%" y="661" width="0.0314%" height="15" fill="rgb(246,141,37)" fg:x="104268" fg:w="33"/><text x="99.3170%" y="671.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (2,944 samples, 2.80%)</title><rect x="96.3230%" y="709" width="2.7971%" height="15" fill="rgb(219,16,7)" fg:x="101380" fg:w="2944"/><text x="96.5730%" y="719.50">st..</text></g><g><title>__GI___pthread_cond_wait (2,944 samples, 2.80%)</title><rect x="96.3230%" y="693" width="2.7971%" height="15" fill="rgb(230,205,45)" fg:x="101380" fg:w="2944"/><text x="96.5730%" y="703.50">__..</text></g><g><title>__pthread_mutex_cond_lock (15 samples, 0.01%)</title><rect x="99.1059%" y="677" width="0.0143%" height="15" fill="rgb(231,43,49)" fg:x="104309" fg:w="15"/><text x="99.3559%" y="687.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (12 samples, 0.01%)</title><rect x="99.1202%" y="709" width="0.0114%" height="15" fill="rgb(212,106,34)" fg:x="104324" fg:w="12"/><text x="99.3702%" y="719.50"></text></g><g><title>std::sync::condvar::Condvar::wait (2,966 samples, 2.82%)</title><rect x="96.3145%" y="741" width="2.8181%" height="15" fill="rgb(206,83,17)" fg:x="101371" fg:w="2966"/><text x="96.5645%" y="751.50">st..</text></g><g><title>std::sys_common::condvar::Condvar::wait (2,957 samples, 2.81%)</title><rect x="96.3230%" y="725" width="2.8095%" height="15" fill="rgb(244,154,49)" fg:x="101380" fg:w="2957"/><text x="96.5730%" y="735.50">st..</text></g><g><title>parking::Parker::park (3,679 samples, 3.50%)</title><rect x="95.6504%" y="773" width="3.4955%" height="15" fill="rgb(244,149,49)" fg:x="100672" fg:w="3679"/><text x="95.9004%" y="783.50">par..</text></g><g><title>parking::Inner::park (3,676 samples, 3.49%)</title><rect x="95.6532%" y="757" width="3.4926%" height="15" fill="rgb(227,134,18)" fg:x="100675" fg:w="3676"/><text x="95.9032%" y="767.50">par..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="99.1325%" y="741" width="0.0133%" height="15" fill="rgb(237,116,36)" fg:x="104337" fg:w="14"/><text x="99.3825%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="99.1335%" y="725" width="0.0124%" height="15" fill="rgb(205,129,40)" fg:x="104338" fg:w="13"/><text x="99.3835%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="99.1335%" y="709" width="0.0124%" height="15" fill="rgb(236,178,4)" fg:x="104338" fg:w="13"/><text x="99.3835%" y="719.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="99.1335%" y="693" width="0.0124%" height="15" fill="rgb(251,76,53)" fg:x="104338" fg:w="13"/><text x="99.3835%" y="703.50"></text></g><g><title>parking::Parker::park_timeout (77 samples, 0.07%)</title><rect x="99.1458%" y="773" width="0.0732%" height="15" fill="rgb(242,92,40)" fg:x="104351" fg:w="77"/><text x="99.3958%" y="783.50"></text></g><g><title>parking::Inner::park (74 samples, 0.07%)</title><rect x="99.1487%" y="757" width="0.0703%" height="15" fill="rgb(209,45,30)" fg:x="104354" fg:w="74"/><text x="99.3987%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (68 samples, 0.06%)</title><rect x="99.1544%" y="741" width="0.0646%" height="15" fill="rgb(218,157,36)" fg:x="104360" fg:w="68"/><text x="99.4044%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (68 samples, 0.06%)</title><rect x="99.1544%" y="725" width="0.0646%" height="15" fill="rgb(222,186,16)" fg:x="104360" fg:w="68"/><text x="99.4044%" y="735.50"></text></g><g><title>std::panic::catch_unwind (19,384 samples, 18.42%)</title><rect x="80.8190%" y="1061" width="18.4171%" height="15" fill="rgb(254,72,35)" fg:x="85062" fg:w="19384"/><text x="81.0690%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (19,384 samples, 18.42%)</title><rect x="80.8190%" y="1045" width="18.4171%" height="15" fill="rgb(224,25,35)" fg:x="85062" fg:w="19384"/><text x="81.0690%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (19,384 samples, 18.42%)</title><rect x="80.8190%" y="1029" width="18.4171%" height="15" fill="rgb(206,135,52)" fg:x="85062" fg:w="19384"/><text x="81.0690%" y="1039.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19,384 samples, 18.42%)</title><rect x="80.8190%" y="1013" width="18.4171%" height="15" fill="rgb(229,174,47)" fg:x="85062" fg:w="19384"/><text x="81.0690%" y="1023.50">&lt;core::panic::unwind_safe::As..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (19,384 samples, 18.42%)</title><rect x="80.8190%" y="997" width="18.4171%" height="15" fill="rgb(242,184,21)" fg:x="85062" fg:w="19384"/><text x="81.0690%" y="1007.50">std::thread::Builder::spawn_u..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19,384 samples, 18.42%)</title><rect x="80.8190%" y="981" width="18.4171%" height="15" fill="rgb(213,22,45)" fg:x="85062" fg:w="19384"/><text x="81.0690%" y="991.50">std::sys_common::backtrace::_..</text></g><g><title>core::ops::function::FnOnce::call_once (19,384 samples, 18.42%)</title><rect x="80.8190%" y="965" width="18.4171%" height="15" fill="rgb(237,81,54)" fg:x="85062" fg:w="19384"/><text x="81.0690%" y="975.50">core::ops::function::FnOnce::..</text></g><g><title>async_global_executor::threading::thread_main_loop (19,384 samples, 18.42%)</title><rect x="80.8190%" y="949" width="18.4171%" height="15" fill="rgb(248,177,18)" fg:x="85062" fg:w="19384"/><text x="81.0690%" y="959.50">async_global_executor::thread..</text></g><g><title>std::panic::catch_unwind (19,371 samples, 18.40%)</title><rect x="80.8314%" y="933" width="18.4048%" height="15" fill="rgb(254,31,16)" fg:x="85075" fg:w="19371"/><text x="81.0814%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (19,371 samples, 18.40%)</title><rect x="80.8314%" y="917" width="18.4048%" height="15" fill="rgb(235,20,31)" fg:x="85075" fg:w="19371"/><text x="81.0814%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (19,371 samples, 18.40%)</title><rect x="80.8314%" y="901" width="18.4048%" height="15" fill="rgb(240,56,43)" fg:x="85075" fg:w="19371"/><text x="81.0814%" y="911.50">std::panicking::try::do_call</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (19,371 samples, 18.40%)</title><rect x="80.8314%" y="885" width="18.4048%" height="15" fill="rgb(237,197,51)" fg:x="85075" fg:w="19371"/><text x="81.0814%" y="895.50">async_global_executor::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19,371 samples, 18.40%)</title><rect x="80.8314%" y="869" width="18.4048%" height="15" fill="rgb(241,162,44)" fg:x="85075" fg:w="19371"/><text x="81.0814%" y="879.50">std::thread::local::LocalKey&lt;..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19,371 samples, 18.40%)</title><rect x="80.8314%" y="853" width="18.4048%" height="15" fill="rgb(224,23,20)" fg:x="85075" fg:w="19371"/><text x="81.0814%" y="863.50">std::thread::local::LocalKey&lt;..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (19,371 samples, 18.40%)</title><rect x="80.8314%" y="837" width="18.4048%" height="15" fill="rgb(250,109,34)" fg:x="85075" fg:w="19371"/><text x="81.0814%" y="847.50">async_global_executor::thread..</text></g><g><title>async_global_executor::reactor::block_on (19,371 samples, 18.40%)</title><rect x="80.8314%" y="821" width="18.4048%" height="15" fill="rgb(214,175,50)" fg:x="85075" fg:w="19371"/><text x="81.0814%" y="831.50">async_global_executor::reacto..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (19,371 samples, 18.40%)</title><rect x="80.8314%" y="805" width="18.4048%" height="15" fill="rgb(213,182,5)" fg:x="85075" fg:w="19371"/><text x="81.0814%" y="815.50">async_global_executor::reacto..</text></g><g><title>async_io::driver::block_on (19,371 samples, 18.40%)</title><rect x="80.8314%" y="789" width="18.4048%" height="15" fill="rgb(209,199,19)" fg:x="85075" fg:w="19371"/><text x="81.0814%" y="799.50">async_io::driver::block_on</text></g><g><title>std::time::Instant::now (12 samples, 0.01%)</title><rect x="99.2247%" y="773" width="0.0114%" height="15" fill="rgb(236,224,42)" fg:x="104434" fg:w="12"/><text x="99.4747%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (12 samples, 0.01%)</title><rect x="99.2247%" y="757" width="0.0114%" height="15" fill="rgb(246,226,29)" fg:x="104434" fg:w="12"/><text x="99.4747%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::now (12 samples, 0.01%)</title><rect x="99.2247%" y="741" width="0.0114%" height="15" fill="rgb(227,223,11)" fg:x="104434" fg:w="12"/><text x="99.4747%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19,402 samples, 18.43%)</title><rect x="80.8190%" y="1125" width="18.4342%" height="15" fill="rgb(219,7,51)" fg:x="85062" fg:w="19402"/><text x="81.0690%" y="1135.50">&lt;alloc::boxed::Box&lt;F,A&gt; as co..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19,402 samples, 18.43%)</title><rect x="80.8190%" y="1109" width="18.4342%" height="15" fill="rgb(245,167,10)" fg:x="85062" fg:w="19402"/><text x="81.0690%" y="1119.50">&lt;alloc::boxed::Box&lt;F,A&gt; as co..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (19,402 samples, 18.43%)</title><rect x="80.8190%" y="1093" width="18.4342%" height="15" fill="rgb(237,224,16)" fg:x="85062" fg:w="19402"/><text x="81.0690%" y="1103.50">core::ops::function::FnOnce::..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (19,402 samples, 18.43%)</title><rect x="80.8190%" y="1077" width="18.4342%" height="15" fill="rgb(226,132,13)" fg:x="85062" fg:w="19402"/><text x="81.0690%" y="1087.50">std::thread::Builder::spawn_u..</text></g><g><title>std::sys::unix::thread::guard::current (18 samples, 0.02%)</title><rect x="99.2361%" y="1061" width="0.0171%" height="15" fill="rgb(214,140,3)" fg:x="104446" fg:w="18"/><text x="99.4861%" y="1071.50"></text></g><g><title>__pthread_getattr_np (18 samples, 0.02%)</title><rect x="99.2361%" y="1045" width="0.0171%" height="15" fill="rgb(221,177,4)" fg:x="104446" fg:w="18"/><text x="99.4861%" y="1055.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.02%)</title><rect x="99.2361%" y="1029" width="0.0171%" height="15" fill="rgb(238,139,3)" fg:x="104446" fg:w="18"/><text x="99.4861%" y="1039.50"></text></g><g><title>tcache_init.part.0 (18 samples, 0.02%)</title><rect x="99.2361%" y="1013" width="0.0171%" height="15" fill="rgb(216,17,39)" fg:x="104446" fg:w="18"/><text x="99.4861%" y="1023.50"></text></g><g><title>arena_get2.part.0 (18 samples, 0.02%)</title><rect x="99.2361%" y="997" width="0.0171%" height="15" fill="rgb(238,120,9)" fg:x="104446" fg:w="18"/><text x="99.4861%" y="1007.50"></text></g><g><title>alloc_new_heap (18 samples, 0.02%)</title><rect x="99.2361%" y="981" width="0.0171%" height="15" fill="rgb(244,92,53)" fg:x="104446" fg:w="18"/><text x="99.4861%" y="991.50"></text></g><g><title>__GI___clone (19,414 samples, 18.45%)</title><rect x="80.8095%" y="1173" width="18.4456%" height="15" fill="rgb(224,148,33)" fg:x="85052" fg:w="19414"/><text x="81.0595%" y="1183.50">__GI___clone</text></g><g><title>start_thread (19,404 samples, 18.44%)</title><rect x="80.8190%" y="1157" width="18.4361%" height="15" fill="rgb(243,6,36)" fg:x="85062" fg:w="19404"/><text x="81.0690%" y="1167.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (19,404 samples, 18.44%)</title><rect x="80.8190%" y="1141" width="18.4361%" height="15" fill="rgb(230,102,11)" fg:x="85062" fg:w="19404"/><text x="81.0690%" y="1151.50">std::sys::unix::thread::Threa..</text></g><g><title>__clock_gettime_2 (19 samples, 0.02%)</title><rect x="99.2656%" y="1173" width="0.0181%" height="15" fill="rgb(234,148,36)" fg:x="104477" fg:w="19"/><text x="99.5156%" y="1183.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="99.2836%" y="1173" width="0.0143%" height="15" fill="rgb(251,153,25)" fg:x="104496" fg:w="15"/><text x="99.5336%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (24 samples, 0.02%)</title><rect x="99.2998%" y="1157" width="0.0228%" height="15" fill="rgb(215,129,8)" fg:x="104513" fg:w="24"/><text x="99.5498%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (24 samples, 0.02%)</title><rect x="99.2998%" y="1141" width="0.0228%" height="15" fill="rgb(224,128,35)" fg:x="104513" fg:w="24"/><text x="99.5498%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (24 samples, 0.02%)</title><rect x="99.2998%" y="1125" width="0.0228%" height="15" fill="rgb(237,56,52)" fg:x="104513" fg:w="24"/><text x="99.5498%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="99.2998%" y="1109" width="0.0228%" height="15" fill="rgb(234,213,19)" fg:x="104513" fg:w="24"/><text x="99.5498%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.02%)</title><rect x="99.2998%" y="1093" width="0.0228%" height="15" fill="rgb(252,82,23)" fg:x="104513" fg:w="24"/><text x="99.5498%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.02%)</title><rect x="99.2998%" y="1077" width="0.0228%" height="15" fill="rgb(254,201,21)" fg:x="104513" fg:w="24"/><text x="99.5498%" y="1087.50"></text></g><g><title>__rg_dealloc (24 samples, 0.02%)</title><rect x="99.2998%" y="1061" width="0.0228%" height="15" fill="rgb(250,186,11)" fg:x="104513" fg:w="24"/><text x="99.5498%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (24 samples, 0.02%)</title><rect x="99.2998%" y="1045" width="0.0228%" height="15" fill="rgb(211,174,5)" fg:x="104513" fg:w="24"/><text x="99.5498%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (23 samples, 0.02%)</title><rect x="99.3226%" y="1157" width="0.0219%" height="15" fill="rgb(214,121,10)" fg:x="104537" fg:w="23"/><text x="99.5726%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (50 samples, 0.05%)</title><rect x="99.2979%" y="1173" width="0.0475%" height="15" fill="rgb(241,66,2)" fg:x="104511" fg:w="50"/><text x="99.5479%" y="1183.50"></text></g><g><title>async_executor::steal (19 samples, 0.02%)</title><rect x="99.3739%" y="1173" width="0.0181%" height="15" fill="rgb(220,167,19)" fg:x="104591" fg:w="19"/><text x="99.6239%" y="1183.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (20 samples, 0.02%)</title><rect x="99.3919%" y="1173" width="0.0190%" height="15" fill="rgb(231,54,50)" fg:x="104610" fg:w="20"/><text x="99.6419%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="99.4128%" y="1173" width="0.0124%" height="15" fill="rgb(239,217,53)" fg:x="104632" fg:w="13"/><text x="99.6628%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (36 samples, 0.03%)</title><rect x="99.4252%" y="1173" width="0.0342%" height="15" fill="rgb(248,8,0)" fg:x="104645" fg:w="36"/><text x="99.6752%" y="1183.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (12 samples, 0.01%)</title><rect x="99.4594%" y="1173" width="0.0114%" height="15" fill="rgb(229,118,37)" fg:x="104681" fg:w="12"/><text x="99.7094%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="99.4708%" y="1173" width="0.0181%" height="15" fill="rgb(253,223,43)" fg:x="104693" fg:w="19"/><text x="99.7208%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="99.4888%" y="1173" width="0.0181%" height="15" fill="rgb(211,77,36)" fg:x="104712" fg:w="19"/><text x="99.7388%" y="1183.50"></text></g><g><title>futex_wait (13 samples, 0.01%)</title><rect x="99.5363%" y="1109" width="0.0124%" height="15" fill="rgb(219,3,53)" fg:x="104762" fg:w="13"/><text x="99.7863%" y="1119.50"></text></g><g><title>__x64_sys_futex (21 samples, 0.02%)</title><rect x="99.5354%" y="1141" width="0.0200%" height="15" fill="rgb(244,45,42)" fg:x="104761" fg:w="21"/><text x="99.7854%" y="1151.50"></text></g><g><title>do_futex (20 samples, 0.02%)</title><rect x="99.5363%" y="1125" width="0.0190%" height="15" fill="rgb(225,95,27)" fg:x="104762" fg:w="20"/><text x="99.7863%" y="1135.50"></text></g><g><title>syscall_exit_to_user_mode (14 samples, 0.01%)</title><rect x="99.5591%" y="1141" width="0.0133%" height="15" fill="rgb(207,74,8)" fg:x="104786" fg:w="14"/><text x="99.8091%" y="1151.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (70 samples, 0.07%)</title><rect x="99.5069%" y="1173" width="0.0665%" height="15" fill="rgb(243,63,36)" fg:x="104731" fg:w="70"/><text x="99.7569%" y="1183.50"></text></g><g><title>do_syscall_64 (43 samples, 0.04%)</title><rect x="99.5325%" y="1157" width="0.0409%" height="15" fill="rgb(211,180,12)" fg:x="104758" fg:w="43"/><text x="99.7825%" y="1167.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (54 samples, 0.05%)</title><rect x="99.5734%" y="1173" width="0.0513%" height="15" fill="rgb(254,166,49)" fg:x="104801" fg:w="54"/><text x="99.8234%" y="1183.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (13 samples, 0.01%)</title><rect x="99.6276%" y="1173" width="0.0124%" height="15" fill="rgb(205,19,0)" fg:x="104858" fg:w="13"/><text x="99.8776%" y="1183.50"></text></g><g><title>async-std/runti (104,821 samples, 99.59%)</title><rect x="0.0675%" y="1189" width="99.5924%" height="15" fill="rgb(224,172,32)" fg:x="71" fg:w="104821"/><text x="0.3175%" y="1199.50">async-std/runti</text></g><g><title>blocking-1 (12 samples, 0.01%)</title><rect x="99.6599%" y="1189" width="0.0114%" height="15" fill="rgb(254,136,30)" fg:x="104892" fg:w="12"/><text x="99.9099%" y="1199.50"></text></g><g><title>__GI___clone (12 samples, 0.01%)</title><rect x="99.6599%" y="1173" width="0.0114%" height="15" fill="rgb(246,19,35)" fg:x="104892" fg:w="12"/><text x="99.9099%" y="1183.50"></text></g><g><title>__perf_event_task_sched_in (56 samples, 0.05%)</title><rect x="99.6903%" y="693" width="0.0532%" height="15" fill="rgb(219,24,36)" fg:x="104924" fg:w="56"/><text x="99.9403%" y="703.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (53 samples, 0.05%)</title><rect x="99.6931%" y="677" width="0.0504%" height="15" fill="rgb(251,55,1)" fg:x="104927" fg:w="53"/><text x="99.9431%" y="687.50"></text></g><g><title>native_write_msr (53 samples, 0.05%)</title><rect x="99.6931%" y="661" width="0.0504%" height="15" fill="rgb(218,117,39)" fg:x="104927" fg:w="53"/><text x="99.9431%" y="671.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (59 samples, 0.06%)</title><rect x="99.6884%" y="933" width="0.0561%" height="15" fill="rgb(248,169,11)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (59 samples, 0.06%)</title><rect x="99.6884%" y="917" width="0.0561%" height="15" fill="rgb(244,40,44)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (59 samples, 0.06%)</title><rect x="99.6884%" y="901" width="0.0561%" height="15" fill="rgb(234,62,37)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (59 samples, 0.06%)</title><rect x="99.6884%" y="885" width="0.0561%" height="15" fill="rgb(207,117,42)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="895.50"></text></g><g><title>___pthread_mutex_lock (59 samples, 0.06%)</title><rect x="99.6884%" y="869" width="0.0561%" height="15" fill="rgb(213,43,2)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (59 samples, 0.06%)</title><rect x="99.6884%" y="853" width="0.0561%" height="15" fill="rgb(244,202,51)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (59 samples, 0.06%)</title><rect x="99.6884%" y="837" width="0.0561%" height="15" fill="rgb(253,174,46)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="847.50"></text></g><g><title>do_syscall_64 (59 samples, 0.06%)</title><rect x="99.6884%" y="821" width="0.0561%" height="15" fill="rgb(251,23,1)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="831.50"></text></g><g><title>__x64_sys_futex (59 samples, 0.06%)</title><rect x="99.6884%" y="805" width="0.0561%" height="15" fill="rgb(253,26,1)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="815.50"></text></g><g><title>do_futex (59 samples, 0.06%)</title><rect x="99.6884%" y="789" width="0.0561%" height="15" fill="rgb(216,89,31)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="799.50"></text></g><g><title>futex_wait (59 samples, 0.06%)</title><rect x="99.6884%" y="773" width="0.0561%" height="15" fill="rgb(209,109,5)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="783.50"></text></g><g><title>futex_wait_queue (59 samples, 0.06%)</title><rect x="99.6884%" y="757" width="0.0561%" height="15" fill="rgb(229,63,13)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="767.50"></text></g><g><title>schedule (59 samples, 0.06%)</title><rect x="99.6884%" y="741" width="0.0561%" height="15" fill="rgb(238,137,54)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="751.50"></text></g><g><title>__schedule (59 samples, 0.06%)</title><rect x="99.6884%" y="725" width="0.0561%" height="15" fill="rgb(228,1,9)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="735.50"></text></g><g><title>finish_task_switch.isra.0 (59 samples, 0.06%)</title><rect x="99.6884%" y="709" width="0.0561%" height="15" fill="rgb(249,120,48)" fg:x="104922" fg:w="59"/><text x="99.9384%" y="719.50"></text></g><g><title>__perf_event_task_sched_in (11 samples, 0.01%)</title><rect x="99.7463%" y="325" width="0.0105%" height="15" fill="rgb(209,72,36)" fg:x="104983" fg:w="11"/><text x="99.9963%" y="335.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (11 samples, 0.01%)</title><rect x="99.7463%" y="309" width="0.0105%" height="15" fill="rgb(247,98,49)" fg:x="104983" fg:w="11"/><text x="99.9963%" y="319.50"></text></g><g><title>native_write_msr (11 samples, 0.01%)</title><rect x="99.7463%" y="293" width="0.0105%" height="15" fill="rgb(233,75,36)" fg:x="104983" fg:w="11"/><text x="99.9963%" y="303.50"></text></g><g><title>__x64_sys_futex (12 samples, 0.01%)</title><rect x="99.7463%" y="437" width="0.0114%" height="15" fill="rgb(225,14,24)" fg:x="104983" fg:w="12"/><text x="99.9963%" y="447.50"></text></g><g><title>do_futex (12 samples, 0.01%)</title><rect x="99.7463%" y="421" width="0.0114%" height="15" fill="rgb(237,193,20)" fg:x="104983" fg:w="12"/><text x="99.9963%" y="431.50"></text></g><g><title>futex_wait (12 samples, 0.01%)</title><rect x="99.7463%" y="405" width="0.0114%" height="15" fill="rgb(239,122,19)" fg:x="104983" fg:w="12"/><text x="99.9963%" y="415.50"></text></g><g><title>futex_wait_queue (12 samples, 0.01%)</title><rect x="99.7463%" y="389" width="0.0114%" height="15" fill="rgb(231,220,10)" fg:x="104983" fg:w="12"/><text x="99.9963%" y="399.50"></text></g><g><title>schedule (12 samples, 0.01%)</title><rect x="99.7463%" y="373" width="0.0114%" height="15" fill="rgb(220,66,15)" fg:x="104983" fg:w="12"/><text x="99.9963%" y="383.50"></text></g><g><title>__schedule (12 samples, 0.01%)</title><rect x="99.7463%" y="357" width="0.0114%" height="15" fill="rgb(215,171,52)" fg:x="104983" fg:w="12"/><text x="99.9963%" y="367.50"></text></g><g><title>finish_task_switch.isra.0 (12 samples, 0.01%)</title><rect x="99.7463%" y="341" width="0.0114%" height="15" fill="rgb(241,169,50)" fg:x="104983" fg:w="12"/><text x="99.9963%" y="351.50"></text></g><g><title>std::panic::catch_unwind (74 samples, 0.07%)</title><rect x="99.6884%" y="1061" width="0.0703%" height="15" fill="rgb(236,189,0)" fg:x="104922" fg:w="74"/><text x="99.9384%" y="1071.50"></text></g><g><title>std::panicking::try (74 samples, 0.07%)</title><rect x="99.6884%" y="1045" width="0.0703%" height="15" fill="rgb(217,147,20)" fg:x="104922" fg:w="74"/><text x="99.9384%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (74 samples, 0.07%)</title><rect x="99.6884%" y="1029" width="0.0703%" height="15" fill="rgb(206,188,39)" fg:x="104922" fg:w="74"/><text x="99.9384%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (74 samples, 0.07%)</title><rect x="99.6884%" y="1013" width="0.0703%" height="15" fill="rgb(227,118,25)" fg:x="104922" fg:w="74"/><text x="99.9384%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (74 samples, 0.07%)</title><rect x="99.6884%" y="997" width="0.0703%" height="15" fill="rgb(248,171,40)" fg:x="104922" fg:w="74"/><text x="99.9384%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (74 samples, 0.07%)</title><rect x="99.6884%" y="981" width="0.0703%" height="15" fill="rgb(251,90,54)" fg:x="104922" fg:w="74"/><text x="99.9384%" y="991.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (74 samples, 0.07%)</title><rect x="99.6884%" y="965" width="0.0703%" height="15" fill="rgb(234,11,46)" fg:x="104922" fg:w="74"/><text x="99.9384%" y="975.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (74 samples, 0.07%)</title><rect x="99.6884%" y="949" width="0.0703%" height="15" fill="rgb(229,134,13)" fg:x="104922" fg:w="74"/><text x="99.9384%" y="959.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (13 samples, 0.01%)</title><rect x="99.7463%" y="933" width="0.0124%" height="15" fill="rgb(223,129,3)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="943.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (13 samples, 0.01%)</title><rect x="99.7463%" y="917" width="0.0124%" height="15" fill="rgb(221,124,13)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="927.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (13 samples, 0.01%)</title><rect x="99.7463%" y="901" width="0.0124%" height="15" fill="rgb(234,3,18)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (13 samples, 0.01%)</title><rect x="99.7463%" y="885" width="0.0124%" height="15" fill="rgb(249,199,20)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (13 samples, 0.01%)</title><rect x="99.7463%" y="869" width="0.0124%" height="15" fill="rgb(224,134,6)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="879.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.01%)</title><rect x="99.7463%" y="853" width="0.0124%" height="15" fill="rgb(254,83,26)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="863.50"></text></g><g><title>std::panicking::try (13 samples, 0.01%)</title><rect x="99.7463%" y="837" width="0.0124%" height="15" fill="rgb(217,88,9)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="847.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.01%)</title><rect x="99.7463%" y="821" width="0.0124%" height="15" fill="rgb(225,73,2)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="99.7463%" y="805" width="0.0124%" height="15" fill="rgb(226,44,39)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (13 samples, 0.01%)</title><rect x="99.7463%" y="789" width="0.0124%" height="15" fill="rgb(228,53,17)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="799.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (13 samples, 0.01%)</title><rect x="99.7463%" y="773" width="0.0124%" height="15" fill="rgb(212,27,27)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="783.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (13 samples, 0.01%)</title><rect x="99.7463%" y="757" width="0.0124%" height="15" fill="rgb(241,50,6)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="767.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (13 samples, 0.01%)</title><rect x="99.7463%" y="741" width="0.0124%" height="15" fill="rgb(225,28,51)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="751.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="99.7463%" y="725" width="0.0124%" height="15" fill="rgb(215,33,16)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (13 samples, 0.01%)</title><rect x="99.7463%" y="709" width="0.0124%" height="15" fill="rgb(243,40,39)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (13 samples, 0.01%)</title><rect x="99.7463%" y="693" width="0.0124%" height="15" fill="rgb(225,11,42)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="703.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (13 samples, 0.01%)</title><rect x="99.7463%" y="677" width="0.0124%" height="15" fill="rgb(241,220,38)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (13 samples, 0.01%)</title><rect x="99.7463%" y="661" width="0.0124%" height="15" fill="rgb(244,52,35)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (13 samples, 0.01%)</title><rect x="99.7463%" y="645" width="0.0124%" height="15" fill="rgb(246,42,46)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (13 samples, 0.01%)</title><rect x="99.7463%" y="629" width="0.0124%" height="15" fill="rgb(205,184,13)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (13 samples, 0.01%)</title><rect x="99.7463%" y="613" width="0.0124%" height="15" fill="rgb(209,48,36)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="623.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (13 samples, 0.01%)</title><rect x="99.7463%" y="597" width="0.0124%" height="15" fill="rgb(244,34,51)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="607.50"></text></g><g><title>tokio::runtime::park::Inner::park (13 samples, 0.01%)</title><rect x="99.7463%" y="581" width="0.0124%" height="15" fill="rgb(221,107,33)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="591.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (13 samples, 0.01%)</title><rect x="99.7463%" y="565" width="0.0124%" height="15" fill="rgb(224,203,12)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="575.50"></text></g><g><title>std::sync::condvar::Condvar::wait (13 samples, 0.01%)</title><rect x="99.7463%" y="549" width="0.0124%" height="15" fill="rgb(230,215,18)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="559.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (13 samples, 0.01%)</title><rect x="99.7463%" y="533" width="0.0124%" height="15" fill="rgb(206,185,35)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="543.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (13 samples, 0.01%)</title><rect x="99.7463%" y="517" width="0.0124%" height="15" fill="rgb(228,140,34)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="527.50"></text></g><g><title>__GI___pthread_cond_wait (13 samples, 0.01%)</title><rect x="99.7463%" y="501" width="0.0124%" height="15" fill="rgb(208,93,13)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="511.50"></text></g><g><title>__futex_abstimed_wait_common (13 samples, 0.01%)</title><rect x="99.7463%" y="485" width="0.0124%" height="15" fill="rgb(221,193,39)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="99.7463%" y="469" width="0.0124%" height="15" fill="rgb(241,132,34)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="479.50"></text></g><g><title>do_syscall_64 (13 samples, 0.01%)</title><rect x="99.7463%" y="453" width="0.0124%" height="15" fill="rgb(221,141,10)" fg:x="104983" fg:w="13"/><text x="99.9963%" y="463.50"></text></g><g><title>__GI___clone (77 samples, 0.07%)</title><rect x="99.6884%" y="1173" width="0.0732%" height="15" fill="rgb(226,90,31)" fg:x="104922" fg:w="77"/><text x="99.9384%" y="1183.50"></text></g><g><title>start_thread (77 samples, 0.07%)</title><rect x="99.6884%" y="1157" width="0.0732%" height="15" fill="rgb(243,75,5)" fg:x="104922" fg:w="77"/><text x="99.9384%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (77 samples, 0.07%)</title><rect x="99.6884%" y="1141" width="0.0732%" height="15" fill="rgb(227,156,21)" fg:x="104922" fg:w="77"/><text x="99.9384%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (77 samples, 0.07%)</title><rect x="99.6884%" y="1125" width="0.0732%" height="15" fill="rgb(250,195,8)" fg:x="104922" fg:w="77"/><text x="99.9384%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (77 samples, 0.07%)</title><rect x="99.6884%" y="1109" width="0.0732%" height="15" fill="rgb(220,134,5)" fg:x="104922" fg:w="77"/><text x="99.9384%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (77 samples, 0.07%)</title><rect x="99.6884%" y="1093" width="0.0732%" height="15" fill="rgb(246,106,34)" fg:x="104922" fg:w="77"/><text x="99.9384%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (77 samples, 0.07%)</title><rect x="99.6884%" y="1077" width="0.0732%" height="15" fill="rgb(205,1,4)" fg:x="104922" fg:w="77"/><text x="99.9384%" y="1087.50"></text></g><g><title>tokio-runtime-w (84 samples, 0.08%)</title><rect x="99.6884%" y="1189" width="0.0798%" height="15" fill="rgb(224,151,29)" fg:x="104922" fg:w="84"/><text x="99.9384%" y="1199.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="99.7682%" y="1173" width="0.0124%" height="15" fill="rgb(251,196,0)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="1183.50"></text></g><g><title>async_std::task::builder::Builder::blocking (13 samples, 0.01%)</title><rect x="99.7682%" y="1157" width="0.0124%" height="15" fill="rgb(212,127,0)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="1167.50"></text></g><g><title>async_std::task::builder::Builder::build (13 samples, 0.01%)</title><rect x="99.7682%" y="1141" width="0.0124%" height="15" fill="rgb(236,71,53)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="1151.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (13 samples, 0.01%)</title><rect x="99.7682%" y="1125" width="0.0124%" height="15" fill="rgb(227,99,0)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="1135.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (13 samples, 0.01%)</title><rect x="99.7682%" y="1109" width="0.0124%" height="15" fill="rgb(239,89,21)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="1119.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (13 samples, 0.01%)</title><rect x="99.7682%" y="1093" width="0.0124%" height="15" fill="rgb(243,122,19)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="1103.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (13 samples, 0.01%)</title><rect x="99.7682%" y="1077" width="0.0124%" height="15" fill="rgb(229,192,45)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="1087.50"></text></g><g><title>once_cell::imp::initialize_inner (13 samples, 0.01%)</title><rect x="99.7682%" y="1061" width="0.0124%" height="15" fill="rgb(235,165,35)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="1071.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (13 samples, 0.01%)</title><rect x="99.7682%" y="1045" width="0.0124%" height="15" fill="rgb(253,202,0)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="1055.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (13 samples, 0.01%)</title><rect x="99.7682%" y="1029" width="0.0124%" height="15" fill="rgb(235,51,20)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="1039.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (13 samples, 0.01%)</title><rect x="99.7682%" y="1013" width="0.0124%" height="15" fill="rgb(218,95,46)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.01%)</title><rect x="99.7682%" y="997" width="0.0124%" height="15" fill="rgb(212,81,10)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.01%)</title><rect x="99.7682%" y="981" width="0.0124%" height="15" fill="rgb(240,59,0)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="991.50"></text></g><g><title>async_std::rt::RUNTIME::{{closure}} (13 samples, 0.01%)</title><rect x="99.7682%" y="965" width="0.0124%" height="15" fill="rgb(212,191,42)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="975.50"></text></g><g><title>async_global_executor::init::init_with_config (13 samples, 0.01%)</title><rect x="99.7682%" y="949" width="0.0124%" height="15" fill="rgb(233,140,3)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="959.50"></text></g><g><title>async_global_executor::init::init (13 samples, 0.01%)</title><rect x="99.7682%" y="933" width="0.0124%" height="15" fill="rgb(215,69,23)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="943.50"></text></g><g><title>async_global_executor::reactor::block_on (13 samples, 0.01%)</title><rect x="99.7682%" y="917" width="0.0124%" height="15" fill="rgb(240,202,20)" fg:x="105006" fg:w="13"/><text x="100.0182%" y="927.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (167 samples, 0.16%)</title><rect x="99.7919%" y="1093" width="0.1587%" height="15" fill="rgb(209,146,50)" fg:x="105031" fg:w="167"/><text x="100.0419%" y="1103.50"></text></g><g><title>native_write_msr (167 samples, 0.16%)</title><rect x="99.7919%" y="1077" width="0.1587%" height="15" fill="rgb(253,102,54)" fg:x="105031" fg:w="167"/><text x="100.0419%" y="1087.50"></text></g><g><title>__perf_event_task_sched_in (171 samples, 0.16%)</title><rect x="99.7891%" y="1109" width="0.1625%" height="15" fill="rgb(250,173,47)" fg:x="105028" fg:w="171"/><text x="100.0391%" y="1119.50"></text></g><g><title>schedule_tail (186 samples, 0.18%)</title><rect x="99.7824%" y="1141" width="0.1767%" height="15" fill="rgb(232,142,7)" fg:x="105021" fg:w="186"/><text x="100.0324%" y="1151.50"></text></g><g><title>finish_task_switch.isra.0 (184 samples, 0.17%)</title><rect x="99.7843%" y="1125" width="0.1748%" height="15" fill="rgb(230,157,47)" fg:x="105023" fg:w="184"/><text x="100.0343%" y="1135.50"></text></g><g><title>ret_from_fork (190 samples, 0.18%)</title><rect x="99.7805%" y="1157" width="0.1805%" height="15" fill="rgb(214,177,35)" fg:x="105019" fg:w="190"/><text x="100.0305%" y="1167.50"></text></g><g><title>__GI___mmap64 (14 samples, 0.01%)</title><rect x="99.9639%" y="1061" width="0.0133%" height="15" fill="rgb(234,119,46)" fg:x="105212" fg:w="14"/><text x="100.2139%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="99.9639%" y="1045" width="0.0133%" height="15" fill="rgb(241,180,50)" fg:x="105212" fg:w="14"/><text x="100.2139%" y="1055.50"></text></g><g><title>do_syscall_64 (14 samples, 0.01%)</title><rect x="99.9639%" y="1029" width="0.0133%" height="15" fill="rgb(221,54,25)" fg:x="105212" fg:w="14"/><text x="100.2139%" y="1039.50"></text></g><g><title>vm_mmap_pgoff (13 samples, 0.01%)</title><rect x="99.9648%" y="1013" width="0.0124%" height="15" fill="rgb(209,157,44)" fg:x="105213" fg:w="13"/><text x="100.2148%" y="1023.50"></text></g><g><title>__GI___mprotect (11 samples, 0.01%)</title><rect x="99.9772%" y="1061" width="0.0105%" height="15" fill="rgb(246,115,41)" fg:x="105226" fg:w="11"/><text x="100.2272%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.01%)</title><rect x="99.9772%" y="1045" width="0.0105%" height="15" fill="rgb(229,86,1)" fg:x="105226" fg:w="11"/><text x="100.2272%" y="1055.50"></text></g><g><title>do_syscall_64 (11 samples, 0.01%)</title><rect x="99.9772%" y="1029" width="0.0105%" height="15" fill="rgb(240,108,53)" fg:x="105226" fg:w="11"/><text x="100.2272%" y="1039.50"></text></g><g><title>__GI___clone (219 samples, 0.21%)</title><rect x="99.7805%" y="1173" width="0.2081%" height="15" fill="rgb(227,134,2)" fg:x="105019" fg:w="219"/><text x="100.0305%" y="1183.50"></text></g><g><title>start_thread (29 samples, 0.03%)</title><rect x="99.9610%" y="1157" width="0.0276%" height="15" fill="rgb(213,129,25)" fg:x="105209" fg:w="29"/><text x="100.2110%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (26 samples, 0.02%)</title><rect x="99.9639%" y="1141" width="0.0247%" height="15" fill="rgb(226,35,21)" fg:x="105212" fg:w="26"/><text x="100.2139%" y="1151.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (26 samples, 0.02%)</title><rect x="99.9639%" y="1125" width="0.0247%" height="15" fill="rgb(208,129,26)" fg:x="105212" fg:w="26"/><text x="100.2139%" y="1135.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (26 samples, 0.02%)</title><rect x="99.9639%" y="1109" width="0.0247%" height="15" fill="rgb(224,83,6)" fg:x="105212" fg:w="26"/><text x="100.2139%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (26 samples, 0.02%)</title><rect x="99.9639%" y="1093" width="0.0247%" height="15" fill="rgb(227,52,39)" fg:x="105212" fg:w="26"/><text x="100.2139%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (26 samples, 0.02%)</title><rect x="99.9639%" y="1077" width="0.0247%" height="15" fill="rgb(241,30,17)" fg:x="105212" fg:w="26"/><text x="100.2139%" y="1087.50"></text></g><g><title>all (105,250 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(246,186,42)" fg:x="0" fg:w="105250"/><text x="0.2500%" y="1215.50"></text></g><g><title>tremor-connecto (244 samples, 0.23%)</title><rect x="99.7682%" y="1189" width="0.2318%" height="15" fill="rgb(221,169,15)" fg:x="105006" fg:w="244"/><text x="100.0182%" y="1199.50"></text></g></svg></svg>