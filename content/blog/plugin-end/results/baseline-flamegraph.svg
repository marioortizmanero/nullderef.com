<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="106856"><g><title>std::sync::condvar::Condvar::wait_timeout (25 samples, 0.02%)</title><rect x="0.0056%" y="901" width="0.0234%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="25"/><text x="0.2556%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (25 samples, 0.02%)</title><rect x="0.0056%" y="885" width="0.0234%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="25"/><text x="0.2556%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (25 samples, 0.02%)</title><rect x="0.0056%" y="869" width="0.0234%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="25"/><text x="0.2556%" y="879.50"></text></g><g><title>__pthread_cond_timedwait (23 samples, 0.02%)</title><rect x="0.0075%" y="853" width="0.0215%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="23"/><text x="0.2575%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common64 (16 samples, 0.01%)</title><rect x="0.0140%" y="837" width="0.0150%" height="15" fill="rgb(208,68,35)" fg:x="15" fg:w="16"/><text x="0.2640%" y="847.50"></text></g><g><title>__GI___clone (27 samples, 0.03%)</title><rect x="0.0047%" y="1173" width="0.0253%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="27"/><text x="0.2547%" y="1183.50"></text></g><g><title>start_thread (27 samples, 0.03%)</title><rect x="0.0047%" y="1157" width="0.0253%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="27"/><text x="0.2547%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (27 samples, 0.03%)</title><rect x="0.0047%" y="1141" width="0.0253%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="27"/><text x="0.2547%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="0.0047%" y="1125" width="0.0253%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="27"/><text x="0.2547%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="0.0047%" y="1109" width="0.0253%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="27"/><text x="0.2547%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (27 samples, 0.03%)</title><rect x="0.0047%" y="1093" width="0.0253%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="27"/><text x="0.2547%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (27 samples, 0.03%)</title><rect x="0.0047%" y="1077" width="0.0253%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="27"/><text x="0.2547%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.03%)</title><rect x="0.0047%" y="1061" width="0.0253%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="27"/><text x="0.2547%" y="1071.50"></text></g><g><title>std::panicking::try (27 samples, 0.03%)</title><rect x="0.0047%" y="1045" width="0.0253%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="27"/><text x="0.2547%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.03%)</title><rect x="0.0047%" y="1029" width="0.0253%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="27"/><text x="0.2547%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.03%)</title><rect x="0.0047%" y="1013" width="0.0253%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="27"/><text x="0.2547%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (27 samples, 0.03%)</title><rect x="0.0047%" y="997" width="0.0253%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="27"/><text x="0.2547%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (27 samples, 0.03%)</title><rect x="0.0047%" y="981" width="0.0253%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="27"/><text x="0.2547%" y="991.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (27 samples, 0.03%)</title><rect x="0.0047%" y="965" width="0.0253%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="27"/><text x="0.2547%" y="975.50"></text></g><g><title>async_io::driver::main_loop (27 samples, 0.03%)</title><rect x="0.0047%" y="949" width="0.0253%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="27"/><text x="0.2547%" y="959.50"></text></g><g><title>parking::Parker::park_timeout (26 samples, 0.02%)</title><rect x="0.0056%" y="933" width="0.0243%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="26"/><text x="0.2556%" y="943.50"></text></g><g><title>parking::Inner::park (26 samples, 0.02%)</title><rect x="0.0056%" y="917" width="0.0243%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="26"/><text x="0.2556%" y="927.50"></text></g><g><title>async-io (31 samples, 0.03%)</title><rect x="0.0019%" y="1189" width="0.0290%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="31"/><text x="0.2519%" y="1199.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="0.2443%" y="1173" width="0.0131%" height="15" fill="rgb(247,18,42)" fg:x="261" fg:w="14"/><text x="0.4943%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="0.2770%" y="1173" width="0.0421%" height="15" fill="rgb(241,131,45)" fg:x="296" fg:w="45"/><text x="0.5270%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="0.3191%" y="1173" width="0.0299%" height="15" fill="rgb(249,31,29)" fg:x="341" fg:w="32"/><text x="0.5691%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (32 samples, 0.03%)</title><rect x="0.3191%" y="1157" width="0.0299%" height="15" fill="rgb(225,111,53)" fg:x="341" fg:w="32"/><text x="0.5691%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (64 samples, 0.06%)</title><rect x="0.3491%" y="1173" width="0.0599%" height="15" fill="rgb(238,160,17)" fg:x="373" fg:w="64"/><text x="0.5991%" y="1183.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (47 samples, 0.04%)</title><rect x="0.3650%" y="1157" width="0.0440%" height="15" fill="rgb(214,148,48)" fg:x="390" fg:w="47"/><text x="0.6150%" y="1167.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (50 samples, 0.05%)</title><rect x="0.4586%" y="1141" width="0.0468%" height="15" fill="rgb(232,36,49)" fg:x="490" fg:w="50"/><text x="0.7086%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (17 samples, 0.02%)</title><rect x="0.5054%" y="1109" width="0.0159%" height="15" fill="rgb(209,103,24)" fg:x="540" fg:w="17"/><text x="0.7554%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (17 samples, 0.02%)</title><rect x="0.5054%" y="1093" width="0.0159%" height="15" fill="rgb(229,88,8)" fg:x="540" fg:w="17"/><text x="0.7554%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (17 samples, 0.02%)</title><rect x="0.5054%" y="1077" width="0.0159%" height="15" fill="rgb(213,181,19)" fg:x="540" fg:w="17"/><text x="0.7554%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (17 samples, 0.02%)</title><rect x="0.5054%" y="1061" width="0.0159%" height="15" fill="rgb(254,191,54)" fg:x="540" fg:w="17"/><text x="0.7554%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="0.5054%" y="1045" width="0.0159%" height="15" fill="rgb(241,83,37)" fg:x="540" fg:w="17"/><text x="0.7554%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="0.5054%" y="1029" width="0.0159%" height="15" fill="rgb(233,36,39)" fg:x="540" fg:w="17"/><text x="0.7554%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.02%)</title><rect x="0.5054%" y="1013" width="0.0159%" height="15" fill="rgb(226,3,54)" fg:x="540" fg:w="17"/><text x="0.7554%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="0.5054%" y="997" width="0.0159%" height="15" fill="rgb(245,192,40)" fg:x="540" fg:w="17"/><text x="0.7554%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="0.5054%" y="981" width="0.0159%" height="15" fill="rgb(238,167,29)" fg:x="540" fg:w="17"/><text x="0.7554%" y="991.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="0.5054%" y="965" width="0.0159%" height="15" fill="rgb(232,182,51)" fg:x="540" fg:w="17"/><text x="0.7554%" y="975.50"></text></g><g><title>__rg_alloc (17 samples, 0.02%)</title><rect x="0.5054%" y="949" width="0.0159%" height="15" fill="rgb(231,60,39)" fg:x="540" fg:w="17"/><text x="0.7554%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.02%)</title><rect x="0.5054%" y="933" width="0.0159%" height="15" fill="rgb(208,69,12)" fg:x="540" fg:w="17"/><text x="0.7554%" y="943.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (129 samples, 0.12%)</title><rect x="0.4174%" y="1157" width="0.1207%" height="15" fill="rgb(235,93,37)" fg:x="446" fg:w="129"/><text x="0.6674%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (35 samples, 0.03%)</title><rect x="0.5054%" y="1141" width="0.0328%" height="15" fill="rgb(213,116,39)" fg:x="540" fg:w="35"/><text x="0.7554%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (35 samples, 0.03%)</title><rect x="0.5054%" y="1125" width="0.0328%" height="15" fill="rgb(222,207,29)" fg:x="540" fg:w="35"/><text x="0.7554%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (18 samples, 0.02%)</title><rect x="0.5213%" y="1109" width="0.0168%" height="15" fill="rgb(206,96,30)" fg:x="557" fg:w="18"/><text x="0.7713%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="0.5849%" y="1141" width="0.0122%" height="15" fill="rgb(218,138,4)" fg:x="625" fg:w="13"/><text x="0.8349%" y="1151.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (13 samples, 0.01%)</title><rect x="0.5849%" y="1125" width="0.0122%" height="15" fill="rgb(250,191,14)" fg:x="625" fg:w="13"/><text x="0.8349%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (13 samples, 0.01%)</title><rect x="0.5849%" y="1109" width="0.0122%" height="15" fill="rgb(239,60,40)" fg:x="625" fg:w="13"/><text x="0.8349%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (13 samples, 0.01%)</title><rect x="0.5849%" y="1093" width="0.0122%" height="15" fill="rgb(206,27,48)" fg:x="625" fg:w="13"/><text x="0.8349%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="0.5849%" y="1077" width="0.0122%" height="15" fill="rgb(225,35,8)" fg:x="625" fg:w="13"/><text x="0.8349%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="0.5849%" y="1061" width="0.0122%" height="15" fill="rgb(250,213,24)" fg:x="625" fg:w="13"/><text x="0.8349%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="0.5849%" y="1045" width="0.0122%" height="15" fill="rgb(247,123,22)" fg:x="625" fg:w="13"/><text x="0.8349%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="0.5849%" y="1029" width="0.0122%" height="15" fill="rgb(231,138,38)" fg:x="625" fg:w="13"/><text x="0.8349%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="0.5849%" y="1013" width="0.0122%" height="15" fill="rgb(231,145,46)" fg:x="625" fg:w="13"/><text x="0.8349%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="0.5849%" y="997" width="0.0122%" height="15" fill="rgb(251,118,11)" fg:x="625" fg:w="13"/><text x="0.8349%" y="1007.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="0.5849%" y="981" width="0.0122%" height="15" fill="rgb(217,147,25)" fg:x="625" fg:w="13"/><text x="0.8349%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="0.5849%" y="965" width="0.0122%" height="15" fill="rgb(247,81,37)" fg:x="625" fg:w="13"/><text x="0.8349%" y="975.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (73 samples, 0.07%)</title><rect x="0.5381%" y="1157" width="0.0683%" height="15" fill="rgb(209,12,38)" fg:x="575" fg:w="73"/><text x="0.7881%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (31 samples, 0.03%)</title><rect x="0.6064%" y="1157" width="0.0290%" height="15" fill="rgb(227,1,9)" fg:x="648" fg:w="31"/><text x="0.8564%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="0.6354%" y="1157" width="0.0159%" height="15" fill="rgb(248,47,43)" fg:x="679" fg:w="17"/><text x="0.8854%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="0.6513%" y="1157" width="0.0290%" height="15" fill="rgb(221,10,30)" fg:x="696" fg:w="31"/><text x="0.9013%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="0.6804%" y="1157" width="0.0440%" height="15" fill="rgb(210,229,1)" fg:x="727" fg:w="47"/><text x="0.9304%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="0.7243%" y="1157" width="0.0215%" height="15" fill="rgb(222,148,37)" fg:x="774" fg:w="23"/><text x="0.9743%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.05%)</title><rect x="0.7515%" y="1157" width="0.0468%" height="15" fill="rgb(234,67,33)" fg:x="803" fg:w="50"/><text x="1.0015%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (24 samples, 0.02%)</title><rect x="0.7758%" y="1141" width="0.0225%" height="15" fill="rgb(247,98,35)" fg:x="829" fg:w="24"/><text x="1.0258%" y="1151.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="0.7758%" y="1125" width="0.0225%" height="15" fill="rgb(247,138,52)" fg:x="829" fg:w="24"/><text x="1.0258%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (24 samples, 0.02%)</title><rect x="0.7758%" y="1109" width="0.0225%" height="15" fill="rgb(213,79,30)" fg:x="829" fg:w="24"/><text x="1.0258%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="0.7758%" y="1093" width="0.0225%" height="15" fill="rgb(246,177,23)" fg:x="829" fg:w="24"/><text x="1.0258%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.02%)</title><rect x="0.7758%" y="1077" width="0.0225%" height="15" fill="rgb(230,62,27)" fg:x="829" fg:w="24"/><text x="1.0258%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.02%)</title><rect x="0.7758%" y="1061" width="0.0225%" height="15" fill="rgb(216,154,8)" fg:x="829" fg:w="24"/><text x="1.0258%" y="1071.50"></text></g><g><title>__rg_dealloc (24 samples, 0.02%)</title><rect x="0.7758%" y="1045" width="0.0225%" height="15" fill="rgb(244,35,45)" fg:x="829" fg:w="24"/><text x="1.0258%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (24 samples, 0.02%)</title><rect x="0.7758%" y="1029" width="0.0225%" height="15" fill="rgb(251,115,12)" fg:x="829" fg:w="24"/><text x="1.0258%" y="1039.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (178 samples, 0.17%)</title><rect x="0.7983%" y="1157" width="0.1666%" height="15" fill="rgb(240,54,50)" fg:x="853" fg:w="178"/><text x="1.0483%" y="1167.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="0.9648%" y="1157" width="0.0140%" height="15" fill="rgb(233,84,52)" fg:x="1031" fg:w="15"/><text x="1.2148%" y="1167.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (35 samples, 0.03%)</title><rect x="1.0528%" y="1141" width="0.0328%" height="15" fill="rgb(207,117,47)" fg:x="1125" fg:w="35"/><text x="1.3028%" y="1151.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (18 samples, 0.02%)</title><rect x="1.0687%" y="1125" width="0.0168%" height="15" fill="rgb(249,43,39)" fg:x="1142" fg:w="18"/><text x="1.3187%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (98 samples, 0.09%)</title><rect x="1.0856%" y="1141" width="0.0917%" height="15" fill="rgb(209,38,44)" fg:x="1160" fg:w="98"/><text x="1.3356%" y="1151.50"></text></g><g><title>core::mem::replace (98 samples, 0.09%)</title><rect x="1.0856%" y="1125" width="0.0917%" height="15" fill="rgb(236,212,23)" fg:x="1160" fg:w="98"/><text x="1.3356%" y="1135.50"></text></g><g><title>core::ptr::read (98 samples, 0.09%)</title><rect x="1.0856%" y="1109" width="0.0917%" height="15" fill="rgb(242,79,21)" fg:x="1160" fg:w="98"/><text x="1.3356%" y="1119.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (219 samples, 0.20%)</title><rect x="0.9789%" y="1157" width="0.2049%" height="15" fill="rgb(211,96,35)" fg:x="1046" fg:w="219"/><text x="1.2289%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (66 samples, 0.06%)</title><rect x="1.5844%" y="1125" width="0.0618%" height="15" fill="rgb(253,215,40)" fg:x="1693" fg:w="66"/><text x="1.8344%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (66 samples, 0.06%)</title><rect x="1.5844%" y="1109" width="0.0618%" height="15" fill="rgb(211,81,21)" fg:x="1693" fg:w="66"/><text x="1.8344%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (152 samples, 0.14%)</title><rect x="1.5058%" y="1141" width="0.1422%" height="15" fill="rgb(208,190,38)" fg:x="1609" fg:w="152"/><text x="1.7558%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="1.6611%" y="997" width="0.0112%" height="15" fill="rgb(235,213,38)" fg:x="1775" fg:w="12"/><text x="1.9111%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="1.6611%" y="981" width="0.0112%" height="15" fill="rgb(237,122,38)" fg:x="1775" fg:w="12"/><text x="1.9111%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="1.6611%" y="965" width="0.0112%" height="15" fill="rgb(244,218,35)" fg:x="1775" fg:w="12"/><text x="1.9111%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="1.6611%" y="949" width="0.0112%" height="15" fill="rgb(240,68,47)" fg:x="1775" fg:w="12"/><text x="1.9111%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="1.6611%" y="933" width="0.0112%" height="15" fill="rgb(210,16,53)" fg:x="1775" fg:w="12"/><text x="1.9111%" y="943.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="1.6611%" y="917" width="0.0112%" height="15" fill="rgb(235,124,12)" fg:x="1775" fg:w="12"/><text x="1.9111%" y="927.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="1.6611%" y="901" width="0.0112%" height="15" fill="rgb(224,169,11)" fg:x="1775" fg:w="12"/><text x="1.9111%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="1.6611%" y="885" width="0.0112%" height="15" fill="rgb(250,166,2)" fg:x="1775" fg:w="12"/><text x="1.9111%" y="895.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (45 samples, 0.04%)</title><rect x="1.6480%" y="1125" width="0.0421%" height="15" fill="rgb(242,216,29)" fg:x="1761" fg:w="45"/><text x="1.8980%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="1.6611%" y="1109" width="0.0290%" height="15" fill="rgb(230,116,27)" fg:x="1775" fg:w="31"/><text x="1.9111%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (31 samples, 0.03%)</title><rect x="1.6611%" y="1093" width="0.0290%" height="15" fill="rgb(228,99,48)" fg:x="1775" fg:w="31"/><text x="1.9111%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (31 samples, 0.03%)</title><rect x="1.6611%" y="1077" width="0.0290%" height="15" fill="rgb(253,11,6)" fg:x="1775" fg:w="31"/><text x="1.9111%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (31 samples, 0.03%)</title><rect x="1.6611%" y="1061" width="0.0290%" height="15" fill="rgb(247,143,39)" fg:x="1775" fg:w="31"/><text x="1.9111%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.03%)</title><rect x="1.6611%" y="1045" width="0.0290%" height="15" fill="rgb(236,97,10)" fg:x="1775" fg:w="31"/><text x="1.9111%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.03%)</title><rect x="1.6611%" y="1029" width="0.0290%" height="15" fill="rgb(233,208,19)" fg:x="1775" fg:w="31"/><text x="1.9111%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.03%)</title><rect x="1.6611%" y="1013" width="0.0290%" height="15" fill="rgb(216,164,2)" fg:x="1775" fg:w="31"/><text x="1.9111%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (19 samples, 0.02%)</title><rect x="1.6723%" y="997" width="0.0178%" height="15" fill="rgb(220,129,5)" fg:x="1787" fg:w="19"/><text x="1.9223%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.02%)</title><rect x="1.6723%" y="981" width="0.0178%" height="15" fill="rgb(242,17,10)" fg:x="1787" fg:w="19"/><text x="1.9223%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="1.6901%" y="1045" width="0.0103%" height="15" fill="rgb(242,107,0)" fg:x="1806" fg:w="11"/><text x="1.9401%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="1.6901%" y="1029" width="0.0103%" height="15" fill="rgb(251,28,31)" fg:x="1806" fg:w="11"/><text x="1.9401%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="1.6901%" y="1013" width="0.0103%" height="15" fill="rgb(233,223,10)" fg:x="1806" fg:w="11"/><text x="1.9401%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="1.6901%" y="997" width="0.0103%" height="15" fill="rgb(215,21,27)" fg:x="1806" fg:w="11"/><text x="1.9401%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="1.6901%" y="981" width="0.0103%" height="15" fill="rgb(232,23,21)" fg:x="1806" fg:w="11"/><text x="1.9401%" y="991.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="1.6901%" y="965" width="0.0103%" height="15" fill="rgb(244,5,23)" fg:x="1806" fg:w="11"/><text x="1.9401%" y="975.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="1.6901%" y="949" width="0.0103%" height="15" fill="rgb(226,81,46)" fg:x="1806" fg:w="11"/><text x="1.9401%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="1.6901%" y="933" width="0.0103%" height="15" fill="rgb(247,70,30)" fg:x="1806" fg:w="11"/><text x="1.9401%" y="943.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (71 samples, 0.07%)</title><rect x="1.6480%" y="1141" width="0.0664%" height="15" fill="rgb(212,68,19)" fg:x="1761" fg:w="71"/><text x="1.8980%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (26 samples, 0.02%)</title><rect x="1.6901%" y="1125" width="0.0243%" height="15" fill="rgb(240,187,13)" fg:x="1806" fg:w="26"/><text x="1.9401%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="1.6901%" y="1109" width="0.0243%" height="15" fill="rgb(223,113,26)" fg:x="1806" fg:w="26"/><text x="1.9401%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.02%)</title><rect x="1.6901%" y="1093" width="0.0243%" height="15" fill="rgb(206,192,2)" fg:x="1806" fg:w="26"/><text x="1.9401%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.02%)</title><rect x="1.6901%" y="1077" width="0.0243%" height="15" fill="rgb(241,108,4)" fg:x="1806" fg:w="26"/><text x="1.9401%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.02%)</title><rect x="1.6901%" y="1061" width="0.0243%" height="15" fill="rgb(247,173,49)" fg:x="1806" fg:w="26"/><text x="1.9401%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15 samples, 0.01%)</title><rect x="1.7004%" y="1045" width="0.0140%" height="15" fill="rgb(224,114,35)" fg:x="1817" fg:w="15"/><text x="1.9504%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="1.7004%" y="1029" width="0.0140%" height="15" fill="rgb(245,159,27)" fg:x="1817" fg:w="15"/><text x="1.9504%" y="1039.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (27 samples, 0.03%)</title><rect x="1.7145%" y="1141" width="0.0253%" height="15" fill="rgb(245,172,44)" fg:x="1832" fg:w="27"/><text x="1.9645%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="1.7145%" y="1125" width="0.0253%" height="15" fill="rgb(236,23,11)" fg:x="1832" fg:w="27"/><text x="1.9645%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="1.7145%" y="1109" width="0.0253%" height="15" fill="rgb(205,117,38)" fg:x="1832" fg:w="27"/><text x="1.9645%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (27 samples, 0.03%)</title><rect x="1.7145%" y="1093" width="0.0253%" height="15" fill="rgb(237,72,25)" fg:x="1832" fg:w="27"/><text x="1.9645%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (27 samples, 0.03%)</title><rect x="1.7145%" y="1077" width="0.0253%" height="15" fill="rgb(244,70,9)" fg:x="1832" fg:w="27"/><text x="1.9645%" y="1087.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (14 samples, 0.01%)</title><rect x="1.7397%" y="1141" width="0.0131%" height="15" fill="rgb(217,125,39)" fg:x="1859" fg:w="14"/><text x="1.9897%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="1.7397%" y="1125" width="0.0131%" height="15" fill="rgb(235,36,10)" fg:x="1859" fg:w="14"/><text x="1.9897%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (14 samples, 0.01%)</title><rect x="1.7397%" y="1109" width="0.0131%" height="15" fill="rgb(251,123,47)" fg:x="1859" fg:w="14"/><text x="1.9897%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="1.8193%" y="1125" width="0.0168%" height="15" fill="rgb(221,13,13)" fg:x="1944" fg:w="18"/><text x="2.0693%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (91 samples, 0.09%)</title><rect x="1.7575%" y="1141" width="0.0852%" height="15" fill="rgb(238,131,9)" fg:x="1878" fg:w="91"/><text x="2.0075%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (13 samples, 0.01%)</title><rect x="1.8427%" y="1141" width="0.0122%" height="15" fill="rgb(211,50,8)" fg:x="1969" fg:w="13"/><text x="2.0927%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (45 samples, 0.04%)</title><rect x="1.8548%" y="1141" width="0.0421%" height="15" fill="rgb(245,182,24)" fg:x="1982" fg:w="45"/><text x="2.1048%" y="1151.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (13 samples, 0.01%)</title><rect x="1.9568%" y="1125" width="0.0122%" height="15" fill="rgb(242,14,37)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (13 samples, 0.01%)</title><rect x="1.9568%" y="1109" width="0.0122%" height="15" fill="rgb(246,228,12)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="1119.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (13 samples, 0.01%)</title><rect x="1.9568%" y="1093" width="0.0122%" height="15" fill="rgb(213,55,15)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (13 samples, 0.01%)</title><rect x="1.9568%" y="1077" width="0.0122%" height="15" fill="rgb(209,9,3)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 0.01%)</title><rect x="1.9568%" y="1061" width="0.0122%" height="15" fill="rgb(230,59,30)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="1.9568%" y="1045" width="0.0122%" height="15" fill="rgb(209,121,21)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="1.9568%" y="1029" width="0.0122%" height="15" fill="rgb(220,109,13)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="1.9568%" y="1013" width="0.0122%" height="15" fill="rgb(232,18,1)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="1.9568%" y="997" width="0.0122%" height="15" fill="rgb(215,41,42)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="1.9568%" y="981" width="0.0122%" height="15" fill="rgb(224,123,36)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="1.9568%" y="965" width="0.0122%" height="15" fill="rgb(240,125,3)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="1.9568%" y="949" width="0.0122%" height="15" fill="rgb(205,98,50)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="1.9568%" y="933" width="0.0122%" height="15" fill="rgb(205,185,37)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="943.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="1.9568%" y="917" width="0.0122%" height="15" fill="rgb(238,207,15)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="927.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="1.9568%" y="901" width="0.0122%" height="15" fill="rgb(213,199,42)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="1.9568%" y="885" width="0.0122%" height="15" fill="rgb(235,201,11)" fg:x="2091" fg:w="13"/><text x="2.2068%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (850 samples, 0.80%)</title><rect x="1.1838%" y="1157" width="0.7955%" height="15" fill="rgb(207,46,11)" fg:x="1265" fg:w="850"/><text x="1.4338%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (88 samples, 0.08%)</title><rect x="1.8969%" y="1141" width="0.0824%" height="15" fill="rgb(241,35,35)" fg:x="2027" fg:w="88"/><text x="2.1469%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (11 samples, 0.01%)</title><rect x="1.9690%" y="1125" width="0.0103%" height="15" fill="rgb(243,32,47)" fg:x="2104" fg:w="11"/><text x="2.2190%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="1.9690%" y="1109" width="0.0103%" height="15" fill="rgb(247,202,23)" fg:x="2104" fg:w="11"/><text x="2.2190%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.02%)</title><rect x="1.9793%" y="1157" width="0.0234%" height="15" fill="rgb(219,102,11)" fg:x="2115" fg:w="25"/><text x="2.2293%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (31 samples, 0.03%)</title><rect x="2.1019%" y="1141" width="0.0290%" height="15" fill="rgb(243,110,44)" fg:x="2246" fg:w="31"/><text x="2.3519%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (31 samples, 0.03%)</title><rect x="2.1019%" y="1125" width="0.0290%" height="15" fill="rgb(222,74,54)" fg:x="2246" fg:w="31"/><text x="2.3519%" y="1135.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="2.1019%" y="1109" width="0.0290%" height="15" fill="rgb(216,99,12)" fg:x="2246" fg:w="31"/><text x="2.3519%" y="1119.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (31 samples, 0.03%)</title><rect x="2.1019%" y="1093" width="0.0290%" height="15" fill="rgb(226,22,26)" fg:x="2246" fg:w="31"/><text x="2.3519%" y="1103.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (31 samples, 0.03%)</title><rect x="2.1019%" y="1077" width="0.0290%" height="15" fill="rgb(217,163,10)" fg:x="2246" fg:w="31"/><text x="2.3519%" y="1087.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (158 samples, 0.15%)</title><rect x="2.0027%" y="1157" width="0.1479%" height="15" fill="rgb(213,25,53)" fg:x="2140" fg:w="158"/><text x="2.2527%" y="1167.50"></text></g><g><title>event_listener::Inner::lock (21 samples, 0.02%)</title><rect x="2.1309%" y="1141" width="0.0197%" height="15" fill="rgb(252,105,26)" fg:x="2277" fg:w="21"/><text x="2.3809%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="2.1309%" y="1125" width="0.0197%" height="15" fill="rgb(220,39,43)" fg:x="2277" fg:w="21"/><text x="2.3809%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.02%)</title><rect x="2.1309%" y="1109" width="0.0197%" height="15" fill="rgb(229,68,48)" fg:x="2277" fg:w="21"/><text x="2.3809%" y="1119.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (21 samples, 0.02%)</title><rect x="2.1309%" y="1093" width="0.0197%" height="15" fill="rgb(252,8,32)" fg:x="2277" fg:w="21"/><text x="2.3809%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (11 samples, 0.01%)</title><rect x="2.1534%" y="1141" width="0.0103%" height="15" fill="rgb(223,20,43)" fg:x="2301" fg:w="11"/><text x="2.4034%" y="1151.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="2.1534%" y="1125" width="0.0103%" height="15" fill="rgb(229,81,49)" fg:x="2301" fg:w="11"/><text x="2.4034%" y="1135.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="2.1534%" y="1109" width="0.0103%" height="15" fill="rgb(236,28,36)" fg:x="2301" fg:w="11"/><text x="2.4034%" y="1119.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="2.1506%" y="1157" width="0.0159%" height="15" fill="rgb(249,185,26)" fg:x="2298" fg:w="17"/><text x="2.4006%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (23 samples, 0.02%)</title><rect x="2.2067%" y="1109" width="0.0215%" height="15" fill="rgb(249,174,33)" fg:x="2358" fg:w="23"/><text x="2.4567%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (68 samples, 0.06%)</title><rect x="2.1665%" y="1157" width="0.0636%" height="15" fill="rgb(233,201,37)" fg:x="2315" fg:w="68"/><text x="2.4165%" y="1167.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (52 samples, 0.05%)</title><rect x="2.1814%" y="1141" width="0.0487%" height="15" fill="rgb(221,78,26)" fg:x="2331" fg:w="52"/><text x="2.4314%" y="1151.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (48 samples, 0.04%)</title><rect x="2.1852%" y="1125" width="0.0449%" height="15" fill="rgb(250,127,30)" fg:x="2335" fg:w="48"/><text x="2.4352%" y="1135.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (46 samples, 0.04%)</title><rect x="2.2301%" y="1157" width="0.0430%" height="15" fill="rgb(230,49,44)" fg:x="2383" fg:w="46"/><text x="2.4801%" y="1167.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (31 samples, 0.03%)</title><rect x="2.2441%" y="1141" width="0.0290%" height="15" fill="rgb(229,67,23)" fg:x="2398" fg:w="31"/><text x="2.4941%" y="1151.50"></text></g><g><title>&lt;tremor_script::pdk::PdkEventPayload as core::convert::From&lt;tremor_script::srs::EventPayload&gt;&gt;::from (31 samples, 0.03%)</title><rect x="2.2441%" y="1125" width="0.0290%" height="15" fill="rgb(249,83,47)" fg:x="2398" fg:w="31"/><text x="2.4941%" y="1135.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (31 samples, 0.03%)</title><rect x="2.2441%" y="1109" width="0.0290%" height="15" fill="rgb(215,43,3)" fg:x="2398" fg:w="31"/><text x="2.4941%" y="1119.50"></text></g><g><title>&lt;tremor_script::pdk::PdkValueAndMeta as core::convert::From&lt;tremor_script::srs::ValueAndMeta&gt;&gt;::from (31 samples, 0.03%)</title><rect x="2.2441%" y="1093" width="0.0290%" height="15" fill="rgb(238,154,13)" fg:x="2398" fg:w="31"/><text x="2.4941%" y="1103.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (31 samples, 0.03%)</title><rect x="2.2441%" y="1077" width="0.0290%" height="15" fill="rgb(219,56,2)" fg:x="2398" fg:w="31"/><text x="2.4941%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (57 samples, 0.05%)</title><rect x="2.2732%" y="1157" width="0.0533%" height="15" fill="rgb(233,0,4)" fg:x="2429" fg:w="57"/><text x="2.5232%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (22 samples, 0.02%)</title><rect x="2.3265%" y="1157" width="0.0206%" height="15" fill="rgb(235,30,7)" fg:x="2486" fg:w="22"/><text x="2.5765%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (233 samples, 0.22%)</title><rect x="2.3480%" y="1157" width="0.2181%" height="15" fill="rgb(250,79,13)" fg:x="2509" fg:w="233"/><text x="2.5980%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (91 samples, 0.09%)</title><rect x="2.4809%" y="1141" width="0.0852%" height="15" fill="rgb(211,146,34)" fg:x="2651" fg:w="91"/><text x="2.7309%" y="1151.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (69 samples, 0.06%)</title><rect x="2.5015%" y="1125" width="0.0646%" height="15" fill="rgb(228,22,38)" fg:x="2673" fg:w="69"/><text x="2.7515%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.02%)</title><rect x="2.5455%" y="1109" width="0.0206%" height="15" fill="rgb(235,168,5)" fg:x="2720" fg:w="22"/><text x="2.7955%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.01%)</title><rect x="2.5539%" y="1093" width="0.0122%" height="15" fill="rgb(221,155,16)" fg:x="2729" fg:w="13"/><text x="2.8039%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="2.5539%" y="1077" width="0.0122%" height="15" fill="rgb(215,215,53)" fg:x="2729" fg:w="13"/><text x="2.8039%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="2.5548%" y="1061" width="0.0112%" height="15" fill="rgb(223,4,10)" fg:x="2730" fg:w="12"/><text x="2.8048%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="2.5548%" y="1045" width="0.0112%" height="15" fill="rgb(234,103,6)" fg:x="2730" fg:w="12"/><text x="2.8048%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="2.5548%" y="1029" width="0.0112%" height="15" fill="rgb(227,97,0)" fg:x="2730" fg:w="12"/><text x="2.8048%" y="1039.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="2.5548%" y="1013" width="0.0112%" height="15" fill="rgb(234,150,53)" fg:x="2730" fg:w="12"/><text x="2.8048%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="2.5548%" y="997" width="0.0112%" height="15" fill="rgb(228,201,54)" fg:x="2730" fg:w="12"/><text x="2.8048%" y="1007.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="2.5773%" y="1141" width="0.0140%" height="15" fill="rgb(222,22,37)" fg:x="2754" fg:w="15"/><text x="2.8273%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="2.5773%" y="1125" width="0.0140%" height="15" fill="rgb(237,53,32)" fg:x="2754" fg:w="15"/><text x="2.8273%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="2.5773%" y="1109" width="0.0140%" height="15" fill="rgb(233,25,53)" fg:x="2754" fg:w="15"/><text x="2.8273%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="2.5773%" y="1093" width="0.0140%" height="15" fill="rgb(210,40,34)" fg:x="2754" fg:w="15"/><text x="2.8273%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="2.5773%" y="1077" width="0.0140%" height="15" fill="rgb(241,220,44)" fg:x="2754" fg:w="15"/><text x="2.8273%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="2.5773%" y="1061" width="0.0140%" height="15" fill="rgb(235,28,35)" fg:x="2754" fg:w="15"/><text x="2.8273%" y="1071.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="2.5773%" y="1045" width="0.0140%" height="15" fill="rgb(210,56,17)" fg:x="2754" fg:w="15"/><text x="2.8273%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="2.5773%" y="1029" width="0.0140%" height="15" fill="rgb(224,130,29)" fg:x="2754" fg:w="15"/><text x="2.8273%" y="1039.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (46 samples, 0.04%)</title><rect x="2.5661%" y="1157" width="0.0430%" height="15" fill="rgb(235,212,8)" fg:x="2742" fg:w="46"/><text x="2.8161%" y="1167.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (91 samples, 0.09%)</title><rect x="2.6091%" y="1157" width="0.0852%" height="15" fill="rgb(223,33,50)" fg:x="2788" fg:w="91"/><text x="2.8591%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="2.6765%" y="1141" width="0.0178%" height="15" fill="rgb(219,149,13)" fg:x="2860" fg:w="19"/><text x="2.9265%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (12 samples, 0.01%)</title><rect x="2.6831%" y="1125" width="0.0112%" height="15" fill="rgb(250,156,29)" fg:x="2867" fg:w="12"/><text x="2.9331%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (12 samples, 0.01%)</title><rect x="2.6831%" y="1109" width="0.0112%" height="15" fill="rgb(216,193,19)" fg:x="2867" fg:w="12"/><text x="2.9331%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="2.6831%" y="1093" width="0.0112%" height="15" fill="rgb(216,135,14)" fg:x="2867" fg:w="12"/><text x="2.9331%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="2.6831%" y="1077" width="0.0112%" height="15" fill="rgb(241,47,5)" fg:x="2867" fg:w="12"/><text x="2.9331%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="2.6831%" y="1061" width="0.0112%" height="15" fill="rgb(233,42,35)" fg:x="2867" fg:w="12"/><text x="2.9331%" y="1071.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="2.6831%" y="1045" width="0.0112%" height="15" fill="rgb(231,13,6)" fg:x="2867" fg:w="12"/><text x="2.9331%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="2.6831%" y="1029" width="0.0112%" height="15" fill="rgb(207,181,40)" fg:x="2867" fg:w="12"/><text x="2.9331%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_lock (46 samples, 0.04%)</title><rect x="2.6952%" y="1157" width="0.0430%" height="15" fill="rgb(254,173,49)" fg:x="2880" fg:w="46"/><text x="2.9452%" y="1167.50"></text></g><g><title>__GI___pthread_mutex_trylock (21 samples, 0.02%)</title><rect x="2.7383%" y="1157" width="0.0197%" height="15" fill="rgb(221,1,38)" fg:x="2926" fg:w="21"/><text x="2.9883%" y="1167.50"></text></g><g><title>__GI___pthread_rwlock_unlock (12 samples, 0.01%)</title><rect x="2.7617%" y="1157" width="0.0112%" height="15" fill="rgb(206,124,46)" fg:x="2951" fg:w="12"/><text x="3.0117%" y="1167.50"></text></g><g><title>__clock_gettime_2 (90 samples, 0.08%)</title><rect x="2.7729%" y="1157" width="0.0842%" height="15" fill="rgb(249,21,11)" fg:x="2963" fg:w="90"/><text x="3.0229%" y="1167.50"></text></g><g><title>__memmove_avx_unaligned_erms (91 samples, 0.09%)</title><rect x="2.8674%" y="1157" width="0.0852%" height="15" fill="rgb(222,201,40)" fg:x="3064" fg:w="91"/><text x="3.1174%" y="1167.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (24 samples, 0.02%)</title><rect x="2.9704%" y="1157" width="0.0225%" height="15" fill="rgb(235,61,29)" fg:x="3174" fg:w="24"/><text x="3.2204%" y="1167.50"></text></g><g><title>abi_stable::erased_types::iterator::next (24 samples, 0.02%)</title><rect x="2.9928%" y="1157" width="0.0225%" height="15" fill="rgb(219,207,3)" fg:x="3198" fg:w="24"/><text x="3.2428%" y="1167.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (21 samples, 0.02%)</title><rect x="3.0181%" y="1157" width="0.0197%" height="15" fill="rgb(222,56,46)" fg:x="3225" fg:w="21"/><text x="3.2681%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="3.0256%" y="1141" width="0.0122%" height="15" fill="rgb(239,76,54)" fg:x="3233" fg:w="13"/><text x="3.2756%" y="1151.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="3.0256%" y="1125" width="0.0122%" height="15" fill="rgb(231,124,27)" fg:x="3233" fg:w="13"/><text x="3.2756%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="3.0256%" y="1109" width="0.0122%" height="15" fill="rgb(249,195,6)" fg:x="3233" fg:w="13"/><text x="3.2756%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="3.0256%" y="1093" width="0.0122%" height="15" fill="rgb(237,174,47)" fg:x="3233" fg:w="13"/><text x="3.2756%" y="1103.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="3.0256%" y="1077" width="0.0122%" height="15" fill="rgb(206,201,31)" fg:x="3233" fg:w="13"/><text x="3.2756%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="3.0256%" y="1061" width="0.0122%" height="15" fill="rgb(231,57,52)" fg:x="3233" fg:w="13"/><text x="3.2756%" y="1071.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (41 samples, 0.04%)</title><rect x="3.0377%" y="1157" width="0.0384%" height="15" fill="rgb(248,177,22)" fg:x="3246" fg:w="41"/><text x="3.2877%" y="1167.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (11 samples, 0.01%)</title><rect x="3.1248%" y="1093" width="0.0103%" height="15" fill="rgb(215,211,37)" fg:x="3339" fg:w="11"/><text x="3.3748%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="3.1248%" y="1077" width="0.0103%" height="15" fill="rgb(241,128,51)" fg:x="3339" fg:w="11"/><text x="3.3748%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="3.1248%" y="1061" width="0.0103%" height="15" fill="rgb(227,165,31)" fg:x="3339" fg:w="11"/><text x="3.3748%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="3.1248%" y="1045" width="0.0103%" height="15" fill="rgb(228,167,24)" fg:x="3339" fg:w="11"/><text x="3.3748%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="3.1248%" y="1029" width="0.0103%" height="15" fill="rgb(228,143,12)" fg:x="3339" fg:w="11"/><text x="3.3748%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="3.1248%" y="1013" width="0.0103%" height="15" fill="rgb(249,149,8)" fg:x="3339" fg:w="11"/><text x="3.3748%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="3.1248%" y="997" width="0.0103%" height="15" fill="rgb(243,35,44)" fg:x="3339" fg:w="11"/><text x="3.3748%" y="1007.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="3.1248%" y="981" width="0.0103%" height="15" fill="rgb(246,89,9)" fg:x="3339" fg:w="11"/><text x="3.3748%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="3.1248%" y="965" width="0.0103%" height="15" fill="rgb(233,213,13)" fg:x="3339" fg:w="11"/><text x="3.3748%" y="975.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (78 samples, 0.07%)</title><rect x="3.0761%" y="1157" width="0.0730%" height="15" fill="rgb(233,141,41)" fg:x="3287" fg:w="78"/><text x="3.3261%" y="1167.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (35 samples, 0.03%)</title><rect x="3.1163%" y="1141" width="0.0328%" height="15" fill="rgb(239,167,4)" fg:x="3330" fg:w="35"/><text x="3.3663%" y="1151.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (35 samples, 0.03%)</title><rect x="3.1163%" y="1125" width="0.0328%" height="15" fill="rgb(209,217,16)" fg:x="3330" fg:w="35"/><text x="3.3663%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (35 samples, 0.03%)</title><rect x="3.1163%" y="1109" width="0.0328%" height="15" fill="rgb(219,88,35)" fg:x="3330" fg:w="35"/><text x="3.3663%" y="1119.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (15 samples, 0.01%)</title><rect x="3.1351%" y="1093" width="0.0140%" height="15" fill="rgb(220,193,23)" fg:x="3350" fg:w="15"/><text x="3.3851%" y="1103.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.01%)</title><rect x="3.1351%" y="1077" width="0.0140%" height="15" fill="rgb(230,90,52)" fg:x="3350" fg:w="15"/><text x="3.3851%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (15 samples, 0.01%)</title><rect x="3.1351%" y="1061" width="0.0140%" height="15" fill="rgb(252,106,19)" fg:x="3350" fg:w="15"/><text x="3.3851%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (15 samples, 0.01%)</title><rect x="3.1351%" y="1045" width="0.0140%" height="15" fill="rgb(206,74,20)" fg:x="3350" fg:w="15"/><text x="3.3851%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (131 samples, 0.12%)</title><rect x="3.1491%" y="1157" width="0.1226%" height="15" fill="rgb(230,138,44)" fg:x="3365" fg:w="131"/><text x="3.3991%" y="1167.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (111 samples, 0.10%)</title><rect x="3.1678%" y="1141" width="0.1039%" height="15" fill="rgb(235,182,43)" fg:x="3385" fg:w="111"/><text x="3.4178%" y="1151.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (111 samples, 0.10%)</title><rect x="3.1678%" y="1125" width="0.1039%" height="15" fill="rgb(242,16,51)" fg:x="3385" fg:w="111"/><text x="3.4178%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="3.3278%" y="949" width="0.0131%" height="15" fill="rgb(248,9,4)" fg:x="3556" fg:w="14"/><text x="3.5778%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="3.3278%" y="933" width="0.0131%" height="15" fill="rgb(210,31,22)" fg:x="3556" fg:w="14"/><text x="3.5778%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="3.3278%" y="917" width="0.0131%" height="15" fill="rgb(239,54,39)" fg:x="3556" fg:w="14"/><text x="3.5778%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="3.3278%" y="901" width="0.0131%" height="15" fill="rgb(230,99,41)" fg:x="3556" fg:w="14"/><text x="3.5778%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="3.3278%" y="885" width="0.0131%" height="15" fill="rgb(253,106,12)" fg:x="3556" fg:w="14"/><text x="3.5778%" y="895.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="3.3278%" y="869" width="0.0131%" height="15" fill="rgb(213,46,41)" fg:x="3556" fg:w="14"/><text x="3.5778%" y="879.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="3.3278%" y="853" width="0.0131%" height="15" fill="rgb(215,133,35)" fg:x="3556" fg:w="14"/><text x="3.5778%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="3.3278%" y="837" width="0.0131%" height="15" fill="rgb(213,28,5)" fg:x="3556" fg:w="14"/><text x="3.5778%" y="847.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="3.3278%" y="1061" width="0.0225%" height="15" fill="rgb(215,77,49)" fg:x="3556" fg:w="24"/><text x="3.5778%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (24 samples, 0.02%)</title><rect x="3.3278%" y="1045" width="0.0225%" height="15" fill="rgb(248,100,22)" fg:x="3556" fg:w="24"/><text x="3.5778%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (24 samples, 0.02%)</title><rect x="3.3278%" y="1029" width="0.0225%" height="15" fill="rgb(208,67,9)" fg:x="3556" fg:w="24"/><text x="3.5778%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 0.02%)</title><rect x="3.3278%" y="1013" width="0.0225%" height="15" fill="rgb(219,133,21)" fg:x="3556" fg:w="24"/><text x="3.5778%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.02%)</title><rect x="3.3278%" y="997" width="0.0225%" height="15" fill="rgb(246,46,29)" fg:x="3556" fg:w="24"/><text x="3.5778%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.02%)</title><rect x="3.3278%" y="981" width="0.0225%" height="15" fill="rgb(246,185,52)" fg:x="3556" fg:w="24"/><text x="3.5778%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.02%)</title><rect x="3.3278%" y="965" width="0.0225%" height="15" fill="rgb(252,136,11)" fg:x="3556" fg:w="24"/><text x="3.5778%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (90 samples, 0.08%)</title><rect x="3.2717%" y="1157" width="0.0842%" height="15" fill="rgb(219,138,53)" fg:x="3496" fg:w="90"/><text x="3.5217%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (30 samples, 0.03%)</title><rect x="3.3278%" y="1141" width="0.0281%" height="15" fill="rgb(211,51,23)" fg:x="3556" fg:w="30"/><text x="3.5778%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (30 samples, 0.03%)</title><rect x="3.3278%" y="1125" width="0.0281%" height="15" fill="rgb(247,221,28)" fg:x="3556" fg:w="30"/><text x="3.5778%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30 samples, 0.03%)</title><rect x="3.3278%" y="1109" width="0.0281%" height="15" fill="rgb(251,222,45)" fg:x="3556" fg:w="30"/><text x="3.5778%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.03%)</title><rect x="3.3278%" y="1093" width="0.0281%" height="15" fill="rgb(217,162,53)" fg:x="3556" fg:w="30"/><text x="3.5778%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 0.03%)</title><rect x="3.3278%" y="1077" width="0.0281%" height="15" fill="rgb(229,93,14)" fg:x="3556" fg:w="30"/><text x="3.5778%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.06%)</title><rect x="3.4224%" y="1093" width="0.0627%" height="15" fill="rgb(209,67,49)" fg:x="3657" fg:w="67"/><text x="3.6724%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (67 samples, 0.06%)</title><rect x="3.4224%" y="1077" width="0.0627%" height="15" fill="rgb(213,87,29)" fg:x="3657" fg:w="67"/><text x="3.6724%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (67 samples, 0.06%)</title><rect x="3.4224%" y="1061" width="0.0627%" height="15" fill="rgb(205,151,52)" fg:x="3657" fg:w="67"/><text x="3.6724%" y="1071.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (67 samples, 0.06%)</title><rect x="3.4224%" y="1045" width="0.0627%" height="15" fill="rgb(253,215,39)" fg:x="3657" fg:w="67"/><text x="3.6724%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (75 samples, 0.07%)</title><rect x="3.4224%" y="1109" width="0.0702%" height="15" fill="rgb(221,220,41)" fg:x="3657" fg:w="75"/><text x="3.6724%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="3.4926%" y="1093" width="0.0515%" height="15" fill="rgb(218,133,21)" fg:x="3732" fg:w="55"/><text x="3.7426%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (55 samples, 0.05%)</title><rect x="3.4926%" y="1077" width="0.0515%" height="15" fill="rgb(221,193,43)" fg:x="3732" fg:w="55"/><text x="3.7426%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (55 samples, 0.05%)</title><rect x="3.4926%" y="1061" width="0.0515%" height="15" fill="rgb(240,128,52)" fg:x="3732" fg:w="55"/><text x="3.7426%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (55 samples, 0.05%)</title><rect x="3.4926%" y="1045" width="0.0515%" height="15" fill="rgb(253,114,12)" fg:x="3732" fg:w="55"/><text x="3.7426%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (55 samples, 0.05%)</title><rect x="3.4926%" y="1029" width="0.0515%" height="15" fill="rgb(215,223,47)" fg:x="3732" fg:w="55"/><text x="3.7426%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (61 samples, 0.06%)</title><rect x="3.4926%" y="1109" width="0.0571%" height="15" fill="rgb(248,225,23)" fg:x="3732" fg:w="61"/><text x="3.7426%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (221 samples, 0.21%)</title><rect x="3.3559%" y="1157" width="0.2068%" height="15" fill="rgb(250,108,0)" fg:x="3586" fg:w="221"/><text x="3.6059%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (150 samples, 0.14%)</title><rect x="3.4224%" y="1141" width="0.1404%" height="15" fill="rgb(228,208,7)" fg:x="3657" fg:w="150"/><text x="3.6724%" y="1151.50"></text></g><g><title>core::mem::drop (150 samples, 0.14%)</title><rect x="3.4224%" y="1125" width="0.1404%" height="15" fill="rgb(244,45,10)" fg:x="3657" fg:w="150"/><text x="3.6724%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="3.5496%" y="1109" width="0.0131%" height="15" fill="rgb(207,125,25)" fg:x="3793" fg:w="14"/><text x="3.7996%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="3.5496%" y="1093" width="0.0131%" height="15" fill="rgb(210,195,18)" fg:x="3793" fg:w="14"/><text x="3.7996%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (14 samples, 0.01%)</title><rect x="3.5496%" y="1077" width="0.0131%" height="15" fill="rgb(249,80,12)" fg:x="3793" fg:w="14"/><text x="3.7996%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="3.5496%" y="1061" width="0.0131%" height="15" fill="rgb(221,65,9)" fg:x="3793" fg:w="14"/><text x="3.7996%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="3.5496%" y="1045" width="0.0131%" height="15" fill="rgb(235,49,36)" fg:x="3793" fg:w="14"/><text x="3.7996%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (35 samples, 0.03%)</title><rect x="3.5627%" y="1157" width="0.0328%" height="15" fill="rgb(225,32,20)" fg:x="3807" fg:w="35"/><text x="3.8127%" y="1167.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (20 samples, 0.02%)</title><rect x="3.6002%" y="1157" width="0.0187%" height="15" fill="rgb(215,141,46)" fg:x="3847" fg:w="20"/><text x="3.8502%" y="1167.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (17 samples, 0.02%)</title><rect x="3.6189%" y="1157" width="0.0159%" height="15" fill="rgb(250,160,47)" fg:x="3867" fg:w="17"/><text x="3.8689%" y="1167.50"></text></g><g><title>async_executor::Ticker::sleep (29 samples, 0.03%)</title><rect x="3.6413%" y="1157" width="0.0271%" height="15" fill="rgb(216,222,40)" fg:x="3891" fg:w="29"/><text x="3.8913%" y="1167.50"></text></g><g><title>async_executor::steal (73 samples, 0.07%)</title><rect x="3.6750%" y="1157" width="0.0683%" height="15" fill="rgb(234,217,39)" fg:x="3927" fg:w="73"/><text x="3.9250%" y="1167.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (11 samples, 0.01%)</title><rect x="3.7434%" y="1157" width="0.0103%" height="15" fill="rgb(207,178,40)" fg:x="4000" fg:w="11"/><text x="3.9934%" y="1167.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (27 samples, 0.03%)</title><rect x="3.7536%" y="1157" width="0.0253%" height="15" fill="rgb(221,136,13)" fg:x="4011" fg:w="27"/><text x="4.0036%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (21 samples, 0.02%)</title><rect x="3.7864%" y="1157" width="0.0197%" height="15" fill="rgb(249,199,10)" fg:x="4046" fg:w="21"/><text x="4.0364%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (75 samples, 0.07%)</title><rect x="3.8070%" y="1157" width="0.0702%" height="15" fill="rgb(249,222,13)" fg:x="4068" fg:w="75"/><text x="4.0570%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (88 samples, 0.08%)</title><rect x="3.8772%" y="1157" width="0.0824%" height="15" fill="rgb(244,185,38)" fg:x="4143" fg:w="88"/><text x="4.1272%" y="1167.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (11 samples, 0.01%)</title><rect x="3.9595%" y="1157" width="0.0103%" height="15" fill="rgb(236,202,9)" fg:x="4231" fg:w="11"/><text x="4.2095%" y="1167.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (23 samples, 0.02%)</title><rect x="3.9698%" y="1157" width="0.0215%" height="15" fill="rgb(250,229,37)" fg:x="4242" fg:w="23"/><text x="4.2198%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (62 samples, 0.06%)</title><rect x="3.9914%" y="1157" width="0.0580%" height="15" fill="rgb(206,174,23)" fg:x="4265" fg:w="62"/><text x="4.2414%" y="1167.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="4.0119%" y="1141" width="0.0374%" height="15" fill="rgb(211,33,43)" fg:x="4287" fg:w="40"/><text x="4.2619%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (50 samples, 0.05%)</title><rect x="4.0494%" y="1157" width="0.0468%" height="15" fill="rgb(245,58,50)" fg:x="4327" fg:w="50"/><text x="4.2994%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (49 samples, 0.05%)</title><rect x="4.0503%" y="1141" width="0.0459%" height="15" fill="rgb(244,68,36)" fg:x="4328" fg:w="49"/><text x="4.3003%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (63 samples, 0.06%)</title><rect x="4.0962%" y="1157" width="0.0590%" height="15" fill="rgb(232,229,15)" fg:x="4377" fg:w="63"/><text x="4.3462%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (66 samples, 0.06%)</title><rect x="4.1551%" y="1157" width="0.0618%" height="15" fill="rgb(254,30,23)" fg:x="4440" fg:w="66"/><text x="4.4051%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (29 samples, 0.03%)</title><rect x="4.2169%" y="1157" width="0.0271%" height="15" fill="rgb(235,160,14)" fg:x="4506" fg:w="29"/><text x="4.4669%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (62 samples, 0.06%)</title><rect x="4.2440%" y="1157" width="0.0580%" height="15" fill="rgb(212,155,44)" fg:x="4535" fg:w="62"/><text x="4.4940%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (62 samples, 0.06%)</title><rect x="4.2440%" y="1141" width="0.0580%" height="15" fill="rgb(226,2,50)" fg:x="4535" fg:w="62"/><text x="4.4940%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (31 samples, 0.03%)</title><rect x="4.3021%" y="1157" width="0.0290%" height="15" fill="rgb(234,177,6)" fg:x="4597" fg:w="31"/><text x="4.5521%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (173 samples, 0.16%)</title><rect x="4.3376%" y="1157" width="0.1619%" height="15" fill="rgb(217,24,9)" fg:x="4635" fg:w="173"/><text x="4.5876%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (19 samples, 0.02%)</title><rect x="4.5033%" y="1109" width="0.0178%" height="15" fill="rgb(220,13,46)" fg:x="4812" fg:w="19"/><text x="4.7533%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="4.5033%" y="1093" width="0.0178%" height="15" fill="rgb(239,221,27)" fg:x="4812" fg:w="19"/><text x="4.7533%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (19 samples, 0.02%)</title><rect x="4.5033%" y="1077" width="0.0178%" height="15" fill="rgb(222,198,25)" fg:x="4812" fg:w="19"/><text x="4.7533%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (29 samples, 0.03%)</title><rect x="4.5033%" y="1141" width="0.0271%" height="15" fill="rgb(211,99,13)" fg:x="4812" fg:w="29"/><text x="4.7533%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (29 samples, 0.03%)</title><rect x="4.5033%" y="1125" width="0.0271%" height="15" fill="rgb(232,111,31)" fg:x="4812" fg:w="29"/><text x="4.7533%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (16 samples, 0.01%)</title><rect x="4.5304%" y="1141" width="0.0150%" height="15" fill="rgb(245,82,37)" fg:x="4841" fg:w="16"/><text x="4.7804%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (16 samples, 0.01%)</title><rect x="4.5304%" y="1125" width="0.0150%" height="15" fill="rgb(227,149,46)" fg:x="4841" fg:w="16"/><text x="4.7804%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (16 samples, 0.01%)</title><rect x="4.5304%" y="1109" width="0.0150%" height="15" fill="rgb(218,36,50)" fg:x="4841" fg:w="16"/><text x="4.7804%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="4.5454%" y="1125" width="0.0197%" height="15" fill="rgb(226,80,48)" fg:x="4857" fg:w="21"/><text x="4.7954%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (21 samples, 0.02%)</title><rect x="4.5454%" y="1109" width="0.0197%" height="15" fill="rgb(238,224,15)" fg:x="4857" fg:w="21"/><text x="4.7954%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (94 samples, 0.09%)</title><rect x="4.4995%" y="1157" width="0.0880%" height="15" fill="rgb(241,136,10)" fg:x="4808" fg:w="94"/><text x="4.7495%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (45 samples, 0.04%)</title><rect x="4.5454%" y="1141" width="0.0421%" height="15" fill="rgb(208,32,45)" fg:x="4857" fg:w="45"/><text x="4.7954%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (24 samples, 0.02%)</title><rect x="4.5650%" y="1125" width="0.0225%" height="15" fill="rgb(207,135,9)" fg:x="4878" fg:w="24"/><text x="4.8150%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (171 samples, 0.16%)</title><rect x="4.5875%" y="1157" width="0.1600%" height="15" fill="rgb(206,86,44)" fg:x="4902" fg:w="171"/><text x="4.8375%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="4.7251%" y="1141" width="0.0225%" height="15" fill="rgb(245,177,15)" fg:x="5049" fg:w="24"/><text x="4.9751%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (24 samples, 0.02%)</title><rect x="4.7251%" y="1125" width="0.0225%" height="15" fill="rgb(206,64,50)" fg:x="5049" fg:w="24"/><text x="4.9751%" y="1135.50"></text></g><g><title>event_listener::Event::inner (14 samples, 0.01%)</title><rect x="4.7569%" y="1141" width="0.0131%" height="15" fill="rgb(234,36,40)" fg:x="5083" fg:w="14"/><text x="5.0069%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (14 samples, 0.01%)</title><rect x="4.7569%" y="1125" width="0.0131%" height="15" fill="rgb(213,64,8)" fg:x="5083" fg:w="14"/><text x="5.0069%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="4.7569%" y="1109" width="0.0131%" height="15" fill="rgb(210,75,36)" fg:x="5083" fg:w="14"/><text x="5.0069%" y="1119.50"></text></g><g><title>event_listener::Event::listen (26 samples, 0.02%)</title><rect x="4.7475%" y="1157" width="0.0243%" height="15" fill="rgb(229,88,21)" fg:x="5073" fg:w="26"/><text x="4.9975%" y="1167.50"></text></g><g><title>event_listener::Event::notify (189 samples, 0.18%)</title><rect x="4.7718%" y="1157" width="0.1769%" height="15" fill="rgb(252,204,47)" fg:x="5099" fg:w="189"/><text x="5.0218%" y="1167.50"></text></g><g><title>event_listener::full_fence (62 samples, 0.06%)</title><rect x="4.8907%" y="1141" width="0.0580%" height="15" fill="rgb(208,77,27)" fg:x="5226" fg:w="62"/><text x="5.1407%" y="1151.50"></text></g><g><title>event_listener::List::notify (30 samples, 0.03%)</title><rect x="4.9487%" y="1157" width="0.0281%" height="15" fill="rgb(221,76,26)" fg:x="5288" fg:w="30"/><text x="5.1987%" y="1167.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (56 samples, 0.05%)</title><rect x="4.9768%" y="1157" width="0.0524%" height="15" fill="rgb(225,139,18)" fg:x="5318" fg:w="56"/><text x="5.2268%" y="1167.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (11 samples, 0.01%)</title><rect x="5.0292%" y="1157" width="0.0103%" height="15" fill="rgb(230,137,11)" fg:x="5374" fg:w="11"/><text x="5.2792%" y="1167.50"></text></g><g><title>parking::Inner::park (38 samples, 0.04%)</title><rect x="5.0395%" y="1157" width="0.0356%" height="15" fill="rgb(212,28,1)" fg:x="5385" fg:w="38"/><text x="5.2895%" y="1167.50"></text></g><g><title>rust_alloc (102 samples, 0.10%)</title><rect x="5.0928%" y="1157" width="0.0955%" height="15" fill="rgb(248,164,17)" fg:x="5442" fg:w="102"/><text x="5.3428%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (30 samples, 0.03%)</title><rect x="5.2154%" y="1157" width="0.0281%" height="15" fill="rgb(222,171,42)" fg:x="5573" fg:w="30"/><text x="5.4654%" y="1167.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (139 samples, 0.13%)</title><rect x="5.2444%" y="1157" width="0.1301%" height="15" fill="rgb(243,84,45)" fg:x="5604" fg:w="139"/><text x="5.4944%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.03%)</title><rect x="5.3745%" y="1157" width="0.0328%" height="15" fill="rgb(252,49,23)" fg:x="5743" fg:w="35"/><text x="5.6245%" y="1167.50"></text></g><g><title>tremor_common::time::nanotime (57 samples, 0.05%)</title><rect x="5.4073%" y="1157" width="0.0533%" height="15" fill="rgb(215,19,7)" fg:x="5778" fg:w="57"/><text x="5.6573%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (57 samples, 0.05%)</title><rect x="5.4073%" y="1141" width="0.0533%" height="15" fill="rgb(238,81,41)" fg:x="5778" fg:w="57"/><text x="5.6573%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (57 samples, 0.05%)</title><rect x="5.4073%" y="1125" width="0.0533%" height="15" fill="rgb(210,199,37)" fg:x="5778" fg:w="57"/><text x="5.6573%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (57 samples, 0.05%)</title><rect x="5.4073%" y="1109" width="0.0533%" height="15" fill="rgb(244,192,49)" fg:x="5778" fg:w="57"/><text x="5.6573%" y="1119.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (26 samples, 0.02%)</title><rect x="5.4606%" y="1157" width="0.0243%" height="15" fill="rgb(226,211,11)" fg:x="5835" fg:w="26"/><text x="5.7106%" y="1167.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="5.4737%" y="1141" width="0.0112%" height="15" fill="rgb(236,162,54)" fg:x="5849" fg:w="12"/><text x="5.7237%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (48 samples, 0.04%)</title><rect x="5.4906%" y="1157" width="0.0449%" height="15" fill="rgb(220,229,9)" fg:x="5867" fg:w="48"/><text x="5.7406%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (19 samples, 0.02%)</title><rect x="5.5177%" y="1141" width="0.0178%" height="15" fill="rgb(250,87,22)" fg:x="5896" fg:w="19"/><text x="5.7677%" y="1151.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (19 samples, 0.02%)</title><rect x="5.5177%" y="1125" width="0.0178%" height="15" fill="rgb(239,43,17)" fg:x="5896" fg:w="19"/><text x="5.7677%" y="1135.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="5.5177%" y="1109" width="0.0178%" height="15" fill="rgb(231,177,25)" fg:x="5896" fg:w="19"/><text x="5.7677%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="5.5177%" y="1093" width="0.0178%" height="15" fill="rgb(219,179,1)" fg:x="5896" fg:w="19"/><text x="5.7677%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="5.5177%" y="1077" width="0.0178%" height="15" fill="rgb(238,219,53)" fg:x="5896" fg:w="19"/><text x="5.7677%" y="1087.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.01%)</title><rect x="5.6188%" y="1109" width="0.0150%" height="15" fill="rgb(232,167,36)" fg:x="6004" fg:w="16"/><text x="5.8688%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="5.6422%" y="1109" width="0.0103%" height="15" fill="rgb(244,19,51)" fg:x="6029" fg:w="11"/><text x="5.8922%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="5.6422%" y="1093" width="0.0103%" height="15" fill="rgb(224,6,22)" fg:x="6029" fg:w="11"/><text x="5.8922%" y="1103.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="5.6422%" y="1077" width="0.0103%" height="15" fill="rgb(224,145,5)" fg:x="6029" fg:w="11"/><text x="5.8922%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.04%)</title><rect x="5.6150%" y="1141" width="0.0430%" height="15" fill="rgb(234,130,49)" fg:x="6000" fg:w="46"/><text x="5.8650%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (46 samples, 0.04%)</title><rect x="5.6150%" y="1125" width="0.0430%" height="15" fill="rgb(254,6,2)" fg:x="6000" fg:w="46"/><text x="5.8650%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (161 samples, 0.15%)</title><rect x="5.5355%" y="1157" width="0.1507%" height="15" fill="rgb(208,96,46)" fg:x="5915" fg:w="161"/><text x="5.7855%" y="1167.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (21 samples, 0.02%)</title><rect x="5.6665%" y="1141" width="0.0197%" height="15" fill="rgb(239,3,39)" fg:x="6055" fg:w="21"/><text x="5.9165%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (11 samples, 0.01%)</title><rect x="5.6759%" y="1125" width="0.0103%" height="15" fill="rgb(233,210,1)" fg:x="6065" fg:w="11"/><text x="5.9259%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (11 samples, 0.01%)</title><rect x="5.6759%" y="1109" width="0.0103%" height="15" fill="rgb(244,137,37)" fg:x="6065" fg:w="11"/><text x="5.9259%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="5.6759%" y="1093" width="0.0103%" height="15" fill="rgb(240,136,2)" fg:x="6065" fg:w="11"/><text x="5.9259%" y="1103.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="5.6759%" y="1077" width="0.0103%" height="15" fill="rgb(239,18,37)" fg:x="6065" fg:w="11"/><text x="5.9259%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (11 samples, 0.01%)</title><rect x="5.6759%" y="1061" width="0.0103%" height="15" fill="rgb(218,185,22)" fg:x="6065" fg:w="11"/><text x="5.9259%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (14 samples, 0.01%)</title><rect x="5.6862%" y="1157" width="0.0131%" height="15" fill="rgb(225,218,4)" fg:x="6076" fg:w="14"/><text x="5.9362%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (28 samples, 0.03%)</title><rect x="5.7002%" y="1157" width="0.0262%" height="15" fill="rgb(230,182,32)" fg:x="6091" fg:w="28"/><text x="5.9502%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="5.7854%" y="1013" width="0.0197%" height="15" fill="rgb(242,56,43)" fg:x="6182" fg:w="21"/><text x="6.0354%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="5.7854%" y="997" width="0.0197%" height="15" fill="rgb(233,99,24)" fg:x="6182" fg:w="21"/><text x="6.0354%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.02%)</title><rect x="5.7854%" y="981" width="0.0197%" height="15" fill="rgb(234,209,42)" fg:x="6182" fg:w="21"/><text x="6.0354%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="5.7854%" y="965" width="0.0197%" height="15" fill="rgb(227,7,12)" fg:x="6182" fg:w="21"/><text x="6.0354%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="5.7854%" y="949" width="0.0197%" height="15" fill="rgb(245,203,43)" fg:x="6182" fg:w="21"/><text x="6.0354%" y="959.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="5.7854%" y="933" width="0.0197%" height="15" fill="rgb(238,205,33)" fg:x="6182" fg:w="21"/><text x="6.0354%" y="943.50"></text></g><g><title>__rg_alloc (21 samples, 0.02%)</title><rect x="5.7854%" y="917" width="0.0197%" height="15" fill="rgb(231,56,7)" fg:x="6182" fg:w="21"/><text x="6.0354%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (21 samples, 0.02%)</title><rect x="5.7854%" y="901" width="0.0197%" height="15" fill="rgb(244,186,29)" fg:x="6182" fg:w="21"/><text x="6.0354%" y="911.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="5.7854%" y="1141" width="0.0309%" height="15" fill="rgb(234,111,31)" fg:x="6182" fg:w="33"/><text x="6.0354%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="5.7854%" y="1125" width="0.0309%" height="15" fill="rgb(241,149,10)" fg:x="6182" fg:w="33"/><text x="6.0354%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (33 samples, 0.03%)</title><rect x="5.7854%" y="1109" width="0.0309%" height="15" fill="rgb(249,206,44)" fg:x="6182" fg:w="33"/><text x="6.0354%" y="1119.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (33 samples, 0.03%)</title><rect x="5.7854%" y="1093" width="0.0309%" height="15" fill="rgb(251,153,30)" fg:x="6182" fg:w="33"/><text x="6.0354%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (33 samples, 0.03%)</title><rect x="5.7854%" y="1077" width="0.0309%" height="15" fill="rgb(239,152,38)" fg:x="6182" fg:w="33"/><text x="6.0354%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33 samples, 0.03%)</title><rect x="5.7854%" y="1061" width="0.0309%" height="15" fill="rgb(249,139,47)" fg:x="6182" fg:w="33"/><text x="6.0354%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 0.03%)</title><rect x="5.7854%" y="1045" width="0.0309%" height="15" fill="rgb(244,64,35)" fg:x="6182" fg:w="33"/><text x="6.0354%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 0.03%)</title><rect x="5.7854%" y="1029" width="0.0309%" height="15" fill="rgb(216,46,15)" fg:x="6182" fg:w="33"/><text x="6.0354%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (12 samples, 0.01%)</title><rect x="5.8050%" y="1013" width="0.0112%" height="15" fill="rgb(250,74,19)" fg:x="6203" fg:w="12"/><text x="6.0550%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="5.8050%" y="997" width="0.0112%" height="15" fill="rgb(249,42,33)" fg:x="6203" fg:w="12"/><text x="6.0550%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (21 samples, 0.02%)</title><rect x="5.8237%" y="1141" width="0.0197%" height="15" fill="rgb(242,149,17)" fg:x="6223" fg:w="21"/><text x="6.0737%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="5.8237%" y="1125" width="0.0197%" height="15" fill="rgb(244,29,21)" fg:x="6223" fg:w="21"/><text x="6.0737%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="5.8237%" y="1109" width="0.0197%" height="15" fill="rgb(220,130,37)" fg:x="6223" fg:w="21"/><text x="6.0737%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.02%)</title><rect x="5.8237%" y="1093" width="0.0197%" height="15" fill="rgb(211,67,2)" fg:x="6223" fg:w="21"/><text x="6.0737%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="5.8237%" y="1077" width="0.0197%" height="15" fill="rgb(235,68,52)" fg:x="6223" fg:w="21"/><text x="6.0737%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="5.8237%" y="1061" width="0.0197%" height="15" fill="rgb(246,142,3)" fg:x="6223" fg:w="21"/><text x="6.0737%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="5.8237%" y="1045" width="0.0197%" height="15" fill="rgb(241,25,7)" fg:x="6223" fg:w="21"/><text x="6.0737%" y="1055.50"></text></g><g><title>__rg_alloc (21 samples, 0.02%)</title><rect x="5.8237%" y="1029" width="0.0197%" height="15" fill="rgb(242,119,39)" fg:x="6223" fg:w="21"/><text x="6.0737%" y="1039.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (21 samples, 0.02%)</title><rect x="5.8237%" y="1013" width="0.0197%" height="15" fill="rgb(241,98,45)" fg:x="6223" fg:w="21"/><text x="6.0737%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="5.8434%" y="1141" width="0.0150%" height="15" fill="rgb(254,28,30)" fg:x="6244" fg:w="16"/><text x="6.0934%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="5.8434%" y="1125" width="0.0150%" height="15" fill="rgb(241,142,54)" fg:x="6244" fg:w="16"/><text x="6.0934%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (16 samples, 0.01%)</title><rect x="5.8434%" y="1109" width="0.0150%" height="15" fill="rgb(222,85,15)" fg:x="6244" fg:w="16"/><text x="6.0934%" y="1119.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="5.8434%" y="1093" width="0.0150%" height="15" fill="rgb(210,85,47)" fg:x="6244" fg:w="16"/><text x="6.0934%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="5.8434%" y="1077" width="0.0150%" height="15" fill="rgb(224,206,25)" fg:x="6244" fg:w="16"/><text x="6.0934%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="5.8434%" y="1061" width="0.0150%" height="15" fill="rgb(243,201,19)" fg:x="6244" fg:w="16"/><text x="6.0934%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="5.8434%" y="1045" width="0.0150%" height="15" fill="rgb(236,59,4)" fg:x="6244" fg:w="16"/><text x="6.0934%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="5.8434%" y="1029" width="0.0150%" height="15" fill="rgb(254,179,45)" fg:x="6244" fg:w="16"/><text x="6.0934%" y="1039.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="5.8434%" y="1013" width="0.0150%" height="15" fill="rgb(226,14,10)" fg:x="6244" fg:w="16"/><text x="6.0934%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="5.8434%" y="997" width="0.0150%" height="15" fill="rgb(244,27,41)" fg:x="6244" fg:w="16"/><text x="6.0934%" y="1007.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (167 samples, 0.16%)</title><rect x="5.7264%" y="1157" width="0.1563%" height="15" fill="rgb(235,35,32)" fg:x="6119" fg:w="167"/><text x="5.9764%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (26 samples, 0.02%)</title><rect x="5.8584%" y="1141" width="0.0243%" height="15" fill="rgb(218,68,31)" fg:x="6260" fg:w="26"/><text x="6.1084%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (16 samples, 0.01%)</title><rect x="5.8677%" y="1125" width="0.0150%" height="15" fill="rgb(207,120,37)" fg:x="6270" fg:w="16"/><text x="6.1177%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (16 samples, 0.01%)</title><rect x="5.8677%" y="1109" width="0.0150%" height="15" fill="rgb(227,98,0)" fg:x="6270" fg:w="16"/><text x="6.1177%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (40 samples, 0.04%)</title><rect x="5.8827%" y="1157" width="0.0374%" height="15" fill="rgb(207,7,3)" fg:x="6286" fg:w="40"/><text x="6.1327%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.01%)</title><rect x="6.0081%" y="1109" width="0.0112%" height="15" fill="rgb(206,98,19)" fg:x="6420" fg:w="12"/><text x="6.2581%" y="1119.50"></text></g><g><title>core::ptr::write (12 samples, 0.01%)</title><rect x="6.0081%" y="1093" width="0.0112%" height="15" fill="rgb(217,5,26)" fg:x="6420" fg:w="12"/><text x="6.2581%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (125 samples, 0.12%)</title><rect x="5.9257%" y="1157" width="0.1170%" height="15" fill="rgb(235,190,38)" fg:x="6332" fg:w="125"/><text x="6.1757%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.05%)</title><rect x="5.9931%" y="1141" width="0.0496%" height="15" fill="rgb(247,86,24)" fg:x="6404" fg:w="53"/><text x="6.2431%" y="1151.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (53 samples, 0.05%)</title><rect x="5.9931%" y="1125" width="0.0496%" height="15" fill="rgb(205,101,16)" fg:x="6404" fg:w="53"/><text x="6.2431%" y="1135.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (19 samples, 0.02%)</title><rect x="6.0249%" y="1109" width="0.0178%" height="15" fill="rgb(246,168,33)" fg:x="6438" fg:w="19"/><text x="6.2749%" y="1119.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (19 samples, 0.02%)</title><rect x="6.0249%" y="1093" width="0.0178%" height="15" fill="rgb(231,114,1)" fg:x="6438" fg:w="19"/><text x="6.2749%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="6.0249%" y="1077" width="0.0178%" height="15" fill="rgb(207,184,53)" fg:x="6438" fg:w="19"/><text x="6.2749%" y="1087.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="6.0249%" y="1061" width="0.0178%" height="15" fill="rgb(224,95,51)" fg:x="6438" fg:w="19"/><text x="6.2749%" y="1071.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (21 samples, 0.02%)</title><rect x="6.0427%" y="1157" width="0.0197%" height="15" fill="rgb(212,188,45)" fg:x="6457" fg:w="21"/><text x="6.2927%" y="1167.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (78 samples, 0.07%)</title><rect x="6.0624%" y="1157" width="0.0730%" height="15" fill="rgb(223,154,38)" fg:x="6478" fg:w="78"/><text x="6.3124%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (35 samples, 0.03%)</title><rect x="6.1026%" y="1141" width="0.0328%" height="15" fill="rgb(251,22,52)" fg:x="6521" fg:w="35"/><text x="6.3526%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="6.2280%" y="1141" width="0.0103%" height="15" fill="rgb(229,209,22)" fg:x="6655" fg:w="11"/><text x="6.4780%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="6.2280%" y="1125" width="0.0103%" height="15" fill="rgb(234,138,34)" fg:x="6655" fg:w="11"/><text x="6.4780%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="6.2280%" y="1109" width="0.0103%" height="15" fill="rgb(212,95,11)" fg:x="6655" fg:w="11"/><text x="6.4780%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="6.2280%" y="1093" width="0.0103%" height="15" fill="rgb(240,179,47)" fg:x="6655" fg:w="11"/><text x="6.4780%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="6.2280%" y="1077" width="0.0103%" height="15" fill="rgb(240,163,11)" fg:x="6655" fg:w="11"/><text x="6.4780%" y="1087.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="6.2280%" y="1061" width="0.0103%" height="15" fill="rgb(236,37,12)" fg:x="6655" fg:w="11"/><text x="6.4780%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="6.2280%" y="1045" width="0.0103%" height="15" fill="rgb(232,164,16)" fg:x="6655" fg:w="11"/><text x="6.4780%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (13 samples, 0.01%)</title><rect x="6.2383%" y="1109" width="0.0122%" height="15" fill="rgb(244,205,15)" fg:x="6666" fg:w="13"/><text x="6.4883%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (13 samples, 0.01%)</title><rect x="6.2383%" y="1093" width="0.0122%" height="15" fill="rgb(223,117,47)" fg:x="6666" fg:w="13"/><text x="6.4883%" y="1103.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (13 samples, 0.01%)</title><rect x="6.2383%" y="1077" width="0.0122%" height="15" fill="rgb(244,107,35)" fg:x="6666" fg:w="13"/><text x="6.4883%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 0.02%)</title><rect x="6.2383%" y="1141" width="0.0168%" height="15" fill="rgb(205,140,8)" fg:x="6666" fg:w="18"/><text x="6.4883%" y="1151.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::FromIterator&lt;(K,V)&gt; for halfbrown::HashMap&lt;K,V,S&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="6.2383%" y="1125" width="0.0168%" height="15" fill="rgb(228,84,46)" fg:x="6666" fg:w="18"/><text x="6.4883%" y="1135.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (133 samples, 0.12%)</title><rect x="6.1354%" y="1157" width="0.1245%" height="15" fill="rgb(254,188,9)" fg:x="6556" fg:w="133"/><text x="6.3854%" y="1167.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (19 samples, 0.02%)</title><rect x="6.2608%" y="1157" width="0.0178%" height="15" fill="rgb(206,112,54)" fg:x="6690" fg:w="19"/><text x="6.5108%" y="1167.50"></text></g><g><title>[anon] (6,264 samples, 5.86%)</title><rect x="0.4174%" y="1173" width="5.8621%" height="15" fill="rgb(216,84,49)" fg:x="446" fg:w="6264"/><text x="0.6674%" y="1183.50">[anon]</text></g><g><title>[libc-2.33.so] (11 samples, 0.01%)</title><rect x="6.2795%" y="1173" width="0.0103%" height="15" fill="rgb(214,194,35)" fg:x="6710" fg:w="11"/><text x="6.5295%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="6.2916%" y="1157" width="0.0197%" height="15" fill="rgb(249,28,3)" fg:x="6723" fg:w="21"/><text x="6.5416%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="6.3113%" y="1157" width="0.0168%" height="15" fill="rgb(222,56,52)" fg:x="6744" fg:w="18"/><text x="6.5613%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="6.3506%" y="1125" width="0.0159%" height="15" fill="rgb(245,217,50)" fg:x="6786" fg:w="17"/><text x="6.6006%" y="1135.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (17 samples, 0.02%)</title><rect x="6.3506%" y="1109" width="0.0159%" height="15" fill="rgb(213,201,24)" fg:x="6786" fg:w="17"/><text x="6.6006%" y="1119.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (88 samples, 0.08%)</title><rect x="6.3506%" y="1157" width="0.0824%" height="15" fill="rgb(248,116,28)" fg:x="6786" fg:w="88"/><text x="6.6006%" y="1167.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (88 samples, 0.08%)</title><rect x="6.3506%" y="1141" width="0.0824%" height="15" fill="rgb(219,72,43)" fg:x="6786" fg:w="88"/><text x="6.6006%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (71 samples, 0.07%)</title><rect x="6.3665%" y="1125" width="0.0664%" height="15" fill="rgb(209,138,14)" fg:x="6803" fg:w="71"/><text x="6.6165%" y="1135.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (71 samples, 0.07%)</title><rect x="6.3665%" y="1109" width="0.0664%" height="15" fill="rgb(222,18,33)" fg:x="6803" fg:w="71"/><text x="6.6165%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="6.4404%" y="1141" width="0.0103%" height="15" fill="rgb(213,199,7)" fg:x="6882" fg:w="11"/><text x="6.6904%" y="1151.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="6.4404%" y="1125" width="0.0103%" height="15" fill="rgb(250,110,10)" fg:x="6882" fg:w="11"/><text x="6.6904%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="6.4404%" y="1109" width="0.0103%" height="15" fill="rgb(248,123,6)" fg:x="6882" fg:w="11"/><text x="6.6904%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="6.4404%" y="1093" width="0.0103%" height="15" fill="rgb(206,91,31)" fg:x="6882" fg:w="11"/><text x="6.6904%" y="1103.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="6.4404%" y="1077" width="0.0103%" height="15" fill="rgb(211,154,13)" fg:x="6882" fg:w="11"/><text x="6.6904%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="6.4404%" y="1061" width="0.0103%" height="15" fill="rgb(225,148,7)" fg:x="6882" fg:w="11"/><text x="6.6904%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="6.4507%" y="1141" width="0.0112%" height="15" fill="rgb(220,160,43)" fg:x="6893" fg:w="12"/><text x="6.7007%" y="1151.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="6.4507%" y="1125" width="0.0112%" height="15" fill="rgb(213,52,39)" fg:x="6893" fg:w="12"/><text x="6.7007%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="6.4507%" y="1109" width="0.0112%" height="15" fill="rgb(243,137,7)" fg:x="6893" fg:w="12"/><text x="6.7007%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="6.4507%" y="1093" width="0.0112%" height="15" fill="rgb(230,79,13)" fg:x="6893" fg:w="12"/><text x="6.7007%" y="1103.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="6.4507%" y="1077" width="0.0112%" height="15" fill="rgb(247,105,23)" fg:x="6893" fg:w="12"/><text x="6.7007%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="6.4507%" y="1061" width="0.0112%" height="15" fill="rgb(223,179,41)" fg:x="6893" fg:w="12"/><text x="6.7007%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (43 samples, 0.04%)</title><rect x="6.4395%" y="1157" width="0.0402%" height="15" fill="rgb(218,9,34)" fg:x="6881" fg:w="43"/><text x="6.6895%" y="1167.50"></text></g><g><title>[tremor] (251 samples, 0.23%)</title><rect x="6.2898%" y="1173" width="0.2349%" height="15" fill="rgb(222,106,8)" fg:x="6721" fg:w="251"/><text x="6.5398%" y="1183.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (92 samples, 0.09%)</title><rect x="6.5247%" y="1157" width="0.0861%" height="15" fill="rgb(211,220,0)" fg:x="6972" fg:w="92"/><text x="6.7747%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.05%)</title><rect x="6.6154%" y="1157" width="0.0487%" height="15" fill="rgb(229,52,16)" fg:x="7069" fg:w="52"/><text x="6.8654%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 0.09%)</title><rect x="6.6641%" y="1157" width="0.0898%" height="15" fill="rgb(212,155,18)" fg:x="7121" fg:w="96"/><text x="6.9141%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="6.7539%" y="1157" width="0.0131%" height="15" fill="rgb(242,21,14)" fg:x="7217" fg:w="14"/><text x="7.0039%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (69 samples, 0.06%)</title><rect x="6.7671%" y="1157" width="0.0646%" height="15" fill="rgb(222,19,48)" fg:x="7231" fg:w="69"/><text x="7.0171%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="6.8213%" y="1141" width="0.0103%" height="15" fill="rgb(232,45,27)" fg:x="7289" fg:w="11"/><text x="7.0713%" y="1151.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (93 samples, 0.09%)</title><rect x="6.8391%" y="1157" width="0.0870%" height="15" fill="rgb(249,103,42)" fg:x="7308" fg:w="93"/><text x="7.0891%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (30 samples, 0.03%)</title><rect x="6.8981%" y="1141" width="0.0281%" height="15" fill="rgb(246,81,33)" fg:x="7371" fg:w="30"/><text x="7.1481%" y="1151.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (15 samples, 0.01%)</title><rect x="6.9121%" y="1125" width="0.0140%" height="15" fill="rgb(252,33,42)" fg:x="7386" fg:w="15"/><text x="7.1621%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (11 samples, 0.01%)</title><rect x="7.0927%" y="1141" width="0.0103%" height="15" fill="rgb(209,212,41)" fg:x="7579" fg:w="11"/><text x="7.3427%" y="1151.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_ptr (14 samples, 0.01%)</title><rect x="7.1058%" y="373" width="0.0131%" height="15" fill="rgb(207,154,6)" fg:x="7593" fg:w="14"/><text x="7.3558%" y="383.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="7.1311%" y="197" width="0.0112%" height="15" fill="rgb(223,64,47)" fg:x="7620" fg:w="12"/><text x="7.3811%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (147 samples, 0.14%)</title><rect x="7.1311%" y="229" width="0.1376%" height="15" fill="rgb(211,161,38)" fg:x="7620" fg:w="147"/><text x="7.3811%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (147 samples, 0.14%)</title><rect x="7.1311%" y="213" width="0.1376%" height="15" fill="rgb(219,138,40)" fg:x="7620" fg:w="147"/><text x="7.3811%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (135 samples, 0.13%)</title><rect x="7.1423%" y="197" width="0.1263%" height="15" fill="rgb(241,228,46)" fg:x="7632" fg:w="135"/><text x="7.3923%" y="207.50"></text></g><g><title>snmalloc::FreeListIter::take (124 samples, 0.12%)</title><rect x="7.1526%" y="181" width="0.1160%" height="15" fill="rgb(223,209,38)" fg:x="7643" fg:w="124"/><text x="7.4026%" y="191.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (124 samples, 0.12%)</title><rect x="7.1526%" y="165" width="0.1160%" height="15" fill="rgb(236,164,45)" fg:x="7643" fg:w="124"/><text x="7.4026%" y="175.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (175 samples, 0.16%)</title><rect x="7.1058%" y="389" width="0.1638%" height="15" fill="rgb(231,15,5)" fg:x="7593" fg:w="175"/><text x="7.3558%" y="399.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (161 samples, 0.15%)</title><rect x="7.1189%" y="373" width="0.1507%" height="15" fill="rgb(252,35,15)" fg:x="7607" fg:w="161"/><text x="7.3689%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (161 samples, 0.15%)</title><rect x="7.1189%" y="357" width="0.1507%" height="15" fill="rgb(248,181,18)" fg:x="7607" fg:w="161"/><text x="7.3689%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (154 samples, 0.14%)</title><rect x="7.1255%" y="341" width="0.1441%" height="15" fill="rgb(233,39,42)" fg:x="7614" fg:w="154"/><text x="7.3755%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (154 samples, 0.14%)</title><rect x="7.1255%" y="325" width="0.1441%" height="15" fill="rgb(238,110,33)" fg:x="7614" fg:w="154"/><text x="7.3755%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (154 samples, 0.14%)</title><rect x="7.1255%" y="309" width="0.1441%" height="15" fill="rgb(233,195,10)" fg:x="7614" fg:w="154"/><text x="7.3755%" y="319.50"></text></g><g><title>alloc::alloc::alloc (154 samples, 0.14%)</title><rect x="7.1255%" y="293" width="0.1441%" height="15" fill="rgb(254,105,3)" fg:x="7614" fg:w="154"/><text x="7.3755%" y="303.50"></text></g><g><title>__rg_alloc (154 samples, 0.14%)</title><rect x="7.1255%" y="277" width="0.1441%" height="15" fill="rgb(221,225,9)" fg:x="7614" fg:w="154"/><text x="7.3755%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (154 samples, 0.14%)</title><rect x="7.1255%" y="261" width="0.1441%" height="15" fill="rgb(224,227,45)" fg:x="7614" fg:w="154"/><text x="7.3755%" y="271.50"></text></g><g><title>rust_alloc (154 samples, 0.14%)</title><rect x="7.1255%" y="245" width="0.1441%" height="15" fill="rgb(229,198,43)" fg:x="7614" fg:w="154"/><text x="7.3755%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (16 samples, 0.01%)</title><rect x="7.2715%" y="325" width="0.0150%" height="15" fill="rgb(206,209,35)" fg:x="7770" fg:w="16"/><text x="7.5215%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (113 samples, 0.11%)</title><rect x="7.2864%" y="325" width="0.1057%" height="15" fill="rgb(245,195,53)" fg:x="7786" fg:w="113"/><text x="7.5364%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (113 samples, 0.11%)</title><rect x="7.2864%" y="309" width="0.1057%" height="15" fill="rgb(240,92,26)" fg:x="7786" fg:w="113"/><text x="7.5364%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (140 samples, 0.13%)</title><rect x="7.2715%" y="341" width="0.1310%" height="15" fill="rgb(207,40,23)" fg:x="7770" fg:w="140"/><text x="7.5215%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (11 samples, 0.01%)</title><rect x="7.3922%" y="325" width="0.0103%" height="15" fill="rgb(223,111,35)" fg:x="7899" fg:w="11"/><text x="7.6422%" y="335.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (330 samples, 0.31%)</title><rect x="7.1030%" y="469" width="0.3088%" height="15" fill="rgb(229,147,28)" fg:x="7590" fg:w="330"/><text x="7.3530%" y="479.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (330 samples, 0.31%)</title><rect x="7.1030%" y="453" width="0.3088%" height="15" fill="rgb(211,29,28)" fg:x="7590" fg:w="330"/><text x="7.3530%" y="463.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (327 samples, 0.31%)</title><rect x="7.1058%" y="437" width="0.3060%" height="15" fill="rgb(228,72,33)" fg:x="7593" fg:w="327"/><text x="7.3558%" y="447.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (327 samples, 0.31%)</title><rect x="7.1058%" y="421" width="0.3060%" height="15" fill="rgb(205,214,31)" fg:x="7593" fg:w="327"/><text x="7.3558%" y="431.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (327 samples, 0.31%)</title><rect x="7.1058%" y="405" width="0.3060%" height="15" fill="rgb(224,111,15)" fg:x="7593" fg:w="327"/><text x="7.3558%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (152 samples, 0.14%)</title><rect x="7.2696%" y="389" width="0.1422%" height="15" fill="rgb(253,21,26)" fg:x="7768" fg:w="152"/><text x="7.5196%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (152 samples, 0.14%)</title><rect x="7.2696%" y="373" width="0.1422%" height="15" fill="rgb(245,139,43)" fg:x="7768" fg:w="152"/><text x="7.5196%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (152 samples, 0.14%)</title><rect x="7.2696%" y="357" width="0.1422%" height="15" fill="rgb(252,170,7)" fg:x="7768" fg:w="152"/><text x="7.5196%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="7.4240%" y="293" width="0.0122%" height="15" fill="rgb(231,118,14)" fg:x="7933" fg:w="13"/><text x="7.6740%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="7.4240%" y="357" width="0.0131%" height="15" fill="rgb(238,83,0)" fg:x="7933" fg:w="14"/><text x="7.6740%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="7.4240%" y="341" width="0.0131%" height="15" fill="rgb(221,39,39)" fg:x="7933" fg:w="14"/><text x="7.6740%" y="351.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="7.4240%" y="325" width="0.0131%" height="15" fill="rgb(222,119,46)" fg:x="7933" fg:w="14"/><text x="7.6740%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="7.4240%" y="309" width="0.0131%" height="15" fill="rgb(222,165,49)" fg:x="7933" fg:w="14"/><text x="7.6740%" y="319.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (360 samples, 0.34%)</title><rect x="7.1030%" y="597" width="0.3369%" height="15" fill="rgb(219,113,52)" fg:x="7590" fg:w="360"/><text x="7.3530%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (360 samples, 0.34%)</title><rect x="7.1030%" y="581" width="0.3369%" height="15" fill="rgb(214,7,15)" fg:x="7590" fg:w="360"/><text x="7.3530%" y="591.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (360 samples, 0.34%)</title><rect x="7.1030%" y="565" width="0.3369%" height="15" fill="rgb(235,32,4)" fg:x="7590" fg:w="360"/><text x="7.3530%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (360 samples, 0.34%)</title><rect x="7.1030%" y="549" width="0.3369%" height="15" fill="rgb(238,90,54)" fg:x="7590" fg:w="360"/><text x="7.3530%" y="559.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (360 samples, 0.34%)</title><rect x="7.1030%" y="533" width="0.3369%" height="15" fill="rgb(213,208,19)" fg:x="7590" fg:w="360"/><text x="7.3530%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (360 samples, 0.34%)</title><rect x="7.1030%" y="517" width="0.3369%" height="15" fill="rgb(233,156,4)" fg:x="7590" fg:w="360"/><text x="7.3530%" y="527.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (360 samples, 0.34%)</title><rect x="7.1030%" y="501" width="0.3369%" height="15" fill="rgb(207,194,5)" fg:x="7590" fg:w="360"/><text x="7.3530%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (360 samples, 0.34%)</title><rect x="7.1030%" y="485" width="0.3369%" height="15" fill="rgb(206,111,30)" fg:x="7590" fg:w="360"/><text x="7.3530%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (30 samples, 0.03%)</title><rect x="7.4118%" y="469" width="0.0281%" height="15" fill="rgb(243,70,54)" fg:x="7920" fg:w="30"/><text x="7.6618%" y="479.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (30 samples, 0.03%)</title><rect x="7.4118%" y="453" width="0.0281%" height="15" fill="rgb(242,28,8)" fg:x="7920" fg:w="30"/><text x="7.6618%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (30 samples, 0.03%)</title><rect x="7.4118%" y="437" width="0.0281%" height="15" fill="rgb(219,106,18)" fg:x="7920" fg:w="30"/><text x="7.6618%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="7.4118%" y="421" width="0.0281%" height="15" fill="rgb(244,222,10)" fg:x="7920" fg:w="30"/><text x="7.6618%" y="431.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (30 samples, 0.03%)</title><rect x="7.4118%" y="405" width="0.0281%" height="15" fill="rgb(236,179,52)" fg:x="7920" fg:w="30"/><text x="7.6618%" y="415.50"></text></g><g><title>abi_stable::erased_types::iterator::next (30 samples, 0.03%)</title><rect x="7.4118%" y="389" width="0.0281%" height="15" fill="rgb(213,23,39)" fg:x="7920" fg:w="30"/><text x="7.6618%" y="399.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (17 samples, 0.02%)</title><rect x="7.4240%" y="373" width="0.0159%" height="15" fill="rgb(238,48,10)" fg:x="7933" fg:w="17"/><text x="7.6740%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (17 samples, 0.02%)</title><rect x="7.5616%" y="373" width="0.0159%" height="15" fill="rgb(251,196,23)" fg:x="8080" fg:w="17"/><text x="7.8116%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="7.6018%" y="325" width="0.0168%" height="15" fill="rgb(250,152,24)" fg:x="8123" fg:w="18"/><text x="7.8518%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (20 samples, 0.02%)</title><rect x="7.6636%" y="69" width="0.0187%" height="15" fill="rgb(209,150,17)" fg:x="8189" fg:w="20"/><text x="7.9136%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (20 samples, 0.02%)</title><rect x="7.6636%" y="53" width="0.0187%" height="15" fill="rgb(234,202,34)" fg:x="8189" fg:w="20"/><text x="7.9136%" y="63.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (20 samples, 0.02%)</title><rect x="7.6636%" y="37" width="0.0187%" height="15" fill="rgb(253,148,53)" fg:x="8189" fg:w="20"/><text x="7.9136%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (45 samples, 0.04%)</title><rect x="7.6533%" y="101" width="0.0421%" height="15" fill="rgb(218,129,16)" fg:x="8178" fg:w="45"/><text x="7.9033%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (45 samples, 0.04%)</title><rect x="7.6533%" y="85" width="0.0421%" height="15" fill="rgb(216,85,19)" fg:x="8178" fg:w="45"/><text x="7.9033%" y="95.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="7.6823%" y="69" width="0.0131%" height="15" fill="rgb(235,228,7)" fg:x="8209" fg:w="14"/><text x="7.9323%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (73 samples, 0.07%)</title><rect x="7.6327%" y="293" width="0.0683%" height="15" fill="rgb(245,175,0)" fg:x="8156" fg:w="73"/><text x="7.8827%" y="303.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.07%)</title><rect x="7.6327%" y="277" width="0.0683%" height="15" fill="rgb(208,168,36)" fg:x="8156" fg:w="73"/><text x="7.8827%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (73 samples, 0.07%)</title><rect x="7.6327%" y="261" width="0.0683%" height="15" fill="rgb(246,171,24)" fg:x="8156" fg:w="73"/><text x="7.8827%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.07%)</title><rect x="7.6327%" y="245" width="0.0683%" height="15" fill="rgb(215,142,24)" fg:x="8156" fg:w="73"/><text x="7.8827%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (73 samples, 0.07%)</title><rect x="7.6327%" y="229" width="0.0683%" height="15" fill="rgb(250,187,7)" fg:x="8156" fg:w="73"/><text x="7.8827%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (68 samples, 0.06%)</title><rect x="7.6374%" y="213" width="0.0636%" height="15" fill="rgb(228,66,33)" fg:x="8161" fg:w="68"/><text x="7.8874%" y="223.50"></text></g><g><title>__rg_dealloc (68 samples, 0.06%)</title><rect x="7.6374%" y="197" width="0.0636%" height="15" fill="rgb(234,215,21)" fg:x="8161" fg:w="68"/><text x="7.8874%" y="207.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (68 samples, 0.06%)</title><rect x="7.6374%" y="181" width="0.0636%" height="15" fill="rgb(222,191,20)" fg:x="8161" fg:w="68"/><text x="7.8874%" y="191.50"></text></g><g><title>rust_dealloc (61 samples, 0.06%)</title><rect x="7.6439%" y="165" width="0.0571%" height="15" fill="rgb(245,79,54)" fg:x="8168" fg:w="61"/><text x="7.8939%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (57 samples, 0.05%)</title><rect x="7.6477%" y="149" width="0.0533%" height="15" fill="rgb(240,10,37)" fg:x="8172" fg:w="57"/><text x="7.8977%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (51 samples, 0.05%)</title><rect x="7.6533%" y="133" width="0.0477%" height="15" fill="rgb(214,192,32)" fg:x="8178" fg:w="51"/><text x="7.9033%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (51 samples, 0.05%)</title><rect x="7.6533%" y="117" width="0.0477%" height="15" fill="rgb(209,36,54)" fg:x="8178" fg:w="51"/><text x="7.9033%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (128 samples, 0.12%)</title><rect x="7.5850%" y="373" width="0.1198%" height="15" fill="rgb(220,10,11)" fg:x="8105" fg:w="128"/><text x="7.8350%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (118 samples, 0.11%)</title><rect x="7.5943%" y="357" width="0.1104%" height="15" fill="rgb(221,106,17)" fg:x="8115" fg:w="118"/><text x="7.8443%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (110 samples, 0.10%)</title><rect x="7.6018%" y="341" width="0.1029%" height="15" fill="rgb(251,142,44)" fg:x="8123" fg:w="110"/><text x="7.8518%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (83 samples, 0.08%)</title><rect x="7.6271%" y="325" width="0.0777%" height="15" fill="rgb(238,13,15)" fg:x="8150" fg:w="83"/><text x="7.8771%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.08%)</title><rect x="7.6271%" y="309" width="0.0777%" height="15" fill="rgb(208,107,27)" fg:x="8150" fg:w="83"/><text x="7.8771%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (163 samples, 0.15%)</title><rect x="7.5616%" y="389" width="0.1525%" height="15" fill="rgb(205,136,37)" fg:x="8080" fg:w="163"/><text x="7.8116%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (90 samples, 0.08%)</title><rect x="7.7141%" y="389" width="0.0842%" height="15" fill="rgb(250,205,27)" fg:x="8243" fg:w="90"/><text x="7.9641%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (52 samples, 0.05%)</title><rect x="7.7497%" y="373" width="0.0487%" height="15" fill="rgb(210,80,43)" fg:x="8281" fg:w="52"/><text x="7.9997%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (52 samples, 0.05%)</title><rect x="7.7497%" y="357" width="0.0487%" height="15" fill="rgb(247,160,36)" fg:x="8281" fg:w="52"/><text x="7.9997%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.02%)</title><rect x="7.8058%" y="341" width="0.0187%" height="15" fill="rgb(234,13,49)" fg:x="8341" fg:w="20"/><text x="8.0558%" y="351.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (772 samples, 0.72%)</title><rect x="7.1030%" y="885" width="0.7225%" height="15" fill="rgb(234,122,0)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (772 samples, 0.72%)</title><rect x="7.1030%" y="869" width="0.7225%" height="15" fill="rgb(207,146,38)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="879.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (772 samples, 0.72%)</title><rect x="7.1030%" y="853" width="0.7225%" height="15" fill="rgb(207,177,25)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="863.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (772 samples, 0.72%)</title><rect x="7.1030%" y="837" width="0.7225%" height="15" fill="rgb(211,178,42)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="847.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (772 samples, 0.72%)</title><rect x="7.1030%" y="821" width="0.7225%" height="15" fill="rgb(230,69,54)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="831.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (772 samples, 0.72%)</title><rect x="7.1030%" y="805" width="0.7225%" height="15" fill="rgb(214,135,41)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="815.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (772 samples, 0.72%)</title><rect x="7.1030%" y="789" width="0.7225%" height="15" fill="rgb(237,67,25)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (772 samples, 0.72%)</title><rect x="7.1030%" y="773" width="0.7225%" height="15" fill="rgb(222,189,50)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="783.50"></text></g><g><title>std::panic::catch_unwind (772 samples, 0.72%)</title><rect x="7.1030%" y="757" width="0.7225%" height="15" fill="rgb(245,148,34)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="767.50"></text></g><g><title>std::panicking::try (772 samples, 0.72%)</title><rect x="7.1030%" y="741" width="0.7225%" height="15" fill="rgb(222,29,6)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="751.50"></text></g><g><title>std::panicking::try::do_call (772 samples, 0.72%)</title><rect x="7.1030%" y="725" width="0.7225%" height="15" fill="rgb(221,189,43)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (772 samples, 0.72%)</title><rect x="7.1030%" y="709" width="0.7225%" height="15" fill="rgb(207,36,27)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (772 samples, 0.72%)</title><rect x="7.1030%" y="693" width="0.7225%" height="15" fill="rgb(217,90,24)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="703.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (772 samples, 0.72%)</title><rect x="7.1030%" y="677" width="0.7225%" height="15" fill="rgb(224,66,35)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="687.50"></text></g><g><title>async_ffi::FfiContext::with_context (772 samples, 0.72%)</title><rect x="7.1030%" y="661" width="0.7225%" height="15" fill="rgb(221,13,50)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="671.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (772 samples, 0.72%)</title><rect x="7.1030%" y="645" width="0.7225%" height="15" fill="rgb(236,68,49)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (772 samples, 0.72%)</title><rect x="7.1030%" y="629" width="0.7225%" height="15" fill="rgb(229,146,28)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (772 samples, 0.72%)</title><rect x="7.1030%" y="613" width="0.7225%" height="15" fill="rgb(225,31,38)" fg:x="7590" fg:w="772"/><text x="7.3530%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (412 samples, 0.39%)</title><rect x="7.4399%" y="597" width="0.3856%" height="15" fill="rgb(250,208,3)" fg:x="7950" fg:w="412"/><text x="7.6899%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (412 samples, 0.39%)</title><rect x="7.4399%" y="581" width="0.3856%" height="15" fill="rgb(246,54,23)" fg:x="7950" fg:w="412"/><text x="7.6899%" y="591.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (412 samples, 0.39%)</title><rect x="7.4399%" y="565" width="0.3856%" height="15" fill="rgb(243,76,11)" fg:x="7950" fg:w="412"/><text x="7.6899%" y="575.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (412 samples, 0.39%)</title><rect x="7.4399%" y="549" width="0.3856%" height="15" fill="rgb(245,21,50)" fg:x="7950" fg:w="412"/><text x="7.6899%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (412 samples, 0.39%)</title><rect x="7.4399%" y="533" width="0.3856%" height="15" fill="rgb(228,9,43)" fg:x="7950" fg:w="412"/><text x="7.6899%" y="543.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (412 samples, 0.39%)</title><rect x="7.4399%" y="517" width="0.3856%" height="15" fill="rgb(208,100,47)" fg:x="7950" fg:w="412"/><text x="7.6899%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (412 samples, 0.39%)</title><rect x="7.4399%" y="501" width="0.3856%" height="15" fill="rgb(232,26,8)" fg:x="7950" fg:w="412"/><text x="7.6899%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (412 samples, 0.39%)</title><rect x="7.4399%" y="485" width="0.3856%" height="15" fill="rgb(216,166,38)" fg:x="7950" fg:w="412"/><text x="7.6899%" y="495.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (412 samples, 0.39%)</title><rect x="7.4399%" y="469" width="0.3856%" height="15" fill="rgb(251,202,51)" fg:x="7950" fg:w="412"/><text x="7.6899%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (412 samples, 0.39%)</title><rect x="7.4399%" y="453" width="0.3856%" height="15" fill="rgb(254,216,34)" fg:x="7950" fg:w="412"/><text x="7.6899%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (412 samples, 0.39%)</title><rect x="7.4399%" y="437" width="0.3856%" height="15" fill="rgb(251,32,27)" fg:x="7950" fg:w="412"/><text x="7.6899%" y="447.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (412 samples, 0.39%)</title><rect x="7.4399%" y="421" width="0.3856%" height="15" fill="rgb(208,127,28)" fg:x="7950" fg:w="412"/><text x="7.6899%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (282 samples, 0.26%)</title><rect x="7.5616%" y="405" width="0.2639%" height="15" fill="rgb(224,137,22)" fg:x="8080" fg:w="282"/><text x="7.8116%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (29 samples, 0.03%)</title><rect x="7.7983%" y="389" width="0.0271%" height="15" fill="rgb(254,70,32)" fg:x="8333" fg:w="29"/><text x="8.0483%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 0.03%)</title><rect x="7.7983%" y="373" width="0.0271%" height="15" fill="rgb(229,75,37)" fg:x="8333" fg:w="29"/><text x="8.0483%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="7.8058%" y="357" width="0.0197%" height="15" fill="rgb(252,64,23)" fg:x="8341" fg:w="21"/><text x="8.0558%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::ensure_is_owned (13 samples, 0.01%)</title><rect x="7.8526%" y="805" width="0.0122%" height="15" fill="rgb(232,162,48)" fg:x="8391" fg:w="13"/><text x="8.1026%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (13 samples, 0.01%)</title><rect x="7.8526%" y="789" width="0.0122%" height="15" fill="rgb(246,160,12)" fg:x="8391" fg:w="13"/><text x="8.1026%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (53 samples, 0.05%)</title><rect x="7.8994%" y="757" width="0.0496%" height="15" fill="rgb(247,166,0)" fg:x="8441" fg:w="53"/><text x="8.1494%" y="767.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (938 samples, 0.88%)</title><rect x="7.1030%" y="1141" width="0.8778%" height="15" fill="rgb(249,219,21)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (938 samples, 0.88%)</title><rect x="7.1030%" y="1125" width="0.8778%" height="15" fill="rgb(205,209,3)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (938 samples, 0.88%)</title><rect x="7.1030%" y="1109" width="0.8778%" height="15" fill="rgb(243,44,1)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (938 samples, 0.88%)</title><rect x="7.1030%" y="1093" width="0.8778%" height="15" fill="rgb(206,159,16)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (938 samples, 0.88%)</title><rect x="7.1030%" y="1077" width="0.8778%" height="15" fill="rgb(244,77,30)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (938 samples, 0.88%)</title><rect x="7.1030%" y="1061" width="0.8778%" height="15" fill="rgb(218,69,12)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (938 samples, 0.88%)</title><rect x="7.1030%" y="1045" width="0.8778%" height="15" fill="rgb(212,87,7)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (938 samples, 0.88%)</title><rect x="7.1030%" y="1029" width="0.8778%" height="15" fill="rgb(245,114,25)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="1039.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (938 samples, 0.88%)</title><rect x="7.1030%" y="1013" width="0.8778%" height="15" fill="rgb(210,61,42)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (938 samples, 0.88%)</title><rect x="7.1030%" y="997" width="0.8778%" height="15" fill="rgb(211,52,33)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="1007.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (938 samples, 0.88%)</title><rect x="7.1030%" y="981" width="0.8778%" height="15" fill="rgb(234,58,33)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (938 samples, 0.88%)</title><rect x="7.1030%" y="965" width="0.8778%" height="15" fill="rgb(220,115,36)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (938 samples, 0.88%)</title><rect x="7.1030%" y="949" width="0.8778%" height="15" fill="rgb(243,153,54)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="959.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (938 samples, 0.88%)</title><rect x="7.1030%" y="933" width="0.8778%" height="15" fill="rgb(251,47,18)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (938 samples, 0.88%)</title><rect x="7.1030%" y="917" width="0.8778%" height="15" fill="rgb(242,102,42)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (938 samples, 0.88%)</title><rect x="7.1030%" y="901" width="0.8778%" height="15" fill="rgb(234,31,38)" fg:x="7590" fg:w="938"/><text x="7.3530%" y="911.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (166 samples, 0.16%)</title><rect x="7.8255%" y="885" width="0.1553%" height="15" fill="rgb(221,117,51)" fg:x="8362" fg:w="166"/><text x="8.0755%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (166 samples, 0.16%)</title><rect x="7.8255%" y="869" width="0.1553%" height="15" fill="rgb(212,20,18)" fg:x="8362" fg:w="166"/><text x="8.0755%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (166 samples, 0.16%)</title><rect x="7.8255%" y="853" width="0.1553%" height="15" fill="rgb(245,133,36)" fg:x="8362" fg:w="166"/><text x="8.0755%" y="863.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (166 samples, 0.16%)</title><rect x="7.8255%" y="837" width="0.1553%" height="15" fill="rgb(212,6,19)" fg:x="8362" fg:w="166"/><text x="8.0755%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (138 samples, 0.13%)</title><rect x="7.8517%" y="821" width="0.1291%" height="15" fill="rgb(218,1,36)" fg:x="8390" fg:w="138"/><text x="8.1017%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (119 samples, 0.11%)</title><rect x="7.8695%" y="805" width="0.1114%" height="15" fill="rgb(246,84,54)" fg:x="8409" fg:w="119"/><text x="8.1195%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (119 samples, 0.11%)</title><rect x="7.8695%" y="789" width="0.1114%" height="15" fill="rgb(242,110,6)" fg:x="8409" fg:w="119"/><text x="8.1195%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (119 samples, 0.11%)</title><rect x="7.8695%" y="773" width="0.1114%" height="15" fill="rgb(214,47,5)" fg:x="8409" fg:w="119"/><text x="8.1195%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (34 samples, 0.03%)</title><rect x="7.9490%" y="757" width="0.0318%" height="15" fill="rgb(218,159,25)" fg:x="8494" fg:w="34"/><text x="8.1990%" y="767.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="7.9808%" y="917" width="0.0253%" height="15" fill="rgb(215,211,28)" fg:x="8528" fg:w="27"/><text x="8.2308%" y="927.50"></text></g><g><title>event_listener::Inner::lock (16 samples, 0.01%)</title><rect x="7.9911%" y="901" width="0.0150%" height="15" fill="rgb(238,59,32)" fg:x="8539" fg:w="16"/><text x="8.2411%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="7.9911%" y="885" width="0.0150%" height="15" fill="rgb(226,82,3)" fg:x="8539" fg:w="16"/><text x="8.2411%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="7.9921%" y="869" width="0.0140%" height="15" fill="rgb(240,164,32)" fg:x="8540" fg:w="15"/><text x="8.2421%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (204 samples, 0.19%)</title><rect x="8.1315%" y="869" width="0.1909%" height="15" fill="rgb(232,46,7)" fg:x="8689" fg:w="204"/><text x="8.3815%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (299 samples, 0.28%)</title><rect x="8.3336%" y="869" width="0.2798%" height="15" fill="rgb(229,129,53)" fg:x="8905" fg:w="299"/><text x="8.5836%" y="879.50"></text></g><g><title>core::ptr::read (299 samples, 0.28%)</title><rect x="8.3336%" y="853" width="0.2798%" height="15" fill="rgb(234,188,29)" fg:x="8905" fg:w="299"/><text x="8.5836%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (299 samples, 0.28%)</title><rect x="8.3336%" y="837" width="0.2798%" height="15" fill="rgb(246,141,4)" fg:x="8905" fg:w="299"/><text x="8.5836%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (351 samples, 0.33%)</title><rect x="8.6135%" y="869" width="0.3285%" height="15" fill="rgb(229,23,39)" fg:x="9204" fg:w="351"/><text x="8.8635%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (351 samples, 0.33%)</title><rect x="8.6135%" y="853" width="0.3285%" height="15" fill="rgb(206,12,3)" fg:x="9204" fg:w="351"/><text x="8.8635%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (408 samples, 0.38%)</title><rect x="8.9419%" y="869" width="0.3818%" height="15" fill="rgb(252,226,20)" fg:x="9555" fg:w="408"/><text x="9.1919%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (407 samples, 0.38%)</title><rect x="8.9429%" y="853" width="0.3809%" height="15" fill="rgb(216,123,35)" fg:x="9556" fg:w="407"/><text x="9.1929%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,409 samples, 1.32%)</title><rect x="8.0061%" y="901" width="1.3186%" height="15" fill="rgb(212,68,40)" fg:x="8555" fg:w="1409"/><text x="8.2561%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,409 samples, 1.32%)</title><rect x="8.0061%" y="885" width="1.3186%" height="15" fill="rgb(254,125,32)" fg:x="8555" fg:w="1409"/><text x="8.2561%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (13 samples, 0.01%)</title><rect x="9.3303%" y="837" width="0.0122%" height="15" fill="rgb(253,97,22)" fg:x="9970" fg:w="13"/><text x="9.5803%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="9.3303%" y="821" width="0.0122%" height="15" fill="rgb(241,101,14)" fg:x="9970" fg:w="13"/><text x="9.5803%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="9.3303%" y="805" width="0.0122%" height="15" fill="rgb(238,103,29)" fg:x="9970" fg:w="13"/><text x="9.5803%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (44 samples, 0.04%)</title><rect x="9.3537%" y="789" width="0.0412%" height="15" fill="rgb(233,195,47)" fg:x="9995" fg:w="44"/><text x="9.6037%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="9.3537%" y="773" width="0.0412%" height="15" fill="rgb(246,218,30)" fg:x="9995" fg:w="44"/><text x="9.6037%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (44 samples, 0.04%)</title><rect x="9.3537%" y="757" width="0.0412%" height="15" fill="rgb(219,145,47)" fg:x="9995" fg:w="44"/><text x="9.6037%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (42 samples, 0.04%)</title><rect x="9.3556%" y="741" width="0.0393%" height="15" fill="rgb(243,12,26)" fg:x="9997" fg:w="42"/><text x="9.6056%" y="751.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (42 samples, 0.04%)</title><rect x="9.3556%" y="725" width="0.0393%" height="15" fill="rgb(214,87,16)" fg:x="9997" fg:w="42"/><text x="9.6056%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (25 samples, 0.02%)</title><rect x="9.3949%" y="789" width="0.0234%" height="15" fill="rgb(208,99,42)" fg:x="10039" fg:w="25"/><text x="9.6449%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.02%)</title><rect x="9.3949%" y="773" width="0.0234%" height="15" fill="rgb(253,99,2)" fg:x="10039" fg:w="25"/><text x="9.6449%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (32 samples, 0.03%)</title><rect x="9.4529%" y="709" width="0.0299%" height="15" fill="rgb(220,168,23)" fg:x="10101" fg:w="32"/><text x="9.7029%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (32 samples, 0.03%)</title><rect x="9.4529%" y="693" width="0.0299%" height="15" fill="rgb(242,38,24)" fg:x="10101" fg:w="32"/><text x="9.7029%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (23 samples, 0.02%)</title><rect x="9.4829%" y="709" width="0.0215%" height="15" fill="rgb(225,182,9)" fg:x="10133" fg:w="23"/><text x="9.7329%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (23 samples, 0.02%)</title><rect x="9.4829%" y="693" width="0.0215%" height="15" fill="rgb(243,178,37)" fg:x="10133" fg:w="23"/><text x="9.7329%" y="703.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (23 samples, 0.02%)</title><rect x="9.4829%" y="677" width="0.0215%" height="15" fill="rgb(232,139,19)" fg:x="10133" fg:w="23"/><text x="9.7329%" y="687.50"></text></g><g><title>__pthread_cond_signal (23 samples, 0.02%)</title><rect x="9.4829%" y="661" width="0.0215%" height="15" fill="rgb(225,201,24)" fg:x="10133" fg:w="23"/><text x="9.7329%" y="671.50"></text></g><g><title>parking::Unparker::unpark (98 samples, 0.09%)</title><rect x="9.4342%" y="741" width="0.0917%" height="15" fill="rgb(221,47,46)" fg:x="10081" fg:w="98"/><text x="9.6842%" y="751.50"></text></g><g><title>parking::Inner::unpark (81 samples, 0.08%)</title><rect x="9.4501%" y="725" width="0.0758%" height="15" fill="rgb(249,23,13)" fg:x="10098" fg:w="81"/><text x="9.7001%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="9.5044%" y="709" width="0.0215%" height="15" fill="rgb(219,9,5)" fg:x="10156" fg:w="23"/><text x="9.7544%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.02%)</title><rect x="9.5044%" y="693" width="0.0215%" height="15" fill="rgb(254,171,16)" fg:x="10156" fg:w="23"/><text x="9.7544%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (23 samples, 0.02%)</title><rect x="9.5044%" y="677" width="0.0215%" height="15" fill="rgb(230,171,20)" fg:x="10156" fg:w="23"/><text x="9.7544%" y="687.50"></text></g><g><title>__GI___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="9.5044%" y="661" width="0.0215%" height="15" fill="rgb(210,71,41)" fg:x="10156" fg:w="23"/><text x="9.7544%" y="671.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (122 samples, 0.11%)</title><rect x="9.4183%" y="757" width="0.1142%" height="15" fill="rgb(206,173,20)" fg:x="10064" fg:w="122"/><text x="9.6683%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="9.5325%" y="757" width="0.0215%" height="15" fill="rgb(233,88,34)" fg:x="10186" fg:w="23"/><text x="9.7825%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="9.5325%" y="741" width="0.0215%" height="15" fill="rgb(223,209,46)" fg:x="10186" fg:w="23"/><text x="9.7825%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.02%)</title><rect x="9.5325%" y="725" width="0.0215%" height="15" fill="rgb(250,43,18)" fg:x="10186" fg:w="23"/><text x="9.7825%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (23 samples, 0.02%)</title><rect x="9.5325%" y="709" width="0.0215%" height="15" fill="rgb(208,13,10)" fg:x="10186" fg:w="23"/><text x="9.7825%" y="719.50"></text></g><g><title>core::task::wake::Waker::wake (146 samples, 0.14%)</title><rect x="9.4183%" y="789" width="0.1366%" height="15" fill="rgb(212,200,36)" fg:x="10064" fg:w="146"/><text x="9.6683%" y="799.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (146 samples, 0.14%)</title><rect x="9.4183%" y="773" width="0.1366%" height="15" fill="rgb(225,90,30)" fg:x="10064" fg:w="146"/><text x="9.6683%" y="783.50"></text></g><g><title>async_executor::State::notify (282 samples, 0.26%)</title><rect x="9.3462%" y="805" width="0.2639%" height="15" fill="rgb(236,182,39)" fg:x="9987" fg:w="282"/><text x="9.5962%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (59 samples, 0.06%)</title><rect x="9.5549%" y="789" width="0.0552%" height="15" fill="rgb(212,144,35)" fg:x="10210" fg:w="59"/><text x="9.8049%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (57 samples, 0.05%)</title><rect x="9.5568%" y="773" width="0.0533%" height="15" fill="rgb(228,63,44)" fg:x="10212" fg:w="57"/><text x="9.8068%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (46 samples, 0.04%)</title><rect x="9.5671%" y="757" width="0.0430%" height="15" fill="rgb(228,109,6)" fg:x="10223" fg:w="46"/><text x="9.8171%" y="767.50"></text></g><g><title>__GI___pthread_mutex_lock (46 samples, 0.04%)</title><rect x="9.5671%" y="741" width="0.0430%" height="15" fill="rgb(238,117,24)" fg:x="10223" fg:w="46"/><text x="9.8171%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (58 samples, 0.05%)</title><rect x="9.6214%" y="773" width="0.0543%" height="15" fill="rgb(242,26,26)" fg:x="10281" fg:w="58"/><text x="9.8714%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (58 samples, 0.05%)</title><rect x="9.6214%" y="757" width="0.0543%" height="15" fill="rgb(221,92,48)" fg:x="10281" fg:w="58"/><text x="9.8714%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (25 samples, 0.02%)</title><rect x="9.6756%" y="773" width="0.0234%" height="15" fill="rgb(209,209,32)" fg:x="10339" fg:w="25"/><text x="9.9256%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_or (25 samples, 0.02%)</title><rect x="9.6756%" y="757" width="0.0234%" height="15" fill="rgb(221,70,22)" fg:x="10339" fg:w="25"/><text x="9.9256%" y="767.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (381 samples, 0.36%)</title><rect x="9.3453%" y="821" width="0.3566%" height="15" fill="rgb(248,145,5)" fg:x="9986" fg:w="381"/><text x="9.5953%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (98 samples, 0.09%)</title><rect x="9.6101%" y="805" width="0.0917%" height="15" fill="rgb(226,116,26)" fg:x="10269" fg:w="98"/><text x="9.8601%" y="815.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (94 samples, 0.09%)</title><rect x="9.6139%" y="789" width="0.0880%" height="15" fill="rgb(244,5,17)" fg:x="10273" fg:w="94"/><text x="9.8639%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (64 samples, 0.06%)</title><rect x="9.7018%" y="821" width="0.0599%" height="15" fill="rgb(252,159,33)" fg:x="10367" fg:w="64"/><text x="9.9518%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (64 samples, 0.06%)</title><rect x="9.7018%" y="805" width="0.0599%" height="15" fill="rgb(206,71,0)" fg:x="10367" fg:w="64"/><text x="9.9518%" y="815.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,888 samples, 1.77%)</title><rect x="8.0061%" y="917" width="1.7669%" height="15" fill="rgb(233,118,54)" fg:x="8555" fg:w="1888"/><text x="8.2561%" y="927.50"></text></g><g><title>event_listener::Event::notify (479 samples, 0.45%)</title><rect x="9.3247%" y="901" width="0.4483%" height="15" fill="rgb(234,83,48)" fg:x="9964" fg:w="479"/><text x="9.5747%" y="911.50"></text></g><g><title>event_listener::List::notify (479 samples, 0.45%)</title><rect x="9.3247%" y="885" width="0.4483%" height="15" fill="rgb(228,3,54)" fg:x="9964" fg:w="479"/><text x="9.5747%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (474 samples, 0.44%)</title><rect x="9.3294%" y="869" width="0.4436%" height="15" fill="rgb(226,155,13)" fg:x="9969" fg:w="474"/><text x="9.5794%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (474 samples, 0.44%)</title><rect x="9.3294%" y="853" width="0.4436%" height="15" fill="rgb(241,28,37)" fg:x="9969" fg:w="474"/><text x="9.5794%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (460 samples, 0.43%)</title><rect x="9.3425%" y="837" width="0.4305%" height="15" fill="rgb(233,93,10)" fg:x="9983" fg:w="460"/><text x="9.5925%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="9.7617%" y="821" width="0.0112%" height="15" fill="rgb(225,113,19)" fg:x="10431" fg:w="12"/><text x="10.0117%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="9.7617%" y="805" width="0.0112%" height="15" fill="rgb(241,2,18)" fg:x="10431" fg:w="12"/><text x="10.0117%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,926 samples, 1.80%)</title><rect x="7.9808%" y="997" width="1.8024%" height="15" fill="rgb(228,207,21)" fg:x="8528" fg:w="1926"/><text x="8.2308%" y="1007.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,926 samples, 1.80%)</title><rect x="7.9808%" y="981" width="1.8024%" height="15" fill="rgb(213,211,35)" fg:x="8528" fg:w="1926"/><text x="8.2308%" y="991.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,926 samples, 1.80%)</title><rect x="7.9808%" y="965" width="1.8024%" height="15" fill="rgb(209,83,10)" fg:x="8528" fg:w="1926"/><text x="8.2308%" y="975.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,926 samples, 1.80%)</title><rect x="7.9808%" y="949" width="1.8024%" height="15" fill="rgb(209,164,1)" fg:x="8528" fg:w="1926"/><text x="8.2308%" y="959.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,926 samples, 1.80%)</title><rect x="7.9808%" y="933" width="1.8024%" height="15" fill="rgb(213,184,43)" fg:x="8528" fg:w="1926"/><text x="8.2308%" y="943.50">&lt;..</text></g><g><title>event_listener::Event::listen (11 samples, 0.01%)</title><rect x="9.7730%" y="917" width="0.0103%" height="15" fill="rgb(231,61,34)" fg:x="10443" fg:w="11"/><text x="10.0230%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (188 samples, 0.18%)</title><rect x="9.9339%" y="517" width="0.1759%" height="15" fill="rgb(235,75,3)" fg:x="10615" fg:w="188"/><text x="10.1839%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (188 samples, 0.18%)</title><rect x="9.9339%" y="501" width="0.1759%" height="15" fill="rgb(220,106,47)" fg:x="10615" fg:w="188"/><text x="10.1839%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (179 samples, 0.17%)</title><rect x="9.9424%" y="485" width="0.1675%" height="15" fill="rgb(210,196,33)" fg:x="10624" fg:w="179"/><text x="10.1924%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (160 samples, 0.15%)</title><rect x="9.9601%" y="469" width="0.1497%" height="15" fill="rgb(229,154,42)" fg:x="10643" fg:w="160"/><text x="10.2101%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (160 samples, 0.15%)</title><rect x="9.9601%" y="453" width="0.1497%" height="15" fill="rgb(228,114,26)" fg:x="10643" fg:w="160"/><text x="10.2101%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (199 samples, 0.19%)</title><rect x="9.9274%" y="629" width="0.1862%" height="15" fill="rgb(208,144,1)" fg:x="10608" fg:w="199"/><text x="10.1774%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (199 samples, 0.19%)</title><rect x="9.9274%" y="613" width="0.1862%" height="15" fill="rgb(239,112,37)" fg:x="10608" fg:w="199"/><text x="10.1774%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (199 samples, 0.19%)</title><rect x="9.9274%" y="597" width="0.1862%" height="15" fill="rgb(210,96,50)" fg:x="10608" fg:w="199"/><text x="10.1774%" y="607.50"></text></g><g><title>alloc::alloc::alloc (198 samples, 0.19%)</title><rect x="9.9283%" y="581" width="0.1853%" height="15" fill="rgb(222,178,2)" fg:x="10609" fg:w="198"/><text x="10.1783%" y="591.50"></text></g><g><title>__rg_alloc (198 samples, 0.19%)</title><rect x="9.9283%" y="565" width="0.1853%" height="15" fill="rgb(226,74,18)" fg:x="10609" fg:w="198"/><text x="10.1783%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (198 samples, 0.19%)</title><rect x="9.9283%" y="549" width="0.1853%" height="15" fill="rgb(225,67,54)" fg:x="10609" fg:w="198"/><text x="10.1783%" y="559.50"></text></g><g><title>rust_alloc (198 samples, 0.19%)</title><rect x="9.9283%" y="533" width="0.1853%" height="15" fill="rgb(251,92,32)" fg:x="10609" fg:w="198"/><text x="10.1783%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (57 samples, 0.05%)</title><rect x="10.1988%" y="565" width="0.0533%" height="15" fill="rgb(228,149,22)" fg:x="10898" fg:w="57"/><text x="10.4488%" y="575.50"></text></g><g><title>core::cmp::PartialOrd::ge (57 samples, 0.05%)</title><rect x="10.1988%" y="549" width="0.0533%" height="15" fill="rgb(243,54,13)" fg:x="10898" fg:w="57"/><text x="10.4488%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (56 samples, 0.05%)</title><rect x="10.1997%" y="533" width="0.0524%" height="15" fill="rgb(243,180,28)" fg:x="10899" fg:w="56"/><text x="10.4497%" y="543.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (56 samples, 0.05%)</title><rect x="10.1997%" y="517" width="0.0524%" height="15" fill="rgb(208,167,24)" fg:x="10899" fg:w="56"/><text x="10.4497%" y="527.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (56 samples, 0.05%)</title><rect x="10.1997%" y="501" width="0.0524%" height="15" fill="rgb(245,73,45)" fg:x="10899" fg:w="56"/><text x="10.4497%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (34 samples, 0.03%)</title><rect x="10.2203%" y="485" width="0.0318%" height="15" fill="rgb(237,203,48)" fg:x="10921" fg:w="34"/><text x="10.4703%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (117 samples, 0.11%)</title><rect x="10.1604%" y="597" width="0.1095%" height="15" fill="rgb(211,197,16)" fg:x="10857" fg:w="117"/><text x="10.4104%" y="607.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (117 samples, 0.11%)</title><rect x="10.1604%" y="581" width="0.1095%" height="15" fill="rgb(243,99,51)" fg:x="10857" fg:w="117"/><text x="10.4104%" y="591.50"></text></g><g><title>core::time::Duration::new (19 samples, 0.02%)</title><rect x="10.2521%" y="565" width="0.0178%" height="15" fill="rgb(215,123,29)" fg:x="10955" fg:w="19"/><text x="10.5021%" y="575.50"></text></g><g><title>std::time::SystemTime::duration_since (128 samples, 0.12%)</title><rect x="10.1604%" y="613" width="0.1198%" height="15" fill="rgb(239,186,37)" fg:x="10857" fg:w="128"/><text x="10.4104%" y="623.50"></text></g><g><title>tremor_common::time::nanotime (11 samples, 0.01%)</title><rect x="10.2699%" y="597" width="0.0103%" height="15" fill="rgb(252,136,39)" fg:x="10974" fg:w="11"/><text x="10.5199%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (2,954 samples, 2.76%)</title><rect x="7.9808%" y="1013" width="2.7645%" height="15" fill="rgb(223,213,32)" fg:x="8528" fg:w="2954"/><text x="8.2308%" y="1023.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,028 samples, 0.96%)</title><rect x="9.7833%" y="997" width="0.9620%" height="15" fill="rgb(233,115,5)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="1007.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,028 samples, 0.96%)</title><rect x="9.7833%" y="981" width="0.9620%" height="15" fill="rgb(207,226,44)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="991.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,028 samples, 0.96%)</title><rect x="9.7833%" y="965" width="0.9620%" height="15" fill="rgb(208,126,0)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="975.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,028 samples, 0.96%)</title><rect x="9.7833%" y="949" width="0.9620%" height="15" fill="rgb(244,66,21)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="959.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,028 samples, 0.96%)</title><rect x="9.7833%" y="933" width="0.9620%" height="15" fill="rgb(222,97,12)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,028 samples, 0.96%)</title><rect x="9.7833%" y="917" width="0.9620%" height="15" fill="rgb(219,213,19)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="927.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,028 samples, 0.96%)</title><rect x="9.7833%" y="901" width="0.9620%" height="15" fill="rgb(252,169,30)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1,028 samples, 0.96%)</title><rect x="9.7833%" y="885" width="0.9620%" height="15" fill="rgb(206,32,51)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="895.50"></text></g><g><title>std::panicking::try (1,028 samples, 0.96%)</title><rect x="9.7833%" y="869" width="0.9620%" height="15" fill="rgb(250,172,42)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="879.50"></text></g><g><title>std::panicking::try::do_call (1,028 samples, 0.96%)</title><rect x="9.7833%" y="853" width="0.9620%" height="15" fill="rgb(209,34,43)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,028 samples, 0.96%)</title><rect x="9.7833%" y="837" width="0.9620%" height="15" fill="rgb(223,11,35)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,028 samples, 0.96%)</title><rect x="9.7833%" y="821" width="0.9620%" height="15" fill="rgb(251,219,26)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="831.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,028 samples, 0.96%)</title><rect x="9.7833%" y="805" width="0.9620%" height="15" fill="rgb(231,119,3)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="815.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,028 samples, 0.96%)</title><rect x="9.7833%" y="789" width="0.9620%" height="15" fill="rgb(216,97,11)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,028 samples, 0.96%)</title><rect x="9.7833%" y="773" width="0.9620%" height="15" fill="rgb(223,59,9)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,028 samples, 0.96%)</title><rect x="9.7833%" y="757" width="0.9620%" height="15" fill="rgb(233,93,31)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="767.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,028 samples, 0.96%)</title><rect x="9.7833%" y="741" width="0.9620%" height="15" fill="rgb(239,81,33)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="751.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,028 samples, 0.96%)</title><rect x="9.7833%" y="725" width="0.9620%" height="15" fill="rgb(213,120,34)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="735.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,028 samples, 0.96%)</title><rect x="9.7833%" y="709" width="0.9620%" height="15" fill="rgb(243,49,53)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="719.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,028 samples, 0.96%)</title><rect x="9.7833%" y="693" width="0.9620%" height="15" fill="rgb(247,216,33)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="703.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,028 samples, 0.96%)</title><rect x="9.7833%" y="677" width="0.9620%" height="15" fill="rgb(226,26,14)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,028 samples, 0.96%)</title><rect x="9.7833%" y="661" width="0.9620%" height="15" fill="rgb(215,49,53)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="671.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,028 samples, 0.96%)</title><rect x="9.7833%" y="645" width="0.9620%" height="15" fill="rgb(245,162,40)" fg:x="10454" fg:w="1028"/><text x="10.0333%" y="655.50"></text></g><g><title>tremor_common::time::nanotime (654 samples, 0.61%)</title><rect x="10.1333%" y="629" width="0.6120%" height="15" fill="rgb(229,68,17)" fg:x="10828" fg:w="654"/><text x="10.3833%" y="639.50"></text></g><g><title>std::time::SystemTime::now (497 samples, 0.47%)</title><rect x="10.2802%" y="613" width="0.4651%" height="15" fill="rgb(213,182,10)" fg:x="10985" fg:w="497"/><text x="10.5302%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (497 samples, 0.47%)</title><rect x="10.2802%" y="597" width="0.4651%" height="15" fill="rgb(245,125,30)" fg:x="10985" fg:w="497"/><text x="10.5302%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::now (497 samples, 0.47%)</title><rect x="10.2802%" y="581" width="0.4651%" height="15" fill="rgb(232,202,2)" fg:x="10985" fg:w="497"/><text x="10.5302%" y="591.50"></text></g><g><title>__clock_gettime_2 (425 samples, 0.40%)</title><rect x="10.3476%" y="565" width="0.3977%" height="15" fill="rgb(237,140,51)" fg:x="11057" fg:w="425"/><text x="10.5976%" y="575.50"></text></g><g><title>__vdso_clock_gettime (393 samples, 0.37%)</title><rect x="10.3775%" y="549" width="0.3678%" height="15" fill="rgb(236,157,25)" fg:x="11089" fg:w="393"/><text x="10.6275%" y="559.50"></text></g><g><title>[[vdso]] (249 samples, 0.23%)</title><rect x="10.5123%" y="533" width="0.2330%" height="15" fill="rgb(219,209,0)" fg:x="11233" fg:w="249"/><text x="10.7623%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (11 samples, 0.01%)</title><rect x="10.7472%" y="261" width="0.0103%" height="15" fill="rgb(240,116,54)" fg:x="11484" fg:w="11"/><text x="10.9972%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (18 samples, 0.02%)</title><rect x="10.7453%" y="277" width="0.0168%" height="15" fill="rgb(216,10,36)" fg:x="11482" fg:w="18"/><text x="10.9953%" y="287.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="10.7640%" y="261" width="0.0103%" height="15" fill="rgb(222,72,44)" fg:x="11502" fg:w="11"/><text x="11.0140%" y="271.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (83 samples, 0.08%)</title><rect x="10.7453%" y="613" width="0.0777%" height="15" fill="rgb(232,159,9)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (83 samples, 0.08%)</title><rect x="10.7453%" y="597" width="0.0777%" height="15" fill="rgb(210,39,32)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="607.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (83 samples, 0.08%)</title><rect x="10.7453%" y="581" width="0.0777%" height="15" fill="rgb(216,194,45)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (83 samples, 0.08%)</title><rect x="10.7453%" y="565" width="0.0777%" height="15" fill="rgb(218,18,35)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (83 samples, 0.08%)</title><rect x="10.7453%" y="549" width="0.0777%" height="15" fill="rgb(207,83,51)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (83 samples, 0.08%)</title><rect x="10.7453%" y="533" width="0.0777%" height="15" fill="rgb(225,63,43)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (83 samples, 0.08%)</title><rect x="10.7453%" y="517" width="0.0777%" height="15" fill="rgb(207,57,36)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (83 samples, 0.08%)</title><rect x="10.7453%" y="501" width="0.0777%" height="15" fill="rgb(216,99,33)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (83 samples, 0.08%)</title><rect x="10.7453%" y="485" width="0.0777%" height="15" fill="rgb(225,42,16)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (83 samples, 0.08%)</title><rect x="10.7453%" y="469" width="0.0777%" height="15" fill="rgb(220,201,45)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.08%)</title><rect x="10.7453%" y="453" width="0.0777%" height="15" fill="rgb(225,33,4)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.08%)</title><rect x="10.7453%" y="437" width="0.0777%" height="15" fill="rgb(224,33,50)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="447.50"></text></g><g><title>alloc::alloc::alloc (83 samples, 0.08%)</title><rect x="10.7453%" y="421" width="0.0777%" height="15" fill="rgb(246,198,51)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="431.50"></text></g><g><title>__rg_alloc (83 samples, 0.08%)</title><rect x="10.7453%" y="405" width="0.0777%" height="15" fill="rgb(205,22,4)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="415.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (83 samples, 0.08%)</title><rect x="10.7453%" y="389" width="0.0777%" height="15" fill="rgb(206,3,8)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="399.50"></text></g><g><title>rust_alloc (83 samples, 0.08%)</title><rect x="10.7453%" y="373" width="0.0777%" height="15" fill="rgb(251,23,15)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.08%)</title><rect x="10.7453%" y="357" width="0.0777%" height="15" fill="rgb(252,88,28)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.08%)</title><rect x="10.7453%" y="341" width="0.0777%" height="15" fill="rgb(212,127,14)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.08%)</title><rect x="10.7453%" y="325" width="0.0777%" height="15" fill="rgb(247,145,37)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.08%)</title><rect x="10.7453%" y="309" width="0.0777%" height="15" fill="rgb(209,117,53)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (83 samples, 0.08%)</title><rect x="10.7453%" y="293" width="0.0777%" height="15" fill="rgb(212,90,42)" fg:x="11482" fg:w="83"/><text x="10.9953%" y="303.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (65 samples, 0.06%)</title><rect x="10.7621%" y="277" width="0.0608%" height="15" fill="rgb(218,164,37)" fg:x="11500" fg:w="65"/><text x="11.0121%" y="287.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (52 samples, 0.05%)</title><rect x="10.7743%" y="261" width="0.0487%" height="15" fill="rgb(246,65,34)" fg:x="11513" fg:w="52"/><text x="11.0243%" y="271.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (52 samples, 0.05%)</title><rect x="10.7743%" y="245" width="0.0487%" height="15" fill="rgb(231,100,33)" fg:x="11513" fg:w="52"/><text x="11.0243%" y="255.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (52 samples, 0.05%)</title><rect x="10.7743%" y="229" width="0.0487%" height="15" fill="rgb(228,126,14)" fg:x="11513" fg:w="52"/><text x="11.0243%" y="239.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="10.8342%" y="373" width="0.0112%" height="15" fill="rgb(215,173,21)" fg:x="11577" fg:w="12"/><text x="11.0842%" y="383.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (141 samples, 0.13%)</title><rect x="10.7453%" y="725" width="0.1320%" height="15" fill="rgb(210,6,40)" fg:x="11482" fg:w="141"/><text x="10.9953%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (141 samples, 0.13%)</title><rect x="10.7453%" y="709" width="0.1320%" height="15" fill="rgb(212,48,18)" fg:x="11482" fg:w="141"/><text x="10.9953%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (141 samples, 0.13%)</title><rect x="10.7453%" y="693" width="0.1320%" height="15" fill="rgb(230,214,11)" fg:x="11482" fg:w="141"/><text x="10.9953%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (141 samples, 0.13%)</title><rect x="10.7453%" y="677" width="0.1320%" height="15" fill="rgb(254,105,39)" fg:x="11482" fg:w="141"/><text x="10.9953%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (141 samples, 0.13%)</title><rect x="10.7453%" y="661" width="0.1320%" height="15" fill="rgb(245,158,5)" fg:x="11482" fg:w="141"/><text x="10.9953%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (141 samples, 0.13%)</title><rect x="10.7453%" y="645" width="0.1320%" height="15" fill="rgb(249,208,11)" fg:x="11482" fg:w="141"/><text x="10.9953%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (141 samples, 0.13%)</title><rect x="10.7453%" y="629" width="0.1320%" height="15" fill="rgb(210,39,28)" fg:x="11482" fg:w="141"/><text x="10.9953%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (58 samples, 0.05%)</title><rect x="10.8230%" y="613" width="0.0543%" height="15" fill="rgb(211,56,53)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (58 samples, 0.05%)</title><rect x="10.8230%" y="597" width="0.0543%" height="15" fill="rgb(226,201,30)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (58 samples, 0.05%)</title><rect x="10.8230%" y="581" width="0.0543%" height="15" fill="rgb(239,101,34)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (58 samples, 0.05%)</title><rect x="10.8230%" y="565" width="0.0543%" height="15" fill="rgb(226,209,5)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (58 samples, 0.05%)</title><rect x="10.8230%" y="549" width="0.0543%" height="15" fill="rgb(250,105,47)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="559.50"></text></g><g><title>alloc::alloc::alloc (58 samples, 0.05%)</title><rect x="10.8230%" y="533" width="0.0543%" height="15" fill="rgb(230,72,3)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="543.50"></text></g><g><title>__rg_alloc (58 samples, 0.05%)</title><rect x="10.8230%" y="517" width="0.0543%" height="15" fill="rgb(232,218,39)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (58 samples, 0.05%)</title><rect x="10.8230%" y="501" width="0.0543%" height="15" fill="rgb(248,166,6)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="511.50"></text></g><g><title>rust_alloc (58 samples, 0.05%)</title><rect x="10.8230%" y="485" width="0.0543%" height="15" fill="rgb(247,89,20)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="10.8230%" y="469" width="0.0543%" height="15" fill="rgb(248,130,54)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="10.8230%" y="453" width="0.0543%" height="15" fill="rgb(234,196,4)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="10.8230%" y="437" width="0.0543%" height="15" fill="rgb(250,143,31)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.05%)</title><rect x="10.8230%" y="421" width="0.0543%" height="15" fill="rgb(211,110,34)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (58 samples, 0.05%)</title><rect x="10.8230%" y="405" width="0.0543%" height="15" fill="rgb(215,124,48)" fg:x="11565" fg:w="58"/><text x="11.0730%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (48 samples, 0.04%)</title><rect x="10.8323%" y="389" width="0.0449%" height="15" fill="rgb(216,46,13)" fg:x="11575" fg:w="48"/><text x="11.0823%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (34 samples, 0.03%)</title><rect x="10.8454%" y="373" width="0.0318%" height="15" fill="rgb(205,184,25)" fg:x="11589" fg:w="34"/><text x="11.0954%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="10.8454%" y="357" width="0.0318%" height="15" fill="rgb(228,1,10)" fg:x="11589" fg:w="34"/><text x="11.0954%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="10.8454%" y="341" width="0.0318%" height="15" fill="rgb(213,116,27)" fg:x="11589" fg:w="34"/><text x="11.0954%" y="351.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (142 samples, 0.13%)</title><rect x="10.7453%" y="981" width="0.1329%" height="15" fill="rgb(241,95,50)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="991.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.13%)</title><rect x="10.7453%" y="965" width="0.1329%" height="15" fill="rgb(238,48,32)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="975.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.13%)</title><rect x="10.7453%" y="949" width="0.1329%" height="15" fill="rgb(235,113,49)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="959.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (142 samples, 0.13%)</title><rect x="10.7453%" y="933" width="0.1329%" height="15" fill="rgb(205,127,43)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (142 samples, 0.13%)</title><rect x="10.7453%" y="917" width="0.1329%" height="15" fill="rgb(250,162,2)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="927.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (142 samples, 0.13%)</title><rect x="10.7453%" y="901" width="0.1329%" height="15" fill="rgb(220,13,41)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="911.50"></text></g><g><title>std::panic::catch_unwind (142 samples, 0.13%)</title><rect x="10.7453%" y="885" width="0.1329%" height="15" fill="rgb(249,221,25)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="895.50"></text></g><g><title>std::panicking::try (142 samples, 0.13%)</title><rect x="10.7453%" y="869" width="0.1329%" height="15" fill="rgb(215,208,19)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="879.50"></text></g><g><title>std::panicking::try::do_call (142 samples, 0.13%)</title><rect x="10.7453%" y="853" width="0.1329%" height="15" fill="rgb(236,175,2)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (142 samples, 0.13%)</title><rect x="10.7453%" y="837" width="0.1329%" height="15" fill="rgb(241,52,2)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (142 samples, 0.13%)</title><rect x="10.7453%" y="821" width="0.1329%" height="15" fill="rgb(248,140,14)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="831.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (142 samples, 0.13%)</title><rect x="10.7453%" y="805" width="0.1329%" height="15" fill="rgb(253,22,42)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="815.50"></text></g><g><title>async_ffi::FfiContext::with_context (142 samples, 0.13%)</title><rect x="10.7453%" y="789" width="0.1329%" height="15" fill="rgb(234,61,47)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (142 samples, 0.13%)</title><rect x="10.7453%" y="773" width="0.1329%" height="15" fill="rgb(208,226,15)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.13%)</title><rect x="10.7453%" y="757" width="0.1329%" height="15" fill="rgb(217,221,4)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="767.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (142 samples, 0.13%)</title><rect x="10.7453%" y="741" width="0.1329%" height="15" fill="rgb(212,174,34)" fg:x="11482" fg:w="142"/><text x="10.9953%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (108 samples, 0.10%)</title><rect x="10.9016%" y="917" width="0.1011%" height="15" fill="rgb(253,83,4)" fg:x="11649" fg:w="108"/><text x="11.1516%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (11 samples, 0.01%)</title><rect x="11.1402%" y="869" width="0.0103%" height="15" fill="rgb(250,195,49)" fg:x="11904" fg:w="11"/><text x="11.3902%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="11.1327%" y="885" width="0.0197%" height="15" fill="rgb(241,192,25)" fg:x="11896" fg:w="21"/><text x="11.3827%" y="895.50"></text></g><g><title>concurrent_queue::full_fence (12 samples, 0.01%)</title><rect x="11.4135%" y="837" width="0.0112%" height="15" fill="rgb(208,124,10)" fg:x="12196" fg:w="12"/><text x="11.6635%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (12 samples, 0.01%)</title><rect x="11.4135%" y="821" width="0.0112%" height="15" fill="rgb(222,33,0)" fg:x="12196" fg:w="12"/><text x="11.6635%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (12 samples, 0.01%)</title><rect x="11.4135%" y="805" width="0.0112%" height="15" fill="rgb(234,209,28)" fg:x="12196" fg:w="12"/><text x="11.6635%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="11.4135%" y="789" width="0.0112%" height="15" fill="rgb(224,11,23)" fg:x="12196" fg:w="12"/><text x="11.6635%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (312 samples, 0.29%)</title><rect x="11.4313%" y="837" width="0.2920%" height="15" fill="rgb(232,99,1)" fg:x="12215" fg:w="312"/><text x="11.6813%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (312 samples, 0.29%)</title><rect x="11.4313%" y="821" width="0.2920%" height="15" fill="rgb(237,95,45)" fg:x="12215" fg:w="312"/><text x="11.6813%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (444 samples, 0.42%)</title><rect x="11.7233%" y="837" width="0.4155%" height="15" fill="rgb(208,109,11)" fg:x="12527" fg:w="444"/><text x="11.9733%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (441 samples, 0.41%)</title><rect x="11.7261%" y="821" width="0.4127%" height="15" fill="rgb(216,190,48)" fg:x="12530" fg:w="441"/><text x="11.9761%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,036 samples, 0.97%)</title><rect x="11.1739%" y="869" width="0.9695%" height="15" fill="rgb(251,171,36)" fg:x="11940" fg:w="1036"/><text x="11.4239%" y="879.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (913 samples, 0.85%)</title><rect x="11.2890%" y="853" width="0.8544%" height="15" fill="rgb(230,62,22)" fg:x="12063" fg:w="913"/><text x="11.5390%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (64 samples, 0.06%)</title><rect x="12.1565%" y="853" width="0.0599%" height="15" fill="rgb(225,114,35)" fg:x="12990" fg:w="64"/><text x="12.4065%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (61 samples, 0.06%)</title><rect x="12.1594%" y="837" width="0.0571%" height="15" fill="rgb(215,118,42)" fg:x="12993" fg:w="61"/><text x="12.4094%" y="847.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.06%)</title><rect x="12.1594%" y="821" width="0.0571%" height="15" fill="rgb(243,119,21)" fg:x="12993" fg:w="61"/><text x="12.4094%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (59 samples, 0.06%)</title><rect x="12.1612%" y="805" width="0.0552%" height="15" fill="rgb(252,177,53)" fg:x="12995" fg:w="59"/><text x="12.4112%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (57 samples, 0.05%)</title><rect x="12.1631%" y="789" width="0.0533%" height="15" fill="rgb(237,209,29)" fg:x="12997" fg:w="57"/><text x="12.4131%" y="799.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (56 samples, 0.05%)</title><rect x="12.1640%" y="773" width="0.0524%" height="15" fill="rgb(212,65,23)" fg:x="12998" fg:w="56"/><text x="12.4140%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.02%)</title><rect x="12.2164%" y="853" width="0.0159%" height="15" fill="rgb(230,222,46)" fg:x="13054" fg:w="17"/><text x="12.4664%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.02%)</title><rect x="12.2164%" y="837" width="0.0159%" height="15" fill="rgb(215,135,32)" fg:x="13054" fg:w="17"/><text x="12.4664%" y="847.50"></text></g><g><title>event_listener::Inner::lock (76 samples, 0.07%)</title><rect x="12.2380%" y="853" width="0.0711%" height="15" fill="rgb(246,101,22)" fg:x="13077" fg:w="76"/><text x="12.4880%" y="863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (76 samples, 0.07%)</title><rect x="12.2380%" y="837" width="0.0711%" height="15" fill="rgb(206,107,13)" fg:x="13077" fg:w="76"/><text x="12.4880%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (73 samples, 0.07%)</title><rect x="12.2408%" y="821" width="0.0683%" height="15" fill="rgb(250,100,44)" fg:x="13080" fg:w="73"/><text x="12.4908%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (69 samples, 0.06%)</title><rect x="12.2445%" y="805" width="0.0646%" height="15" fill="rgb(231,147,38)" fg:x="13084" fg:w="69"/><text x="12.4945%" y="815.50"></text></g><g><title>__GI___pthread_mutex_lock (69 samples, 0.06%)</title><rect x="12.2445%" y="789" width="0.0646%" height="15" fill="rgb(229,8,40)" fg:x="13084" fg:w="69"/><text x="12.4945%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (15 samples, 0.01%)</title><rect x="12.3156%" y="805" width="0.0140%" height="15" fill="rgb(221,135,30)" fg:x="13160" fg:w="15"/><text x="12.5656%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.01%)</title><rect x="12.3156%" y="789" width="0.0140%" height="15" fill="rgb(249,193,18)" fg:x="13160" fg:w="15"/><text x="12.5656%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.01%)</title><rect x="12.3156%" y="773" width="0.0140%" height="15" fill="rgb(209,133,39)" fg:x="13160" fg:w="15"/><text x="12.5656%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (42 samples, 0.04%)</title><rect x="12.3306%" y="789" width="0.0393%" height="15" fill="rgb(232,100,14)" fg:x="13176" fg:w="42"/><text x="12.5806%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (42 samples, 0.04%)</title><rect x="12.3306%" y="773" width="0.0393%" height="15" fill="rgb(224,185,1)" fg:x="13176" fg:w="42"/><text x="12.5806%" y="783.50"></text></g><g><title>event_listener::List::notify (81 samples, 0.08%)</title><rect x="12.3091%" y="853" width="0.0758%" height="15" fill="rgb(223,139,8)" fg:x="13153" fg:w="81"/><text x="12.5591%" y="863.50"></text></g><g><title>core::task::wake::Waker::wake (75 samples, 0.07%)</title><rect x="12.3147%" y="837" width="0.0702%" height="15" fill="rgb(232,213,38)" fg:x="13159" fg:w="75"/><text x="12.5647%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (74 samples, 0.07%)</title><rect x="12.3156%" y="821" width="0.0693%" height="15" fill="rgb(207,94,22)" fg:x="13160" fg:w="74"/><text x="12.5656%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (59 samples, 0.06%)</title><rect x="12.3297%" y="805" width="0.0552%" height="15" fill="rgb(219,183,54)" fg:x="13175" fg:w="59"/><text x="12.5797%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (16 samples, 0.01%)</title><rect x="12.3699%" y="789" width="0.0150%" height="15" fill="rgb(216,185,54)" fg:x="13218" fg:w="16"/><text x="12.6199%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.01%)</title><rect x="12.3699%" y="773" width="0.0150%" height="15" fill="rgb(254,217,39)" fg:x="13218" fg:w="16"/><text x="12.6199%" y="783.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (1,985 samples, 1.86%)</title><rect x="11.1524%" y="885" width="1.8576%" height="15" fill="rgb(240,178,23)" fg:x="11917" fg:w="1985"/><text x="11.4024%" y="895.50">a..</text></g><g><title>event_listener::Event::notify (926 samples, 0.87%)</title><rect x="12.1434%" y="869" width="0.8666%" height="15" fill="rgb(218,11,47)" fg:x="12976" fg:w="926"/><text x="12.3934%" y="879.50"></text></g><g><title>event_listener::full_fence (668 samples, 0.63%)</title><rect x="12.3849%" y="853" width="0.6251%" height="15" fill="rgb(218,51,51)" fg:x="13234" fg:w="668"/><text x="12.6349%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (654 samples, 0.61%)</title><rect x="12.3980%" y="837" width="0.6120%" height="15" fill="rgb(238,126,27)" fg:x="13248" fg:w="654"/><text x="12.6480%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (654 samples, 0.61%)</title><rect x="12.3980%" y="821" width="0.6120%" height="15" fill="rgb(249,202,22)" fg:x="13248" fg:w="654"/><text x="12.6480%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (29 samples, 0.03%)</title><rect x="13.0100%" y="885" width="0.0271%" height="15" fill="rgb(254,195,49)" fg:x="13902" fg:w="29"/><text x="13.2600%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (39 samples, 0.04%)</title><rect x="13.0372%" y="885" width="0.0365%" height="15" fill="rgb(208,123,14)" fg:x="13931" fg:w="39"/><text x="13.2872%" y="895.50"></text></g><g><title>core::mem::replace (39 samples, 0.04%)</title><rect x="13.0372%" y="869" width="0.0365%" height="15" fill="rgb(224,200,8)" fg:x="13931" fg:w="39"/><text x="13.2872%" y="879.50"></text></g><g><title>core::ptr::write (36 samples, 0.03%)</title><rect x="13.0400%" y="853" width="0.0337%" height="15" fill="rgb(217,61,36)" fg:x="13934" fg:w="36"/><text x="13.2900%" y="863.50"></text></g><g><title>event_listener::Event::listen (36 samples, 0.03%)</title><rect x="13.0755%" y="885" width="0.0337%" height="15" fill="rgb(206,35,45)" fg:x="13972" fg:w="36"/><text x="13.3255%" y="895.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,366 samples, 2.21%)</title><rect x="11.0953%" y="901" width="2.2142%" height="15" fill="rgb(217,65,33)" fg:x="11856" fg:w="2366"/><text x="11.3453%" y="911.50">&lt;..</text></g><g><title>event_listener::Event::notify (214 samples, 0.20%)</title><rect x="13.1092%" y="885" width="0.2003%" height="15" fill="rgb(222,158,48)" fg:x="14008" fg:w="214"/><text x="13.3592%" y="895.50"></text></g><g><title>event_listener::full_fence (198 samples, 0.19%)</title><rect x="13.1242%" y="869" width="0.1853%" height="15" fill="rgb(254,2,54)" fg:x="14024" fg:w="198"/><text x="13.3742%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (191 samples, 0.18%)</title><rect x="13.1308%" y="853" width="0.1787%" height="15" fill="rgb(250,143,38)" fg:x="14031" fg:w="191"/><text x="13.3808%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (191 samples, 0.18%)</title><rect x="13.1308%" y="837" width="0.1787%" height="15" fill="rgb(248,25,0)" fg:x="14031" fg:w="191"/><text x="13.3808%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.01%)</title><rect x="13.3198%" y="837" width="0.0150%" height="15" fill="rgb(206,152,27)" fg:x="14233" fg:w="16"/><text x="13.5698%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.01%)</title><rect x="13.3198%" y="821" width="0.0150%" height="15" fill="rgb(240,77,30)" fg:x="14233" fg:w="16"/><text x="13.5698%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="13.3198%" y="805" width="0.0150%" height="15" fill="rgb(231,5,3)" fg:x="14233" fg:w="16"/><text x="13.5698%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.01%)</title><rect x="13.3198%" y="789" width="0.0150%" height="15" fill="rgb(207,226,32)" fg:x="14233" fg:w="16"/><text x="13.5698%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="13.3217%" y="773" width="0.0131%" height="15" fill="rgb(222,207,47)" fg:x="14235" fg:w="14"/><text x="13.5717%" y="783.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="13.3217%" y="757" width="0.0131%" height="15" fill="rgb(229,115,45)" fg:x="14235" fg:w="14"/><text x="13.5717%" y="767.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="13.3179%" y="853" width="0.0281%" height="15" fill="rgb(224,191,6)" fg:x="14231" fg:w="30"/><text x="13.5679%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,641 samples, 2.47%)</title><rect x="10.8782%" y="933" width="2.4716%" height="15" fill="rgb(230,227,24)" fg:x="11624" fg:w="2641"/><text x="11.1282%" y="943.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,508 samples, 2.35%)</title><rect x="11.0027%" y="917" width="2.3471%" height="15" fill="rgb(228,80,19)" fg:x="11757" fg:w="2508"/><text x="11.2527%" y="927.50">t..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (43 samples, 0.04%)</title><rect x="13.3095%" y="901" width="0.0402%" height="15" fill="rgb(247,229,0)" fg:x="14222" fg:w="43"/><text x="13.5595%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (35 samples, 0.03%)</title><rect x="13.3170%" y="885" width="0.0328%" height="15" fill="rgb(237,194,15)" fg:x="14230" fg:w="35"/><text x="13.5670%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (34 samples, 0.03%)</title><rect x="13.3179%" y="869" width="0.0318%" height="15" fill="rgb(219,203,20)" fg:x="14231" fg:w="34"/><text x="13.5679%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,668 samples, 2.50%)</title><rect x="10.8782%" y="965" width="2.4968%" height="15" fill="rgb(234,128,8)" fg:x="11624" fg:w="2668"/><text x="11.1282%" y="975.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (2,668 samples, 2.50%)</title><rect x="10.8782%" y="949" width="2.4968%" height="15" fill="rgb(248,202,8)" fg:x="11624" fg:w="2668"/><text x="11.1282%" y="959.50">tr..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (21 samples, 0.02%)</title><rect x="13.3554%" y="933" width="0.0197%" height="15" fill="rgb(206,104,37)" fg:x="14271" fg:w="21"/><text x="13.6054%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="14.0413%" y="949" width="0.0112%" height="15" fill="rgb(223,8,27)" fg:x="15004" fg:w="12"/><text x="14.2913%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="14.0526%" y="949" width="0.0309%" height="15" fill="rgb(216,217,28)" fg:x="15016" fg:w="33"/><text x="14.3026%" y="959.50"></text></g><g><title>core::ptr::read (18 samples, 0.02%)</title><rect x="14.0666%" y="933" width="0.0168%" height="15" fill="rgb(249,199,1)" fg:x="15031" fg:w="18"/><text x="14.3166%" y="943.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="14.0834%" y="949" width="0.0112%" height="15" fill="rgb(240,85,17)" fg:x="15049" fg:w="12"/><text x="14.3334%" y="959.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.02%)</title><rect x="14.5972%" y="901" width="0.0168%" height="15" fill="rgb(206,108,45)" fg:x="15598" fg:w="18"/><text x="14.8472%" y="911.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (11 samples, 0.01%)</title><rect x="14.6038%" y="885" width="0.0103%" height="15" fill="rgb(245,210,41)" fg:x="15605" fg:w="11"/><text x="14.8538%" y="895.50"></text></g><g><title>aligned_size (24 samples, 0.02%)</title><rect x="14.6468%" y="677" width="0.0225%" height="15" fill="rgb(206,13,37)" fg:x="15651" fg:w="24"/><text x="14.8968%" y="687.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="14.6749%" y="645" width="0.0112%" height="15" fill="rgb(250,61,18)" fg:x="15681" fg:w="12"/><text x="14.9249%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (304 samples, 0.28%)</title><rect x="14.6749%" y="677" width="0.2845%" height="15" fill="rgb(235,172,48)" fg:x="15681" fg:w="304"/><text x="14.9249%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (304 samples, 0.28%)</title><rect x="14.6749%" y="661" width="0.2845%" height="15" fill="rgb(249,201,17)" fg:x="15681" fg:w="304"/><text x="14.9249%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (284 samples, 0.27%)</title><rect x="14.6936%" y="645" width="0.2658%" height="15" fill="rgb(219,208,6)" fg:x="15701" fg:w="284"/><text x="14.9436%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::take (266 samples, 0.25%)</title><rect x="14.7105%" y="629" width="0.2489%" height="15" fill="rgb(248,31,23)" fg:x="15719" fg:w="266"/><text x="14.9605%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (266 samples, 0.25%)</title><rect x="14.7105%" y="613" width="0.2489%" height="15" fill="rgb(245,15,42)" fg:x="15719" fg:w="266"/><text x="14.9605%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (376 samples, 0.35%)</title><rect x="14.6141%" y="789" width="0.3519%" height="15" fill="rgb(222,217,39)" fg:x="15616" fg:w="376"/><text x="14.8641%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (376 samples, 0.35%)</title><rect x="14.6141%" y="773" width="0.3519%" height="15" fill="rgb(210,219,27)" fg:x="15616" fg:w="376"/><text x="14.8641%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (376 samples, 0.35%)</title><rect x="14.6141%" y="757" width="0.3519%" height="15" fill="rgb(252,166,36)" fg:x="15616" fg:w="376"/><text x="14.8641%" y="767.50"></text></g><g><title>alloc::alloc::alloc (362 samples, 0.34%)</title><rect x="14.6272%" y="741" width="0.3388%" height="15" fill="rgb(245,132,34)" fg:x="15630" fg:w="362"/><text x="14.8772%" y="751.50"></text></g><g><title>__rg_alloc (362 samples, 0.34%)</title><rect x="14.6272%" y="725" width="0.3388%" height="15" fill="rgb(236,54,3)" fg:x="15630" fg:w="362"/><text x="14.8772%" y="735.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (362 samples, 0.34%)</title><rect x="14.6272%" y="709" width="0.3388%" height="15" fill="rgb(241,173,43)" fg:x="15630" fg:w="362"/><text x="14.8772%" y="719.50"></text></g><g><title>rust_alloc (341 samples, 0.32%)</title><rect x="14.6468%" y="693" width="0.3191%" height="15" fill="rgb(215,190,9)" fg:x="15651" fg:w="341"/><text x="14.8968%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (381 samples, 0.36%)</title><rect x="14.6141%" y="821" width="0.3566%" height="15" fill="rgb(242,101,16)" fg:x="15616" fg:w="381"/><text x="14.8641%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (381 samples, 0.36%)</title><rect x="14.6141%" y="805" width="0.3566%" height="15" fill="rgb(223,190,21)" fg:x="15616" fg:w="381"/><text x="14.8641%" y="815.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (514 samples, 0.48%)</title><rect x="14.5776%" y="933" width="0.4810%" height="15" fill="rgb(215,228,25)" fg:x="15577" fg:w="514"/><text x="14.8276%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (500 samples, 0.47%)</title><rect x="14.5907%" y="917" width="0.4679%" height="15" fill="rgb(225,36,22)" fg:x="15591" fg:w="500"/><text x="14.8407%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (475 samples, 0.44%)</title><rect x="14.6141%" y="901" width="0.4445%" height="15" fill="rgb(251,106,46)" fg:x="15616" fg:w="475"/><text x="14.8641%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (475 samples, 0.44%)</title><rect x="14.6141%" y="885" width="0.4445%" height="15" fill="rgb(208,90,1)" fg:x="15616" fg:w="475"/><text x="14.8641%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (475 samples, 0.44%)</title><rect x="14.6141%" y="869" width="0.4445%" height="15" fill="rgb(243,10,4)" fg:x="15616" fg:w="475"/><text x="14.8641%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (475 samples, 0.44%)</title><rect x="14.6141%" y="853" width="0.4445%" height="15" fill="rgb(212,137,27)" fg:x="15616" fg:w="475"/><text x="14.8641%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (475 samples, 0.44%)</title><rect x="14.6141%" y="837" width="0.4445%" height="15" fill="rgb(231,220,49)" fg:x="15616" fg:w="475"/><text x="14.8641%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (94 samples, 0.09%)</title><rect x="14.9706%" y="821" width="0.0880%" height="15" fill="rgb(237,96,20)" fg:x="15997" fg:w="94"/><text x="15.2206%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (94 samples, 0.09%)</title><rect x="14.9706%" y="805" width="0.0880%" height="15" fill="rgb(239,229,30)" fg:x="15997" fg:w="94"/><text x="15.2206%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (70 samples, 0.07%)</title><rect x="14.9931%" y="789" width="0.0655%" height="15" fill="rgb(219,65,33)" fg:x="16021" fg:w="70"/><text x="15.2431%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (47 samples, 0.04%)</title><rect x="15.0923%" y="917" width="0.0440%" height="15" fill="rgb(243,134,7)" fg:x="16127" fg:w="47"/><text x="15.3423%" y="927.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (24 samples, 0.02%)</title><rect x="15.1138%" y="901" width="0.0225%" height="15" fill="rgb(216,177,54)" fg:x="16150" fg:w="24"/><text x="15.3638%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (90 samples, 0.08%)</title><rect x="15.1718%" y="581" width="0.0842%" height="15" fill="rgb(211,160,20)" fg:x="16212" fg:w="90"/><text x="15.4218%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (90 samples, 0.08%)</title><rect x="15.1718%" y="565" width="0.0842%" height="15" fill="rgb(239,85,39)" fg:x="16212" fg:w="90"/><text x="15.4218%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (84 samples, 0.08%)</title><rect x="15.1774%" y="549" width="0.0786%" height="15" fill="rgb(232,125,22)" fg:x="16218" fg:w="84"/><text x="15.4274%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::take (74 samples, 0.07%)</title><rect x="15.1868%" y="533" width="0.0693%" height="15" fill="rgb(244,57,34)" fg:x="16228" fg:w="74"/><text x="15.4368%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (74 samples, 0.07%)</title><rect x="15.1868%" y="517" width="0.0693%" height="15" fill="rgb(214,203,32)" fg:x="16228" fg:w="74"/><text x="15.4368%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (130 samples, 0.12%)</title><rect x="15.1419%" y="725" width="0.1217%" height="15" fill="rgb(207,58,43)" fg:x="16180" fg:w="130"/><text x="15.3919%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (130 samples, 0.12%)</title><rect x="15.1419%" y="709" width="0.1217%" height="15" fill="rgb(215,193,15)" fg:x="16180" fg:w="130"/><text x="15.3919%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (122 samples, 0.11%)</title><rect x="15.1494%" y="693" width="0.1142%" height="15" fill="rgb(232,15,44)" fg:x="16188" fg:w="122"/><text x="15.3994%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (122 samples, 0.11%)</title><rect x="15.1494%" y="677" width="0.1142%" height="15" fill="rgb(212,3,48)" fg:x="16188" fg:w="122"/><text x="15.3994%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (122 samples, 0.11%)</title><rect x="15.1494%" y="661" width="0.1142%" height="15" fill="rgb(218,128,7)" fg:x="16188" fg:w="122"/><text x="15.3994%" y="671.50"></text></g><g><title>alloc::alloc::alloc (119 samples, 0.11%)</title><rect x="15.1522%" y="645" width="0.1114%" height="15" fill="rgb(226,216,39)" fg:x="16191" fg:w="119"/><text x="15.4022%" y="655.50"></text></g><g><title>__rg_alloc (119 samples, 0.11%)</title><rect x="15.1522%" y="629" width="0.1114%" height="15" fill="rgb(243,47,51)" fg:x="16191" fg:w="119"/><text x="15.4022%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (119 samples, 0.11%)</title><rect x="15.1522%" y="613" width="0.1114%" height="15" fill="rgb(241,183,40)" fg:x="16191" fg:w="119"/><text x="15.4022%" y="623.50"></text></g><g><title>rust_alloc (108 samples, 0.10%)</title><rect x="15.1625%" y="597" width="0.1011%" height="15" fill="rgb(231,217,32)" fg:x="16202" fg:w="108"/><text x="15.4125%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (201 samples, 0.19%)</title><rect x="15.1363%" y="837" width="0.1881%" height="15" fill="rgb(229,61,38)" fg:x="16174" fg:w="201"/><text x="15.3863%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (201 samples, 0.19%)</title><rect x="15.1363%" y="821" width="0.1881%" height="15" fill="rgb(225,210,5)" fg:x="16174" fg:w="201"/><text x="15.3863%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (195 samples, 0.18%)</title><rect x="15.1419%" y="805" width="0.1825%" height="15" fill="rgb(231,79,45)" fg:x="16180" fg:w="195"/><text x="15.3919%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (195 samples, 0.18%)</title><rect x="15.1419%" y="789" width="0.1825%" height="15" fill="rgb(224,100,7)" fg:x="16180" fg:w="195"/><text x="15.3919%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (195 samples, 0.18%)</title><rect x="15.1419%" y="773" width="0.1825%" height="15" fill="rgb(241,198,18)" fg:x="16180" fg:w="195"/><text x="15.3919%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (195 samples, 0.18%)</title><rect x="15.1419%" y="757" width="0.1825%" height="15" fill="rgb(252,97,53)" fg:x="16180" fg:w="195"/><text x="15.3919%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (195 samples, 0.18%)</title><rect x="15.1419%" y="741" width="0.1825%" height="15" fill="rgb(220,88,7)" fg:x="16180" fg:w="195"/><text x="15.3919%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (65 samples, 0.06%)</title><rect x="15.2635%" y="725" width="0.0608%" height="15" fill="rgb(213,176,14)" fg:x="16310" fg:w="65"/><text x="15.5135%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (58 samples, 0.05%)</title><rect x="15.2701%" y="709" width="0.0543%" height="15" fill="rgb(246,73,7)" fg:x="16317" fg:w="58"/><text x="15.5201%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (44 samples, 0.04%)</title><rect x="15.2832%" y="693" width="0.0412%" height="15" fill="rgb(245,64,36)" fg:x="16331" fg:w="44"/><text x="15.5332%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (161 samples, 0.15%)</title><rect x="15.3655%" y="693" width="0.1507%" height="15" fill="rgb(245,80,10)" fg:x="16419" fg:w="161"/><text x="15.6155%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (161 samples, 0.15%)</title><rect x="15.3655%" y="677" width="0.1507%" height="15" fill="rgb(232,107,50)" fg:x="16419" fg:w="161"/><text x="15.6155%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (153 samples, 0.14%)</title><rect x="15.3730%" y="661" width="0.1432%" height="15" fill="rgb(253,3,0)" fg:x="16427" fg:w="153"/><text x="15.6230%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (132 samples, 0.12%)</title><rect x="15.3927%" y="645" width="0.1235%" height="15" fill="rgb(212,99,53)" fg:x="16448" fg:w="132"/><text x="15.6427%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (132 samples, 0.12%)</title><rect x="15.3927%" y="629" width="0.1235%" height="15" fill="rgb(249,111,54)" fg:x="16448" fg:w="132"/><text x="15.6427%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (186 samples, 0.17%)</title><rect x="15.3450%" y="789" width="0.1741%" height="15" fill="rgb(249,55,30)" fg:x="16397" fg:w="186"/><text x="15.5950%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (186 samples, 0.17%)</title><rect x="15.3450%" y="773" width="0.1741%" height="15" fill="rgb(237,47,42)" fg:x="16397" fg:w="186"/><text x="15.5950%" y="783.50"></text></g><g><title>alloc::alloc::alloc (173 samples, 0.16%)</title><rect x="15.3571%" y="757" width="0.1619%" height="15" fill="rgb(211,20,18)" fg:x="16410" fg:w="173"/><text x="15.6071%" y="767.50"></text></g><g><title>__rg_alloc (173 samples, 0.16%)</title><rect x="15.3571%" y="741" width="0.1619%" height="15" fill="rgb(231,203,46)" fg:x="16410" fg:w="173"/><text x="15.6071%" y="751.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (173 samples, 0.16%)</title><rect x="15.3571%" y="725" width="0.1619%" height="15" fill="rgb(237,142,3)" fg:x="16410" fg:w="173"/><text x="15.6071%" y="735.50"></text></g><g><title>rust_alloc (173 samples, 0.16%)</title><rect x="15.3571%" y="709" width="0.1619%" height="15" fill="rgb(241,107,1)" fg:x="16410" fg:w="173"/><text x="15.6071%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (207 samples, 0.19%)</title><rect x="15.3318%" y="837" width="0.1937%" height="15" fill="rgb(229,83,13)" fg:x="16383" fg:w="207"/><text x="15.5818%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (194 samples, 0.18%)</title><rect x="15.3440%" y="821" width="0.1816%" height="15" fill="rgb(241,91,40)" fg:x="16396" fg:w="194"/><text x="15.5940%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (193 samples, 0.18%)</title><rect x="15.3450%" y="805" width="0.1806%" height="15" fill="rgb(225,3,45)" fg:x="16397" fg:w="193"/><text x="15.5950%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (431 samples, 0.40%)</title><rect x="15.1363%" y="853" width="0.4033%" height="15" fill="rgb(244,223,14)" fg:x="16174" fg:w="431"/><text x="15.3863%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (15 samples, 0.01%)</title><rect x="15.5256%" y="837" width="0.0140%" height="15" fill="rgb(224,124,37)" fg:x="16590" fg:w="15"/><text x="15.7756%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (533 samples, 0.50%)</title><rect x="15.0586%" y="933" width="0.4988%" height="15" fill="rgb(251,171,30)" fg:x="16091" fg:w="533"/><text x="15.3086%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (450 samples, 0.42%)</title><rect x="15.1363%" y="917" width="0.4211%" height="15" fill="rgb(236,46,54)" fg:x="16174" fg:w="450"/><text x="15.3863%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (450 samples, 0.42%)</title><rect x="15.1363%" y="901" width="0.4211%" height="15" fill="rgb(245,213,5)" fg:x="16174" fg:w="450"/><text x="15.3863%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (450 samples, 0.42%)</title><rect x="15.1363%" y="885" width="0.4211%" height="15" fill="rgb(230,144,27)" fg:x="16174" fg:w="450"/><text x="15.3863%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (450 samples, 0.42%)</title><rect x="15.1363%" y="869" width="0.4211%" height="15" fill="rgb(220,86,6)" fg:x="16174" fg:w="450"/><text x="15.3863%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (19 samples, 0.02%)</title><rect x="15.5396%" y="853" width="0.0178%" height="15" fill="rgb(240,20,13)" fg:x="16605" fg:w="19"/><text x="15.7896%" y="863.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,578 samples, 1.48%)</title><rect x="14.0947%" y="949" width="1.4768%" height="15" fill="rgb(217,89,34)" fg:x="15061" fg:w="1578"/><text x="14.3447%" y="959.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (15 samples, 0.01%)</title><rect x="15.5574%" y="933" width="0.0140%" height="15" fill="rgb(229,13,5)" fg:x="16624" fg:w="15"/><text x="15.8074%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (244 samples, 0.23%)</title><rect x="15.5714%" y="949" width="0.2283%" height="15" fill="rgb(244,67,35)" fg:x="16639" fg:w="244"/><text x="15.8214%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (17 samples, 0.02%)</title><rect x="15.7998%" y="949" width="0.0159%" height="15" fill="rgb(221,40,2)" fg:x="16883" fg:w="17"/><text x="16.0498%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (17 samples, 0.02%)</title><rect x="15.7998%" y="933" width="0.0159%" height="15" fill="rgb(237,157,21)" fg:x="16883" fg:w="17"/><text x="16.0498%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (12 samples, 0.01%)</title><rect x="15.8044%" y="917" width="0.0112%" height="15" fill="rgb(222,94,11)" fg:x="16888" fg:w="12"/><text x="16.0544%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (358 samples, 0.34%)</title><rect x="15.8157%" y="949" width="0.3350%" height="15" fill="rgb(249,113,6)" fg:x="16900" fg:w="358"/><text x="16.0657%" y="959.50"></text></g><g><title>core::ptr::write (322 samples, 0.30%)</title><rect x="15.8494%" y="933" width="0.3013%" height="15" fill="rgb(238,137,36)" fg:x="16936" fg:w="322"/><text x="16.0994%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (314 samples, 0.29%)</title><rect x="15.8569%" y="917" width="0.2939%" height="15" fill="rgb(210,102,26)" fg:x="16944" fg:w="314"/><text x="16.1069%" y="927.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="16.1778%" y="757" width="0.0112%" height="15" fill="rgb(218,30,30)" fg:x="17287" fg:w="12"/><text x="16.4278%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (31 samples, 0.03%)</title><rect x="16.2200%" y="709" width="0.0290%" height="15" fill="rgb(214,67,26)" fg:x="17332" fg:w="31"/><text x="16.4700%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (31 samples, 0.03%)</title><rect x="16.2200%" y="693" width="0.0290%" height="15" fill="rgb(251,9,53)" fg:x="17332" fg:w="31"/><text x="16.4700%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (51 samples, 0.05%)</title><rect x="16.2022%" y="741" width="0.0477%" height="15" fill="rgb(228,204,25)" fg:x="17313" fg:w="51"/><text x="16.4522%" y="751.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (43 samples, 0.04%)</title><rect x="16.2097%" y="725" width="0.0402%" height="15" fill="rgb(207,153,8)" fg:x="17321" fg:w="43"/><text x="16.4597%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="16.2536%" y="693" width="0.0281%" height="15" fill="rgb(242,9,16)" fg:x="17368" fg:w="30"/><text x="16.5036%" y="703.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (22 samples, 0.02%)</title><rect x="16.2611%" y="677" width="0.0206%" height="15" fill="rgb(217,211,10)" fg:x="17376" fg:w="22"/><text x="16.5111%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (12 samples, 0.01%)</title><rect x="16.2705%" y="661" width="0.0112%" height="15" fill="rgb(219,228,52)" fg:x="17386" fg:w="12"/><text x="16.5205%" y="671.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="16.2705%" y="645" width="0.0112%" height="15" fill="rgb(231,92,29)" fg:x="17386" fg:w="12"/><text x="16.5205%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (35 samples, 0.03%)</title><rect x="16.2499%" y="741" width="0.0328%" height="15" fill="rgb(232,8,23)" fg:x="17364" fg:w="35"/><text x="16.4999%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="16.2508%" y="725" width="0.0318%" height="15" fill="rgb(216,211,34)" fg:x="17365" fg:w="34"/><text x="16.5008%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="16.2536%" y="709" width="0.0290%" height="15" fill="rgb(236,151,0)" fg:x="17368" fg:w="31"/><text x="16.5036%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (285 samples, 0.27%)</title><rect x="16.1629%" y="885" width="0.2667%" height="15" fill="rgb(209,168,3)" fg:x="17271" fg:w="285"/><text x="16.4129%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (285 samples, 0.27%)</title><rect x="16.1629%" y="869" width="0.2667%" height="15" fill="rgb(208,129,28)" fg:x="17271" fg:w="285"/><text x="16.4129%" y="879.50"></text></g><g><title>alloc::alloc::alloc (276 samples, 0.26%)</title><rect x="16.1713%" y="853" width="0.2583%" height="15" fill="rgb(229,78,22)" fg:x="17280" fg:w="276"/><text x="16.4213%" y="863.50"></text></g><g><title>__rg_alloc (276 samples, 0.26%)</title><rect x="16.1713%" y="837" width="0.2583%" height="15" fill="rgb(228,187,13)" fg:x="17280" fg:w="276"/><text x="16.4213%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (276 samples, 0.26%)</title><rect x="16.1713%" y="821" width="0.2583%" height="15" fill="rgb(240,119,24)" fg:x="17280" fg:w="276"/><text x="16.4213%" y="831.50"></text></g><g><title>rust_alloc (276 samples, 0.26%)</title><rect x="16.1713%" y="805" width="0.2583%" height="15" fill="rgb(209,194,42)" fg:x="17280" fg:w="276"/><text x="16.4213%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (269 samples, 0.25%)</title><rect x="16.1778%" y="789" width="0.2517%" height="15" fill="rgb(247,200,46)" fg:x="17287" fg:w="269"/><text x="16.4278%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (269 samples, 0.25%)</title><rect x="16.1778%" y="773" width="0.2517%" height="15" fill="rgb(218,76,16)" fg:x="17287" fg:w="269"/><text x="16.4278%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (257 samples, 0.24%)</title><rect x="16.1891%" y="757" width="0.2405%" height="15" fill="rgb(225,21,48)" fg:x="17299" fg:w="257"/><text x="16.4391%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (153 samples, 0.14%)</title><rect x="16.2864%" y="741" width="0.1432%" height="15" fill="rgb(239,223,50)" fg:x="17403" fg:w="153"/><text x="16.5364%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (153 samples, 0.14%)</title><rect x="16.2864%" y="725" width="0.1432%" height="15" fill="rgb(244,45,21)" fg:x="17403" fg:w="153"/><text x="16.5364%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (12 samples, 0.01%)</title><rect x="16.4296%" y="885" width="0.0112%" height="15" fill="rgb(232,33,43)" fg:x="17556" fg:w="12"/><text x="16.6796%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (307 samples, 0.29%)</title><rect x="16.1629%" y="901" width="0.2873%" height="15" fill="rgb(209,8,3)" fg:x="17271" fg:w="307"/><text x="16.4129%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (330 samples, 0.31%)</title><rect x="16.1507%" y="949" width="0.3088%" height="15" fill="rgb(214,25,53)" fg:x="17258" fg:w="330"/><text x="16.4007%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (330 samples, 0.31%)</title><rect x="16.1507%" y="933" width="0.3088%" height="15" fill="rgb(254,186,54)" fg:x="17258" fg:w="330"/><text x="16.4007%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (317 samples, 0.30%)</title><rect x="16.1629%" y="917" width="0.2967%" height="15" fill="rgb(208,174,49)" fg:x="17271" fg:w="317"/><text x="16.4129%" y="927.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="16.4820%" y="757" width="0.0103%" height="15" fill="rgb(233,191,51)" fg:x="17612" fg:w="11"/><text x="16.7320%" y="767.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="16.4942%" y="693" width="0.0140%" height="15" fill="rgb(222,134,10)" fg:x="17625" fg:w="15"/><text x="16.7442%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (56 samples, 0.05%)</title><rect x="16.5653%" y="645" width="0.0524%" height="15" fill="rgb(230,226,20)" fg:x="17701" fg:w="56"/><text x="16.8153%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (50 samples, 0.05%)</title><rect x="16.5709%" y="629" width="0.0468%" height="15" fill="rgb(251,111,25)" fg:x="17707" fg:w="50"/><text x="16.8209%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (125 samples, 0.12%)</title><rect x="16.5119%" y="693" width="0.1170%" height="15" fill="rgb(224,40,46)" fg:x="17644" fg:w="125"/><text x="16.7619%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (125 samples, 0.12%)</title><rect x="16.5119%" y="677" width="0.1170%" height="15" fill="rgb(236,108,47)" fg:x="17644" fg:w="125"/><text x="16.7619%" y="687.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (125 samples, 0.12%)</title><rect x="16.5119%" y="661" width="0.1170%" height="15" fill="rgb(234,93,0)" fg:x="17644" fg:w="125"/><text x="16.7619%" y="671.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="16.6177%" y="645" width="0.0112%" height="15" fill="rgb(224,213,32)" fg:x="17757" fg:w="12"/><text x="16.8677%" y="655.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="16.6177%" y="629" width="0.0112%" height="15" fill="rgb(251,11,48)" fg:x="17757" fg:w="12"/><text x="16.8677%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (172 samples, 0.16%)</title><rect x="16.4932%" y="725" width="0.1610%" height="15" fill="rgb(236,173,5)" fg:x="17624" fg:w="172"/><text x="16.7432%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (172 samples, 0.16%)</title><rect x="16.4932%" y="709" width="0.1610%" height="15" fill="rgb(230,95,12)" fg:x="17624" fg:w="172"/><text x="16.7432%" y="719.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (27 samples, 0.03%)</title><rect x="16.6289%" y="693" width="0.0253%" height="15" fill="rgb(232,209,1)" fg:x="17769" fg:w="27"/><text x="16.8789%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (179 samples, 0.17%)</title><rect x="16.4932%" y="757" width="0.1675%" height="15" fill="rgb(232,6,1)" fg:x="17624" fg:w="179"/><text x="16.7432%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (179 samples, 0.17%)</title><rect x="16.4932%" y="741" width="0.1675%" height="15" fill="rgb(210,224,50)" fg:x="17624" fg:w="179"/><text x="16.7432%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (194 samples, 0.18%)</title><rect x="16.4811%" y="773" width="0.1816%" height="15" fill="rgb(228,127,35)" fg:x="17611" fg:w="194"/><text x="16.7311%" y="783.50"></text></g><g><title>rust_dealloc (220 samples, 0.21%)</title><rect x="16.4680%" y="789" width="0.2059%" height="15" fill="rgb(245,102,45)" fg:x="17597" fg:w="220"/><text x="16.7180%" y="799.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="16.6626%" y="773" width="0.0112%" height="15" fill="rgb(214,1,49)" fg:x="17805" fg:w="12"/><text x="16.9126%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (232 samples, 0.22%)</title><rect x="16.4595%" y="853" width="0.2171%" height="15" fill="rgb(226,163,40)" fg:x="17588" fg:w="232"/><text x="16.7095%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (231 samples, 0.22%)</title><rect x="16.4605%" y="837" width="0.2162%" height="15" fill="rgb(239,212,28)" fg:x="17589" fg:w="231"/><text x="16.7105%" y="847.50"></text></g><g><title>__rg_dealloc (231 samples, 0.22%)</title><rect x="16.4605%" y="821" width="0.2162%" height="15" fill="rgb(220,20,13)" fg:x="17589" fg:w="231"/><text x="16.7105%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (231 samples, 0.22%)</title><rect x="16.4605%" y="805" width="0.2162%" height="15" fill="rgb(210,164,35)" fg:x="17589" fg:w="231"/><text x="16.7105%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (244 samples, 0.23%)</title><rect x="16.4595%" y="917" width="0.2283%" height="15" fill="rgb(248,109,41)" fg:x="17588" fg:w="244"/><text x="16.7095%" y="927.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (244 samples, 0.23%)</title><rect x="16.4595%" y="901" width="0.2283%" height="15" fill="rgb(238,23,50)" fg:x="17588" fg:w="244"/><text x="16.7095%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (244 samples, 0.23%)</title><rect x="16.4595%" y="885" width="0.2283%" height="15" fill="rgb(211,48,49)" fg:x="17588" fg:w="244"/><text x="16.7095%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (244 samples, 0.23%)</title><rect x="16.4595%" y="869" width="0.2283%" height="15" fill="rgb(223,36,21)" fg:x="17588" fg:w="244"/><text x="16.7095%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="16.6766%" y="853" width="0.0112%" height="15" fill="rgb(207,123,46)" fg:x="17820" fg:w="12"/><text x="16.9266%" y="863.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (250 samples, 0.23%)</title><rect x="16.4595%" y="933" width="0.2340%" height="15" fill="rgb(240,218,32)" fg:x="17588" fg:w="250"/><text x="16.7095%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (252 samples, 0.24%)</title><rect x="16.4595%" y="949" width="0.2358%" height="15" fill="rgb(252,5,43)" fg:x="17588" fg:w="252"/><text x="16.7095%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="16.7150%" y="789" width="0.0187%" height="15" fill="rgb(252,84,19)" fg:x="17861" fg:w="20"/><text x="16.9650%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="16.7150%" y="773" width="0.0187%" height="15" fill="rgb(243,152,39)" fg:x="17861" fg:w="20"/><text x="16.9650%" y="783.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="16.7150%" y="757" width="0.0187%" height="15" fill="rgb(234,160,15)" fg:x="17861" fg:w="20"/><text x="16.9650%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="16.7150%" y="741" width="0.0187%" height="15" fill="rgb(237,34,20)" fg:x="17861" fg:w="20"/><text x="16.9650%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (33 samples, 0.03%)</title><rect x="16.7047%" y="885" width="0.0309%" height="15" fill="rgb(229,97,13)" fg:x="17850" fg:w="33"/><text x="16.9547%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (33 samples, 0.03%)</title><rect x="16.7047%" y="869" width="0.0309%" height="15" fill="rgb(234,71,50)" fg:x="17850" fg:w="33"/><text x="16.9547%" y="879.50"></text></g><g><title>core::mem::drop (22 samples, 0.02%)</title><rect x="16.7150%" y="853" width="0.0206%" height="15" fill="rgb(253,155,4)" fg:x="17861" fg:w="22"/><text x="16.9650%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="16.7150%" y="837" width="0.0206%" height="15" fill="rgb(222,185,37)" fg:x="17861" fg:w="22"/><text x="16.9650%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="16.7150%" y="821" width="0.0206%" height="15" fill="rgb(251,177,13)" fg:x="17861" fg:w="22"/><text x="16.9650%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="16.7150%" y="805" width="0.0206%" height="15" fill="rgb(250,179,40)" fg:x="17861" fg:w="22"/><text x="16.9650%" y="815.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="16.7833%" y="789" width="0.0103%" height="15" fill="rgb(242,44,2)" fg:x="17934" fg:w="11"/><text x="17.0333%" y="799.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="16.7833%" y="773" width="0.0103%" height="15" fill="rgb(216,177,13)" fg:x="17934" fg:w="11"/><text x="17.0333%" y="783.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (44 samples, 0.04%)</title><rect x="16.8507%" y="741" width="0.0412%" height="15" fill="rgb(216,106,43)" fg:x="18006" fg:w="44"/><text x="17.1007%" y="751.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (41 samples, 0.04%)</title><rect x="16.8535%" y="725" width="0.0384%" height="15" fill="rgb(216,183,2)" fg:x="18009" fg:w="41"/><text x="17.1035%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (119 samples, 0.11%)</title><rect x="16.8002%" y="789" width="0.1114%" height="15" fill="rgb(249,75,3)" fg:x="17952" fg:w="119"/><text x="17.0502%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (119 samples, 0.11%)</title><rect x="16.8002%" y="773" width="0.1114%" height="15" fill="rgb(219,67,39)" fg:x="17952" fg:w="119"/><text x="17.0502%" y="783.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (118 samples, 0.11%)</title><rect x="16.8011%" y="757" width="0.1104%" height="15" fill="rgb(253,228,2)" fg:x="17953" fg:w="118"/><text x="17.0511%" y="767.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (21 samples, 0.02%)</title><rect x="16.8919%" y="741" width="0.0197%" height="15" fill="rgb(235,138,27)" fg:x="18050" fg:w="21"/><text x="17.1419%" y="751.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (21 samples, 0.02%)</title><rect x="16.8919%" y="725" width="0.0197%" height="15" fill="rgb(236,97,51)" fg:x="18050" fg:w="21"/><text x="17.1419%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (170 samples, 0.16%)</title><rect x="16.7684%" y="821" width="0.1591%" height="15" fill="rgb(240,80,30)" fg:x="17918" fg:w="170"/><text x="17.0184%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (170 samples, 0.16%)</title><rect x="16.7684%" y="805" width="0.1591%" height="15" fill="rgb(230,178,19)" fg:x="17918" fg:w="170"/><text x="17.0184%" y="815.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (17 samples, 0.02%)</title><rect x="16.9115%" y="789" width="0.0159%" height="15" fill="rgb(210,190,27)" fg:x="18071" fg:w="17"/><text x="17.1615%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (200 samples, 0.19%)</title><rect x="16.7506%" y="869" width="0.1872%" height="15" fill="rgb(222,107,31)" fg:x="17899" fg:w="200"/><text x="17.0006%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (181 samples, 0.17%)</title><rect x="16.7684%" y="853" width="0.1694%" height="15" fill="rgb(216,127,34)" fg:x="17918" fg:w="181"/><text x="17.0184%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (181 samples, 0.17%)</title><rect x="16.7684%" y="837" width="0.1694%" height="15" fill="rgb(234,116,52)" fg:x="17918" fg:w="181"/><text x="17.0184%" y="847.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="16.9275%" y="821" width="0.0103%" height="15" fill="rgb(222,124,15)" fg:x="18088" fg:w="11"/><text x="17.1775%" y="831.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="16.9275%" y="805" width="0.0103%" height="15" fill="rgb(231,179,28)" fg:x="18088" fg:w="11"/><text x="17.1775%" y="815.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="16.9275%" y="789" width="0.0103%" height="15" fill="rgb(226,93,45)" fg:x="18088" fg:w="11"/><text x="17.1775%" y="799.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="16.9275%" y="773" width="0.0103%" height="15" fill="rgb(215,8,51)" fg:x="18088" fg:w="11"/><text x="17.1775%" y="783.50"></text></g><g><title>rust_dealloc (222 samples, 0.21%)</title><rect x="16.7356%" y="885" width="0.2078%" height="15" fill="rgb(223,106,5)" fg:x="17883" fg:w="222"/><text x="16.9856%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (274 samples, 0.26%)</title><rect x="16.6954%" y="933" width="0.2564%" height="15" fill="rgb(250,191,5)" fg:x="17840" fg:w="274"/><text x="16.9454%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (274 samples, 0.26%)</title><rect x="16.6954%" y="917" width="0.2564%" height="15" fill="rgb(242,132,44)" fg:x="17840" fg:w="274"/><text x="16.9454%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (274 samples, 0.26%)</title><rect x="16.6954%" y="901" width="0.2564%" height="15" fill="rgb(251,152,29)" fg:x="17840" fg:w="274"/><text x="16.9454%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (21 samples, 0.02%)</title><rect x="16.9677%" y="869" width="0.0197%" height="15" fill="rgb(218,179,5)" fg:x="18131" fg:w="21"/><text x="17.2177%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (21 samples, 0.02%)</title><rect x="16.9677%" y="853" width="0.0197%" height="15" fill="rgb(227,67,19)" fg:x="18131" fg:w="21"/><text x="17.2177%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (12 samples, 0.01%)</title><rect x="16.9873%" y="821" width="0.0112%" height="15" fill="rgb(233,119,31)" fg:x="18152" fg:w="12"/><text x="17.2373%" y="831.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (26 samples, 0.02%)</title><rect x="17.0894%" y="613" width="0.0243%" height="15" fill="rgb(241,120,22)" fg:x="18261" fg:w="26"/><text x="17.3394%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (25 samples, 0.02%)</title><rect x="17.0903%" y="597" width="0.0234%" height="15" fill="rgb(224,102,30)" fg:x="18262" fg:w="25"/><text x="17.3403%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (55 samples, 0.05%)</title><rect x="17.0688%" y="661" width="0.0515%" height="15" fill="rgb(210,164,37)" fg:x="18239" fg:w="55"/><text x="17.3188%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (55 samples, 0.05%)</title><rect x="17.0688%" y="645" width="0.0515%" height="15" fill="rgb(226,191,16)" fg:x="18239" fg:w="55"/><text x="17.3188%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (54 samples, 0.05%)</title><rect x="17.0697%" y="629" width="0.0505%" height="15" fill="rgb(214,40,45)" fg:x="18240" fg:w="54"/><text x="17.3197%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (86 samples, 0.08%)</title><rect x="17.0529%" y="693" width="0.0805%" height="15" fill="rgb(244,29,26)" fg:x="18222" fg:w="86"/><text x="17.3029%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (86 samples, 0.08%)</title><rect x="17.0529%" y="677" width="0.0805%" height="15" fill="rgb(216,16,5)" fg:x="18222" fg:w="86"/><text x="17.3029%" y="687.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="17.1202%" y="661" width="0.0131%" height="15" fill="rgb(249,76,35)" fg:x="18294" fg:w="14"/><text x="17.3702%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (88 samples, 0.08%)</title><rect x="17.0529%" y="725" width="0.0824%" height="15" fill="rgb(207,11,44)" fg:x="18222" fg:w="88"/><text x="17.3029%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (88 samples, 0.08%)</title><rect x="17.0529%" y="709" width="0.0824%" height="15" fill="rgb(228,190,49)" fg:x="18222" fg:w="88"/><text x="17.3029%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (100 samples, 0.09%)</title><rect x="17.0454%" y="741" width="0.0936%" height="15" fill="rgb(214,173,12)" fg:x="18214" fg:w="100"/><text x="17.2954%" y="751.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (143 samples, 0.13%)</title><rect x="17.0098%" y="773" width="0.1338%" height="15" fill="rgb(218,26,35)" fg:x="18176" fg:w="143"/><text x="17.2598%" y="783.50"></text></g><g><title>rust_dealloc (112 samples, 0.10%)</title><rect x="17.0388%" y="757" width="0.1048%" height="15" fill="rgb(220,200,19)" fg:x="18207" fg:w="112"/><text x="17.2888%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (169 samples, 0.16%)</title><rect x="16.9873%" y="837" width="0.1582%" height="15" fill="rgb(239,95,49)" fg:x="18152" fg:w="169"/><text x="17.2373%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (157 samples, 0.15%)</title><rect x="16.9986%" y="821" width="0.1469%" height="15" fill="rgb(235,85,53)" fg:x="18164" fg:w="157"/><text x="17.2486%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (145 samples, 0.14%)</title><rect x="17.0098%" y="805" width="0.1357%" height="15" fill="rgb(233,133,31)" fg:x="18176" fg:w="145"/><text x="17.2598%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (145 samples, 0.14%)</title><rect x="17.0098%" y="789" width="0.1357%" height="15" fill="rgb(218,25,20)" fg:x="18176" fg:w="145"/><text x="17.2598%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (224 samples, 0.21%)</title><rect x="16.9518%" y="901" width="0.2096%" height="15" fill="rgb(252,210,38)" fg:x="18114" fg:w="224"/><text x="17.2018%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (217 samples, 0.20%)</title><rect x="16.9583%" y="885" width="0.2031%" height="15" fill="rgb(242,134,21)" fg:x="18121" fg:w="217"/><text x="17.2083%" y="895.50"></text></g><g><title>core::mem::drop (186 samples, 0.17%)</title><rect x="16.9873%" y="869" width="0.1741%" height="15" fill="rgb(213,28,48)" fg:x="18152" fg:w="186"/><text x="17.2373%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (186 samples, 0.17%)</title><rect x="16.9873%" y="853" width="0.1741%" height="15" fill="rgb(250,196,2)" fg:x="18152" fg:w="186"/><text x="17.2373%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (17 samples, 0.02%)</title><rect x="17.1455%" y="837" width="0.0159%" height="15" fill="rgb(227,5,17)" fg:x="18321" fg:w="17"/><text x="17.3955%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="17.1455%" y="821" width="0.0159%" height="15" fill="rgb(221,226,24)" fg:x="18321" fg:w="17"/><text x="17.3955%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="17.1455%" y="805" width="0.0159%" height="15" fill="rgb(211,5,48)" fg:x="18321" fg:w="17"/><text x="17.3955%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="17.1455%" y="789" width="0.0159%" height="15" fill="rgb(219,150,6)" fg:x="18321" fg:w="17"/><text x="17.3955%" y="799.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="17.1455%" y="773" width="0.0159%" height="15" fill="rgb(251,46,16)" fg:x="18321" fg:w="17"/><text x="17.3955%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="17.1455%" y="757" width="0.0159%" height="15" fill="rgb(220,204,40)" fg:x="18321" fg:w="17"/><text x="17.3955%" y="767.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.02%)</title><rect x="17.2101%" y="757" width="0.0159%" height="15" fill="rgb(211,85,2)" fg:x="18390" fg:w="17"/><text x="17.4601%" y="767.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="17.2101%" y="741" width="0.0159%" height="15" fill="rgb(229,17,7)" fg:x="18390" fg:w="17"/><text x="17.4601%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (51 samples, 0.05%)</title><rect x="17.1886%" y="805" width="0.0477%" height="15" fill="rgb(239,72,28)" fg:x="18367" fg:w="51"/><text x="17.4386%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (51 samples, 0.05%)</title><rect x="17.1886%" y="789" width="0.0477%" height="15" fill="rgb(230,47,54)" fg:x="18367" fg:w="51"/><text x="17.4386%" y="799.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (50 samples, 0.05%)</title><rect x="17.1895%" y="773" width="0.0468%" height="15" fill="rgb(214,50,8)" fg:x="18368" fg:w="50"/><text x="17.4395%" y="783.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="17.2260%" y="757" width="0.0103%" height="15" fill="rgb(216,198,43)" fg:x="18407" fg:w="11"/><text x="17.4760%" y="767.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="17.2260%" y="741" width="0.0103%" height="15" fill="rgb(234,20,35)" fg:x="18407" fg:w="11"/><text x="17.4760%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (76 samples, 0.07%)</title><rect x="17.1764%" y="837" width="0.0711%" height="15" fill="rgb(254,45,19)" fg:x="18354" fg:w="76"/><text x="17.4264%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (76 samples, 0.07%)</title><rect x="17.1764%" y="821" width="0.0711%" height="15" fill="rgb(219,14,44)" fg:x="18354" fg:w="76"/><text x="17.4264%" y="831.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="17.2363%" y="805" width="0.0112%" height="15" fill="rgb(217,220,26)" fg:x="18418" fg:w="12"/><text x="17.4863%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (81 samples, 0.08%)</title><rect x="17.1764%" y="869" width="0.0758%" height="15" fill="rgb(213,158,28)" fg:x="18354" fg:w="81"/><text x="17.4264%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (81 samples, 0.08%)</title><rect x="17.1764%" y="853" width="0.0758%" height="15" fill="rgb(252,51,52)" fg:x="18354" fg:w="81"/><text x="17.4264%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (89 samples, 0.08%)</title><rect x="17.1698%" y="885" width="0.0833%" height="15" fill="rgb(246,89,16)" fg:x="18347" fg:w="89"/><text x="17.4198%" y="895.50"></text></g><g><title>rust_dealloc (100 samples, 0.09%)</title><rect x="17.1614%" y="901" width="0.0936%" height="15" fill="rgb(216,158,49)" fg:x="18338" fg:w="100"/><text x="17.4114%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (328 samples, 0.31%)</title><rect x="16.9518%" y="917" width="0.3070%" height="15" fill="rgb(236,107,19)" fg:x="18114" fg:w="328"/><text x="17.2018%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (610 samples, 0.57%)</title><rect x="16.6954%" y="949" width="0.5709%" height="15" fill="rgb(228,185,30)" fg:x="17840" fg:w="610"/><text x="16.9454%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (336 samples, 0.31%)</title><rect x="16.9518%" y="933" width="0.3144%" height="15" fill="rgb(246,134,8)" fg:x="18114" fg:w="336"/><text x="17.2018%" y="943.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (35 samples, 0.03%)</title><rect x="17.2662%" y="949" width="0.0328%" height="15" fill="rgb(214,143,50)" fg:x="18450" fg:w="35"/><text x="17.5162%" y="959.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,020 samples, 6.57%)</title><rect x="10.7453%" y="1013" width="6.5696%" height="15" fill="rgb(228,75,8)" fg:x="11482" fg:w="7020"/><text x="10.9953%" y="1023.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,020 samples, 6.57%)</title><rect x="10.7453%" y="997" width="6.5696%" height="15" fill="rgb(207,175,4)" fg:x="11482" fg:w="7020"/><text x="10.9953%" y="1007.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (6,878 samples, 6.44%)</title><rect x="10.8782%" y="981" width="6.4367%" height="15" fill="rgb(205,108,24)" fg:x="11624" fg:w="6878"/><text x="11.1282%" y="991.50">tremor_r..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,210 samples, 3.94%)</title><rect x="13.3750%" y="965" width="3.9399%" height="15" fill="rgb(244,120,49)" fg:x="14292" fg:w="4210"/><text x="13.6250%" y="975.50">trem..</text></g><g><title>tremor_script::srs::EventPayload::try_new (12 samples, 0.01%)</title><rect x="17.3037%" y="949" width="0.0112%" height="15" fill="rgb(223,47,38)" fg:x="18490" fg:w="12"/><text x="17.5537%" y="959.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="17.3813%" y="901" width="0.0122%" height="15" fill="rgb(229,179,11)" fg:x="18573" fg:w="13"/><text x="17.6313%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (162 samples, 0.15%)</title><rect x="17.4515%" y="885" width="0.1516%" height="15" fill="rgb(231,122,1)" fg:x="18648" fg:w="162"/><text x="17.7015%" y="895.50"></text></g><g><title>core::mem::replace (162 samples, 0.15%)</title><rect x="17.4515%" y="869" width="0.1516%" height="15" fill="rgb(245,119,9)" fg:x="18648" fg:w="162"/><text x="17.7015%" y="879.50"></text></g><g><title>core::ptr::read (161 samples, 0.15%)</title><rect x="17.4525%" y="853" width="0.1507%" height="15" fill="rgb(241,163,25)" fg:x="18649" fg:w="161"/><text x="17.7025%" y="863.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (259 samples, 0.24%)</title><rect x="17.4001%" y="901" width="0.2424%" height="15" fill="rgb(217,214,3)" fg:x="18593" fg:w="259"/><text x="17.6501%" y="911.50"></text></g><g><title>core::mem::drop (42 samples, 0.04%)</title><rect x="17.6031%" y="885" width="0.0393%" height="15" fill="rgb(240,86,28)" fg:x="18810" fg:w="42"/><text x="17.8531%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (42 samples, 0.04%)</title><rect x="17.6031%" y="869" width="0.0393%" height="15" fill="rgb(215,47,9)" fg:x="18810" fg:w="42"/><text x="17.8531%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (311 samples, 0.29%)</title><rect x="17.6424%" y="901" width="0.2910%" height="15" fill="rgb(252,25,45)" fg:x="18852" fg:w="311"/><text x="17.8924%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (302 samples, 0.28%)</title><rect x="17.6509%" y="885" width="0.2826%" height="15" fill="rgb(251,164,9)" fg:x="18861" fg:w="302"/><text x="17.9009%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (302 samples, 0.28%)</title><rect x="17.6509%" y="869" width="0.2826%" height="15" fill="rgb(233,194,0)" fg:x="18861" fg:w="302"/><text x="17.9009%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (280 samples, 0.26%)</title><rect x="17.6714%" y="853" width="0.2620%" height="15" fill="rgb(249,111,24)" fg:x="18883" fg:w="280"/><text x="17.9214%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (271 samples, 0.25%)</title><rect x="17.6799%" y="837" width="0.2536%" height="15" fill="rgb(250,223,3)" fg:x="18892" fg:w="271"/><text x="17.9299%" y="847.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (261 samples, 0.24%)</title><rect x="17.6892%" y="821" width="0.2443%" height="15" fill="rgb(236,178,37)" fg:x="18902" fg:w="261"/><text x="17.9392%" y="831.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (32 samples, 0.03%)</title><rect x="17.9550%" y="853" width="0.0299%" height="15" fill="rgb(241,158,50)" fg:x="19186" fg:w="32"/><text x="18.2050%" y="863.50"></text></g><g><title>core::task::wake::Waker::will_wake (59 samples, 0.06%)</title><rect x="17.9363%" y="901" width="0.0552%" height="15" fill="rgb(213,121,41)" fg:x="19166" fg:w="59"/><text x="18.1863%" y="911.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (59 samples, 0.06%)</title><rect x="17.9363%" y="885" width="0.0552%" height="15" fill="rgb(240,92,3)" fg:x="19166" fg:w="59"/><text x="18.1863%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (39 samples, 0.04%)</title><rect x="17.9550%" y="869" width="0.0365%" height="15" fill="rgb(205,123,3)" fg:x="19186" fg:w="39"/><text x="18.2050%" y="879.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="18.0046%" y="869" width="0.0112%" height="15" fill="rgb(205,97,47)" fg:x="19239" fg:w="12"/><text x="18.2546%" y="879.50"></text></g><g><title>std::sync::poison::Flag::borrow (12 samples, 0.01%)</title><rect x="18.0046%" y="853" width="0.0112%" height="15" fill="rgb(247,152,14)" fg:x="19239" fg:w="12"/><text x="18.2546%" y="863.50"></text></g><g><title>std::thread::panicking (12 samples, 0.01%)</title><rect x="18.0046%" y="837" width="0.0112%" height="15" fill="rgb(248,195,53)" fg:x="19239" fg:w="12"/><text x="18.2546%" y="847.50"></text></g><g><title>std::panicking::panicking (12 samples, 0.01%)</title><rect x="18.0046%" y="821" width="0.0112%" height="15" fill="rgb(226,201,16)" fg:x="19239" fg:w="12"/><text x="18.2546%" y="831.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (12 samples, 0.01%)</title><rect x="18.0046%" y="805" width="0.0112%" height="15" fill="rgb(205,98,0)" fg:x="19239" fg:w="12"/><text x="18.2546%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="18.0046%" y="789" width="0.0112%" height="15" fill="rgb(214,191,48)" fg:x="19239" fg:w="12"/><text x="18.2546%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="18.0046%" y="773" width="0.0112%" height="15" fill="rgb(237,112,39)" fg:x="19239" fg:w="12"/><text x="18.2546%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,452 samples, 1.36%)</title><rect x="17.3149%" y="997" width="1.3588%" height="15" fill="rgb(247,203,27)" fg:x="18502" fg:w="1452"/><text x="17.5649%" y="1007.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,452 samples, 1.36%)</title><rect x="17.3149%" y="981" width="1.3588%" height="15" fill="rgb(235,124,28)" fg:x="18502" fg:w="1452"/><text x="17.5649%" y="991.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,452 samples, 1.36%)</title><rect x="17.3149%" y="965" width="1.3588%" height="15" fill="rgb(208,207,46)" fg:x="18502" fg:w="1452"/><text x="17.5649%" y="975.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,452 samples, 1.36%)</title><rect x="17.3149%" y="949" width="1.3588%" height="15" fill="rgb(234,176,4)" fg:x="18502" fg:w="1452"/><text x="17.5649%" y="959.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,452 samples, 1.36%)</title><rect x="17.3149%" y="933" width="1.3588%" height="15" fill="rgb(230,133,28)" fg:x="18502" fg:w="1452"/><text x="17.5649%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,452 samples, 1.36%)</title><rect x="17.3149%" y="917" width="1.3588%" height="15" fill="rgb(211,137,40)" fg:x="18502" fg:w="1452"/><text x="17.5649%" y="927.50"></text></g><g><title>event_listener::Inner::lock (729 samples, 0.68%)</title><rect x="17.9915%" y="901" width="0.6822%" height="15" fill="rgb(254,35,13)" fg:x="19225" fg:w="729"/><text x="18.2415%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (715 samples, 0.67%)</title><rect x="18.0046%" y="885" width="0.6691%" height="15" fill="rgb(225,49,51)" fg:x="19239" fg:w="715"/><text x="18.2546%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (703 samples, 0.66%)</title><rect x="18.0158%" y="869" width="0.6579%" height="15" fill="rgb(251,10,15)" fg:x="19251" fg:w="703"/><text x="18.2658%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (652 samples, 0.61%)</title><rect x="18.0636%" y="853" width="0.6102%" height="15" fill="rgb(228,207,15)" fg:x="19302" fg:w="652"/><text x="18.3136%" y="863.50"></text></g><g><title>__GI___pthread_mutex_lock (652 samples, 0.61%)</title><rect x="18.0636%" y="837" width="0.6102%" height="15" fill="rgb(241,99,19)" fg:x="19302" fg:w="652"/><text x="18.3136%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (270 samples, 0.25%)</title><rect x="18.6831%" y="949" width="0.2527%" height="15" fill="rgb(207,104,49)" fg:x="19964" fg:w="270"/><text x="18.9331%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (771 samples, 0.72%)</title><rect x="19.0939%" y="933" width="0.7215%" height="15" fill="rgb(234,99,18)" fg:x="20403" fg:w="771"/><text x="19.3439%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (69 samples, 0.06%)</title><rect x="19.8370%" y="869" width="0.0646%" height="15" fill="rgb(213,191,49)" fg:x="21197" fg:w="69"/><text x="20.0870%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (64 samples, 0.06%)</title><rect x="19.8417%" y="853" width="0.0599%" height="15" fill="rgb(210,226,19)" fg:x="21202" fg:w="64"/><text x="20.0917%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.06%)</title><rect x="19.8417%" y="837" width="0.0599%" height="15" fill="rgb(229,97,18)" fg:x="21202" fg:w="64"/><text x="20.0917%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (56 samples, 0.05%)</title><rect x="19.8491%" y="821" width="0.0524%" height="15" fill="rgb(211,167,15)" fg:x="21210" fg:w="56"/><text x="20.0991%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (54 samples, 0.05%)</title><rect x="19.8510%" y="805" width="0.0505%" height="15" fill="rgb(210,169,34)" fg:x="21212" fg:w="54"/><text x="20.1010%" y="815.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (50 samples, 0.05%)</title><rect x="19.8548%" y="789" width="0.0468%" height="15" fill="rgb(241,121,31)" fg:x="21216" fg:w="50"/><text x="20.1048%" y="799.50"></text></g><g><title>event_listener::Inner::lock (106 samples, 0.10%)</title><rect x="19.9025%" y="869" width="0.0992%" height="15" fill="rgb(232,40,11)" fg:x="21267" fg:w="106"/><text x="20.1525%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (105 samples, 0.10%)</title><rect x="19.9034%" y="853" width="0.0983%" height="15" fill="rgb(205,86,26)" fg:x="21268" fg:w="105"/><text x="20.1534%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (105 samples, 0.10%)</title><rect x="19.9034%" y="837" width="0.0983%" height="15" fill="rgb(231,126,28)" fg:x="21268" fg:w="105"/><text x="20.1534%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (105 samples, 0.10%)</title><rect x="19.9034%" y="821" width="0.0983%" height="15" fill="rgb(219,221,18)" fg:x="21268" fg:w="105"/><text x="20.1534%" y="831.50"></text></g><g><title>__GI___pthread_mutex_lock (105 samples, 0.10%)</title><rect x="19.9034%" y="805" width="0.0983%" height="15" fill="rgb(211,40,0)" fg:x="21268" fg:w="105"/><text x="20.1534%" y="815.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (194 samples, 0.18%)</title><rect x="19.8276%" y="885" width="0.1816%" height="15" fill="rgb(239,85,43)" fg:x="21187" fg:w="194"/><text x="20.0776%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (228 samples, 0.21%)</title><rect x="19.8155%" y="917" width="0.2134%" height="15" fill="rgb(231,55,21)" fg:x="21174" fg:w="228"/><text x="20.0655%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (215 samples, 0.20%)</title><rect x="19.8276%" y="901" width="0.2012%" height="15" fill="rgb(225,184,43)" fg:x="21187" fg:w="215"/><text x="20.0776%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (21 samples, 0.02%)</title><rect x="20.0092%" y="885" width="0.0197%" height="15" fill="rgb(251,158,41)" fg:x="21381" fg:w="21"/><text x="20.2592%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="20.0092%" y="869" width="0.0197%" height="15" fill="rgb(234,159,37)" fg:x="21381" fg:w="21"/><text x="20.2592%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.02%)</title><rect x="20.0101%" y="853" width="0.0187%" height="15" fill="rgb(216,204,22)" fg:x="21382" fg:w="20"/><text x="20.2601%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.02%)</title><rect x="20.0101%" y="837" width="0.0187%" height="15" fill="rgb(214,17,3)" fg:x="21382" fg:w="20"/><text x="20.2601%" y="847.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (12,883 samples, 12.06%)</title><rect x="7.9808%" y="1141" width="12.0564%" height="15" fill="rgb(212,111,17)" fg:x="8528" fg:w="12883"/><text x="8.2308%" y="1151.50">async_executor::Ex..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (12,883 samples, 12.06%)</title><rect x="7.9808%" y="1125" width="12.0564%" height="15" fill="rgb(221,157,24)" fg:x="8528" fg:w="12883"/><text x="8.2308%" y="1135.50">&lt;async_std::task::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (12,883 samples, 12.06%)</title><rect x="7.9808%" y="1109" width="12.0564%" height="15" fill="rgb(252,16,13)" fg:x="8528" fg:w="12883"/><text x="8.2308%" y="1119.50">async_std::task::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12,883 samples, 12.06%)</title><rect x="7.9808%" y="1093" width="12.0564%" height="15" fill="rgb(221,62,2)" fg:x="8528" fg:w="12883"/><text x="8.2308%" y="1103.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12,883 samples, 12.06%)</title><rect x="7.9808%" y="1077" width="12.0564%" height="15" fill="rgb(247,87,22)" fg:x="8528" fg:w="12883"/><text x="8.2308%" y="1087.50">std::thread::local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (12,883 samples, 12.06%)</title><rect x="7.9808%" y="1061" width="12.0564%" height="15" fill="rgb(215,73,9)" fg:x="8528" fg:w="12883"/><text x="8.2308%" y="1071.50">async_std::task::t..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (12,883 samples, 12.06%)</title><rect x="7.9808%" y="1045" width="12.0564%" height="15" fill="rgb(207,175,33)" fg:x="8528" fg:w="12883"/><text x="8.2308%" y="1055.50">&lt;async_std::task::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,883 samples, 12.06%)</title><rect x="7.9808%" y="1029" width="12.0564%" height="15" fill="rgb(243,129,54)" fg:x="8528" fg:w="12883"/><text x="8.2308%" y="1039.50">&lt;core::future::fro..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,909 samples, 2.72%)</title><rect x="17.3149%" y="1013" width="2.7224%" height="15" fill="rgb(227,119,45)" fg:x="18502" fg:w="2909"/><text x="17.5649%" y="1023.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,457 samples, 1.36%)</title><rect x="18.6737%" y="997" width="1.3635%" height="15" fill="rgb(205,109,36)" fg:x="19954" fg:w="1457"/><text x="18.9237%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,457 samples, 1.36%)</title><rect x="18.6737%" y="981" width="1.3635%" height="15" fill="rgb(205,6,39)" fg:x="19954" fg:w="1457"/><text x="18.9237%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,457 samples, 1.36%)</title><rect x="18.6737%" y="965" width="1.3635%" height="15" fill="rgb(221,32,16)" fg:x="19954" fg:w="1457"/><text x="18.9237%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,177 samples, 1.10%)</title><rect x="18.9358%" y="949" width="1.1015%" height="15" fill="rgb(228,144,50)" fg:x="20234" fg:w="1177"/><text x="19.1858%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (237 samples, 0.22%)</title><rect x="19.8155%" y="933" width="0.2218%" height="15" fill="rgb(229,201,53)" fg:x="21174" fg:w="237"/><text x="20.0655%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (18 samples, 0.02%)</title><rect x="20.0372%" y="1109" width="0.0168%" height="15" fill="rgb(249,153,27)" fg:x="21411" fg:w="18"/><text x="20.2872%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (18 samples, 0.02%)</title><rect x="20.0372%" y="1093" width="0.0168%" height="15" fill="rgb(227,106,25)" fg:x="21411" fg:w="18"/><text x="20.2872%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (18 samples, 0.02%)</title><rect x="20.0372%" y="1077" width="0.0168%" height="15" fill="rgb(230,65,29)" fg:x="21411" fg:w="18"/><text x="20.2872%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,063 samples, 13.16%)</title><rect x="6.9327%" y="1157" width="13.1607%" height="15" fill="rgb(221,57,46)" fg:x="7408" fg:w="14063"/><text x="7.1827%" y="1167.50">&lt;core::future::from_..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (60 samples, 0.06%)</title><rect x="20.0372%" y="1141" width="0.0562%" height="15" fill="rgb(229,161,17)" fg:x="21411" fg:w="60"/><text x="20.2872%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (60 samples, 0.06%)</title><rect x="20.0372%" y="1125" width="0.0562%" height="15" fill="rgb(222,213,11)" fg:x="21411" fg:w="60"/><text x="20.2872%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::pdk::PdkOpMeta&gt; (42 samples, 0.04%)</title><rect x="20.0541%" y="1109" width="0.0393%" height="15" fill="rgb(235,35,13)" fg:x="21429" fg:w="42"/><text x="20.3041%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (42 samples, 0.04%)</title><rect x="20.0541%" y="1093" width="0.0393%" height="15" fill="rgb(233,158,34)" fg:x="21429" fg:w="42"/><text x="20.3041%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (42 samples, 0.04%)</title><rect x="20.0541%" y="1077" width="0.0393%" height="15" fill="rgb(215,151,48)" fg:x="21429" fg:w="42"/><text x="20.3041%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (42 samples, 0.04%)</title><rect x="20.0541%" y="1061" width="0.0393%" height="15" fill="rgb(229,84,14)" fg:x="21429" fg:w="42"/><text x="20.3041%" y="1071.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="20.1046%" y="1125" width="0.0140%" height="15" fill="rgb(229,68,14)" fg:x="21483" fg:w="15"/><text x="20.3546%" y="1135.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (15 samples, 0.01%)</title><rect x="20.1046%" y="1109" width="0.0140%" height="15" fill="rgb(243,106,26)" fg:x="21483" fg:w="15"/><text x="20.3546%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50 samples, 0.05%)</title><rect x="20.0934%" y="1157" width="0.0468%" height="15" fill="rgb(206,45,38)" fg:x="21471" fg:w="50"/><text x="20.3434%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (38 samples, 0.04%)</title><rect x="20.1046%" y="1141" width="0.0356%" height="15" fill="rgb(226,6,15)" fg:x="21483" fg:w="38"/><text x="20.3546%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt; (23 samples, 0.02%)</title><rect x="20.1187%" y="1125" width="0.0215%" height="15" fill="rgb(232,22,54)" fg:x="21498" fg:w="23"/><text x="20.3687%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="20.1187%" y="1109" width="0.0215%" height="15" fill="rgb(229,222,32)" fg:x="21498" fg:w="23"/><text x="20.3687%" y="1119.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="20.1187%" y="1093" width="0.0215%" height="15" fill="rgb(228,62,29)" fg:x="21498" fg:w="23"/><text x="20.3687%" y="1103.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="20.1402%" y="1157" width="0.0243%" height="15" fill="rgb(251,103,34)" fg:x="21521" fg:w="26"/><text x="20.3902%" y="1167.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (18 samples, 0.02%)</title><rect x="20.1673%" y="1157" width="0.0168%" height="15" fill="rgb(233,12,30)" fg:x="21550" fg:w="18"/><text x="20.4173%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (47 samples, 0.04%)</title><rect x="20.2038%" y="1157" width="0.0440%" height="15" fill="rgb(238,52,0)" fg:x="21589" fg:w="47"/><text x="20.4538%" y="1167.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (28 samples, 0.03%)</title><rect x="20.2478%" y="1157" width="0.0262%" height="15" fill="rgb(223,98,5)" fg:x="21636" fg:w="28"/><text x="20.4978%" y="1167.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="20.2740%" y="1157" width="0.0328%" height="15" fill="rgb(228,75,37)" fg:x="21664" fg:w="35"/><text x="20.5240%" y="1167.50"></text></g><g><title>[libc-2.33.so] (23 samples, 0.02%)</title><rect x="20.3068%" y="1157" width="0.0215%" height="15" fill="rgb(205,115,49)" fg:x="21699" fg:w="23"/><text x="20.5568%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="20.3068%" y="1141" width="0.0215%" height="15" fill="rgb(250,154,43)" fg:x="21699" fg:w="23"/><text x="20.5568%" y="1151.50"></text></g><g><title>__GI___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="20.3311%" y="1157" width="0.0112%" height="15" fill="rgb(226,43,29)" fg:x="21725" fg:w="12"/><text x="20.5811%" y="1167.50"></text></g><g><title>__clock_gettime_2 (53 samples, 0.05%)</title><rect x="20.3461%" y="1157" width="0.0496%" height="15" fill="rgb(249,228,39)" fg:x="21741" fg:w="53"/><text x="20.5961%" y="1167.50"></text></g><g><title>__memmove_avx_unaligned_erms (81 samples, 0.08%)</title><rect x="20.3966%" y="1157" width="0.0758%" height="15" fill="rgb(216,79,43)" fg:x="21795" fg:w="81"/><text x="20.6466%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (15 samples, 0.01%)</title><rect x="20.4752%" y="1157" width="0.0140%" height="15" fill="rgb(228,95,12)" fg:x="21879" fg:w="15"/><text x="20.7252%" y="1167.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (13 samples, 0.01%)</title><rect x="20.4893%" y="1157" width="0.0122%" height="15" fill="rgb(249,221,15)" fg:x="21894" fg:w="13"/><text x="20.7393%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt; (11 samples, 0.01%)</title><rect x="20.5407%" y="1141" width="0.0103%" height="15" fill="rgb(233,34,13)" fg:x="21949" fg:w="11"/><text x="20.7907%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="20.5407%" y="1125" width="0.0103%" height="15" fill="rgb(214,103,39)" fg:x="21949" fg:w="11"/><text x="20.7907%" y="1135.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (11 samples, 0.01%)</title><rect x="20.5407%" y="1109" width="0.0103%" height="15" fill="rgb(251,126,39)" fg:x="21949" fg:w="11"/><text x="20.7907%" y="1119.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (44 samples, 0.04%)</title><rect x="20.5211%" y="1157" width="0.0412%" height="15" fill="rgb(214,216,36)" fg:x="21928" fg:w="44"/><text x="20.7711%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (19 samples, 0.02%)</title><rect x="20.5735%" y="1157" width="0.0178%" height="15" fill="rgb(220,221,8)" fg:x="21984" fg:w="19"/><text x="20.8235%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="20.6362%" y="949" width="0.0112%" height="15" fill="rgb(240,216,3)" fg:x="22051" fg:w="12"/><text x="20.8862%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="20.6362%" y="933" width="0.0112%" height="15" fill="rgb(232,218,17)" fg:x="22051" fg:w="12"/><text x="20.8862%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="20.6362%" y="917" width="0.0112%" height="15" fill="rgb(229,163,45)" fg:x="22051" fg:w="12"/><text x="20.8862%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="20.6362%" y="901" width="0.0112%" height="15" fill="rgb(231,110,42)" fg:x="22051" fg:w="12"/><text x="20.8862%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="20.6362%" y="885" width="0.0112%" height="15" fill="rgb(208,170,48)" fg:x="22051" fg:w="12"/><text x="20.8862%" y="895.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="20.6362%" y="869" width="0.0112%" height="15" fill="rgb(239,116,25)" fg:x="22051" fg:w="12"/><text x="20.8862%" y="879.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="20.6362%" y="853" width="0.0112%" height="15" fill="rgb(219,200,50)" fg:x="22051" fg:w="12"/><text x="20.8862%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="20.6362%" y="837" width="0.0112%" height="15" fill="rgb(245,200,0)" fg:x="22051" fg:w="12"/><text x="20.8862%" y="847.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="20.6362%" y="1061" width="0.0150%" height="15" fill="rgb(245,119,33)" fg:x="22051" fg:w="16"/><text x="20.8862%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (16 samples, 0.01%)</title><rect x="20.6362%" y="1045" width="0.0150%" height="15" fill="rgb(231,125,12)" fg:x="22051" fg:w="16"/><text x="20.8862%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (16 samples, 0.01%)</title><rect x="20.6362%" y="1029" width="0.0150%" height="15" fill="rgb(216,96,41)" fg:x="22051" fg:w="16"/><text x="20.8862%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 0.01%)</title><rect x="20.6362%" y="1013" width="0.0150%" height="15" fill="rgb(248,43,45)" fg:x="22051" fg:w="16"/><text x="20.8862%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.01%)</title><rect x="20.6362%" y="997" width="0.0150%" height="15" fill="rgb(217,222,7)" fg:x="22051" fg:w="16"/><text x="20.8862%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.01%)</title><rect x="20.6362%" y="981" width="0.0150%" height="15" fill="rgb(233,28,6)" fg:x="22051" fg:w="16"/><text x="20.8862%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.01%)</title><rect x="20.6362%" y="965" width="0.0150%" height="15" fill="rgb(231,218,15)" fg:x="22051" fg:w="16"/><text x="20.8862%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (72 samples, 0.07%)</title><rect x="20.5913%" y="1157" width="0.0674%" height="15" fill="rgb(226,171,48)" fg:x="22003" fg:w="72"/><text x="20.8413%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (24 samples, 0.02%)</title><rect x="20.6362%" y="1141" width="0.0225%" height="15" fill="rgb(235,201,9)" fg:x="22051" fg:w="24"/><text x="20.8862%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 0.02%)</title><rect x="20.6362%" y="1125" width="0.0225%" height="15" fill="rgb(217,80,15)" fg:x="22051" fg:w="24"/><text x="20.8862%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.02%)</title><rect x="20.6362%" y="1109" width="0.0225%" height="15" fill="rgb(219,152,8)" fg:x="22051" fg:w="24"/><text x="20.8862%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.02%)</title><rect x="20.6362%" y="1093" width="0.0225%" height="15" fill="rgb(243,107,38)" fg:x="22051" fg:w="24"/><text x="20.8862%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.02%)</title><rect x="20.6362%" y="1077" width="0.0225%" height="15" fill="rgb(231,17,5)" fg:x="22051" fg:w="24"/><text x="20.8862%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (44 samples, 0.04%)</title><rect x="20.6586%" y="1157" width="0.0412%" height="15" fill="rgb(209,25,54)" fg:x="22075" fg:w="44"/><text x="20.9086%" y="1167.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (16 samples, 0.01%)</title><rect x="20.6848%" y="1141" width="0.0150%" height="15" fill="rgb(219,0,2)" fg:x="22103" fg:w="16"/><text x="20.9348%" y="1151.50"></text></g><g><title>core::mem::drop (16 samples, 0.01%)</title><rect x="20.6848%" y="1125" width="0.0150%" height="15" fill="rgb(246,9,5)" fg:x="22103" fg:w="16"/><text x="20.9348%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (35 samples, 0.03%)</title><rect x="20.6998%" y="1157" width="0.0328%" height="15" fill="rgb(226,159,4)" fg:x="22119" fg:w="35"/><text x="20.9498%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (64 samples, 0.06%)</title><rect x="20.7335%" y="1157" width="0.0599%" height="15" fill="rgb(219,175,34)" fg:x="22155" fg:w="64"/><text x="20.9835%" y="1167.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (29 samples, 0.03%)</title><rect x="20.7934%" y="1157" width="0.0271%" height="15" fill="rgb(236,10,46)" fg:x="22219" fg:w="29"/><text x="21.0434%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="20.8056%" y="1141" width="0.0150%" height="15" fill="rgb(240,211,16)" fg:x="22232" fg:w="16"/><text x="21.0556%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="20.8102%" y="1125" width="0.0103%" height="15" fill="rgb(205,3,43)" fg:x="22237" fg:w="11"/><text x="21.0602%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="20.8102%" y="1109" width="0.0103%" height="15" fill="rgb(245,7,22)" fg:x="22237" fg:w="11"/><text x="21.0602%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="20.8102%" y="1093" width="0.0103%" height="15" fill="rgb(239,132,32)" fg:x="22237" fg:w="11"/><text x="21.0602%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="20.8102%" y="1077" width="0.0103%" height="15" fill="rgb(228,202,34)" fg:x="22237" fg:w="11"/><text x="21.0602%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="20.8102%" y="1061" width="0.0103%" height="15" fill="rgb(254,200,22)" fg:x="22237" fg:w="11"/><text x="21.0602%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="20.8102%" y="1045" width="0.0103%" height="15" fill="rgb(219,10,39)" fg:x="22237" fg:w="11"/><text x="21.0602%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="20.8102%" y="1029" width="0.0103%" height="15" fill="rgb(226,210,39)" fg:x="22237" fg:w="11"/><text x="21.0602%" y="1039.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="20.8102%" y="1013" width="0.0103%" height="15" fill="rgb(208,219,16)" fg:x="22237" fg:w="11"/><text x="21.0602%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="20.8102%" y="997" width="0.0103%" height="15" fill="rgb(216,158,51)" fg:x="22237" fg:w="11"/><text x="21.0602%" y="1007.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (25 samples, 0.02%)</title><rect x="20.8252%" y="1157" width="0.0234%" height="15" fill="rgb(233,14,44)" fg:x="22253" fg:w="25"/><text x="21.0752%" y="1167.50"></text></g><g><title>async_ffi::DropBomb::with (20 samples, 0.02%)</title><rect x="20.8299%" y="1141" width="0.0187%" height="15" fill="rgb(237,97,39)" fg:x="22258" fg:w="20"/><text x="21.0799%" y="1151.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (20 samples, 0.02%)</title><rect x="20.8299%" y="1125" width="0.0187%" height="15" fill="rgb(218,198,43)" fg:x="22258" fg:w="20"/><text x="21.0799%" y="1135.50"></text></g><g><title>core::mem::drop (20 samples, 0.02%)</title><rect x="20.8299%" y="1109" width="0.0187%" height="15" fill="rgb(231,104,20)" fg:x="22258" fg:w="20"/><text x="21.0799%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}}&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="20.8383%" y="1093" width="0.0103%" height="15" fill="rgb(254,36,13)" fg:x="22267" fg:w="11"/><text x="21.0883%" y="1103.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="20.8383%" y="1077" width="0.0103%" height="15" fill="rgb(248,14,50)" fg:x="22267" fg:w="11"/><text x="21.0883%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="20.8383%" y="1061" width="0.0103%" height="15" fill="rgb(217,107,29)" fg:x="22267" fg:w="11"/><text x="21.0883%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="20.8383%" y="1045" width="0.0103%" height="15" fill="rgb(251,169,33)" fg:x="22267" fg:w="11"/><text x="21.0883%" y="1055.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="20.8383%" y="1029" width="0.0103%" height="15" fill="rgb(217,108,32)" fg:x="22267" fg:w="11"/><text x="21.0883%" y="1039.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="20.8383%" y="1013" width="0.0103%" height="15" fill="rgb(219,66,42)" fg:x="22267" fg:w="11"/><text x="21.0883%" y="1023.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (12 samples, 0.01%)</title><rect x="20.8486%" y="1157" width="0.0112%" height="15" fill="rgb(206,180,7)" fg:x="22278" fg:w="12"/><text x="21.0986%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (15 samples, 0.01%)</title><rect x="20.8889%" y="581" width="0.0140%" height="15" fill="rgb(208,226,31)" fg:x="22321" fg:w="15"/><text x="21.1389%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (15 samples, 0.01%)</title><rect x="20.8889%" y="565" width="0.0140%" height="15" fill="rgb(218,26,49)" fg:x="22321" fg:w="15"/><text x="21.1389%" y="575.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="20.8889%" y="549" width="0.0140%" height="15" fill="rgb(233,197,48)" fg:x="22321" fg:w="15"/><text x="21.1389%" y="559.50"></text></g><g><title>core::ptr::write (15 samples, 0.01%)</title><rect x="20.8889%" y="533" width="0.0140%" height="15" fill="rgb(252,181,51)" fg:x="22321" fg:w="15"/><text x="21.1389%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (47 samples, 0.04%)</title><rect x="20.8645%" y="661" width="0.0440%" height="15" fill="rgb(253,90,19)" fg:x="22295" fg:w="47"/><text x="21.1145%" y="671.50"></text></g><g><title>std::collections::hash::map::RandomState::new (47 samples, 0.04%)</title><rect x="20.8645%" y="645" width="0.0440%" height="15" fill="rgb(215,171,30)" fg:x="22295" fg:w="47"/><text x="21.1145%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (47 samples, 0.04%)</title><rect x="20.8645%" y="629" width="0.0440%" height="15" fill="rgb(214,222,9)" fg:x="22295" fg:w="47"/><text x="21.1145%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (47 samples, 0.04%)</title><rect x="20.8645%" y="613" width="0.0440%" height="15" fill="rgb(223,3,22)" fg:x="22295" fg:w="47"/><text x="21.1145%" y="623.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (36 samples, 0.03%)</title><rect x="20.8748%" y="597" width="0.0337%" height="15" fill="rgb(225,196,46)" fg:x="22306" fg:w="36"/><text x="21.1248%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="20.9600%" y="421" width="0.0187%" height="15" fill="rgb(209,110,37)" fg:x="22397" fg:w="20"/><text x="21.2100%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (20 samples, 0.02%)</title><rect x="20.9600%" y="405" width="0.0187%" height="15" fill="rgb(249,89,12)" fg:x="22397" fg:w="20"/><text x="21.2100%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (17 samples, 0.02%)</title><rect x="20.9628%" y="389" width="0.0159%" height="15" fill="rgb(226,27,33)" fg:x="22400" fg:w="17"/><text x="21.2128%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (15 samples, 0.01%)</title><rect x="20.9647%" y="373" width="0.0140%" height="15" fill="rgb(213,82,22)" fg:x="22402" fg:w="15"/><text x="21.2147%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="20.9647%" y="357" width="0.0140%" height="15" fill="rgb(248,140,0)" fg:x="22402" fg:w="15"/><text x="21.2147%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="20.9647%" y="341" width="0.0140%" height="15" fill="rgb(228,106,3)" fg:x="22402" fg:w="15"/><text x="21.2147%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (106 samples, 0.10%)</title><rect x="20.9506%" y="469" width="0.0992%" height="15" fill="rgb(209,23,37)" fg:x="22387" fg:w="106"/><text x="21.2006%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (106 samples, 0.10%)</title><rect x="20.9506%" y="453" width="0.0992%" height="15" fill="rgb(241,93,50)" fg:x="22387" fg:w="106"/><text x="21.2006%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (98 samples, 0.09%)</title><rect x="20.9581%" y="437" width="0.0917%" height="15" fill="rgb(253,46,43)" fg:x="22395" fg:w="98"/><text x="21.2081%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (68 samples, 0.06%)</title><rect x="20.9862%" y="421" width="0.0636%" height="15" fill="rgb(226,206,43)" fg:x="22425" fg:w="68"/><text x="21.2362%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (68 samples, 0.06%)</title><rect x="20.9862%" y="405" width="0.0636%" height="15" fill="rgb(217,54,7)" fg:x="22425" fg:w="68"/><text x="21.2362%" y="415.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (207 samples, 0.19%)</title><rect x="20.8645%" y="677" width="0.1937%" height="15" fill="rgb(223,5,52)" fg:x="22295" fg:w="207"/><text x="21.1145%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (160 samples, 0.15%)</title><rect x="20.9085%" y="661" width="0.1497%" height="15" fill="rgb(206,52,46)" fg:x="22342" fg:w="160"/><text x="21.1585%" y="671.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (160 samples, 0.15%)</title><rect x="20.9085%" y="645" width="0.1497%" height="15" fill="rgb(253,136,11)" fg:x="22342" fg:w="160"/><text x="21.1585%" y="655.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (149 samples, 0.14%)</title><rect x="20.9188%" y="629" width="0.1394%" height="15" fill="rgb(208,106,33)" fg:x="22353" fg:w="149"/><text x="21.1688%" y="639.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (149 samples, 0.14%)</title><rect x="20.9188%" y="613" width="0.1394%" height="15" fill="rgb(206,54,4)" fg:x="22353" fg:w="149"/><text x="21.1688%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (145 samples, 0.14%)</title><rect x="20.9225%" y="597" width="0.1357%" height="15" fill="rgb(213,3,15)" fg:x="22357" fg:w="145"/><text x="21.1725%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (128 samples, 0.12%)</title><rect x="20.9385%" y="581" width="0.1198%" height="15" fill="rgb(252,211,39)" fg:x="22374" fg:w="128"/><text x="21.1885%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (128 samples, 0.12%)</title><rect x="20.9385%" y="565" width="0.1198%" height="15" fill="rgb(223,6,36)" fg:x="22374" fg:w="128"/><text x="21.1885%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (128 samples, 0.12%)</title><rect x="20.9385%" y="549" width="0.1198%" height="15" fill="rgb(252,169,45)" fg:x="22374" fg:w="128"/><text x="21.1885%" y="559.50"></text></g><g><title>alloc::alloc::alloc (124 samples, 0.12%)</title><rect x="20.9422%" y="533" width="0.1160%" height="15" fill="rgb(212,48,26)" fg:x="22378" fg:w="124"/><text x="21.1922%" y="543.50"></text></g><g><title>__rg_alloc (124 samples, 0.12%)</title><rect x="20.9422%" y="517" width="0.1160%" height="15" fill="rgb(251,102,48)" fg:x="22378" fg:w="124"/><text x="21.1922%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (124 samples, 0.12%)</title><rect x="20.9422%" y="501" width="0.1160%" height="15" fill="rgb(243,208,16)" fg:x="22378" fg:w="124"/><text x="21.1922%" y="511.50"></text></g><g><title>rust_alloc (124 samples, 0.12%)</title><rect x="20.9422%" y="485" width="0.1160%" height="15" fill="rgb(219,96,24)" fg:x="22378" fg:w="124"/><text x="21.1922%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (16 samples, 0.01%)</title><rect x="21.1958%" y="629" width="0.0150%" height="15" fill="rgb(219,33,29)" fg:x="22649" fg:w="16"/><text x="21.4458%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.03%)</title><rect x="21.1790%" y="645" width="0.0346%" height="15" fill="rgb(223,176,5)" fg:x="22631" fg:w="37"/><text x="21.4290%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.05%)</title><rect x="21.1687%" y="661" width="0.0533%" height="15" fill="rgb(228,140,14)" fg:x="22620" fg:w="57"/><text x="21.4187%" y="671.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (24 samples, 0.02%)</title><rect x="21.2220%" y="661" width="0.0225%" height="15" fill="rgb(217,179,31)" fg:x="22677" fg:w="24"/><text x="21.4720%" y="671.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (24 samples, 0.02%)</title><rect x="21.2220%" y="645" width="0.0225%" height="15" fill="rgb(230,9,30)" fg:x="22677" fg:w="24"/><text x="21.4720%" y="655.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (24 samples, 0.02%)</title><rect x="21.2220%" y="629" width="0.0225%" height="15" fill="rgb(230,136,20)" fg:x="22677" fg:w="24"/><text x="21.4720%" y="639.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (11 samples, 0.01%)</title><rect x="21.2342%" y="613" width="0.0103%" height="15" fill="rgb(215,210,22)" fg:x="22690" fg:w="11"/><text x="21.4842%" y="623.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (11 samples, 0.01%)</title><rect x="21.2342%" y="597" width="0.0103%" height="15" fill="rgb(218,43,5)" fg:x="22690" fg:w="11"/><text x="21.4842%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (11 samples, 0.01%)</title><rect x="21.2342%" y="581" width="0.0103%" height="15" fill="rgb(216,11,5)" fg:x="22690" fg:w="11"/><text x="21.4842%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (11 samples, 0.01%)</title><rect x="21.2342%" y="565" width="0.0103%" height="15" fill="rgb(209,82,29)" fg:x="22690" fg:w="11"/><text x="21.4842%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="21.2342%" y="549" width="0.0103%" height="15" fill="rgb(244,115,12)" fg:x="22690" fg:w="11"/><text x="21.4842%" y="559.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (241 samples, 0.23%)</title><rect x="21.0582%" y="677" width="0.2255%" height="15" fill="rgb(222,82,18)" fg:x="22502" fg:w="241"/><text x="21.3082%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;,&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from::{{closure}}&gt;&gt; (42 samples, 0.04%)</title><rect x="21.2445%" y="661" width="0.0393%" height="15" fill="rgb(249,227,8)" fg:x="22701" fg:w="42"/><text x="21.4945%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (42 samples, 0.04%)</title><rect x="21.2445%" y="645" width="0.0393%" height="15" fill="rgb(253,141,45)" fg:x="22701" fg:w="42"/><text x="21.4945%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="21.2538%" y="629" width="0.0299%" height="15" fill="rgb(234,184,4)" fg:x="22711" fg:w="32"/><text x="21.5038%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (29 samples, 0.03%)</title><rect x="21.2566%" y="613" width="0.0271%" height="15" fill="rgb(218,194,23)" fg:x="22714" fg:w="29"/><text x="21.5066%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (24 samples, 0.02%)</title><rect x="21.2613%" y="597" width="0.0225%" height="15" fill="rgb(235,66,41)" fg:x="22719" fg:w="24"/><text x="21.5113%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (24 samples, 0.02%)</title><rect x="21.2613%" y="581" width="0.0225%" height="15" fill="rgb(245,217,1)" fg:x="22719" fg:w="24"/><text x="21.5113%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (24 samples, 0.02%)</title><rect x="21.2613%" y="565" width="0.0225%" height="15" fill="rgb(229,91,1)" fg:x="22719" fg:w="24"/><text x="21.5113%" y="575.50"></text></g><g><title>core::mem::replace (24 samples, 0.02%)</title><rect x="21.2613%" y="549" width="0.0225%" height="15" fill="rgb(207,101,30)" fg:x="22719" fg:w="24"/><text x="21.5113%" y="559.50"></text></g><g><title>core::ptr::read (18 samples, 0.02%)</title><rect x="21.2669%" y="533" width="0.0168%" height="15" fill="rgb(223,82,49)" fg:x="22725" fg:w="18"/><text x="21.5169%" y="543.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (461 samples, 0.43%)</title><rect x="20.8598%" y="725" width="0.4314%" height="15" fill="rgb(218,167,17)" fg:x="22290" fg:w="461"/><text x="21.1098%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (461 samples, 0.43%)</title><rect x="20.8598%" y="709" width="0.4314%" height="15" fill="rgb(208,103,14)" fg:x="22290" fg:w="461"/><text x="21.1098%" y="719.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (461 samples, 0.43%)</title><rect x="20.8598%" y="693" width="0.4314%" height="15" fill="rgb(238,20,8)" fg:x="22290" fg:w="461"/><text x="21.1098%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::empty (14 samples, 0.01%)</title><rect x="21.8116%" y="453" width="0.0131%" height="15" fill="rgb(218,80,54)" fg:x="23307" fg:w="14"/><text x="22.0616%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (14 samples, 0.01%)</title><rect x="21.8116%" y="437" width="0.0131%" height="15" fill="rgb(240,144,17)" fg:x="23307" fg:w="14"/><text x="22.0616%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (229 samples, 0.21%)</title><rect x="21.7845%" y="501" width="0.2143%" height="15" fill="rgb(245,27,50)" fg:x="23278" fg:w="229"/><text x="22.0345%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (223 samples, 0.21%)</title><rect x="21.7901%" y="485" width="0.2087%" height="15" fill="rgb(251,51,7)" fg:x="23284" fg:w="223"/><text x="22.0401%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (215 samples, 0.20%)</title><rect x="21.7976%" y="469" width="0.2012%" height="15" fill="rgb(245,217,29)" fg:x="23292" fg:w="215"/><text x="22.0476%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (186 samples, 0.17%)</title><rect x="21.8247%" y="453" width="0.1741%" height="15" fill="rgb(221,176,29)" fg:x="23321" fg:w="186"/><text x="22.0747%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (186 samples, 0.17%)</title><rect x="21.8247%" y="437" width="0.1741%" height="15" fill="rgb(212,180,24)" fg:x="23321" fg:w="186"/><text x="22.0747%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (275 samples, 0.26%)</title><rect x="21.7489%" y="645" width="0.2574%" height="15" fill="rgb(254,24,2)" fg:x="23240" fg:w="275"/><text x="21.9989%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (275 samples, 0.26%)</title><rect x="21.7489%" y="629" width="0.2574%" height="15" fill="rgb(230,100,2)" fg:x="23240" fg:w="275"/><text x="21.9989%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (250 samples, 0.23%)</title><rect x="21.7723%" y="613" width="0.2340%" height="15" fill="rgb(219,142,25)" fg:x="23265" fg:w="250"/><text x="22.0223%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (250 samples, 0.23%)</title><rect x="21.7723%" y="597" width="0.2340%" height="15" fill="rgb(240,73,43)" fg:x="23265" fg:w="250"/><text x="22.0223%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (250 samples, 0.23%)</title><rect x="21.7723%" y="581" width="0.2340%" height="15" fill="rgb(214,114,15)" fg:x="23265" fg:w="250"/><text x="22.0223%" y="591.50"></text></g><g><title>alloc::alloc::alloc (250 samples, 0.23%)</title><rect x="21.7723%" y="565" width="0.2340%" height="15" fill="rgb(207,130,4)" fg:x="23265" fg:w="250"/><text x="22.0223%" y="575.50"></text></g><g><title>__rg_alloc (250 samples, 0.23%)</title><rect x="21.7723%" y="549" width="0.2340%" height="15" fill="rgb(221,25,40)" fg:x="23265" fg:w="250"/><text x="22.0223%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (250 samples, 0.23%)</title><rect x="21.7723%" y="533" width="0.2340%" height="15" fill="rgb(241,184,7)" fg:x="23265" fg:w="250"/><text x="22.0223%" y="543.50"></text></g><g><title>rust_alloc (241 samples, 0.23%)</title><rect x="21.7807%" y="517" width="0.2255%" height="15" fill="rgb(235,159,4)" fg:x="23274" fg:w="241"/><text x="22.0307%" y="527.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (21 samples, 0.02%)</title><rect x="22.0633%" y="437" width="0.0197%" height="15" fill="rgb(214,87,48)" fg:x="23576" fg:w="21"/><text x="22.3133%" y="447.50"></text></g><g><title> (21 samples, 0.02%)</title><rect x="22.0633%" y="421" width="0.0197%" height="15" fill="rgb(246,198,24)" fg:x="23576" fg:w="21"/><text x="22.3133%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (65 samples, 0.06%)</title><rect x="22.0287%" y="469" width="0.0608%" height="15" fill="rgb(209,66,40)" fg:x="23539" fg:w="65"/><text x="22.2787%" y="479.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (57 samples, 0.05%)</title><rect x="22.0362%" y="453" width="0.0533%" height="15" fill="rgb(233,147,39)" fg:x="23547" fg:w="57"/><text x="22.2862%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (88 samples, 0.08%)</title><rect x="22.0212%" y="501" width="0.0824%" height="15" fill="rgb(231,145,52)" fg:x="23531" fg:w="88"/><text x="22.2712%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (88 samples, 0.08%)</title><rect x="22.0212%" y="485" width="0.0824%" height="15" fill="rgb(206,20,26)" fg:x="23531" fg:w="88"/><text x="22.2712%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="22.0895%" y="469" width="0.0140%" height="15" fill="rgb(238,220,4)" fg:x="23604" fg:w="15"/><text x="22.3395%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (92 samples, 0.09%)</title><rect x="22.0212%" y="533" width="0.0861%" height="15" fill="rgb(252,195,42)" fg:x="23531" fg:w="92"/><text x="22.2712%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (92 samples, 0.09%)</title><rect x="22.0212%" y="517" width="0.0861%" height="15" fill="rgb(209,10,6)" fg:x="23531" fg:w="92"/><text x="22.2712%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (99 samples, 0.09%)</title><rect x="22.0203%" y="549" width="0.0926%" height="15" fill="rgb(229,3,52)" fg:x="23530" fg:w="99"/><text x="22.2703%" y="559.50"></text></g><g><title>alloc::alloc::box_free (122 samples, 0.11%)</title><rect x="22.0063%" y="645" width="0.1142%" height="15" fill="rgb(253,49,37)" fg:x="23515" fg:w="122"/><text x="22.2563%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (122 samples, 0.11%)</title><rect x="22.0063%" y="629" width="0.1142%" height="15" fill="rgb(240,103,49)" fg:x="23515" fg:w="122"/><text x="22.2563%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (122 samples, 0.11%)</title><rect x="22.0063%" y="613" width="0.1142%" height="15" fill="rgb(250,182,30)" fg:x="23515" fg:w="122"/><text x="22.2563%" y="623.50"></text></g><g><title>__rg_dealloc (122 samples, 0.11%)</title><rect x="22.0063%" y="597" width="0.1142%" height="15" fill="rgb(248,8,30)" fg:x="23515" fg:w="122"/><text x="22.2563%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (122 samples, 0.11%)</title><rect x="22.0063%" y="581" width="0.1142%" height="15" fill="rgb(237,120,30)" fg:x="23515" fg:w="122"/><text x="22.2563%" y="591.50"></text></g><g><title>rust_dealloc (117 samples, 0.11%)</title><rect x="22.0109%" y="565" width="0.1095%" height="15" fill="rgb(221,146,34)" fg:x="23520" fg:w="117"/><text x="22.2609%" y="575.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="22.1569%" y="517" width="0.0103%" height="15" fill="rgb(242,55,13)" fg:x="23676" fg:w="11"/><text x="22.4069%" y="527.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (20 samples, 0.02%)</title><rect x="22.1569%" y="533" width="0.0187%" height="15" fill="rgb(242,112,31)" fg:x="23676" fg:w="20"/><text x="22.4069%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (27 samples, 0.03%)</title><rect x="22.1560%" y="597" width="0.0253%" height="15" fill="rgb(249,192,27)" fg:x="23675" fg:w="27"/><text x="22.4060%" y="607.50"></text></g><g><title>std::collections::hash::map::RandomState::new (27 samples, 0.03%)</title><rect x="22.1560%" y="581" width="0.0253%" height="15" fill="rgb(208,204,44)" fg:x="23675" fg:w="27"/><text x="22.4060%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.03%)</title><rect x="22.1560%" y="565" width="0.0253%" height="15" fill="rgb(208,93,54)" fg:x="23675" fg:w="27"/><text x="22.4060%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.03%)</title><rect x="22.1560%" y="549" width="0.0253%" height="15" fill="rgb(242,1,31)" fg:x="23675" fg:w="27"/><text x="22.4060%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::empty (11 samples, 0.01%)</title><rect x="22.2608%" y="357" width="0.0103%" height="15" fill="rgb(241,83,25)" fg:x="23787" fg:w="11"/><text x="22.5108%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (11 samples, 0.01%)</title><rect x="22.2608%" y="341" width="0.0103%" height="15" fill="rgb(205,169,50)" fg:x="23787" fg:w="11"/><text x="22.5108%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (173 samples, 0.16%)</title><rect x="22.2299%" y="405" width="0.1619%" height="15" fill="rgb(239,186,37)" fg:x="23754" fg:w="173"/><text x="22.4799%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (166 samples, 0.16%)</title><rect x="22.2365%" y="389" width="0.1553%" height="15" fill="rgb(205,221,10)" fg:x="23761" fg:w="166"/><text x="22.4865%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (153 samples, 0.14%)</title><rect x="22.2486%" y="373" width="0.1432%" height="15" fill="rgb(218,196,15)" fg:x="23774" fg:w="153"/><text x="22.4986%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (129 samples, 0.12%)</title><rect x="22.2711%" y="357" width="0.1207%" height="15" fill="rgb(218,196,35)" fg:x="23798" fg:w="129"/><text x="22.5211%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (129 samples, 0.12%)</title><rect x="22.2711%" y="341" width="0.1207%" height="15" fill="rgb(233,63,24)" fg:x="23798" fg:w="129"/><text x="22.5211%" y="351.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (265 samples, 0.25%)</title><rect x="22.1560%" y="613" width="0.2480%" height="15" fill="rgb(225,8,4)" fg:x="23675" fg:w="265"/><text x="22.4060%" y="623.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (238 samples, 0.22%)</title><rect x="22.1813%" y="597" width="0.2227%" height="15" fill="rgb(234,105,35)" fg:x="23702" fg:w="238"/><text x="22.4313%" y="607.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (238 samples, 0.22%)</title><rect x="22.1813%" y="581" width="0.2227%" height="15" fill="rgb(236,21,32)" fg:x="23702" fg:w="238"/><text x="22.4313%" y="591.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (227 samples, 0.21%)</title><rect x="22.1915%" y="565" width="0.2124%" height="15" fill="rgb(228,109,6)" fg:x="23713" fg:w="227"/><text x="22.4415%" y="575.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (227 samples, 0.21%)</title><rect x="22.1915%" y="549" width="0.2124%" height="15" fill="rgb(229,215,31)" fg:x="23713" fg:w="227"/><text x="22.4415%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (218 samples, 0.20%)</title><rect x="22.2000%" y="533" width="0.2040%" height="15" fill="rgb(221,52,54)" fg:x="23722" fg:w="218"/><text x="22.4500%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (200 samples, 0.19%)</title><rect x="22.2168%" y="517" width="0.1872%" height="15" fill="rgb(252,129,43)" fg:x="23740" fg:w="200"/><text x="22.4668%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (200 samples, 0.19%)</title><rect x="22.2168%" y="501" width="0.1872%" height="15" fill="rgb(248,183,27)" fg:x="23740" fg:w="200"/><text x="22.4668%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (200 samples, 0.19%)</title><rect x="22.2168%" y="485" width="0.1872%" height="15" fill="rgb(250,0,22)" fg:x="23740" fg:w="200"/><text x="22.4668%" y="495.50"></text></g><g><title>alloc::alloc::alloc (200 samples, 0.19%)</title><rect x="22.2168%" y="469" width="0.1872%" height="15" fill="rgb(213,166,10)" fg:x="23740" fg:w="200"/><text x="22.4668%" y="479.50"></text></g><g><title>__rg_alloc (200 samples, 0.19%)</title><rect x="22.2168%" y="453" width="0.1872%" height="15" fill="rgb(207,163,36)" fg:x="23740" fg:w="200"/><text x="22.4668%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (200 samples, 0.19%)</title><rect x="22.2168%" y="437" width="0.1872%" height="15" fill="rgb(208,122,22)" fg:x="23740" fg:w="200"/><text x="22.4668%" y="447.50"></text></g><g><title>rust_alloc (192 samples, 0.18%)</title><rect x="22.2243%" y="421" width="0.1797%" height="15" fill="rgb(207,104,49)" fg:x="23748" fg:w="192"/><text x="22.4743%" y="431.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="22.3918%" y="405" width="0.0122%" height="15" fill="rgb(248,211,50)" fg:x="23927" fg:w="13"/><text x="22.6418%" y="415.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="22.4620%" y="581" width="0.0178%" height="15" fill="rgb(217,13,45)" fg:x="24002" fg:w="19"/><text x="22.7120%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.05%)</title><rect x="22.4620%" y="597" width="0.0459%" height="15" fill="rgb(211,216,49)" fg:x="24002" fg:w="49"/><text x="22.7120%" y="607.50"></text></g><g><title>&lt;halfbrown::iter::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.03%)</title><rect x="22.4798%" y="581" width="0.0281%" height="15" fill="rgb(221,58,53)" fg:x="24021" fg:w="30"/><text x="22.7298%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (53 samples, 0.05%)</title><rect x="22.5079%" y="597" width="0.0496%" height="15" fill="rgb(220,112,41)" fg:x="24051" fg:w="53"/><text x="22.7579%" y="607.50"></text></g><g><title>&lt;halfbrown::iter::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (53 samples, 0.05%)</title><rect x="22.5079%" y="581" width="0.0496%" height="15" fill="rgb(236,38,28)" fg:x="24051" fg:w="53"/><text x="22.7579%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (28 samples, 0.03%)</title><rect x="22.5313%" y="565" width="0.0262%" height="15" fill="rgb(227,195,22)" fg:x="24076" fg:w="28"/><text x="22.7813%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (28 samples, 0.03%)</title><rect x="22.5313%" y="549" width="0.0262%" height="15" fill="rgb(214,55,33)" fg:x="24076" fg:w="28"/><text x="22.7813%" y="559.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (28 samples, 0.03%)</title><rect x="22.5575%" y="597" width="0.0262%" height="15" fill="rgb(248,80,13)" fg:x="24104" fg:w="28"/><text x="22.8075%" y="607.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (28 samples, 0.03%)</title><rect x="22.5575%" y="581" width="0.0262%" height="15" fill="rgb(238,52,6)" fg:x="24104" fg:w="28"/><text x="22.8075%" y="591.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (28 samples, 0.03%)</title><rect x="22.5575%" y="565" width="0.0262%" height="15" fill="rgb(224,198,47)" fg:x="24104" fg:w="28"/><text x="22.8075%" y="575.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (26 samples, 0.02%)</title><rect x="22.5593%" y="549" width="0.0243%" height="15" fill="rgb(233,171,20)" fg:x="24106" fg:w="26"/><text x="22.8093%" y="559.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (26 samples, 0.02%)</title><rect x="22.5593%" y="533" width="0.0243%" height="15" fill="rgb(241,30,25)" fg:x="24106" fg:w="26"/><text x="22.8093%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (26 samples, 0.02%)</title><rect x="22.5593%" y="517" width="0.0243%" height="15" fill="rgb(207,171,38)" fg:x="24106" fg:w="26"/><text x="22.8093%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (26 samples, 0.02%)</title><rect x="22.5593%" y="501" width="0.0243%" height="15" fill="rgb(234,70,1)" fg:x="24106" fg:w="26"/><text x="22.8093%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (26 samples, 0.02%)</title><rect x="22.5593%" y="485" width="0.0243%" height="15" fill="rgb(232,178,18)" fg:x="24106" fg:w="26"/><text x="22.8093%" y="495.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (14 samples, 0.01%)</title><rect x="22.6174%" y="517" width="0.0131%" height="15" fill="rgb(241,78,40)" fg:x="24168" fg:w="14"/><text x="22.8674%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="22.6127%" y="533" width="0.0365%" height="15" fill="rgb(222,35,25)" fg:x="24163" fg:w="39"/><text x="22.8627%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (566 samples, 0.53%)</title><rect x="22.1204%" y="645" width="0.5297%" height="15" fill="rgb(207,92,16)" fg:x="23637" fg:w="566"/><text x="22.3704%" y="655.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (540 samples, 0.51%)</title><rect x="22.1448%" y="629" width="0.5054%" height="15" fill="rgb(216,59,51)" fg:x="23663" fg:w="540"/><text x="22.3948%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (263 samples, 0.25%)</title><rect x="22.4040%" y="613" width="0.2461%" height="15" fill="rgb(213,80,28)" fg:x="23940" fg:w="263"/><text x="22.6540%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;halfbrown::iter::IntoIter&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;,&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from::{{closure}}&gt;&gt; (71 samples, 0.07%)</title><rect x="22.5837%" y="597" width="0.0664%" height="15" fill="rgb(220,93,7)" fg:x="24132" fg:w="71"/><text x="22.8337%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::iter::IntoIter&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (71 samples, 0.07%)</title><rect x="22.5837%" y="581" width="0.0664%" height="15" fill="rgb(225,24,44)" fg:x="24132" fg:w="71"/><text x="22.8337%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::iter::IntoIterInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (71 samples, 0.07%)</title><rect x="22.5837%" y="565" width="0.0664%" height="15" fill="rgb(243,74,40)" fg:x="24132" fg:w="71"/><text x="22.8337%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (63 samples, 0.06%)</title><rect x="22.5912%" y="549" width="0.0590%" height="15" fill="rgb(228,39,7)" fg:x="24140" fg:w="63"/><text x="22.8412%" y="559.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::IntoIterator for halfbrown::HashMap&lt;K,V,S&gt;&gt;::into_iter (44 samples, 0.04%)</title><rect x="22.6501%" y="645" width="0.0412%" height="15" fill="rgb(227,79,8)" fg:x="24203" fg:w="44"/><text x="22.9001%" y="655.50"></text></g><g><title>halfbrown::vecmap::iter::&lt;impl core::iter::traits::collect::IntoIterator for halfbrown::vecmap::VecMap&lt;K,V,S&gt;&gt;::into_iter (36 samples, 0.03%)</title><rect x="22.6576%" y="629" width="0.0337%" height="15" fill="rgb(236,58,11)" fg:x="24211" fg:w="36"/><text x="22.9076%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (36 samples, 0.03%)</title><rect x="22.6576%" y="613" width="0.0337%" height="15" fill="rgb(249,63,35)" fg:x="24211" fg:w="36"/><text x="22.9076%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (36 samples, 0.03%)</title><rect x="22.6576%" y="597" width="0.0337%" height="15" fill="rgb(252,114,16)" fg:x="24211" fg:w="36"/><text x="22.9076%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (36 samples, 0.03%)</title><rect x="22.6576%" y="581" width="0.0337%" height="15" fill="rgb(254,151,24)" fg:x="24211" fg:w="36"/><text x="22.9076%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,962 samples, 1.84%)</title><rect x="20.8598%" y="773" width="1.8361%" height="15" fill="rgb(253,54,39)" fg:x="22290" fg:w="1962"/><text x="21.1098%" y="783.50">&lt;..</text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (1,962 samples, 1.84%)</title><rect x="20.8598%" y="757" width="1.8361%" height="15" fill="rgb(243,25,45)" fg:x="22290" fg:w="1962"/><text x="21.1098%" y="767.50">&lt;..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,962 samples, 1.84%)</title><rect x="20.8598%" y="741" width="1.8361%" height="15" fill="rgb(234,134,9)" fg:x="22290" fg:w="1962"/><text x="21.1098%" y="751.50">&lt;..</text></g><g><title>&lt;tremor_script::pdk::PdkEventPayload as core::convert::From&lt;tremor_script::srs::EventPayload&gt;&gt;::from (1,501 samples, 1.40%)</title><rect x="21.2913%" y="725" width="1.4047%" height="15" fill="rgb(227,166,31)" fg:x="22751" fg:w="1501"/><text x="21.5413%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,501 samples, 1.40%)</title><rect x="21.2913%" y="709" width="1.4047%" height="15" fill="rgb(245,143,41)" fg:x="22751" fg:w="1501"/><text x="21.5413%" y="719.50"></text></g><g><title>&lt;tremor_script::pdk::PdkValueAndMeta as core::convert::From&lt;tremor_script::srs::ValueAndMeta&gt;&gt;::from (1,501 samples, 1.40%)</title><rect x="21.2913%" y="693" width="1.4047%" height="15" fill="rgb(238,181,32)" fg:x="22751" fg:w="1501"/><text x="21.5413%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,501 samples, 1.40%)</title><rect x="21.2913%" y="677" width="1.4047%" height="15" fill="rgb(224,113,18)" fg:x="22751" fg:w="1501"/><text x="21.5413%" y="687.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (1,501 samples, 1.40%)</title><rect x="21.2913%" y="661" width="1.4047%" height="15" fill="rgb(240,229,28)" fg:x="22751" fg:w="1501"/><text x="21.5413%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.03%)</title><rect x="22.7184%" y="549" width="0.0346%" height="15" fill="rgb(250,185,3)" fg:x="24276" fg:w="37"/><text x="22.9684%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (240 samples, 0.22%)</title><rect x="23.0123%" y="533" width="0.2246%" height="15" fill="rgb(212,59,25)" fg:x="24590" fg:w="240"/><text x="23.2623%" y="543.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (88 samples, 0.08%)</title><rect x="23.1545%" y="517" width="0.0824%" height="15" fill="rgb(221,87,20)" fg:x="24742" fg:w="88"/><text x="23.4045%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="23.2397%" y="517" width="0.0122%" height="15" fill="rgb(213,74,28)" fg:x="24833" fg:w="13"/><text x="23.4897%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="23.2369%" y="533" width="0.0356%" height="15" fill="rgb(224,132,34)" fg:x="24830" fg:w="38"/><text x="23.4869%" y="543.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="23.2593%" y="517" width="0.0131%" height="15" fill="rgb(222,101,24)" fg:x="24854" fg:w="14"/><text x="23.5093%" y="527.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="23.2781%" y="533" width="0.0393%" height="15" fill="rgb(254,142,4)" fg:x="24874" fg:w="42"/><text x="23.5281%" y="543.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (74 samples, 0.07%)</title><rect x="23.3174%" y="533" width="0.0693%" height="15" fill="rgb(230,229,49)" fg:x="24916" fg:w="74"/><text x="23.5674%" y="543.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="23.3744%" y="517" width="0.0122%" height="15" fill="rgb(238,70,47)" fg:x="24977" fg:w="13"/><text x="23.6244%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (151 samples, 0.14%)</title><rect x="23.3866%" y="533" width="0.1413%" height="15" fill="rgb(231,160,17)" fg:x="24990" fg:w="151"/><text x="23.6366%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::deref::Deref for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::deref (32 samples, 0.03%)</title><rect x="23.5279%" y="533" width="0.0299%" height="15" fill="rgb(218,68,53)" fg:x="25141" fg:w="32"/><text x="23.7779%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (32 samples, 0.03%)</title><rect x="23.5279%" y="517" width="0.0299%" height="15" fill="rgb(236,111,10)" fg:x="25141" fg:w="32"/><text x="23.7779%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.04%)</title><rect x="23.5579%" y="469" width="0.0356%" height="15" fill="rgb(224,34,41)" fg:x="25173" fg:w="38"/><text x="23.8079%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (45 samples, 0.04%)</title><rect x="23.5579%" y="533" width="0.0421%" height="15" fill="rgb(241,118,19)" fg:x="25173" fg:w="45"/><text x="23.8079%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (45 samples, 0.04%)</title><rect x="23.5579%" y="517" width="0.0421%" height="15" fill="rgb(238,129,25)" fg:x="25173" fg:w="45"/><text x="23.8079%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.04%)</title><rect x="23.5579%" y="501" width="0.0421%" height="15" fill="rgb(238,22,31)" fg:x="25173" fg:w="45"/><text x="23.8079%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (45 samples, 0.04%)</title><rect x="23.5579%" y="485" width="0.0421%" height="15" fill="rgb(222,174,48)" fg:x="25173" fg:w="45"/><text x="23.8079%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (27 samples, 0.03%)</title><rect x="23.6908%" y="229" width="0.0253%" height="15" fill="rgb(206,152,40)" fg:x="25315" fg:w="27"/><text x="23.9408%" y="239.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="23.6945%" y="213" width="0.0215%" height="15" fill="rgb(218,99,54)" fg:x="25319" fg:w="23"/><text x="23.9445%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (68 samples, 0.06%)</title><rect x="23.6552%" y="277" width="0.0636%" height="15" fill="rgb(220,174,26)" fg:x="25277" fg:w="68"/><text x="23.9052%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (68 samples, 0.06%)</title><rect x="23.6552%" y="261" width="0.0636%" height="15" fill="rgb(245,116,9)" fg:x="25277" fg:w="68"/><text x="23.9052%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (58 samples, 0.05%)</title><rect x="23.6646%" y="245" width="0.0543%" height="15" fill="rgb(209,72,35)" fg:x="25287" fg:w="58"/><text x="23.9146%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (90 samples, 0.08%)</title><rect x="23.6496%" y="309" width="0.0842%" height="15" fill="rgb(226,126,21)" fg:x="25271" fg:w="90"/><text x="23.8996%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (90 samples, 0.08%)</title><rect x="23.6496%" y="293" width="0.0842%" height="15" fill="rgb(227,192,1)" fg:x="25271" fg:w="90"/><text x="23.8996%" y="303.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.01%)</title><rect x="23.7188%" y="277" width="0.0150%" height="15" fill="rgb(237,180,29)" fg:x="25345" fg:w="16"/><text x="23.9688%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (100 samples, 0.09%)</title><rect x="23.6496%" y="341" width="0.0936%" height="15" fill="rgb(230,197,35)" fg:x="25271" fg:w="100"/><text x="23.8996%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (100 samples, 0.09%)</title><rect x="23.6496%" y="325" width="0.0936%" height="15" fill="rgb(246,193,31)" fg:x="25271" fg:w="100"/><text x="23.8996%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (109 samples, 0.10%)</title><rect x="23.6486%" y="357" width="0.1020%" height="15" fill="rgb(241,36,4)" fg:x="25270" fg:w="109"/><text x="23.8986%" y="367.50"></text></g><g><title>rust_dealloc (120 samples, 0.11%)</title><rect x="23.6458%" y="373" width="0.1123%" height="15" fill="rgb(241,130,17)" fg:x="25267" fg:w="120"/><text x="23.8958%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (37 samples, 0.03%)</title><rect x="23.7600%" y="357" width="0.0346%" height="15" fill="rgb(206,137,32)" fg:x="25389" fg:w="37"/><text x="24.0100%" y="367.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (182 samples, 0.17%)</title><rect x="23.6290%" y="389" width="0.1703%" height="15" fill="rgb(237,228,51)" fg:x="25249" fg:w="182"/><text x="23.8790%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (44 samples, 0.04%)</title><rect x="23.7581%" y="373" width="0.0412%" height="15" fill="rgb(243,6,42)" fg:x="25387" fg:w="44"/><text x="24.0081%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (197 samples, 0.18%)</title><rect x="23.6159%" y="437" width="0.1844%" height="15" fill="rgb(251,74,28)" fg:x="25235" fg:w="197"/><text x="23.8659%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (190 samples, 0.18%)</title><rect x="23.6224%" y="421" width="0.1778%" height="15" fill="rgb(218,20,49)" fg:x="25242" fg:w="190"/><text x="23.8724%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (183 samples, 0.17%)</title><rect x="23.6290%" y="405" width="0.1713%" height="15" fill="rgb(238,28,14)" fg:x="25249" fg:w="183"/><text x="23.8790%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (219 samples, 0.20%)</title><rect x="23.6056%" y="501" width="0.2049%" height="15" fill="rgb(229,40,46)" fg:x="25224" fg:w="219"/><text x="23.8556%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (215 samples, 0.20%)</title><rect x="23.6093%" y="485" width="0.2012%" height="15" fill="rgb(244,195,20)" fg:x="25228" fg:w="215"/><text x="23.8593%" y="495.50"></text></g><g><title>core::mem::drop (208 samples, 0.19%)</title><rect x="23.6159%" y="469" width="0.1947%" height="15" fill="rgb(253,56,35)" fg:x="25235" fg:w="208"/><text x="23.8659%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (208 samples, 0.19%)</title><rect x="23.6159%" y="453" width="0.1947%" height="15" fill="rgb(210,149,44)" fg:x="25235" fg:w="208"/><text x="23.8659%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="23.8003%" y="437" width="0.0103%" height="15" fill="rgb(240,135,12)" fg:x="25432" fg:w="11"/><text x="24.0503%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="23.8003%" y="421" width="0.0103%" height="15" fill="rgb(251,24,50)" fg:x="25432" fg:w="11"/><text x="24.0503%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="23.8003%" y="405" width="0.0103%" height="15" fill="rgb(243,200,47)" fg:x="25432" fg:w="11"/><text x="24.0503%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="23.8003%" y="389" width="0.0103%" height="15" fill="rgb(224,166,26)" fg:x="25432" fg:w="11"/><text x="24.0503%" y="399.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="23.8003%" y="373" width="0.0103%" height="15" fill="rgb(233,0,47)" fg:x="25432" fg:w="11"/><text x="24.0503%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="23.8003%" y="357" width="0.0103%" height="15" fill="rgb(253,80,5)" fg:x="25432" fg:w="11"/><text x="24.0503%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (21 samples, 0.02%)</title><rect x="23.8274%" y="405" width="0.0197%" height="15" fill="rgb(214,133,25)" fg:x="25461" fg:w="21"/><text x="24.0774%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (21 samples, 0.02%)</title><rect x="23.8274%" y="389" width="0.0197%" height="15" fill="rgb(209,27,14)" fg:x="25461" fg:w="21"/><text x="24.0774%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (20 samples, 0.02%)</title><rect x="23.8283%" y="373" width="0.0187%" height="15" fill="rgb(219,102,51)" fg:x="25462" fg:w="20"/><text x="24.0783%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (36 samples, 0.03%)</title><rect x="23.8171%" y="437" width="0.0337%" height="15" fill="rgb(237,18,16)" fg:x="25450" fg:w="36"/><text x="24.0671%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (36 samples, 0.03%)</title><rect x="23.8171%" y="421" width="0.0337%" height="15" fill="rgb(241,85,17)" fg:x="25450" fg:w="36"/><text x="24.0671%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (41 samples, 0.04%)</title><rect x="23.8171%" y="469" width="0.0384%" height="15" fill="rgb(236,90,42)" fg:x="25450" fg:w="41"/><text x="24.0671%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (41 samples, 0.04%)</title><rect x="23.8171%" y="453" width="0.0384%" height="15" fill="rgb(249,57,21)" fg:x="25450" fg:w="41"/><text x="24.0671%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (46 samples, 0.04%)</title><rect x="23.8134%" y="485" width="0.0430%" height="15" fill="rgb(243,12,36)" fg:x="25446" fg:w="46"/><text x="24.0634%" y="495.50"></text></g><g><title>rust_dealloc (52 samples, 0.05%)</title><rect x="23.8105%" y="501" width="0.0487%" height="15" fill="rgb(253,128,47)" fg:x="25443" fg:w="52"/><text x="24.0605%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (278 samples, 0.26%)</title><rect x="23.6000%" y="533" width="0.2602%" height="15" fill="rgb(207,33,20)" fg:x="25218" fg:w="278"/><text x="23.8500%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (278 samples, 0.26%)</title><rect x="23.6000%" y="517" width="0.2602%" height="15" fill="rgb(233,215,35)" fg:x="25218" fg:w="278"/><text x="23.8500%" y="527.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (24 samples, 0.02%)</title><rect x="23.8835%" y="437" width="0.0225%" height="15" fill="rgb(249,188,52)" fg:x="25521" fg:w="24"/><text x="24.1335%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (24 samples, 0.02%)</title><rect x="23.8835%" y="421" width="0.0225%" height="15" fill="rgb(225,12,32)" fg:x="25521" fg:w="24"/><text x="24.1335%" y="431.50"></text></g><g><title>core::mem::drop (22 samples, 0.02%)</title><rect x="23.8854%" y="405" width="0.0206%" height="15" fill="rgb(247,98,14)" fg:x="25523" fg:w="22"/><text x="24.1354%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="23.8854%" y="389" width="0.0206%" height="15" fill="rgb(247,219,48)" fg:x="25523" fg:w="22"/><text x="24.1354%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="23.8854%" y="373" width="0.0206%" height="15" fill="rgb(253,60,48)" fg:x="25523" fg:w="22"/><text x="24.1354%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="23.8854%" y="357" width="0.0206%" height="15" fill="rgb(245,15,52)" fg:x="25523" fg:w="22"/><text x="24.1354%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="23.8938%" y="341" width="0.0122%" height="15" fill="rgb(220,133,28)" fg:x="25532" fg:w="13"/><text x="24.1438%" y="351.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="23.9331%" y="405" width="0.0122%" height="15" fill="rgb(217,180,4)" fg:x="25574" fg:w="13"/><text x="24.1831%" y="415.50"></text></g><g><title>sizeclass_to_size (19 samples, 0.02%)</title><rect x="23.9659%" y="341" width="0.0178%" height="15" fill="rgb(251,24,1)" fg:x="25609" fg:w="19"/><text x="24.2159%" y="351.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (19 samples, 0.02%)</title><rect x="23.9659%" y="325" width="0.0178%" height="15" fill="rgb(212,185,49)" fg:x="25609" fg:w="19"/><text x="24.2159%" y="335.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (16 samples, 0.01%)</title><rect x="24.0436%" y="309" width="0.0150%" height="15" fill="rgb(215,175,22)" fg:x="25692" fg:w="16"/><text x="24.2936%" y="319.50"></text></g><g><title> (16 samples, 0.01%)</title><rect x="24.0436%" y="293" width="0.0150%" height="15" fill="rgb(250,205,14)" fg:x="25692" fg:w="16"/><text x="24.2936%" y="303.50"></text></g><g><title>snmalloc::Remote::set_info (11 samples, 0.01%)</title><rect x="24.0585%" y="309" width="0.0103%" height="15" fill="rgb(225,211,22)" fg:x="25708" fg:w="11"/><text x="24.3085%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (105 samples, 0.10%)</title><rect x="23.9846%" y="341" width="0.0983%" height="15" fill="rgb(251,179,42)" fg:x="25629" fg:w="105"/><text x="24.2346%" y="351.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (87 samples, 0.08%)</title><rect x="24.0015%" y="325" width="0.0814%" height="15" fill="rgb(208,216,51)" fg:x="25647" fg:w="87"/><text x="24.2515%" y="335.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (15 samples, 0.01%)</title><rect x="24.0688%" y="309" width="0.0140%" height="15" fill="rgb(235,36,11)" fg:x="25719" fg:w="15"/><text x="24.3188%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (148 samples, 0.14%)</title><rect x="23.9453%" y="373" width="0.1385%" height="15" fill="rgb(213,189,28)" fg:x="25587" fg:w="148"/><text x="24.1953%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (148 samples, 0.14%)</title><rect x="23.9453%" y="357" width="0.1385%" height="15" fill="rgb(227,203,42)" fg:x="25587" fg:w="148"/><text x="24.1953%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (153 samples, 0.14%)</title><rect x="23.9453%" y="405" width="0.1432%" height="15" fill="rgb(244,72,36)" fg:x="25587" fg:w="153"/><text x="24.1953%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (153 samples, 0.14%)</title><rect x="23.9453%" y="389" width="0.1432%" height="15" fill="rgb(213,53,17)" fg:x="25587" fg:w="153"/><text x="24.1953%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (184 samples, 0.17%)</title><rect x="23.9228%" y="421" width="0.1722%" height="15" fill="rgb(207,167,3)" fg:x="25563" fg:w="184"/><text x="24.1728%" y="431.50"></text></g><g><title>rust_dealloc (207 samples, 0.19%)</title><rect x="23.9060%" y="437" width="0.1937%" height="15" fill="rgb(216,98,30)" fg:x="25545" fg:w="207"/><text x="24.1560%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (236 samples, 0.22%)</title><rect x="23.8798%" y="485" width="0.2209%" height="15" fill="rgb(236,123,15)" fg:x="25517" fg:w="236"/><text x="24.1298%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (236 samples, 0.22%)</title><rect x="23.8798%" y="469" width="0.2209%" height="15" fill="rgb(248,81,50)" fg:x="25517" fg:w="236"/><text x="24.1298%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (236 samples, 0.22%)</title><rect x="23.8798%" y="453" width="0.2209%" height="15" fill="rgb(214,120,4)" fg:x="25517" fg:w="236"/><text x="24.1298%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (11 samples, 0.01%)</title><rect x="24.1231%" y="421" width="0.0103%" height="15" fill="rgb(208,179,34)" fg:x="25777" fg:w="11"/><text x="24.3731%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (11 samples, 0.01%)</title><rect x="24.1231%" y="405" width="0.0103%" height="15" fill="rgb(227,140,7)" fg:x="25777" fg:w="11"/><text x="24.3731%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="24.4357%" y="213" width="0.0159%" height="15" fill="rgb(214,22,6)" fg:x="26111" fg:w="17"/><text x="24.6857%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="24.4357%" y="197" width="0.0159%" height="15" fill="rgb(207,137,27)" fg:x="26111" fg:w="17"/><text x="24.6857%" y="207.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="24.4357%" y="181" width="0.0159%" height="15" fill="rgb(210,8,46)" fg:x="26111" fg:w="17"/><text x="24.6857%" y="191.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="24.4357%" y="165" width="0.0159%" height="15" fill="rgb(240,16,54)" fg:x="26111" fg:w="17"/><text x="24.6857%" y="175.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (19 samples, 0.02%)</title><rect x="24.4348%" y="309" width="0.0178%" height="15" fill="rgb(211,209,29)" fg:x="26110" fg:w="19"/><text x="24.6848%" y="319.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (19 samples, 0.02%)</title><rect x="24.4348%" y="293" width="0.0178%" height="15" fill="rgb(226,228,24)" fg:x="26110" fg:w="19"/><text x="24.6848%" y="303.50"></text></g><g><title>core::mem::drop (18 samples, 0.02%)</title><rect x="24.4357%" y="277" width="0.0168%" height="15" fill="rgb(222,84,9)" fg:x="26111" fg:w="18"/><text x="24.6857%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (18 samples, 0.02%)</title><rect x="24.4357%" y="261" width="0.0168%" height="15" fill="rgb(234,203,30)" fg:x="26111" fg:w="18"/><text x="24.6857%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (18 samples, 0.02%)</title><rect x="24.4357%" y="245" width="0.0168%" height="15" fill="rgb(238,109,14)" fg:x="26111" fg:w="18"/><text x="24.6857%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="24.4357%" y="229" width="0.0168%" height="15" fill="rgb(233,206,34)" fg:x="26111" fg:w="18"/><text x="24.6857%" y="239.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="24.4535%" y="293" width="0.0131%" height="15" fill="rgb(220,167,47)" fg:x="26130" fg:w="14"/><text x="24.7035%" y="303.50"></text></g><g><title>rust_dealloc (27 samples, 0.03%)</title><rect x="24.4778%" y="213" width="0.0253%" height="15" fill="rgb(238,105,10)" fg:x="26156" fg:w="27"/><text x="24.7278%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (27 samples, 0.03%)</title><rect x="24.5611%" y="181" width="0.0253%" height="15" fill="rgb(213,227,17)" fg:x="26245" fg:w="27"/><text x="24.8111%" y="191.50"></text></g><g><title> (27 samples, 0.03%)</title><rect x="24.5611%" y="165" width="0.0253%" height="15" fill="rgb(217,132,38)" fg:x="26245" fg:w="27"/><text x="24.8111%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (86 samples, 0.08%)</title><rect x="24.5152%" y="213" width="0.0805%" height="15" fill="rgb(242,146,4)" fg:x="26196" fg:w="86"/><text x="24.7652%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (76 samples, 0.07%)</title><rect x="24.5246%" y="197" width="0.0711%" height="15" fill="rgb(212,61,9)" fg:x="26206" fg:w="76"/><text x="24.7746%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (151 samples, 0.14%)</title><rect x="24.4759%" y="245" width="0.1413%" height="15" fill="rgb(247,126,22)" fg:x="26154" fg:w="151"/><text x="24.7259%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (151 samples, 0.14%)</title><rect x="24.4759%" y="229" width="0.1413%" height="15" fill="rgb(220,196,2)" fg:x="26154" fg:w="151"/><text x="24.7259%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (23 samples, 0.02%)</title><rect x="24.5957%" y="213" width="0.0215%" height="15" fill="rgb(208,46,4)" fg:x="26282" fg:w="23"/><text x="24.8457%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (154 samples, 0.14%)</title><rect x="24.4759%" y="277" width="0.1441%" height="15" fill="rgb(252,104,46)" fg:x="26154" fg:w="154"/><text x="24.7259%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (154 samples, 0.14%)</title><rect x="24.4759%" y="261" width="0.1441%" height="15" fill="rgb(237,152,48)" fg:x="26154" fg:w="154"/><text x="24.7259%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (172 samples, 0.16%)</title><rect x="24.4666%" y="293" width="0.1610%" height="15" fill="rgb(221,59,37)" fg:x="26144" fg:w="172"/><text x="24.7166%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (531 samples, 0.50%)</title><rect x="24.1334%" y="389" width="0.4969%" height="15" fill="rgb(209,202,51)" fg:x="25788" fg:w="531"/><text x="24.3834%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (530 samples, 0.50%)</title><rect x="24.1343%" y="373" width="0.4960%" height="15" fill="rgb(228,81,30)" fg:x="25789" fg:w="530"/><text x="24.3843%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (515 samples, 0.48%)</title><rect x="24.1484%" y="357" width="0.4820%" height="15" fill="rgb(227,42,39)" fg:x="25804" fg:w="515"/><text x="24.3984%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (515 samples, 0.48%)</title><rect x="24.1484%" y="341" width="0.4820%" height="15" fill="rgb(221,26,2)" fg:x="25804" fg:w="515"/><text x="24.3984%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (515 samples, 0.48%)</title><rect x="24.1484%" y="325" width="0.4820%" height="15" fill="rgb(254,61,31)" fg:x="25804" fg:w="515"/><text x="24.3984%" y="335.50"></text></g><g><title>rust_dealloc (190 samples, 0.18%)</title><rect x="24.4525%" y="309" width="0.1778%" height="15" fill="rgb(222,173,38)" fg:x="26129" fg:w="190"/><text x="24.7025%" y="319.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (586 samples, 0.55%)</title><rect x="24.1025%" y="453" width="0.5484%" height="15" fill="rgb(218,50,12)" fg:x="25755" fg:w="586"/><text x="24.3525%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (582 samples, 0.54%)</title><rect x="24.1063%" y="437" width="0.5447%" height="15" fill="rgb(223,88,40)" fg:x="25759" fg:w="582"/><text x="24.3563%" y="447.50"></text></g><g><title>core::mem::drop (553 samples, 0.52%)</title><rect x="24.1334%" y="421" width="0.5175%" height="15" fill="rgb(237,54,19)" fg:x="25788" fg:w="553"/><text x="24.3834%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (553 samples, 0.52%)</title><rect x="24.1334%" y="405" width="0.5175%" height="15" fill="rgb(251,129,25)" fg:x="25788" fg:w="553"/><text x="24.3834%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (22 samples, 0.02%)</title><rect x="24.6303%" y="389" width="0.0206%" height="15" fill="rgb(238,97,19)" fg:x="26319" fg:w="22"/><text x="24.8803%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="24.6303%" y="373" width="0.0206%" height="15" fill="rgb(240,169,18)" fg:x="26319" fg:w="22"/><text x="24.8803%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="24.6303%" y="357" width="0.0206%" height="15" fill="rgb(230,187,49)" fg:x="26319" fg:w="22"/><text x="24.8803%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="24.6303%" y="341" width="0.0206%" height="15" fill="rgb(209,44,26)" fg:x="26319" fg:w="22"/><text x="24.8803%" y="351.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="24.6303%" y="325" width="0.0206%" height="15" fill="rgb(244,0,6)" fg:x="26319" fg:w="22"/><text x="24.8803%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="24.6303%" y="309" width="0.0206%" height="15" fill="rgb(248,18,21)" fg:x="26319" fg:w="22"/><text x="24.8803%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (12 samples, 0.01%)</title><rect x="24.6678%" y="357" width="0.0112%" height="15" fill="rgb(245,180,19)" fg:x="26359" fg:w="12"/><text x="24.9178%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (46 samples, 0.04%)</title><rect x="24.6790%" y="357" width="0.0430%" height="15" fill="rgb(252,118,36)" fg:x="26371" fg:w="46"/><text x="24.9290%" y="367.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (40 samples, 0.04%)</title><rect x="24.6846%" y="341" width="0.0374%" height="15" fill="rgb(210,224,19)" fg:x="26377" fg:w="40"/><text x="24.9346%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (75 samples, 0.07%)</title><rect x="24.6668%" y="389" width="0.0702%" height="15" fill="rgb(218,30,24)" fg:x="26358" fg:w="75"/><text x="24.9168%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (75 samples, 0.07%)</title><rect x="24.6668%" y="373" width="0.0702%" height="15" fill="rgb(219,75,50)" fg:x="26358" fg:w="75"/><text x="24.9168%" y="383.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.01%)</title><rect x="24.7221%" y="357" width="0.0150%" height="15" fill="rgb(234,72,50)" fg:x="26417" fg:w="16"/><text x="24.9721%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (91 samples, 0.09%)</title><rect x="24.6584%" y="437" width="0.0852%" height="15" fill="rgb(219,100,48)" fg:x="26349" fg:w="91"/><text x="24.9084%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (82 samples, 0.08%)</title><rect x="24.6668%" y="421" width="0.0767%" height="15" fill="rgb(253,5,41)" fg:x="26358" fg:w="82"/><text x="24.9168%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (82 samples, 0.08%)</title><rect x="24.6668%" y="405" width="0.0767%" height="15" fill="rgb(247,181,11)" fg:x="26358" fg:w="82"/><text x="24.9168%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (938 samples, 0.88%)</title><rect x="23.8676%" y="517" width="0.8778%" height="15" fill="rgb(222,223,25)" fg:x="25504" fg:w="938"/><text x="24.1176%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (925 samples, 0.87%)</title><rect x="23.8798%" y="501" width="0.8657%" height="15" fill="rgb(214,198,28)" fg:x="25517" fg:w="925"/><text x="24.1298%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (689 samples, 0.64%)</title><rect x="24.1007%" y="485" width="0.6448%" height="15" fill="rgb(230,46,43)" fg:x="25753" fg:w="689"/><text x="24.3507%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (689 samples, 0.64%)</title><rect x="24.1007%" y="469" width="0.6448%" height="15" fill="rgb(233,65,53)" fg:x="25753" fg:w="689"/><text x="24.3507%" y="479.50"></text></g><g><title>rust_dealloc (101 samples, 0.09%)</title><rect x="24.6509%" y="453" width="0.0945%" height="15" fill="rgb(221,121,27)" fg:x="26341" fg:w="101"/><text x="24.9009%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (12 samples, 0.01%)</title><rect x="24.7455%" y="517" width="0.0112%" height="15" fill="rgb(247,70,47)" fg:x="26442" fg:w="12"/><text x="24.9955%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (12 samples, 0.01%)</title><rect x="24.7455%" y="501" width="0.0112%" height="15" fill="rgb(228,85,35)" fg:x="26442" fg:w="12"/><text x="24.9955%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (12 samples, 0.01%)</title><rect x="24.7455%" y="485" width="0.0112%" height="15" fill="rgb(209,50,18)" fg:x="26442" fg:w="12"/><text x="24.9955%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (16 samples, 0.01%)</title><rect x="24.7567%" y="517" width="0.0150%" height="15" fill="rgb(250,19,35)" fg:x="26454" fg:w="16"/><text x="25.0067%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (16 samples, 0.01%)</title><rect x="24.7567%" y="501" width="0.0150%" height="15" fill="rgb(253,107,29)" fg:x="26454" fg:w="16"/><text x="25.0067%" y="511.50"></text></g><g><title>abi_stable::std_types::arc::private::RArc&lt;T&gt;::data (207 samples, 0.19%)</title><rect x="24.8531%" y="341" width="0.1937%" height="15" fill="rgb(252,179,29)" fg:x="26557" fg:w="207"/><text x="25.1031%" y="351.50"></text></g><g><title>core::mem::drop (373 samples, 0.35%)</title><rect x="25.0683%" y="261" width="0.3491%" height="15" fill="rgb(238,194,6)" fg:x="26787" fg:w="373"/><text x="25.3183%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (373 samples, 0.35%)</title><rect x="25.0683%" y="245" width="0.3491%" height="15" fill="rgb(238,164,29)" fg:x="26787" fg:w="373"/><text x="25.3183%" y="255.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (373 samples, 0.35%)</title><rect x="25.0683%" y="229" width="0.3491%" height="15" fill="rgb(224,25,9)" fg:x="26787" fg:w="373"/><text x="25.3183%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (360 samples, 0.34%)</title><rect x="25.0805%" y="213" width="0.3369%" height="15" fill="rgb(244,153,23)" fg:x="26800" fg:w="360"/><text x="25.3305%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_sub (360 samples, 0.34%)</title><rect x="25.0805%" y="197" width="0.3369%" height="15" fill="rgb(212,203,14)" fg:x="26800" fg:w="360"/><text x="25.3305%" y="207.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (12 samples, 0.01%)</title><rect x="25.4417%" y="213" width="0.0112%" height="15" fill="rgb(220,164,20)" fg:x="27186" fg:w="12"/><text x="25.6917%" y="223.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (12 samples, 0.01%)</title><rect x="25.4417%" y="197" width="0.0112%" height="15" fill="rgb(222,203,48)" fg:x="27186" fg:w="12"/><text x="25.6917%" y="207.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="25.4417%" y="181" width="0.0112%" height="15" fill="rgb(215,159,22)" fg:x="27186" fg:w="12"/><text x="25.6917%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="25.4417%" y="165" width="0.0112%" height="15" fill="rgb(216,183,47)" fg:x="27186" fg:w="12"/><text x="25.6917%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="25.4417%" y="149" width="0.0112%" height="15" fill="rgb(229,195,25)" fg:x="27186" fg:w="12"/><text x="25.6917%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="25.4417%" y="133" width="0.0112%" height="15" fill="rgb(224,132,51)" fg:x="27186" fg:w="12"/><text x="25.6917%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="25.4417%" y="117" width="0.0112%" height="15" fill="rgb(240,63,7)" fg:x="27186" fg:w="12"/><text x="25.6917%" y="127.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="25.4417%" y="101" width="0.0112%" height="15" fill="rgb(249,182,41)" fg:x="27186" fg:w="12"/><text x="25.6917%" y="111.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="25.4417%" y="85" width="0.0112%" height="15" fill="rgb(243,47,26)" fg:x="27186" fg:w="12"/><text x="25.6917%" y="95.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="25.4417%" y="69" width="0.0112%" height="15" fill="rgb(233,48,2)" fg:x="27186" fg:w="12"/><text x="25.6917%" y="79.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="25.4632%" y="117" width="0.0103%" height="15" fill="rgb(244,165,34)" fg:x="27209" fg:w="11"/><text x="25.7132%" y="127.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (25 samples, 0.02%)</title><rect x="25.5194%" y="85" width="0.0234%" height="15" fill="rgb(207,89,7)" fg:x="27269" fg:w="25"/><text x="25.7694%" y="95.50"></text></g><g><title> (25 samples, 0.02%)</title><rect x="25.5194%" y="69" width="0.0234%" height="15" fill="rgb(244,117,36)" fg:x="27269" fg:w="25"/><text x="25.7694%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (90 samples, 0.08%)</title><rect x="25.4735%" y="117" width="0.0842%" height="15" fill="rgb(226,144,34)" fg:x="27220" fg:w="90"/><text x="25.7235%" y="127.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (82 samples, 0.08%)</title><rect x="25.4810%" y="101" width="0.0767%" height="15" fill="rgb(213,23,19)" fg:x="27228" fg:w="82"/><text x="25.7310%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (126 samples, 0.12%)</title><rect x="25.4632%" y="149" width="0.1179%" height="15" fill="rgb(217,75,12)" fg:x="27209" fg:w="126"/><text x="25.7132%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (126 samples, 0.12%)</title><rect x="25.4632%" y="133" width="0.1179%" height="15" fill="rgb(224,159,17)" fg:x="27209" fg:w="126"/><text x="25.7132%" y="143.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (25 samples, 0.02%)</title><rect x="25.5578%" y="117" width="0.0234%" height="15" fill="rgb(217,118,1)" fg:x="27310" fg:w="25"/><text x="25.8078%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (132 samples, 0.12%)</title><rect x="25.4632%" y="181" width="0.1235%" height="15" fill="rgb(232,180,48)" fg:x="27209" fg:w="132"/><text x="25.7132%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (132 samples, 0.12%)</title><rect x="25.4632%" y="165" width="0.1235%" height="15" fill="rgb(230,27,33)" fg:x="27209" fg:w="132"/><text x="25.7132%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (140 samples, 0.13%)</title><rect x="25.4614%" y="197" width="0.1310%" height="15" fill="rgb(205,31,21)" fg:x="27207" fg:w="140"/><text x="25.7114%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (577 samples, 0.54%)</title><rect x="25.0590%" y="277" width="0.5400%" height="15" fill="rgb(253,59,4)" fg:x="26777" fg:w="577"/><text x="25.3090%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (194 samples, 0.18%)</title><rect x="25.4174%" y="261" width="0.1816%" height="15" fill="rgb(224,201,9)" fg:x="27160" fg:w="194"/><text x="25.6674%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (194 samples, 0.18%)</title><rect x="25.4174%" y="245" width="0.1816%" height="15" fill="rgb(229,206,30)" fg:x="27160" fg:w="194"/><text x="25.6674%" y="255.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (194 samples, 0.18%)</title><rect x="25.4174%" y="229" width="0.1816%" height="15" fill="rgb(212,67,47)" fg:x="27160" fg:w="194"/><text x="25.6674%" y="239.50"></text></g><g><title>rust_dealloc (156 samples, 0.15%)</title><rect x="25.4529%" y="213" width="0.1460%" height="15" fill="rgb(211,96,50)" fg:x="27198" fg:w="156"/><text x="25.7029%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (475 samples, 0.44%)</title><rect x="25.5989%" y="277" width="0.4445%" height="15" fill="rgb(252,114,18)" fg:x="27354" fg:w="475"/><text x="25.8489%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_sub (475 samples, 0.44%)</title><rect x="25.5989%" y="261" width="0.4445%" height="15" fill="rgb(223,58,37)" fg:x="27354" fg:w="475"/><text x="25.8489%" y="271.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="26.0566%" y="245" width="0.0112%" height="15" fill="rgb(237,70,4)" fg:x="27843" fg:w="12"/><text x="26.3066%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (35 samples, 0.03%)</title><rect x="26.0940%" y="181" width="0.0328%" height="15" fill="rgb(244,85,46)" fg:x="27883" fg:w="35"/><text x="26.3440%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (26 samples, 0.02%)</title><rect x="26.1024%" y="165" width="0.0243%" height="15" fill="rgb(223,39,52)" fg:x="27892" fg:w="26"/><text x="26.3524%" y="175.50"></text></g><g><title>rust_dealloc (91 samples, 0.09%)</title><rect x="26.0435%" y="277" width="0.0852%" height="15" fill="rgb(218,200,14)" fg:x="27829" fg:w="91"/><text x="26.2935%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (77 samples, 0.07%)</title><rect x="26.0566%" y="261" width="0.0721%" height="15" fill="rgb(208,171,16)" fg:x="27843" fg:w="77"/><text x="26.3066%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (58 samples, 0.05%)</title><rect x="26.0743%" y="245" width="0.0543%" height="15" fill="rgb(234,200,18)" fg:x="27862" fg:w="58"/><text x="26.3243%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (58 samples, 0.05%)</title><rect x="26.0743%" y="229" width="0.0543%" height="15" fill="rgb(228,45,11)" fg:x="27862" fg:w="58"/><text x="26.3243%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (58 samples, 0.05%)</title><rect x="26.0743%" y="213" width="0.0543%" height="15" fill="rgb(237,182,11)" fg:x="27862" fg:w="58"/><text x="26.3243%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (58 samples, 0.05%)</title><rect x="26.0743%" y="197" width="0.0543%" height="15" fill="rgb(241,175,49)" fg:x="27862" fg:w="58"/><text x="26.3243%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,431 samples, 1.34%)</title><rect x="24.7932%" y="405" width="1.3392%" height="15" fill="rgb(247,38,35)" fg:x="26493" fg:w="1431"/><text x="25.0432%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (1,429 samples, 1.34%)</title><rect x="24.7951%" y="389" width="1.3373%" height="15" fill="rgb(228,39,49)" fg:x="26495" fg:w="1429"/><text x="25.0451%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,405 samples, 1.31%)</title><rect x="24.8175%" y="373" width="1.3149%" height="15" fill="rgb(226,101,26)" fg:x="26519" fg:w="1405"/><text x="25.0675%" y="383.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (1,405 samples, 1.31%)</title><rect x="24.8175%" y="357" width="1.3149%" height="15" fill="rgb(206,141,19)" fg:x="26519" fg:w="1405"/><text x="25.0675%" y="367.50"></text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (1,160 samples, 1.09%)</title><rect x="25.0468%" y="341" width="1.0856%" height="15" fill="rgb(211,200,13)" fg:x="26764" fg:w="1160"/><text x="25.2968%" y="351.50"></text></g><g><title>core::mem::drop (1,151 samples, 1.08%)</title><rect x="25.0552%" y="325" width="1.0772%" height="15" fill="rgb(241,121,6)" fg:x="26773" fg:w="1151"/><text x="25.3052%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,151 samples, 1.08%)</title><rect x="25.0552%" y="309" width="1.0772%" height="15" fill="rgb(234,221,29)" fg:x="26773" fg:w="1151"/><text x="25.3052%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,151 samples, 1.08%)</title><rect x="25.0552%" y="293" width="1.0772%" height="15" fill="rgb(229,136,5)" fg:x="26773" fg:w="1151"/><text x="25.3052%" y="303.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (1,466 samples, 1.37%)</title><rect x="24.7726%" y="469" width="1.3719%" height="15" fill="rgb(238,36,11)" fg:x="26471" fg:w="1466"/><text x="25.0226%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (1,460 samples, 1.37%)</title><rect x="24.7782%" y="453" width="1.3663%" height="15" fill="rgb(251,55,41)" fg:x="26477" fg:w="1460"/><text x="25.0282%" y="463.50"></text></g><g><title>core::mem::drop (1,444 samples, 1.35%)</title><rect x="24.7932%" y="437" width="1.3514%" height="15" fill="rgb(242,34,40)" fg:x="26493" fg:w="1444"/><text x="25.0432%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (1,444 samples, 1.35%)</title><rect x="24.7932%" y="421" width="1.3514%" height="15" fill="rgb(215,42,17)" fg:x="26493" fg:w="1444"/><text x="25.0432%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="26.1324%" y="405" width="0.0122%" height="15" fill="rgb(207,44,46)" fg:x="27924" fg:w="13"/><text x="26.3824%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="26.1324%" y="389" width="0.0122%" height="15" fill="rgb(211,206,28)" fg:x="27924" fg:w="13"/><text x="26.3824%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="26.1324%" y="373" width="0.0122%" height="15" fill="rgb(237,167,16)" fg:x="27924" fg:w="13"/><text x="26.3824%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="26.1324%" y="357" width="0.0122%" height="15" fill="rgb(233,66,6)" fg:x="27924" fg:w="13"/><text x="26.3824%" y="367.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="26.1324%" y="341" width="0.0122%" height="15" fill="rgb(246,123,29)" fg:x="27924" fg:w="13"/><text x="26.3824%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="26.1324%" y="325" width="0.0122%" height="15" fill="rgb(209,62,40)" fg:x="27924" fg:w="13"/><text x="26.3824%" y="335.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (12 samples, 0.01%)</title><rect x="26.1876%" y="341" width="0.0112%" height="15" fill="rgb(218,4,25)" fg:x="27983" fg:w="12"/><text x="26.4376%" y="351.50"></text></g><g><title> (12 samples, 0.01%)</title><rect x="26.1876%" y="325" width="0.0112%" height="15" fill="rgb(253,91,49)" fg:x="27983" fg:w="12"/><text x="26.4376%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (51 samples, 0.05%)</title><rect x="26.1595%" y="373" width="0.0477%" height="15" fill="rgb(228,155,29)" fg:x="27953" fg:w="51"/><text x="26.4095%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (37 samples, 0.03%)</title><rect x="26.1726%" y="357" width="0.0346%" height="15" fill="rgb(243,57,37)" fg:x="27967" fg:w="37"/><text x="26.4226%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (60 samples, 0.06%)</title><rect x="26.1530%" y="405" width="0.0562%" height="15" fill="rgb(244,167,17)" fg:x="27946" fg:w="60"/><text x="26.4030%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (60 samples, 0.06%)</title><rect x="26.1530%" y="389" width="0.0562%" height="15" fill="rgb(207,181,38)" fg:x="27946" fg:w="60"/><text x="26.4030%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (73 samples, 0.07%)</title><rect x="26.1530%" y="437" width="0.0683%" height="15" fill="rgb(211,8,23)" fg:x="27946" fg:w="73"/><text x="26.4030%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (73 samples, 0.07%)</title><rect x="26.1530%" y="421" width="0.0683%" height="15" fill="rgb(235,11,44)" fg:x="27946" fg:w="73"/><text x="26.4030%" y="431.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="26.2091%" y="405" width="0.0122%" height="15" fill="rgb(248,18,52)" fg:x="28006" fg:w="13"/><text x="26.4591%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="26.2091%" y="389" width="0.0122%" height="15" fill="rgb(208,4,7)" fg:x="28006" fg:w="13"/><text x="26.4591%" y="399.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="26.2091%" y="373" width="0.0122%" height="15" fill="rgb(240,17,39)" fg:x="28006" fg:w="13"/><text x="26.4591%" y="383.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="26.2091%" y="357" width="0.0122%" height="15" fill="rgb(207,170,3)" fg:x="28006" fg:w="13"/><text x="26.4591%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (83 samples, 0.08%)</title><rect x="26.1511%" y="453" width="0.0777%" height="15" fill="rgb(236,100,52)" fg:x="27944" fg:w="83"/><text x="26.4011%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (1,564 samples, 1.46%)</title><rect x="24.7726%" y="501" width="1.4637%" height="15" fill="rgb(246,78,51)" fg:x="26471" fg:w="1564"/><text x="25.0226%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (1,564 samples, 1.46%)</title><rect x="24.7726%" y="485" width="1.4637%" height="15" fill="rgb(211,17,15)" fg:x="26471" fg:w="1564"/><text x="25.0226%" y="495.50"></text></g><g><title>rust_dealloc (98 samples, 0.09%)</title><rect x="26.1445%" y="469" width="0.0917%" height="15" fill="rgb(209,59,46)" fg:x="27937" fg:w="98"/><text x="26.3945%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (104 samples, 0.10%)</title><rect x="26.2372%" y="485" width="0.0973%" height="15" fill="rgb(210,92,25)" fg:x="28036" fg:w="104"/><text x="26.4872%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (27 samples, 0.03%)</title><rect x="26.3092%" y="469" width="0.0253%" height="15" fill="rgb(238,174,52)" fg:x="28113" fg:w="27"/><text x="26.5592%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (21 samples, 0.02%)</title><rect x="26.3149%" y="453" width="0.0197%" height="15" fill="rgb(230,73,7)" fg:x="28119" fg:w="21"/><text x="26.5649%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (21 samples, 0.02%)</title><rect x="26.3149%" y="437" width="0.0197%" height="15" fill="rgb(243,124,40)" fg:x="28119" fg:w="21"/><text x="26.5649%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="26.3214%" y="421" width="0.0131%" height="15" fill="rgb(244,170,11)" fg:x="28126" fg:w="14"/><text x="26.5714%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::inner::RawTable&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (14 samples, 0.01%)</title><rect x="26.3214%" y="405" width="0.0131%" height="15" fill="rgb(207,114,54)" fg:x="28126" fg:w="14"/><text x="26.5714%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="26.3214%" y="389" width="0.0131%" height="15" fill="rgb(205,42,20)" fg:x="28126" fg:w="14"/><text x="26.5714%" y="399.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="26.3420%" y="453" width="0.0112%" height="15" fill="rgb(230,30,28)" fg:x="28148" fg:w="12"/><text x="26.5920%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="26.4028%" y="341" width="0.0168%" height="15" fill="rgb(205,73,54)" fg:x="28213" fg:w="18"/><text x="26.6528%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="26.4038%" y="325" width="0.0159%" height="15" fill="rgb(254,227,23)" fg:x="28214" fg:w="17"/><text x="26.6538%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (51 samples, 0.05%)</title><rect x="26.3785%" y="389" width="0.0477%" height="15" fill="rgb(228,202,34)" fg:x="28187" fg:w="51"/><text x="26.6285%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (51 samples, 0.05%)</title><rect x="26.3785%" y="373" width="0.0477%" height="15" fill="rgb(222,225,37)" fg:x="28187" fg:w="51"/><text x="26.6285%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (51 samples, 0.05%)</title><rect x="26.3785%" y="357" width="0.0477%" height="15" fill="rgb(221,14,54)" fg:x="28187" fg:w="51"/><text x="26.6285%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (80 samples, 0.07%)</title><rect x="26.3616%" y="453" width="0.0749%" height="15" fill="rgb(254,102,2)" fg:x="28169" fg:w="80"/><text x="26.6116%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (80 samples, 0.07%)</title><rect x="26.3616%" y="437" width="0.0749%" height="15" fill="rgb(232,104,17)" fg:x="28169" fg:w="80"/><text x="26.6116%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (80 samples, 0.07%)</title><rect x="26.3616%" y="421" width="0.0749%" height="15" fill="rgb(250,220,14)" fg:x="28169" fg:w="80"/><text x="26.6116%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (80 samples, 0.07%)</title><rect x="26.3616%" y="405" width="0.0749%" height="15" fill="rgb(241,158,9)" fg:x="28169" fg:w="80"/><text x="26.6116%" y="415.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="26.4262%" y="389" width="0.0103%" height="15" fill="rgb(246,9,43)" fg:x="28238" fg:w="11"/><text x="26.6762%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (102 samples, 0.10%)</title><rect x="26.3420%" y="469" width="0.0955%" height="15" fill="rgb(206,73,33)" fg:x="28148" fg:w="102"/><text x="26.5920%" y="479.50"></text></g><g><title>rust_dealloc (113 samples, 0.11%)</title><rect x="26.3345%" y="485" width="0.1057%" height="15" fill="rgb(222,79,8)" fg:x="28140" fg:w="113"/><text x="26.5845%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (2,760 samples, 2.58%)</title><rect x="23.8601%" y="533" width="2.5829%" height="15" fill="rgb(234,8,54)" fg:x="25496" fg:w="2760"/><text x="24.1101%" y="543.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (1,786 samples, 1.67%)</title><rect x="24.7717%" y="517" width="1.6714%" height="15" fill="rgb(209,134,38)" fg:x="26470" fg:w="1786"/><text x="25.0217%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (221 samples, 0.21%)</title><rect x="26.2362%" y="501" width="0.2068%" height="15" fill="rgb(230,127,29)" fg:x="28035" fg:w="221"/><text x="26.4862%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::pdk::PdkValue&gt; (14 samples, 0.01%)</title><rect x="26.4431%" y="533" width="0.0131%" height="15" fill="rgb(242,44,41)" fg:x="28256" fg:w="14"/><text x="26.6931%" y="543.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (13 samples, 0.01%)</title><rect x="26.5282%" y="485" width="0.0122%" height="15" fill="rgb(222,56,43)" fg:x="28347" fg:w="13"/><text x="26.7782%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (21 samples, 0.02%)</title><rect x="26.5703%" y="453" width="0.0197%" height="15" fill="rgb(238,39,47)" fg:x="28392" fg:w="21"/><text x="26.8203%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (12 samples, 0.01%)</title><rect x="26.5788%" y="437" width="0.0112%" height="15" fill="rgb(226,79,43)" fg:x="28401" fg:w="12"/><text x="26.8288%" y="447.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (55 samples, 0.05%)</title><rect x="26.5497%" y="469" width="0.0515%" height="15" fill="rgb(242,105,53)" fg:x="28370" fg:w="55"/><text x="26.7997%" y="479.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::sub_bucket_for (12 samples, 0.01%)</title><rect x="26.5900%" y="453" width="0.0112%" height="15" fill="rgb(251,132,46)" fg:x="28413" fg:w="12"/><text x="26.8400%" y="463.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (70 samples, 0.07%)</title><rect x="26.5460%" y="485" width="0.0655%" height="15" fill="rgb(231,77,14)" fg:x="28366" fg:w="70"/><text x="26.7960%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (11 samples, 0.01%)</title><rect x="26.6012%" y="469" width="0.0103%" height="15" fill="rgb(240,135,9)" fg:x="28425" fg:w="11"/><text x="26.8512%" y="479.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (161 samples, 0.15%)</title><rect x="26.4665%" y="533" width="0.1507%" height="15" fill="rgb(248,109,14)" fg:x="28281" fg:w="161"/><text x="26.7165%" y="543.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (156 samples, 0.15%)</title><rect x="26.4711%" y="517" width="0.1460%" height="15" fill="rgb(227,146,52)" fg:x="28286" fg:w="156"/><text x="26.7211%" y="527.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (156 samples, 0.15%)</title><rect x="26.4711%" y="501" width="0.1460%" height="15" fill="rgb(232,54,3)" fg:x="28286" fg:w="156"/><text x="26.7211%" y="511.50"></text></g><g><title>core::time::Duration::as_nanos (16 samples, 0.01%)</title><rect x="26.6461%" y="517" width="0.0150%" height="15" fill="rgb(229,201,43)" fg:x="28473" fg:w="16"/><text x="26.8961%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (51 samples, 0.05%)</title><rect x="26.7088%" y="469" width="0.0477%" height="15" fill="rgb(252,161,33)" fg:x="28540" fg:w="51"/><text x="26.9588%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::ge (51 samples, 0.05%)</title><rect x="26.7088%" y="453" width="0.0477%" height="15" fill="rgb(226,146,40)" fg:x="28540" fg:w="51"/><text x="26.9588%" y="463.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (50 samples, 0.05%)</title><rect x="26.7098%" y="437" width="0.0468%" height="15" fill="rgb(219,47,25)" fg:x="28541" fg:w="50"/><text x="26.9598%" y="447.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (50 samples, 0.05%)</title><rect x="26.7098%" y="421" width="0.0468%" height="15" fill="rgb(250,135,13)" fg:x="28541" fg:w="50"/><text x="26.9598%" y="431.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (50 samples, 0.05%)</title><rect x="26.7098%" y="405" width="0.0468%" height="15" fill="rgb(219,229,18)" fg:x="28541" fg:w="50"/><text x="26.9598%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (27 samples, 0.03%)</title><rect x="26.7313%" y="389" width="0.0253%" height="15" fill="rgb(217,152,27)" fg:x="28564" fg:w="27"/><text x="26.9813%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (127 samples, 0.12%)</title><rect x="26.6611%" y="501" width="0.1189%" height="15" fill="rgb(225,71,47)" fg:x="28489" fg:w="127"/><text x="26.9111%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (127 samples, 0.12%)</title><rect x="26.6611%" y="485" width="0.1189%" height="15" fill="rgb(220,139,14)" fg:x="28489" fg:w="127"/><text x="26.9111%" y="495.50"></text></g><g><title>core::time::Duration::new (25 samples, 0.02%)</title><rect x="26.7566%" y="469" width="0.0234%" height="15" fill="rgb(247,54,32)" fg:x="28591" fg:w="25"/><text x="27.0066%" y="479.50"></text></g><g><title>std::time::SystemTime::duration_since (133 samples, 0.12%)</title><rect x="26.6611%" y="517" width="0.1245%" height="15" fill="rgb(252,131,39)" fg:x="28489" fg:w="133"/><text x="26.9111%" y="527.50"></text></g><g><title>tremor_common::time::nanotime (818 samples, 0.77%)</title><rect x="26.6171%" y="533" width="0.7655%" height="15" fill="rgb(210,108,39)" fg:x="28442" fg:w="818"/><text x="26.8671%" y="543.50"></text></g><g><title>std::time::SystemTime::now (638 samples, 0.60%)</title><rect x="26.7856%" y="517" width="0.5971%" height="15" fill="rgb(205,23,29)" fg:x="28622" fg:w="638"/><text x="27.0356%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (638 samples, 0.60%)</title><rect x="26.7856%" y="501" width="0.5971%" height="15" fill="rgb(246,139,46)" fg:x="28622" fg:w="638"/><text x="27.0356%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (638 samples, 0.60%)</title><rect x="26.7856%" y="485" width="0.5971%" height="15" fill="rgb(250,81,26)" fg:x="28622" fg:w="638"/><text x="27.0356%" y="495.50"></text></g><g><title>__clock_gettime_2 (553 samples, 0.52%)</title><rect x="26.8651%" y="469" width="0.5175%" height="15" fill="rgb(214,104,7)" fg:x="28707" fg:w="553"/><text x="27.1151%" y="479.50"></text></g><g><title>__vdso_clock_gettime (527 samples, 0.49%)</title><rect x="26.8895%" y="453" width="0.4932%" height="15" fill="rgb(233,189,8)" fg:x="28733" fg:w="527"/><text x="27.1395%" y="463.50"></text></g><g><title>[[vdso]] (319 samples, 0.30%)</title><rect x="27.0841%" y="437" width="0.2985%" height="15" fill="rgb(228,141,17)" fg:x="28941" fg:w="319"/><text x="27.3341%" y="447.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (249 samples, 0.23%)</title><rect x="27.6194%" y="501" width="0.2330%" height="15" fill="rgb(247,157,1)" fg:x="29513" fg:w="249"/><text x="27.8694%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (29 samples, 0.03%)</title><rect x="27.9498%" y="485" width="0.0271%" height="15" fill="rgb(249,225,5)" fg:x="29866" fg:w="29"/><text x="28.1998%" y="495.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (12 samples, 0.01%)</title><rect x="27.9657%" y="469" width="0.0112%" height="15" fill="rgb(242,55,13)" fg:x="29883" fg:w="12"/><text x="28.2157%" y="479.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from (294 samples, 0.28%)</title><rect x="27.8524%" y="501" width="0.2751%" height="15" fill="rgb(230,49,50)" fg:x="29762" fg:w="294"/><text x="28.1024%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (161 samples, 0.15%)</title><rect x="27.9769%" y="485" width="0.1507%" height="15" fill="rgb(241,111,38)" fg:x="29895" fg:w="161"/><text x="28.2269%" y="495.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (1,089 samples, 1.02%)</title><rect x="27.3826%" y="533" width="1.0191%" height="15" fill="rgb(252,155,4)" fg:x="29260" fg:w="1089"/><text x="27.6326%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (895 samples, 0.84%)</title><rect x="27.5642%" y="517" width="0.8376%" height="15" fill="rgb(212,69,32)" fg:x="29454" fg:w="895"/><text x="27.8142%" y="527.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (293 samples, 0.27%)</title><rect x="28.1276%" y="501" width="0.2742%" height="15" fill="rgb(243,107,47)" fg:x="30056" fg:w="293"/><text x="28.3776%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (278 samples, 0.26%)</title><rect x="28.1416%" y="485" width="0.2602%" height="15" fill="rgb(247,130,12)" fg:x="30071" fg:w="278"/><text x="28.3916%" y="495.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (245 samples, 0.23%)</title><rect x="28.1725%" y="469" width="0.2293%" height="15" fill="rgb(233,74,16)" fg:x="30104" fg:w="245"/><text x="28.4225%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (201 samples, 0.19%)</title><rect x="28.2137%" y="453" width="0.1881%" height="15" fill="rgb(208,58,18)" fg:x="30148" fg:w="201"/><text x="28.4637%" y="463.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (144 samples, 0.13%)</title><rect x="28.4093%" y="517" width="0.1348%" height="15" fill="rgb(242,225,1)" fg:x="30357" fg:w="144"/><text x="28.6593%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (8,223 samples, 7.70%)</title><rect x="20.8598%" y="789" width="7.6954%" height="15" fill="rgb(249,39,40)" fg:x="22290" fg:w="8223"/><text x="21.1098%" y="799.50">tremor_runt..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,261 samples, 5.86%)</title><rect x="22.6960%" y="773" width="5.8593%" height="15" fill="rgb(207,72,44)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="783.50">&lt;async_..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,261 samples, 5.86%)</title><rect x="22.6960%" y="757" width="5.8593%" height="15" fill="rgb(215,193,12)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="767.50">&lt;async_..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (6,261 samples, 5.86%)</title><rect x="22.6960%" y="741" width="5.8593%" height="15" fill="rgb(248,41,39)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="751.50">&lt;core::..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,261 samples, 5.86%)</title><rect x="22.6960%" y="725" width="5.8593%" height="15" fill="rgb(253,85,4)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="735.50">&lt;async_..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (6,261 samples, 5.86%)</title><rect x="22.6960%" y="709" width="5.8593%" height="15" fill="rgb(243,70,31)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="719.50">async_f..</text></g><g><title>std::panic::catch_unwind (6,261 samples, 5.86%)</title><rect x="22.6960%" y="693" width="5.8593%" height="15" fill="rgb(253,195,26)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="703.50">std::pa..</text></g><g><title>std::panicking::try (6,261 samples, 5.86%)</title><rect x="22.6960%" y="677" width="5.8593%" height="15" fill="rgb(243,42,11)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="687.50">std::pa..</text></g><g><title>std::panicking::try::do_call (6,261 samples, 5.86%)</title><rect x="22.6960%" y="661" width="5.8593%" height="15" fill="rgb(239,66,17)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="671.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,261 samples, 5.86%)</title><rect x="22.6960%" y="645" width="5.8593%" height="15" fill="rgb(217,132,21)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="655.50">&lt;core::..</text></g><g><title>core::ops::function::FnOnce::call_once (6,261 samples, 5.86%)</title><rect x="22.6960%" y="629" width="5.8593%" height="15" fill="rgb(252,202,21)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="639.50">core::o..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (6,261 samples, 5.86%)</title><rect x="22.6960%" y="613" width="5.8593%" height="15" fill="rgb(233,98,36)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="623.50">async_f..</text></g><g><title>async_ffi::FfiContext::with_context (6,261 samples, 5.86%)</title><rect x="22.6960%" y="597" width="5.8593%" height="15" fill="rgb(216,153,54)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="607.50">async_f..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (6,261 samples, 5.86%)</title><rect x="22.6960%" y="581" width="5.8593%" height="15" fill="rgb(250,99,7)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="591.50">async_f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,261 samples, 5.86%)</title><rect x="22.6960%" y="565" width="5.8593%" height="15" fill="rgb(207,56,50)" fg:x="24252" fg:w="6261"/><text x="22.9460%" y="575.50">&lt;core::..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (6,200 samples, 5.80%)</title><rect x="22.7531%" y="549" width="5.8022%" height="15" fill="rgb(244,61,34)" fg:x="24313" fg:w="6200"/><text x="23.0031%" y="559.50">&lt;tremor..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (164 samples, 0.15%)</title><rect x="28.4018%" y="533" width="0.1535%" height="15" fill="rgb(241,50,38)" fg:x="30349" fg:w="164"/><text x="28.6518%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::_::&lt;impl tremor_runtime::connectors::sink::EventSerializerOpaque_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::serialize (12 samples, 0.01%)</title><rect x="28.5440%" y="517" width="0.0112%" height="15" fill="rgb(212,166,30)" fg:x="30501" fg:w="12"/><text x="28.7940%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,235 samples, 7.71%)</title><rect x="20.8598%" y="805" width="7.7066%" height="15" fill="rgb(249,127,32)" fg:x="22290" fg:w="8235"/><text x="21.1098%" y="815.50">&lt;core::futu..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (12 samples, 0.01%)</title><rect x="28.5553%" y="789" width="0.0112%" height="15" fill="rgb(209,103,0)" fg:x="30513" fg:w="12"/><text x="28.8053%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (12 samples, 0.01%)</title><rect x="28.5553%" y="773" width="0.0112%" height="15" fill="rgb(238,209,51)" fg:x="30513" fg:w="12"/><text x="28.8053%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::pdk::PdkOpMeta&gt; (12 samples, 0.01%)</title><rect x="28.5553%" y="757" width="0.0112%" height="15" fill="rgb(237,56,23)" fg:x="30513" fg:w="12"/><text x="28.8053%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (12 samples, 0.01%)</title><rect x="28.5553%" y="741" width="0.0112%" height="15" fill="rgb(215,153,46)" fg:x="30513" fg:w="12"/><text x="28.8053%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="28.5553%" y="725" width="0.0112%" height="15" fill="rgb(224,49,31)" fg:x="30513" fg:w="12"/><text x="28.8053%" y="735.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (12 samples, 0.01%)</title><rect x="28.5553%" y="709" width="0.0112%" height="15" fill="rgb(250,18,42)" fg:x="30513" fg:w="12"/><text x="28.8053%" y="719.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (12 samples, 0.01%)</title><rect x="28.5553%" y="693" width="0.0112%" height="15" fill="rgb(215,176,39)" fg:x="30513" fg:w="12"/><text x="28.8053%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt; (12 samples, 0.01%)</title><rect x="28.5553%" y="677" width="0.0112%" height="15" fill="rgb(223,77,29)" fg:x="30513" fg:w="12"/><text x="28.8053%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (12 samples, 0.01%)</title><rect x="28.5553%" y="661" width="0.0112%" height="15" fill="rgb(234,94,52)" fg:x="30513" fg:w="12"/><text x="28.8053%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt; (12 samples, 0.01%)</title><rect x="28.5553%" y="645" width="0.0112%" height="15" fill="rgb(220,154,50)" fg:x="30513" fg:w="12"/><text x="28.8053%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue)&gt;&gt; (12 samples, 0.01%)</title><rect x="28.5553%" y="629" width="0.0112%" height="15" fill="rgb(212,11,10)" fg:x="30513" fg:w="12"/><text x="28.8053%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="28.5553%" y="613" width="0.0112%" height="15" fill="rgb(205,166,19)" fg:x="30513" fg:w="12"/><text x="28.8053%" y="623.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (16 samples, 0.01%)</title><rect x="28.5768%" y="645" width="0.0150%" height="15" fill="rgb(244,198,16)" fg:x="30536" fg:w="16"/><text x="28.8268%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (17 samples, 0.02%)</title><rect x="28.5955%" y="629" width="0.0159%" height="15" fill="rgb(219,69,12)" fg:x="30556" fg:w="17"/><text x="28.8455%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (17 samples, 0.02%)</title><rect x="28.5955%" y="613" width="0.0159%" height="15" fill="rgb(245,30,7)" fg:x="30556" fg:w="17"/><text x="28.8455%" y="623.50"></text></g><g><title>core::mem::replace (17 samples, 0.02%)</title><rect x="28.5955%" y="597" width="0.0159%" height="15" fill="rgb(218,221,48)" fg:x="30556" fg:w="17"/><text x="28.8455%" y="607.50"></text></g><g><title>core::ptr::write (17 samples, 0.02%)</title><rect x="28.5955%" y="581" width="0.0159%" height="15" fill="rgb(216,66,15)" fg:x="30556" fg:w="17"/><text x="28.8455%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (44 samples, 0.04%)</title><rect x="28.5730%" y="709" width="0.0412%" height="15" fill="rgb(226,122,50)" fg:x="30532" fg:w="44"/><text x="28.8230%" y="719.50"></text></g><g><title>std::collections::hash::map::RandomState::new (44 samples, 0.04%)</title><rect x="28.5730%" y="693" width="0.0412%" height="15" fill="rgb(239,156,16)" fg:x="30532" fg:w="44"/><text x="28.8230%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (44 samples, 0.04%)</title><rect x="28.5730%" y="677" width="0.0412%" height="15" fill="rgb(224,27,38)" fg:x="30532" fg:w="44"/><text x="28.8230%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (44 samples, 0.04%)</title><rect x="28.5730%" y="661" width="0.0412%" height="15" fill="rgb(224,39,27)" fg:x="30532" fg:w="44"/><text x="28.8230%" y="671.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (24 samples, 0.02%)</title><rect x="28.5917%" y="645" width="0.0225%" height="15" fill="rgb(215,92,29)" fg:x="30552" fg:w="24"/><text x="28.8417%" y="655.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="28.6526%" y="517" width="0.0103%" height="15" fill="rgb(207,159,16)" fg:x="30617" fg:w="11"/><text x="28.9026%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="28.6713%" y="469" width="0.0168%" height="15" fill="rgb(238,163,47)" fg:x="30637" fg:w="18"/><text x="28.9213%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (18 samples, 0.02%)</title><rect x="28.6713%" y="453" width="0.0168%" height="15" fill="rgb(219,91,49)" fg:x="30637" fg:w="18"/><text x="28.9213%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (15 samples, 0.01%)</title><rect x="28.6741%" y="437" width="0.0140%" height="15" fill="rgb(227,167,31)" fg:x="30640" fg:w="15"/><text x="28.9241%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (13 samples, 0.01%)</title><rect x="28.6760%" y="421" width="0.0122%" height="15" fill="rgb(234,80,54)" fg:x="30642" fg:w="13"/><text x="28.9260%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="28.6760%" y="405" width="0.0122%" height="15" fill="rgb(212,114,2)" fg:x="30642" fg:w="13"/><text x="28.9260%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="28.6760%" y="389" width="0.0122%" height="15" fill="rgb(234,50,24)" fg:x="30642" fg:w="13"/><text x="28.9260%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::empty (30 samples, 0.03%)</title><rect x="28.6900%" y="469" width="0.0281%" height="15" fill="rgb(221,68,8)" fg:x="30657" fg:w="30"/><text x="28.9400%" y="479.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (30 samples, 0.03%)</title><rect x="28.6900%" y="453" width="0.0281%" height="15" fill="rgb(254,180,31)" fg:x="30657" fg:w="30"/><text x="28.9400%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.14%)</title><rect x="28.6629%" y="517" width="0.1394%" height="15" fill="rgb(247,130,50)" fg:x="30628" fg:w="149"/><text x="28.9129%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.14%)</title><rect x="28.6629%" y="501" width="0.1394%" height="15" fill="rgb(211,109,4)" fg:x="30628" fg:w="149"/><text x="28.9129%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (144 samples, 0.13%)</title><rect x="28.6676%" y="485" width="0.1348%" height="15" fill="rgb(238,50,21)" fg:x="30633" fg:w="144"/><text x="28.9176%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (90 samples, 0.08%)</title><rect x="28.7181%" y="469" width="0.0842%" height="15" fill="rgb(225,57,45)" fg:x="30687" fg:w="90"/><text x="28.9681%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (90 samples, 0.08%)</title><rect x="28.7181%" y="453" width="0.0842%" height="15" fill="rgb(209,196,50)" fg:x="30687" fg:w="90"/><text x="28.9681%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (257 samples, 0.24%)</title><rect x="28.5730%" y="725" width="0.2405%" height="15" fill="rgb(242,140,13)" fg:x="30532" fg:w="257"/><text x="28.8230%" y="735.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (213 samples, 0.20%)</title><rect x="28.6142%" y="709" width="0.1993%" height="15" fill="rgb(217,111,7)" fg:x="30576" fg:w="213"/><text x="28.8642%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (213 samples, 0.20%)</title><rect x="28.6142%" y="693" width="0.1993%" height="15" fill="rgb(253,193,51)" fg:x="30576" fg:w="213"/><text x="28.8642%" y="703.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (203 samples, 0.19%)</title><rect x="28.6236%" y="677" width="0.1900%" height="15" fill="rgb(252,70,29)" fg:x="30586" fg:w="203"/><text x="28.8736%" y="687.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (203 samples, 0.19%)</title><rect x="28.6236%" y="661" width="0.1900%" height="15" fill="rgb(232,127,12)" fg:x="30586" fg:w="203"/><text x="28.8736%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (199 samples, 0.19%)</title><rect x="28.6273%" y="645" width="0.1862%" height="15" fill="rgb(211,180,21)" fg:x="30590" fg:w="199"/><text x="28.8773%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (177 samples, 0.17%)</title><rect x="28.6479%" y="629" width="0.1656%" height="15" fill="rgb(229,72,13)" fg:x="30612" fg:w="177"/><text x="28.8979%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (177 samples, 0.17%)</title><rect x="28.6479%" y="613" width="0.1656%" height="15" fill="rgb(240,211,49)" fg:x="30612" fg:w="177"/><text x="28.8979%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (177 samples, 0.17%)</title><rect x="28.6479%" y="597" width="0.1656%" height="15" fill="rgb(219,149,40)" fg:x="30612" fg:w="177"/><text x="28.8979%" y="607.50"></text></g><g><title>alloc::alloc::alloc (172 samples, 0.16%)</title><rect x="28.6526%" y="581" width="0.1610%" height="15" fill="rgb(210,127,46)" fg:x="30617" fg:w="172"/><text x="28.9026%" y="591.50"></text></g><g><title>__rg_alloc (172 samples, 0.16%)</title><rect x="28.6526%" y="565" width="0.1610%" height="15" fill="rgb(220,106,7)" fg:x="30617" fg:w="172"/><text x="28.9026%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (172 samples, 0.16%)</title><rect x="28.6526%" y="549" width="0.1610%" height="15" fill="rgb(249,31,22)" fg:x="30617" fg:w="172"/><text x="28.9026%" y="559.50"></text></g><g><title>rust_alloc (172 samples, 0.16%)</title><rect x="28.6526%" y="533" width="0.1610%" height="15" fill="rgb(253,1,49)" fg:x="30617" fg:w="172"/><text x="28.9026%" y="543.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="28.8023%" y="517" width="0.0112%" height="15" fill="rgb(227,144,33)" fg:x="30777" fg:w="12"/><text x="29.0523%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="28.8922%" y="693" width="0.0253%" height="15" fill="rgb(249,163,44)" fg:x="30873" fg:w="27"/><text x="29.1422%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.04%)</title><rect x="28.8800%" y="709" width="0.0440%" height="15" fill="rgb(234,15,39)" fg:x="30860" fg:w="47"/><text x="29.1300%" y="719.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (13 samples, 0.01%)</title><rect x="28.9240%" y="709" width="0.0122%" height="15" fill="rgb(207,66,16)" fg:x="30907" fg:w="13"/><text x="29.1740%" y="719.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (13 samples, 0.01%)</title><rect x="28.9240%" y="693" width="0.0122%" height="15" fill="rgb(233,112,24)" fg:x="30907" fg:w="13"/><text x="29.1740%" y="703.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (13 samples, 0.01%)</title><rect x="28.9240%" y="677" width="0.0122%" height="15" fill="rgb(230,90,22)" fg:x="30907" fg:w="13"/><text x="29.1740%" y="687.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (166 samples, 0.16%)</title><rect x="28.8135%" y="725" width="0.1553%" height="15" fill="rgb(229,61,13)" fg:x="30789" fg:w="166"/><text x="29.0635%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;,&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from::{{closure}}&gt;&gt; (35 samples, 0.03%)</title><rect x="28.9361%" y="709" width="0.0328%" height="15" fill="rgb(225,57,24)" fg:x="30920" fg:w="35"/><text x="29.1861%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (35 samples, 0.03%)</title><rect x="28.9361%" y="693" width="0.0328%" height="15" fill="rgb(208,169,48)" fg:x="30920" fg:w="35"/><text x="29.1861%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="28.9436%" y="677" width="0.0253%" height="15" fill="rgb(244,218,51)" fg:x="30928" fg:w="27"/><text x="29.1936%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (25 samples, 0.02%)</title><rect x="28.9455%" y="661" width="0.0234%" height="15" fill="rgb(214,148,10)" fg:x="30930" fg:w="25"/><text x="29.1955%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (17 samples, 0.02%)</title><rect x="28.9530%" y="645" width="0.0159%" height="15" fill="rgb(225,174,27)" fg:x="30938" fg:w="17"/><text x="29.2030%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (17 samples, 0.02%)</title><rect x="28.9530%" y="629" width="0.0159%" height="15" fill="rgb(230,96,26)" fg:x="30938" fg:w="17"/><text x="29.2030%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (17 samples, 0.02%)</title><rect x="28.9530%" y="613" width="0.0159%" height="15" fill="rgb(232,10,30)" fg:x="30938" fg:w="17"/><text x="29.2030%" y="623.50"></text></g><g><title>core::mem::replace (17 samples, 0.02%)</title><rect x="28.9530%" y="597" width="0.0159%" height="15" fill="rgb(222,8,50)" fg:x="30938" fg:w="17"/><text x="29.2030%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (8,678 samples, 8.12%)</title><rect x="20.8598%" y="821" width="8.1212%" height="15" fill="rgb(213,81,27)" fg:x="22290" fg:w="8678"/><text x="21.1098%" y="831.50">tremor_runt..</text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (443 samples, 0.41%)</title><rect x="28.5665%" y="805" width="0.4146%" height="15" fill="rgb(245,50,10)" fg:x="30525" fg:w="443"/><text x="28.8165%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (443 samples, 0.41%)</title><rect x="28.5665%" y="789" width="0.4146%" height="15" fill="rgb(216,100,18)" fg:x="30525" fg:w="443"/><text x="28.8165%" y="799.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (443 samples, 0.41%)</title><rect x="28.5665%" y="773" width="0.4146%" height="15" fill="rgb(236,147,54)" fg:x="30525" fg:w="443"/><text x="28.8165%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (443 samples, 0.41%)</title><rect x="28.5665%" y="757" width="0.4146%" height="15" fill="rgb(205,143,26)" fg:x="30525" fg:w="443"/><text x="28.8165%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (443 samples, 0.41%)</title><rect x="28.5665%" y="741" width="0.4146%" height="15" fill="rgb(236,26,9)" fg:x="30525" fg:w="443"/><text x="28.8165%" y="751.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="28.9689%" y="725" width="0.0122%" height="15" fill="rgb(221,165,53)" fg:x="30955" fg:w="13"/><text x="29.2189%" y="735.50"></text></g><g><title>rust_dealloc (21 samples, 0.02%)</title><rect x="29.1430%" y="709" width="0.0197%" height="15" fill="rgb(214,110,17)" fg:x="31141" fg:w="21"/><text x="29.3930%" y="719.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (16 samples, 0.01%)</title><rect x="29.2478%" y="677" width="0.0150%" height="15" fill="rgb(237,197,12)" fg:x="31253" fg:w="16"/><text x="29.4978%" y="687.50"></text></g><g><title> (16 samples, 0.01%)</title><rect x="29.2478%" y="661" width="0.0150%" height="15" fill="rgb(205,84,17)" fg:x="31253" fg:w="16"/><text x="29.4978%" y="671.50"></text></g><g><title>snmalloc::Remote::set_info (14 samples, 0.01%)</title><rect x="29.2627%" y="677" width="0.0131%" height="15" fill="rgb(237,18,45)" fg:x="31269" fg:w="14"/><text x="29.5127%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (117 samples, 0.11%)</title><rect x="29.1729%" y="709" width="0.1095%" height="15" fill="rgb(221,87,14)" fg:x="31173" fg:w="117"/><text x="29.4229%" y="719.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (104 samples, 0.10%)</title><rect x="29.1851%" y="693" width="0.0973%" height="15" fill="rgb(238,186,15)" fg:x="31186" fg:w="104"/><text x="29.4351%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (202 samples, 0.19%)</title><rect x="29.1411%" y="741" width="0.1890%" height="15" fill="rgb(208,115,11)" fg:x="31139" fg:w="202"/><text x="29.3911%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (202 samples, 0.19%)</title><rect x="29.1411%" y="725" width="0.1890%" height="15" fill="rgb(254,175,0)" fg:x="31139" fg:w="202"/><text x="29.3911%" y="735.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (42 samples, 0.04%)</title><rect x="29.2908%" y="709" width="0.0393%" height="15" fill="rgb(227,24,42)" fg:x="31299" fg:w="42"/><text x="29.5408%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (203 samples, 0.19%)</title><rect x="29.1411%" y="773" width="0.1900%" height="15" fill="rgb(223,211,37)" fg:x="31139" fg:w="203"/><text x="29.3911%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (203 samples, 0.19%)</title><rect x="29.1411%" y="757" width="0.1900%" height="15" fill="rgb(235,49,27)" fg:x="31139" fg:w="203"/><text x="29.3911%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (228 samples, 0.21%)</title><rect x="29.1261%" y="789" width="0.2134%" height="15" fill="rgb(254,97,51)" fg:x="31123" fg:w="228"/><text x="29.3761%" y="799.50"></text></g><g><title>rust_dealloc (249 samples, 0.23%)</title><rect x="29.1158%" y="805" width="0.2330%" height="15" fill="rgb(249,51,40)" fg:x="31112" fg:w="249"/><text x="29.3658%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (13 samples, 0.01%)</title><rect x="29.3488%" y="757" width="0.0122%" height="15" fill="rgb(210,128,45)" fg:x="31361" fg:w="13"/><text x="29.5988%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (48 samples, 0.04%)</title><rect x="29.3610%" y="757" width="0.0449%" height="15" fill="rgb(224,137,50)" fg:x="31374" fg:w="48"/><text x="29.6110%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (39 samples, 0.04%)</title><rect x="29.3694%" y="741" width="0.0365%" height="15" fill="rgb(242,15,9)" fg:x="31383" fg:w="39"/><text x="29.6194%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (39 samples, 0.04%)</title><rect x="29.3694%" y="725" width="0.0365%" height="15" fill="rgb(233,187,41)" fg:x="31383" fg:w="39"/><text x="29.6194%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (39 samples, 0.04%)</title><rect x="29.3694%" y="709" width="0.0365%" height="15" fill="rgb(227,2,29)" fg:x="31383" fg:w="39"/><text x="29.6194%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (62 samples, 0.06%)</title><rect x="29.3488%" y="789" width="0.0580%" height="15" fill="rgb(222,70,3)" fg:x="31361" fg:w="62"/><text x="29.5988%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (62 samples, 0.06%)</title><rect x="29.3488%" y="773" width="0.0580%" height="15" fill="rgb(213,11,42)" fg:x="31361" fg:w="62"/><text x="29.5988%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (458 samples, 0.43%)</title><rect x="28.9811%" y="821" width="0.4286%" height="15" fill="rgb(225,150,9)" fg:x="30968" fg:w="458"/><text x="29.2311%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (65 samples, 0.06%)</title><rect x="29.3488%" y="805" width="0.0608%" height="15" fill="rgb(230,162,45)" fg:x="31361" fg:w="65"/><text x="29.5988%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="30.2641%" y="805" width="0.0150%" height="15" fill="rgb(222,14,52)" fg:x="32339" fg:w="16"/><text x="30.5141%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="30.3839%" y="789" width="0.0140%" height="15" fill="rgb(254,198,14)" fg:x="32467" fg:w="15"/><text x="30.6339%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (457 samples, 0.43%)</title><rect x="30.6347%" y="773" width="0.4277%" height="15" fill="rgb(220,217,30)" fg:x="32735" fg:w="457"/><text x="30.8847%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (13 samples, 0.01%)</title><rect x="31.0820%" y="757" width="0.0122%" height="15" fill="rgb(215,146,41)" fg:x="33213" fg:w="13"/><text x="31.3320%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.01%)</title><rect x="31.0820%" y="741" width="0.0122%" height="15" fill="rgb(217,27,36)" fg:x="33213" fg:w="13"/><text x="31.3320%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (357 samples, 0.33%)</title><rect x="31.0624%" y="773" width="0.3341%" height="15" fill="rgb(219,218,39)" fg:x="33192" fg:w="357"/><text x="31.3124%" y="783.50"></text></g><g><title>core::ptr::write (323 samples, 0.30%)</title><rect x="31.0942%" y="757" width="0.3023%" height="15" fill="rgb(219,4,42)" fg:x="33226" fg:w="323"/><text x="31.3442%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (319 samples, 0.30%)</title><rect x="31.0979%" y="741" width="0.2985%" height="15" fill="rgb(249,119,36)" fg:x="33230" fg:w="319"/><text x="31.3479%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (40 samples, 0.04%)</title><rect x="31.3965%" y="773" width="0.0374%" height="15" fill="rgb(209,23,33)" fg:x="33549" fg:w="40"/><text x="31.6465%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (564 samples, 0.53%)</title><rect x="31.4629%" y="677" width="0.5278%" height="15" fill="rgb(211,10,0)" fg:x="33620" fg:w="564"/><text x="31.7129%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (472 samples, 0.44%)</title><rect x="31.5490%" y="661" width="0.4417%" height="15" fill="rgb(208,99,37)" fg:x="33712" fg:w="472"/><text x="31.7990%" y="671.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (574 samples, 0.54%)</title><rect x="31.4545%" y="757" width="0.5372%" height="15" fill="rgb(213,132,31)" fg:x="33611" fg:w="574"/><text x="31.7045%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (565 samples, 0.53%)</title><rect x="31.4629%" y="741" width="0.5287%" height="15" fill="rgb(243,129,40)" fg:x="33620" fg:w="565"/><text x="31.7129%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (565 samples, 0.53%)</title><rect x="31.4629%" y="725" width="0.5287%" height="15" fill="rgb(210,66,33)" fg:x="33620" fg:w="565"/><text x="31.7129%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (565 samples, 0.53%)</title><rect x="31.4629%" y="709" width="0.5287%" height="15" fill="rgb(209,189,4)" fg:x="33620" fg:w="565"/><text x="31.7129%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (565 samples, 0.53%)</title><rect x="31.4629%" y="693" width="0.5287%" height="15" fill="rgb(214,107,37)" fg:x="33620" fg:w="565"/><text x="31.7129%" y="703.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (612 samples, 0.57%)</title><rect x="31.4339%" y="773" width="0.5727%" height="15" fill="rgb(245,88,54)" fg:x="33589" fg:w="612"/><text x="31.6839%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (16 samples, 0.01%)</title><rect x="31.9917%" y="757" width="0.0150%" height="15" fill="rgb(205,146,20)" fg:x="34185" fg:w="16"/><text x="32.2417%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="32.5925%" y="741" width="0.0234%" height="15" fill="rgb(220,161,25)" fg:x="34827" fg:w="25"/><text x="32.8425%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (36 samples, 0.03%)</title><rect x="32.6159%" y="741" width="0.0337%" height="15" fill="rgb(215,152,15)" fg:x="34852" fg:w="36"/><text x="32.8659%" y="751.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="32.6364%" y="725" width="0.0131%" height="15" fill="rgb(233,192,44)" fg:x="34874" fg:w="14"/><text x="32.8864%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (14 samples, 0.01%)</title><rect x="32.6495%" y="725" width="0.0131%" height="15" fill="rgb(240,170,46)" fg:x="34888" fg:w="14"/><text x="32.8995%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.01%)</title><rect x="32.6495%" y="709" width="0.0131%" height="15" fill="rgb(207,104,33)" fg:x="34888" fg:w="14"/><text x="32.8995%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (385 samples, 0.36%)</title><rect x="32.6495%" y="741" width="0.3603%" height="15" fill="rgb(219,21,39)" fg:x="34888" fg:w="385"/><text x="32.8995%" y="751.50"></text></g><g><title>core::ptr::write (371 samples, 0.35%)</title><rect x="32.6626%" y="725" width="0.3472%" height="15" fill="rgb(214,133,29)" fg:x="34902" fg:w="371"/><text x="32.9126%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (361 samples, 0.34%)</title><rect x="32.6720%" y="709" width="0.3378%" height="15" fill="rgb(226,93,6)" fg:x="34912" fg:w="361"/><text x="32.9220%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,070 samples, 1.00%)</title><rect x="32.0235%" y="757" width="1.0013%" height="15" fill="rgb(252,222,34)" fg:x="34219" fg:w="1070"/><text x="32.2735%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,095 samples, 1.02%)</title><rect x="32.0066%" y="773" width="1.0247%" height="15" fill="rgb(252,92,48)" fg:x="34201" fg:w="1095"/><text x="32.2566%" y="783.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (2,847 samples, 2.66%)</title><rect x="30.3979%" y="789" width="2.6643%" height="15" fill="rgb(245,223,24)" fg:x="32482" fg:w="2847"/><text x="30.6479%" y="799.50">tr..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (33 samples, 0.03%)</title><rect x="33.0314%" y="773" width="0.0309%" height="15" fill="rgb(205,176,3)" fg:x="35296" fg:w="33"/><text x="33.2814%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (83 samples, 0.08%)</title><rect x="33.0623%" y="789" width="0.0777%" height="15" fill="rgb(235,151,15)" fg:x="35329" fg:w="83"/><text x="33.3123%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,084 samples, 2.89%)</title><rect x="30.2809%" y="805" width="2.8861%" height="15" fill="rgb(237,209,11)" fg:x="32357" fg:w="3084"/><text x="30.5309%" y="815.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (29 samples, 0.03%)</title><rect x="33.1399%" y="789" width="0.0271%" height="15" fill="rgb(243,227,24)" fg:x="35412" fg:w="29"/><text x="33.3899%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,319 samples, 1.23%)</title><rect x="33.1671%" y="805" width="1.2344%" height="15" fill="rgb(239,193,16)" fg:x="35441" fg:w="1319"/><text x="33.4171%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (34 samples, 0.03%)</title><rect x="34.4024%" y="805" width="0.0318%" height="15" fill="rgb(231,27,9)" fg:x="36761" fg:w="34"/><text x="34.6524%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="34.4024%" y="789" width="0.0318%" height="15" fill="rgb(219,169,10)" fg:x="36761" fg:w="34"/><text x="34.6524%" y="799.50"></text></g><g><title>async_global_executor::reactor::block_on (14,519 samples, 13.59%)</title><rect x="20.8598%" y="1157" width="13.5874%" height="15" fill="rgb(244,229,43)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="1167.50">async_global_executor..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (14,519 samples, 13.59%)</title><rect x="20.8598%" y="1141" width="13.5874%" height="15" fill="rgb(254,38,20)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="1151.50">async_global_executor..</text></g><g><title>async_io::driver::block_on (14,519 samples, 13.59%)</title><rect x="20.8598%" y="1125" width="13.5874%" height="15" fill="rgb(250,47,30)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="1135.50">async_io::driver::blo..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (14,519 samples, 13.59%)</title><rect x="20.8598%" y="1109" width="13.5874%" height="15" fill="rgb(224,124,36)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="1119.50">&lt;futures_lite::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,519 samples, 13.59%)</title><rect x="20.8598%" y="1093" width="13.5874%" height="15" fill="rgb(246,68,51)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="1103.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::run::{{closure}} (14,519 samples, 13.59%)</title><rect x="20.8598%" y="1077" width="13.5874%" height="15" fill="rgb(253,43,49)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="1087.50">async_executor::Execu..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (14,519 samples, 13.59%)</title><rect x="20.8598%" y="1061" width="13.5874%" height="15" fill="rgb(219,54,36)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="1071.50">&lt;futures_lite::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,519 samples, 13.59%)</title><rect x="20.8598%" y="1045" width="13.5874%" height="15" fill="rgb(227,133,34)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="1055.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (14,519 samples, 13.59%)</title><rect x="20.8598%" y="1029" width="13.5874%" height="15" fill="rgb(247,227,15)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="1039.50">async_executor::Execu..</text></g><g><title>async_task::runnable::Runnable::run (14,519 samples, 13.59%)</title><rect x="20.8598%" y="1013" width="13.5874%" height="15" fill="rgb(229,96,14)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="1023.50">async_task::runnable:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (14,519 samples, 13.59%)</title><rect x="20.8598%" y="997" width="13.5874%" height="15" fill="rgb(220,79,17)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="1007.50">async_task::raw::RawT..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14,519 samples, 13.59%)</title><rect x="20.8598%" y="981" width="13.5874%" height="15" fill="rgb(205,131,53)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,519 samples, 13.59%)</title><rect x="20.8598%" y="965" width="13.5874%" height="15" fill="rgb(209,50,29)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="975.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (14,519 samples, 13.59%)</title><rect x="20.8598%" y="949" width="13.5874%" height="15" fill="rgb(245,86,46)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="959.50">async_executor::Execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (14,519 samples, 13.59%)</title><rect x="20.8598%" y="933" width="13.5874%" height="15" fill="rgb(235,66,46)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="943.50">&lt;async_std::task::bui..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (14,519 samples, 13.59%)</title><rect x="20.8598%" y="917" width="13.5874%" height="15" fill="rgb(232,148,31)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="927.50">async_std::task::task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14,519 samples, 13.59%)</title><rect x="20.8598%" y="901" width="13.5874%" height="15" fill="rgb(217,149,8)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="911.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14,519 samples, 13.59%)</title><rect x="20.8598%" y="885" width="13.5874%" height="15" fill="rgb(209,183,11)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="895.50">std::thread::local::L..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (14,519 samples, 13.59%)</title><rect x="20.8598%" y="869" width="13.5874%" height="15" fill="rgb(208,55,20)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="879.50">async_std::task::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (14,519 samples, 13.59%)</title><rect x="20.8598%" y="853" width="13.5874%" height="15" fill="rgb(218,39,14)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="863.50">&lt;async_std::task::bui..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,519 samples, 13.59%)</title><rect x="20.8598%" y="837" width="13.5874%" height="15" fill="rgb(216,169,33)" fg:x="22290" fg:w="14519"/><text x="21.1098%" y="847.50">&lt;core::future::from_g..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,383 samples, 5.04%)</title><rect x="29.4097%" y="821" width="5.0376%" height="15" fill="rgb(233,80,24)" fg:x="31426" fg:w="5383"/><text x="29.6597%" y="831.50">tremor..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (36 samples, 0.03%)</title><rect x="34.4473%" y="693" width="0.0337%" height="15" fill="rgb(213,179,31)" fg:x="36809" fg:w="36"/><text x="34.6973%" y="703.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="34.8038%" y="677" width="0.0103%" height="15" fill="rgb(209,19,5)" fg:x="37190" fg:w="11"/><text x="35.0538%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (11 samples, 0.01%)</title><rect x="34.8038%" y="661" width="0.0103%" height="15" fill="rgb(219,18,35)" fg:x="37190" fg:w="11"/><text x="35.0538%" y="671.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (52 samples, 0.05%)</title><rect x="36.2581%" y="597" width="0.0487%" height="15" fill="rgb(209,169,16)" fg:x="38744" fg:w="52"/><text x="36.5081%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (32 samples, 0.03%)</title><rect x="36.2769%" y="581" width="0.0299%" height="15" fill="rgb(245,90,51)" fg:x="38764" fg:w="32"/><text x="36.5269%" y="591.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (867 samples, 0.81%)</title><rect x="35.9334%" y="629" width="0.8114%" height="15" fill="rgb(220,99,45)" fg:x="38397" fg:w="867"/><text x="36.1834%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (572 samples, 0.54%)</title><rect x="36.2095%" y="613" width="0.5353%" height="15" fill="rgb(249,89,25)" fg:x="38692" fg:w="572"/><text x="36.4595%" y="623.50"></text></g><g><title>&lt;tremor_script::pdk::PdkEventPayload as core::convert::From&lt;tremor_script::srs::EventPayload&gt;&gt;::from (468 samples, 0.44%)</title><rect x="36.3068%" y="597" width="0.4380%" height="15" fill="rgb(239,193,0)" fg:x="38796" fg:w="468"/><text x="36.5568%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (141 samples, 0.13%)</title><rect x="36.6128%" y="581" width="0.1320%" height="15" fill="rgb(231,126,1)" fg:x="39123" fg:w="141"/><text x="36.8628%" y="591.50"></text></g><g><title>&lt;tremor_script::pdk::PdkValueAndMeta as core::convert::From&lt;tremor_script::srs::ValueAndMeta&gt;&gt;::from (122 samples, 0.11%)</title><rect x="36.6306%" y="565" width="0.1142%" height="15" fill="rgb(243,166,3)" fg:x="39142" fg:w="122"/><text x="36.8806%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (26 samples, 0.02%)</title><rect x="36.7204%" y="549" width="0.0243%" height="15" fill="rgb(223,22,34)" fg:x="39238" fg:w="26"/><text x="36.9704%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (297 samples, 0.28%)</title><rect x="36.7448%" y="629" width="0.2779%" height="15" fill="rgb(251,52,51)" fg:x="39264" fg:w="297"/><text x="36.9948%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,231 samples, 1.15%)</title><rect x="35.9194%" y="645" width="1.1520%" height="15" fill="rgb(221,165,28)" fg:x="38382" fg:w="1231"/><text x="36.1694%" y="655.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (52 samples, 0.05%)</title><rect x="37.0227%" y="629" width="0.0487%" height="15" fill="rgb(218,121,47)" fg:x="39561" fg:w="52"/><text x="37.2727%" y="639.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (153 samples, 0.14%)</title><rect x="37.0714%" y="613" width="0.1432%" height="15" fill="rgb(209,120,9)" fg:x="39613" fg:w="153"/><text x="37.3214%" y="623.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (149 samples, 0.14%)</title><rect x="37.0751%" y="597" width="0.1394%" height="15" fill="rgb(236,68,12)" fg:x="39617" fg:w="149"/><text x="37.3251%" y="607.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (149 samples, 0.14%)</title><rect x="37.0751%" y="581" width="0.1394%" height="15" fill="rgb(225,194,26)" fg:x="39617" fg:w="149"/><text x="37.3251%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (53 samples, 0.05%)</title><rect x="37.2511%" y="565" width="0.0496%" height="15" fill="rgb(231,84,39)" fg:x="39805" fg:w="53"/><text x="37.5011%" y="575.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (53 samples, 0.05%)</title><rect x="37.2511%" y="549" width="0.0496%" height="15" fill="rgb(210,11,45)" fg:x="39805" fg:w="53"/><text x="37.5011%" y="559.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (53 samples, 0.05%)</title><rect x="37.2511%" y="533" width="0.0496%" height="15" fill="rgb(224,54,52)" fg:x="39805" fg:w="53"/><text x="37.5011%" y="543.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.01%)</title><rect x="37.3007%" y="517" width="0.0112%" height="15" fill="rgb(238,102,14)" fg:x="39858" fg:w="12"/><text x="37.5507%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.01%)</title><rect x="37.3007%" y="501" width="0.0112%" height="15" fill="rgb(243,160,52)" fg:x="39858" fg:w="12"/><text x="37.5507%" y="511.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (12 samples, 0.01%)</title><rect x="37.3007%" y="485" width="0.0112%" height="15" fill="rgb(216,114,19)" fg:x="39858" fg:w="12"/><text x="37.5507%" y="495.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (817 samples, 0.76%)</title><rect x="37.2277%" y="597" width="0.7646%" height="15" fill="rgb(244,166,37)" fg:x="39780" fg:w="817"/><text x="37.4777%" y="607.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (800 samples, 0.75%)</title><rect x="37.2436%" y="581" width="0.7487%" height="15" fill="rgb(246,29,44)" fg:x="39797" fg:w="800"/><text x="37.4936%" y="591.50"></text></g><g><title>std::panic::catch_unwind (739 samples, 0.69%)</title><rect x="37.3007%" y="565" width="0.6916%" height="15" fill="rgb(215,56,53)" fg:x="39858" fg:w="739"/><text x="37.5507%" y="575.50"></text></g><g><title>std::panicking::try (739 samples, 0.69%)</title><rect x="37.3007%" y="549" width="0.6916%" height="15" fill="rgb(217,60,2)" fg:x="39858" fg:w="739"/><text x="37.5507%" y="559.50"></text></g><g><title>std::panicking::try::do_call (739 samples, 0.69%)</title><rect x="37.3007%" y="533" width="0.6916%" height="15" fill="rgb(207,26,24)" fg:x="39858" fg:w="739"/><text x="37.5507%" y="543.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (727 samples, 0.68%)</title><rect x="37.3119%" y="517" width="0.6804%" height="15" fill="rgb(252,210,15)" fg:x="39870" fg:w="727"/><text x="37.5619%" y="527.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (840 samples, 0.79%)</title><rect x="37.2146%" y="613" width="0.7861%" height="15" fill="rgb(253,209,26)" fg:x="39766" fg:w="840"/><text x="37.4646%" y="623.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,178 samples, 1.10%)</title><rect x="37.0714%" y="645" width="1.1024%" height="15" fill="rgb(238,170,14)" fg:x="39613" fg:w="1178"/><text x="37.3214%" y="655.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,178 samples, 1.10%)</title><rect x="37.0714%" y="629" width="1.1024%" height="15" fill="rgb(216,178,15)" fg:x="39613" fg:w="1178"/><text x="37.3214%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (185 samples, 0.17%)</title><rect x="38.0007%" y="613" width="0.1731%" height="15" fill="rgb(250,197,2)" fg:x="40606" fg:w="185"/><text x="38.2507%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (207 samples, 0.19%)</title><rect x="38.1738%" y="645" width="0.1937%" height="15" fill="rgb(212,70,42)" fg:x="40791" fg:w="207"/><text x="38.4238%" y="655.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (47 samples, 0.04%)</title><rect x="38.3675%" y="645" width="0.0440%" height="15" fill="rgb(227,213,9)" fg:x="40998" fg:w="47"/><text x="38.6175%" y="655.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="38.4218%" y="517" width="0.0103%" height="15" fill="rgb(245,99,25)" fg:x="41056" fg:w="11"/><text x="38.6718%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="38.4218%" y="501" width="0.0103%" height="15" fill="rgb(250,82,29)" fg:x="41056" fg:w="11"/><text x="38.6718%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="38.4218%" y="485" width="0.0103%" height="15" fill="rgb(241,226,54)" fg:x="41056" fg:w="11"/><text x="38.6718%" y="495.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="38.4218%" y="469" width="0.0103%" height="15" fill="rgb(221,99,41)" fg:x="41056" fg:w="11"/><text x="38.6718%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="38.4218%" y="453" width="0.0103%" height="15" fill="rgb(213,90,21)" fg:x="41056" fg:w="11"/><text x="38.6718%" y="463.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (23 samples, 0.02%)</title><rect x="38.4115%" y="597" width="0.0215%" height="15" fill="rgb(205,208,24)" fg:x="41045" fg:w="23"/><text x="38.6615%" y="607.50"></text></g><g><title>async_ffi::DropBomb::with (23 samples, 0.02%)</title><rect x="38.4115%" y="581" width="0.0215%" height="15" fill="rgb(246,31,12)" fg:x="41045" fg:w="23"/><text x="38.6615%" y="591.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (12 samples, 0.01%)</title><rect x="38.4218%" y="565" width="0.0112%" height="15" fill="rgb(213,154,6)" fg:x="41056" fg:w="12"/><text x="38.6718%" y="575.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="38.4218%" y="549" width="0.0112%" height="15" fill="rgb(222,163,29)" fg:x="41056" fg:w="12"/><text x="38.6718%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}}&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="38.4218%" y="533" width="0.0112%" height="15" fill="rgb(227,201,8)" fg:x="41056" fg:w="12"/><text x="38.6718%" y="543.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="38.4330%" y="581" width="0.0103%" height="15" fill="rgb(233,9,32)" fg:x="41068" fg:w="11"/><text x="38.6830%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (37 samples, 0.03%)</title><rect x="38.4499%" y="501" width="0.0346%" height="15" fill="rgb(217,54,24)" fg:x="41086" fg:w="37"/><text x="38.6999%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (37 samples, 0.03%)</title><rect x="38.4499%" y="485" width="0.0346%" height="15" fill="rgb(235,192,0)" fg:x="41086" fg:w="37"/><text x="38.6999%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (36 samples, 0.03%)</title><rect x="38.4508%" y="469" width="0.0337%" height="15" fill="rgb(235,45,9)" fg:x="41087" fg:w="36"/><text x="38.7008%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (47 samples, 0.04%)</title><rect x="38.4433%" y="533" width="0.0440%" height="15" fill="rgb(246,42,40)" fg:x="41079" fg:w="47"/><text x="38.6933%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (47 samples, 0.04%)</title><rect x="38.4433%" y="517" width="0.0440%" height="15" fill="rgb(248,111,24)" fg:x="41079" fg:w="47"/><text x="38.6933%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (53 samples, 0.05%)</title><rect x="38.4433%" y="565" width="0.0496%" height="15" fill="rgb(249,65,22)" fg:x="41079" fg:w="53"/><text x="38.6933%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (53 samples, 0.05%)</title><rect x="38.4433%" y="549" width="0.0496%" height="15" fill="rgb(238,111,51)" fg:x="41079" fg:w="53"/><text x="38.6933%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (61 samples, 0.06%)</title><rect x="38.4433%" y="581" width="0.0571%" height="15" fill="rgb(250,118,22)" fg:x="41079" fg:w="61"/><text x="38.6933%" y="591.50"></text></g><g><title>rust_dealloc (77 samples, 0.07%)</title><rect x="38.4330%" y="597" width="0.0721%" height="15" fill="rgb(234,84,26)" fg:x="41068" fg:w="77"/><text x="38.6830%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (112 samples, 0.10%)</title><rect x="38.4115%" y="645" width="0.1048%" height="15" fill="rgb(243,172,12)" fg:x="41045" fg:w="112"/><text x="38.6615%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (112 samples, 0.10%)</title><rect x="38.4115%" y="629" width="0.1048%" height="15" fill="rgb(236,150,49)" fg:x="41045" fg:w="112"/><text x="38.6615%" y="639.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 0.10%)</title><rect x="38.4115%" y="613" width="0.1048%" height="15" fill="rgb(225,197,26)" fg:x="41045" fg:w="112"/><text x="38.6615%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (12 samples, 0.01%)</title><rect x="38.5051%" y="597" width="0.0112%" height="15" fill="rgb(214,17,42)" fg:x="41145" fg:w="12"/><text x="38.7551%" y="607.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (12 samples, 0.01%)</title><rect x="38.5051%" y="581" width="0.0112%" height="15" fill="rgb(224,165,40)" fg:x="41145" fg:w="12"/><text x="38.7551%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (352 samples, 0.33%)</title><rect x="38.8860%" y="629" width="0.3294%" height="15" fill="rgb(246,100,4)" fg:x="41552" fg:w="352"/><text x="39.1360%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (165 samples, 0.15%)</title><rect x="39.2566%" y="533" width="0.1544%" height="15" fill="rgb(222,103,0)" fg:x="41948" fg:w="165"/><text x="39.5066%" y="543.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="39.4278%" y="421" width="0.0122%" height="15" fill="rgb(227,189,26)" fg:x="42131" fg:w="13"/><text x="39.6778%" y="431.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="39.4409%" y="389" width="0.0159%" height="15" fill="rgb(214,202,17)" fg:x="42145" fg:w="17"/><text x="39.6909%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (11 samples, 0.01%)</title><rect x="39.4596%" y="373" width="0.0103%" height="15" fill="rgb(229,111,3)" fg:x="42165" fg:w="11"/><text x="39.7096%" y="383.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (11 samples, 0.01%)</title><rect x="39.4596%" y="357" width="0.0103%" height="15" fill="rgb(229,172,15)" fg:x="42165" fg:w="11"/><text x="39.7096%" y="367.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (11 samples, 0.01%)</title><rect x="39.4596%" y="341" width="0.0103%" height="15" fill="rgb(230,224,35)" fg:x="42165" fg:w="11"/><text x="39.7096%" y="351.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="39.4596%" y="325" width="0.0103%" height="15" fill="rgb(251,141,6)" fg:x="42165" fg:w="11"/><text x="39.7096%" y="335.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="39.4596%" y="309" width="0.0103%" height="15" fill="rgb(225,208,6)" fg:x="42165" fg:w="11"/><text x="39.7096%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="39.4699%" y="341" width="0.0112%" height="15" fill="rgb(246,181,16)" fg:x="42176" fg:w="12"/><text x="39.7199%" y="351.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="39.4905%" y="325" width="0.0103%" height="15" fill="rgb(227,129,36)" fg:x="42198" fg:w="11"/><text x="39.7405%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (151 samples, 0.14%)</title><rect x="39.4699%" y="373" width="0.1413%" height="15" fill="rgb(248,117,24)" fg:x="42176" fg:w="151"/><text x="39.7199%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (151 samples, 0.14%)</title><rect x="39.4699%" y="357" width="0.1413%" height="15" fill="rgb(214,185,35)" fg:x="42176" fg:w="151"/><text x="39.7199%" y="367.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (139 samples, 0.13%)</title><rect x="39.4812%" y="341" width="0.1301%" height="15" fill="rgb(236,150,34)" fg:x="42188" fg:w="139"/><text x="39.7312%" y="351.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (118 samples, 0.11%)</title><rect x="39.5008%" y="325" width="0.1104%" height="15" fill="rgb(243,228,27)" fg:x="42209" fg:w="118"/><text x="39.7508%" y="335.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (118 samples, 0.11%)</title><rect x="39.5008%" y="309" width="0.1104%" height="15" fill="rgb(245,77,44)" fg:x="42209" fg:w="118"/><text x="39.7508%" y="319.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (118 samples, 0.11%)</title><rect x="39.5008%" y="293" width="0.1104%" height="15" fill="rgb(235,214,42)" fg:x="42209" fg:w="118"/><text x="39.7508%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="39.6113%" y="373" width="0.0150%" height="15" fill="rgb(221,74,3)" fg:x="42327" fg:w="16"/><text x="39.8613%" y="383.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (11 samples, 0.01%)</title><rect x="39.6159%" y="357" width="0.0103%" height="15" fill="rgb(206,121,29)" fg:x="42332" fg:w="11"/><text x="39.8659%" y="367.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (11 samples, 0.01%)</title><rect x="39.6515%" y="293" width="0.0103%" height="15" fill="rgb(249,131,53)" fg:x="42370" fg:w="11"/><text x="39.9015%" y="303.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="39.6515%" y="277" width="0.0103%" height="15" fill="rgb(236,170,29)" fg:x="42370" fg:w="11"/><text x="39.9015%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="39.6337%" y="341" width="0.0290%" height="15" fill="rgb(247,96,15)" fg:x="42351" fg:w="31"/><text x="39.8837%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="39.6468%" y="325" width="0.0159%" height="15" fill="rgb(211,210,7)" fg:x="42365" fg:w="17"/><text x="39.8968%" y="335.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (17 samples, 0.02%)</title><rect x="39.6468%" y="309" width="0.0159%" height="15" fill="rgb(240,88,50)" fg:x="42365" fg:w="17"/><text x="39.8968%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="39.6262%" y="373" width="0.0374%" height="15" fill="rgb(209,229,26)" fg:x="42343" fg:w="40"/><text x="39.8762%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.04%)</title><rect x="39.6281%" y="357" width="0.0356%" height="15" fill="rgb(210,68,23)" fg:x="42345" fg:w="38"/><text x="39.8781%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::empty (41 samples, 0.04%)</title><rect x="39.6637%" y="373" width="0.0384%" height="15" fill="rgb(229,180,13)" fg:x="42383" fg:w="41"/><text x="39.9137%" y="383.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (41 samples, 0.04%)</title><rect x="39.6637%" y="357" width="0.0384%" height="15" fill="rgb(236,53,44)" fg:x="42383" fg:w="41"/><text x="39.9137%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (442 samples, 0.41%)</title><rect x="39.4400%" y="421" width="0.4136%" height="15" fill="rgb(244,214,29)" fg:x="42144" fg:w="442"/><text x="39.6900%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (441 samples, 0.41%)</title><rect x="39.4409%" y="405" width="0.4127%" height="15" fill="rgb(220,75,29)" fg:x="42145" fg:w="441"/><text x="39.6909%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (423 samples, 0.40%)</title><rect x="39.4578%" y="389" width="0.3959%" height="15" fill="rgb(214,183,37)" fg:x="42163" fg:w="423"/><text x="39.7078%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (162 samples, 0.15%)</title><rect x="39.7020%" y="373" width="0.1516%" height="15" fill="rgb(239,117,29)" fg:x="42424" fg:w="162"/><text x="39.9520%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (162 samples, 0.15%)</title><rect x="39.7020%" y="357" width="0.1516%" height="15" fill="rgb(237,171,35)" fg:x="42424" fg:w="162"/><text x="39.9520%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (652 samples, 0.61%)</title><rect x="39.2444%" y="549" width="0.6102%" height="15" fill="rgb(229,178,53)" fg:x="41935" fg:w="652"/><text x="39.4944%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (474 samples, 0.44%)</title><rect x="39.4110%" y="533" width="0.4436%" height="15" fill="rgb(210,102,19)" fg:x="42113" fg:w="474"/><text x="39.6610%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (474 samples, 0.44%)</title><rect x="39.4110%" y="517" width="0.4436%" height="15" fill="rgb(235,127,22)" fg:x="42113" fg:w="474"/><text x="39.6610%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (474 samples, 0.44%)</title><rect x="39.4110%" y="501" width="0.4436%" height="15" fill="rgb(244,31,31)" fg:x="42113" fg:w="474"/><text x="39.6610%" y="511.50"></text></g><g><title>alloc::alloc::alloc (474 samples, 0.44%)</title><rect x="39.4110%" y="485" width="0.4436%" height="15" fill="rgb(231,43,21)" fg:x="42113" fg:w="474"/><text x="39.6610%" y="495.50"></text></g><g><title>__rg_alloc (474 samples, 0.44%)</title><rect x="39.4110%" y="469" width="0.4436%" height="15" fill="rgb(217,131,35)" fg:x="42113" fg:w="474"/><text x="39.6610%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (474 samples, 0.44%)</title><rect x="39.4110%" y="453" width="0.4436%" height="15" fill="rgb(221,149,4)" fg:x="42113" fg:w="474"/><text x="39.6610%" y="463.50"></text></g><g><title>rust_alloc (466 samples, 0.44%)</title><rect x="39.4185%" y="437" width="0.4361%" height="15" fill="rgb(232,170,28)" fg:x="42121" fg:w="466"/><text x="39.6685%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (685 samples, 0.64%)</title><rect x="39.2210%" y="629" width="0.6410%" height="15" fill="rgb(238,56,10)" fg:x="41910" fg:w="685"/><text x="39.4710%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (660 samples, 0.62%)</title><rect x="39.2444%" y="613" width="0.6177%" height="15" fill="rgb(235,196,14)" fg:x="41935" fg:w="660"/><text x="39.4944%" y="623.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (660 samples, 0.62%)</title><rect x="39.2444%" y="597" width="0.6177%" height="15" fill="rgb(216,45,48)" fg:x="41935" fg:w="660"/><text x="39.4944%" y="607.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (660 samples, 0.62%)</title><rect x="39.2444%" y="581" width="0.6177%" height="15" fill="rgb(238,213,17)" fg:x="41935" fg:w="660"/><text x="39.4944%" y="591.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (660 samples, 0.62%)</title><rect x="39.2444%" y="565" width="0.6177%" height="15" fill="rgb(212,13,2)" fg:x="41935" fg:w="660"/><text x="39.4944%" y="575.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (5,151 samples, 4.82%)</title><rect x="35.1005%" y="661" width="4.8205%" height="15" fill="rgb(240,114,20)" fg:x="37507" fg:w="5151"/><text x="35.3505%" y="671.50">tremor..</text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (1,501 samples, 1.40%)</title><rect x="38.5163%" y="645" width="1.4047%" height="15" fill="rgb(228,41,40)" fg:x="41157" fg:w="1501"/><text x="38.7663%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::_::&lt;impl tremor_runtime::connectors::sink::RawSink_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::on_event (56 samples, 0.05%)</title><rect x="39.8686%" y="629" width="0.0524%" height="15" fill="rgb(244,132,35)" fg:x="42602" fg:w="56"/><text x="40.1186%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (60 samples, 0.06%)</title><rect x="40.1082%" y="629" width="0.0562%" height="15" fill="rgb(253,189,4)" fg:x="42858" fg:w="60"/><text x="40.3582%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (60 samples, 0.06%)</title><rect x="40.1082%" y="613" width="0.0562%" height="15" fill="rgb(224,37,19)" fg:x="42858" fg:w="60"/><text x="40.3582%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (60 samples, 0.06%)</title><rect x="40.1082%" y="597" width="0.0562%" height="15" fill="rgb(235,223,18)" fg:x="42858" fg:w="60"/><text x="40.3582%" y="607.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (42 samples, 0.04%)</title><rect x="40.1250%" y="581" width="0.0393%" height="15" fill="rgb(235,163,25)" fg:x="42876" fg:w="42"/><text x="40.3750%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (42 samples, 0.04%)</title><rect x="40.1250%" y="565" width="0.0393%" height="15" fill="rgb(217,145,28)" fg:x="42876" fg:w="42"/><text x="40.3750%" y="575.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (30 samples, 0.03%)</title><rect x="40.1756%" y="565" width="0.0281%" height="15" fill="rgb(223,223,32)" fg:x="42930" fg:w="30"/><text x="40.4256%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="40.1915%" y="549" width="0.0122%" height="15" fill="rgb(227,189,39)" fg:x="42947" fg:w="13"/><text x="40.4415%" y="559.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="40.1915%" y="533" width="0.0122%" height="15" fill="rgb(248,10,22)" fg:x="42947" fg:w="13"/><text x="40.4415%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="40.1915%" y="517" width="0.0122%" height="15" fill="rgb(248,46,39)" fg:x="42947" fg:w="13"/><text x="40.4415%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="40.1915%" y="501" width="0.0122%" height="15" fill="rgb(248,113,48)" fg:x="42947" fg:w="13"/><text x="40.4415%" y="511.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="40.1915%" y="485" width="0.0122%" height="15" fill="rgb(245,16,25)" fg:x="42947" fg:w="13"/><text x="40.4415%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="40.1915%" y="469" width="0.0122%" height="15" fill="rgb(249,152,16)" fg:x="42947" fg:w="13"/><text x="40.4415%" y="479.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="40.2195%" y="469" width="0.0112%" height="15" fill="rgb(250,16,1)" fg:x="42977" fg:w="12"/><text x="40.4695%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (24 samples, 0.02%)</title><rect x="40.2560%" y="421" width="0.0225%" height="15" fill="rgb(249,138,3)" fg:x="43016" fg:w="24"/><text x="40.5060%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="40.2560%" y="405" width="0.0225%" height="15" fill="rgb(227,71,41)" fg:x="43016" fg:w="24"/><text x="40.5060%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (50 samples, 0.05%)</title><rect x="40.2383%" y="469" width="0.0468%" height="15" fill="rgb(209,184,23)" fg:x="42997" fg:w="50"/><text x="40.4883%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (50 samples, 0.05%)</title><rect x="40.2383%" y="453" width="0.0468%" height="15" fill="rgb(223,215,31)" fg:x="42997" fg:w="50"/><text x="40.4883%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (50 samples, 0.05%)</title><rect x="40.2383%" y="437" width="0.0468%" height="15" fill="rgb(210,146,28)" fg:x="42997" fg:w="50"/><text x="40.4883%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (90 samples, 0.08%)</title><rect x="40.2186%" y="501" width="0.0842%" height="15" fill="rgb(209,183,41)" fg:x="42976" fg:w="90"/><text x="40.4686%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (90 samples, 0.08%)</title><rect x="40.2186%" y="485" width="0.0842%" height="15" fill="rgb(209,224,45)" fg:x="42976" fg:w="90"/><text x="40.4686%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (19 samples, 0.02%)</title><rect x="40.2851%" y="469" width="0.0178%" height="15" fill="rgb(224,209,51)" fg:x="43047" fg:w="19"/><text x="40.5351%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (91 samples, 0.09%)</title><rect x="40.2186%" y="533" width="0.0852%" height="15" fill="rgb(223,17,39)" fg:x="42976" fg:w="91"/><text x="40.4686%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (91 samples, 0.09%)</title><rect x="40.2186%" y="517" width="0.0852%" height="15" fill="rgb(234,204,37)" fg:x="42976" fg:w="91"/><text x="40.4686%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (108 samples, 0.10%)</title><rect x="40.2111%" y="549" width="0.1011%" height="15" fill="rgb(236,120,5)" fg:x="42968" fg:w="108"/><text x="40.4611%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,857 samples, 5.48%)</title><rect x="34.8357%" y="677" width="5.4812%" height="15" fill="rgb(248,97,27)" fg:x="37224" fg:w="5857"/><text x="35.0857%" y="687.50">&lt;core::..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (418 samples, 0.39%)</title><rect x="39.9257%" y="661" width="0.3912%" height="15" fill="rgb(240,66,17)" fg:x="42663" fg:w="418"/><text x="40.1757%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (223 samples, 0.21%)</title><rect x="40.1082%" y="645" width="0.2087%" height="15" fill="rgb(210,79,3)" fg:x="42858" fg:w="223"/><text x="40.3582%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::pdk::PdkOpMeta&gt; (163 samples, 0.15%)</title><rect x="40.1643%" y="629" width="0.1525%" height="15" fill="rgb(214,176,27)" fg:x="42918" fg:w="163"/><text x="40.4143%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (163 samples, 0.15%)</title><rect x="40.1643%" y="613" width="0.1525%" height="15" fill="rgb(235,185,3)" fg:x="42918" fg:w="163"/><text x="40.4143%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (163 samples, 0.15%)</title><rect x="40.1643%" y="597" width="0.1525%" height="15" fill="rgb(227,24,12)" fg:x="42918" fg:w="163"/><text x="40.4143%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (163 samples, 0.15%)</title><rect x="40.1643%" y="581" width="0.1525%" height="15" fill="rgb(252,169,48)" fg:x="42918" fg:w="163"/><text x="40.4143%" y="591.50"></text></g><g><title>rust_dealloc (120 samples, 0.11%)</title><rect x="40.2046%" y="565" width="0.1123%" height="15" fill="rgb(212,65,1)" fg:x="42961" fg:w="120"/><text x="40.4546%" y="575.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (163 samples, 0.15%)</title><rect x="40.3169%" y="677" width="0.1525%" height="15" fill="rgb(242,39,24)" fg:x="43081" fg:w="163"/><text x="40.5669%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="40.4554%" y="661" width="0.0140%" height="15" fill="rgb(249,32,23)" fg:x="43229" fg:w="15"/><text x="40.7054%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="40.5265%" y="629" width="0.0112%" height="15" fill="rgb(251,195,23)" fg:x="43305" fg:w="12"/><text x="40.7765%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (79 samples, 0.07%)</title><rect x="40.5003%" y="661" width="0.0739%" height="15" fill="rgb(236,174,8)" fg:x="43277" fg:w="79"/><text x="40.7503%" y="671.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (79 samples, 0.07%)</title><rect x="40.5003%" y="645" width="0.0739%" height="15" fill="rgb(220,197,8)" fg:x="43277" fg:w="79"/><text x="40.7503%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (39 samples, 0.04%)</title><rect x="40.5377%" y="629" width="0.0365%" height="15" fill="rgb(240,108,37)" fg:x="43317" fg:w="39"/><text x="40.7877%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="40.7511%" y="629" width="0.0122%" height="15" fill="rgb(232,176,24)" fg:x="43545" fg:w="13"/><text x="41.0011%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (13 samples, 0.01%)</title><rect x="40.7511%" y="613" width="0.0122%" height="15" fill="rgb(243,35,29)" fg:x="43545" fg:w="13"/><text x="41.0011%" y="623.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (217 samples, 0.20%)</title><rect x="40.5742%" y="661" width="0.2031%" height="15" fill="rgb(210,37,18)" fg:x="43356" fg:w="217"/><text x="40.8242%" y="671.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (55 samples, 0.05%)</title><rect x="40.7258%" y="645" width="0.0515%" height="15" fill="rgb(224,184,40)" fg:x="43518" fg:w="55"/><text x="40.9758%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (15 samples, 0.01%)</title><rect x="40.7633%" y="629" width="0.0140%" height="15" fill="rgb(236,39,29)" fg:x="43558" fg:w="15"/><text x="41.0133%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 0.01%)</title><rect x="40.7633%" y="613" width="0.0140%" height="15" fill="rgb(232,48,39)" fg:x="43558" fg:w="15"/><text x="41.0133%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.01%)</title><rect x="40.7633%" y="597" width="0.0140%" height="15" fill="rgb(236,34,42)" fg:x="43558" fg:w="15"/><text x="41.0133%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.01%)</title><rect x="40.7633%" y="581" width="0.0140%" height="15" fill="rgb(243,106,37)" fg:x="43558" fg:w="15"/><text x="41.0133%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.01%)</title><rect x="40.7633%" y="565" width="0.0140%" height="15" fill="rgb(218,96,6)" fg:x="43558" fg:w="15"/><text x="41.0133%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="40.7642%" y="549" width="0.0131%" height="15" fill="rgb(235,130,12)" fg:x="43559" fg:w="14"/><text x="41.0142%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="40.7661%" y="533" width="0.0112%" height="15" fill="rgb(231,95,0)" fg:x="43561" fg:w="12"/><text x="41.0161%" y="543.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="40.7773%" y="661" width="0.0112%" height="15" fill="rgb(228,12,23)" fg:x="43573" fg:w="12"/><text x="41.0273%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="40.7773%" y="645" width="0.0112%" height="15" fill="rgb(216,12,1)" fg:x="43573" fg:w="12"/><text x="41.0273%" y="655.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (351 samples, 0.33%)</title><rect x="40.4694%" y="677" width="0.3285%" height="15" fill="rgb(219,59,3)" fg:x="43244" fg:w="351"/><text x="40.7194%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,564 samples, 1.46%)</title><rect x="40.7979%" y="677" width="1.4637%" height="15" fill="rgb(215,208,46)" fg:x="43595" fg:w="1564"/><text x="41.0479%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (12 samples, 0.01%)</title><rect x="42.2980%" y="421" width="0.0112%" height="15" fill="rgb(254,224,29)" fg:x="45198" fg:w="12"/><text x="42.5480%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (46 samples, 0.04%)</title><rect x="42.4113%" y="389" width="0.0430%" height="15" fill="rgb(232,14,29)" fg:x="45319" fg:w="46"/><text x="42.6613%" y="399.50"></text></g><g><title> (46 samples, 0.04%)</title><rect x="42.4113%" y="373" width="0.0430%" height="15" fill="rgb(208,45,52)" fg:x="45319" fg:w="46"/><text x="42.6613%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (176 samples, 0.16%)</title><rect x="42.3093%" y="421" width="0.1647%" height="15" fill="rgb(234,191,28)" fg:x="45210" fg:w="176"/><text x="42.5593%" y="431.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (165 samples, 0.15%)</title><rect x="42.3196%" y="405" width="0.1544%" height="15" fill="rgb(244,67,43)" fg:x="45221" fg:w="165"/><text x="42.5696%" y="415.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (17 samples, 0.02%)</title><rect x="42.4581%" y="389" width="0.0159%" height="15" fill="rgb(236,189,24)" fg:x="45369" fg:w="17"/><text x="42.7081%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (255 samples, 0.24%)</title><rect x="42.2934%" y="453" width="0.2386%" height="15" fill="rgb(239,214,33)" fg:x="45193" fg:w="255"/><text x="42.5434%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (255 samples, 0.24%)</title><rect x="42.2934%" y="437" width="0.2386%" height="15" fill="rgb(226,176,41)" fg:x="45193" fg:w="255"/><text x="42.5434%" y="447.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (61 samples, 0.06%)</title><rect x="42.4749%" y="421" width="0.0571%" height="15" fill="rgb(248,47,8)" fg:x="45387" fg:w="61"/><text x="42.7249%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (283 samples, 0.26%)</title><rect x="42.2784%" y="501" width="0.2648%" height="15" fill="rgb(218,81,44)" fg:x="45177" fg:w="283"/><text x="42.5284%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (267 samples, 0.25%)</title><rect x="42.2934%" y="485" width="0.2499%" height="15" fill="rgb(213,98,6)" fg:x="45193" fg:w="267"/><text x="42.5434%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (267 samples, 0.25%)</title><rect x="42.2934%" y="469" width="0.2499%" height="15" fill="rgb(222,85,22)" fg:x="45193" fg:w="267"/><text x="42.5434%" y="479.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="42.5320%" y="453" width="0.0112%" height="15" fill="rgb(239,46,39)" fg:x="45448" fg:w="12"/><text x="42.7820%" y="463.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="42.5320%" y="437" width="0.0112%" height="15" fill="rgb(237,12,29)" fg:x="45448" fg:w="12"/><text x="42.7820%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="42.5320%" y="421" width="0.0112%" height="15" fill="rgb(214,77,8)" fg:x="45448" fg:w="12"/><text x="42.7820%" y="431.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="42.5320%" y="405" width="0.0112%" height="15" fill="rgb(217,168,37)" fg:x="45448" fg:w="12"/><text x="42.7820%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (305 samples, 0.29%)</title><rect x="42.2615%" y="677" width="0.2854%" height="15" fill="rgb(221,217,23)" fg:x="45159" fg:w="305"/><text x="42.5115%" y="687.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (305 samples, 0.29%)</title><rect x="42.2615%" y="661" width="0.2854%" height="15" fill="rgb(243,229,36)" fg:x="45159" fg:w="305"/><text x="42.5115%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (296 samples, 0.28%)</title><rect x="42.2700%" y="645" width="0.2770%" height="15" fill="rgb(251,163,40)" fg:x="45168" fg:w="296"/><text x="42.5200%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (296 samples, 0.28%)</title><rect x="42.2700%" y="629" width="0.2770%" height="15" fill="rgb(237,222,12)" fg:x="45168" fg:w="296"/><text x="42.5200%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (296 samples, 0.28%)</title><rect x="42.2700%" y="613" width="0.2770%" height="15" fill="rgb(248,132,6)" fg:x="45168" fg:w="296"/><text x="42.5200%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (296 samples, 0.28%)</title><rect x="42.2700%" y="597" width="0.2770%" height="15" fill="rgb(227,167,50)" fg:x="45168" fg:w="296"/><text x="42.5200%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (296 samples, 0.28%)</title><rect x="42.2700%" y="581" width="0.2770%" height="15" fill="rgb(242,84,37)" fg:x="45168" fg:w="296"/><text x="42.5200%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (296 samples, 0.28%)</title><rect x="42.2700%" y="565" width="0.2770%" height="15" fill="rgb(212,4,50)" fg:x="45168" fg:w="296"/><text x="42.5200%" y="575.50"></text></g><g><title>__rg_dealloc (296 samples, 0.28%)</title><rect x="42.2700%" y="549" width="0.2770%" height="15" fill="rgb(230,228,32)" fg:x="45168" fg:w="296"/><text x="42.5200%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (296 samples, 0.28%)</title><rect x="42.2700%" y="533" width="0.2770%" height="15" fill="rgb(248,217,23)" fg:x="45168" fg:w="296"/><text x="42.5200%" y="543.50"></text></g><g><title>rust_dealloc (296 samples, 0.28%)</title><rect x="42.2700%" y="517" width="0.2770%" height="15" fill="rgb(238,197,32)" fg:x="45168" fg:w="296"/><text x="42.5200%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="42.5470%" y="661" width="0.0140%" height="15" fill="rgb(236,106,1)" fg:x="45464" fg:w="15"/><text x="42.7970%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="42.5470%" y="677" width="0.0215%" height="15" fill="rgb(219,228,13)" fg:x="45464" fg:w="23"/><text x="42.7970%" y="687.50"></text></g><g><title>core::time::Duration::as_nanos (24 samples, 0.02%)</title><rect x="42.6237%" y="661" width="0.0225%" height="15" fill="rgb(238,30,35)" fg:x="45546" fg:w="24"/><text x="42.8737%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (118 samples, 0.11%)</title><rect x="42.7594%" y="613" width="0.1104%" height="15" fill="rgb(236,70,23)" fg:x="45691" fg:w="118"/><text x="43.0094%" y="623.50"></text></g><g><title>core::cmp::PartialOrd::ge (118 samples, 0.11%)</title><rect x="42.7594%" y="597" width="0.1104%" height="15" fill="rgb(249,104,48)" fg:x="45691" fg:w="118"/><text x="43.0094%" y="607.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (118 samples, 0.11%)</title><rect x="42.7594%" y="581" width="0.1104%" height="15" fill="rgb(254,117,50)" fg:x="45691" fg:w="118"/><text x="43.0094%" y="591.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (118 samples, 0.11%)</title><rect x="42.7594%" y="565" width="0.1104%" height="15" fill="rgb(223,152,4)" fg:x="45691" fg:w="118"/><text x="43.0094%" y="575.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (118 samples, 0.11%)</title><rect x="42.7594%" y="549" width="0.1104%" height="15" fill="rgb(245,6,2)" fg:x="45691" fg:w="118"/><text x="43.0094%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (71 samples, 0.07%)</title><rect x="42.8034%" y="533" width="0.0664%" height="15" fill="rgb(249,150,24)" fg:x="45738" fg:w="71"/><text x="43.0534%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (294 samples, 0.28%)</title><rect x="42.6462%" y="645" width="0.2751%" height="15" fill="rgb(228,185,42)" fg:x="45570" fg:w="294"/><text x="42.8962%" y="655.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (294 samples, 0.28%)</title><rect x="42.6462%" y="629" width="0.2751%" height="15" fill="rgb(226,39,33)" fg:x="45570" fg:w="294"/><text x="42.8962%" y="639.50"></text></g><g><title>core::time::Duration::new (55 samples, 0.05%)</title><rect x="42.8698%" y="613" width="0.0515%" height="15" fill="rgb(221,166,19)" fg:x="45809" fg:w="55"/><text x="43.1198%" y="623.50"></text></g><g><title>std::time::SystemTime::duration_since (308 samples, 0.29%)</title><rect x="42.6462%" y="661" width="0.2882%" height="15" fill="rgb(209,109,2)" fg:x="45570" fg:w="308"/><text x="42.8962%" y="671.50"></text></g><g><title>tremor_common::time::nanotime (14 samples, 0.01%)</title><rect x="42.9213%" y="645" width="0.0131%" height="15" fill="rgb(252,216,26)" fg:x="45864" fg:w="14"/><text x="43.1713%" y="655.50"></text></g><g><title>tremor_common::time::nanotime (1,661 samples, 1.55%)</title><rect x="42.5685%" y="677" width="1.5544%" height="15" fill="rgb(227,173,36)" fg:x="45487" fg:w="1661"/><text x="42.8185%" y="687.50"></text></g><g><title>std::time::SystemTime::now (1,270 samples, 1.19%)</title><rect x="42.9344%" y="661" width="1.1885%" height="15" fill="rgb(209,90,7)" fg:x="45878" fg:w="1270"/><text x="43.1844%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,270 samples, 1.19%)</title><rect x="42.9344%" y="645" width="1.1885%" height="15" fill="rgb(250,194,11)" fg:x="45878" fg:w="1270"/><text x="43.1844%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::now (1,270 samples, 1.19%)</title><rect x="42.9344%" y="629" width="1.1885%" height="15" fill="rgb(220,72,50)" fg:x="45878" fg:w="1270"/><text x="43.1844%" y="639.50"></text></g><g><title>__clock_gettime_2 (1,068 samples, 1.00%)</title><rect x="43.1235%" y="613" width="0.9995%" height="15" fill="rgb(222,106,48)" fg:x="46080" fg:w="1068"/><text x="43.3735%" y="623.50"></text></g><g><title>__vdso_clock_gettime (989 samples, 0.93%)</title><rect x="43.1974%" y="597" width="0.9255%" height="15" fill="rgb(216,220,45)" fg:x="46159" fg:w="989"/><text x="43.4474%" y="607.50"></text></g><g><title>[[vdso]] (617 samples, 0.58%)</title><rect x="43.5455%" y="581" width="0.5774%" height="15" fill="rgb(234,112,18)" fg:x="46531" fg:w="617"/><text x="43.7955%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (16 samples, 0.01%)</title><rect x="44.1229%" y="661" width="0.0150%" height="15" fill="rgb(206,179,9)" fg:x="47148" fg:w="16"/><text x="44.3729%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (17 samples, 0.02%)</title><rect x="44.1379%" y="613" width="0.0159%" height="15" fill="rgb(215,115,40)" fg:x="47164" fg:w="17"/><text x="44.3879%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (11 samples, 0.01%)</title><rect x="44.1435%" y="597" width="0.0103%" height="15" fill="rgb(222,69,34)" fg:x="47170" fg:w="11"/><text x="44.3935%" y="607.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="44.1538%" y="613" width="0.0131%" height="15" fill="rgb(209,161,10)" fg:x="47181" fg:w="14"/><text x="44.4038%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (14 samples, 0.01%)</title><rect x="44.1538%" y="597" width="0.0131%" height="15" fill="rgb(217,6,38)" fg:x="47181" fg:w="14"/><text x="44.4038%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="44.1538%" y="581" width="0.0131%" height="15" fill="rgb(229,229,48)" fg:x="47181" fg:w="14"/><text x="44.4038%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (14 samples, 0.01%)</title><rect x="44.1538%" y="565" width="0.0131%" height="15" fill="rgb(225,21,28)" fg:x="47181" fg:w="14"/><text x="44.4038%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (13 samples, 0.01%)</title><rect x="44.1548%" y="549" width="0.0122%" height="15" fill="rgb(206,33,13)" fg:x="47182" fg:w="13"/><text x="44.4048%" y="559.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (13 samples, 0.01%)</title><rect x="44.1548%" y="533" width="0.0122%" height="15" fill="rgb(242,178,17)" fg:x="47182" fg:w="13"/><text x="44.4048%" y="543.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (54 samples, 0.05%)</title><rect x="44.1229%" y="677" width="0.0505%" height="15" fill="rgb(220,162,5)" fg:x="47148" fg:w="54"/><text x="44.3729%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (38 samples, 0.04%)</title><rect x="44.1379%" y="661" width="0.0356%" height="15" fill="rgb(210,33,43)" fg:x="47164" fg:w="38"/><text x="44.3879%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (38 samples, 0.04%)</title><rect x="44.1379%" y="645" width="0.0356%" height="15" fill="rgb(216,116,54)" fg:x="47164" fg:w="38"/><text x="44.3879%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="44.1379%" y="629" width="0.0356%" height="15" fill="rgb(249,92,24)" fg:x="47164" fg:w="38"/><text x="44.3879%" y="639.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies (26 samples, 0.02%)</title><rect x="44.1735%" y="677" width="0.0243%" height="15" fill="rgb(231,189,14)" fg:x="47202" fg:w="26"/><text x="44.4235%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (10,405 samples, 9.74%)</title><rect x="34.4810%" y="693" width="9.7374%" height="15" fill="rgb(230,8,41)" fg:x="36845" fg:w="10405"/><text x="34.7310%" y="703.50">tremor_runtime..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::periodic_flush (14 samples, 0.01%)</title><rect x="44.2053%" y="677" width="0.0131%" height="15" fill="rgb(249,7,27)" fg:x="47236" fg:w="14"/><text x="44.4553%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (10,454 samples, 9.78%)</title><rect x="34.4473%" y="1157" width="9.7833%" height="15" fill="rgb(232,86,5)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="1167.50">async_global_e..</text></g><g><title>std::panic::catch_unwind (10,454 samples, 9.78%)</title><rect x="34.4473%" y="1141" width="9.7833%" height="15" fill="rgb(224,175,18)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="1151.50">std::panic::ca..</text></g><g><title>std::panicking::try (10,454 samples, 9.78%)</title><rect x="34.4473%" y="1125" width="9.7833%" height="15" fill="rgb(220,129,12)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="1135.50">std::panicking..</text></g><g><title>std::panicking::try::do_call (10,454 samples, 9.78%)</title><rect x="34.4473%" y="1109" width="9.7833%" height="15" fill="rgb(210,19,36)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="1119.50">std::panicking..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (10,454 samples, 9.78%)</title><rect x="34.4473%" y="1093" width="9.7833%" height="15" fill="rgb(219,96,14)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="1103.50">async_global_e..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,454 samples, 9.78%)</title><rect x="34.4473%" y="1077" width="9.7833%" height="15" fill="rgb(249,106,1)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="1087.50">std::thread::l..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,454 samples, 9.78%)</title><rect x="34.4473%" y="1061" width="9.7833%" height="15" fill="rgb(249,155,20)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="1071.50">std::thread::l..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (10,454 samples, 9.78%)</title><rect x="34.4473%" y="1045" width="9.7833%" height="15" fill="rgb(244,168,9)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="1055.50">async_global_e..</text></g><g><title>async_global_executor::reactor::block_on (10,454 samples, 9.78%)</title><rect x="34.4473%" y="1029" width="9.7833%" height="15" fill="rgb(216,23,50)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="1039.50">async_global_e..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (10,454 samples, 9.78%)</title><rect x="34.4473%" y="1013" width="9.7833%" height="15" fill="rgb(224,219,20)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="1023.50">async_global_e..</text></g><g><title>async_io::driver::block_on (10,454 samples, 9.78%)</title><rect x="34.4473%" y="997" width="9.7833%" height="15" fill="rgb(222,156,15)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="1007.50">async_io::driv..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,454 samples, 9.78%)</title><rect x="34.4473%" y="981" width="9.7833%" height="15" fill="rgb(231,97,17)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="991.50">&lt;futures_lite:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,454 samples, 9.78%)</title><rect x="34.4473%" y="965" width="9.7833%" height="15" fill="rgb(218,70,48)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="975.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::run::{{closure}} (10,454 samples, 9.78%)</title><rect x="34.4473%" y="949" width="9.7833%" height="15" fill="rgb(212,196,52)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="959.50">async_executor..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,454 samples, 9.78%)</title><rect x="34.4473%" y="933" width="9.7833%" height="15" fill="rgb(243,203,18)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="943.50">&lt;futures_lite:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,454 samples, 9.78%)</title><rect x="34.4473%" y="917" width="9.7833%" height="15" fill="rgb(252,125,41)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="927.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (10,454 samples, 9.78%)</title><rect x="34.4473%" y="901" width="9.7833%" height="15" fill="rgb(223,180,33)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="911.50">async_executor..</text></g><g><title>async_task::runnable::Runnable::run (10,454 samples, 9.78%)</title><rect x="34.4473%" y="885" width="9.7833%" height="15" fill="rgb(254,159,46)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="895.50">async_task::ru..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (10,454 samples, 9.78%)</title><rect x="34.4473%" y="869" width="9.7833%" height="15" fill="rgb(254,38,10)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="879.50">async_task::ra..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10,454 samples, 9.78%)</title><rect x="34.4473%" y="853" width="9.7833%" height="15" fill="rgb(208,217,32)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="863.50">&lt;core::pin::Pi..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,454 samples, 9.78%)</title><rect x="34.4473%" y="837" width="9.7833%" height="15" fill="rgb(221,120,13)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="847.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (10,454 samples, 9.78%)</title><rect x="34.4473%" y="821" width="9.7833%" height="15" fill="rgb(246,54,52)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="831.50">async_executor..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (10,454 samples, 9.78%)</title><rect x="34.4473%" y="805" width="9.7833%" height="15" fill="rgb(242,34,25)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="815.50">&lt;async_std::ta..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (10,454 samples, 9.78%)</title><rect x="34.4473%" y="789" width="9.7833%" height="15" fill="rgb(247,209,9)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="799.50">async_std::tas..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,454 samples, 9.78%)</title><rect x="34.4473%" y="773" width="9.7833%" height="15" fill="rgb(228,71,26)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="783.50">std::thread::l..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,454 samples, 9.78%)</title><rect x="34.4473%" y="757" width="9.7833%" height="15" fill="rgb(222,145,49)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="767.50">std::thread::l..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (10,454 samples, 9.78%)</title><rect x="34.4473%" y="741" width="9.7833%" height="15" fill="rgb(218,121,17)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="751.50">async_std::tas..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (10,454 samples, 9.78%)</title><rect x="34.4473%" y="725" width="9.7833%" height="15" fill="rgb(244,50,7)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="735.50">&lt;async_std::ta..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,454 samples, 9.78%)</title><rect x="34.4473%" y="709" width="9.7833%" height="15" fill="rgb(246,229,37)" fg:x="36809" fg:w="10454"/><text x="34.6973%" y="719.50">&lt;core::future:..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (12 samples, 0.01%)</title><rect x="44.2193%" y="693" width="0.0112%" height="15" fill="rgb(225,18,5)" fg:x="47251" fg:w="12"/><text x="44.4693%" y="703.50"></text></g><g><title>__rust_probestack (12 samples, 0.01%)</title><rect x="44.2193%" y="677" width="0.0112%" height="15" fill="rgb(213,204,8)" fg:x="47251" fg:w="12"/><text x="44.4693%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (528 samples, 0.49%)</title><rect x="44.3017%" y="773" width="0.4941%" height="15" fill="rgb(238,103,6)" fg:x="47339" fg:w="528"/><text x="44.5517%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (557 samples, 0.52%)</title><rect x="44.2839%" y="789" width="0.5213%" height="15" fill="rgb(222,25,35)" fg:x="47320" fg:w="557"/><text x="44.5339%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (838 samples, 0.78%)</title><rect x="44.2493%" y="805" width="0.7842%" height="15" fill="rgb(213,203,35)" fg:x="47283" fg:w="838"/><text x="44.4993%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (244 samples, 0.23%)</title><rect x="44.8052%" y="789" width="0.2283%" height="15" fill="rgb(221,79,53)" fg:x="47877" fg:w="244"/><text x="45.0552%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (862 samples, 0.81%)</title><rect x="44.2362%" y="837" width="0.8067%" height="15" fill="rgb(243,200,35)" fg:x="47269" fg:w="862"/><text x="44.4862%" y="847.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (862 samples, 0.81%)</title><rect x="44.2362%" y="821" width="0.8067%" height="15" fill="rgb(248,60,25)" fg:x="47269" fg:w="862"/><text x="44.4862%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (20 samples, 0.02%)</title><rect x="45.4602%" y="389" width="0.0187%" height="15" fill="rgb(227,53,46)" fg:x="48577" fg:w="20"/><text x="45.7102%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (74 samples, 0.07%)</title><rect x="45.4827%" y="357" width="0.0693%" height="15" fill="rgb(216,120,32)" fg:x="48601" fg:w="74"/><text x="45.7327%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (74 samples, 0.07%)</title><rect x="45.4827%" y="341" width="0.0693%" height="15" fill="rgb(220,134,1)" fg:x="48601" fg:w="74"/><text x="45.7327%" y="351.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (100 samples, 0.09%)</title><rect x="45.4827%" y="373" width="0.0936%" height="15" fill="rgb(237,168,5)" fg:x="48601" fg:w="100"/><text x="45.7327%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (26 samples, 0.02%)</title><rect x="45.5520%" y="357" width="0.0243%" height="15" fill="rgb(231,100,33)" fg:x="48675" fg:w="26"/><text x="45.8020%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (16 samples, 0.01%)</title><rect x="45.5613%" y="341" width="0.0150%" height="15" fill="rgb(236,177,47)" fg:x="48685" fg:w="16"/><text x="45.8113%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (16 samples, 0.01%)</title><rect x="45.5613%" y="325" width="0.0150%" height="15" fill="rgb(235,7,49)" fg:x="48685" fg:w="16"/><text x="45.8113%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (573 samples, 0.54%)</title><rect x="45.0513%" y="437" width="0.5362%" height="15" fill="rgb(232,119,22)" fg:x="48140" fg:w="573"/><text x="45.3013%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (512 samples, 0.48%)</title><rect x="45.1084%" y="421" width="0.4791%" height="15" fill="rgb(254,73,53)" fg:x="48201" fg:w="512"/><text x="45.3584%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (141 samples, 0.13%)</title><rect x="45.4556%" y="405" width="0.1320%" height="15" fill="rgb(251,35,20)" fg:x="48572" fg:w="141"/><text x="45.7056%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (116 samples, 0.11%)</title><rect x="45.4790%" y="389" width="0.1086%" height="15" fill="rgb(241,119,20)" fg:x="48597" fg:w="116"/><text x="45.7290%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (12 samples, 0.01%)</title><rect x="45.5763%" y="373" width="0.0112%" height="15" fill="rgb(207,102,14)" fg:x="48701" fg:w="12"/><text x="45.8263%" y="383.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="45.6081%" y="245" width="0.0103%" height="15" fill="rgb(248,201,50)" fg:x="48735" fg:w="11"/><text x="45.8581%" y="255.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="45.6081%" y="229" width="0.0103%" height="15" fill="rgb(222,185,44)" fg:x="48735" fg:w="11"/><text x="45.8581%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="45.6184%" y="229" width="0.0131%" height="15" fill="rgb(218,107,18)" fg:x="48746" fg:w="14"/><text x="45.8684%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (14 samples, 0.01%)</title><rect x="45.6184%" y="213" width="0.0131%" height="15" fill="rgb(237,177,39)" fg:x="48746" fg:w="14"/><text x="45.8684%" y="223.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (11 samples, 0.01%)</title><rect x="45.6212%" y="197" width="0.0103%" height="15" fill="rgb(246,69,6)" fg:x="48749" fg:w="11"/><text x="45.8712%" y="207.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (11 samples, 0.01%)</title><rect x="45.6212%" y="181" width="0.0103%" height="15" fill="rgb(234,208,37)" fg:x="48749" fg:w="11"/><text x="45.8712%" y="191.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="45.6212%" y="165" width="0.0103%" height="15" fill="rgb(225,4,6)" fg:x="48749" fg:w="11"/><text x="45.8712%" y="175.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="45.6212%" y="149" width="0.0103%" height="15" fill="rgb(233,45,0)" fg:x="48749" fg:w="11"/><text x="45.8712%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="45.6081%" y="277" width="0.0402%" height="15" fill="rgb(226,136,5)" fg:x="48735" fg:w="43"/><text x="45.8581%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="45.6081%" y="261" width="0.0402%" height="15" fill="rgb(211,91,47)" fg:x="48735" fg:w="43"/><text x="45.8581%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="45.6184%" y="245" width="0.0299%" height="15" fill="rgb(242,88,51)" fg:x="48746" fg:w="32"/><text x="45.8684%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::take (17 samples, 0.02%)</title><rect x="45.6324%" y="229" width="0.0159%" height="15" fill="rgb(230,91,28)" fg:x="48761" fg:w="17"/><text x="45.8824%" y="239.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (17 samples, 0.02%)</title><rect x="45.6324%" y="213" width="0.0159%" height="15" fill="rgb(254,186,29)" fg:x="48761" fg:w="17"/><text x="45.8824%" y="223.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (74 samples, 0.07%)</title><rect x="45.5875%" y="437" width="0.0693%" height="15" fill="rgb(238,6,4)" fg:x="48713" fg:w="74"/><text x="45.8375%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (74 samples, 0.07%)</title><rect x="45.5875%" y="421" width="0.0693%" height="15" fill="rgb(221,151,16)" fg:x="48713" fg:w="74"/><text x="45.8375%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (74 samples, 0.07%)</title><rect x="45.5875%" y="405" width="0.0693%" height="15" fill="rgb(251,143,52)" fg:x="48713" fg:w="74"/><text x="45.8375%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (70 samples, 0.07%)</title><rect x="45.5913%" y="389" width="0.0655%" height="15" fill="rgb(206,90,15)" fg:x="48717" fg:w="70"/><text x="45.8413%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (70 samples, 0.07%)</title><rect x="45.5913%" y="373" width="0.0655%" height="15" fill="rgb(218,35,8)" fg:x="48717" fg:w="70"/><text x="45.8413%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (70 samples, 0.07%)</title><rect x="45.5913%" y="357" width="0.0655%" height="15" fill="rgb(239,215,6)" fg:x="48717" fg:w="70"/><text x="45.8413%" y="367.50"></text></g><g><title>alloc::alloc::alloc (65 samples, 0.06%)</title><rect x="45.5959%" y="341" width="0.0608%" height="15" fill="rgb(245,116,39)" fg:x="48722" fg:w="65"/><text x="45.8459%" y="351.50"></text></g><g><title>__rg_alloc (65 samples, 0.06%)</title><rect x="45.5959%" y="325" width="0.0608%" height="15" fill="rgb(242,65,28)" fg:x="48722" fg:w="65"/><text x="45.8459%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (65 samples, 0.06%)</title><rect x="45.5959%" y="309" width="0.0608%" height="15" fill="rgb(252,132,53)" fg:x="48722" fg:w="65"/><text x="45.8459%" y="319.50"></text></g><g><title>rust_alloc (61 samples, 0.06%)</title><rect x="45.5997%" y="293" width="0.0571%" height="15" fill="rgb(224,159,50)" fg:x="48726" fg:w="61"/><text x="45.8497%" y="303.50"></text></g><g><title>abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt;::new (11 samples, 0.01%)</title><rect x="45.6568%" y="437" width="0.0103%" height="15" fill="rgb(224,93,4)" fg:x="48787" fg:w="11"/><text x="45.9068%" y="447.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (27 samples, 0.03%)</title><rect x="45.6774%" y="373" width="0.0253%" height="15" fill="rgb(208,81,34)" fg:x="48809" fg:w="27"/><text x="45.9274%" y="383.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="45.7401%" y="229" width="0.0131%" height="15" fill="rgb(233,92,54)" fg:x="48876" fg:w="14"/><text x="45.9901%" y="239.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="45.7401%" y="213" width="0.0131%" height="15" fill="rgb(237,21,14)" fg:x="48876" fg:w="14"/><text x="45.9901%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (41 samples, 0.04%)</title><rect x="45.7213%" y="309" width="0.0384%" height="15" fill="rgb(249,128,51)" fg:x="48856" fg:w="41"/><text x="45.9713%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (41 samples, 0.04%)</title><rect x="45.7213%" y="293" width="0.0384%" height="15" fill="rgb(223,129,24)" fg:x="48856" fg:w="41"/><text x="45.9713%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (27 samples, 0.03%)</title><rect x="45.7344%" y="277" width="0.0253%" height="15" fill="rgb(231,168,25)" fg:x="48870" fg:w="27"/><text x="45.9844%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (27 samples, 0.03%)</title><rect x="45.7344%" y="261" width="0.0253%" height="15" fill="rgb(224,39,20)" fg:x="48870" fg:w="27"/><text x="45.9844%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (27 samples, 0.03%)</title><rect x="45.7344%" y="245" width="0.0253%" height="15" fill="rgb(225,152,53)" fg:x="48870" fg:w="27"/><text x="45.9844%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (43 samples, 0.04%)</title><rect x="45.7213%" y="341" width="0.0402%" height="15" fill="rgb(252,17,24)" fg:x="48856" fg:w="43"/><text x="45.9713%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (43 samples, 0.04%)</title><rect x="45.7213%" y="325" width="0.0402%" height="15" fill="rgb(250,114,30)" fg:x="48856" fg:w="43"/><text x="45.9713%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (60 samples, 0.06%)</title><rect x="45.7073%" y="357" width="0.0562%" height="15" fill="rgb(229,5,4)" fg:x="48841" fg:w="60"/><text x="45.9573%" y="367.50"></text></g><g><title>rust_dealloc (67 samples, 0.06%)</title><rect x="45.7026%" y="373" width="0.0627%" height="15" fill="rgb(225,176,49)" fg:x="48836" fg:w="67"/><text x="45.9526%" y="383.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (108 samples, 0.10%)</title><rect x="45.6671%" y="389" width="0.1011%" height="15" fill="rgb(224,221,49)" fg:x="48798" fg:w="108"/><text x="45.9171%" y="399.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (795 samples, 0.74%)</title><rect x="45.0429%" y="517" width="0.7440%" height="15" fill="rgb(253,169,27)" fg:x="48131" fg:w="795"/><text x="45.2929%" y="527.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (795 samples, 0.74%)</title><rect x="45.0429%" y="501" width="0.7440%" height="15" fill="rgb(211,206,16)" fg:x="48131" fg:w="795"/><text x="45.2929%" y="511.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (786 samples, 0.74%)</title><rect x="45.0513%" y="485" width="0.7356%" height="15" fill="rgb(244,87,35)" fg:x="48140" fg:w="786"/><text x="45.3013%" y="495.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (786 samples, 0.74%)</title><rect x="45.0513%" y="469" width="0.7356%" height="15" fill="rgb(246,28,10)" fg:x="48140" fg:w="786"/><text x="45.3013%" y="479.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (786 samples, 0.74%)</title><rect x="45.0513%" y="453" width="0.7356%" height="15" fill="rgb(229,12,44)" fg:x="48140" fg:w="786"/><text x="45.3013%" y="463.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (128 samples, 0.12%)</title><rect x="45.6671%" y="437" width="0.1198%" height="15" fill="rgb(210,145,37)" fg:x="48798" fg:w="128"/><text x="45.9171%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (128 samples, 0.12%)</title><rect x="45.6671%" y="421" width="0.1198%" height="15" fill="rgb(227,112,52)" fg:x="48798" fg:w="128"/><text x="45.9171%" y="431.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (128 samples, 0.12%)</title><rect x="45.6671%" y="405" width="0.1198%" height="15" fill="rgb(238,155,34)" fg:x="48798" fg:w="128"/><text x="45.9171%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (20 samples, 0.02%)</title><rect x="45.7681%" y="389" width="0.0187%" height="15" fill="rgb(239,226,36)" fg:x="48906" fg:w="20"/><text x="46.0181%" y="399.50"></text></g><g><title>core::ptr::read (20 samples, 0.02%)</title><rect x="45.7681%" y="373" width="0.0187%" height="15" fill="rgb(230,16,23)" fg:x="48906" fg:w="20"/><text x="46.0181%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (16 samples, 0.01%)</title><rect x="45.7878%" y="485" width="0.0150%" height="15" fill="rgb(236,171,36)" fg:x="48927" fg:w="16"/><text x="46.0378%" y="495.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_mut (26 samples, 0.02%)</title><rect x="45.8767%" y="373" width="0.0243%" height="15" fill="rgb(221,22,14)" fg:x="49022" fg:w="26"/><text x="46.1267%" y="383.50"></text></g><g><title>&lt;abi_stable::std_types::boxed::private::RBox&lt;T&gt; as abi_stable::pointer_trait::AsMutPtr&gt;::as_mut_ptr (26 samples, 0.02%)</title><rect x="45.8767%" y="357" width="0.0243%" height="15" fill="rgb(242,43,11)" fg:x="49022" fg:w="26"/><text x="46.1267%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.04%)</title><rect x="45.9179%" y="261" width="0.0430%" height="15" fill="rgb(232,69,23)" fg:x="49066" fg:w="46"/><text x="46.1679%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="45.9179%" y="341" width="0.0449%" height="15" fill="rgb(216,180,54)" fg:x="49066" fg:w="48"/><text x="46.1679%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="45.9179%" y="325" width="0.0449%" height="15" fill="rgb(216,5,24)" fg:x="49066" fg:w="48"/><text x="46.1679%" y="335.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="45.9179%" y="309" width="0.0449%" height="15" fill="rgb(225,89,9)" fg:x="49066" fg:w="48"/><text x="46.1679%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="45.9179%" y="293" width="0.0449%" height="15" fill="rgb(243,75,33)" fg:x="49066" fg:w="48"/><text x="46.1679%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="45.9179%" y="277" width="0.0449%" height="15" fill="rgb(247,141,45)" fg:x="49066" fg:w="48"/><text x="46.1679%" y="287.50"></text></g><g><title>abi_stable::erased_types::iterator::next (72 samples, 0.07%)</title><rect x="45.9010%" y="373" width="0.0674%" height="15" fill="rgb(232,177,36)" fg:x="49048" fg:w="72"/><text x="46.1510%" y="383.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (54 samples, 0.05%)</title><rect x="45.9179%" y="357" width="0.0505%" height="15" fill="rgb(219,125,36)" fg:x="49066" fg:w="54"/><text x="46.1679%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (120 samples, 0.11%)</title><rect x="45.8673%" y="421" width="0.1123%" height="15" fill="rgb(227,94,9)" fg:x="49012" fg:w="120"/><text x="46.1173%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (120 samples, 0.11%)</title><rect x="45.8673%" y="405" width="0.1123%" height="15" fill="rgb(240,34,52)" fg:x="49012" fg:w="120"/><text x="46.1173%" y="415.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (120 samples, 0.11%)</title><rect x="45.8673%" y="389" width="0.1123%" height="15" fill="rgb(216,45,12)" fg:x="49012" fg:w="120"/><text x="46.1173%" y="399.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (12 samples, 0.01%)</title><rect x="45.9684%" y="373" width="0.0112%" height="15" fill="rgb(246,21,19)" fg:x="49120" fg:w="12"/><text x="46.2184%" y="383.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (11 samples, 0.01%)</title><rect x="45.9693%" y="357" width="0.0103%" height="15" fill="rgb(213,98,42)" fg:x="49121" fg:w="11"/><text x="46.2193%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="45.9796%" y="421" width="0.0131%" height="15" fill="rgb(250,136,47)" fg:x="49132" fg:w="14"/><text x="46.2296%" y="431.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (51 samples, 0.05%)</title><rect x="46.0133%" y="293" width="0.0477%" height="15" fill="rgb(251,124,27)" fg:x="49168" fg:w="51"/><text x="46.2633%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="46.0395%" y="277" width="0.0215%" height="15" fill="rgb(229,180,14)" fg:x="49196" fg:w="23"/><text x="46.2895%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (23 samples, 0.02%)</title><rect x="46.0395%" y="261" width="0.0215%" height="15" fill="rgb(245,216,25)" fg:x="49196" fg:w="23"/><text x="46.2895%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (23 samples, 0.02%)</title><rect x="46.0395%" y="245" width="0.0215%" height="15" fill="rgb(251,43,5)" fg:x="49196" fg:w="23"/><text x="46.2895%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue)&gt;&gt; (23 samples, 0.02%)</title><rect x="46.0395%" y="229" width="0.0215%" height="15" fill="rgb(250,128,24)" fg:x="49196" fg:w="23"/><text x="46.2895%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="46.0405%" y="213" width="0.0206%" height="15" fill="rgb(217,117,27)" fg:x="49197" fg:w="22"/><text x="46.2905%" y="223.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.02%)</title><rect x="46.0994%" y="149" width="0.0159%" height="15" fill="rgb(245,147,4)" fg:x="49260" fg:w="17"/><text x="46.3494%" y="159.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="46.1004%" y="133" width="0.0150%" height="15" fill="rgb(242,201,35)" fg:x="49261" fg:w="16"/><text x="46.3504%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (44 samples, 0.04%)</title><rect x="46.0807%" y="197" width="0.0412%" height="15" fill="rgb(218,181,1)" fg:x="49240" fg:w="44"/><text x="46.3307%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (44 samples, 0.04%)</title><rect x="46.0807%" y="181" width="0.0412%" height="15" fill="rgb(222,6,29)" fg:x="49240" fg:w="44"/><text x="46.3307%" y="191.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (44 samples, 0.04%)</title><rect x="46.0807%" y="165" width="0.0412%" height="15" fill="rgb(208,186,3)" fg:x="49240" fg:w="44"/><text x="46.3307%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (58 samples, 0.05%)</title><rect x="46.0751%" y="261" width="0.0543%" height="15" fill="rgb(216,36,26)" fg:x="49234" fg:w="58"/><text x="46.3251%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (58 samples, 0.05%)</title><rect x="46.0751%" y="245" width="0.0543%" height="15" fill="rgb(248,201,23)" fg:x="49234" fg:w="58"/><text x="46.3251%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (58 samples, 0.05%)</title><rect x="46.0751%" y="229" width="0.0543%" height="15" fill="rgb(251,170,31)" fg:x="49234" fg:w="58"/><text x="46.3251%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (58 samples, 0.05%)</title><rect x="46.0751%" y="213" width="0.0543%" height="15" fill="rgb(207,110,25)" fg:x="49234" fg:w="58"/><text x="46.3251%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (64 samples, 0.06%)</title><rect x="46.0704%" y="277" width="0.0599%" height="15" fill="rgb(250,54,15)" fg:x="49229" fg:w="64"/><text x="46.3204%" y="287.50"></text></g><g><title>rust_dealloc (83 samples, 0.08%)</title><rect x="46.0620%" y="293" width="0.0777%" height="15" fill="rgb(227,68,33)" fg:x="49220" fg:w="83"/><text x="46.3120%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (361 samples, 0.34%)</title><rect x="45.8028%" y="485" width="0.3378%" height="15" fill="rgb(238,34,41)" fg:x="48943" fg:w="361"/><text x="46.0528%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (361 samples, 0.34%)</title><rect x="45.8028%" y="469" width="0.3378%" height="15" fill="rgb(220,11,15)" fg:x="48943" fg:w="361"/><text x="46.0528%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (326 samples, 0.31%)</title><rect x="45.8355%" y="453" width="0.3051%" height="15" fill="rgb(246,111,35)" fg:x="48978" fg:w="326"/><text x="46.0855%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (292 samples, 0.27%)</title><rect x="45.8673%" y="437" width="0.2733%" height="15" fill="rgb(209,88,53)" fg:x="49012" fg:w="292"/><text x="46.1173%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;,tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from::{{closure}}&gt;&gt; (158 samples, 0.15%)</title><rect x="45.9927%" y="421" width="0.1479%" height="15" fill="rgb(231,185,47)" fg:x="49146" fg:w="158"/><text x="46.2427%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (158 samples, 0.15%)</title><rect x="45.9927%" y="405" width="0.1479%" height="15" fill="rgb(233,154,1)" fg:x="49146" fg:w="158"/><text x="46.2427%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (158 samples, 0.15%)</title><rect x="45.9927%" y="389" width="0.1479%" height="15" fill="rgb(225,15,46)" fg:x="49146" fg:w="158"/><text x="46.2427%" y="399.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (158 samples, 0.15%)</title><rect x="45.9927%" y="373" width="0.1479%" height="15" fill="rgb(211,135,41)" fg:x="49146" fg:w="158"/><text x="46.2427%" y="383.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (152 samples, 0.14%)</title><rect x="45.9984%" y="357" width="0.1422%" height="15" fill="rgb(208,54,0)" fg:x="49152" fg:w="152"/><text x="46.2484%" y="367.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (144 samples, 0.13%)</title><rect x="46.0058%" y="341" width="0.1348%" height="15" fill="rgb(244,136,14)" fg:x="49160" fg:w="144"/><text x="46.2558%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (144 samples, 0.13%)</title><rect x="46.0058%" y="325" width="0.1348%" height="15" fill="rgb(241,56,14)" fg:x="49160" fg:w="144"/><text x="46.2558%" y="335.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (144 samples, 0.13%)</title><rect x="46.0058%" y="309" width="0.1348%" height="15" fill="rgb(205,80,24)" fg:x="49160" fg:w="144"/><text x="46.2558%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.01%)</title><rect x="46.1406%" y="453" width="0.0122%" height="15" fill="rgb(220,57,4)" fg:x="49304" fg:w="13"/><text x="46.3906%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="46.1406%" y="469" width="0.0187%" height="15" fill="rgb(226,193,50)" fg:x="49304" fg:w="20"/><text x="46.3906%" y="479.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from (1,196 samples, 1.12%)</title><rect x="45.0429%" y="533" width="1.1193%" height="15" fill="rgb(231,168,22)" fg:x="48131" fg:w="1196"/><text x="45.2929%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (401 samples, 0.38%)</title><rect x="45.7869%" y="517" width="0.3753%" height="15" fill="rgb(254,215,14)" fg:x="48926" fg:w="401"/><text x="46.0369%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (401 samples, 0.38%)</title><rect x="45.7869%" y="501" width="0.3753%" height="15" fill="rgb(211,115,16)" fg:x="48926" fg:w="401"/><text x="46.0369%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value)&gt;&gt; (23 samples, 0.02%)</title><rect x="46.1406%" y="485" width="0.0215%" height="15" fill="rgb(236,210,16)" fg:x="49304" fg:w="23"/><text x="46.3906%" y="495.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (17 samples, 0.02%)</title><rect x="46.2576%" y="437" width="0.0159%" height="15" fill="rgb(221,94,12)" fg:x="49429" fg:w="17"/><text x="46.5076%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (23 samples, 0.02%)</title><rect x="46.5542%" y="389" width="0.0215%" height="15" fill="rgb(235,218,49)" fg:x="49746" fg:w="23"/><text x="46.8042%" y="399.50"></text></g><g><title>std::collections::hash::map::RandomState::new (23 samples, 0.02%)</title><rect x="46.5542%" y="373" width="0.0215%" height="15" fill="rgb(217,114,14)" fg:x="49746" fg:w="23"/><text x="46.8042%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (23 samples, 0.02%)</title><rect x="46.5542%" y="357" width="0.0215%" height="15" fill="rgb(216,145,22)" fg:x="49746" fg:w="23"/><text x="46.8042%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.02%)</title><rect x="46.5542%" y="341" width="0.0215%" height="15" fill="rgb(217,112,39)" fg:x="49746" fg:w="23"/><text x="46.8042%" y="351.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (13 samples, 0.01%)</title><rect x="46.5636%" y="325" width="0.0122%" height="15" fill="rgb(225,85,32)" fg:x="49756" fg:w="13"/><text x="46.8136%" y="335.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="46.6123%" y="197" width="0.0103%" height="15" fill="rgb(245,209,47)" fg:x="49808" fg:w="11"/><text x="46.8623%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="46.6235%" y="197" width="0.0440%" height="15" fill="rgb(218,220,15)" fg:x="49820" fg:w="47"/><text x="46.8735%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="46.6235%" y="181" width="0.0440%" height="15" fill="rgb(222,202,31)" fg:x="49820" fg:w="47"/><text x="46.8735%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="46.6300%" y="165" width="0.0374%" height="15" fill="rgb(243,203,4)" fg:x="49827" fg:w="40"/><text x="46.8800%" y="175.50"></text></g><g><title>snmalloc::FreeListIter::take (32 samples, 0.03%)</title><rect x="46.6375%" y="149" width="0.0299%" height="15" fill="rgb(237,92,17)" fg:x="49835" fg:w="32"/><text x="46.8875%" y="159.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (32 samples, 0.03%)</title><rect x="46.6375%" y="133" width="0.0299%" height="15" fill="rgb(231,119,7)" fg:x="49835" fg:w="32"/><text x="46.8875%" y="143.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (132 samples, 0.12%)</title><rect x="46.5542%" y="405" width="0.1235%" height="15" fill="rgb(237,82,41)" fg:x="49746" fg:w="132"/><text x="46.8042%" y="415.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (109 samples, 0.10%)</title><rect x="46.5758%" y="389" width="0.1020%" height="15" fill="rgb(226,81,48)" fg:x="49769" fg:w="109"/><text x="46.8258%" y="399.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (109 samples, 0.10%)</title><rect x="46.5758%" y="373" width="0.1020%" height="15" fill="rgb(234,70,51)" fg:x="49769" fg:w="109"/><text x="46.8258%" y="383.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (100 samples, 0.09%)</title><rect x="46.5842%" y="357" width="0.0936%" height="15" fill="rgb(251,86,4)" fg:x="49778" fg:w="100"/><text x="46.8342%" y="367.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (100 samples, 0.09%)</title><rect x="46.5842%" y="341" width="0.0936%" height="15" fill="rgb(244,144,28)" fg:x="49778" fg:w="100"/><text x="46.8342%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (99 samples, 0.09%)</title><rect x="46.5851%" y="325" width="0.0926%" height="15" fill="rgb(232,161,39)" fg:x="49779" fg:w="99"/><text x="46.8351%" y="335.50"></text></g><g><title>alloc::alloc::exchange_malloc (83 samples, 0.08%)</title><rect x="46.6001%" y="309" width="0.0777%" height="15" fill="rgb(247,34,51)" fg:x="49795" fg:w="83"/><text x="46.8501%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.08%)</title><rect x="46.6001%" y="293" width="0.0777%" height="15" fill="rgb(225,132,2)" fg:x="49795" fg:w="83"/><text x="46.8501%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.08%)</title><rect x="46.6001%" y="277" width="0.0777%" height="15" fill="rgb(209,159,44)" fg:x="49795" fg:w="83"/><text x="46.8501%" y="287.50"></text></g><g><title>alloc::alloc::alloc (71 samples, 0.07%)</title><rect x="46.6113%" y="261" width="0.0664%" height="15" fill="rgb(251,214,1)" fg:x="49807" fg:w="71"/><text x="46.8613%" y="271.50"></text></g><g><title>__rg_alloc (71 samples, 0.07%)</title><rect x="46.6113%" y="245" width="0.0664%" height="15" fill="rgb(247,84,47)" fg:x="49807" fg:w="71"/><text x="46.8613%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (71 samples, 0.07%)</title><rect x="46.6113%" y="229" width="0.0664%" height="15" fill="rgb(240,111,43)" fg:x="49807" fg:w="71"/><text x="46.8613%" y="239.50"></text></g><g><title>rust_alloc (70 samples, 0.07%)</title><rect x="46.6123%" y="213" width="0.0655%" height="15" fill="rgb(215,214,35)" fg:x="49808" fg:w="70"/><text x="46.8623%" y="223.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="46.6675%" y="197" width="0.0103%" height="15" fill="rgb(248,207,23)" fg:x="49867" fg:w="11"/><text x="46.9175%" y="207.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (15 samples, 0.01%)</title><rect x="46.7049%" y="357" width="0.0140%" height="15" fill="rgb(214,186,4)" fg:x="49907" fg:w="15"/><text x="46.9549%" y="367.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="46.7049%" y="341" width="0.0140%" height="15" fill="rgb(220,133,22)" fg:x="49907" fg:w="15"/><text x="46.9549%" y="351.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (15 samples, 0.01%)</title><rect x="46.7049%" y="325" width="0.0140%" height="15" fill="rgb(239,134,19)" fg:x="49907" fg:w="15"/><text x="46.9549%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="46.6974%" y="389" width="0.0393%" height="15" fill="rgb(250,140,9)" fg:x="49899" fg:w="42"/><text x="46.9474%" y="399.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (42 samples, 0.04%)</title><rect x="46.6974%" y="373" width="0.0393%" height="15" fill="rgb(225,59,14)" fg:x="49899" fg:w="42"/><text x="46.9474%" y="383.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (17 samples, 0.02%)</title><rect x="46.7208%" y="357" width="0.0159%" height="15" fill="rgb(214,152,51)" fg:x="49924" fg:w="17"/><text x="46.9708%" y="367.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (17 samples, 0.02%)</title><rect x="46.7208%" y="341" width="0.0159%" height="15" fill="rgb(251,227,43)" fg:x="49924" fg:w="17"/><text x="46.9708%" y="351.50"></text></g><g><title>&lt;abi_stable::std_types::tuple::Tuple2&lt;A,B&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (13 samples, 0.01%)</title><rect x="46.7367%" y="357" width="0.0122%" height="15" fill="rgb(241,96,17)" fg:x="49941" fg:w="13"/><text x="46.9867%" y="367.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (18 samples, 0.02%)</title><rect x="46.7573%" y="357" width="0.0168%" height="15" fill="rgb(234,198,43)" fg:x="49963" fg:w="18"/><text x="47.0073%" y="367.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (12 samples, 0.01%)</title><rect x="46.7629%" y="341" width="0.0112%" height="15" fill="rgb(220,108,29)" fg:x="49969" fg:w="12"/><text x="47.0129%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (58 samples, 0.05%)</title><rect x="46.7367%" y="389" width="0.0543%" height="15" fill="rgb(226,163,33)" fg:x="49941" fg:w="58"/><text x="46.9867%" y="399.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (58 samples, 0.05%)</title><rect x="46.7367%" y="373" width="0.0543%" height="15" fill="rgb(205,194,45)" fg:x="49941" fg:w="58"/><text x="46.9867%" y="383.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (18 samples, 0.02%)</title><rect x="46.7742%" y="357" width="0.0168%" height="15" fill="rgb(206,143,44)" fg:x="49981" fg:w="18"/><text x="47.0242%" y="367.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (18 samples, 0.02%)</title><rect x="46.7742%" y="341" width="0.0168%" height="15" fill="rgb(236,136,36)" fg:x="49981" fg:w="18"/><text x="47.0242%" y="351.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (12 samples, 0.01%)</title><rect x="46.7798%" y="325" width="0.0112%" height="15" fill="rgb(249,172,42)" fg:x="49987" fg:w="12"/><text x="47.0298%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (27 samples, 0.03%)</title><rect x="46.8631%" y="133" width="0.0253%" height="15" fill="rgb(216,139,23)" fg:x="50076" fg:w="27"/><text x="47.1131%" y="143.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="46.8668%" y="117" width="0.0215%" height="15" fill="rgb(207,166,20)" fg:x="50080" fg:w="23"/><text x="47.1168%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (64 samples, 0.06%)</title><rect x="46.8369%" y="181" width="0.0599%" height="15" fill="rgb(210,209,22)" fg:x="50048" fg:w="64"/><text x="47.0869%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (64 samples, 0.06%)</title><rect x="46.8369%" y="165" width="0.0599%" height="15" fill="rgb(232,118,20)" fg:x="50048" fg:w="64"/><text x="47.0869%" y="175.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (63 samples, 0.06%)</title><rect x="46.8378%" y="149" width="0.0590%" height="15" fill="rgb(238,113,42)" fg:x="50049" fg:w="63"/><text x="47.0878%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (85 samples, 0.08%)</title><rect x="46.8312%" y="213" width="0.0795%" height="15" fill="rgb(231,42,5)" fg:x="50042" fg:w="85"/><text x="47.0812%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (85 samples, 0.08%)</title><rect x="46.8312%" y="197" width="0.0795%" height="15" fill="rgb(243,166,24)" fg:x="50042" fg:w="85"/><text x="47.0812%" y="207.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="46.8968%" y="181" width="0.0140%" height="15" fill="rgb(237,226,12)" fg:x="50112" fg:w="15"/><text x="47.1468%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (93 samples, 0.09%)</title><rect x="46.8312%" y="245" width="0.0870%" height="15" fill="rgb(229,133,24)" fg:x="50042" fg:w="93"/><text x="47.0812%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (93 samples, 0.09%)</title><rect x="46.8312%" y="229" width="0.0870%" height="15" fill="rgb(238,33,43)" fg:x="50042" fg:w="93"/><text x="47.0812%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (102 samples, 0.10%)</title><rect x="46.8275%" y="261" width="0.0955%" height="15" fill="rgb(227,59,38)" fg:x="50038" fg:w="102"/><text x="47.0775%" y="271.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (719 samples, 0.67%)</title><rect x="46.2566%" y="453" width="0.6729%" height="15" fill="rgb(230,97,0)" fg:x="49428" fg:w="719"/><text x="46.5066%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (701 samples, 0.66%)</title><rect x="46.2735%" y="437" width="0.6560%" height="15" fill="rgb(250,173,50)" fg:x="49446" fg:w="701"/><text x="46.5235%" y="447.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (409 samples, 0.38%)</title><rect x="46.5468%" y="421" width="0.3828%" height="15" fill="rgb(240,15,50)" fg:x="49738" fg:w="409"/><text x="46.7968%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (269 samples, 0.25%)</title><rect x="46.6778%" y="405" width="0.2517%" height="15" fill="rgb(221,93,22)" fg:x="49878" fg:w="269"/><text x="46.9278%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;,&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt; as core::clone::Clone&gt;::clone::{{closure}}&gt;&gt; (141 samples, 0.13%)</title><rect x="46.7976%" y="389" width="0.1320%" height="15" fill="rgb(245,180,53)" fg:x="50006" fg:w="141"/><text x="47.0476%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::RefIterInterface&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt; (141 samples, 0.13%)</title><rect x="46.7976%" y="373" width="0.1320%" height="15" fill="rgb(231,88,51)" fg:x="50006" fg:w="141"/><text x="47.0476%" y="383.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (141 samples, 0.13%)</title><rect x="46.7976%" y="357" width="0.1320%" height="15" fill="rgb(240,58,21)" fg:x="50006" fg:w="141"/><text x="47.0476%" y="367.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (141 samples, 0.13%)</title><rect x="46.7976%" y="341" width="0.1320%" height="15" fill="rgb(237,21,10)" fg:x="50006" fg:w="141"/><text x="47.0476%" y="351.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (131 samples, 0.12%)</title><rect x="46.8069%" y="325" width="0.1226%" height="15" fill="rgb(218,43,11)" fg:x="50016" fg:w="131"/><text x="47.0569%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (131 samples, 0.12%)</title><rect x="46.8069%" y="309" width="0.1226%" height="15" fill="rgb(218,221,29)" fg:x="50016" fg:w="131"/><text x="47.0569%" y="319.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (131 samples, 0.12%)</title><rect x="46.8069%" y="293" width="0.1226%" height="15" fill="rgb(214,118,42)" fg:x="50016" fg:w="131"/><text x="47.0569%" y="303.50"></text></g><g><title>rust_dealloc (118 samples, 0.11%)</title><rect x="46.8191%" y="277" width="0.1104%" height="15" fill="rgb(251,200,26)" fg:x="50029" fg:w="118"/><text x="47.0691%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="46.9482%" y="341" width="0.0112%" height="15" fill="rgb(237,101,39)" fg:x="50167" fg:w="12"/><text x="47.1982%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (12 samples, 0.01%)</title><rect x="46.9482%" y="325" width="0.0112%" height="15" fill="rgb(251,117,11)" fg:x="50167" fg:w="12"/><text x="47.1982%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="46.9482%" y="309" width="0.0112%" height="15" fill="rgb(216,223,23)" fg:x="50167" fg:w="12"/><text x="47.1982%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (27 samples, 0.03%)</title><rect x="46.9389%" y="373" width="0.0253%" height="15" fill="rgb(251,54,12)" fg:x="50157" fg:w="27"/><text x="47.1889%" y="383.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (17 samples, 0.02%)</title><rect x="46.9482%" y="357" width="0.0159%" height="15" fill="rgb(254,176,54)" fg:x="50167" fg:w="17"/><text x="47.1982%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="47.0128%" y="165" width="0.0159%" height="15" fill="rgb(210,32,8)" fg:x="50236" fg:w="17"/><text x="47.2628%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (17 samples, 0.02%)</title><rect x="47.0128%" y="149" width="0.0159%" height="15" fill="rgb(235,52,38)" fg:x="50236" fg:w="17"/><text x="47.2628%" y="159.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (17 samples, 0.02%)</title><rect x="47.0128%" y="133" width="0.0159%" height="15" fill="rgb(231,4,44)" fg:x="50236" fg:w="17"/><text x="47.2628%" y="143.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (13 samples, 0.01%)</title><rect x="47.0165%" y="117" width="0.0122%" height="15" fill="rgb(249,2,32)" fg:x="50240" fg:w="13"/><text x="47.2665%" y="127.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="47.0165%" y="101" width="0.0122%" height="15" fill="rgb(224,65,26)" fg:x="50240" fg:w="13"/><text x="47.2665%" y="111.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="47.0165%" y="85" width="0.0122%" height="15" fill="rgb(250,73,40)" fg:x="50240" fg:w="13"/><text x="47.2665%" y="95.50"></text></g><g><title>snmalloc::FreeListIter::empty (12 samples, 0.01%)</title><rect x="47.0296%" y="165" width="0.0112%" height="15" fill="rgb(253,177,16)" fg:x="50254" fg:w="12"/><text x="47.2796%" y="175.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (12 samples, 0.01%)</title><rect x="47.0296%" y="149" width="0.0112%" height="15" fill="rgb(217,32,34)" fg:x="50254" fg:w="12"/><text x="47.2796%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (133 samples, 0.12%)</title><rect x="47.0006%" y="213" width="0.1245%" height="15" fill="rgb(212,7,10)" fg:x="50223" fg:w="133"/><text x="47.2506%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (128 samples, 0.12%)</title><rect x="47.0053%" y="197" width="0.1198%" height="15" fill="rgb(245,89,8)" fg:x="50228" fg:w="128"/><text x="47.2553%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (122 samples, 0.11%)</title><rect x="47.0109%" y="181" width="0.1142%" height="15" fill="rgb(237,16,53)" fg:x="50234" fg:w="122"/><text x="47.2609%" y="191.50"></text></g><g><title>snmalloc::FreeListIter::take (90 samples, 0.08%)</title><rect x="47.0409%" y="165" width="0.0842%" height="15" fill="rgb(250,204,30)" fg:x="50266" fg:w="90"/><text x="47.2909%" y="175.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (90 samples, 0.08%)</title><rect x="47.0409%" y="149" width="0.0842%" height="15" fill="rgb(208,77,27)" fg:x="50266" fg:w="90"/><text x="47.2909%" y="159.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (177 samples, 0.17%)</title><rect x="46.9641%" y="373" width="0.1656%" height="15" fill="rgb(250,204,28)" fg:x="50184" fg:w="177"/><text x="47.2141%" y="383.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (177 samples, 0.17%)</title><rect x="46.9641%" y="357" width="0.1656%" height="15" fill="rgb(244,63,21)" fg:x="50184" fg:w="177"/><text x="47.2141%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (177 samples, 0.17%)</title><rect x="46.9641%" y="341" width="0.1656%" height="15" fill="rgb(236,85,44)" fg:x="50184" fg:w="177"/><text x="47.2141%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (149 samples, 0.14%)</title><rect x="46.9903%" y="325" width="0.1394%" height="15" fill="rgb(215,98,4)" fg:x="50212" fg:w="149"/><text x="47.2403%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (149 samples, 0.14%)</title><rect x="46.9903%" y="309" width="0.1394%" height="15" fill="rgb(235,38,11)" fg:x="50212" fg:w="149"/><text x="47.2403%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (149 samples, 0.14%)</title><rect x="46.9903%" y="293" width="0.1394%" height="15" fill="rgb(254,186,25)" fg:x="50212" fg:w="149"/><text x="47.2403%" y="303.50"></text></g><g><title>alloc::alloc::alloc (148 samples, 0.14%)</title><rect x="46.9913%" y="277" width="0.1385%" height="15" fill="rgb(225,55,31)" fg:x="50213" fg:w="148"/><text x="47.2413%" y="287.50"></text></g><g><title>__rg_alloc (148 samples, 0.14%)</title><rect x="46.9913%" y="261" width="0.1385%" height="15" fill="rgb(211,15,21)" fg:x="50213" fg:w="148"/><text x="47.2413%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (148 samples, 0.14%)</title><rect x="46.9913%" y="245" width="0.1385%" height="15" fill="rgb(215,187,41)" fg:x="50213" fg:w="148"/><text x="47.2413%" y="255.50"></text></g><g><title>rust_alloc (143 samples, 0.13%)</title><rect x="46.9960%" y="229" width="0.1338%" height="15" fill="rgb(248,69,32)" fg:x="50218" fg:w="143"/><text x="47.2460%" y="239.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (26 samples, 0.02%)</title><rect x="47.1607%" y="309" width="0.0243%" height="15" fill="rgb(252,102,52)" fg:x="50394" fg:w="26"/><text x="47.4107%" y="319.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (25 samples, 0.02%)</title><rect x="47.2271%" y="165" width="0.0234%" height="15" fill="rgb(253,140,32)" fg:x="50465" fg:w="25"/><text x="47.4771%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="47.2374%" y="149" width="0.0131%" height="15" fill="rgb(216,56,42)" fg:x="50476" fg:w="14"/><text x="47.4874%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (58 samples, 0.05%)</title><rect x="47.2046%" y="213" width="0.0543%" height="15" fill="rgb(216,184,14)" fg:x="50441" fg:w="58"/><text x="47.4546%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (58 samples, 0.05%)</title><rect x="47.2046%" y="197" width="0.0543%" height="15" fill="rgb(237,187,27)" fg:x="50441" fg:w="58"/><text x="47.4546%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (58 samples, 0.05%)</title><rect x="47.2046%" y="181" width="0.0543%" height="15" fill="rgb(219,65,3)" fg:x="50441" fg:w="58"/><text x="47.4546%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (79 samples, 0.07%)</title><rect x="47.1981%" y="245" width="0.0739%" height="15" fill="rgb(245,83,25)" fg:x="50434" fg:w="79"/><text x="47.4481%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (79 samples, 0.07%)</title><rect x="47.1981%" y="229" width="0.0739%" height="15" fill="rgb(214,205,45)" fg:x="50434" fg:w="79"/><text x="47.4481%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="47.2589%" y="213" width="0.0131%" height="15" fill="rgb(241,20,18)" fg:x="50499" fg:w="14"/><text x="47.5089%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (85 samples, 0.08%)</title><rect x="47.1981%" y="277" width="0.0795%" height="15" fill="rgb(232,163,23)" fg:x="50434" fg:w="85"/><text x="47.4481%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (85 samples, 0.08%)</title><rect x="47.1981%" y="261" width="0.0795%" height="15" fill="rgb(214,5,46)" fg:x="50434" fg:w="85"/><text x="47.4481%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (95 samples, 0.09%)</title><rect x="47.1953%" y="293" width="0.0889%" height="15" fill="rgb(229,78,17)" fg:x="50431" fg:w="95"/><text x="47.4453%" y="303.50"></text></g><g><title>rust_dealloc (119 samples, 0.11%)</title><rect x="47.1850%" y="309" width="0.1114%" height="15" fill="rgb(248,89,10)" fg:x="50420" fg:w="119"/><text x="47.4350%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="47.2842%" y="293" width="0.0122%" height="15" fill="rgb(248,54,15)" fg:x="50526" fg:w="13"/><text x="47.5342%" y="303.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (172 samples, 0.16%)</title><rect x="47.1466%" y="325" width="0.1610%" height="15" fill="rgb(223,116,6)" fg:x="50379" fg:w="172"/><text x="47.3966%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (12 samples, 0.01%)</title><rect x="47.2964%" y="309" width="0.0112%" height="15" fill="rgb(205,125,38)" fg:x="50539" fg:w="12"/><text x="47.5464%" y="319.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (445 samples, 0.42%)</title><rect x="46.9295%" y="453" width="0.4164%" height="15" fill="rgb(251,78,38)" fg:x="50147" fg:w="445"/><text x="47.1795%" y="463.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (445 samples, 0.42%)</title><rect x="46.9295%" y="437" width="0.4164%" height="15" fill="rgb(253,78,28)" fg:x="50147" fg:w="445"/><text x="47.1795%" y="447.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (436 samples, 0.41%)</title><rect x="46.9379%" y="421" width="0.4080%" height="15" fill="rgb(209,120,3)" fg:x="50156" fg:w="436"/><text x="47.1879%" y="431.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (435 samples, 0.41%)</title><rect x="46.9389%" y="405" width="0.4071%" height="15" fill="rgb(238,229,9)" fg:x="50157" fg:w="435"/><text x="47.1889%" y="415.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (435 samples, 0.41%)</title><rect x="46.9389%" y="389" width="0.4071%" height="15" fill="rgb(253,159,18)" fg:x="50157" fg:w="435"/><text x="47.1889%" y="399.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (213 samples, 0.20%)</title><rect x="47.1466%" y="373" width="0.1993%" height="15" fill="rgb(244,42,34)" fg:x="50379" fg:w="213"/><text x="47.3966%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (213 samples, 0.20%)</title><rect x="47.1466%" y="357" width="0.1993%" height="15" fill="rgb(224,8,7)" fg:x="50379" fg:w="213"/><text x="47.3966%" y="367.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (213 samples, 0.20%)</title><rect x="47.1466%" y="341" width="0.1993%" height="15" fill="rgb(210,201,45)" fg:x="50379" fg:w="213"/><text x="47.3966%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (41 samples, 0.04%)</title><rect x="47.3076%" y="325" width="0.0384%" height="15" fill="rgb(252,185,21)" fg:x="50551" fg:w="41"/><text x="47.5576%" y="335.50"></text></g><g><title>core::ptr::read (41 samples, 0.04%)</title><rect x="47.3076%" y="309" width="0.0384%" height="15" fill="rgb(223,131,1)" fg:x="50551" fg:w="41"/><text x="47.5576%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="47.3768%" y="277" width="0.0112%" height="15" fill="rgb(245,141,16)" fg:x="50625" fg:w="12"/><text x="47.6268%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (12 samples, 0.01%)</title><rect x="47.3768%" y="261" width="0.0112%" height="15" fill="rgb(229,55,45)" fg:x="50625" fg:w="12"/><text x="47.6268%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (181 samples, 0.17%)</title><rect x="47.3675%" y="325" width="0.1694%" height="15" fill="rgb(208,92,15)" fg:x="50615" fg:w="181"/><text x="47.6175%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (180 samples, 0.17%)</title><rect x="47.3684%" y="309" width="0.1685%" height="15" fill="rgb(234,185,47)" fg:x="50616" fg:w="180"/><text x="47.6184%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (175 samples, 0.16%)</title><rect x="47.3731%" y="293" width="0.1638%" height="15" fill="rgb(253,104,50)" fg:x="50621" fg:w="175"/><text x="47.6231%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (151 samples, 0.14%)</title><rect x="47.3956%" y="277" width="0.1413%" height="15" fill="rgb(205,70,7)" fg:x="50645" fg:w="151"/><text x="47.6456%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (151 samples, 0.14%)</title><rect x="47.3956%" y="261" width="0.1413%" height="15" fill="rgb(240,178,43)" fg:x="50645" fg:w="151"/><text x="47.6456%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (207 samples, 0.19%)</title><rect x="47.3460%" y="453" width="0.1937%" height="15" fill="rgb(214,112,2)" fg:x="50592" fg:w="207"/><text x="47.5960%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (193 samples, 0.18%)</title><rect x="47.3591%" y="437" width="0.1806%" height="15" fill="rgb(206,46,17)" fg:x="50606" fg:w="193"/><text x="47.6091%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (193 samples, 0.18%)</title><rect x="47.3591%" y="421" width="0.1806%" height="15" fill="rgb(225,220,16)" fg:x="50606" fg:w="193"/><text x="47.6091%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (193 samples, 0.18%)</title><rect x="47.3591%" y="405" width="0.1806%" height="15" fill="rgb(238,65,40)" fg:x="50606" fg:w="193"/><text x="47.6091%" y="415.50"></text></g><g><title>alloc::alloc::alloc (193 samples, 0.18%)</title><rect x="47.3591%" y="389" width="0.1806%" height="15" fill="rgb(230,151,21)" fg:x="50606" fg:w="193"/><text x="47.6091%" y="399.50"></text></g><g><title>__rg_alloc (193 samples, 0.18%)</title><rect x="47.3591%" y="373" width="0.1806%" height="15" fill="rgb(218,58,49)" fg:x="50606" fg:w="193"/><text x="47.6091%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (193 samples, 0.18%)</title><rect x="47.3591%" y="357" width="0.1806%" height="15" fill="rgb(219,179,14)" fg:x="50606" fg:w="193"/><text x="47.6091%" y="367.50"></text></g><g><title>rust_alloc (191 samples, 0.18%)</title><rect x="47.3609%" y="341" width="0.1787%" height="15" fill="rgb(223,72,1)" fg:x="50608" fg:w="191"/><text x="47.6109%" y="351.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_ref (19 samples, 0.02%)</title><rect x="47.5500%" y="373" width="0.0178%" height="15" fill="rgb(238,126,10)" fg:x="50810" fg:w="19"/><text x="47.8000%" y="383.50"></text></g><g><title>&lt;abi_stable::std_types::boxed::private::RBox&lt;T&gt; as abi_stable::pointer_trait::AsPtr&gt;::as_ptr (19 samples, 0.02%)</title><rect x="47.5500%" y="357" width="0.0178%" height="15" fill="rgb(224,206,38)" fg:x="50810" fg:w="19"/><text x="47.8000%" y="367.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (71 samples, 0.07%)</title><rect x="47.5678%" y="373" width="0.0664%" height="15" fill="rgb(212,201,54)" fg:x="50829" fg:w="71"/><text x="47.8178%" y="383.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (71 samples, 0.07%)</title><rect x="47.5678%" y="357" width="0.0664%" height="15" fill="rgb(218,154,48)" fg:x="50829" fg:w="71"/><text x="47.8178%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (37 samples, 0.03%)</title><rect x="47.5996%" y="341" width="0.0346%" height="15" fill="rgb(232,93,24)" fg:x="50863" fg:w="37"/><text x="47.8496%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (37 samples, 0.03%)</title><rect x="47.5996%" y="325" width="0.0346%" height="15" fill="rgb(245,30,21)" fg:x="50863" fg:w="37"/><text x="47.8496%" y="335.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (37 samples, 0.03%)</title><rect x="47.5996%" y="309" width="0.0346%" height="15" fill="rgb(242,148,29)" fg:x="50863" fg:w="37"/><text x="47.8496%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (37 samples, 0.03%)</title><rect x="47.5996%" y="293" width="0.0346%" height="15" fill="rgb(244,153,54)" fg:x="50863" fg:w="37"/><text x="47.8496%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (37 samples, 0.03%)</title><rect x="47.5996%" y="277" width="0.0346%" height="15" fill="rgb(252,87,22)" fg:x="50863" fg:w="37"/><text x="47.8496%" y="287.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (17 samples, 0.02%)</title><rect x="47.6342%" y="341" width="0.0159%" height="15" fill="rgb(210,51,29)" fg:x="50900" fg:w="17"/><text x="47.8842%" y="351.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (17 samples, 0.02%)</title><rect x="47.6342%" y="325" width="0.0159%" height="15" fill="rgb(242,136,47)" fg:x="50900" fg:w="17"/><text x="47.8842%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (116 samples, 0.11%)</title><rect x="47.5434%" y="421" width="0.1086%" height="15" fill="rgb(238,68,4)" fg:x="50803" fg:w="116"/><text x="47.7934%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (116 samples, 0.11%)</title><rect x="47.5434%" y="405" width="0.1086%" height="15" fill="rgb(242,161,30)" fg:x="50803" fg:w="116"/><text x="47.7934%" y="415.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (116 samples, 0.11%)</title><rect x="47.5434%" y="389" width="0.1086%" height="15" fill="rgb(218,58,44)" fg:x="50803" fg:w="116"/><text x="47.7934%" y="399.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (19 samples, 0.02%)</title><rect x="47.6342%" y="373" width="0.0178%" height="15" fill="rgb(252,125,32)" fg:x="50900" fg:w="19"/><text x="47.8842%" y="383.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (19 samples, 0.02%)</title><rect x="47.6342%" y="357" width="0.0178%" height="15" fill="rgb(219,178,0)" fg:x="50900" fg:w="19"/><text x="47.8842%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (141 samples, 0.13%)</title><rect x="47.5397%" y="453" width="0.1320%" height="15" fill="rgb(213,152,7)" fg:x="50799" fg:w="141"/><text x="47.7897%" y="463.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::FromIterator&lt;(K,V)&gt; for halfbrown::HashMap&lt;K,V,S&gt;&gt;::from_iter (141 samples, 0.13%)</title><rect x="47.5397%" y="437" width="0.1320%" height="15" fill="rgb(249,109,34)" fg:x="50799" fg:w="141"/><text x="47.7897%" y="447.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (14 samples, 0.01%)</title><rect x="47.6585%" y="421" width="0.0131%" height="15" fill="rgb(232,96,21)" fg:x="50926" fg:w="14"/><text x="47.9085%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (262 samples, 0.25%)</title><rect x="47.6716%" y="453" width="0.2452%" height="15" fill="rgb(228,27,39)" fg:x="50940" fg:w="262"/><text x="47.9216%" y="463.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (25 samples, 0.02%)</title><rect x="47.9692%" y="357" width="0.0234%" height="15" fill="rgb(211,182,52)" fg:x="51258" fg:w="25"/><text x="48.2192%" y="367.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="48.0460%" y="213" width="0.0122%" height="15" fill="rgb(234,178,38)" fg:x="51340" fg:w="13"/><text x="48.2960%" y="223.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="48.0478%" y="197" width="0.0103%" height="15" fill="rgb(221,111,3)" fg:x="51342" fg:w="11"/><text x="48.2978%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (41 samples, 0.04%)</title><rect x="48.0263%" y="261" width="0.0384%" height="15" fill="rgb(228,175,21)" fg:x="51319" fg:w="41"/><text x="48.2763%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (41 samples, 0.04%)</title><rect x="48.0263%" y="245" width="0.0384%" height="15" fill="rgb(228,174,43)" fg:x="51319" fg:w="41"/><text x="48.2763%" y="255.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (41 samples, 0.04%)</title><rect x="48.0263%" y="229" width="0.0384%" height="15" fill="rgb(211,191,0)" fg:x="51319" fg:w="41"/><text x="48.2763%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (59 samples, 0.06%)</title><rect x="48.0104%" y="325" width="0.0552%" height="15" fill="rgb(253,117,3)" fg:x="51302" fg:w="59"/><text x="48.2604%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (59 samples, 0.06%)</title><rect x="48.0104%" y="309" width="0.0552%" height="15" fill="rgb(241,127,19)" fg:x="51302" fg:w="59"/><text x="48.2604%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (59 samples, 0.06%)</title><rect x="48.0104%" y="293" width="0.0552%" height="15" fill="rgb(218,103,12)" fg:x="51302" fg:w="59"/><text x="48.2604%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (59 samples, 0.06%)</title><rect x="48.0104%" y="277" width="0.0552%" height="15" fill="rgb(236,214,43)" fg:x="51302" fg:w="59"/><text x="48.2604%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (70 samples, 0.07%)</title><rect x="48.0029%" y="341" width="0.0655%" height="15" fill="rgb(244,144,19)" fg:x="51294" fg:w="70"/><text x="48.2529%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt; (117 samples, 0.11%)</title><rect x="47.9608%" y="405" width="0.1095%" height="15" fill="rgb(246,188,10)" fg:x="51249" fg:w="117"/><text x="48.2108%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (117 samples, 0.11%)</title><rect x="47.9608%" y="389" width="0.1095%" height="15" fill="rgb(212,193,33)" fg:x="51249" fg:w="117"/><text x="48.2108%" y="399.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (117 samples, 0.11%)</title><rect x="47.9608%" y="373" width="0.1095%" height="15" fill="rgb(241,51,29)" fg:x="51249" fg:w="117"/><text x="48.2108%" y="383.50"></text></g><g><title>rust_dealloc (78 samples, 0.07%)</title><rect x="47.9973%" y="357" width="0.0730%" height="15" fill="rgb(211,58,19)" fg:x="51288" fg:w="78"/><text x="48.2473%" y="367.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (149 samples, 0.14%)</title><rect x="47.9383%" y="421" width="0.1394%" height="15" fill="rgb(229,111,26)" fg:x="51225" fg:w="149"/><text x="48.1883%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (33 samples, 0.03%)</title><rect x="48.1311%" y="277" width="0.0309%" height="15" fill="rgb(213,115,40)" fg:x="51431" fg:w="33"/><text x="48.3811%" y="287.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (32 samples, 0.03%)</title><rect x="48.1321%" y="261" width="0.0299%" height="15" fill="rgb(209,56,44)" fg:x="51432" fg:w="32"/><text x="48.3821%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (63 samples, 0.06%)</title><rect x="48.1096%" y="325" width="0.0590%" height="15" fill="rgb(230,108,32)" fg:x="51408" fg:w="63"/><text x="48.3596%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (63 samples, 0.06%)</title><rect x="48.1096%" y="309" width="0.0590%" height="15" fill="rgb(216,165,31)" fg:x="51408" fg:w="63"/><text x="48.3596%" y="319.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (63 samples, 0.06%)</title><rect x="48.1096%" y="293" width="0.0590%" height="15" fill="rgb(218,122,21)" fg:x="51408" fg:w="63"/><text x="48.3596%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (91 samples, 0.09%)</title><rect x="48.0965%" y="357" width="0.0852%" height="15" fill="rgb(223,224,47)" fg:x="51394" fg:w="91"/><text x="48.3465%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (91 samples, 0.09%)</title><rect x="48.0965%" y="341" width="0.0852%" height="15" fill="rgb(238,102,44)" fg:x="51394" fg:w="91"/><text x="48.3465%" y="351.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="48.1686%" y="325" width="0.0131%" height="15" fill="rgb(236,46,40)" fg:x="51471" fg:w="14"/><text x="48.4186%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (96 samples, 0.09%)</title><rect x="48.0965%" y="389" width="0.0898%" height="15" fill="rgb(247,202,50)" fg:x="51394" fg:w="96"/><text x="48.3465%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (96 samples, 0.09%)</title><rect x="48.0965%" y="373" width="0.0898%" height="15" fill="rgb(209,99,20)" fg:x="51394" fg:w="96"/><text x="48.3465%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (116 samples, 0.11%)</title><rect x="48.0825%" y="405" width="0.1086%" height="15" fill="rgb(252,27,34)" fg:x="51379" fg:w="116"/><text x="48.3325%" y="415.50"></text></g><g><title>rust_dealloc (125 samples, 0.12%)</title><rect x="48.0778%" y="421" width="0.1170%" height="15" fill="rgb(215,206,23)" fg:x="51374" fg:w="125"/><text x="48.3278%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::RHashMap&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt; (298 samples, 0.28%)</title><rect x="47.9168%" y="453" width="0.2789%" height="15" fill="rgb(212,135,36)" fg:x="51202" fg:w="298"/><text x="48.1668%" y="463.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (298 samples, 0.28%)</title><rect x="47.9168%" y="437" width="0.2789%" height="15" fill="rgb(240,189,1)" fg:x="51202" fg:w="298"/><text x="48.1668%" y="447.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (3,378 samples, 3.16%)</title><rect x="45.0429%" y="565" width="3.1613%" height="15" fill="rgb(242,56,20)" fg:x="48131" fg:w="3378"/><text x="45.2929%" y="575.50">tre..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,378 samples, 3.16%)</title><rect x="45.0429%" y="549" width="3.1613%" height="15" fill="rgb(247,132,33)" fg:x="48131" fg:w="3378"/><text x="45.2929%" y="559.50">&lt;T ..</text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (2,182 samples, 2.04%)</title><rect x="46.1621%" y="533" width="2.0420%" height="15" fill="rgb(208,149,11)" fg:x="49327" fg:w="2182"/><text x="46.4121%" y="543.50">t..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2,182 samples, 2.04%)</title><rect x="46.1621%" y="517" width="2.0420%" height="15" fill="rgb(211,33,11)" fg:x="49327" fg:w="2182"/><text x="46.4121%" y="527.50">&lt;..</text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (2,182 samples, 2.04%)</title><rect x="46.1621%" y="501" width="2.0420%" height="15" fill="rgb(221,29,38)" fg:x="49327" fg:w="2182"/><text x="46.4121%" y="511.50">t..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2,182 samples, 2.04%)</title><rect x="46.1621%" y="485" width="2.0420%" height="15" fill="rgb(206,182,49)" fg:x="49327" fg:w="2182"/><text x="46.4121%" y="495.50">&lt;..</text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (2,182 samples, 2.04%)</title><rect x="46.1621%" y="469" width="2.0420%" height="15" fill="rgb(216,140,1)" fg:x="49327" fg:w="2182"/><text x="46.4121%" y="479.50">t..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (29 samples, 0.03%)</title><rect x="48.2079%" y="501" width="0.0271%" height="15" fill="rgb(232,57,40)" fg:x="51513" fg:w="29"/><text x="48.4579%" y="511.50"></text></g><g><title>&lt;abi_stable::std_types::result::RResult&lt;T,E&gt; as core::convert::From&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::from (29 samples, 0.03%)</title><rect x="48.2079%" y="485" width="0.0271%" height="15" fill="rgb(224,186,18)" fg:x="51513" fg:w="29"/><text x="48.4579%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="48.2388%" y="469" width="0.0122%" height="15" fill="rgb(215,121,11)" fg:x="51546" fg:w="13"/><text x="48.4888%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (69 samples, 0.06%)</title><rect x="48.2350%" y="501" width="0.0646%" height="15" fill="rgb(245,147,10)" fg:x="51542" fg:w="69"/><text x="48.4850%" y="511.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (65 samples, 0.06%)</title><rect x="48.2388%" y="485" width="0.0608%" height="15" fill="rgb(238,153,13)" fg:x="51546" fg:w="65"/><text x="48.4888%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (52 samples, 0.05%)</title><rect x="48.2509%" y="469" width="0.0487%" height="15" fill="rgb(233,108,0)" fg:x="51559" fg:w="52"/><text x="48.5009%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (52 samples, 0.05%)</title><rect x="48.2509%" y="453" width="0.0487%" height="15" fill="rgb(212,157,17)" fg:x="51559" fg:w="52"/><text x="48.5009%" y="463.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (52 samples, 0.05%)</title><rect x="48.2509%" y="437" width="0.0487%" height="15" fill="rgb(225,213,38)" fg:x="51559" fg:w="52"/><text x="48.5009%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.02%)</title><rect x="48.2827%" y="421" width="0.0168%" height="15" fill="rgb(248,16,11)" fg:x="51593" fg:w="18"/><text x="48.5327%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="48.2827%" y="405" width="0.0168%" height="15" fill="rgb(241,33,4)" fg:x="51593" fg:w="18"/><text x="48.5327%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (124 samples, 0.12%)</title><rect x="48.3333%" y="485" width="0.1160%" height="15" fill="rgb(222,26,43)" fg:x="51647" fg:w="124"/><text x="48.5833%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (513 samples, 0.48%)</title><rect x="48.4559%" y="485" width="0.4801%" height="15" fill="rgb(243,29,36)" fg:x="51778" fg:w="513"/><text x="48.7059%" y="495.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::clone::Clone&gt;::clone (69 samples, 0.06%)</title><rect x="48.9472%" y="485" width="0.0646%" height="15" fill="rgb(241,9,27)" fg:x="52303" fg:w="69"/><text x="49.1972%" y="495.50"></text></g><g><title>&lt;abi_stable::std_types::cow::RCow&lt;B&gt; as core::clone::Clone&gt;::clone (48 samples, 0.04%)</title><rect x="48.9668%" y="469" width="0.0449%" height="15" fill="rgb(205,117,26)" fg:x="52324" fg:w="48"/><text x="49.2168%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (5,114 samples, 4.79%)</title><rect x="44.2362%" y="853" width="4.7859%" height="15" fill="rgb(209,80,39)" fg:x="47269" fg:w="5114"/><text x="44.4862%" y="863.50">tremor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,252 samples, 3.98%)</title><rect x="45.0429%" y="837" width="3.9792%" height="15" fill="rgb(239,155,6)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="847.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (4,252 samples, 3.98%)</title><rect x="45.0429%" y="821" width="3.9792%" height="15" fill="rgb(212,104,12)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="831.50">trem..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,252 samples, 3.98%)</title><rect x="45.0429%" y="805" width="3.9792%" height="15" fill="rgb(234,204,3)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="815.50">&lt;asy..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,252 samples, 3.98%)</title><rect x="45.0429%" y="789" width="3.9792%" height="15" fill="rgb(251,218,7)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="799.50">&lt;asy..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (4,252 samples, 3.98%)</title><rect x="45.0429%" y="773" width="3.9792%" height="15" fill="rgb(221,81,32)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="783.50">&lt;cor..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,252 samples, 3.98%)</title><rect x="45.0429%" y="757" width="3.9792%" height="15" fill="rgb(214,152,26)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="767.50">&lt;asy..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (4,252 samples, 3.98%)</title><rect x="45.0429%" y="741" width="3.9792%" height="15" fill="rgb(223,22,3)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="751.50">asyn..</text></g><g><title>std::panic::catch_unwind (4,252 samples, 3.98%)</title><rect x="45.0429%" y="725" width="3.9792%" height="15" fill="rgb(207,174,7)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="735.50">std:..</text></g><g><title>std::panicking::try (4,252 samples, 3.98%)</title><rect x="45.0429%" y="709" width="3.9792%" height="15" fill="rgb(224,19,52)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="719.50">std:..</text></g><g><title>std::panicking::try::do_call (4,252 samples, 3.98%)</title><rect x="45.0429%" y="693" width="3.9792%" height="15" fill="rgb(228,24,14)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="703.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,252 samples, 3.98%)</title><rect x="45.0429%" y="677" width="3.9792%" height="15" fill="rgb(230,153,43)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="687.50">&lt;cor..</text></g><g><title>core::ops::function::FnOnce::call_once (4,252 samples, 3.98%)</title><rect x="45.0429%" y="661" width="3.9792%" height="15" fill="rgb(231,106,12)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="671.50">core..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (4,252 samples, 3.98%)</title><rect x="45.0429%" y="645" width="3.9792%" height="15" fill="rgb(215,92,2)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="655.50">asyn..</text></g><g><title>async_ffi::FfiContext::with_context (4,252 samples, 3.98%)</title><rect x="45.0429%" y="629" width="3.9792%" height="15" fill="rgb(249,143,25)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="639.50">asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (4,252 samples, 3.98%)</title><rect x="45.0429%" y="613" width="3.9792%" height="15" fill="rgb(252,7,35)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="623.50">asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,252 samples, 3.98%)</title><rect x="45.0429%" y="597" width="3.9792%" height="15" fill="rgb(216,69,40)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="607.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (4,252 samples, 3.98%)</title><rect x="45.0429%" y="581" width="3.9792%" height="15" fill="rgb(240,36,33)" fg:x="48131" fg:w="4252"/><text x="45.2929%" y="591.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (874 samples, 0.82%)</title><rect x="48.2041%" y="565" width="0.8179%" height="15" fill="rgb(231,128,14)" fg:x="51509" fg:w="874"/><text x="48.4541%" y="575.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (874 samples, 0.82%)</title><rect x="48.2041%" y="549" width="0.8179%" height="15" fill="rgb(245,143,14)" fg:x="51509" fg:w="874"/><text x="48.4541%" y="559.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (874 samples, 0.82%)</title><rect x="48.2041%" y="533" width="0.8179%" height="15" fill="rgb(222,130,28)" fg:x="51509" fg:w="874"/><text x="48.4541%" y="543.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (874 samples, 0.82%)</title><rect x="48.2041%" y="517" width="0.8179%" height="15" fill="rgb(212,10,48)" fg:x="51509" fg:w="874"/><text x="48.4541%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (772 samples, 0.72%)</title><rect x="48.2996%" y="501" width="0.7225%" height="15" fill="rgb(254,118,45)" fg:x="51611" fg:w="772"/><text x="48.5496%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (37 samples, 0.03%)</title><rect x="49.0220%" y="853" width="0.0346%" height="15" fill="rgb(228,6,45)" fg:x="52383" fg:w="37"/><text x="49.2720%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (315 samples, 0.29%)</title><rect x="50.5082%" y="805" width="0.2948%" height="15" fill="rgb(241,18,35)" fg:x="53971" fg:w="315"/><text x="50.7582%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (309 samples, 0.29%)</title><rect x="50.5138%" y="789" width="0.2892%" height="15" fill="rgb(227,214,53)" fg:x="53977" fg:w="309"/><text x="50.7638%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (275 samples, 0.26%)</title><rect x="50.5456%" y="773" width="0.2574%" height="15" fill="rgb(224,107,51)" fg:x="54011" fg:w="275"/><text x="50.7956%" y="783.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (253 samples, 0.24%)</title><rect x="50.8067%" y="741" width="0.2368%" height="15" fill="rgb(248,60,28)" fg:x="54290" fg:w="253"/><text x="51.0567%" y="751.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (284 samples, 0.27%)</title><rect x="50.8029%" y="773" width="0.2658%" height="15" fill="rgb(249,101,23)" fg:x="54286" fg:w="284"/><text x="51.0529%" y="783.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (280 samples, 0.26%)</title><rect x="50.8067%" y="757" width="0.2620%" height="15" fill="rgb(228,51,19)" fg:x="54290" fg:w="280"/><text x="51.0567%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (27 samples, 0.03%)</title><rect x="51.0435%" y="741" width="0.0253%" height="15" fill="rgb(213,20,6)" fg:x="54543" fg:w="27"/><text x="51.2935%" y="751.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (316 samples, 0.30%)</title><rect x="51.1146%" y="693" width="0.2957%" height="15" fill="rgb(212,124,10)" fg:x="54619" fg:w="316"/><text x="51.3646%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (281 samples, 0.26%)</title><rect x="51.1473%" y="677" width="0.2630%" height="15" fill="rgb(248,3,40)" fg:x="54654" fg:w="281"/><text x="51.3973%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (317 samples, 0.30%)</title><rect x="51.1146%" y="725" width="0.2967%" height="15" fill="rgb(223,178,23)" fg:x="54619" fg:w="317"/><text x="51.3646%" y="735.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (317 samples, 0.30%)</title><rect x="51.1146%" y="709" width="0.2967%" height="15" fill="rgb(240,132,45)" fg:x="54619" fg:w="317"/><text x="51.3646%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.01%)</title><rect x="51.4112%" y="677" width="0.0150%" height="15" fill="rgb(245,164,36)" fg:x="54936" fg:w="16"/><text x="51.6612%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.01%)</title><rect x="51.4112%" y="661" width="0.0150%" height="15" fill="rgb(231,188,53)" fg:x="54936" fg:w="16"/><text x="51.6612%" y="671.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (16 samples, 0.01%)</title><rect x="51.4112%" y="645" width="0.0150%" height="15" fill="rgb(237,198,39)" fg:x="54936" fg:w="16"/><text x="51.6612%" y="655.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (867 samples, 0.81%)</title><rect x="51.0687%" y="773" width="0.8114%" height="15" fill="rgb(223,120,35)" fg:x="54570" fg:w="867"/><text x="51.3187%" y="783.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (853 samples, 0.80%)</title><rect x="51.0818%" y="757" width="0.7983%" height="15" fill="rgb(253,107,49)" fg:x="54584" fg:w="853"/><text x="51.3318%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (833 samples, 0.78%)</title><rect x="51.1005%" y="741" width="0.7796%" height="15" fill="rgb(216,44,31)" fg:x="54604" fg:w="833"/><text x="51.3505%" y="751.50"></text></g><g><title>std::panic::catch_unwind (501 samples, 0.47%)</title><rect x="51.4112%" y="725" width="0.4689%" height="15" fill="rgb(253,87,21)" fg:x="54936" fg:w="501"/><text x="51.6612%" y="735.50"></text></g><g><title>std::panicking::try (501 samples, 0.47%)</title><rect x="51.4112%" y="709" width="0.4689%" height="15" fill="rgb(226,18,2)" fg:x="54936" fg:w="501"/><text x="51.6612%" y="719.50"></text></g><g><title>std::panicking::try::do_call (501 samples, 0.47%)</title><rect x="51.4112%" y="693" width="0.4689%" height="15" fill="rgb(216,8,46)" fg:x="54936" fg:w="501"/><text x="51.6612%" y="703.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (485 samples, 0.45%)</title><rect x="51.4262%" y="677" width="0.4539%" height="15" fill="rgb(226,140,39)" fg:x="54952" fg:w="485"/><text x="51.6762%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (117 samples, 0.11%)</title><rect x="51.7706%" y="661" width="0.1095%" height="15" fill="rgb(221,194,54)" fg:x="55320" fg:w="117"/><text x="52.0206%" y="671.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,400 samples, 1.31%)</title><rect x="50.8029%" y="805" width="1.3102%" height="15" fill="rgb(213,92,11)" fg:x="54286" fg:w="1400"/><text x="51.0529%" y="815.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,400 samples, 1.31%)</title><rect x="50.8029%" y="789" width="1.3102%" height="15" fill="rgb(229,162,46)" fg:x="54286" fg:w="1400"/><text x="51.0529%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (249 samples, 0.23%)</title><rect x="51.8801%" y="773" width="0.2330%" height="15" fill="rgb(214,111,36)" fg:x="55437" fg:w="249"/><text x="52.1301%" y="783.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (50 samples, 0.05%)</title><rect x="52.1131%" y="805" width="0.0468%" height="15" fill="rgb(207,6,21)" fg:x="55686" fg:w="50"/><text x="52.3631%" y="815.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (19 samples, 0.02%)</title><rect x="52.1711%" y="757" width="0.0178%" height="15" fill="rgb(213,127,38)" fg:x="55748" fg:w="19"/><text x="52.4211%" y="767.50"></text></g><g><title>async_ffi::DropBomb::with (12 samples, 0.01%)</title><rect x="52.1777%" y="741" width="0.0112%" height="15" fill="rgb(238,118,32)" fg:x="55755" fg:w="12"/><text x="52.4277%" y="751.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn::{{closure}} (12 samples, 0.01%)</title><rect x="52.1777%" y="725" width="0.0112%" height="15" fill="rgb(240,139,39)" fg:x="55755" fg:w="12"/><text x="52.4277%" y="735.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="52.1777%" y="709" width="0.0112%" height="15" fill="rgb(235,10,37)" fg:x="55755" fg:w="12"/><text x="52.4277%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}}&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="52.1777%" y="693" width="0.0112%" height="15" fill="rgb(249,171,38)" fg:x="55755" fg:w="12"/><text x="52.4277%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.02%)</title><rect x="52.2170%" y="613" width="0.0159%" height="15" fill="rgb(242,144,32)" fg:x="55797" fg:w="17"/><text x="52.4670%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="52.2217%" y="597" width="0.0112%" height="15" fill="rgb(217,117,21)" fg:x="55802" fg:w="12"/><text x="52.4717%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (46 samples, 0.04%)</title><rect x="52.1992%" y="661" width="0.0430%" height="15" fill="rgb(249,87,1)" fg:x="55778" fg:w="46"/><text x="52.4492%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (46 samples, 0.04%)</title><rect x="52.1992%" y="645" width="0.0430%" height="15" fill="rgb(248,196,48)" fg:x="55778" fg:w="46"/><text x="52.4492%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (46 samples, 0.04%)</title><rect x="52.1992%" y="629" width="0.0430%" height="15" fill="rgb(251,206,33)" fg:x="55778" fg:w="46"/><text x="52.4492%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (58 samples, 0.05%)</title><rect x="52.1945%" y="693" width="0.0543%" height="15" fill="rgb(232,141,28)" fg:x="55773" fg:w="58"/><text x="52.4445%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (58 samples, 0.05%)</title><rect x="52.1945%" y="677" width="0.0543%" height="15" fill="rgb(209,167,14)" fg:x="55773" fg:w="58"/><text x="52.4445%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (64 samples, 0.06%)</title><rect x="52.1945%" y="725" width="0.0599%" height="15" fill="rgb(225,11,50)" fg:x="55773" fg:w="64"/><text x="52.4445%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (64 samples, 0.06%)</title><rect x="52.1945%" y="709" width="0.0599%" height="15" fill="rgb(209,50,20)" fg:x="55773" fg:w="64"/><text x="52.4445%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (70 samples, 0.07%)</title><rect x="52.1945%" y="741" width="0.0655%" height="15" fill="rgb(212,17,46)" fg:x="55773" fg:w="70"/><text x="52.4445%" y="751.50"></text></g><g><title>rust_dealloc (80 samples, 0.07%)</title><rect x="52.1889%" y="757" width="0.0749%" height="15" fill="rgb(216,101,39)" fg:x="55767" fg:w="80"/><text x="52.4389%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (123 samples, 0.12%)</title><rect x="52.1599%" y="805" width="0.1151%" height="15" fill="rgb(212,228,48)" fg:x="55736" fg:w="123"/><text x="52.4099%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (123 samples, 0.12%)</title><rect x="52.1599%" y="789" width="0.1151%" height="15" fill="rgb(250,6,50)" fg:x="55736" fg:w="123"/><text x="52.4099%" y="799.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (123 samples, 0.12%)</title><rect x="52.1599%" y="773" width="0.1151%" height="15" fill="rgb(250,160,48)" fg:x="55736" fg:w="123"/><text x="52.4099%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (12 samples, 0.01%)</title><rect x="52.2638%" y="757" width="0.0112%" height="15" fill="rgb(244,216,33)" fg:x="55847" fg:w="12"/><text x="52.5138%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (15 samples, 0.01%)</title><rect x="52.3527%" y="485" width="0.0140%" height="15" fill="rgb(207,157,5)" fg:x="55942" fg:w="15"/><text x="52.6027%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (15 samples, 0.01%)</title><rect x="52.3527%" y="469" width="0.0140%" height="15" fill="rgb(228,199,8)" fg:x="55942" fg:w="15"/><text x="52.6027%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (15 samples, 0.01%)</title><rect x="52.3527%" y="453" width="0.0140%" height="15" fill="rgb(227,80,20)" fg:x="55942" fg:w="15"/><text x="52.6027%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="52.3546%" y="437" width="0.0122%" height="15" fill="rgb(222,9,33)" fg:x="55944" fg:w="13"/><text x="52.6046%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (21 samples, 0.02%)</title><rect x="52.3490%" y="501" width="0.0197%" height="15" fill="rgb(239,44,28)" fg:x="55938" fg:w="21"/><text x="52.5990%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (108 samples, 0.10%)</title><rect x="52.3490%" y="533" width="0.1011%" height="15" fill="rgb(249,187,43)" fg:x="55938" fg:w="108"/><text x="52.5990%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (108 samples, 0.10%)</title><rect x="52.3490%" y="517" width="0.1011%" height="15" fill="rgb(216,141,28)" fg:x="55938" fg:w="108"/><text x="52.5990%" y="527.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (87 samples, 0.08%)</title><rect x="52.3686%" y="501" width="0.0814%" height="15" fill="rgb(230,154,53)" fg:x="55959" fg:w="87"/><text x="52.6186%" y="511.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (75 samples, 0.07%)</title><rect x="52.3798%" y="485" width="0.0702%" height="15" fill="rgb(227,82,4)" fg:x="55971" fg:w="75"/><text x="52.6298%" y="495.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (75 samples, 0.07%)</title><rect x="52.3798%" y="469" width="0.0702%" height="15" fill="rgb(220,107,16)" fg:x="55971" fg:w="75"/><text x="52.6298%" y="479.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (75 samples, 0.07%)</title><rect x="52.3798%" y="453" width="0.0702%" height="15" fill="rgb(207,187,2)" fg:x="55971" fg:w="75"/><text x="52.6298%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (15 samples, 0.01%)</title><rect x="52.4753%" y="453" width="0.0140%" height="15" fill="rgb(210,162,52)" fg:x="56073" fg:w="15"/><text x="52.7253%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="52.4753%" y="437" width="0.0140%" height="15" fill="rgb(217,216,49)" fg:x="56073" fg:w="15"/><text x="52.7253%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="52.4547%" y="533" width="0.0365%" height="15" fill="rgb(218,146,49)" fg:x="56051" fg:w="39"/><text x="52.7047%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.04%)</title><rect x="52.4556%" y="517" width="0.0356%" height="15" fill="rgb(216,55,40)" fg:x="56052" fg:w="38"/><text x="52.7056%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="52.4566%" y="501" width="0.0346%" height="15" fill="rgb(208,196,21)" fg:x="56053" fg:w="37"/><text x="52.7066%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.03%)</title><rect x="52.4659%" y="485" width="0.0253%" height="15" fill="rgb(242,117,42)" fg:x="56063" fg:w="27"/><text x="52.7159%" y="495.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (27 samples, 0.03%)</title><rect x="52.4659%" y="469" width="0.0253%" height="15" fill="rgb(210,11,23)" fg:x="56063" fg:w="27"/><text x="52.7159%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (15 samples, 0.01%)</title><rect x="52.4912%" y="533" width="0.0140%" height="15" fill="rgb(217,110,2)" fg:x="56090" fg:w="15"/><text x="52.7412%" y="543.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (15 samples, 0.01%)</title><rect x="52.4912%" y="517" width="0.0140%" height="15" fill="rgb(229,77,54)" fg:x="56090" fg:w="15"/><text x="52.7412%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (265 samples, 0.25%)</title><rect x="52.3349%" y="581" width="0.2480%" height="15" fill="rgb(218,53,16)" fg:x="55923" fg:w="265"/><text x="52.5849%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (265 samples, 0.25%)</title><rect x="52.3349%" y="565" width="0.2480%" height="15" fill="rgb(215,38,13)" fg:x="55923" fg:w="265"/><text x="52.5849%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (254 samples, 0.24%)</title><rect x="52.3452%" y="549" width="0.2377%" height="15" fill="rgb(235,42,18)" fg:x="55934" fg:w="254"/><text x="52.5952%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::take (83 samples, 0.08%)</title><rect x="52.5052%" y="533" width="0.0777%" height="15" fill="rgb(219,66,54)" fg:x="56105" fg:w="83"/><text x="52.7552%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (83 samples, 0.08%)</title><rect x="52.5052%" y="517" width="0.0777%" height="15" fill="rgb(222,205,4)" fg:x="56105" fg:w="83"/><text x="52.7552%" y="527.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (321 samples, 0.30%)</title><rect x="52.2909%" y="789" width="0.3004%" height="15" fill="rgb(227,213,46)" fg:x="55876" fg:w="321"/><text x="52.5409%" y="799.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (297 samples, 0.28%)</title><rect x="52.3134%" y="773" width="0.2779%" height="15" fill="rgb(250,145,42)" fg:x="55900" fg:w="297"/><text x="52.5634%" y="783.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (297 samples, 0.28%)</title><rect x="52.3134%" y="757" width="0.2779%" height="15" fill="rgb(219,15,2)" fg:x="55900" fg:w="297"/><text x="52.5634%" y="767.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (297 samples, 0.28%)</title><rect x="52.3134%" y="741" width="0.2779%" height="15" fill="rgb(231,181,52)" fg:x="55900" fg:w="297"/><text x="52.5634%" y="751.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (297 samples, 0.28%)</title><rect x="52.3134%" y="725" width="0.2779%" height="15" fill="rgb(235,1,42)" fg:x="55900" fg:w="297"/><text x="52.5634%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (297 samples, 0.28%)</title><rect x="52.3134%" y="709" width="0.2779%" height="15" fill="rgb(249,88,27)" fg:x="55900" fg:w="297"/><text x="52.5634%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (286 samples, 0.27%)</title><rect x="52.3237%" y="693" width="0.2676%" height="15" fill="rgb(235,145,16)" fg:x="55911" fg:w="286"/><text x="52.5737%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (286 samples, 0.27%)</title><rect x="52.3237%" y="677" width="0.2676%" height="15" fill="rgb(237,114,19)" fg:x="55911" fg:w="286"/><text x="52.5737%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (286 samples, 0.27%)</title><rect x="52.3237%" y="661" width="0.2676%" height="15" fill="rgb(238,51,50)" fg:x="55911" fg:w="286"/><text x="52.5737%" y="671.50"></text></g><g><title>alloc::alloc::alloc (282 samples, 0.26%)</title><rect x="52.3274%" y="645" width="0.2639%" height="15" fill="rgb(205,194,25)" fg:x="55915" fg:w="282"/><text x="52.5774%" y="655.50"></text></g><g><title>__rg_alloc (282 samples, 0.26%)</title><rect x="52.3274%" y="629" width="0.2639%" height="15" fill="rgb(215,203,17)" fg:x="55915" fg:w="282"/><text x="52.5774%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (282 samples, 0.26%)</title><rect x="52.3274%" y="613" width="0.2639%" height="15" fill="rgb(233,112,49)" fg:x="55915" fg:w="282"/><text x="52.5774%" y="623.50"></text></g><g><title>rust_alloc (282 samples, 0.26%)</title><rect x="52.3274%" y="597" width="0.2639%" height="15" fill="rgb(241,130,26)" fg:x="55915" fg:w="282"/><text x="52.5774%" y="607.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (3,060 samples, 2.86%)</title><rect x="49.7801%" y="821" width="2.8637%" height="15" fill="rgb(252,223,19)" fg:x="53193" fg:w="3060"/><text x="50.0301%" y="831.50">tr..</text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::pull_data (394 samples, 0.37%)</title><rect x="52.2750%" y="805" width="0.3687%" height="15" fill="rgb(211,95,25)" fg:x="55859" fg:w="394"/><text x="52.5250%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::_::&lt;impl tremor_runtime::connectors::source::RawSource_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::pull_data (54 samples, 0.05%)</title><rect x="52.5932%" y="789" width="0.0505%" height="15" fill="rgb(251,182,27)" fg:x="56199" fg:w="54"/><text x="52.8432%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::control_plane::{{closure}} (416 samples, 0.39%)</title><rect x="52.6437%" y="821" width="0.3893%" height="15" fill="rgb(238,24,4)" fg:x="56253" fg:w="416"/><text x="52.8937%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::needs_control_plane_msg (362 samples, 0.34%)</title><rect x="52.6943%" y="805" width="0.3388%" height="15" fill="rgb(224,220,25)" fg:x="56307" fg:w="362"/><text x="52.9443%" y="815.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (352 samples, 0.33%)</title><rect x="52.7036%" y="789" width="0.3294%" height="15" fill="rgb(239,133,26)" fg:x="56317" fg:w="352"/><text x="52.9536%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (340 samples, 0.32%)</title><rect x="52.7149%" y="773" width="0.3182%" height="15" fill="rgb(211,94,48)" fg:x="56329" fg:w="340"/><text x="52.9649%" y="783.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (199 samples, 0.19%)</title><rect x="52.8468%" y="757" width="0.1862%" height="15" fill="rgb(239,87,6)" fg:x="56470" fg:w="199"/><text x="53.0968%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (176 samples, 0.16%)</title><rect x="52.8683%" y="741" width="0.1647%" height="15" fill="rgb(227,62,0)" fg:x="56493" fg:w="176"/><text x="53.1183%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (176 samples, 0.16%)</title><rect x="52.8683%" y="725" width="0.1647%" height="15" fill="rgb(211,226,4)" fg:x="56493" fg:w="176"/><text x="53.1183%" y="735.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (12 samples, 0.01%)</title><rect x="54.0896%" y="789" width="0.0112%" height="15" fill="rgb(253,38,52)" fg:x="57798" fg:w="12"/><text x="54.3396%" y="799.50"></text></g><g><title>&lt;abi_stable::std_types::utypeid::UTypeId as core::cmp::PartialEq&gt;::eq (223 samples, 0.21%)</title><rect x="54.1748%" y="741" width="0.2087%" height="15" fill="rgb(229,126,40)" fg:x="57889" fg:w="223"/><text x="54.4248%" y="751.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (219 samples, 0.20%)</title><rect x="54.1785%" y="725" width="0.2049%" height="15" fill="rgb(229,165,44)" fg:x="57893" fg:w="219"/><text x="54.4285%" y="735.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (219 samples, 0.20%)</title><rect x="54.1785%" y="709" width="0.2049%" height="15" fill="rgb(247,95,47)" fg:x="57893" fg:w="219"/><text x="54.4285%" y="719.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (93 samples, 0.09%)</title><rect x="54.3835%" y="741" width="0.0870%" height="15" fill="rgb(216,140,30)" fg:x="58112" fg:w="93"/><text x="54.6335%" y="751.50"></text></g><g><title>abi_stable::std_types::utypeid::new_utypeid (78 samples, 0.07%)</title><rect x="54.3975%" y="725" width="0.0730%" height="15" fill="rgb(246,214,8)" fg:x="58127" fg:w="78"/><text x="54.6475%" y="735.50"></text></g><g><title>abi_stable::std_types::utypeid::UTypeId::new (44 samples, 0.04%)</title><rect x="54.4293%" y="709" width="0.0412%" height="15" fill="rgb(227,224,15)" fg:x="58161" fg:w="44"/><text x="54.6793%" y="719.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (324 samples, 0.30%)</title><rect x="54.1748%" y="757" width="0.3032%" height="15" fill="rgb(233,175,4)" fg:x="57889" fg:w="324"/><text x="54.4248%" y="767.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (455 samples, 0.43%)</title><rect x="54.0681%" y="805" width="0.4258%" height="15" fill="rgb(221,66,45)" fg:x="57775" fg:w="455"/><text x="54.3181%" y="815.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::convert::From&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (420 samples, 0.39%)</title><rect x="54.1008%" y="789" width="0.3931%" height="15" fill="rgb(221,178,18)" fg:x="57810" fg:w="420"/><text x="54.3508%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (388 samples, 0.36%)</title><rect x="54.1308%" y="773" width="0.3631%" height="15" fill="rgb(213,81,29)" fg:x="57842" fg:w="388"/><text x="54.3808%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="54.4939%" y="805" width="0.0159%" height="15" fill="rgb(220,89,49)" fg:x="58230" fg:w="17"/><text x="54.7439%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (11 samples, 0.01%)</title><rect x="54.4995%" y="789" width="0.0103%" height="15" fill="rgb(227,60,33)" fg:x="58236" fg:w="11"/><text x="54.7495%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (719 samples, 0.67%)</title><rect x="54.5182%" y="805" width="0.6729%" height="15" fill="rgb(205,113,12)" fg:x="58256" fg:w="719"/><text x="54.7682%" y="815.50"></text></g><g><title>abi_stable::std_types::option::ROption&lt;T&gt;::map (17 samples, 0.02%)</title><rect x="55.1911%" y="805" width="0.0159%" height="15" fill="rgb(211,32,1)" fg:x="58975" fg:w="17"/><text x="55.4411%" y="815.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="55.2398%" y="613" width="0.0103%" height="15" fill="rgb(246,2,12)" fg:x="59027" fg:w="11"/><text x="55.4898%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (11 samples, 0.01%)</title><rect x="55.2669%" y="517" width="0.0103%" height="15" fill="rgb(243,37,27)" fg:x="59056" fg:w="11"/><text x="55.5169%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (16 samples, 0.01%)</title><rect x="55.2632%" y="533" width="0.0150%" height="15" fill="rgb(248,211,31)" fg:x="59052" fg:w="16"/><text x="55.5132%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (90 samples, 0.08%)</title><rect x="55.2632%" y="565" width="0.0842%" height="15" fill="rgb(242,146,47)" fg:x="59052" fg:w="90"/><text x="55.5132%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (90 samples, 0.08%)</title><rect x="55.2632%" y="549" width="0.0842%" height="15" fill="rgb(206,70,20)" fg:x="59052" fg:w="90"/><text x="55.5132%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (74 samples, 0.07%)</title><rect x="55.2781%" y="533" width="0.0693%" height="15" fill="rgb(215,10,51)" fg:x="59068" fg:w="74"/><text x="55.5281%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (56 samples, 0.05%)</title><rect x="55.2950%" y="517" width="0.0524%" height="15" fill="rgb(243,178,53)" fg:x="59086" fg:w="56"/><text x="55.5450%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (56 samples, 0.05%)</title><rect x="55.2950%" y="501" width="0.0524%" height="15" fill="rgb(233,221,20)" fg:x="59086" fg:w="56"/><text x="55.5450%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (56 samples, 0.05%)</title><rect x="55.2950%" y="485" width="0.0524%" height="15" fill="rgb(218,95,35)" fg:x="59086" fg:w="56"/><text x="55.5450%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::empty (17 samples, 0.02%)</title><rect x="55.3586%" y="565" width="0.0159%" height="15" fill="rgb(229,13,5)" fg:x="59154" fg:w="17"/><text x="55.6086%" y="575.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (17 samples, 0.02%)</title><rect x="55.3586%" y="549" width="0.0159%" height="15" fill="rgb(252,164,30)" fg:x="59154" fg:w="17"/><text x="55.6086%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (260 samples, 0.24%)</title><rect x="55.2501%" y="613" width="0.2433%" height="15" fill="rgb(232,68,36)" fg:x="59038" fg:w="260"/><text x="55.5001%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (260 samples, 0.24%)</title><rect x="55.2501%" y="597" width="0.2433%" height="15" fill="rgb(219,59,54)" fg:x="59038" fg:w="260"/><text x="55.5001%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (252 samples, 0.24%)</title><rect x="55.2575%" y="581" width="0.2358%" height="15" fill="rgb(250,92,33)" fg:x="59046" fg:w="252"/><text x="55.5075%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (127 samples, 0.12%)</title><rect x="55.3745%" y="565" width="0.1189%" height="15" fill="rgb(229,162,54)" fg:x="59171" fg:w="127"/><text x="55.6245%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (127 samples, 0.12%)</title><rect x="55.3745%" y="549" width="0.1189%" height="15" fill="rgb(244,114,52)" fg:x="59171" fg:w="127"/><text x="55.6245%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (303 samples, 0.28%)</title><rect x="55.2192%" y="741" width="0.2836%" height="15" fill="rgb(212,211,43)" fg:x="59005" fg:w="303"/><text x="55.4692%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (291 samples, 0.27%)</title><rect x="55.2304%" y="725" width="0.2723%" height="15" fill="rgb(226,147,8)" fg:x="59017" fg:w="291"/><text x="55.4804%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (291 samples, 0.27%)</title><rect x="55.2304%" y="709" width="0.2723%" height="15" fill="rgb(226,23,13)" fg:x="59017" fg:w="291"/><text x="55.4804%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (291 samples, 0.27%)</title><rect x="55.2304%" y="693" width="0.2723%" height="15" fill="rgb(240,63,4)" fg:x="59017" fg:w="291"/><text x="55.4804%" y="703.50"></text></g><g><title>alloc::alloc::alloc (287 samples, 0.27%)</title><rect x="55.2341%" y="677" width="0.2686%" height="15" fill="rgb(221,1,32)" fg:x="59021" fg:w="287"/><text x="55.4841%" y="687.50"></text></g><g><title>__rg_alloc (287 samples, 0.27%)</title><rect x="55.2341%" y="661" width="0.2686%" height="15" fill="rgb(242,117,10)" fg:x="59021" fg:w="287"/><text x="55.4841%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (287 samples, 0.27%)</title><rect x="55.2341%" y="645" width="0.2686%" height="15" fill="rgb(249,172,44)" fg:x="59021" fg:w="287"/><text x="55.4841%" y="655.50"></text></g><g><title>rust_alloc (281 samples, 0.26%)</title><rect x="55.2398%" y="629" width="0.2630%" height="15" fill="rgb(244,46,45)" fg:x="59027" fg:w="281"/><text x="55.4898%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (327 samples, 0.31%)</title><rect x="55.2098%" y="805" width="0.3060%" height="15" fill="rgb(206,43,17)" fg:x="58995" fg:w="327"/><text x="55.4598%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (317 samples, 0.30%)</title><rect x="55.2192%" y="789" width="0.2967%" height="15" fill="rgb(239,218,39)" fg:x="59005" fg:w="317"/><text x="55.4692%" y="799.50"></text></g><g><title>value_trait::Builder::object (317 samples, 0.30%)</title><rect x="55.2192%" y="773" width="0.2967%" height="15" fill="rgb(208,169,54)" fg:x="59005" fg:w="317"/><text x="55.4692%" y="783.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (317 samples, 0.30%)</title><rect x="55.2192%" y="757" width="0.2967%" height="15" fill="rgb(247,25,42)" fg:x="59005" fg:w="317"/><text x="55.4692%" y="767.50"></text></g><g><title>tremor_value::value::Value::Object (14 samples, 0.01%)</title><rect x="55.5027%" y="741" width="0.0131%" height="15" fill="rgb(226,23,31)" fg:x="59308" fg:w="14"/><text x="55.7527%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="55.5158%" y="805" width="0.0131%" height="15" fill="rgb(247,16,28)" fg:x="59322" fg:w="14"/><text x="55.7658%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="55.5158%" y="789" width="0.0131%" height="15" fill="rgb(231,147,38)" fg:x="59322" fg:w="14"/><text x="55.7658%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="55.5289%" y="805" width="0.0140%" height="15" fill="rgb(253,81,48)" fg:x="59336" fg:w="15"/><text x="55.7789%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="55.6300%" y="709" width="0.0215%" height="15" fill="rgb(249,222,43)" fg:x="59444" fg:w="23"/><text x="55.8800%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (22 samples, 0.02%)</title><rect x="55.6309%" y="693" width="0.0206%" height="15" fill="rgb(221,3,27)" fg:x="59445" fg:w="22"/><text x="55.8809%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (126 samples, 0.12%)</title><rect x="55.5430%" y="805" width="0.1179%" height="15" fill="rgb(228,180,5)" fg:x="59351" fg:w="126"/><text x="55.7930%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (61 samples, 0.06%)</title><rect x="55.6038%" y="789" width="0.0571%" height="15" fill="rgb(227,131,42)" fg:x="59416" fg:w="61"/><text x="55.8538%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (50 samples, 0.05%)</title><rect x="55.6141%" y="773" width="0.0468%" height="15" fill="rgb(212,3,39)" fg:x="59427" fg:w="50"/><text x="55.8641%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (50 samples, 0.05%)</title><rect x="55.6141%" y="757" width="0.0468%" height="15" fill="rgb(226,45,5)" fg:x="59427" fg:w="50"/><text x="55.8641%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (33 samples, 0.03%)</title><rect x="55.6300%" y="741" width="0.0309%" height="15" fill="rgb(215,167,45)" fg:x="59444" fg:w="33"/><text x="55.8800%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (33 samples, 0.03%)</title><rect x="55.6300%" y="725" width="0.0309%" height="15" fill="rgb(250,218,53)" fg:x="59444" fg:w="33"/><text x="55.8800%" y="735.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="55.6815%" y="773" width="0.0112%" height="15" fill="rgb(207,140,0)" fg:x="59499" fg:w="12"/><text x="55.9315%" y="783.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="55.6983%" y="709" width="0.0131%" height="15" fill="rgb(238,133,51)" fg:x="59517" fg:w="14"/><text x="55.9483%" y="719.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (33 samples, 0.03%)</title><rect x="55.7461%" y="661" width="0.0309%" height="15" fill="rgb(218,203,53)" fg:x="59568" fg:w="33"/><text x="55.9961%" y="671.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (33 samples, 0.03%)</title><rect x="55.7461%" y="645" width="0.0309%" height="15" fill="rgb(226,184,25)" fg:x="59568" fg:w="33"/><text x="55.9961%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (81 samples, 0.08%)</title><rect x="55.7152%" y="709" width="0.0758%" height="15" fill="rgb(231,121,21)" fg:x="59535" fg:w="81"/><text x="55.9652%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (81 samples, 0.08%)</title><rect x="55.7152%" y="693" width="0.0758%" height="15" fill="rgb(251,14,34)" fg:x="59535" fg:w="81"/><text x="55.9652%" y="703.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (78 samples, 0.07%)</title><rect x="55.7180%" y="677" width="0.0730%" height="15" fill="rgb(249,193,11)" fg:x="59538" fg:w="78"/><text x="55.9680%" y="687.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="55.7769%" y="661" width="0.0140%" height="15" fill="rgb(220,172,37)" fg:x="59601" fg:w="15"/><text x="56.0269%" y="671.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="55.7769%" y="645" width="0.0140%" height="15" fill="rgb(231,229,43)" fg:x="59601" fg:w="15"/><text x="56.0269%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (114 samples, 0.11%)</title><rect x="55.6927%" y="741" width="0.1067%" height="15" fill="rgb(250,161,5)" fg:x="59511" fg:w="114"/><text x="55.9427%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (114 samples, 0.11%)</title><rect x="55.6927%" y="725" width="0.1067%" height="15" fill="rgb(218,225,18)" fg:x="59511" fg:w="114"/><text x="55.9427%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (116 samples, 0.11%)</title><rect x="55.6927%" y="773" width="0.1086%" height="15" fill="rgb(245,45,42)" fg:x="59511" fg:w="116"/><text x="55.9427%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (116 samples, 0.11%)</title><rect x="55.6927%" y="757" width="0.1086%" height="15" fill="rgb(211,115,1)" fg:x="59511" fg:w="116"/><text x="55.9427%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (139 samples, 0.13%)</title><rect x="55.6721%" y="789" width="0.1301%" height="15" fill="rgb(248,133,52)" fg:x="59489" fg:w="139"/><text x="55.9221%" y="799.50"></text></g><g><title>rust_dealloc (156 samples, 0.15%)</title><rect x="55.6609%" y="805" width="0.1460%" height="15" fill="rgb(238,100,21)" fg:x="59477" fg:w="156"/><text x="55.9109%" y="815.50"></text></g><g><title>core::time::Duration::as_nanos (11 samples, 0.01%)</title><rect x="55.8396%" y="789" width="0.0103%" height="15" fill="rgb(247,144,11)" fg:x="59668" fg:w="11"/><text x="56.0896%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (44 samples, 0.04%)</title><rect x="55.9117%" y="741" width="0.0412%" height="15" fill="rgb(206,164,16)" fg:x="59745" fg:w="44"/><text x="56.1617%" y="751.50"></text></g><g><title>core::cmp::PartialOrd::ge (44 samples, 0.04%)</title><rect x="55.9117%" y="725" width="0.0412%" height="15" fill="rgb(222,34,3)" fg:x="59745" fg:w="44"/><text x="56.1617%" y="735.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (42 samples, 0.04%)</title><rect x="55.9136%" y="709" width="0.0393%" height="15" fill="rgb(248,82,4)" fg:x="59747" fg:w="42"/><text x="56.1636%" y="719.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (42 samples, 0.04%)</title><rect x="55.9136%" y="693" width="0.0393%" height="15" fill="rgb(228,81,46)" fg:x="59747" fg:w="42"/><text x="56.1636%" y="703.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (42 samples, 0.04%)</title><rect x="55.9136%" y="677" width="0.0393%" height="15" fill="rgb(227,67,47)" fg:x="59747" fg:w="42"/><text x="56.1636%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (18 samples, 0.02%)</title><rect x="55.9360%" y="661" width="0.0168%" height="15" fill="rgb(215,93,53)" fg:x="59771" fg:w="18"/><text x="56.1860%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (143 samples, 0.13%)</title><rect x="55.8499%" y="773" width="0.1338%" height="15" fill="rgb(248,194,39)" fg:x="59679" fg:w="143"/><text x="56.0999%" y="783.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (143 samples, 0.13%)</title><rect x="55.8499%" y="757" width="0.1338%" height="15" fill="rgb(215,5,19)" fg:x="59679" fg:w="143"/><text x="56.0999%" y="767.50"></text></g><g><title>core::time::Duration::new (33 samples, 0.03%)</title><rect x="55.9529%" y="741" width="0.0309%" height="15" fill="rgb(226,215,51)" fg:x="59789" fg:w="33"/><text x="56.2029%" y="751.50"></text></g><g><title>std::time::SystemTime::duration_since (151 samples, 0.14%)</title><rect x="55.8499%" y="789" width="0.1413%" height="15" fill="rgb(225,56,26)" fg:x="59679" fg:w="151"/><text x="56.0999%" y="799.50"></text></g><g><title>tremor_common::time::nanotime (817 samples, 0.76%)</title><rect x="55.8134%" y="805" width="0.7646%" height="15" fill="rgb(222,75,29)" fg:x="59640" fg:w="817"/><text x="56.0634%" y="815.50"></text></g><g><title>std::time::SystemTime::now (627 samples, 0.59%)</title><rect x="55.9912%" y="789" width="0.5868%" height="15" fill="rgb(236,139,6)" fg:x="59830" fg:w="627"/><text x="56.2412%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (627 samples, 0.59%)</title><rect x="55.9912%" y="773" width="0.5868%" height="15" fill="rgb(223,137,36)" fg:x="59830" fg:w="627"/><text x="56.2412%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::now (627 samples, 0.59%)</title><rect x="55.9912%" y="757" width="0.5868%" height="15" fill="rgb(226,99,2)" fg:x="59830" fg:w="627"/><text x="56.2412%" y="767.50"></text></g><g><title>__clock_gettime_2 (530 samples, 0.50%)</title><rect x="56.0820%" y="741" width="0.4960%" height="15" fill="rgb(206,133,23)" fg:x="59927" fg:w="530"/><text x="56.3320%" y="751.50"></text></g><g><title>__vdso_clock_gettime (468 samples, 0.44%)</title><rect x="56.1400%" y="725" width="0.4380%" height="15" fill="rgb(243,173,15)" fg:x="59989" fg:w="468"/><text x="56.3900%" y="735.50"></text></g><g><title>[[vdso]] (295 samples, 0.28%)</title><rect x="56.3019%" y="709" width="0.2761%" height="15" fill="rgb(228,69,28)" fg:x="60162" fg:w="295"/><text x="56.5519%" y="719.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,801 samples, 3.56%)</title><rect x="53.0331%" y="821" width="3.5571%" height="15" fill="rgb(212,51,22)" fg:x="56669" fg:w="3801"/><text x="53.2831%" y="831.50">trem..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (13 samples, 0.01%)</title><rect x="56.5780%" y="805" width="0.0122%" height="15" fill="rgb(227,113,0)" fg:x="60457" fg:w="13"/><text x="56.8280%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,606 samples, 7.12%)</title><rect x="49.5321%" y="837" width="7.1180%" height="15" fill="rgb(252,84,27)" fg:x="52928" fg:w="7606"/><text x="49.7821%" y="847.50">&lt;core::fut..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (64 samples, 0.06%)</title><rect x="56.5902%" y="821" width="0.0599%" height="15" fill="rgb(223,145,39)" fg:x="60470" fg:w="64"/><text x="56.8402%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,110 samples, 1.04%)</title><rect x="56.6557%" y="837" width="1.0388%" height="15" fill="rgb(239,219,30)" fg:x="60540" fg:w="1110"/><text x="56.9057%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (45 samples, 0.04%)</title><rect x="57.7001%" y="821" width="0.0421%" height="15" fill="rgb(224,196,39)" fg:x="61656" fg:w="45"/><text x="57.9501%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (48 samples, 0.04%)</title><rect x="57.7001%" y="837" width="0.0449%" height="15" fill="rgb(205,35,43)" fg:x="61656" fg:w="48"/><text x="57.9501%" y="847.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (9,316 samples, 8.72%)</title><rect x="49.0567%" y="853" width="8.7183%" height="15" fill="rgb(228,201,21)" fg:x="52420" fg:w="9316"/><text x="49.3067%" y="863.50">tremor_runti..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::should_pull_data (32 samples, 0.03%)</title><rect x="57.7450%" y="837" width="0.0299%" height="15" fill="rgb(237,118,16)" fg:x="61704" fg:w="32"/><text x="57.9950%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="57.8096%" y="821" width="0.0103%" height="15" fill="rgb(241,17,19)" fg:x="61773" fg:w="11"/><text x="58.0596%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (323 samples, 0.30%)</title><rect x="57.8199%" y="821" width="0.3023%" height="15" fill="rgb(214,10,25)" fg:x="61784" fg:w="323"/><text x="58.0699%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (22 samples, 0.02%)</title><rect x="58.3393%" y="805" width="0.0206%" height="15" fill="rgb(238,37,29)" fg:x="62339" fg:w="22"/><text x="58.5893%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.05%)</title><rect x="58.3636%" y="789" width="0.0543%" height="15" fill="rgb(253,83,25)" fg:x="62365" fg:w="58"/><text x="58.6136%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (387 samples, 0.36%)</title><rect x="58.3636%" y="805" width="0.3622%" height="15" fill="rgb(234,192,12)" fg:x="62365" fg:w="387"/><text x="58.6136%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (329 samples, 0.31%)</title><rect x="58.4179%" y="789" width="0.3079%" height="15" fill="rgb(241,216,45)" fg:x="62423" fg:w="329"/><text x="58.6679%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (327 samples, 0.31%)</title><rect x="58.4197%" y="773" width="0.3060%" height="15" fill="rgb(242,22,33)" fg:x="62425" fg:w="327"/><text x="58.6697%" y="783.50"></text></g><g><title>core::ptr::read (327 samples, 0.31%)</title><rect x="58.4197%" y="757" width="0.3060%" height="15" fill="rgb(231,105,49)" fg:x="62425" fg:w="327"/><text x="58.6697%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (323 samples, 0.30%)</title><rect x="58.4235%" y="741" width="0.3023%" height="15" fill="rgb(218,204,15)" fg:x="62429" fg:w="323"/><text x="58.6735%" y="751.50"></text></g><g><title>rust_alloc (39 samples, 0.04%)</title><rect x="58.7576%" y="501" width="0.0365%" height="15" fill="rgb(235,138,41)" fg:x="62786" fg:w="39"/><text x="59.0076%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="58.8222%" y="373" width="0.0168%" height="15" fill="rgb(246,0,9)" fg:x="62855" fg:w="18"/><text x="59.0722%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="58.8222%" y="357" width="0.0168%" height="15" fill="rgb(210,74,4)" fg:x="62855" fg:w="18"/><text x="59.0722%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (39 samples, 0.04%)</title><rect x="58.8128%" y="421" width="0.0365%" height="15" fill="rgb(250,60,41)" fg:x="62845" fg:w="39"/><text x="59.0628%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (39 samples, 0.04%)</title><rect x="58.8128%" y="405" width="0.0365%" height="15" fill="rgb(220,115,12)" fg:x="62845" fg:w="39"/><text x="59.0628%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (36 samples, 0.03%)</title><rect x="58.8156%" y="389" width="0.0337%" height="15" fill="rgb(237,100,13)" fg:x="62848" fg:w="36"/><text x="59.0656%" y="399.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="58.8390%" y="373" width="0.0103%" height="15" fill="rgb(213,55,26)" fg:x="62873" fg:w="11"/><text x="59.0890%" y="383.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="58.8390%" y="357" width="0.0103%" height="15" fill="rgb(216,17,4)" fg:x="62873" fg:w="11"/><text x="59.0890%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (51 samples, 0.05%)</title><rect x="58.8128%" y="437" width="0.0477%" height="15" fill="rgb(220,153,47)" fg:x="62845" fg:w="51"/><text x="59.0628%" y="447.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="58.8493%" y="421" width="0.0112%" height="15" fill="rgb(215,131,9)" fg:x="62884" fg:w="12"/><text x="59.0993%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="58.8493%" y="405" width="0.0112%" height="15" fill="rgb(233,46,42)" fg:x="62884" fg:w="12"/><text x="59.0993%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="58.8493%" y="389" width="0.0112%" height="15" fill="rgb(226,86,7)" fg:x="62884" fg:w="12"/><text x="59.0993%" y="399.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="58.8493%" y="373" width="0.0112%" height="15" fill="rgb(239,226,21)" fg:x="62884" fg:w="12"/><text x="59.0993%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (62 samples, 0.06%)</title><rect x="58.8081%" y="453" width="0.0580%" height="15" fill="rgb(244,137,22)" fg:x="62840" fg:w="62"/><text x="59.0581%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (41 samples, 0.04%)</title><rect x="58.8858%" y="437" width="0.0384%" height="15" fill="rgb(211,139,35)" fg:x="62923" fg:w="41"/><text x="59.1358%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (353 samples, 0.33%)</title><rect x="58.8062%" y="485" width="0.3304%" height="15" fill="rgb(214,62,50)" fg:x="62838" fg:w="353"/><text x="59.0562%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (353 samples, 0.33%)</title><rect x="58.8062%" y="469" width="0.3304%" height="15" fill="rgb(212,113,44)" fg:x="62838" fg:w="353"/><text x="59.0562%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (289 samples, 0.27%)</title><rect x="58.8661%" y="453" width="0.2705%" height="15" fill="rgb(226,150,43)" fg:x="62902" fg:w="289"/><text x="59.1161%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (227 samples, 0.21%)</title><rect x="58.9242%" y="437" width="0.2124%" height="15" fill="rgb(250,71,37)" fg:x="62964" fg:w="227"/><text x="59.1742%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (227 samples, 0.21%)</title><rect x="58.9242%" y="421" width="0.2124%" height="15" fill="rgb(219,76,19)" fg:x="62964" fg:w="227"/><text x="59.1742%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (227 samples, 0.21%)</title><rect x="58.9242%" y="405" width="0.2124%" height="15" fill="rgb(250,39,11)" fg:x="62964" fg:w="227"/><text x="59.1742%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (73 samples, 0.07%)</title><rect x="59.1394%" y="485" width="0.0683%" height="15" fill="rgb(230,64,31)" fg:x="63194" fg:w="73"/><text x="59.3894%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (73 samples, 0.07%)</title><rect x="59.1394%" y="469" width="0.0683%" height="15" fill="rgb(208,222,23)" fg:x="63194" fg:w="73"/><text x="59.3894%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (1,039 samples, 0.97%)</title><rect x="58.7566%" y="533" width="0.9723%" height="15" fill="rgb(227,125,18)" fg:x="62785" fg:w="1039"/><text x="59.0066%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (1,038 samples, 0.97%)</title><rect x="58.7576%" y="517" width="0.9714%" height="15" fill="rgb(234,210,9)" fg:x="62786" fg:w="1038"/><text x="59.0076%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (993 samples, 0.93%)</title><rect x="58.7997%" y="501" width="0.9293%" height="15" fill="rgb(217,127,24)" fg:x="62831" fg:w="993"/><text x="59.0497%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (557 samples, 0.52%)</title><rect x="59.2077%" y="485" width="0.5213%" height="15" fill="rgb(239,141,48)" fg:x="63267" fg:w="557"/><text x="59.4577%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (557 samples, 0.52%)</title><rect x="59.2077%" y="469" width="0.5213%" height="15" fill="rgb(227,109,8)" fg:x="63267" fg:w="557"/><text x="59.4577%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,070 samples, 1.00%)</title><rect x="58.7304%" y="677" width="1.0013%" height="15" fill="rgb(235,184,23)" fg:x="62757" fg:w="1070"/><text x="58.9804%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,070 samples, 1.00%)</title><rect x="58.7304%" y="661" width="1.0013%" height="15" fill="rgb(227,226,48)" fg:x="62757" fg:w="1070"/><text x="58.9804%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,066 samples, 1.00%)</title><rect x="58.7342%" y="645" width="0.9976%" height="15" fill="rgb(206,150,11)" fg:x="62761" fg:w="1066"/><text x="58.9842%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,066 samples, 1.00%)</title><rect x="58.7342%" y="629" width="0.9976%" height="15" fill="rgb(254,2,33)" fg:x="62761" fg:w="1066"/><text x="58.9842%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,066 samples, 1.00%)</title><rect x="58.7342%" y="613" width="0.9976%" height="15" fill="rgb(243,160,20)" fg:x="62761" fg:w="1066"/><text x="58.9842%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1,050 samples, 0.98%)</title><rect x="58.7492%" y="597" width="0.9826%" height="15" fill="rgb(218,208,30)" fg:x="62777" fg:w="1050"/><text x="58.9992%" y="607.50"></text></g><g><title>__rg_alloc (1,050 samples, 0.98%)</title><rect x="58.7492%" y="581" width="0.9826%" height="15" fill="rgb(224,120,49)" fg:x="62777" fg:w="1050"/><text x="58.9992%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,050 samples, 0.98%)</title><rect x="58.7492%" y="565" width="0.9826%" height="15" fill="rgb(246,12,2)" fg:x="62777" fg:w="1050"/><text x="58.9992%" y="575.50"></text></g><g><title>rust_alloc (1,050 samples, 0.98%)</title><rect x="58.7492%" y="549" width="0.9826%" height="15" fill="rgb(236,117,3)" fg:x="62777" fg:w="1050"/><text x="58.9992%" y="559.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,114 samples, 1.04%)</title><rect x="58.7304%" y="805" width="1.0425%" height="15" fill="rgb(216,128,52)" fg:x="62757" fg:w="1114"/><text x="58.9804%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,114 samples, 1.04%)</title><rect x="58.7304%" y="789" width="1.0425%" height="15" fill="rgb(246,145,19)" fg:x="62757" fg:w="1114"/><text x="58.9804%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,114 samples, 1.04%)</title><rect x="58.7304%" y="773" width="1.0425%" height="15" fill="rgb(222,11,46)" fg:x="62757" fg:w="1114"/><text x="58.9804%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,114 samples, 1.04%)</title><rect x="58.7304%" y="757" width="1.0425%" height="15" fill="rgb(245,82,36)" fg:x="62757" fg:w="1114"/><text x="58.9804%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,114 samples, 1.04%)</title><rect x="58.7304%" y="741" width="1.0425%" height="15" fill="rgb(250,73,51)" fg:x="62757" fg:w="1114"/><text x="58.9804%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,114 samples, 1.04%)</title><rect x="58.7304%" y="725" width="1.0425%" height="15" fill="rgb(221,189,23)" fg:x="62757" fg:w="1114"/><text x="58.9804%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1,114 samples, 1.04%)</title><rect x="58.7304%" y="709" width="1.0425%" height="15" fill="rgb(210,33,7)" fg:x="62757" fg:w="1114"/><text x="58.9804%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,114 samples, 1.04%)</title><rect x="58.7304%" y="693" width="1.0425%" height="15" fill="rgb(210,107,22)" fg:x="62757" fg:w="1114"/><text x="58.9804%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (44 samples, 0.04%)</title><rect x="59.7318%" y="677" width="0.0412%" height="15" fill="rgb(222,116,37)" fg:x="63827" fg:w="44"/><text x="59.9818%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.04%)</title><rect x="59.7318%" y="661" width="0.0412%" height="15" fill="rgb(254,17,48)" fg:x="63827" fg:w="44"/><text x="59.9818%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (37 samples, 0.03%)</title><rect x="59.7383%" y="645" width="0.0346%" height="15" fill="rgb(224,36,32)" fg:x="63834" fg:w="37"/><text x="59.9883%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (900 samples, 0.84%)</title><rect x="59.7730%" y="805" width="0.8423%" height="15" fill="rgb(232,90,46)" fg:x="63871" fg:w="900"/><text x="60.0230%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (19 samples, 0.02%)</title><rect x="60.6152%" y="805" width="0.0178%" height="15" fill="rgb(241,66,40)" fg:x="64771" fg:w="19"/><text x="60.8652%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (12 samples, 0.01%)</title><rect x="60.6218%" y="789" width="0.0112%" height="15" fill="rgb(249,184,29)" fg:x="64778" fg:w="12"/><text x="60.8718%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="60.6218%" y="773" width="0.0112%" height="15" fill="rgb(231,181,1)" fg:x="64778" fg:w="12"/><text x="60.8718%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (12 samples, 0.01%)</title><rect x="60.6218%" y="757" width="0.0112%" height="15" fill="rgb(224,94,2)" fg:x="64778" fg:w="12"/><text x="60.8718%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (12 samples, 0.01%)</title><rect x="60.6218%" y="741" width="0.0112%" height="15" fill="rgb(229,170,15)" fg:x="64778" fg:w="12"/><text x="60.8718%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (22 samples, 0.02%)</title><rect x="60.6330%" y="805" width="0.0206%" height="15" fill="rgb(240,127,35)" fg:x="64790" fg:w="22"/><text x="60.8830%" y="815.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="60.6330%" y="789" width="0.0206%" height="15" fill="rgb(248,196,34)" fg:x="64790" fg:w="22"/><text x="60.8830%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (18 samples, 0.02%)</title><rect x="60.6536%" y="805" width="0.0168%" height="15" fill="rgb(236,137,7)" fg:x="64812" fg:w="18"/><text x="60.9036%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="60.6536%" y="789" width="0.0168%" height="15" fill="rgb(235,127,16)" fg:x="64812" fg:w="18"/><text x="60.9036%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="60.6704%" y="805" width="0.0159%" height="15" fill="rgb(250,192,54)" fg:x="64830" fg:w="17"/><text x="60.9204%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (15 samples, 0.01%)</title><rect x="60.6863%" y="805" width="0.0140%" height="15" fill="rgb(218,98,20)" fg:x="64847" fg:w="15"/><text x="60.9363%" y="815.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (19 samples, 0.02%)</title><rect x="60.7247%" y="757" width="0.0178%" height="15" fill="rgb(230,176,47)" fg:x="64888" fg:w="19"/><text x="60.9747%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (255 samples, 0.24%)</title><rect x="60.7247%" y="773" width="0.2386%" height="15" fill="rgb(244,2,33)" fg:x="64888" fg:w="255"/><text x="60.9747%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (236 samples, 0.22%)</title><rect x="60.7425%" y="757" width="0.2209%" height="15" fill="rgb(231,100,17)" fg:x="64907" fg:w="236"/><text x="60.9925%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (236 samples, 0.22%)</title><rect x="60.7425%" y="741" width="0.2209%" height="15" fill="rgb(245,23,12)" fg:x="64907" fg:w="236"/><text x="60.9925%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (236 samples, 0.22%)</title><rect x="60.7425%" y="725" width="0.2209%" height="15" fill="rgb(249,55,22)" fg:x="64907" fg:w="236"/><text x="60.9925%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (236 samples, 0.22%)</title><rect x="60.7425%" y="709" width="0.2209%" height="15" fill="rgb(207,134,9)" fg:x="64907" fg:w="236"/><text x="60.9925%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (236 samples, 0.22%)</title><rect x="60.7425%" y="693" width="0.2209%" height="15" fill="rgb(218,134,0)" fg:x="64907" fg:w="236"/><text x="60.9925%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (139 samples, 0.13%)</title><rect x="60.8333%" y="677" width="0.1301%" height="15" fill="rgb(213,212,33)" fg:x="65004" fg:w="139"/><text x="61.0833%" y="687.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (284 samples, 0.27%)</title><rect x="60.7004%" y="805" width="0.2658%" height="15" fill="rgb(252,106,18)" fg:x="64862" fg:w="284"/><text x="60.9504%" y="815.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (259 samples, 0.24%)</title><rect x="60.7238%" y="789" width="0.2424%" height="15" fill="rgb(208,126,42)" fg:x="64887" fg:w="259"/><text x="60.9738%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,446 samples, 3.22%)</title><rect x="57.7749%" y="837" width="3.2249%" height="15" fill="rgb(246,175,29)" fg:x="61736" fg:w="3446"/><text x="58.0249%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,075 samples, 2.88%)</title><rect x="58.1221%" y="821" width="2.8777%" height="15" fill="rgb(215,13,50)" fg:x="62107" fg:w="3075"/><text x="58.3721%" y="831.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (36 samples, 0.03%)</title><rect x="60.9662%" y="805" width="0.0337%" height="15" fill="rgb(216,172,15)" fg:x="65146" fg:w="36"/><text x="61.2162%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (36 samples, 0.03%)</title><rect x="60.9662%" y="789" width="0.0337%" height="15" fill="rgb(212,103,13)" fg:x="65146" fg:w="36"/><text x="61.2162%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (36 samples, 0.03%)</title><rect x="60.9662%" y="773" width="0.0337%" height="15" fill="rgb(231,171,36)" fg:x="65146" fg:w="36"/><text x="61.2162%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (25 samples, 0.02%)</title><rect x="60.9765%" y="757" width="0.0234%" height="15" fill="rgb(250,123,20)" fg:x="65157" fg:w="25"/><text x="61.2265%" y="767.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,925 samples, 16.77%)</title><rect x="44.2334%" y="1141" width="16.7749%" height="15" fill="rgb(212,53,50)" fg:x="47266" fg:w="17925"/><text x="44.4834%" y="1151.50">&lt;futures_lite::future::Or&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,922 samples, 16.77%)</title><rect x="44.2362%" y="1125" width="16.7721%" height="15" fill="rgb(243,54,12)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="1135.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Executor::run::{{closure}} (17,922 samples, 16.77%)</title><rect x="44.2362%" y="1109" width="16.7721%" height="15" fill="rgb(234,101,34)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="1119.50">async_executor::Executor::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,922 samples, 16.77%)</title><rect x="44.2362%" y="1093" width="16.7721%" height="15" fill="rgb(254,67,22)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="1103.50">&lt;futures_lite::future::Or&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,922 samples, 16.77%)</title><rect x="44.2362%" y="1077" width="16.7721%" height="15" fill="rgb(250,35,47)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="1087.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (17,922 samples, 16.77%)</title><rect x="44.2362%" y="1061" width="16.7721%" height="15" fill="rgb(226,126,38)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="1071.50">async_executor::Executor::..</text></g><g><title>async_task::runnable::Runnable::run (17,922 samples, 16.77%)</title><rect x="44.2362%" y="1045" width="16.7721%" height="15" fill="rgb(216,138,53)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="1055.50">async_task::runnable::Runn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (17,922 samples, 16.77%)</title><rect x="44.2362%" y="1029" width="16.7721%" height="15" fill="rgb(246,199,43)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="1039.50">async_task::raw::RawTask&lt;F..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (17,922 samples, 16.77%)</title><rect x="44.2362%" y="1013" width="16.7721%" height="15" fill="rgb(232,125,11)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="1023.50">&lt;core::pin::Pin&lt;P&gt; as core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,922 samples, 16.77%)</title><rect x="44.2362%" y="997" width="16.7721%" height="15" fill="rgb(218,219,45)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="1007.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (17,922 samples, 16.77%)</title><rect x="44.2362%" y="981" width="16.7721%" height="15" fill="rgb(216,102,54)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="991.50">async_executor::Executor::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (17,922 samples, 16.77%)</title><rect x="44.2362%" y="965" width="16.7721%" height="15" fill="rgb(250,228,7)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="975.50">&lt;async_std::task::builder:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (17,922 samples, 16.77%)</title><rect x="44.2362%" y="949" width="16.7721%" height="15" fill="rgb(226,125,25)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="959.50">async_std::task::task_loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17,922 samples, 16.77%)</title><rect x="44.2362%" y="933" width="16.7721%" height="15" fill="rgb(224,165,27)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="943.50">std::thread::local::LocalK..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17,922 samples, 16.77%)</title><rect x="44.2362%" y="917" width="16.7721%" height="15" fill="rgb(233,86,3)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="927.50">std::thread::local::LocalK..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (17,922 samples, 16.77%)</title><rect x="44.2362%" y="901" width="16.7721%" height="15" fill="rgb(228,116,20)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="911.50">async_std::task::task_loca..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (17,922 samples, 16.77%)</title><rect x="44.2362%" y="885" width="16.7721%" height="15" fill="rgb(209,192,17)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="895.50">&lt;async_std::task::builder:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,922 samples, 16.77%)</title><rect x="44.2362%" y="869" width="16.7721%" height="15" fill="rgb(224,88,34)" fg:x="47269" fg:w="17922"/><text x="44.4862%" y="879.50">&lt;core::future::from_genera..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,455 samples, 3.23%)</title><rect x="57.7749%" y="853" width="3.2333%" height="15" fill="rgb(233,38,6)" fg:x="61736" fg:w="3455"/><text x="58.0249%" y="863.50">tre..</text></g><g><title>async_io::driver::block_on (17,936 samples, 16.79%)</title><rect x="44.2306%" y="1157" width="16.7852%" height="15" fill="rgb(212,59,30)" fg:x="47263" fg:w="17936"/><text x="44.4806%" y="1167.50">async_io::driver::block_on</text></g><g><title>__memmove_avx_unaligned_erms (572 samples, 0.54%)</title><rect x="61.0532%" y="885" width="0.5353%" height="15" fill="rgb(213,80,3)" fg:x="65239" fg:w="572"/><text x="61.3032%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (681 samples, 0.64%)</title><rect x="61.6203%" y="869" width="0.6373%" height="15" fill="rgb(251,178,7)" fg:x="65845" fg:w="681"/><text x="61.8703%" y="879.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (57 samples, 0.05%)</title><rect x="62.2576%" y="869" width="0.0533%" height="15" fill="rgb(213,154,26)" fg:x="66526" fg:w="57"/><text x="62.5076%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (82 samples, 0.08%)</title><rect x="62.3156%" y="853" width="0.0767%" height="15" fill="rgb(238,165,49)" fg:x="66588" fg:w="82"/><text x="62.5656%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (78 samples, 0.07%)</title><rect x="62.3194%" y="837" width="0.0730%" height="15" fill="rgb(248,91,46)" fg:x="66592" fg:w="78"/><text x="62.5694%" y="847.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.07%)</title><rect x="62.3194%" y="821" width="0.0730%" height="15" fill="rgb(244,21,52)" fg:x="66592" fg:w="78"/><text x="62.5694%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (73 samples, 0.07%)</title><rect x="62.3241%" y="805" width="0.0683%" height="15" fill="rgb(247,122,20)" fg:x="66597" fg:w="73"/><text x="62.5741%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (73 samples, 0.07%)</title><rect x="62.3241%" y="789" width="0.0683%" height="15" fill="rgb(218,27,9)" fg:x="66597" fg:w="73"/><text x="62.5741%" y="799.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (70 samples, 0.07%)</title><rect x="62.3269%" y="773" width="0.0655%" height="15" fill="rgb(246,7,6)" fg:x="66600" fg:w="70"/><text x="62.5769%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (33 samples, 0.03%)</title><rect x="62.3924%" y="853" width="0.0309%" height="15" fill="rgb(227,135,54)" fg:x="66670" fg:w="33"/><text x="62.6424%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (33 samples, 0.03%)</title><rect x="62.3924%" y="837" width="0.0309%" height="15" fill="rgb(247,14,11)" fg:x="66670" fg:w="33"/><text x="62.6424%" y="847.50"></text></g><g><title>event_listener::Inner::lock (173 samples, 0.16%)</title><rect x="62.4279%" y="853" width="0.1619%" height="15" fill="rgb(206,149,34)" fg:x="66708" fg:w="173"/><text x="62.6779%" y="863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (169 samples, 0.16%)</title><rect x="62.4317%" y="837" width="0.1582%" height="15" fill="rgb(227,228,4)" fg:x="66712" fg:w="169"/><text x="62.6817%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (167 samples, 0.16%)</title><rect x="62.4336%" y="821" width="0.1563%" height="15" fill="rgb(238,218,28)" fg:x="66714" fg:w="167"/><text x="62.6836%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (165 samples, 0.15%)</title><rect x="62.4354%" y="805" width="0.1544%" height="15" fill="rgb(252,86,40)" fg:x="66716" fg:w="165"/><text x="62.6854%" y="815.50"></text></g><g><title>__GI___pthread_mutex_lock (165 samples, 0.15%)</title><rect x="62.4354%" y="789" width="0.1544%" height="15" fill="rgb(251,225,11)" fg:x="66716" fg:w="165"/><text x="62.6854%" y="799.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,337 samples, 1.25%)</title><rect x="61.5885%" y="885" width="1.2512%" height="15" fill="rgb(206,46,49)" fg:x="65811" fg:w="1337"/><text x="61.8385%" y="895.50"></text></g><g><title>event_listener::Event::notify (565 samples, 0.53%)</title><rect x="62.3110%" y="869" width="0.5287%" height="15" fill="rgb(245,128,24)" fg:x="66583" fg:w="565"/><text x="62.5610%" y="879.50"></text></g><g><title>event_listener::full_fence (267 samples, 0.25%)</title><rect x="62.5898%" y="853" width="0.2499%" height="15" fill="rgb(219,177,34)" fg:x="66881" fg:w="267"/><text x="62.8398%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (267 samples, 0.25%)</title><rect x="62.5898%" y="837" width="0.2499%" height="15" fill="rgb(218,60,48)" fg:x="66881" fg:w="267"/><text x="62.8398%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (267 samples, 0.25%)</title><rect x="62.5898%" y="821" width="0.2499%" height="15" fill="rgb(221,11,5)" fg:x="66881" fg:w="267"/><text x="62.8398%" y="831.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,954 samples, 1.83%)</title><rect x="61.0214%" y="965" width="1.8286%" height="15" fill="rgb(220,148,13)" fg:x="65205" fg:w="1954"/><text x="61.2714%" y="975.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,954 samples, 1.83%)</title><rect x="61.0214%" y="949" width="1.8286%" height="15" fill="rgb(210,16,3)" fg:x="65205" fg:w="1954"/><text x="61.2714%" y="959.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,954 samples, 1.83%)</title><rect x="61.0214%" y="933" width="1.8286%" height="15" fill="rgb(236,80,2)" fg:x="65205" fg:w="1954"/><text x="61.2714%" y="943.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,954 samples, 1.83%)</title><rect x="61.0214%" y="917" width="1.8286%" height="15" fill="rgb(239,129,19)" fg:x="65205" fg:w="1954"/><text x="61.2714%" y="927.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,954 samples, 1.83%)</title><rect x="61.0214%" y="901" width="1.8286%" height="15" fill="rgb(220,106,35)" fg:x="65205" fg:w="1954"/><text x="61.2714%" y="911.50">&lt;..</text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::iter (16 samples, 0.01%)</title><rect x="62.8500%" y="565" width="0.0150%" height="15" fill="rgb(252,139,45)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="575.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter (16 samples, 0.01%)</title><rect x="62.8500%" y="549" width="0.0150%" height="15" fill="rgb(229,8,36)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="559.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run (16 samples, 0.01%)</title><rect x="62.8500%" y="533" width="0.0150%" height="15" fill="rgb(230,126,33)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="543.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run::{{closure}} (16 samples, 0.01%)</title><rect x="62.8500%" y="517" width="0.0150%" height="15" fill="rgb(239,140,21)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="527.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter::{{closure}} (16 samples, 0.01%)</title><rect x="62.8500%" y="501" width="0.0150%" height="15" fill="rgb(254,104,9)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="511.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (16 samples, 0.01%)</title><rect x="62.8500%" y="485" width="0.0150%" height="15" fill="rgb(239,52,14)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="495.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (16 samples, 0.01%)</title><rect x="62.8500%" y="469" width="0.0150%" height="15" fill="rgb(208,227,44)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (16 samples, 0.01%)</title><rect x="62.8500%" y="453" width="0.0150%" height="15" fill="rgb(246,18,19)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.01%)</title><rect x="62.8500%" y="437" width="0.0150%" height="15" fill="rgb(235,228,25)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.01%)</title><rect x="62.8500%" y="421" width="0.0150%" height="15" fill="rgb(240,156,20)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.01%)</title><rect x="62.8500%" y="405" width="0.0150%" height="15" fill="rgb(224,8,20)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="415.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.01%)</title><rect x="62.8500%" y="389" width="0.0150%" height="15" fill="rgb(214,12,52)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="399.50"></text></g><g><title>__rg_alloc (16 samples, 0.01%)</title><rect x="62.8500%" y="373" width="0.0150%" height="15" fill="rgb(211,220,47)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.01%)</title><rect x="62.8500%" y="357" width="0.0150%" height="15" fill="rgb(250,173,5)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="367.50"></text></g><g><title>rust_alloc (16 samples, 0.01%)</title><rect x="62.8500%" y="341" width="0.0150%" height="15" fill="rgb(250,125,52)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="62.8500%" y="325" width="0.0150%" height="15" fill="rgb(209,133,18)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="62.8500%" y="309" width="0.0150%" height="15" fill="rgb(216,173,22)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="62.8500%" y="293" width="0.0150%" height="15" fill="rgb(205,3,22)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="62.8500%" y="277" width="0.0150%" height="15" fill="rgb(248,22,20)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (16 samples, 0.01%)</title><rect x="62.8500%" y="261" width="0.0150%" height="15" fill="rgb(233,6,29)" fg:x="67159" fg:w="16"/><text x="63.1000%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (12 samples, 0.01%)</title><rect x="62.8537%" y="245" width="0.0112%" height="15" fill="rgb(240,22,54)" fg:x="67163" fg:w="12"/><text x="63.1037%" y="255.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (37 samples, 0.03%)</title><rect x="62.8650%" y="533" width="0.0346%" height="15" fill="rgb(231,133,32)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="543.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (37 samples, 0.03%)</title><rect x="62.8650%" y="517" width="0.0346%" height="15" fill="rgb(248,193,4)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="527.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (37 samples, 0.03%)</title><rect x="62.8650%" y="501" width="0.0346%" height="15" fill="rgb(211,178,46)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="511.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (37 samples, 0.03%)</title><rect x="62.8650%" y="485" width="0.0346%" height="15" fill="rgb(224,5,42)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="495.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (37 samples, 0.03%)</title><rect x="62.8650%" y="469" width="0.0346%" height="15" fill="rgb(239,176,25)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (37 samples, 0.03%)</title><rect x="62.8650%" y="453" width="0.0346%" height="15" fill="rgb(245,187,50)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (37 samples, 0.03%)</title><rect x="62.8650%" y="437" width="0.0346%" height="15" fill="rgb(248,24,15)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (37 samples, 0.03%)</title><rect x="62.8650%" y="421" width="0.0346%" height="15" fill="rgb(205,166,13)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (37 samples, 0.03%)</title><rect x="62.8650%" y="405" width="0.0346%" height="15" fill="rgb(208,114,23)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="415.50"></text></g><g><title>alloc::alloc::alloc (37 samples, 0.03%)</title><rect x="62.8650%" y="389" width="0.0346%" height="15" fill="rgb(239,127,18)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="399.50"></text></g><g><title>__rg_alloc (37 samples, 0.03%)</title><rect x="62.8650%" y="373" width="0.0346%" height="15" fill="rgb(219,154,28)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (37 samples, 0.03%)</title><rect x="62.8650%" y="357" width="0.0346%" height="15" fill="rgb(225,157,23)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="367.50"></text></g><g><title>rust_alloc (37 samples, 0.03%)</title><rect x="62.8650%" y="341" width="0.0346%" height="15" fill="rgb(219,8,6)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="62.8650%" y="325" width="0.0346%" height="15" fill="rgb(212,47,6)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="62.8650%" y="309" width="0.0346%" height="15" fill="rgb(224,190,4)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="62.8650%" y="293" width="0.0346%" height="15" fill="rgb(239,183,29)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="62.8650%" y="277" width="0.0346%" height="15" fill="rgb(213,57,7)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (37 samples, 0.03%)</title><rect x="62.8650%" y="261" width="0.0346%" height="15" fill="rgb(216,148,1)" fg:x="67175" fg:w="37"/><text x="63.1150%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (31 samples, 0.03%)</title><rect x="62.8706%" y="245" width="0.0290%" height="15" fill="rgb(236,182,29)" fg:x="67181" fg:w="31"/><text x="63.1206%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (26 samples, 0.02%)</title><rect x="62.8753%" y="229" width="0.0243%" height="15" fill="rgb(244,120,48)" fg:x="67186" fg:w="26"/><text x="63.1253%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="62.8753%" y="213" width="0.0243%" height="15" fill="rgb(206,71,34)" fg:x="67186" fg:w="26"/><text x="63.1253%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="62.8753%" y="197" width="0.0243%" height="15" fill="rgb(242,32,6)" fg:x="67186" fg:w="26"/><text x="63.1253%" y="207.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (57 samples, 0.05%)</title><rect x="62.8500%" y="581" width="0.0533%" height="15" fill="rgb(241,35,3)" fg:x="67159" fg:w="57"/><text x="63.1000%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (41 samples, 0.04%)</title><rect x="62.8650%" y="565" width="0.0384%" height="15" fill="rgb(222,62,19)" fg:x="67175" fg:w="41"/><text x="63.1150%" y="575.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (41 samples, 0.04%)</title><rect x="62.8650%" y="549" width="0.0384%" height="15" fill="rgb(223,110,41)" fg:x="67175" fg:w="41"/><text x="63.1150%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 0.04%)</title><rect x="62.9118%" y="517" width="0.0440%" height="15" fill="rgb(208,224,4)" fg:x="67225" fg:w="47"/><text x="63.1618%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (11 samples, 0.01%)</title><rect x="62.9632%" y="469" width="0.0103%" height="15" fill="rgb(241,137,19)" fg:x="67280" fg:w="11"/><text x="63.2132%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="62.9632%" y="453" width="0.0103%" height="15" fill="rgb(244,24,17)" fg:x="67280" fg:w="11"/><text x="63.2132%" y="463.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (11 samples, 0.01%)</title><rect x="62.9632%" y="437" width="0.0103%" height="15" fill="rgb(245,178,49)" fg:x="67280" fg:w="11"/><text x="63.2132%" y="447.50"></text></g><g><title>abi_stable::erased_types::iterator::next (32 samples, 0.03%)</title><rect x="62.9735%" y="469" width="0.0299%" height="15" fill="rgb(219,160,38)" fg:x="67291" fg:w="32"/><text x="63.2235%" y="479.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (19 samples, 0.02%)</title><rect x="62.9857%" y="453" width="0.0178%" height="15" fill="rgb(228,137,14)" fg:x="67304" fg:w="19"/><text x="63.2357%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.06%)</title><rect x="62.9558%" y="501" width="0.0599%" height="15" fill="rgb(237,134,11)" fg:x="67272" fg:w="64"/><text x="63.2058%" y="511.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (64 samples, 0.06%)</title><rect x="62.9558%" y="485" width="0.0599%" height="15" fill="rgb(211,126,44)" fg:x="67272" fg:w="64"/><text x="63.2058%" y="495.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (13 samples, 0.01%)</title><rect x="63.0035%" y="469" width="0.0122%" height="15" fill="rgb(226,171,33)" fg:x="67323" fg:w="13"/><text x="63.2535%" y="479.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (13 samples, 0.01%)</title><rect x="63.0035%" y="453" width="0.0122%" height="15" fill="rgb(253,99,13)" fg:x="67323" fg:w="13"/><text x="63.2535%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="63.0493%" y="373" width="0.0131%" height="15" fill="rgb(244,48,7)" fg:x="67372" fg:w="14"/><text x="63.2993%" y="383.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="63.0493%" y="357" width="0.0131%" height="15" fill="rgb(244,217,54)" fg:x="67372" fg:w="14"/><text x="63.2993%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="63.0493%" y="341" width="0.0131%" height="15" fill="rgb(224,15,18)" fg:x="67372" fg:w="14"/><text x="63.2993%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="63.0493%" y="325" width="0.0131%" height="15" fill="rgb(244,99,12)" fg:x="67372" fg:w="14"/><text x="63.2993%" y="335.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="63.0493%" y="309" width="0.0131%" height="15" fill="rgb(233,226,8)" fg:x="67372" fg:w="14"/><text x="63.2993%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="63.0493%" y="293" width="0.0131%" height="15" fill="rgb(229,211,3)" fg:x="67372" fg:w="14"/><text x="63.2993%" y="303.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (51 samples, 0.05%)</title><rect x="63.0390%" y="389" width="0.0477%" height="15" fill="rgb(216,140,21)" fg:x="67361" fg:w="51"/><text x="63.2890%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="63.0624%" y="373" width="0.0243%" height="15" fill="rgb(234,122,30)" fg:x="67386" fg:w="26"/><text x="63.3124%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (26 samples, 0.02%)</title><rect x="63.0624%" y="357" width="0.0243%" height="15" fill="rgb(236,25,46)" fg:x="67386" fg:w="26"/><text x="63.3124%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (26 samples, 0.02%)</title><rect x="63.0624%" y="341" width="0.0243%" height="15" fill="rgb(217,52,54)" fg:x="67386" fg:w="26"/><text x="63.3124%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue)&gt;&gt; (26 samples, 0.02%)</title><rect x="63.0624%" y="325" width="0.0243%" height="15" fill="rgb(222,29,26)" fg:x="67386" fg:w="26"/><text x="63.3124%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="63.0652%" y="309" width="0.0215%" height="15" fill="rgb(216,177,29)" fg:x="67389" fg:w="23"/><text x="63.3152%" y="319.50"></text></g><g><title>aligned_size (17 samples, 0.02%)</title><rect x="63.0886%" y="373" width="0.0159%" height="15" fill="rgb(247,136,51)" fg:x="67414" fg:w="17"/><text x="63.3386%" y="383.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="63.1598%" y="245" width="0.0197%" height="15" fill="rgb(231,47,47)" fg:x="67490" fg:w="21"/><text x="63.4098%" y="255.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="63.1598%" y="229" width="0.0197%" height="15" fill="rgb(211,192,36)" fg:x="67490" fg:w="21"/><text x="63.4098%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (65 samples, 0.06%)</title><rect x="63.1270%" y="293" width="0.0608%" height="15" fill="rgb(229,156,32)" fg:x="67455" fg:w="65"/><text x="63.3770%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (65 samples, 0.06%)</title><rect x="63.1270%" y="277" width="0.0608%" height="15" fill="rgb(248,213,20)" fg:x="67455" fg:w="65"/><text x="63.3770%" y="287.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (63 samples, 0.06%)</title><rect x="63.1289%" y="261" width="0.0590%" height="15" fill="rgb(217,64,7)" fg:x="67457" fg:w="63"/><text x="63.3789%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (87 samples, 0.08%)</title><rect x="63.1120%" y="325" width="0.0814%" height="15" fill="rgb(232,142,8)" fg:x="67439" fg:w="87"/><text x="63.3620%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (87 samples, 0.08%)</title><rect x="63.1120%" y="309" width="0.0814%" height="15" fill="rgb(224,92,44)" fg:x="67439" fg:w="87"/><text x="63.3620%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (89 samples, 0.08%)</title><rect x="63.1120%" y="357" width="0.0833%" height="15" fill="rgb(214,169,17)" fg:x="67439" fg:w="89"/><text x="63.3620%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (89 samples, 0.08%)</title><rect x="63.1120%" y="341" width="0.0833%" height="15" fill="rgb(210,59,37)" fg:x="67439" fg:w="89"/><text x="63.3620%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (101 samples, 0.09%)</title><rect x="63.1055%" y="373" width="0.0945%" height="15" fill="rgb(214,116,48)" fg:x="67432" fg:w="101"/><text x="63.3555%" y="383.50"></text></g><g><title>rust_dealloc (134 samples, 0.13%)</title><rect x="63.0868%" y="389" width="0.1254%" height="15" fill="rgb(244,191,6)" fg:x="67412" fg:w="134"/><text x="63.3368%" y="399.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="63.2000%" y="373" width="0.0122%" height="15" fill="rgb(241,50,52)" fg:x="67533" fg:w="13"/><text x="63.4500%" y="383.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (389 samples, 0.36%)</title><rect x="62.8500%" y="693" width="0.3640%" height="15" fill="rgb(236,75,39)" fg:x="67159" fg:w="389"/><text x="63.1000%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (389 samples, 0.36%)</title><rect x="62.8500%" y="677" width="0.3640%" height="15" fill="rgb(236,99,0)" fg:x="67159" fg:w="389"/><text x="63.1000%" y="687.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (389 samples, 0.36%)</title><rect x="62.8500%" y="661" width="0.3640%" height="15" fill="rgb(207,202,15)" fg:x="67159" fg:w="389"/><text x="63.1000%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (389 samples, 0.36%)</title><rect x="62.8500%" y="645" width="0.3640%" height="15" fill="rgb(233,207,14)" fg:x="67159" fg:w="389"/><text x="63.1000%" y="655.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (389 samples, 0.36%)</title><rect x="62.8500%" y="629" width="0.3640%" height="15" fill="rgb(226,27,51)" fg:x="67159" fg:w="389"/><text x="63.1000%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (389 samples, 0.36%)</title><rect x="62.8500%" y="613" width="0.3640%" height="15" fill="rgb(206,104,42)" fg:x="67159" fg:w="389"/><text x="63.1000%" y="623.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (389 samples, 0.36%)</title><rect x="62.8500%" y="597" width="0.3640%" height="15" fill="rgb(212,225,4)" fg:x="67159" fg:w="389"/><text x="63.1000%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (332 samples, 0.31%)</title><rect x="62.9033%" y="581" width="0.3107%" height="15" fill="rgb(233,96,42)" fg:x="67216" fg:w="332"/><text x="63.1533%" y="591.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::FromIterator&lt;(K,V)&gt; for halfbrown::HashMap&lt;K,V,S&gt;&gt;::from_iter (332 samples, 0.31%)</title><rect x="62.9033%" y="565" width="0.3107%" height="15" fill="rgb(229,21,32)" fg:x="67216" fg:w="332"/><text x="63.1533%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (332 samples, 0.31%)</title><rect x="62.9033%" y="549" width="0.3107%" height="15" fill="rgb(226,216,24)" fg:x="67216" fg:w="332"/><text x="63.1533%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (332 samples, 0.31%)</title><rect x="62.9033%" y="533" width="0.3107%" height="15" fill="rgb(221,163,17)" fg:x="67216" fg:w="332"/><text x="63.1533%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (276 samples, 0.26%)</title><rect x="62.9558%" y="517" width="0.2583%" height="15" fill="rgb(216,216,42)" fg:x="67272" fg:w="276"/><text x="63.2058%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt; (212 samples, 0.20%)</title><rect x="63.0156%" y="501" width="0.1984%" height="15" fill="rgb(240,118,7)" fg:x="67336" fg:w="212"/><text x="63.2656%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (212 samples, 0.20%)</title><rect x="63.0156%" y="485" width="0.1984%" height="15" fill="rgb(221,67,37)" fg:x="67336" fg:w="212"/><text x="63.2656%" y="495.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (212 samples, 0.20%)</title><rect x="63.0156%" y="469" width="0.1984%" height="15" fill="rgb(241,32,44)" fg:x="67336" fg:w="212"/><text x="63.2656%" y="479.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (200 samples, 0.19%)</title><rect x="63.0269%" y="453" width="0.1872%" height="15" fill="rgb(235,204,43)" fg:x="67348" fg:w="200"/><text x="63.2769%" y="463.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (195 samples, 0.18%)</title><rect x="63.0316%" y="437" width="0.1825%" height="15" fill="rgb(213,116,10)" fg:x="67353" fg:w="195"/><text x="63.2816%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (195 samples, 0.18%)</title><rect x="63.0316%" y="421" width="0.1825%" height="15" fill="rgb(239,15,48)" fg:x="67353" fg:w="195"/><text x="63.2816%" y="431.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (195 samples, 0.18%)</title><rect x="63.0316%" y="405" width="0.1825%" height="15" fill="rgb(207,123,36)" fg:x="67353" fg:w="195"/><text x="63.2816%" y="415.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="63.2309%" y="293" width="0.0103%" height="15" fill="rgb(209,103,30)" fg:x="67566" fg:w="11"/><text x="63.4809%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::empty (29 samples, 0.03%)</title><rect x="63.2552%" y="277" width="0.0271%" height="15" fill="rgb(238,100,19)" fg:x="67592" fg:w="29"/><text x="63.5052%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (29 samples, 0.03%)</title><rect x="63.2552%" y="261" width="0.0271%" height="15" fill="rgb(244,30,14)" fg:x="67592" fg:w="29"/><text x="63.5052%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (299 samples, 0.28%)</title><rect x="63.2225%" y="325" width="0.2798%" height="15" fill="rgb(249,174,6)" fg:x="67557" fg:w="299"/><text x="63.4725%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (299 samples, 0.28%)</title><rect x="63.2225%" y="309" width="0.2798%" height="15" fill="rgb(235,213,41)" fg:x="67557" fg:w="299"/><text x="63.4725%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (279 samples, 0.26%)</title><rect x="63.2412%" y="293" width="0.2611%" height="15" fill="rgb(213,118,6)" fg:x="67577" fg:w="279"/><text x="63.4912%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (235 samples, 0.22%)</title><rect x="63.2824%" y="277" width="0.2199%" height="15" fill="rgb(235,44,51)" fg:x="67621" fg:w="235"/><text x="63.5324%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (235 samples, 0.22%)</title><rect x="63.2824%" y="261" width="0.2199%" height="15" fill="rgb(217,9,53)" fg:x="67621" fg:w="235"/><text x="63.5324%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (312 samples, 0.29%)</title><rect x="63.2140%" y="629" width="0.2920%" height="15" fill="rgb(237,172,34)" fg:x="67548" fg:w="312"/><text x="63.4640%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (312 samples, 0.29%)</title><rect x="63.2140%" y="613" width="0.2920%" height="15" fill="rgb(206,206,11)" fg:x="67548" fg:w="312"/><text x="63.4640%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (312 samples, 0.29%)</title><rect x="63.2140%" y="597" width="0.2920%" height="15" fill="rgb(214,149,29)" fg:x="67548" fg:w="312"/><text x="63.4640%" y="607.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (312 samples, 0.29%)</title><rect x="63.2140%" y="581" width="0.2920%" height="15" fill="rgb(208,123,3)" fg:x="67548" fg:w="312"/><text x="63.4640%" y="591.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (312 samples, 0.29%)</title><rect x="63.2140%" y="565" width="0.2920%" height="15" fill="rgb(229,126,4)" fg:x="67548" fg:w="312"/><text x="63.4640%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (312 samples, 0.29%)</title><rect x="63.2140%" y="549" width="0.2920%" height="15" fill="rgb(222,92,36)" fg:x="67548" fg:w="312"/><text x="63.4640%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (312 samples, 0.29%)</title><rect x="63.2140%" y="533" width="0.2920%" height="15" fill="rgb(216,39,41)" fg:x="67548" fg:w="312"/><text x="63.4640%" y="543.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (312 samples, 0.29%)</title><rect x="63.2140%" y="517" width="0.2920%" height="15" fill="rgb(253,127,28)" fg:x="67548" fg:w="312"/><text x="63.4640%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (312 samples, 0.29%)</title><rect x="63.2140%" y="501" width="0.2920%" height="15" fill="rgb(249,152,51)" fg:x="67548" fg:w="312"/><text x="63.4640%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (311 samples, 0.29%)</title><rect x="63.2150%" y="485" width="0.2910%" height="15" fill="rgb(209,123,42)" fg:x="67549" fg:w="311"/><text x="63.4650%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (311 samples, 0.29%)</title><rect x="63.2150%" y="469" width="0.2910%" height="15" fill="rgb(241,118,22)" fg:x="67549" fg:w="311"/><text x="63.4650%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (311 samples, 0.29%)</title><rect x="63.2150%" y="453" width="0.2910%" height="15" fill="rgb(208,25,7)" fg:x="67549" fg:w="311"/><text x="63.4650%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (311 samples, 0.29%)</title><rect x="63.2150%" y="437" width="0.2910%" height="15" fill="rgb(243,144,39)" fg:x="67549" fg:w="311"/><text x="63.4650%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (311 samples, 0.29%)</title><rect x="63.2150%" y="421" width="0.2910%" height="15" fill="rgb(250,50,5)" fg:x="67549" fg:w="311"/><text x="63.4650%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (311 samples, 0.29%)</title><rect x="63.2150%" y="405" width="0.2910%" height="15" fill="rgb(207,67,11)" fg:x="67549" fg:w="311"/><text x="63.4650%" y="415.50"></text></g><g><title>alloc::alloc::alloc (311 samples, 0.29%)</title><rect x="63.2150%" y="389" width="0.2910%" height="15" fill="rgb(245,204,40)" fg:x="67549" fg:w="311"/><text x="63.4650%" y="399.50"></text></g><g><title>__rg_alloc (311 samples, 0.29%)</title><rect x="63.2150%" y="373" width="0.2910%" height="15" fill="rgb(238,228,24)" fg:x="67549" fg:w="311"/><text x="63.4650%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (311 samples, 0.29%)</title><rect x="63.2150%" y="357" width="0.2910%" height="15" fill="rgb(217,116,22)" fg:x="67549" fg:w="311"/><text x="63.4650%" y="367.50"></text></g><g><title>rust_alloc (311 samples, 0.29%)</title><rect x="63.2150%" y="341" width="0.2910%" height="15" fill="rgb(234,98,12)" fg:x="67549" fg:w="311"/><text x="63.4650%" y="351.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (32 samples, 0.03%)</title><rect x="63.5060%" y="613" width="0.0299%" height="15" fill="rgb(242,170,50)" fg:x="67860" fg:w="32"/><text x="63.7560%" y="623.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (32 samples, 0.03%)</title><rect x="63.5060%" y="597" width="0.0299%" height="15" fill="rgb(235,7,5)" fg:x="67860" fg:w="32"/><text x="63.7560%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (578 samples, 0.54%)</title><rect x="63.5772%" y="597" width="0.5409%" height="15" fill="rgb(241,114,28)" fg:x="67936" fg:w="578"/><text x="63.8272%" y="607.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="64.1274%" y="549" width="0.0159%" height="15" fill="rgb(246,112,42)" fg:x="68524" fg:w="17"/><text x="64.3774%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (14 samples, 0.01%)</title><rect x="64.1611%" y="533" width="0.0131%" height="15" fill="rgb(248,228,14)" fg:x="68560" fg:w="14"/><text x="64.4111%" y="543.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (14 samples, 0.01%)</title><rect x="64.1611%" y="517" width="0.0131%" height="15" fill="rgb(208,133,18)" fg:x="68560" fg:w="14"/><text x="64.4111%" y="527.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="64.1611%" y="501" width="0.0131%" height="15" fill="rgb(207,35,49)" fg:x="68560" fg:w="14"/><text x="64.4111%" y="511.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="64.1611%" y="485" width="0.0131%" height="15" fill="rgb(205,68,36)" fg:x="68560" fg:w="14"/><text x="64.4111%" y="495.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="64.1611%" y="469" width="0.0131%" height="15" fill="rgb(245,62,40)" fg:x="68560" fg:w="14"/><text x="64.4111%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="64.1752%" y="469" width="0.0112%" height="15" fill="rgb(228,27,24)" fg:x="68575" fg:w="12"/><text x="64.4252%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="64.1752%" y="453" width="0.0112%" height="15" fill="rgb(253,19,12)" fg:x="68575" fg:w="12"/><text x="64.4252%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (14 samples, 0.01%)</title><rect x="64.1752%" y="485" width="0.0131%" height="15" fill="rgb(232,28,20)" fg:x="68575" fg:w="14"/><text x="64.4252%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (17 samples, 0.02%)</title><rect x="64.1742%" y="501" width="0.0159%" height="15" fill="rgb(218,35,51)" fg:x="68574" fg:w="17"/><text x="64.4242%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (136 samples, 0.13%)</title><rect x="64.1742%" y="533" width="0.1273%" height="15" fill="rgb(212,90,40)" fg:x="68574" fg:w="136"/><text x="64.4242%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (136 samples, 0.13%)</title><rect x="64.1742%" y="517" width="0.1273%" height="15" fill="rgb(220,172,12)" fg:x="68574" fg:w="136"/><text x="64.4242%" y="527.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (119 samples, 0.11%)</title><rect x="64.1901%" y="501" width="0.1114%" height="15" fill="rgb(226,159,20)" fg:x="68591" fg:w="119"/><text x="64.4401%" y="511.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (106 samples, 0.10%)</title><rect x="64.2023%" y="485" width="0.0992%" height="15" fill="rgb(234,205,16)" fg:x="68604" fg:w="106"/><text x="64.4523%" y="495.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (106 samples, 0.10%)</title><rect x="64.2023%" y="469" width="0.0992%" height="15" fill="rgb(207,9,39)" fg:x="68604" fg:w="106"/><text x="64.4523%" y="479.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (106 samples, 0.10%)</title><rect x="64.2023%" y="453" width="0.0992%" height="15" fill="rgb(249,143,15)" fg:x="68604" fg:w="106"/><text x="64.4523%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (15 samples, 0.01%)</title><rect x="64.3165%" y="501" width="0.0140%" height="15" fill="rgb(253,133,29)" fg:x="68726" fg:w="15"/><text x="64.5665%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (15 samples, 0.01%)</title><rect x="64.3165%" y="485" width="0.0140%" height="15" fill="rgb(221,187,0)" fg:x="68726" fg:w="15"/><text x="64.5665%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="64.3015%" y="533" width="0.0318%" height="15" fill="rgb(205,204,26)" fg:x="68710" fg:w="34"/><text x="64.5515%" y="543.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (29 samples, 0.03%)</title><rect x="64.3062%" y="517" width="0.0271%" height="15" fill="rgb(224,68,54)" fg:x="68715" fg:w="29"/><text x="64.5562%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (11 samples, 0.01%)</title><rect x="64.3361%" y="485" width="0.0103%" height="15" fill="rgb(209,67,4)" fg:x="68747" fg:w="11"/><text x="64.5861%" y="495.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (11 samples, 0.01%)</title><rect x="64.3361%" y="469" width="0.0103%" height="15" fill="rgb(228,229,18)" fg:x="68747" fg:w="11"/><text x="64.5861%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="64.3464%" y="485" width="0.0103%" height="15" fill="rgb(231,89,13)" fg:x="68758" fg:w="11"/><text x="64.5964%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="64.3352%" y="501" width="0.0225%" height="15" fill="rgb(210,182,18)" fg:x="68746" fg:w="24"/><text x="64.5852%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="64.3333%" y="533" width="0.0262%" height="15" fill="rgb(240,105,2)" fg:x="68744" fg:w="28"/><text x="64.5833%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.03%)</title><rect x="64.3342%" y="517" width="0.0253%" height="15" fill="rgb(207,170,50)" fg:x="68745" fg:w="27"/><text x="64.5842%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::empty (39 samples, 0.04%)</title><rect x="64.3595%" y="533" width="0.0365%" height="15" fill="rgb(232,133,24)" fg:x="68772" fg:w="39"/><text x="64.6095%" y="543.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (39 samples, 0.04%)</title><rect x="64.3595%" y="517" width="0.0365%" height="15" fill="rgb(235,166,27)" fg:x="68772" fg:w="39"/><text x="64.6095%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (469 samples, 0.44%)</title><rect x="64.1274%" y="581" width="0.4389%" height="15" fill="rgb(209,19,13)" fg:x="68524" fg:w="469"/><text x="64.3774%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (469 samples, 0.44%)</title><rect x="64.1274%" y="565" width="0.4389%" height="15" fill="rgb(226,79,39)" fg:x="68524" fg:w="469"/><text x="64.3774%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (442 samples, 0.41%)</title><rect x="64.1527%" y="549" width="0.4136%" height="15" fill="rgb(222,163,10)" fg:x="68551" fg:w="442"/><text x="64.4027%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::take (182 samples, 0.17%)</title><rect x="64.3960%" y="533" width="0.1703%" height="15" fill="rgb(214,44,19)" fg:x="68811" fg:w="182"/><text x="64.6460%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (182 samples, 0.17%)</title><rect x="64.3960%" y="517" width="0.1703%" height="15" fill="rgb(210,217,13)" fg:x="68811" fg:w="182"/><text x="64.6460%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (3,795 samples, 3.55%)</title><rect x="61.0214%" y="981" width="3.5515%" height="15" fill="rgb(237,61,54)" fg:x="65205" fg:w="3795"/><text x="61.2714%" y="991.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,841 samples, 1.72%)</title><rect x="62.8500%" y="965" width="1.7229%" height="15" fill="rgb(226,184,24)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="975.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,841 samples, 1.72%)</title><rect x="62.8500%" y="949" width="1.7229%" height="15" fill="rgb(223,226,4)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="959.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,841 samples, 1.72%)</title><rect x="62.8500%" y="933" width="1.7229%" height="15" fill="rgb(210,26,41)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,841 samples, 1.72%)</title><rect x="62.8500%" y="917" width="1.7229%" height="15" fill="rgb(220,221,6)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="927.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,841 samples, 1.72%)</title><rect x="62.8500%" y="901" width="1.7229%" height="15" fill="rgb(225,89,49)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,841 samples, 1.72%)</title><rect x="62.8500%" y="885" width="1.7229%" height="15" fill="rgb(218,70,45)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="895.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,841 samples, 1.72%)</title><rect x="62.8500%" y="869" width="1.7229%" height="15" fill="rgb(238,166,21)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="879.50"></text></g><g><title>std::panic::catch_unwind (1,841 samples, 1.72%)</title><rect x="62.8500%" y="853" width="1.7229%" height="15" fill="rgb(224,141,44)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="863.50"></text></g><g><title>std::panicking::try (1,841 samples, 1.72%)</title><rect x="62.8500%" y="837" width="1.7229%" height="15" fill="rgb(230,12,49)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="847.50"></text></g><g><title>std::panicking::try::do_call (1,841 samples, 1.72%)</title><rect x="62.8500%" y="821" width="1.7229%" height="15" fill="rgb(212,174,12)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,841 samples, 1.72%)</title><rect x="62.8500%" y="805" width="1.7229%" height="15" fill="rgb(246,67,9)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,841 samples, 1.72%)</title><rect x="62.8500%" y="789" width="1.7229%" height="15" fill="rgb(239,35,23)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,841 samples, 1.72%)</title><rect x="62.8500%" y="773" width="1.7229%" height="15" fill="rgb(211,167,0)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="783.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,841 samples, 1.72%)</title><rect x="62.8500%" y="757" width="1.7229%" height="15" fill="rgb(225,119,45)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,841 samples, 1.72%)</title><rect x="62.8500%" y="741" width="1.7229%" height="15" fill="rgb(210,162,6)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,841 samples, 1.72%)</title><rect x="62.8500%" y="725" width="1.7229%" height="15" fill="rgb(208,118,35)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,841 samples, 1.72%)</title><rect x="62.8500%" y="709" width="1.7229%" height="15" fill="rgb(239,4,53)" fg:x="67159" fg:w="1841"/><text x="63.1000%" y="719.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,452 samples, 1.36%)</title><rect x="63.2140%" y="693" width="1.3588%" height="15" fill="rgb(213,130,21)" fg:x="67548" fg:w="1452"/><text x="63.4640%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,452 samples, 1.36%)</title><rect x="63.2140%" y="677" width="1.3588%" height="15" fill="rgb(235,148,0)" fg:x="67548" fg:w="1452"/><text x="63.4640%" y="687.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,452 samples, 1.36%)</title><rect x="63.2140%" y="661" width="1.3588%" height="15" fill="rgb(244,224,18)" fg:x="67548" fg:w="1452"/><text x="63.4640%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,452 samples, 1.36%)</title><rect x="63.2140%" y="645" width="1.3588%" height="15" fill="rgb(211,214,4)" fg:x="67548" fg:w="1452"/><text x="63.4640%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (1,140 samples, 1.07%)</title><rect x="63.5060%" y="629" width="1.0669%" height="15" fill="rgb(206,119,25)" fg:x="67860" fg:w="1140"/><text x="63.7560%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (1,108 samples, 1.04%)</title><rect x="63.5360%" y="613" width="1.0369%" height="15" fill="rgb(243,93,47)" fg:x="67892" fg:w="1108"/><text x="63.7860%" y="623.50"></text></g><g><title>rust_alloc (483 samples, 0.45%)</title><rect x="64.1209%" y="597" width="0.4520%" height="15" fill="rgb(224,194,6)" fg:x="68517" fg:w="483"/><text x="64.3709%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (45 samples, 0.04%)</title><rect x="66.2125%" y="373" width="0.0421%" height="15" fill="rgb(243,229,6)" fg:x="70752" fg:w="45"/><text x="66.4625%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (45 samples, 0.04%)</title><rect x="66.2125%" y="357" width="0.0421%" height="15" fill="rgb(207,23,50)" fg:x="70752" fg:w="45"/><text x="66.4625%" y="367.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (39 samples, 0.04%)</title><rect x="66.2181%" y="341" width="0.0365%" height="15" fill="rgb(253,192,32)" fg:x="70758" fg:w="39"/><text x="66.4681%" y="351.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (32 samples, 0.03%)</title><rect x="66.2246%" y="325" width="0.0299%" height="15" fill="rgb(213,21,6)" fg:x="70765" fg:w="32"/><text x="66.4746%" y="335.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (32 samples, 0.03%)</title><rect x="66.2246%" y="309" width="0.0299%" height="15" fill="rgb(243,151,13)" fg:x="70765" fg:w="32"/><text x="66.4746%" y="319.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (32 samples, 0.03%)</title><rect x="66.2246%" y="293" width="0.0299%" height="15" fill="rgb(233,165,41)" fg:x="70765" fg:w="32"/><text x="66.4746%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::empty (47 samples, 0.04%)</title><rect x="66.2574%" y="373" width="0.0440%" height="15" fill="rgb(246,176,45)" fg:x="70800" fg:w="47"/><text x="66.5074%" y="383.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (47 samples, 0.04%)</title><rect x="66.2574%" y="357" width="0.0440%" height="15" fill="rgb(217,170,52)" fg:x="70800" fg:w="47"/><text x="66.5074%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (660 samples, 0.62%)</title><rect x="66.1835%" y="421" width="0.6177%" height="15" fill="rgb(214,203,54)" fg:x="70721" fg:w="660"/><text x="66.4335%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (653 samples, 0.61%)</title><rect x="66.1900%" y="405" width="0.6111%" height="15" fill="rgb(248,215,49)" fg:x="70728" fg:w="653"/><text x="66.4400%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (638 samples, 0.60%)</title><rect x="66.2041%" y="389" width="0.5971%" height="15" fill="rgb(208,46,10)" fg:x="70743" fg:w="638"/><text x="66.4541%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (534 samples, 0.50%)</title><rect x="66.3014%" y="373" width="0.4997%" height="15" fill="rgb(254,5,31)" fg:x="70847" fg:w="534"/><text x="66.5514%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (534 samples, 0.50%)</title><rect x="66.3014%" y="357" width="0.4997%" height="15" fill="rgb(222,104,33)" fg:x="70847" fg:w="534"/><text x="66.5514%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (717 samples, 0.67%)</title><rect x="66.1432%" y="565" width="0.6710%" height="15" fill="rgb(248,49,16)" fg:x="70678" fg:w="717"/><text x="66.3932%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (717 samples, 0.67%)</title><rect x="66.1432%" y="549" width="0.6710%" height="15" fill="rgb(232,198,41)" fg:x="70678" fg:w="717"/><text x="66.3932%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (710 samples, 0.66%)</title><rect x="66.1498%" y="533" width="0.6644%" height="15" fill="rgb(214,125,3)" fg:x="70685" fg:w="710"/><text x="66.3998%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (710 samples, 0.66%)</title><rect x="66.1498%" y="517" width="0.6644%" height="15" fill="rgb(229,220,28)" fg:x="70685" fg:w="710"/><text x="66.3998%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (710 samples, 0.66%)</title><rect x="66.1498%" y="501" width="0.6644%" height="15" fill="rgb(222,64,37)" fg:x="70685" fg:w="710"/><text x="66.3998%" y="511.50"></text></g><g><title>alloc::alloc::alloc (702 samples, 0.66%)</title><rect x="66.1573%" y="485" width="0.6570%" height="15" fill="rgb(249,184,13)" fg:x="70693" fg:w="702"/><text x="66.4073%" y="495.50"></text></g><g><title>__rg_alloc (702 samples, 0.66%)</title><rect x="66.1573%" y="469" width="0.6570%" height="15" fill="rgb(252,176,6)" fg:x="70693" fg:w="702"/><text x="66.4073%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (702 samples, 0.66%)</title><rect x="66.1573%" y="453" width="0.6570%" height="15" fill="rgb(228,153,7)" fg:x="70693" fg:w="702"/><text x="66.4073%" y="463.50"></text></g><g><title>rust_alloc (676 samples, 0.63%)</title><rect x="66.1816%" y="437" width="0.6326%" height="15" fill="rgb(242,193,5)" fg:x="70719" fg:w="676"/><text x="66.4316%" y="447.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="66.8011%" y="421" width="0.0131%" height="15" fill="rgb(232,140,9)" fg:x="71381" fg:w="14"/><text x="67.0511%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (822 samples, 0.77%)</title><rect x="66.0871%" y="677" width="0.7693%" height="15" fill="rgb(213,222,16)" fg:x="70618" fg:w="822"/><text x="66.3371%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (794 samples, 0.74%)</title><rect x="66.1133%" y="661" width="0.7431%" height="15" fill="rgb(222,75,50)" fg:x="70646" fg:w="794"/><text x="66.3633%" y="671.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (762 samples, 0.71%)</title><rect x="66.1432%" y="645" width="0.7131%" height="15" fill="rgb(205,180,2)" fg:x="70678" fg:w="762"/><text x="66.3932%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (762 samples, 0.71%)</title><rect x="66.1432%" y="629" width="0.7131%" height="15" fill="rgb(216,34,7)" fg:x="70678" fg:w="762"/><text x="66.3932%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (762 samples, 0.71%)</title><rect x="66.1432%" y="613" width="0.7131%" height="15" fill="rgb(253,16,32)" fg:x="70678" fg:w="762"/><text x="66.3932%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (762 samples, 0.71%)</title><rect x="66.1432%" y="597" width="0.7131%" height="15" fill="rgb(208,97,28)" fg:x="70678" fg:w="762"/><text x="66.3932%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (762 samples, 0.71%)</title><rect x="66.1432%" y="581" width="0.7131%" height="15" fill="rgb(225,92,11)" fg:x="70678" fg:w="762"/><text x="66.3932%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (45 samples, 0.04%)</title><rect x="66.8142%" y="565" width="0.0421%" height="15" fill="rgb(243,38,12)" fg:x="71395" fg:w="45"/><text x="67.0642%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45 samples, 0.04%)</title><rect x="66.8142%" y="549" width="0.0421%" height="15" fill="rgb(208,139,16)" fg:x="71395" fg:w="45"/><text x="67.0642%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (45 samples, 0.04%)</title><rect x="66.8142%" y="533" width="0.0421%" height="15" fill="rgb(227,24,9)" fg:x="71395" fg:w="45"/><text x="67.0642%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (39 samples, 0.04%)</title><rect x="66.8694%" y="661" width="0.0365%" height="15" fill="rgb(206,62,11)" fg:x="71454" fg:w="39"/><text x="67.1194%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (17 samples, 0.02%)</title><rect x="66.8900%" y="645" width="0.0159%" height="15" fill="rgb(228,134,27)" fg:x="71476" fg:w="17"/><text x="67.1400%" y="655.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="66.9284%" y="325" width="0.0112%" height="15" fill="rgb(205,55,33)" fg:x="71517" fg:w="12"/><text x="67.1784%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (125 samples, 0.12%)</title><rect x="66.9396%" y="325" width="0.1170%" height="15" fill="rgb(243,75,43)" fg:x="71529" fg:w="125"/><text x="67.1896%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (125 samples, 0.12%)</title><rect x="66.9396%" y="309" width="0.1170%" height="15" fill="rgb(223,27,42)" fg:x="71529" fg:w="125"/><text x="67.1896%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (116 samples, 0.11%)</title><rect x="66.9480%" y="293" width="0.1086%" height="15" fill="rgb(232,189,33)" fg:x="71538" fg:w="116"/><text x="67.1980%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (96 samples, 0.09%)</title><rect x="66.9668%" y="277" width="0.0898%" height="15" fill="rgb(210,9,39)" fg:x="71558" fg:w="96"/><text x="67.2168%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (96 samples, 0.09%)</title><rect x="66.9668%" y="261" width="0.0898%" height="15" fill="rgb(242,85,26)" fg:x="71558" fg:w="96"/><text x="67.2168%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (160 samples, 0.15%)</title><rect x="66.9134%" y="469" width="0.1497%" height="15" fill="rgb(248,44,4)" fg:x="71501" fg:w="160"/><text x="67.1634%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (160 samples, 0.15%)</title><rect x="66.9134%" y="453" width="0.1497%" height="15" fill="rgb(250,96,46)" fg:x="71501" fg:w="160"/><text x="67.1634%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (152 samples, 0.14%)</title><rect x="66.9209%" y="437" width="0.1422%" height="15" fill="rgb(229,116,26)" fg:x="71509" fg:w="152"/><text x="67.1709%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (152 samples, 0.14%)</title><rect x="66.9209%" y="421" width="0.1422%" height="15" fill="rgb(246,94,34)" fg:x="71509" fg:w="152"/><text x="67.1709%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (152 samples, 0.14%)</title><rect x="66.9209%" y="405" width="0.1422%" height="15" fill="rgb(251,73,21)" fg:x="71509" fg:w="152"/><text x="67.1709%" y="415.50"></text></g><g><title>alloc::alloc::alloc (150 samples, 0.14%)</title><rect x="66.9228%" y="389" width="0.1404%" height="15" fill="rgb(254,121,25)" fg:x="71511" fg:w="150"/><text x="67.1728%" y="399.50"></text></g><g><title>__rg_alloc (150 samples, 0.14%)</title><rect x="66.9228%" y="373" width="0.1404%" height="15" fill="rgb(215,161,49)" fg:x="71511" fg:w="150"/><text x="67.1728%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (150 samples, 0.14%)</title><rect x="66.9228%" y="357" width="0.1404%" height="15" fill="rgb(221,43,13)" fg:x="71511" fg:w="150"/><text x="67.1728%" y="367.50"></text></g><g><title>rust_alloc (144 samples, 0.13%)</title><rect x="66.9284%" y="341" width="0.1348%" height="15" fill="rgb(249,5,37)" fg:x="71517" fg:w="144"/><text x="67.1784%" y="351.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (244 samples, 0.23%)</title><rect x="66.9059%" y="581" width="0.2283%" height="15" fill="rgb(226,25,44)" fg:x="71493" fg:w="244"/><text x="67.1559%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (244 samples, 0.23%)</title><rect x="66.9059%" y="565" width="0.2283%" height="15" fill="rgb(238,189,16)" fg:x="71493" fg:w="244"/><text x="67.1559%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (236 samples, 0.22%)</title><rect x="66.9134%" y="549" width="0.2209%" height="15" fill="rgb(251,186,8)" fg:x="71501" fg:w="236"/><text x="67.1634%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (236 samples, 0.22%)</title><rect x="66.9134%" y="533" width="0.2209%" height="15" fill="rgb(254,34,31)" fg:x="71501" fg:w="236"/><text x="67.1634%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (236 samples, 0.22%)</title><rect x="66.9134%" y="517" width="0.2209%" height="15" fill="rgb(225,215,27)" fg:x="71501" fg:w="236"/><text x="67.1634%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (236 samples, 0.22%)</title><rect x="66.9134%" y="501" width="0.2209%" height="15" fill="rgb(221,192,48)" fg:x="71501" fg:w="236"/><text x="67.1634%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (236 samples, 0.22%)</title><rect x="66.9134%" y="485" width="0.2209%" height="15" fill="rgb(219,137,20)" fg:x="71501" fg:w="236"/><text x="67.1634%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (76 samples, 0.07%)</title><rect x="67.0632%" y="469" width="0.0711%" height="15" fill="rgb(219,84,11)" fg:x="71661" fg:w="76"/><text x="67.3132%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (71 samples, 0.07%)</title><rect x="67.0678%" y="453" width="0.0664%" height="15" fill="rgb(224,10,23)" fg:x="71666" fg:w="71"/><text x="67.3178%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (64 samples, 0.06%)</title><rect x="67.0744%" y="437" width="0.0599%" height="15" fill="rgb(248,22,39)" fg:x="71673" fg:w="64"/><text x="67.3244%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (164 samples, 0.15%)</title><rect x="67.1839%" y="437" width="0.1535%" height="15" fill="rgb(212,154,20)" fg:x="71790" fg:w="164"/><text x="67.4339%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (164 samples, 0.15%)</title><rect x="67.1839%" y="421" width="0.1535%" height="15" fill="rgb(236,199,50)" fg:x="71790" fg:w="164"/><text x="67.4339%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (153 samples, 0.14%)</title><rect x="67.1942%" y="405" width="0.1432%" height="15" fill="rgb(211,9,17)" fg:x="71801" fg:w="153"/><text x="67.4442%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (135 samples, 0.13%)</title><rect x="67.2110%" y="389" width="0.1263%" height="15" fill="rgb(243,216,36)" fg:x="71819" fg:w="135"/><text x="67.4610%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (135 samples, 0.13%)</title><rect x="67.2110%" y="373" width="0.1263%" height="15" fill="rgb(250,2,10)" fg:x="71819" fg:w="135"/><text x="67.4610%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (200 samples, 0.19%)</title><rect x="67.1530%" y="533" width="0.1872%" height="15" fill="rgb(226,50,48)" fg:x="71757" fg:w="200"/><text x="67.4030%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (200 samples, 0.19%)</title><rect x="67.1530%" y="517" width="0.1872%" height="15" fill="rgb(243,81,16)" fg:x="71757" fg:w="200"/><text x="67.4030%" y="527.50"></text></g><g><title>alloc::alloc::alloc (191 samples, 0.18%)</title><rect x="67.1614%" y="501" width="0.1787%" height="15" fill="rgb(250,14,2)" fg:x="71766" fg:w="191"/><text x="67.4114%" y="511.50"></text></g><g><title>__rg_alloc (191 samples, 0.18%)</title><rect x="67.1614%" y="485" width="0.1787%" height="15" fill="rgb(233,135,29)" fg:x="71766" fg:w="191"/><text x="67.4114%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (191 samples, 0.18%)</title><rect x="67.1614%" y="469" width="0.1787%" height="15" fill="rgb(224,64,43)" fg:x="71766" fg:w="191"/><text x="67.4114%" y="479.50"></text></g><g><title>rust_alloc (183 samples, 0.17%)</title><rect x="67.1689%" y="453" width="0.1713%" height="15" fill="rgb(238,84,13)" fg:x="71774" fg:w="183"/><text x="67.4189%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (223 samples, 0.21%)</title><rect x="67.1427%" y="581" width="0.2087%" height="15" fill="rgb(253,48,26)" fg:x="71746" fg:w="223"/><text x="67.3927%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (212 samples, 0.20%)</title><rect x="67.1530%" y="565" width="0.1984%" height="15" fill="rgb(205,223,31)" fg:x="71757" fg:w="212"/><text x="67.4030%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (212 samples, 0.20%)</title><rect x="67.1530%" y="549" width="0.1984%" height="15" fill="rgb(221,41,32)" fg:x="71757" fg:w="212"/><text x="67.4030%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::array (12 samples, 0.01%)</title><rect x="67.3402%" y="533" width="0.0112%" height="15" fill="rgb(213,158,31)" fg:x="71957" fg:w="12"/><text x="67.5902%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (12 samples, 0.01%)</title><rect x="67.3402%" y="517" width="0.0112%" height="15" fill="rgb(245,126,43)" fg:x="71957" fg:w="12"/><text x="67.5902%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (12 samples, 0.01%)</title><rect x="67.3402%" y="501" width="0.0112%" height="15" fill="rgb(227,7,22)" fg:x="71957" fg:w="12"/><text x="67.5902%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (492 samples, 0.46%)</title><rect x="66.9059%" y="597" width="0.4604%" height="15" fill="rgb(252,90,44)" fg:x="71493" fg:w="492"/><text x="67.1559%" y="607.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (16 samples, 0.01%)</title><rect x="67.3514%" y="581" width="0.0150%" height="15" fill="rgb(253,91,0)" fg:x="71969" fg:w="16"/><text x="67.6014%" y="591.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,880 samples, 1.76%)</title><rect x="65.6238%" y="693" width="1.7594%" height="15" fill="rgb(252,175,49)" fg:x="70123" fg:w="1880"/><text x="65.8738%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (563 samples, 0.53%)</title><rect x="66.8563%" y="677" width="0.5269%" height="15" fill="rgb(246,150,1)" fg:x="71440" fg:w="563"/><text x="67.1063%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (510 samples, 0.48%)</title><rect x="66.9059%" y="661" width="0.4773%" height="15" fill="rgb(241,192,25)" fg:x="71493" fg:w="510"/><text x="67.1559%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (510 samples, 0.48%)</title><rect x="66.9059%" y="645" width="0.4773%" height="15" fill="rgb(239,187,11)" fg:x="71493" fg:w="510"/><text x="67.1559%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (510 samples, 0.48%)</title><rect x="66.9059%" y="629" width="0.4773%" height="15" fill="rgb(218,202,51)" fg:x="71493" fg:w="510"/><text x="67.1559%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (510 samples, 0.48%)</title><rect x="66.9059%" y="613" width="0.4773%" height="15" fill="rgb(225,176,8)" fg:x="71493" fg:w="510"/><text x="67.1559%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (18 samples, 0.02%)</title><rect x="67.3664%" y="597" width="0.0168%" height="15" fill="rgb(219,122,41)" fg:x="71985" fg:w="18"/><text x="67.6164%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (66 samples, 0.06%)</title><rect x="67.5133%" y="661" width="0.0618%" height="15" fill="rgb(248,140,20)" fg:x="72142" fg:w="66"/><text x="67.7633%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (39 samples, 0.04%)</title><rect x="67.5386%" y="645" width="0.0365%" height="15" fill="rgb(245,41,37)" fg:x="72169" fg:w="39"/><text x="67.7886%" y="655.50"></text></g><g><title>rust_alloc (57 samples, 0.05%)</title><rect x="67.6116%" y="437" width="0.0533%" height="15" fill="rgb(235,82,39)" fg:x="72247" fg:w="57"/><text x="67.8616%" y="447.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="67.7089%" y="309" width="0.0168%" height="15" fill="rgb(230,108,42)" fg:x="72351" fg:w="18"/><text x="67.9589%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="67.7098%" y="293" width="0.0159%" height="15" fill="rgb(215,150,50)" fg:x="72352" fg:w="17"/><text x="67.9598%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (40 samples, 0.04%)</title><rect x="67.7005%" y="357" width="0.0374%" height="15" fill="rgb(233,212,5)" fg:x="72342" fg:w="40"/><text x="67.9505%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (40 samples, 0.04%)</title><rect x="67.7005%" y="341" width="0.0374%" height="15" fill="rgb(245,80,22)" fg:x="72342" fg:w="40"/><text x="67.9505%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (38 samples, 0.04%)</title><rect x="67.7023%" y="325" width="0.0356%" height="15" fill="rgb(238,129,16)" fg:x="72344" fg:w="38"/><text x="67.9523%" y="335.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="67.7257%" y="309" width="0.0122%" height="15" fill="rgb(240,19,0)" fg:x="72369" fg:w="13"/><text x="67.9757%" y="319.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="67.7257%" y="293" width="0.0122%" height="15" fill="rgb(232,42,35)" fg:x="72369" fg:w="13"/><text x="67.9757%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (51 samples, 0.05%)</title><rect x="67.7005%" y="373" width="0.0477%" height="15" fill="rgb(223,130,24)" fg:x="72342" fg:w="51"/><text x="67.9505%" y="383.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="67.7379%" y="357" width="0.0103%" height="15" fill="rgb(237,16,22)" fg:x="72382" fg:w="11"/><text x="67.9879%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="67.7379%" y="341" width="0.0103%" height="15" fill="rgb(248,192,20)" fg:x="72382" fg:w="11"/><text x="67.9879%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="67.7379%" y="325" width="0.0103%" height="15" fill="rgb(233,167,2)" fg:x="72382" fg:w="11"/><text x="67.9879%" y="335.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="67.7379%" y="309" width="0.0103%" height="15" fill="rgb(252,71,44)" fg:x="72382" fg:w="11"/><text x="67.9879%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (81 samples, 0.08%)</title><rect x="67.6892%" y="389" width="0.0758%" height="15" fill="rgb(238,37,47)" fg:x="72330" fg:w="81"/><text x="67.9392%" y="399.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="67.7519%" y="373" width="0.0131%" height="15" fill="rgb(214,202,54)" fg:x="72397" fg:w="14"/><text x="68.0019%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="67.7519%" y="357" width="0.0131%" height="15" fill="rgb(254,165,40)" fg:x="72397" fg:w="14"/><text x="68.0019%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (14 samples, 0.01%)</title><rect x="67.7519%" y="341" width="0.0131%" height="15" fill="rgb(246,173,38)" fg:x="72397" fg:w="14"/><text x="68.0019%" y="351.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="67.7519%" y="325" width="0.0131%" height="15" fill="rgb(215,3,27)" fg:x="72397" fg:w="14"/><text x="68.0019%" y="335.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (63 samples, 0.06%)</title><rect x="67.8043%" y="373" width="0.0590%" height="15" fill="rgb(239,169,51)" fg:x="72453" fg:w="63"/><text x="68.0543%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (470 samples, 0.44%)</title><rect x="67.6892%" y="421" width="0.4398%" height="15" fill="rgb(212,5,25)" fg:x="72330" fg:w="470"/><text x="67.9392%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (470 samples, 0.44%)</title><rect x="67.6892%" y="405" width="0.4398%" height="15" fill="rgb(243,45,17)" fg:x="72330" fg:w="470"/><text x="67.9392%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (389 samples, 0.36%)</title><rect x="67.7650%" y="389" width="0.3640%" height="15" fill="rgb(242,97,9)" fg:x="72411" fg:w="389"/><text x="68.0150%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (284 samples, 0.27%)</title><rect x="67.8633%" y="373" width="0.2658%" height="15" fill="rgb(228,71,31)" fg:x="72516" fg:w="284"/><text x="68.1133%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (284 samples, 0.27%)</title><rect x="67.8633%" y="357" width="0.2658%" height="15" fill="rgb(252,184,16)" fg:x="72516" fg:w="284"/><text x="68.1133%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (284 samples, 0.27%)</title><rect x="67.8633%" y="341" width="0.2658%" height="15" fill="rgb(236,169,46)" fg:x="72516" fg:w="284"/><text x="68.1133%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="68.1291%" y="421" width="0.0225%" height="15" fill="rgb(207,17,47)" fg:x="72800" fg:w="24"/><text x="68.3791%" y="431.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (15 samples, 0.01%)</title><rect x="68.1375%" y="405" width="0.0140%" height="15" fill="rgb(206,201,28)" fg:x="72809" fg:w="15"/><text x="68.3875%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (25 samples, 0.02%)</title><rect x="68.1628%" y="373" width="0.0234%" height="15" fill="rgb(224,184,23)" fg:x="72836" fg:w="25"/><text x="68.4128%" y="383.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (20 samples, 0.02%)</title><rect x="68.1674%" y="357" width="0.0187%" height="15" fill="rgb(208,139,48)" fg:x="72841" fg:w="20"/><text x="68.4174%" y="367.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (18 samples, 0.02%)</title><rect x="68.1693%" y="341" width="0.0168%" height="15" fill="rgb(208,130,10)" fg:x="72843" fg:w="18"/><text x="68.4193%" y="351.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (19 samples, 0.02%)</title><rect x="68.2039%" y="341" width="0.0178%" height="15" fill="rgb(211,213,45)" fg:x="72880" fg:w="19"/><text x="68.4539%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="68.2039%" y="325" width="0.0178%" height="15" fill="rgb(235,100,30)" fg:x="72880" fg:w="19"/><text x="68.4539%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (46 samples, 0.04%)</title><rect x="68.1862%" y="373" width="0.0430%" height="15" fill="rgb(206,144,31)" fg:x="72861" fg:w="46"/><text x="68.4362%" y="383.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (38 samples, 0.04%)</title><rect x="68.1936%" y="357" width="0.0356%" height="15" fill="rgb(224,200,26)" fg:x="72869" fg:w="38"/><text x="68.4436%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (75 samples, 0.07%)</title><rect x="68.1600%" y="389" width="0.0702%" height="15" fill="rgb(247,104,53)" fg:x="72833" fg:w="75"/><text x="68.4100%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (85 samples, 0.08%)</title><rect x="68.1515%" y="421" width="0.0795%" height="15" fill="rgb(220,14,17)" fg:x="72824" fg:w="85"/><text x="68.4015%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (79 samples, 0.07%)</title><rect x="68.1571%" y="405" width="0.0739%" height="15" fill="rgb(230,140,40)" fg:x="72830" fg:w="79"/><text x="68.4071%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (48 samples, 0.04%)</title><rect x="68.2311%" y="421" width="0.0449%" height="15" fill="rgb(229,2,41)" fg:x="72909" fg:w="48"/><text x="68.4811%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (48 samples, 0.04%)</title><rect x="68.2311%" y="405" width="0.0449%" height="15" fill="rgb(232,89,16)" fg:x="72909" fg:w="48"/><text x="68.4811%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (961 samples, 0.90%)</title><rect x="67.5751%" y="613" width="0.8993%" height="15" fill="rgb(247,59,52)" fg:x="72208" fg:w="961"/><text x="67.8251%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (961 samples, 0.90%)</title><rect x="67.5751%" y="597" width="0.8993%" height="15" fill="rgb(226,110,21)" fg:x="72208" fg:w="961"/><text x="67.8251%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (960 samples, 0.90%)</title><rect x="67.5760%" y="581" width="0.8984%" height="15" fill="rgb(224,176,43)" fg:x="72209" fg:w="960"/><text x="67.8260%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (960 samples, 0.90%)</title><rect x="67.5760%" y="565" width="0.8984%" height="15" fill="rgb(221,73,6)" fg:x="72209" fg:w="960"/><text x="67.8260%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (953 samples, 0.89%)</title><rect x="67.5825%" y="549" width="0.8919%" height="15" fill="rgb(232,78,19)" fg:x="72216" fg:w="953"/><text x="67.8325%" y="559.50"></text></g><g><title>alloc::alloc::alloc (953 samples, 0.89%)</title><rect x="67.5825%" y="533" width="0.8919%" height="15" fill="rgb(233,112,48)" fg:x="72216" fg:w="953"/><text x="67.8325%" y="543.50"></text></g><g><title>__rg_alloc (953 samples, 0.89%)</title><rect x="67.5825%" y="517" width="0.8919%" height="15" fill="rgb(243,131,47)" fg:x="72216" fg:w="953"/><text x="67.8325%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (945 samples, 0.88%)</title><rect x="67.5900%" y="501" width="0.8844%" height="15" fill="rgb(226,51,1)" fg:x="72224" fg:w="945"/><text x="67.8400%" y="511.50"></text></g><g><title>rust_alloc (934 samples, 0.87%)</title><rect x="67.6003%" y="485" width="0.8741%" height="15" fill="rgb(247,58,7)" fg:x="72235" fg:w="934"/><text x="67.8503%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (922 samples, 0.86%)</title><rect x="67.6116%" y="469" width="0.8628%" height="15" fill="rgb(209,7,32)" fg:x="72247" fg:w="922"/><text x="67.8616%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (922 samples, 0.86%)</title><rect x="67.6116%" y="453" width="0.8628%" height="15" fill="rgb(209,39,41)" fg:x="72247" fg:w="922"/><text x="67.8616%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (859 samples, 0.80%)</title><rect x="67.6705%" y="437" width="0.8039%" height="15" fill="rgb(226,182,46)" fg:x="72310" fg:w="859"/><text x="67.9205%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (212 samples, 0.20%)</title><rect x="68.2760%" y="421" width="0.1984%" height="15" fill="rgb(230,219,10)" fg:x="72957" fg:w="212"/><text x="68.5260%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (212 samples, 0.20%)</title><rect x="68.2760%" y="405" width="0.1984%" height="15" fill="rgb(227,175,30)" fg:x="72957" fg:w="212"/><text x="68.5260%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,375 samples, 1.29%)</title><rect x="67.5751%" y="629" width="1.2868%" height="15" fill="rgb(217,2,50)" fg:x="72208" fg:w="1375"/><text x="67.8251%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (414 samples, 0.39%)</title><rect x="68.4744%" y="613" width="0.3874%" height="15" fill="rgb(229,160,0)" fg:x="73169" fg:w="414"/><text x="68.7244%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (414 samples, 0.39%)</title><rect x="68.4744%" y="597" width="0.3874%" height="15" fill="rgb(207,78,37)" fg:x="73169" fg:w="414"/><text x="68.7244%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (401 samples, 0.38%)</title><rect x="68.4866%" y="581" width="0.3753%" height="15" fill="rgb(225,57,0)" fg:x="73182" fg:w="401"/><text x="68.7366%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,450 samples, 1.36%)</title><rect x="67.5133%" y="677" width="1.3570%" height="15" fill="rgb(232,154,2)" fg:x="72142" fg:w="1450"/><text x="67.7633%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,384 samples, 1.30%)</title><rect x="67.5751%" y="661" width="1.2952%" height="15" fill="rgb(241,212,25)" fg:x="72208" fg:w="1384"/><text x="67.8251%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1,384 samples, 1.30%)</title><rect x="67.5751%" y="645" width="1.2952%" height="15" fill="rgb(226,69,20)" fg:x="72208" fg:w="1384"/><text x="67.8251%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (4,597 samples, 4.30%)</title><rect x="64.5729%" y="949" width="4.3021%" height="15" fill="rgb(247,184,54)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="959.50">tremo..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,597 samples, 4.30%)</title><rect x="64.5729%" y="933" width="4.3021%" height="15" fill="rgb(210,145,0)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="943.50">&lt;asyn..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,597 samples, 4.30%)</title><rect x="64.5729%" y="917" width="4.3021%" height="15" fill="rgb(253,82,12)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="927.50">&lt;asyn..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (4,597 samples, 4.30%)</title><rect x="64.5729%" y="901" width="4.3021%" height="15" fill="rgb(245,42,11)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="911.50">&lt;core..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,597 samples, 4.30%)</title><rect x="64.5729%" y="885" width="4.3021%" height="15" fill="rgb(219,147,32)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="895.50">&lt;asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (4,597 samples, 4.30%)</title><rect x="64.5729%" y="869" width="4.3021%" height="15" fill="rgb(246,12,7)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="879.50">async..</text></g><g><title>std::panic::catch_unwind (4,597 samples, 4.30%)</title><rect x="64.5729%" y="853" width="4.3021%" height="15" fill="rgb(243,50,9)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="863.50">std::..</text></g><g><title>std::panicking::try (4,597 samples, 4.30%)</title><rect x="64.5729%" y="837" width="4.3021%" height="15" fill="rgb(219,149,6)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="847.50">std::..</text></g><g><title>std::panicking::try::do_call (4,597 samples, 4.30%)</title><rect x="64.5729%" y="821" width="4.3021%" height="15" fill="rgb(241,51,42)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="831.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,597 samples, 4.30%)</title><rect x="64.5729%" y="805" width="4.3021%" height="15" fill="rgb(226,128,27)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="815.50">&lt;core..</text></g><g><title>core::ops::function::FnOnce::call_once (4,597 samples, 4.30%)</title><rect x="64.5729%" y="789" width="4.3021%" height="15" fill="rgb(244,144,4)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="799.50">core:..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (4,597 samples, 4.30%)</title><rect x="64.5729%" y="773" width="4.3021%" height="15" fill="rgb(221,4,13)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="783.50">async..</text></g><g><title>async_ffi::FfiContext::with_context (4,597 samples, 4.30%)</title><rect x="64.5729%" y="757" width="4.3021%" height="15" fill="rgb(208,170,28)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="767.50">async..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (4,597 samples, 4.30%)</title><rect x="64.5729%" y="741" width="4.3021%" height="15" fill="rgb(226,131,13)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="751.50">async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,597 samples, 4.30%)</title><rect x="64.5729%" y="725" width="4.3021%" height="15" fill="rgb(215,72,41)" fg:x="69000" fg:w="4597"/><text x="64.8229%" y="735.50">&lt;core..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (4,494 samples, 4.21%)</title><rect x="64.6693%" y="709" width="4.2057%" height="15" fill="rgb(243,108,20)" fg:x="69103" fg:w="4494"/><text x="64.9193%" y="719.50">&lt;trem..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,594 samples, 1.49%)</title><rect x="67.3832%" y="693" width="1.4917%" height="15" fill="rgb(230,189,17)" fg:x="72003" fg:w="1594"/><text x="67.6332%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="68.8777%" y="917" width="0.0159%" height="15" fill="rgb(220,50,17)" fg:x="73600" fg:w="17"/><text x="69.1277%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="69.1772%" y="901" width="0.0112%" height="15" fill="rgb(248,152,48)" fg:x="73920" fg:w="12"/><text x="69.4272%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.01%)</title><rect x="69.1781%" y="885" width="0.0103%" height="15" fill="rgb(244,91,11)" fg:x="73921" fg:w="11"/><text x="69.4281%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.01%)</title><rect x="69.1781%" y="869" width="0.0103%" height="15" fill="rgb(220,157,5)" fg:x="73921" fg:w="11"/><text x="69.4281%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (385 samples, 0.36%)</title><rect x="69.1950%" y="901" width="0.3603%" height="15" fill="rgb(253,137,8)" fg:x="73939" fg:w="385"/><text x="69.4450%" y="911.50"></text></g><g><title>core::ptr::read (324 samples, 0.30%)</title><rect x="69.2521%" y="885" width="0.3032%" height="15" fill="rgb(217,137,51)" fg:x="74000" fg:w="324"/><text x="69.5021%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (312 samples, 0.29%)</title><rect x="69.2633%" y="869" width="0.2920%" height="15" fill="rgb(218,209,53)" fg:x="74012" fg:w="312"/><text x="69.5133%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="69.5581%" y="901" width="0.0262%" height="15" fill="rgb(249,137,25)" fg:x="74327" fg:w="28"/><text x="69.8081%" y="911.50"></text></g><g><title>rust_alloc (25 samples, 0.02%)</title><rect x="69.6152%" y="597" width="0.0234%" height="15" fill="rgb(239,155,26)" fg:x="74388" fg:w="25"/><text x="69.8652%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="69.6526%" y="581" width="0.0187%" height="15" fill="rgb(227,85,46)" fg:x="74428" fg:w="20"/><text x="69.9026%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (20 samples, 0.02%)</title><rect x="69.6526%" y="565" width="0.0187%" height="15" fill="rgb(251,107,43)" fg:x="74428" fg:w="20"/><text x="69.9026%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (17 samples, 0.02%)</title><rect x="69.6554%" y="549" width="0.0159%" height="15" fill="rgb(234,170,33)" fg:x="74431" fg:w="17"/><text x="69.9054%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="69.6582%" y="533" width="0.0131%" height="15" fill="rgb(206,29,35)" fg:x="74434" fg:w="14"/><text x="69.9082%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="69.6582%" y="517" width="0.0131%" height="15" fill="rgb(227,138,25)" fg:x="74434" fg:w="14"/><text x="69.9082%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="69.6582%" y="501" width="0.0131%" height="15" fill="rgb(249,131,35)" fg:x="74434" fg:w="14"/><text x="69.9082%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (96 samples, 0.09%)</title><rect x="69.6769%" y="581" width="0.0898%" height="15" fill="rgb(239,6,40)" fg:x="74454" fg:w="96"/><text x="69.9269%" y="591.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (96 samples, 0.09%)</title><rect x="69.6769%" y="565" width="0.0898%" height="15" fill="rgb(246,136,47)" fg:x="74454" fg:w="96"/><text x="69.9269%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (449 samples, 0.42%)</title><rect x="69.6142%" y="629" width="0.4202%" height="15" fill="rgb(253,58,26)" fg:x="74387" fg:w="449"/><text x="69.8642%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (448 samples, 0.42%)</title><rect x="69.6152%" y="613" width="0.4193%" height="15" fill="rgb(237,141,10)" fg:x="74388" fg:w="448"/><text x="69.8652%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (416 samples, 0.39%)</title><rect x="69.6451%" y="597" width="0.3893%" height="15" fill="rgb(234,156,12)" fg:x="74420" fg:w="416"/><text x="69.8951%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::take (286 samples, 0.27%)</title><rect x="69.7668%" y="581" width="0.2676%" height="15" fill="rgb(243,224,36)" fg:x="74550" fg:w="286"/><text x="70.0168%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (286 samples, 0.27%)</title><rect x="69.7668%" y="565" width="0.2676%" height="15" fill="rgb(205,229,51)" fg:x="74550" fg:w="286"/><text x="70.0168%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (482 samples, 0.45%)</title><rect x="69.5899%" y="773" width="0.4511%" height="15" fill="rgb(223,189,4)" fg:x="74361" fg:w="482"/><text x="69.8399%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (482 samples, 0.45%)</title><rect x="69.5899%" y="757" width="0.4511%" height="15" fill="rgb(249,167,54)" fg:x="74361" fg:w="482"/><text x="69.8399%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (472 samples, 0.44%)</title><rect x="69.5993%" y="741" width="0.4417%" height="15" fill="rgb(218,34,28)" fg:x="74371" fg:w="472"/><text x="69.8493%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (472 samples, 0.44%)</title><rect x="69.5993%" y="725" width="0.4417%" height="15" fill="rgb(232,109,42)" fg:x="74371" fg:w="472"/><text x="69.8493%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (472 samples, 0.44%)</title><rect x="69.5993%" y="709" width="0.4417%" height="15" fill="rgb(248,214,46)" fg:x="74371" fg:w="472"/><text x="69.8493%" y="719.50"></text></g><g><title>alloc::alloc::alloc (465 samples, 0.44%)</title><rect x="69.6058%" y="693" width="0.4352%" height="15" fill="rgb(244,216,40)" fg:x="74378" fg:w="465"/><text x="69.8558%" y="703.50"></text></g><g><title>__rg_alloc (465 samples, 0.44%)</title><rect x="69.6058%" y="677" width="0.4352%" height="15" fill="rgb(231,226,31)" fg:x="74378" fg:w="465"/><text x="69.8558%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (465 samples, 0.44%)</title><rect x="69.6058%" y="661" width="0.4352%" height="15" fill="rgb(238,38,43)" fg:x="74378" fg:w="465"/><text x="69.8558%" y="671.50"></text></g><g><title>rust_alloc (464 samples, 0.43%)</title><rect x="69.6068%" y="645" width="0.4342%" height="15" fill="rgb(208,88,43)" fg:x="74379" fg:w="464"/><text x="69.8568%" y="655.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (525 samples, 0.49%)</title><rect x="69.5899%" y="901" width="0.4913%" height="15" fill="rgb(205,136,37)" fg:x="74361" fg:w="525"/><text x="69.8399%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (525 samples, 0.49%)</title><rect x="69.5899%" y="885" width="0.4913%" height="15" fill="rgb(237,34,14)" fg:x="74361" fg:w="525"/><text x="69.8399%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (525 samples, 0.49%)</title><rect x="69.5899%" y="869" width="0.4913%" height="15" fill="rgb(236,193,44)" fg:x="74361" fg:w="525"/><text x="69.8399%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (525 samples, 0.49%)</title><rect x="69.5899%" y="853" width="0.4913%" height="15" fill="rgb(231,48,10)" fg:x="74361" fg:w="525"/><text x="69.8399%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (525 samples, 0.49%)</title><rect x="69.5899%" y="837" width="0.4913%" height="15" fill="rgb(213,141,34)" fg:x="74361" fg:w="525"/><text x="69.8399%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (525 samples, 0.49%)</title><rect x="69.5899%" y="821" width="0.4913%" height="15" fill="rgb(249,130,34)" fg:x="74361" fg:w="525"/><text x="69.8399%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (525 samples, 0.49%)</title><rect x="69.5899%" y="805" width="0.4913%" height="15" fill="rgb(219,42,41)" fg:x="74361" fg:w="525"/><text x="69.8399%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (525 samples, 0.49%)</title><rect x="69.5899%" y="789" width="0.4913%" height="15" fill="rgb(224,100,54)" fg:x="74361" fg:w="525"/><text x="69.8399%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (43 samples, 0.04%)</title><rect x="70.0410%" y="773" width="0.0402%" height="15" fill="rgb(229,200,27)" fg:x="74843" fg:w="43"/><text x="70.2910%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (43 samples, 0.04%)</title><rect x="70.0410%" y="757" width="0.0402%" height="15" fill="rgb(217,118,10)" fg:x="74843" fg:w="43"/><text x="70.2910%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (34 samples, 0.03%)</title><rect x="70.0494%" y="741" width="0.0318%" height="15" fill="rgb(206,22,3)" fg:x="74852" fg:w="34"/><text x="70.2994%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (690 samples, 0.65%)</title><rect x="70.0812%" y="901" width="0.6457%" height="15" fill="rgb(232,163,46)" fg:x="74886" fg:w="690"/><text x="70.3312%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (319 samples, 0.30%)</title><rect x="70.7457%" y="885" width="0.2985%" height="15" fill="rgb(206,95,13)" fg:x="75596" fg:w="319"/><text x="70.9957%" y="895.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="71.0545%" y="773" width="0.0112%" height="15" fill="rgb(253,154,18)" fg:x="75926" fg:w="12"/><text x="71.3045%" y="783.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="71.0667%" y="741" width="0.0140%" height="15" fill="rgb(219,32,23)" fg:x="75939" fg:w="15"/><text x="71.3167%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="71.1163%" y="613" width="0.0299%" height="15" fill="rgb(230,191,45)" fg:x="75992" fg:w="32"/><text x="71.3663%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (32 samples, 0.03%)</title><rect x="71.1163%" y="597" width="0.0299%" height="15" fill="rgb(229,64,36)" fg:x="75992" fg:w="32"/><text x="71.3663%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (49 samples, 0.05%)</title><rect x="71.1088%" y="661" width="0.0459%" height="15" fill="rgb(205,129,25)" fg:x="75984" fg:w="49"/><text x="71.3588%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (49 samples, 0.05%)</title><rect x="71.1088%" y="645" width="0.0459%" height="15" fill="rgb(254,112,7)" fg:x="75984" fg:w="49"/><text x="71.3588%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (49 samples, 0.05%)</title><rect x="71.1088%" y="629" width="0.0459%" height="15" fill="rgb(226,53,48)" fg:x="75984" fg:w="49"/><text x="71.3588%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (61 samples, 0.06%)</title><rect x="71.1088%" y="677" width="0.0571%" height="15" fill="rgb(214,153,38)" fg:x="75984" fg:w="61"/><text x="71.3588%" y="687.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="71.1546%" y="661" width="0.0112%" height="15" fill="rgb(243,101,7)" fg:x="76033" fg:w="12"/><text x="71.4046%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="71.1546%" y="645" width="0.0112%" height="15" fill="rgb(240,140,22)" fg:x="76033" fg:w="12"/><text x="71.4046%" y="655.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="71.1546%" y="629" width="0.0112%" height="15" fill="rgb(235,114,2)" fg:x="76033" fg:w="12"/><text x="71.4046%" y="639.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="71.1546%" y="613" width="0.0112%" height="15" fill="rgb(242,59,12)" fg:x="76033" fg:w="12"/><text x="71.4046%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (94 samples, 0.09%)</title><rect x="71.0957%" y="693" width="0.0880%" height="15" fill="rgb(252,134,9)" fg:x="75970" fg:w="94"/><text x="71.3457%" y="703.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="71.1687%" y="677" width="0.0150%" height="15" fill="rgb(236,4,44)" fg:x="76048" fg:w="16"/><text x="71.4187%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.01%)</title><rect x="71.1687%" y="661" width="0.0150%" height="15" fill="rgb(254,172,41)" fg:x="76048" fg:w="16"/><text x="71.4187%" y="671.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (16 samples, 0.01%)</title><rect x="71.1687%" y="645" width="0.0150%" height="15" fill="rgb(244,63,20)" fg:x="76048" fg:w="16"/><text x="71.4187%" y="655.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.01%)</title><rect x="71.1687%" y="629" width="0.0150%" height="15" fill="rgb(250,73,31)" fg:x="76048" fg:w="16"/><text x="71.4187%" y="639.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (72 samples, 0.07%)</title><rect x="71.2230%" y="677" width="0.0674%" height="15" fill="rgb(241,38,36)" fg:x="76106" fg:w="72"/><text x="71.4730%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (569 samples, 0.53%)</title><rect x="71.0957%" y="725" width="0.5325%" height="15" fill="rgb(245,211,2)" fg:x="75970" fg:w="569"/><text x="71.3457%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (569 samples, 0.53%)</title><rect x="71.0957%" y="709" width="0.5325%" height="15" fill="rgb(206,120,28)" fg:x="75970" fg:w="569"/><text x="71.3457%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (475 samples, 0.44%)</title><rect x="71.1836%" y="693" width="0.4445%" height="15" fill="rgb(211,59,34)" fg:x="76064" fg:w="475"/><text x="71.4336%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (361 samples, 0.34%)</title><rect x="71.2903%" y="677" width="0.3378%" height="15" fill="rgb(233,168,5)" fg:x="76178" fg:w="361"/><text x="71.5403%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (361 samples, 0.34%)</title><rect x="71.2903%" y="661" width="0.3378%" height="15" fill="rgb(234,33,13)" fg:x="76178" fg:w="361"/><text x="71.5403%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (361 samples, 0.34%)</title><rect x="71.2903%" y="645" width="0.3378%" height="15" fill="rgb(231,150,26)" fg:x="76178" fg:w="361"/><text x="71.5403%" y="655.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (14 samples, 0.01%)</title><rect x="71.6329%" y="693" width="0.0131%" height="15" fill="rgb(217,191,4)" fg:x="76544" fg:w="14"/><text x="71.8829%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (12 samples, 0.01%)</title><rect x="71.6347%" y="677" width="0.0112%" height="15" fill="rgb(246,198,38)" fg:x="76546" fg:w="12"/><text x="71.8847%" y="687.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="71.6347%" y="661" width="0.0112%" height="15" fill="rgb(245,64,37)" fg:x="76546" fg:w="12"/><text x="71.8847%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (20 samples, 0.02%)</title><rect x="71.6460%" y="693" width="0.0187%" height="15" fill="rgb(250,30,36)" fg:x="76558" fg:w="20"/><text x="71.8960%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (20 samples, 0.02%)</title><rect x="71.6460%" y="677" width="0.0187%" height="15" fill="rgb(217,86,53)" fg:x="76558" fg:w="20"/><text x="71.8960%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.04%)</title><rect x="71.6282%" y="725" width="0.0449%" height="15" fill="rgb(228,157,16)" fg:x="76539" fg:w="48"/><text x="71.8782%" y="735.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (44 samples, 0.04%)</title><rect x="71.6319%" y="709" width="0.0412%" height="15" fill="rgb(217,59,31)" fg:x="76543" fg:w="44"/><text x="71.8819%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::empty (15 samples, 0.01%)</title><rect x="71.6778%" y="725" width="0.0140%" height="15" fill="rgb(237,138,41)" fg:x="76592" fg:w="15"/><text x="71.9278%" y="735.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (15 samples, 0.01%)</title><rect x="71.6778%" y="709" width="0.0140%" height="15" fill="rgb(227,91,49)" fg:x="76592" fg:w="15"/><text x="71.9278%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (895 samples, 0.84%)</title><rect x="71.0657%" y="773" width="0.8376%" height="15" fill="rgb(247,21,44)" fg:x="75938" fg:w="895"/><text x="71.3157%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (894 samples, 0.84%)</title><rect x="71.0667%" y="757" width="0.8366%" height="15" fill="rgb(219,210,51)" fg:x="75939" fg:w="894"/><text x="71.3167%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (877 samples, 0.82%)</title><rect x="71.0826%" y="741" width="0.8207%" height="15" fill="rgb(209,140,6)" fg:x="75956" fg:w="877"/><text x="71.3326%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::take (226 samples, 0.21%)</title><rect x="71.6918%" y="725" width="0.2115%" height="15" fill="rgb(221,188,24)" fg:x="76607" fg:w="226"/><text x="71.9418%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (226 samples, 0.21%)</title><rect x="71.6918%" y="709" width="0.2115%" height="15" fill="rgb(232,154,20)" fg:x="76607" fg:w="226"/><text x="71.9418%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,260 samples, 1.18%)</title><rect x="70.7270%" y="901" width="1.1792%" height="15" fill="rgb(244,137,50)" fg:x="75576" fg:w="1260"/><text x="70.9770%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (921 samples, 0.86%)</title><rect x="71.0442%" y="885" width="0.8619%" height="15" fill="rgb(225,185,43)" fg:x="75915" fg:w="921"/><text x="71.2942%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (921 samples, 0.86%)</title><rect x="71.0442%" y="869" width="0.8619%" height="15" fill="rgb(213,205,38)" fg:x="75915" fg:w="921"/><text x="71.2942%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (921 samples, 0.86%)</title><rect x="71.0442%" y="853" width="0.8619%" height="15" fill="rgb(236,73,12)" fg:x="75915" fg:w="921"/><text x="71.2942%" y="863.50"></text></g><g><title>alloc::alloc::alloc (921 samples, 0.86%)</title><rect x="71.0442%" y="837" width="0.8619%" height="15" fill="rgb(235,219,13)" fg:x="75915" fg:w="921"/><text x="71.2942%" y="847.50"></text></g><g><title>__rg_alloc (921 samples, 0.86%)</title><rect x="71.0442%" y="821" width="0.8619%" height="15" fill="rgb(218,59,36)" fg:x="75915" fg:w="921"/><text x="71.2942%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (921 samples, 0.86%)</title><rect x="71.0442%" y="805" width="0.8619%" height="15" fill="rgb(205,110,39)" fg:x="75915" fg:w="921"/><text x="71.2942%" y="815.50"></text></g><g><title>rust_alloc (913 samples, 0.85%)</title><rect x="71.0517%" y="789" width="0.8544%" height="15" fill="rgb(218,206,42)" fg:x="75923" fg:w="913"/><text x="71.3017%" y="799.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (15 samples, 0.01%)</title><rect x="71.9136%" y="869" width="0.0140%" height="15" fill="rgb(248,125,24)" fg:x="76844" fg:w="15"/><text x="72.1636%" y="879.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (12 samples, 0.01%)</title><rect x="71.9164%" y="853" width="0.0112%" height="15" fill="rgb(242,28,27)" fg:x="76847" fg:w="12"/><text x="72.1664%" y="863.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (12 samples, 0.01%)</title><rect x="71.9164%" y="837" width="0.0112%" height="15" fill="rgb(216,228,15)" fg:x="76847" fg:w="12"/><text x="72.1664%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="71.9164%" y="821" width="0.0112%" height="15" fill="rgb(235,116,46)" fg:x="76847" fg:w="12"/><text x="72.1664%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.03%)</title><rect x="71.9314%" y="805" width="0.0309%" height="15" fill="rgb(224,18,32)" fg:x="76863" fg:w="33"/><text x="72.1814%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="71.9417%" y="789" width="0.0206%" height="15" fill="rgb(252,5,12)" fg:x="76874" fg:w="22"/><text x="72.1917%" y="799.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="71.9417%" y="773" width="0.0206%" height="15" fill="rgb(251,36,5)" fg:x="76874" fg:w="22"/><text x="72.1917%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="71.9417%" y="757" width="0.0206%" height="15" fill="rgb(217,53,14)" fg:x="76874" fg:w="22"/><text x="72.1917%" y="767.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="71.9276%" y="853" width="0.0356%" height="15" fill="rgb(215,86,45)" fg:x="76859" fg:w="38"/><text x="72.1776%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (34 samples, 0.03%)</title><rect x="71.9314%" y="837" width="0.0318%" height="15" fill="rgb(242,169,11)" fg:x="76863" fg:w="34"/><text x="72.1814%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="71.9314%" y="821" width="0.0318%" height="15" fill="rgb(211,213,45)" fg:x="76863" fg:w="34"/><text x="72.1814%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (41 samples, 0.04%)</title><rect x="71.9276%" y="869" width="0.0384%" height="15" fill="rgb(205,88,11)" fg:x="76859" fg:w="41"/><text x="72.1776%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.07%)</title><rect x="71.9061%" y="885" width="0.0664%" height="15" fill="rgb(252,69,26)" fg:x="76836" fg:w="71"/><text x="72.1561%" y="895.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="71.9791%" y="853" width="0.0103%" height="15" fill="rgb(246,123,37)" fg:x="76914" fg:w="11"/><text x="72.2291%" y="863.50"></text></g><g><title>rust_dealloc (30 samples, 0.03%)</title><rect x="71.9894%" y="789" width="0.0281%" height="15" fill="rgb(212,205,5)" fg:x="76925" fg:w="30"/><text x="72.2394%" y="799.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (34 samples, 0.03%)</title><rect x="72.0661%" y="741" width="0.0318%" height="15" fill="rgb(253,148,0)" fg:x="77007" fg:w="34"/><text x="72.3161%" y="751.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (30 samples, 0.03%)</title><rect x="72.0699%" y="725" width="0.0281%" height="15" fill="rgb(239,22,4)" fg:x="77011" fg:w="30"/><text x="72.3199%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (81 samples, 0.08%)</title><rect x="72.0259%" y="789" width="0.0758%" height="15" fill="rgb(226,26,53)" fg:x="76964" fg:w="81"/><text x="72.2759%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (81 samples, 0.08%)</title><rect x="72.0259%" y="773" width="0.0758%" height="15" fill="rgb(225,229,45)" fg:x="76964" fg:w="81"/><text x="72.2759%" y="783.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (75 samples, 0.07%)</title><rect x="72.0315%" y="757" width="0.0702%" height="15" fill="rgb(220,60,37)" fg:x="76970" fg:w="75"/><text x="72.2815%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (155 samples, 0.15%)</title><rect x="71.9894%" y="821" width="0.1451%" height="15" fill="rgb(217,180,35)" fg:x="76925" fg:w="155"/><text x="72.2394%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (155 samples, 0.15%)</title><rect x="71.9894%" y="805" width="0.1451%" height="15" fill="rgb(229,7,53)" fg:x="76925" fg:w="155"/><text x="72.2394%" y="815.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (35 samples, 0.03%)</title><rect x="72.1017%" y="789" width="0.0328%" height="15" fill="rgb(254,137,3)" fg:x="77045" fg:w="35"/><text x="72.3517%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (160 samples, 0.15%)</title><rect x="71.9894%" y="853" width="0.1497%" height="15" fill="rgb(215,140,41)" fg:x="76925" fg:w="160"/><text x="72.2394%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (160 samples, 0.15%)</title><rect x="71.9894%" y="837" width="0.1497%" height="15" fill="rgb(250,80,15)" fg:x="76925" fg:w="160"/><text x="72.2394%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (178 samples, 0.17%)</title><rect x="71.9782%" y="869" width="0.1666%" height="15" fill="rgb(252,191,6)" fg:x="76913" fg:w="178"/><text x="72.2282%" y="879.50"></text></g><g><title>rust_dealloc (192 samples, 0.18%)</title><rect x="71.9726%" y="885" width="0.1797%" height="15" fill="rgb(246,217,18)" fg:x="76907" fg:w="192"/><text x="72.2226%" y="895.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (22 samples, 0.02%)</title><rect x="72.1569%" y="869" width="0.0206%" height="15" fill="rgb(223,93,7)" fg:x="77104" fg:w="22"/><text x="72.4069%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (294 samples, 0.28%)</title><rect x="71.9061%" y="901" width="0.2751%" height="15" fill="rgb(225,55,52)" fg:x="76836" fg:w="294"/><text x="72.1561%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (30 samples, 0.03%)</title><rect x="72.1532%" y="885" width="0.0281%" height="15" fill="rgb(240,31,24)" fg:x="77100" fg:w="30"/><text x="72.4032%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (26 samples, 0.02%)</title><rect x="72.1813%" y="901" width="0.0243%" height="15" fill="rgb(205,56,52)" fg:x="77130" fg:w="26"/><text x="72.4313%" y="911.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="72.1813%" y="885" width="0.0243%" height="15" fill="rgb(246,146,12)" fg:x="77130" fg:w="26"/><text x="72.4313%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="72.2056%" y="901" width="0.0131%" height="15" fill="rgb(239,84,36)" fg:x="77156" fg:w="14"/><text x="72.4556%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="72.2056%" y="885" width="0.0131%" height="15" fill="rgb(207,41,40)" fg:x="77156" fg:w="14"/><text x="72.4556%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (12 samples, 0.01%)</title><rect x="72.2187%" y="901" width="0.0112%" height="15" fill="rgb(241,179,25)" fg:x="77170" fg:w="12"/><text x="72.4687%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (186 samples, 0.17%)</title><rect x="72.2299%" y="901" width="0.1741%" height="15" fill="rgb(210,0,34)" fg:x="77182" fg:w="186"/><text x="72.4799%" y="911.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (186 samples, 0.17%)</title><rect x="72.2299%" y="885" width="0.1741%" height="15" fill="rgb(225,217,29)" fg:x="77182" fg:w="186"/><text x="72.4799%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (178 samples, 0.17%)</title><rect x="72.2374%" y="869" width="0.1666%" height="15" fill="rgb(216,191,38)" fg:x="77190" fg:w="178"/><text x="72.4874%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (178 samples, 0.17%)</title><rect x="72.2374%" y="853" width="0.1666%" height="15" fill="rgb(232,140,52)" fg:x="77190" fg:w="178"/><text x="72.4874%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (91 samples, 0.09%)</title><rect x="72.3188%" y="837" width="0.0852%" height="15" fill="rgb(223,158,51)" fg:x="77277" fg:w="91"/><text x="72.5688%" y="847.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (91 samples, 0.09%)</title><rect x="72.3188%" y="821" width="0.0852%" height="15" fill="rgb(235,29,51)" fg:x="77277" fg:w="91"/><text x="72.5688%" y="831.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (91 samples, 0.09%)</title><rect x="72.3188%" y="805" width="0.0852%" height="15" fill="rgb(215,181,18)" fg:x="77277" fg:w="91"/><text x="72.5688%" y="815.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (81 samples, 0.08%)</title><rect x="72.3282%" y="789" width="0.0758%" height="15" fill="rgb(227,125,34)" fg:x="77287" fg:w="81"/><text x="72.5782%" y="799.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (70 samples, 0.07%)</title><rect x="72.3385%" y="773" width="0.0655%" height="15" fill="rgb(230,197,49)" fg:x="77298" fg:w="70"/><text x="72.5885%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (8,469 samples, 7.93%)</title><rect x="64.5729%" y="981" width="7.9256%" height="15" fill="rgb(239,141,16)" fg:x="69000" fg:w="8469"/><text x="64.8229%" y="991.50">tremor_runt..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,469 samples, 7.93%)</title><rect x="64.5729%" y="965" width="7.9256%" height="15" fill="rgb(225,105,43)" fg:x="69000" fg:w="8469"/><text x="64.8229%" y="975.50">&lt;core::futu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,872 samples, 3.62%)</title><rect x="68.8749%" y="949" width="3.6236%" height="15" fill="rgb(214,131,14)" fg:x="73597" fg:w="3872"/><text x="69.1249%" y="959.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,872 samples, 3.62%)</title><rect x="68.8749%" y="933" width="3.6236%" height="15" fill="rgb(229,177,11)" fg:x="73597" fg:w="3872"/><text x="69.1249%" y="943.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,852 samples, 3.60%)</title><rect x="68.8937%" y="917" width="3.6049%" height="15" fill="rgb(231,180,14)" fg:x="73617" fg:w="3852"/><text x="69.1437%" y="927.50">trem..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (97 samples, 0.09%)</title><rect x="72.4077%" y="901" width="0.0908%" height="15" fill="rgb(232,88,2)" fg:x="77372" fg:w="97"/><text x="72.6577%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (97 samples, 0.09%)</title><rect x="72.4077%" y="885" width="0.0908%" height="15" fill="rgb(205,220,8)" fg:x="77372" fg:w="97"/><text x="72.6577%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (97 samples, 0.09%)</title><rect x="72.4077%" y="869" width="0.0908%" height="15" fill="rgb(225,23,53)" fg:x="77372" fg:w="97"/><text x="72.6577%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (65 samples, 0.06%)</title><rect x="72.4377%" y="853" width="0.0608%" height="15" fill="rgb(213,62,29)" fg:x="77404" fg:w="65"/><text x="72.6877%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (85 samples, 0.08%)</title><rect x="72.5902%" y="917" width="0.0795%" height="15" fill="rgb(227,75,7)" fg:x="77567" fg:w="85"/><text x="72.8402%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (69 samples, 0.06%)</title><rect x="72.6052%" y="901" width="0.0646%" height="15" fill="rgb(207,105,14)" fg:x="77583" fg:w="69"/><text x="72.8552%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (19 samples, 0.02%)</title><rect x="72.6520%" y="885" width="0.0178%" height="15" fill="rgb(245,62,29)" fg:x="77633" fg:w="19"/><text x="72.9020%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (815 samples, 0.76%)</title><rect x="72.5238%" y="933" width="0.7627%" height="15" fill="rgb(236,202,4)" fg:x="77496" fg:w="815"/><text x="72.7738%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (653 samples, 0.61%)</title><rect x="72.6754%" y="917" width="0.6111%" height="15" fill="rgb(250,67,1)" fg:x="77658" fg:w="653"/><text x="72.9254%" y="927.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,201 samples, 1.12%)</title><rect x="72.4985%" y="965" width="1.1239%" height="15" fill="rgb(253,115,44)" fg:x="77469" fg:w="1201"/><text x="72.7485%" y="975.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,201 samples, 1.12%)</title><rect x="72.4985%" y="949" width="1.1239%" height="15" fill="rgb(251,139,18)" fg:x="77469" fg:w="1201"/><text x="72.7485%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (359 samples, 0.34%)</title><rect x="73.2865%" y="933" width="0.3360%" height="15" fill="rgb(218,22,32)" fg:x="78311" fg:w="359"/><text x="73.5365%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (13,522 samples, 12.65%)</title><rect x="61.0214%" y="1157" width="12.6544%" height="15" fill="rgb(243,53,5)" fg:x="65205" fg:w="13522"/><text x="61.2714%" y="1167.50">async_task::raw::Ra..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13,522 samples, 12.65%)</title><rect x="61.0214%" y="1141" width="12.6544%" height="15" fill="rgb(227,56,16)" fg:x="65205" fg:w="13522"/><text x="61.2714%" y="1151.50">&lt;core::pin::Pin&lt;P&gt; ..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,522 samples, 12.65%)</title><rect x="61.0214%" y="1125" width="12.6544%" height="15" fill="rgb(245,53,0)" fg:x="65205" fg:w="13522"/><text x="61.2714%" y="1135.50">&lt;core::future::from..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (13,522 samples, 12.65%)</title><rect x="61.0214%" y="1109" width="12.6544%" height="15" fill="rgb(216,170,35)" fg:x="65205" fg:w="13522"/><text x="61.2714%" y="1119.50">async_executor::Exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (13,522 samples, 12.65%)</title><rect x="61.0214%" y="1093" width="12.6544%" height="15" fill="rgb(211,200,8)" fg:x="65205" fg:w="13522"/><text x="61.2714%" y="1103.50">&lt;async_std::task::b..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (13,522 samples, 12.65%)</title><rect x="61.0214%" y="1077" width="12.6544%" height="15" fill="rgb(228,204,44)" fg:x="65205" fg:w="13522"/><text x="61.2714%" y="1087.50">async_std::task::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,522 samples, 12.65%)</title><rect x="61.0214%" y="1061" width="12.6544%" height="15" fill="rgb(214,121,17)" fg:x="65205" fg:w="13522"/><text x="61.2714%" y="1071.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,522 samples, 12.65%)</title><rect x="61.0214%" y="1045" width="12.6544%" height="15" fill="rgb(233,64,38)" fg:x="65205" fg:w="13522"/><text x="61.2714%" y="1055.50">std::thread::local:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (13,522 samples, 12.65%)</title><rect x="61.0214%" y="1029" width="12.6544%" height="15" fill="rgb(253,54,19)" fg:x="65205" fg:w="13522"/><text x="61.2714%" y="1039.50">async_std::task::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (13,522 samples, 12.65%)</title><rect x="61.0214%" y="1013" width="12.6544%" height="15" fill="rgb(253,94,18)" fg:x="65205" fg:w="13522"/><text x="61.2714%" y="1023.50">&lt;async_std::task::b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,522 samples, 12.65%)</title><rect x="61.0214%" y="997" width="12.6544%" height="15" fill="rgb(227,57,52)" fg:x="65205" fg:w="13522"/><text x="61.2714%" y="1007.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,258 samples, 1.18%)</title><rect x="72.4985%" y="981" width="1.1773%" height="15" fill="rgb(230,228,50)" fg:x="77469" fg:w="1258"/><text x="72.7485%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (57 samples, 0.05%)</title><rect x="73.6224%" y="965" width="0.0533%" height="15" fill="rgb(217,205,27)" fg:x="78670" fg:w="57"/><text x="73.8724%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (57 samples, 0.05%)</title><rect x="73.6224%" y="949" width="0.0533%" height="15" fill="rgb(252,71,50)" fg:x="78670" fg:w="57"/><text x="73.8724%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (57 samples, 0.05%)</title><rect x="73.6224%" y="933" width="0.0533%" height="15" fill="rgb(209,86,4)" fg:x="78670" fg:w="57"/><text x="73.8724%" y="943.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="73.6224%" y="917" width="0.0533%" height="15" fill="rgb(229,94,0)" fg:x="78670" fg:w="57"/><text x="73.8724%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (57 samples, 0.05%)</title><rect x="73.6224%" y="901" width="0.0533%" height="15" fill="rgb(252,223,21)" fg:x="78670" fg:w="57"/><text x="73.8724%" y="911.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="73.6224%" y="885" width="0.0533%" height="15" fill="rgb(230,210,4)" fg:x="78670" fg:w="57"/><text x="73.8724%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (27 samples, 0.03%)</title><rect x="73.6505%" y="869" width="0.0253%" height="15" fill="rgb(240,149,38)" fg:x="78700" fg:w="27"/><text x="73.9005%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (27 samples, 0.03%)</title><rect x="73.6505%" y="853" width="0.0253%" height="15" fill="rgb(254,105,20)" fg:x="78700" fg:w="27"/><text x="73.9005%" y="863.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="73.6533%" y="837" width="0.0225%" height="15" fill="rgb(253,87,46)" fg:x="78703" fg:w="24"/><text x="73.9033%" y="847.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="73.6533%" y="821" width="0.0225%" height="15" fill="rgb(253,116,33)" fg:x="78703" fg:w="24"/><text x="73.9033%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="73.6533%" y="805" width="0.0225%" height="15" fill="rgb(229,198,5)" fg:x="78703" fg:w="24"/><text x="73.9033%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (21 samples, 0.02%)</title><rect x="73.6795%" y="1157" width="0.0197%" height="15" fill="rgb(242,38,37)" fg:x="78731" fg:w="21"/><text x="73.9295%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (23 samples, 0.02%)</title><rect x="73.6992%" y="1157" width="0.0215%" height="15" fill="rgb(242,69,53)" fg:x="78752" fg:w="23"/><text x="73.9492%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="73.7263%" y="1157" width="0.0103%" height="15" fill="rgb(249,80,16)" fg:x="78781" fg:w="11"/><text x="73.9763%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="73.7366%" y="1157" width="0.0197%" height="15" fill="rgb(206,128,11)" fg:x="78792" fg:w="21"/><text x="73.9866%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="73.7563%" y="1157" width="0.0178%" height="15" fill="rgb(212,35,20)" fg:x="78813" fg:w="19"/><text x="74.0063%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (29 samples, 0.03%)</title><rect x="73.7741%" y="1157" width="0.0271%" height="15" fill="rgb(236,79,13)" fg:x="78832" fg:w="29"/><text x="74.0241%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (28 samples, 0.03%)</title><rect x="73.8012%" y="1157" width="0.0262%" height="15" fill="rgb(233,123,3)" fg:x="78861" fg:w="28"/><text x="74.0512%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (11 samples, 0.01%)</title><rect x="73.8274%" y="1157" width="0.0103%" height="15" fill="rgb(214,93,52)" fg:x="78889" fg:w="11"/><text x="74.0774%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (27 samples, 0.03%)</title><rect x="73.8470%" y="1157" width="0.0253%" height="15" fill="rgb(251,37,40)" fg:x="78910" fg:w="27"/><text x="74.0970%" y="1167.50"></text></g><g><title>event_listener::Event::notify (49 samples, 0.05%)</title><rect x="73.8732%" y="1157" width="0.0459%" height="15" fill="rgb(227,80,54)" fg:x="78938" fg:w="49"/><text x="74.1232%" y="1167.50"></text></g><g><title>event_listener::full_fence (26 samples, 0.02%)</title><rect x="73.8948%" y="1141" width="0.0243%" height="15" fill="rgb(254,48,11)" fg:x="78961" fg:w="26"/><text x="74.1448%" y="1151.50"></text></g><g><title>polling::epoll::Poller::wait (24 samples, 0.02%)</title><rect x="73.9350%" y="1157" width="0.0225%" height="15" fill="rgb(235,193,26)" fg:x="79004" fg:w="24"/><text x="74.1850%" y="1167.50"></text></g><g><title>rust_alloc (58 samples, 0.05%)</title><rect x="73.9575%" y="1157" width="0.0543%" height="15" fill="rgb(229,99,21)" fg:x="79028" fg:w="58"/><text x="74.2075%" y="1167.50"></text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="74.0118%" y="1157" width="0.0159%" height="15" fill="rgb(211,140,41)" fg:x="79086" fg:w="17"/><text x="74.2618%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (15 samples, 0.01%)</title><rect x="74.0136%" y="1141" width="0.0140%" height="15" fill="rgb(240,227,30)" fg:x="79088" fg:w="15"/><text x="74.2636%" y="1151.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (15 samples, 0.01%)</title><rect x="74.0136%" y="1125" width="0.0140%" height="15" fill="rgb(215,224,45)" fg:x="79088" fg:w="15"/><text x="74.2636%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (15 samples, 0.01%)</title><rect x="74.0136%" y="1109" width="0.0140%" height="15" fill="rgb(206,123,31)" fg:x="79088" fg:w="15"/><text x="74.2636%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (15 samples, 0.01%)</title><rect x="74.0136%" y="1093" width="0.0140%" height="15" fill="rgb(210,138,16)" fg:x="79088" fg:w="15"/><text x="74.2636%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (15 samples, 0.01%)</title><rect x="74.0136%" y="1077" width="0.0140%" height="15" fill="rgb(228,57,28)" fg:x="79088" fg:w="15"/><text x="74.2636%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (15 samples, 0.01%)</title><rect x="74.0136%" y="1061" width="0.0140%" height="15" fill="rgb(242,170,10)" fg:x="79088" fg:w="15"/><text x="74.2636%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (15 samples, 0.01%)</title><rect x="74.0136%" y="1045" width="0.0140%" height="15" fill="rgb(228,214,39)" fg:x="79088" fg:w="15"/><text x="74.2636%" y="1055.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (15 samples, 0.01%)</title><rect x="74.0136%" y="1029" width="0.0140%" height="15" fill="rgb(218,179,33)" fg:x="79088" fg:w="15"/><text x="74.2636%" y="1039.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (59 samples, 0.06%)</title><rect x="74.0501%" y="1157" width="0.0552%" height="15" fill="rgb(235,193,39)" fg:x="79127" fg:w="59"/><text x="74.3001%" y="1167.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="74.1063%" y="949" width="0.0103%" height="15" fill="rgb(219,221,36)" fg:x="79187" fg:w="11"/><text x="74.3563%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (42 samples, 0.04%)</title><rect x="74.1278%" y="821" width="0.0393%" height="15" fill="rgb(248,218,19)" fg:x="79210" fg:w="42"/><text x="74.3778%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="74.1278%" y="805" width="0.0393%" height="15" fill="rgb(205,50,9)" fg:x="79210" fg:w="42"/><text x="74.3778%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (42 samples, 0.04%)</title><rect x="74.1278%" y="789" width="0.0393%" height="15" fill="rgb(238,81,28)" fg:x="79210" fg:w="42"/><text x="74.3778%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (41 samples, 0.04%)</title><rect x="74.1287%" y="773" width="0.0384%" height="15" fill="rgb(235,110,19)" fg:x="79211" fg:w="41"/><text x="74.3787%" y="783.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (41 samples, 0.04%)</title><rect x="74.1287%" y="757" width="0.0384%" height="15" fill="rgb(214,7,14)" fg:x="79211" fg:w="41"/><text x="74.3787%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (18 samples, 0.02%)</title><rect x="74.1671%" y="821" width="0.0168%" height="15" fill="rgb(211,77,3)" fg:x="79252" fg:w="18"/><text x="74.4171%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="74.1671%" y="805" width="0.0168%" height="15" fill="rgb(229,5,9)" fg:x="79252" fg:w="18"/><text x="74.4171%" y="815.50"></text></g><g><title>async_io::reactor::Reactor::notify (16 samples, 0.01%)</title><rect x="74.1914%" y="773" width="0.0150%" height="15" fill="rgb(225,90,11)" fg:x="79278" fg:w="16"/><text x="74.4414%" y="783.50"></text></g><g><title>polling::Poller::notify (15 samples, 0.01%)</title><rect x="74.1924%" y="757" width="0.0140%" height="15" fill="rgb(242,56,8)" fg:x="79279" fg:w="15"/><text x="74.4424%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (39 samples, 0.04%)</title><rect x="74.2279%" y="741" width="0.0365%" height="15" fill="rgb(249,212,39)" fg:x="79317" fg:w="39"/><text x="74.4779%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (39 samples, 0.04%)</title><rect x="74.2279%" y="725" width="0.0365%" height="15" fill="rgb(236,90,9)" fg:x="79317" fg:w="39"/><text x="74.4779%" y="735.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (47 samples, 0.04%)</title><rect x="74.2644%" y="741" width="0.0440%" height="15" fill="rgb(206,88,35)" fg:x="79356" fg:w="47"/><text x="74.5144%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (47 samples, 0.04%)</title><rect x="74.2644%" y="725" width="0.0440%" height="15" fill="rgb(205,126,30)" fg:x="79356" fg:w="47"/><text x="74.5144%" y="735.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (47 samples, 0.04%)</title><rect x="74.2644%" y="709" width="0.0440%" height="15" fill="rgb(230,176,12)" fg:x="79356" fg:w="47"/><text x="74.5144%" y="719.50"></text></g><g><title>__pthread_cond_signal (47 samples, 0.04%)</title><rect x="74.2644%" y="693" width="0.0440%" height="15" fill="rgb(243,19,9)" fg:x="79356" fg:w="47"/><text x="74.5144%" y="703.50"></text></g><g><title>parking::Unparker::unpark (133 samples, 0.12%)</title><rect x="74.2083%" y="773" width="0.1245%" height="15" fill="rgb(245,171,17)" fg:x="79296" fg:w="133"/><text x="74.4583%" y="783.50"></text></g><g><title>parking::Inner::unpark (119 samples, 0.11%)</title><rect x="74.2214%" y="757" width="0.1114%" height="15" fill="rgb(227,52,21)" fg:x="79310" fg:w="119"/><text x="74.4714%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (26 samples, 0.02%)</title><rect x="74.3084%" y="741" width="0.0243%" height="15" fill="rgb(238,69,14)" fg:x="79403" fg:w="26"/><text x="74.5584%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.02%)</title><rect x="74.3103%" y="725" width="0.0225%" height="15" fill="rgb(241,156,39)" fg:x="79405" fg:w="24"/><text x="74.5603%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (24 samples, 0.02%)</title><rect x="74.3103%" y="709" width="0.0225%" height="15" fill="rgb(212,227,28)" fg:x="79405" fg:w="24"/><text x="74.5603%" y="719.50"></text></g><g><title>__GI___pthread_mutex_lock (24 samples, 0.02%)</title><rect x="74.3103%" y="693" width="0.0225%" height="15" fill="rgb(209,118,27)" fg:x="79405" fg:w="24"/><text x="74.5603%" y="703.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (163 samples, 0.15%)</title><rect x="74.1858%" y="789" width="0.1525%" height="15" fill="rgb(226,102,5)" fg:x="79272" fg:w="163"/><text x="74.4358%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (41 samples, 0.04%)</title><rect x="74.3384%" y="789" width="0.0384%" height="15" fill="rgb(223,34,3)" fg:x="79435" fg:w="41"/><text x="74.5884%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="74.3384%" y="773" width="0.0384%" height="15" fill="rgb(221,81,38)" fg:x="79435" fg:w="41"/><text x="74.5884%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (41 samples, 0.04%)</title><rect x="74.3384%" y="757" width="0.0384%" height="15" fill="rgb(236,219,28)" fg:x="79435" fg:w="41"/><text x="74.5884%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (41 samples, 0.04%)</title><rect x="74.3384%" y="741" width="0.0384%" height="15" fill="rgb(213,200,14)" fg:x="79435" fg:w="41"/><text x="74.5884%" y="751.50"></text></g><g><title>core::task::wake::Waker::wake (207 samples, 0.19%)</title><rect x="74.1839%" y="821" width="0.1937%" height="15" fill="rgb(240,33,19)" fg:x="79270" fg:w="207"/><text x="74.4339%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (206 samples, 0.19%)</title><rect x="74.1849%" y="805" width="0.1928%" height="15" fill="rgb(233,113,27)" fg:x="79271" fg:w="206"/><text x="74.4349%" y="815.50"></text></g><g><title>async_executor::State::notify (327 samples, 0.31%)</title><rect x="74.1175%" y="837" width="0.3060%" height="15" fill="rgb(220,221,18)" fg:x="79199" fg:w="327"/><text x="74.3675%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (49 samples, 0.05%)</title><rect x="74.3777%" y="821" width="0.0459%" height="15" fill="rgb(238,92,8)" fg:x="79477" fg:w="49"/><text x="74.6277%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (48 samples, 0.04%)</title><rect x="74.3786%" y="805" width="0.0449%" height="15" fill="rgb(222,164,16)" fg:x="79478" fg:w="48"/><text x="74.6286%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (46 samples, 0.04%)</title><rect x="74.3805%" y="789" width="0.0430%" height="15" fill="rgb(241,119,3)" fg:x="79480" fg:w="46"/><text x="74.6305%" y="799.50"></text></g><g><title>__GI___pthread_mutex_lock (46 samples, 0.04%)</title><rect x="74.3805%" y="773" width="0.0430%" height="15" fill="rgb(241,44,8)" fg:x="79480" fg:w="46"/><text x="74.6305%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (62 samples, 0.06%)</title><rect x="74.4413%" y="805" width="0.0580%" height="15" fill="rgb(230,36,40)" fg:x="79545" fg:w="62"/><text x="74.6913%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (62 samples, 0.06%)</title><rect x="74.4413%" y="789" width="0.0580%" height="15" fill="rgb(243,16,36)" fg:x="79545" fg:w="62"/><text x="74.6913%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (30 samples, 0.03%)</title><rect x="74.4993%" y="805" width="0.0281%" height="15" fill="rgb(231,4,26)" fg:x="79607" fg:w="30"/><text x="74.7493%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_or (30 samples, 0.03%)</title><rect x="74.4993%" y="789" width="0.0281%" height="15" fill="rgb(240,9,31)" fg:x="79607" fg:w="30"/><text x="74.7493%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (462 samples, 0.43%)</title><rect x="74.1063%" y="1029" width="0.4324%" height="15" fill="rgb(207,173,15)" fg:x="79187" fg:w="462"/><text x="74.3563%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (462 samples, 0.43%)</title><rect x="74.1063%" y="1013" width="0.4324%" height="15" fill="rgb(224,192,53)" fg:x="79187" fg:w="462"/><text x="74.3563%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (462 samples, 0.43%)</title><rect x="74.1063%" y="997" width="0.4324%" height="15" fill="rgb(223,67,28)" fg:x="79187" fg:w="462"/><text x="74.3563%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (462 samples, 0.43%)</title><rect x="74.1063%" y="981" width="0.4324%" height="15" fill="rgb(211,20,47)" fg:x="79187" fg:w="462"/><text x="74.3563%" y="991.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (462 samples, 0.43%)</title><rect x="74.1063%" y="965" width="0.4324%" height="15" fill="rgb(240,228,2)" fg:x="79187" fg:w="462"/><text x="74.3563%" y="975.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (451 samples, 0.42%)</title><rect x="74.1166%" y="949" width="0.4221%" height="15" fill="rgb(248,151,12)" fg:x="79198" fg:w="451"/><text x="74.3666%" y="959.50"></text></g><g><title>event_listener::Event::notify (451 samples, 0.42%)</title><rect x="74.1166%" y="933" width="0.4221%" height="15" fill="rgb(244,8,39)" fg:x="79198" fg:w="451"/><text x="74.3666%" y="943.50"></text></g><g><title>event_listener::List::notify (451 samples, 0.42%)</title><rect x="74.1166%" y="917" width="0.4221%" height="15" fill="rgb(222,26,8)" fg:x="79198" fg:w="451"/><text x="74.3666%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (451 samples, 0.42%)</title><rect x="74.1166%" y="901" width="0.4221%" height="15" fill="rgb(213,106,44)" fg:x="79198" fg:w="451"/><text x="74.3666%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (451 samples, 0.42%)</title><rect x="74.1166%" y="885" width="0.4221%" height="15" fill="rgb(214,129,20)" fg:x="79198" fg:w="451"/><text x="74.3666%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (451 samples, 0.42%)</title><rect x="74.1166%" y="869" width="0.4221%" height="15" fill="rgb(212,32,13)" fg:x="79198" fg:w="451"/><text x="74.3666%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (451 samples, 0.42%)</title><rect x="74.1166%" y="853" width="0.4221%" height="15" fill="rgb(208,168,33)" fg:x="79198" fg:w="451"/><text x="74.3666%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (123 samples, 0.12%)</title><rect x="74.4235%" y="837" width="0.1151%" height="15" fill="rgb(231,207,8)" fg:x="79526" fg:w="123"/><text x="74.6735%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (113 samples, 0.11%)</title><rect x="74.4329%" y="821" width="0.1057%" height="15" fill="rgb(235,219,23)" fg:x="79536" fg:w="113"/><text x="74.6829%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="74.5274%" y="805" width="0.0112%" height="15" fill="rgb(226,216,26)" fg:x="79637" fg:w="12"/><text x="74.7774%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="74.5274%" y="789" width="0.0112%" height="15" fill="rgb(239,137,16)" fg:x="79637" fg:w="12"/><text x="74.7774%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (11 samples, 0.01%)</title><rect x="74.5386%" y="661" width="0.0103%" height="15" fill="rgb(207,12,36)" fg:x="79649" fg:w="11"/><text x="74.7886%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (61 samples, 0.06%)</title><rect x="74.5386%" y="693" width="0.0571%" height="15" fill="rgb(210,214,24)" fg:x="79649" fg:w="61"/><text x="74.7886%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (61 samples, 0.06%)</title><rect x="74.5386%" y="677" width="0.0571%" height="15" fill="rgb(206,56,30)" fg:x="79649" fg:w="61"/><text x="74.7886%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (50 samples, 0.05%)</title><rect x="74.5489%" y="661" width="0.0468%" height="15" fill="rgb(228,143,26)" fg:x="79660" fg:w="50"/><text x="74.7989%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (40 samples, 0.04%)</title><rect x="74.5583%" y="645" width="0.0374%" height="15" fill="rgb(216,218,46)" fg:x="79670" fg:w="40"/><text x="74.8083%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="74.5583%" y="629" width="0.0374%" height="15" fill="rgb(206,6,19)" fg:x="79670" fg:w="40"/><text x="74.8083%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (40 samples, 0.04%)</title><rect x="74.5583%" y="613" width="0.0374%" height="15" fill="rgb(239,177,51)" fg:x="79670" fg:w="40"/><text x="74.8083%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (62 samples, 0.06%)</title><rect x="74.5386%" y="997" width="0.0580%" height="15" fill="rgb(216,55,25)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (62 samples, 0.06%)</title><rect x="74.5386%" y="981" width="0.0580%" height="15" fill="rgb(231,163,29)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (62 samples, 0.06%)</title><rect x="74.5386%" y="965" width="0.0580%" height="15" fill="rgb(232,149,50)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (62 samples, 0.06%)</title><rect x="74.5386%" y="949" width="0.0580%" height="15" fill="rgb(223,142,48)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62 samples, 0.06%)</title><rect x="74.5386%" y="933" width="0.0580%" height="15" fill="rgb(245,83,23)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (62 samples, 0.06%)</title><rect x="74.5386%" y="917" width="0.0580%" height="15" fill="rgb(224,63,2)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62 samples, 0.06%)</title><rect x="74.5386%" y="901" width="0.0580%" height="15" fill="rgb(218,65,53)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (62 samples, 0.06%)</title><rect x="74.5386%" y="885" width="0.0580%" height="15" fill="rgb(221,84,29)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62 samples, 0.06%)</title><rect x="74.5386%" y="869" width="0.0580%" height="15" fill="rgb(234,0,32)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (62 samples, 0.06%)</title><rect x="74.5386%" y="853" width="0.0580%" height="15" fill="rgb(206,20,16)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62 samples, 0.06%)</title><rect x="74.5386%" y="837" width="0.0580%" height="15" fill="rgb(244,172,18)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (62 samples, 0.06%)</title><rect x="74.5386%" y="821" width="0.0580%" height="15" fill="rgb(254,133,1)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="831.50"></text></g><g><title>alloc::alloc::alloc (62 samples, 0.06%)</title><rect x="74.5386%" y="805" width="0.0580%" height="15" fill="rgb(222,206,41)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="815.50"></text></g><g><title>__rg_alloc (62 samples, 0.06%)</title><rect x="74.5386%" y="789" width="0.0580%" height="15" fill="rgb(212,3,42)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (62 samples, 0.06%)</title><rect x="74.5386%" y="773" width="0.0580%" height="15" fill="rgb(241,11,4)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="783.50"></text></g><g><title>rust_alloc (62 samples, 0.06%)</title><rect x="74.5386%" y="757" width="0.0580%" height="15" fill="rgb(205,19,26)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.06%)</title><rect x="74.5386%" y="741" width="0.0580%" height="15" fill="rgb(210,179,32)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.06%)</title><rect x="74.5386%" y="725" width="0.0580%" height="15" fill="rgb(227,116,49)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.06%)</title><rect x="74.5386%" y="709" width="0.0580%" height="15" fill="rgb(211,146,6)" fg:x="79649" fg:w="62"/><text x="74.7886%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="74.5967%" y="597" width="0.0365%" height="15" fill="rgb(219,44,39)" fg:x="79711" fg:w="39"/><text x="74.8467%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (39 samples, 0.04%)</title><rect x="74.5967%" y="581" width="0.0365%" height="15" fill="rgb(234,128,11)" fg:x="79711" fg:w="39"/><text x="74.8467%" y="591.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (34 samples, 0.03%)</title><rect x="74.6013%" y="565" width="0.0318%" height="15" fill="rgb(220,183,53)" fg:x="79716" fg:w="34"/><text x="74.8513%" y="575.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (28 samples, 0.03%)</title><rect x="74.6069%" y="549" width="0.0262%" height="15" fill="rgb(213,219,32)" fg:x="79722" fg:w="28"/><text x="74.8569%" y="559.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (28 samples, 0.03%)</title><rect x="74.6069%" y="533" width="0.0262%" height="15" fill="rgb(232,156,16)" fg:x="79722" fg:w="28"/><text x="74.8569%" y="543.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (28 samples, 0.03%)</title><rect x="74.6069%" y="517" width="0.0262%" height="15" fill="rgb(246,135,34)" fg:x="79722" fg:w="28"/><text x="74.8569%" y="527.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (70 samples, 0.07%)</title><rect x="74.5967%" y="901" width="0.0655%" height="15" fill="rgb(241,99,0)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (70 samples, 0.07%)</title><rect x="74.5967%" y="885" width="0.0655%" height="15" fill="rgb(222,103,45)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (70 samples, 0.07%)</title><rect x="74.5967%" y="869" width="0.0655%" height="15" fill="rgb(212,57,4)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (70 samples, 0.07%)</title><rect x="74.5967%" y="853" width="0.0655%" height="15" fill="rgb(215,68,47)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (70 samples, 0.07%)</title><rect x="74.5967%" y="837" width="0.0655%" height="15" fill="rgb(230,84,2)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (70 samples, 0.07%)</title><rect x="74.5967%" y="821" width="0.0655%" height="15" fill="rgb(220,102,14)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (70 samples, 0.07%)</title><rect x="74.5967%" y="805" width="0.0655%" height="15" fill="rgb(240,10,32)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (70 samples, 0.07%)</title><rect x="74.5967%" y="789" width="0.0655%" height="15" fill="rgb(215,47,27)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (70 samples, 0.07%)</title><rect x="74.5967%" y="773" width="0.0655%" height="15" fill="rgb(233,188,43)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (70 samples, 0.07%)</title><rect x="74.5967%" y="757" width="0.0655%" height="15" fill="rgb(253,190,1)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (70 samples, 0.07%)</title><rect x="74.5967%" y="741" width="0.0655%" height="15" fill="rgb(206,114,52)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (70 samples, 0.07%)</title><rect x="74.5967%" y="725" width="0.0655%" height="15" fill="rgb(233,120,37)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="735.50"></text></g><g><title>alloc::alloc::alloc (70 samples, 0.07%)</title><rect x="74.5967%" y="709" width="0.0655%" height="15" fill="rgb(214,52,39)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="719.50"></text></g><g><title>__rg_alloc (70 samples, 0.07%)</title><rect x="74.5967%" y="693" width="0.0655%" height="15" fill="rgb(223,80,29)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="703.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (70 samples, 0.07%)</title><rect x="74.5967%" y="677" width="0.0655%" height="15" fill="rgb(230,101,40)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="687.50"></text></g><g><title>rust_alloc (70 samples, 0.07%)</title><rect x="74.5967%" y="661" width="0.0655%" height="15" fill="rgb(219,211,8)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (70 samples, 0.07%)</title><rect x="74.5967%" y="645" width="0.0655%" height="15" fill="rgb(252,126,28)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (70 samples, 0.07%)</title><rect x="74.5967%" y="629" width="0.0655%" height="15" fill="rgb(215,56,38)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (70 samples, 0.07%)</title><rect x="74.5967%" y="613" width="0.0655%" height="15" fill="rgb(249,55,44)" fg:x="79711" fg:w="70"/><text x="74.8467%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="74.6332%" y="597" width="0.0290%" height="15" fill="rgb(220,221,32)" fg:x="79750" fg:w="31"/><text x="74.8832%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="74.6332%" y="581" width="0.0290%" height="15" fill="rgb(212,216,41)" fg:x="79750" fg:w="31"/><text x="74.8832%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="74.6332%" y="565" width="0.0290%" height="15" fill="rgb(228,213,43)" fg:x="79750" fg:w="31"/><text x="74.8832%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="74.6341%" y="549" width="0.0281%" height="15" fill="rgb(211,31,26)" fg:x="79751" fg:w="30"/><text x="74.8841%" y="559.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (30 samples, 0.03%)</title><rect x="74.6341%" y="533" width="0.0281%" height="15" fill="rgb(229,202,19)" fg:x="79751" fg:w="30"/><text x="74.8841%" y="543.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (17 samples, 0.02%)</title><rect x="74.6463%" y="517" width="0.0159%" height="15" fill="rgb(229,105,46)" fg:x="79764" fg:w="17"/><text x="74.8963%" y="527.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="74.6463%" y="501" width="0.0159%" height="15" fill="rgb(235,108,1)" fg:x="79764" fg:w="17"/><text x="74.8963%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.04%)</title><rect x="74.6622%" y="709" width="0.0356%" height="15" fill="rgb(245,111,35)" fg:x="79781" fg:w="38"/><text x="74.9122%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (38 samples, 0.04%)</title><rect x="74.6622%" y="693" width="0.0356%" height="15" fill="rgb(219,185,31)" fg:x="79781" fg:w="38"/><text x="74.9122%" y="703.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (30 samples, 0.03%)</title><rect x="74.6696%" y="677" width="0.0281%" height="15" fill="rgb(214,4,43)" fg:x="79789" fg:w="30"/><text x="74.9196%" y="687.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (28 samples, 0.03%)</title><rect x="74.6715%" y="661" width="0.0262%" height="15" fill="rgb(235,227,40)" fg:x="79791" fg:w="28"/><text x="74.9215%" y="671.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (28 samples, 0.03%)</title><rect x="74.6715%" y="645" width="0.0262%" height="15" fill="rgb(230,88,30)" fg:x="79791" fg:w="28"/><text x="74.9215%" y="655.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (28 samples, 0.03%)</title><rect x="74.6715%" y="629" width="0.0262%" height="15" fill="rgb(216,217,1)" fg:x="79791" fg:w="28"/><text x="74.9215%" y="639.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (174 samples, 0.16%)</title><rect x="74.5386%" y="1013" width="0.1628%" height="15" fill="rgb(248,139,50)" fg:x="79649" fg:w="174"/><text x="74.7886%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (112 samples, 0.10%)</title><rect x="74.5967%" y="997" width="0.1048%" height="15" fill="rgb(233,1,21)" fg:x="79711" fg:w="112"/><text x="74.8467%" y="1007.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (112 samples, 0.10%)</title><rect x="74.5967%" y="981" width="0.1048%" height="15" fill="rgb(215,183,12)" fg:x="79711" fg:w="112"/><text x="74.8467%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (112 samples, 0.10%)</title><rect x="74.5967%" y="965" width="0.1048%" height="15" fill="rgb(229,104,42)" fg:x="79711" fg:w="112"/><text x="74.8467%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (112 samples, 0.10%)</title><rect x="74.5967%" y="949" width="0.1048%" height="15" fill="rgb(243,34,48)" fg:x="79711" fg:w="112"/><text x="74.8467%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (112 samples, 0.10%)</title><rect x="74.5967%" y="933" width="0.1048%" height="15" fill="rgb(239,11,44)" fg:x="79711" fg:w="112"/><text x="74.8467%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (112 samples, 0.10%)</title><rect x="74.5967%" y="917" width="0.1048%" height="15" fill="rgb(231,98,35)" fg:x="79711" fg:w="112"/><text x="74.8467%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (42 samples, 0.04%)</title><rect x="74.6622%" y="901" width="0.0393%" height="15" fill="rgb(233,28,25)" fg:x="79781" fg:w="42"/><text x="74.9122%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (42 samples, 0.04%)</title><rect x="74.6622%" y="885" width="0.0393%" height="15" fill="rgb(234,123,11)" fg:x="79781" fg:w="42"/><text x="74.9122%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (42 samples, 0.04%)</title><rect x="74.6622%" y="869" width="0.0393%" height="15" fill="rgb(220,69,3)" fg:x="79781" fg:w="42"/><text x="74.9122%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.04%)</title><rect x="74.6622%" y="853" width="0.0393%" height="15" fill="rgb(214,64,36)" fg:x="79781" fg:w="42"/><text x="74.9122%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.04%)</title><rect x="74.6622%" y="837" width="0.0393%" height="15" fill="rgb(211,138,32)" fg:x="79781" fg:w="42"/><text x="74.9122%" y="847.50"></text></g><g><title>alloc::alloc::alloc (42 samples, 0.04%)</title><rect x="74.6622%" y="821" width="0.0393%" height="15" fill="rgb(213,118,47)" fg:x="79781" fg:w="42"/><text x="74.9122%" y="831.50"></text></g><g><title>__rg_alloc (42 samples, 0.04%)</title><rect x="74.6622%" y="805" width="0.0393%" height="15" fill="rgb(243,124,49)" fg:x="79781" fg:w="42"/><text x="74.9122%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (42 samples, 0.04%)</title><rect x="74.6622%" y="789" width="0.0393%" height="15" fill="rgb(221,30,28)" fg:x="79781" fg:w="42"/><text x="74.9122%" y="799.50"></text></g><g><title>rust_alloc (42 samples, 0.04%)</title><rect x="74.6622%" y="773" width="0.0393%" height="15" fill="rgb(246,37,13)" fg:x="79781" fg:w="42"/><text x="74.9122%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="74.6622%" y="757" width="0.0393%" height="15" fill="rgb(249,66,14)" fg:x="79781" fg:w="42"/><text x="74.9122%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="74.6622%" y="741" width="0.0393%" height="15" fill="rgb(213,166,5)" fg:x="79781" fg:w="42"/><text x="74.9122%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="74.6622%" y="725" width="0.0393%" height="15" fill="rgb(221,66,24)" fg:x="79781" fg:w="42"/><text x="74.9122%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (11 samples, 0.01%)</title><rect x="74.7146%" y="709" width="0.0103%" height="15" fill="rgb(210,132,17)" fg:x="79837" fg:w="11"/><text x="74.9646%" y="719.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (24 samples, 0.02%)</title><rect x="74.7342%" y="693" width="0.0225%" height="15" fill="rgb(243,202,5)" fg:x="79858" fg:w="24"/><text x="74.9842%" y="703.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="74.7342%" y="677" width="0.0225%" height="15" fill="rgb(233,70,48)" fg:x="79858" fg:w="24"/><text x="74.9842%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (67 samples, 0.06%)</title><rect x="74.7146%" y="741" width="0.0627%" height="15" fill="rgb(238,41,26)" fg:x="79837" fg:w="67"/><text x="74.9646%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (67 samples, 0.06%)</title><rect x="74.7146%" y="725" width="0.0627%" height="15" fill="rgb(241,19,31)" fg:x="79837" fg:w="67"/><text x="74.9646%" y="735.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (56 samples, 0.05%)</title><rect x="74.7249%" y="709" width="0.0524%" height="15" fill="rgb(214,76,10)" fg:x="79848" fg:w="56"/><text x="74.9749%" y="719.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (22 samples, 0.02%)</title><rect x="74.7567%" y="693" width="0.0206%" height="15" fill="rgb(254,202,22)" fg:x="79882" fg:w="22"/><text x="75.0067%" y="703.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (22 samples, 0.02%)</title><rect x="74.7567%" y="677" width="0.0206%" height="15" fill="rgb(214,72,24)" fg:x="79882" fg:w="22"/><text x="75.0067%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (84 samples, 0.08%)</title><rect x="74.7127%" y="757" width="0.0786%" height="15" fill="rgb(221,92,46)" fg:x="79835" fg:w="84"/><text x="74.9627%" y="767.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="74.7773%" y="741" width="0.0140%" height="15" fill="rgb(246,13,50)" fg:x="79904" fg:w="15"/><text x="75.0273%" y="751.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="74.7773%" y="725" width="0.0140%" height="15" fill="rgb(240,165,38)" fg:x="79904" fg:w="15"/><text x="75.0273%" y="735.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (15 samples, 0.01%)</title><rect x="74.7773%" y="709" width="0.0140%" height="15" fill="rgb(241,24,51)" fg:x="79904" fg:w="15"/><text x="75.0273%" y="719.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="74.7773%" y="693" width="0.0140%" height="15" fill="rgb(227,51,44)" fg:x="79904" fg:w="15"/><text x="75.0273%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (110 samples, 0.10%)</title><rect x="74.7015%" y="773" width="0.1029%" height="15" fill="rgb(231,121,3)" fg:x="79823" fg:w="110"/><text x="74.9515%" y="783.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="74.7941%" y="757" width="0.0103%" height="15" fill="rgb(245,3,41)" fg:x="79922" fg:w="11"/><text x="75.0441%" y="767.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="74.7941%" y="741" width="0.0103%" height="15" fill="rgb(214,13,26)" fg:x="79922" fg:w="11"/><text x="75.0441%" y="751.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="74.7941%" y="725" width="0.0103%" height="15" fill="rgb(252,75,11)" fg:x="79922" fg:w="11"/><text x="75.0441%" y="735.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="74.7941%" y="709" width="0.0103%" height="15" fill="rgb(218,226,17)" fg:x="79922" fg:w="11"/><text x="75.0441%" y="719.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (63 samples, 0.06%)</title><rect x="74.8437%" y="757" width="0.0590%" height="15" fill="rgb(248,89,38)" fg:x="79975" fg:w="63"/><text x="75.0937%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (592 samples, 0.55%)</title><rect x="74.7015%" y="805" width="0.5540%" height="15" fill="rgb(237,73,46)" fg:x="79823" fg:w="592"/><text x="74.9515%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (592 samples, 0.55%)</title><rect x="74.7015%" y="789" width="0.5540%" height="15" fill="rgb(242,78,33)" fg:x="79823" fg:w="592"/><text x="74.9515%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (482 samples, 0.45%)</title><rect x="74.8044%" y="773" width="0.4511%" height="15" fill="rgb(235,60,3)" fg:x="79933" fg:w="482"/><text x="75.0544%" y="783.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (377 samples, 0.35%)</title><rect x="74.9027%" y="757" width="0.3528%" height="15" fill="rgb(216,172,19)" fg:x="80038" fg:w="377"/><text x="75.1527%" y="767.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (377 samples, 0.35%)</title><rect x="74.9027%" y="741" width="0.3528%" height="15" fill="rgb(227,6,42)" fg:x="80038" fg:w="377"/><text x="75.1527%" y="751.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (377 samples, 0.35%)</title><rect x="74.9027%" y="725" width="0.3528%" height="15" fill="rgb(223,207,42)" fg:x="80038" fg:w="377"/><text x="75.1527%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (601 samples, 0.56%)</title><rect x="74.7015%" y="1013" width="0.5624%" height="15" fill="rgb(246,138,30)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (601 samples, 0.56%)</title><rect x="74.7015%" y="997" width="0.5624%" height="15" fill="rgb(251,199,47)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (601 samples, 0.56%)</title><rect x="74.7015%" y="981" width="0.5624%" height="15" fill="rgb(228,218,44)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (601 samples, 0.56%)</title><rect x="74.7015%" y="965" width="0.5624%" height="15" fill="rgb(220,68,6)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (601 samples, 0.56%)</title><rect x="74.7015%" y="949" width="0.5624%" height="15" fill="rgb(240,60,26)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (601 samples, 0.56%)</title><rect x="74.7015%" y="933" width="0.5624%" height="15" fill="rgb(211,200,19)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="943.50"></text></g><g><title>alloc::alloc::alloc (601 samples, 0.56%)</title><rect x="74.7015%" y="917" width="0.5624%" height="15" fill="rgb(242,145,30)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="927.50"></text></g><g><title>__rg_alloc (601 samples, 0.56%)</title><rect x="74.7015%" y="901" width="0.5624%" height="15" fill="rgb(225,64,13)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (601 samples, 0.56%)</title><rect x="74.7015%" y="885" width="0.5624%" height="15" fill="rgb(218,103,35)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="895.50"></text></g><g><title>rust_alloc (601 samples, 0.56%)</title><rect x="74.7015%" y="869" width="0.5624%" height="15" fill="rgb(216,93,46)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (601 samples, 0.56%)</title><rect x="74.7015%" y="853" width="0.5624%" height="15" fill="rgb(225,159,27)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (601 samples, 0.56%)</title><rect x="74.7015%" y="837" width="0.5624%" height="15" fill="rgb(225,204,11)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (601 samples, 0.56%)</title><rect x="74.7015%" y="821" width="0.5624%" height="15" fill="rgb(205,56,4)" fg:x="79823" fg:w="601"/><text x="74.9515%" y="831.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (341 samples, 0.32%)</title><rect x="75.5503%" y="981" width="0.3191%" height="15" fill="rgb(206,6,35)" fg:x="80730" fg:w="341"/><text x="75.8003%" y="991.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="75.9162%" y="789" width="0.0122%" height="15" fill="rgb(247,73,52)" fg:x="81121" fg:w="13"/><text x="76.1662%" y="799.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="75.9284%" y="789" width="0.0131%" height="15" fill="rgb(246,97,4)" fg:x="81134" fg:w="14"/><text x="76.1784%" y="799.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="75.9415%" y="757" width="0.0131%" height="15" fill="rgb(212,37,15)" fg:x="81148" fg:w="14"/><text x="76.1915%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="75.9648%" y="693" width="0.0112%" height="15" fill="rgb(208,130,40)" fg:x="81173" fg:w="12"/><text x="76.2148%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="75.9630%" y="709" width="0.0140%" height="15" fill="rgb(236,55,29)" fg:x="81171" fg:w="15"/><text x="76.2130%" y="719.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (15 samples, 0.01%)</title><rect x="75.9892%" y="693" width="0.0140%" height="15" fill="rgb(209,156,45)" fg:x="81199" fg:w="15"/><text x="76.2392%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (118 samples, 0.11%)</title><rect x="75.9630%" y="741" width="0.1104%" height="15" fill="rgb(249,107,4)" fg:x="81171" fg:w="118"/><text x="76.2130%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (118 samples, 0.11%)</title><rect x="75.9630%" y="725" width="0.1104%" height="15" fill="rgb(227,7,13)" fg:x="81171" fg:w="118"/><text x="76.2130%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (103 samples, 0.10%)</title><rect x="75.9770%" y="709" width="0.0964%" height="15" fill="rgb(250,129,14)" fg:x="81186" fg:w="103"/><text x="76.2270%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (75 samples, 0.07%)</title><rect x="76.0032%" y="693" width="0.0702%" height="15" fill="rgb(229,92,13)" fg:x="81214" fg:w="75"/><text x="76.2532%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (75 samples, 0.07%)</title><rect x="76.0032%" y="677" width="0.0702%" height="15" fill="rgb(245,98,39)" fg:x="81214" fg:w="75"/><text x="76.2532%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (75 samples, 0.07%)</title><rect x="76.0032%" y="661" width="0.0702%" height="15" fill="rgb(234,135,48)" fg:x="81214" fg:w="75"/><text x="76.2532%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (316 samples, 0.30%)</title><rect x="75.9415%" y="789" width="0.2957%" height="15" fill="rgb(230,98,28)" fg:x="81148" fg:w="316"/><text x="76.1915%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (316 samples, 0.30%)</title><rect x="75.9415%" y="773" width="0.2957%" height="15" fill="rgb(223,121,0)" fg:x="81148" fg:w="316"/><text x="76.1915%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (296 samples, 0.28%)</title><rect x="75.9602%" y="757" width="0.2770%" height="15" fill="rgb(234,173,33)" fg:x="81168" fg:w="296"/><text x="76.2102%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (154 samples, 0.14%)</title><rect x="76.0931%" y="741" width="0.1441%" height="15" fill="rgb(245,47,8)" fg:x="81310" fg:w="154"/><text x="76.3431%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (154 samples, 0.14%)</title><rect x="76.0931%" y="725" width="0.1441%" height="15" fill="rgb(205,17,20)" fg:x="81310" fg:w="154"/><text x="76.3431%" y="735.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (808 samples, 0.76%)</title><rect x="75.4894%" y="997" width="0.7562%" height="15" fill="rgb(232,151,16)" fg:x="80665" fg:w="808"/><text x="75.7394%" y="1007.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (402 samples, 0.38%)</title><rect x="75.8694%" y="981" width="0.3762%" height="15" fill="rgb(208,30,32)" fg:x="81071" fg:w="402"/><text x="76.1194%" y="991.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (396 samples, 0.37%)</title><rect x="75.8750%" y="965" width="0.3706%" height="15" fill="rgb(254,26,3)" fg:x="81077" fg:w="396"/><text x="76.1250%" y="975.50"></text></g><g><title>value_trait::Builder::object (396 samples, 0.37%)</title><rect x="75.8750%" y="949" width="0.3706%" height="15" fill="rgb(240,177,30)" fg:x="81077" fg:w="396"/><text x="76.1250%" y="959.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (396 samples, 0.37%)</title><rect x="75.8750%" y="933" width="0.3706%" height="15" fill="rgb(248,76,44)" fg:x="81077" fg:w="396"/><text x="76.1250%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (396 samples, 0.37%)</title><rect x="75.8750%" y="917" width="0.3706%" height="15" fill="rgb(241,186,54)" fg:x="81077" fg:w="396"/><text x="76.1250%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (382 samples, 0.36%)</title><rect x="75.8881%" y="901" width="0.3575%" height="15" fill="rgb(249,171,29)" fg:x="81091" fg:w="382"/><text x="76.1381%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (379 samples, 0.35%)</title><rect x="75.8909%" y="885" width="0.3547%" height="15" fill="rgb(237,151,44)" fg:x="81094" fg:w="379"/><text x="76.1409%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (379 samples, 0.35%)</title><rect x="75.8909%" y="869" width="0.3547%" height="15" fill="rgb(228,174,30)" fg:x="81094" fg:w="379"/><text x="76.1409%" y="879.50"></text></g><g><title>alloc::alloc::alloc (379 samples, 0.35%)</title><rect x="75.8909%" y="853" width="0.3547%" height="15" fill="rgb(252,14,37)" fg:x="81094" fg:w="379"/><text x="76.1409%" y="863.50"></text></g><g><title>__rg_alloc (379 samples, 0.35%)</title><rect x="75.8909%" y="837" width="0.3547%" height="15" fill="rgb(207,111,40)" fg:x="81094" fg:w="379"/><text x="76.1409%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (379 samples, 0.35%)</title><rect x="75.8909%" y="821" width="0.3547%" height="15" fill="rgb(248,171,54)" fg:x="81094" fg:w="379"/><text x="76.1409%" y="831.50"></text></g><g><title>rust_alloc (352 samples, 0.33%)</title><rect x="75.9162%" y="805" width="0.3294%" height="15" fill="rgb(211,127,2)" fg:x="81121" fg:w="352"/><text x="76.1662%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (15 samples, 0.01%)</title><rect x="76.2522%" y="997" width="0.0140%" height="15" fill="rgb(236,87,47)" fg:x="81480" fg:w="15"/><text x="76.5022%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (15 samples, 0.01%)</title><rect x="76.2522%" y="981" width="0.0140%" height="15" fill="rgb(223,190,45)" fg:x="81480" fg:w="15"/><text x="76.5022%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (15 samples, 0.01%)</title><rect x="76.2522%" y="965" width="0.0140%" height="15" fill="rgb(215,5,16)" fg:x="81480" fg:w="15"/><text x="76.5022%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (71 samples, 0.07%)</title><rect x="76.2662%" y="981" width="0.0664%" height="15" fill="rgb(252,82,33)" fg:x="81495" fg:w="71"/><text x="76.5162%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (71 samples, 0.07%)</title><rect x="76.2662%" y="965" width="0.0664%" height="15" fill="rgb(247,213,44)" fg:x="81495" fg:w="71"/><text x="76.5162%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (42 samples, 0.04%)</title><rect x="76.2933%" y="949" width="0.0393%" height="15" fill="rgb(205,196,44)" fg:x="81524" fg:w="42"/><text x="76.5433%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (35 samples, 0.03%)</title><rect x="76.2999%" y="933" width="0.0328%" height="15" fill="rgb(237,96,54)" fg:x="81531" fg:w="35"/><text x="76.5499%" y="943.50"></text></g><g><title>core::mem::drop (20 samples, 0.02%)</title><rect x="76.3139%" y="917" width="0.0187%" height="15" fill="rgb(230,113,34)" fg:x="81546" fg:w="20"/><text x="76.5639%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="76.3139%" y="901" width="0.0187%" height="15" fill="rgb(221,224,12)" fg:x="81546" fg:w="20"/><text x="76.5639%" y="911.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="76.5039%" y="933" width="0.0103%" height="15" fill="rgb(219,112,44)" fg:x="81749" fg:w="11"/><text x="76.7539%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="76.5039%" y="917" width="0.0103%" height="15" fill="rgb(210,31,13)" fg:x="81749" fg:w="11"/><text x="76.7539%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="76.5039%" y="901" width="0.0103%" height="15" fill="rgb(230,25,16)" fg:x="81749" fg:w="11"/><text x="76.7539%" y="911.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="76.5039%" y="885" width="0.0103%" height="15" fill="rgb(246,108,53)" fg:x="81749" fg:w="11"/><text x="76.7539%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="76.5039%" y="869" width="0.0103%" height="15" fill="rgb(241,172,50)" fg:x="81749" fg:w="11"/><text x="76.7539%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="76.5395%" y="869" width="0.0290%" height="15" fill="rgb(235,141,10)" fg:x="81787" fg:w="31"/><text x="76.7895%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (25 samples, 0.02%)</title><rect x="76.5451%" y="853" width="0.0234%" height="15" fill="rgb(220,174,43)" fg:x="81793" fg:w="25"/><text x="76.7951%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (252 samples, 0.24%)</title><rect x="76.3542%" y="965" width="0.2358%" height="15" fill="rgb(215,181,40)" fg:x="81589" fg:w="252"/><text x="76.6042%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (98 samples, 0.09%)</title><rect x="76.4983%" y="949" width="0.0917%" height="15" fill="rgb(230,97,2)" fg:x="81743" fg:w="98"/><text x="76.7483%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (81 samples, 0.08%)</title><rect x="76.5142%" y="933" width="0.0758%" height="15" fill="rgb(211,25,27)" fg:x="81760" fg:w="81"/><text x="76.7642%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (81 samples, 0.08%)</title><rect x="76.5142%" y="917" width="0.0758%" height="15" fill="rgb(230,87,26)" fg:x="81760" fg:w="81"/><text x="76.7642%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (54 samples, 0.05%)</title><rect x="76.5395%" y="901" width="0.0505%" height="15" fill="rgb(227,160,17)" fg:x="81787" fg:w="54"/><text x="76.7895%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (54 samples, 0.05%)</title><rect x="76.5395%" y="885" width="0.0505%" height="15" fill="rgb(244,85,34)" fg:x="81787" fg:w="54"/><text x="76.7895%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (23 samples, 0.02%)</title><rect x="76.5685%" y="869" width="0.0215%" height="15" fill="rgb(207,70,0)" fg:x="81818" fg:w="23"/><text x="76.8185%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="76.5685%" y="853" width="0.0215%" height="15" fill="rgb(223,129,7)" fg:x="81818" fg:w="23"/><text x="76.8185%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (20 samples, 0.02%)</title><rect x="76.5713%" y="837" width="0.0187%" height="15" fill="rgb(246,105,7)" fg:x="81821" fg:w="20"/><text x="76.8213%" y="847.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="76.6040%" y="933" width="0.0168%" height="15" fill="rgb(215,154,42)" fg:x="81856" fg:w="18"/><text x="76.8540%" y="943.50"></text></g><g><title>size_to_sizeclass (26 samples, 0.02%)</title><rect x="76.6209%" y="933" width="0.0243%" height="15" fill="rgb(220,215,30)" fg:x="81874" fg:w="26"/><text x="76.8709%" y="943.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="76.6677%" y="869" width="0.0103%" height="15" fill="rgb(228,81,51)" fg:x="81924" fg:w="11"/><text x="76.9177%" y="879.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="76.6677%" y="853" width="0.0103%" height="15" fill="rgb(247,71,54)" fg:x="81924" fg:w="11"/><text x="76.9177%" y="863.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (47 samples, 0.04%)</title><rect x="76.7388%" y="821" width="0.0440%" height="15" fill="rgb(234,176,34)" fg:x="82000" fg:w="47"/><text x="76.9888%" y="831.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (42 samples, 0.04%)</title><rect x="76.7435%" y="805" width="0.0393%" height="15" fill="rgb(241,103,54)" fg:x="82005" fg:w="42"/><text x="76.9935%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (135 samples, 0.13%)</title><rect x="76.6789%" y="869" width="0.1263%" height="15" fill="rgb(228,22,34)" fg:x="81936" fg:w="135"/><text x="76.9289%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (135 samples, 0.13%)</title><rect x="76.6789%" y="853" width="0.1263%" height="15" fill="rgb(241,179,48)" fg:x="81936" fg:w="135"/><text x="76.9289%" y="863.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (133 samples, 0.12%)</title><rect x="76.6808%" y="837" width="0.1245%" height="15" fill="rgb(235,167,37)" fg:x="81938" fg:w="133"/><text x="76.9308%" y="847.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (24 samples, 0.02%)</title><rect x="76.7828%" y="821" width="0.0225%" height="15" fill="rgb(213,109,30)" fg:x="82047" fg:w="24"/><text x="77.0328%" y="831.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (24 samples, 0.02%)</title><rect x="76.7828%" y="805" width="0.0225%" height="15" fill="rgb(222,172,16)" fg:x="82047" fg:w="24"/><text x="77.0328%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (217 samples, 0.20%)</title><rect x="76.6452%" y="933" width="0.2031%" height="15" fill="rgb(233,192,5)" fg:x="81900" fg:w="217"/><text x="76.8952%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (217 samples, 0.20%)</title><rect x="76.6452%" y="917" width="0.2031%" height="15" fill="rgb(247,189,41)" fg:x="81900" fg:w="217"/><text x="76.8952%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (217 samples, 0.20%)</title><rect x="76.6452%" y="901" width="0.2031%" height="15" fill="rgb(218,134,47)" fg:x="81900" fg:w="217"/><text x="76.8952%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (217 samples, 0.20%)</title><rect x="76.6452%" y="885" width="0.2031%" height="15" fill="rgb(216,29,3)" fg:x="81900" fg:w="217"/><text x="76.8952%" y="895.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (46 samples, 0.04%)</title><rect x="76.8052%" y="869" width="0.0430%" height="15" fill="rgb(246,140,12)" fg:x="82071" fg:w="46"/><text x="77.0552%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (262 samples, 0.25%)</title><rect x="76.6040%" y="949" width="0.2452%" height="15" fill="rgb(230,136,11)" fg:x="81856" fg:w="262"/><text x="76.8540%" y="959.50"></text></g><g><title>rust_dealloc (284 samples, 0.27%)</title><rect x="76.5900%" y="965" width="0.2658%" height="15" fill="rgb(247,22,47)" fg:x="81841" fg:w="284"/><text x="76.8400%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (637 samples, 0.60%)</title><rect x="76.2662%" y="997" width="0.5961%" height="15" fill="rgb(218,84,22)" fg:x="81495" fg:w="637"/><text x="76.5162%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (566 samples, 0.53%)</title><rect x="76.3326%" y="981" width="0.5297%" height="15" fill="rgb(216,87,39)" fg:x="81566" fg:w="566"/><text x="76.5826%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,961 samples, 2.77%)</title><rect x="74.1053%" y="1157" width="2.7710%" height="15" fill="rgb(221,178,8)" fg:x="79186" fg:w="2961"/><text x="74.3553%" y="1167.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,960 samples, 2.77%)</title><rect x="74.1063%" y="1141" width="2.7701%" height="15" fill="rgb(230,42,11)" fg:x="79187" fg:w="2960"/><text x="74.3563%" y="1151.50">st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,960 samples, 2.77%)</title><rect x="74.1063%" y="1125" width="2.7701%" height="15" fill="rgb(237,229,4)" fg:x="79187" fg:w="2960"/><text x="74.3563%" y="1135.50">as..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,960 samples, 2.77%)</title><rect x="74.1063%" y="1109" width="2.7701%" height="15" fill="rgb(222,31,33)" fg:x="79187" fg:w="2960"/><text x="74.3563%" y="1119.50">&lt;a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,960 samples, 2.77%)</title><rect x="74.1063%" y="1093" width="2.7701%" height="15" fill="rgb(210,17,39)" fg:x="79187" fg:w="2960"/><text x="74.3563%" y="1103.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (2,960 samples, 2.77%)</title><rect x="74.1063%" y="1077" width="2.7701%" height="15" fill="rgb(244,93,20)" fg:x="79187" fg:w="2960"/><text x="74.3563%" y="1087.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,960 samples, 2.77%)</title><rect x="74.1063%" y="1061" width="2.7701%" height="15" fill="rgb(210,40,47)" fg:x="79187" fg:w="2960"/><text x="74.3563%" y="1071.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (2,960 samples, 2.77%)</title><rect x="74.1063%" y="1045" width="2.7701%" height="15" fill="rgb(239,211,47)" fg:x="79187" fg:w="2960"/><text x="74.3563%" y="1055.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events (2,498 samples, 2.34%)</title><rect x="74.5386%" y="1029" width="2.3377%" height="15" fill="rgb(251,223,49)" fg:x="79649" fg:w="2498"/><text x="74.7886%" y="1039.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_event (1,722 samples, 1.61%)</title><rect x="75.2648%" y="1013" width="1.6115%" height="15" fill="rgb(221,149,5)" fg:x="80425" fg:w="1722"/><text x="75.5148%" y="1023.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (19 samples, 0.02%)</title><rect x="76.8820%" y="1157" width="0.0178%" height="15" fill="rgb(219,224,51)" fg:x="82153" fg:w="19"/><text x="77.1320%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (11 samples, 0.01%)</title><rect x="76.8998%" y="1157" width="0.0103%" height="15" fill="rgb(223,7,8)" fg:x="82172" fg:w="11"/><text x="77.1498%" y="1167.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="77.3461%" y="933" width="0.0112%" height="15" fill="rgb(241,217,22)" fg:x="82649" fg:w="12"/><text x="77.5961%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="77.3714%" y="917" width="0.0384%" height="15" fill="rgb(248,209,0)" fg:x="82676" fg:w="41"/><text x="77.6214%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (41 samples, 0.04%)</title><rect x="77.3714%" y="901" width="0.0384%" height="15" fill="rgb(217,205,4)" fg:x="82676" fg:w="41"/><text x="77.6214%" y="911.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (34 samples, 0.03%)</title><rect x="77.3780%" y="885" width="0.0318%" height="15" fill="rgb(228,124,39)" fg:x="82683" fg:w="34"/><text x="77.6280%" y="895.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (30 samples, 0.03%)</title><rect x="77.3817%" y="869" width="0.0281%" height="15" fill="rgb(250,116,42)" fg:x="82687" fg:w="30"/><text x="77.6317%" y="879.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="77.3817%" y="853" width="0.0281%" height="15" fill="rgb(223,202,9)" fg:x="82687" fg:w="30"/><text x="77.6317%" y="863.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="77.3817%" y="837" width="0.0281%" height="15" fill="rgb(242,222,40)" fg:x="82687" fg:w="30"/><text x="77.6317%" y="847.50"></text></g><g><title>snmalloc::FreeListIter::empty (18 samples, 0.02%)</title><rect x="77.4248%" y="917" width="0.0168%" height="15" fill="rgb(229,99,46)" fg:x="82733" fg:w="18"/><text x="77.6748%" y="927.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (18 samples, 0.02%)</title><rect x="77.4248%" y="901" width="0.0168%" height="15" fill="rgb(225,56,46)" fg:x="82733" fg:w="18"/><text x="77.6748%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (350 samples, 0.33%)</title><rect x="77.3461%" y="965" width="0.3275%" height="15" fill="rgb(227,94,5)" fg:x="82649" fg:w="350"/><text x="77.5961%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (350 samples, 0.33%)</title><rect x="77.3461%" y="949" width="0.3275%" height="15" fill="rgb(205,112,38)" fg:x="82649" fg:w="350"/><text x="77.5961%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (331 samples, 0.31%)</title><rect x="77.3639%" y="933" width="0.3098%" height="15" fill="rgb(231,133,46)" fg:x="82668" fg:w="331"/><text x="77.6139%" y="943.50"></text></g><g><title>snmalloc::FreeListIter::take (248 samples, 0.23%)</title><rect x="77.4416%" y="917" width="0.2321%" height="15" fill="rgb(217,16,9)" fg:x="82751" fg:w="248"/><text x="77.6916%" y="927.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (248 samples, 0.23%)</title><rect x="77.4416%" y="901" width="0.2321%" height="15" fill="rgb(249,173,9)" fg:x="82751" fg:w="248"/><text x="77.6916%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (371 samples, 0.35%)</title><rect x="77.3377%" y="1077" width="0.3472%" height="15" fill="rgb(205,163,53)" fg:x="82640" fg:w="371"/><text x="77.5877%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (371 samples, 0.35%)</title><rect x="77.3377%" y="1061" width="0.3472%" height="15" fill="rgb(217,54,41)" fg:x="82640" fg:w="371"/><text x="77.5877%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (371 samples, 0.35%)</title><rect x="77.3377%" y="1045" width="0.3472%" height="15" fill="rgb(228,216,12)" fg:x="82640" fg:w="371"/><text x="77.5877%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (370 samples, 0.35%)</title><rect x="77.3387%" y="1029" width="0.3463%" height="15" fill="rgb(244,228,15)" fg:x="82641" fg:w="370"/><text x="77.5887%" y="1039.50"></text></g><g><title>__rg_alloc (370 samples, 0.35%)</title><rect x="77.3387%" y="1013" width="0.3463%" height="15" fill="rgb(221,176,53)" fg:x="82641" fg:w="370"/><text x="77.5887%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (370 samples, 0.35%)</title><rect x="77.3387%" y="997" width="0.3463%" height="15" fill="rgb(205,94,34)" fg:x="82641" fg:w="370"/><text x="77.5887%" y="1007.50"></text></g><g><title>rust_alloc (367 samples, 0.34%)</title><rect x="77.3415%" y="981" width="0.3435%" height="15" fill="rgb(213,110,48)" fg:x="82644" fg:w="367"/><text x="77.5915%" y="991.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="77.6737%" y="965" width="0.0112%" height="15" fill="rgb(236,142,28)" fg:x="82999" fg:w="12"/><text x="77.9237%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="77.6887%" y="1077" width="0.0103%" height="15" fill="rgb(225,135,29)" fg:x="83015" fg:w="11"/><text x="77.9387%" y="1087.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (835 samples, 0.78%)</title><rect x="76.9269%" y="1093" width="0.7814%" height="15" fill="rgb(252,45,31)" fg:x="82201" fg:w="835"/><text x="77.1769%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (155 samples, 0.15%)</title><rect x="77.8927%" y="1077" width="0.1451%" height="15" fill="rgb(211,187,50)" fg:x="83233" fg:w="155"/><text x="78.1427%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="78.0677%" y="837" width="0.0112%" height="15" fill="rgb(229,109,7)" fg:x="83420" fg:w="12"/><text x="78.3177%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (13 samples, 0.01%)</title><rect x="78.0677%" y="853" width="0.0122%" height="15" fill="rgb(251,131,51)" fg:x="83420" fg:w="13"/><text x="78.3177%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (63 samples, 0.06%)</title><rect x="78.0677%" y="885" width="0.0590%" height="15" fill="rgb(251,180,35)" fg:x="83420" fg:w="63"/><text x="78.3177%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (63 samples, 0.06%)</title><rect x="78.0677%" y="869" width="0.0590%" height="15" fill="rgb(211,46,32)" fg:x="83420" fg:w="63"/><text x="78.3177%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (50 samples, 0.05%)</title><rect x="78.0798%" y="853" width="0.0468%" height="15" fill="rgb(248,123,17)" fg:x="83433" fg:w="50"/><text x="78.3298%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (41 samples, 0.04%)</title><rect x="78.0883%" y="837" width="0.0384%" height="15" fill="rgb(227,141,18)" fg:x="83442" fg:w="41"/><text x="78.3383%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (41 samples, 0.04%)</title><rect x="78.0883%" y="821" width="0.0384%" height="15" fill="rgb(216,102,9)" fg:x="83442" fg:w="41"/><text x="78.3383%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (41 samples, 0.04%)</title><rect x="78.0883%" y="805" width="0.0384%" height="15" fill="rgb(253,47,13)" fg:x="83442" fg:w="41"/><text x="78.3383%" y="815.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (21 samples, 0.02%)</title><rect x="78.1454%" y="805" width="0.0197%" height="15" fill="rgb(226,93,23)" fg:x="83503" fg:w="21"/><text x="78.3954%" y="815.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="78.1454%" y="789" width="0.0197%" height="15" fill="rgb(247,104,17)" fg:x="83503" fg:w="21"/><text x="78.3954%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="78.1294%" y="885" width="0.0365%" height="15" fill="rgb(233,203,26)" fg:x="83486" fg:w="39"/><text x="78.3794%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="78.1294%" y="869" width="0.0365%" height="15" fill="rgb(244,98,49)" fg:x="83486" fg:w="39"/><text x="78.3794%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="78.1294%" y="853" width="0.0365%" height="15" fill="rgb(235,134,22)" fg:x="83486" fg:w="39"/><text x="78.3794%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (35 samples, 0.03%)</title><rect x="78.1332%" y="837" width="0.0328%" height="15" fill="rgb(221,70,32)" fg:x="83490" fg:w="35"/><text x="78.3832%" y="847.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (35 samples, 0.03%)</title><rect x="78.1332%" y="821" width="0.0328%" height="15" fill="rgb(238,15,50)" fg:x="83490" fg:w="35"/><text x="78.3832%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (150 samples, 0.14%)</title><rect x="78.0649%" y="933" width="0.1404%" height="15" fill="rgb(215,221,48)" fg:x="83417" fg:w="150"/><text x="78.3149%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.14%)</title><rect x="78.0658%" y="917" width="0.1394%" height="15" fill="rgb(236,73,3)" fg:x="83418" fg:w="149"/><text x="78.3158%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (148 samples, 0.14%)</title><rect x="78.0667%" y="901" width="0.1385%" height="15" fill="rgb(250,107,11)" fg:x="83419" fg:w="148"/><text x="78.3167%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (40 samples, 0.04%)</title><rect x="78.1678%" y="885" width="0.0374%" height="15" fill="rgb(242,39,14)" fg:x="83527" fg:w="40"/><text x="78.4178%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (40 samples, 0.04%)</title><rect x="78.1678%" y="869" width="0.0374%" height="15" fill="rgb(248,164,37)" fg:x="83527" fg:w="40"/><text x="78.4178%" y="879.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (183 samples, 0.17%)</title><rect x="78.0377%" y="1077" width="0.1713%" height="15" fill="rgb(217,60,12)" fg:x="83388" fg:w="183"/><text x="78.2877%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (183 samples, 0.17%)</title><rect x="78.0377%" y="1061" width="0.1713%" height="15" fill="rgb(240,125,29)" fg:x="83388" fg:w="183"/><text x="78.2877%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (166 samples, 0.16%)</title><rect x="78.0536%" y="1045" width="0.1553%" height="15" fill="rgb(208,207,28)" fg:x="83405" fg:w="166"/><text x="78.3036%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (166 samples, 0.16%)</title><rect x="78.0536%" y="1029" width="0.1553%" height="15" fill="rgb(209,159,27)" fg:x="83405" fg:w="166"/><text x="78.3036%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (166 samples, 0.16%)</title><rect x="78.0536%" y="1013" width="0.1553%" height="15" fill="rgb(251,176,53)" fg:x="83405" fg:w="166"/><text x="78.3036%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (166 samples, 0.16%)</title><rect x="78.0536%" y="997" width="0.1553%" height="15" fill="rgb(211,85,7)" fg:x="83405" fg:w="166"/><text x="78.3036%" y="1007.50"></text></g><g><title>__rg_alloc (166 samples, 0.16%)</title><rect x="78.0536%" y="981" width="0.1553%" height="15" fill="rgb(216,64,54)" fg:x="83405" fg:w="166"/><text x="78.3036%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (166 samples, 0.16%)</title><rect x="78.0536%" y="965" width="0.1553%" height="15" fill="rgb(217,54,24)" fg:x="83405" fg:w="166"/><text x="78.3036%" y="975.50"></text></g><g><title>rust_alloc (163 samples, 0.15%)</title><rect x="78.0564%" y="949" width="0.1525%" height="15" fill="rgb(208,206,53)" fg:x="83408" fg:w="163"/><text x="78.3064%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="78.2464%" y="917" width="0.0290%" height="15" fill="rgb(251,74,39)" fg:x="83611" fg:w="31"/><text x="78.4964%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (31 samples, 0.03%)</title><rect x="78.2464%" y="901" width="0.0290%" height="15" fill="rgb(226,47,5)" fg:x="83611" fg:w="31"/><text x="78.4964%" y="911.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (21 samples, 0.02%)</title><rect x="78.2558%" y="885" width="0.0197%" height="15" fill="rgb(234,111,33)" fg:x="83621" fg:w="21"/><text x="78.5058%" y="895.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (17 samples, 0.02%)</title><rect x="78.2595%" y="869" width="0.0159%" height="15" fill="rgb(251,14,10)" fg:x="83625" fg:w="17"/><text x="78.5095%" y="879.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="78.2595%" y="853" width="0.0159%" height="15" fill="rgb(232,43,0)" fg:x="83625" fg:w="17"/><text x="78.5095%" y="863.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="78.2595%" y="837" width="0.0159%" height="15" fill="rgb(222,68,43)" fg:x="83625" fg:w="17"/><text x="78.5095%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (223 samples, 0.21%)</title><rect x="78.2315%" y="965" width="0.2087%" height="15" fill="rgb(217,24,23)" fg:x="83595" fg:w="223"/><text x="78.4815%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (217 samples, 0.20%)</title><rect x="78.2371%" y="949" width="0.2031%" height="15" fill="rgb(229,209,14)" fg:x="83601" fg:w="217"/><text x="78.4871%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (214 samples, 0.20%)</title><rect x="78.2399%" y="933" width="0.2003%" height="15" fill="rgb(250,149,48)" fg:x="83604" fg:w="214"/><text x="78.4899%" y="943.50"></text></g><g><title>snmalloc::FreeListIter::take (161 samples, 0.15%)</title><rect x="78.2895%" y="917" width="0.1507%" height="15" fill="rgb(210,120,37)" fg:x="83657" fg:w="161"/><text x="78.5395%" y="927.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (161 samples, 0.15%)</title><rect x="78.2895%" y="901" width="0.1507%" height="15" fill="rgb(210,21,8)" fg:x="83657" fg:w="161"/><text x="78.5395%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (252 samples, 0.24%)</title><rect x="78.2090%" y="1077" width="0.2358%" height="15" fill="rgb(243,145,7)" fg:x="83571" fg:w="252"/><text x="78.4590%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (252 samples, 0.24%)</title><rect x="78.2090%" y="1061" width="0.2358%" height="15" fill="rgb(238,178,32)" fg:x="83571" fg:w="252"/><text x="78.4590%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (252 samples, 0.24%)</title><rect x="78.2090%" y="1045" width="0.2358%" height="15" fill="rgb(222,4,10)" fg:x="83571" fg:w="252"/><text x="78.4590%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (252 samples, 0.24%)</title><rect x="78.2090%" y="1029" width="0.2358%" height="15" fill="rgb(239,7,37)" fg:x="83571" fg:w="252"/><text x="78.4590%" y="1039.50"></text></g><g><title>__rg_alloc (252 samples, 0.24%)</title><rect x="78.2090%" y="1013" width="0.2358%" height="15" fill="rgb(215,31,37)" fg:x="83571" fg:w="252"/><text x="78.4590%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (252 samples, 0.24%)</title><rect x="78.2090%" y="997" width="0.2358%" height="15" fill="rgb(224,83,33)" fg:x="83571" fg:w="252"/><text x="78.4590%" y="1007.50"></text></g><g><title>rust_alloc (237 samples, 0.22%)</title><rect x="78.2230%" y="981" width="0.2218%" height="15" fill="rgb(239,55,3)" fg:x="83586" fg:w="237"/><text x="78.4730%" y="991.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::new (33 samples, 0.03%)</title><rect x="78.4448%" y="1077" width="0.0309%" height="15" fill="rgb(247,92,11)" fg:x="83823" fg:w="33"/><text x="78.6948%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (52 samples, 0.05%)</title><rect x="78.8369%" y="1061" width="0.0487%" height="15" fill="rgb(239,200,7)" fg:x="84242" fg:w="52"/><text x="79.0869%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="79.1954%" y="869" width="0.0122%" height="15" fill="rgb(227,115,8)" fg:x="84625" fg:w="13"/><text x="79.4454%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53 samples, 0.05%)</title><rect x="79.1757%" y="917" width="0.0496%" height="15" fill="rgb(215,189,27)" fg:x="84604" fg:w="53"/><text x="79.4257%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (41 samples, 0.04%)</title><rect x="79.1869%" y="901" width="0.0384%" height="15" fill="rgb(251,216,39)" fg:x="84616" fg:w="41"/><text x="79.4369%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.03%)</title><rect x="79.1954%" y="885" width="0.0299%" height="15" fill="rgb(207,29,47)" fg:x="84625" fg:w="32"/><text x="79.4454%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.02%)</title><rect x="79.2075%" y="869" width="0.0178%" height="15" fill="rgb(210,71,34)" fg:x="84638" fg:w="19"/><text x="79.4575%" y="879.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (350 samples, 0.33%)</title><rect x="78.9090%" y="1013" width="0.3275%" height="15" fill="rgb(253,217,51)" fg:x="84319" fg:w="350"/><text x="79.1590%" y="1023.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (289 samples, 0.27%)</title><rect x="78.9661%" y="997" width="0.2705%" height="15" fill="rgb(222,117,46)" fg:x="84380" fg:w="289"/><text x="79.2161%" y="1007.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (278 samples, 0.26%)</title><rect x="78.9764%" y="981" width="0.2602%" height="15" fill="rgb(226,132,6)" fg:x="84391" fg:w="278"/><text x="79.2264%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (83 samples, 0.08%)</title><rect x="79.1589%" y="965" width="0.0777%" height="15" fill="rgb(254,145,51)" fg:x="84586" fg:w="83"/><text x="79.4089%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65 samples, 0.06%)</title><rect x="79.1757%" y="949" width="0.0608%" height="15" fill="rgb(231,199,27)" fg:x="84604" fg:w="65"/><text x="79.4257%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (65 samples, 0.06%)</title><rect x="79.1757%" y="933" width="0.0608%" height="15" fill="rgb(245,158,14)" fg:x="84604" fg:w="65"/><text x="79.4257%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="79.2253%" y="917" width="0.0112%" height="15" fill="rgb(240,113,14)" fg:x="84657" fg:w="12"/><text x="79.4753%" y="927.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (416 samples, 0.39%)</title><rect x="78.9090%" y="1029" width="0.3893%" height="15" fill="rgb(210,20,13)" fg:x="84319" fg:w="416"/><text x="79.1590%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (66 samples, 0.06%)</title><rect x="79.2365%" y="1013" width="0.0618%" height="15" fill="rgb(241,144,13)" fg:x="84669" fg:w="66"/><text x="79.4865%" y="1023.50"></text></g><g><title>core::ptr::write (66 samples, 0.06%)</title><rect x="79.2365%" y="997" width="0.0618%" height="15" fill="rgb(235,43,34)" fg:x="84669" fg:w="66"/><text x="79.4865%" y="1007.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="79.3217%" y="789" width="0.0103%" height="15" fill="rgb(208,36,20)" fg:x="84760" fg:w="11"/><text x="79.5717%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="79.3217%" y="773" width="0.0103%" height="15" fill="rgb(239,204,10)" fg:x="84760" fg:w="11"/><text x="79.5717%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="79.3217%" y="805" width="0.0122%" height="15" fill="rgb(217,84,43)" fg:x="84760" fg:w="13"/><text x="79.5717%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (19 samples, 0.02%)</title><rect x="79.3208%" y="821" width="0.0178%" height="15" fill="rgb(241,170,50)" fg:x="84759" fg:w="19"/><text x="79.5708%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (80 samples, 0.07%)</title><rect x="79.3208%" y="853" width="0.0749%" height="15" fill="rgb(226,205,29)" fg:x="84759" fg:w="80"/><text x="79.5708%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (80 samples, 0.07%)</title><rect x="79.3208%" y="837" width="0.0749%" height="15" fill="rgb(233,113,1)" fg:x="84759" fg:w="80"/><text x="79.5708%" y="847.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (61 samples, 0.06%)</title><rect x="79.3385%" y="821" width="0.0571%" height="15" fill="rgb(253,98,13)" fg:x="84778" fg:w="61"/><text x="79.5885%" y="831.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (50 samples, 0.05%)</title><rect x="79.3488%" y="805" width="0.0468%" height="15" fill="rgb(211,115,12)" fg:x="84789" fg:w="50"/><text x="79.5988%" y="815.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (50 samples, 0.05%)</title><rect x="79.3488%" y="789" width="0.0468%" height="15" fill="rgb(208,12,16)" fg:x="84789" fg:w="50"/><text x="79.5988%" y="799.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (50 samples, 0.05%)</title><rect x="79.3488%" y="773" width="0.0468%" height="15" fill="rgb(237,193,54)" fg:x="84789" fg:w="50"/><text x="79.5988%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="79.4041%" y="853" width="0.0384%" height="15" fill="rgb(243,22,42)" fg:x="84848" fg:w="41"/><text x="79.6541%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="79.4041%" y="837" width="0.0384%" height="15" fill="rgb(233,151,36)" fg:x="84848" fg:w="41"/><text x="79.6541%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="79.4041%" y="821" width="0.0384%" height="15" fill="rgb(237,57,45)" fg:x="84848" fg:w="41"/><text x="79.6541%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.04%)</title><rect x="79.4069%" y="805" width="0.0356%" height="15" fill="rgb(221,88,17)" fg:x="84851" fg:w="38"/><text x="79.6569%" y="815.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (38 samples, 0.04%)</title><rect x="79.4069%" y="789" width="0.0356%" height="15" fill="rgb(230,79,15)" fg:x="84851" fg:w="38"/><text x="79.6569%" y="799.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (17 samples, 0.02%)</title><rect x="79.4265%" y="773" width="0.0159%" height="15" fill="rgb(213,57,13)" fg:x="84872" fg:w="17"/><text x="79.6765%" y="783.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="79.4265%" y="757" width="0.0159%" height="15" fill="rgb(222,116,39)" fg:x="84872" fg:w="17"/><text x="79.6765%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (613 samples, 0.57%)</title><rect x="78.9081%" y="1045" width="0.5737%" height="15" fill="rgb(245,107,2)" fg:x="84318" fg:w="613"/><text x="79.1581%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (196 samples, 0.18%)</title><rect x="79.2983%" y="1029" width="0.1834%" height="15" fill="rgb(238,1,10)" fg:x="84735" fg:w="196"/><text x="79.5483%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (196 samples, 0.18%)</title><rect x="79.2983%" y="1013" width="0.1834%" height="15" fill="rgb(249,4,48)" fg:x="84735" fg:w="196"/><text x="79.5483%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (196 samples, 0.18%)</title><rect x="79.2983%" y="997" width="0.1834%" height="15" fill="rgb(223,151,18)" fg:x="84735" fg:w="196"/><text x="79.5483%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (196 samples, 0.18%)</title><rect x="79.2983%" y="981" width="0.1834%" height="15" fill="rgb(227,65,43)" fg:x="84735" fg:w="196"/><text x="79.5483%" y="991.50"></text></g><g><title>alloc::alloc::alloc (196 samples, 0.18%)</title><rect x="79.2983%" y="965" width="0.1834%" height="15" fill="rgb(218,40,45)" fg:x="84735" fg:w="196"/><text x="79.5483%" y="975.50"></text></g><g><title>__rg_alloc (196 samples, 0.18%)</title><rect x="79.2983%" y="949" width="0.1834%" height="15" fill="rgb(252,121,31)" fg:x="84735" fg:w="196"/><text x="79.5483%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (196 samples, 0.18%)</title><rect x="79.2983%" y="933" width="0.1834%" height="15" fill="rgb(219,158,43)" fg:x="84735" fg:w="196"/><text x="79.5483%" y="943.50"></text></g><g><title>rust_alloc (195 samples, 0.18%)</title><rect x="79.2992%" y="917" width="0.1825%" height="15" fill="rgb(231,162,42)" fg:x="84736" fg:w="195"/><text x="79.5492%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (188 samples, 0.18%)</title><rect x="79.3058%" y="901" width="0.1759%" height="15" fill="rgb(217,179,25)" fg:x="84743" fg:w="188"/><text x="79.5558%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (188 samples, 0.18%)</title><rect x="79.3058%" y="885" width="0.1759%" height="15" fill="rgb(206,212,31)" fg:x="84743" fg:w="188"/><text x="79.5558%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (180 samples, 0.17%)</title><rect x="79.3133%" y="869" width="0.1685%" height="15" fill="rgb(235,144,12)" fg:x="84751" fg:w="180"/><text x="79.5633%" y="879.50"></text></g><g><title>snmalloc::FreeListIter::take (41 samples, 0.04%)</title><rect x="79.4434%" y="853" width="0.0384%" height="15" fill="rgb(213,51,10)" fg:x="84890" fg:w="41"/><text x="79.6934%" y="863.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (41 samples, 0.04%)</title><rect x="79.4434%" y="837" width="0.0384%" height="15" fill="rgb(231,145,14)" fg:x="84890" fg:w="41"/><text x="79.6934%" y="847.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (638 samples, 0.60%)</title><rect x="78.8856%" y="1061" width="0.5971%" height="15" fill="rgb(235,15,28)" fg:x="84294" fg:w="638"/><text x="79.1356%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,379 samples, 1.29%)</title><rect x="78.4757%" y="1077" width="1.2905%" height="15" fill="rgb(237,206,10)" fg:x="83856" fg:w="1379"/><text x="78.7257%" y="1087.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (303 samples, 0.28%)</title><rect x="79.4827%" y="1061" width="0.2836%" height="15" fill="rgb(236,227,27)" fg:x="84932" fg:w="303"/><text x="79.7327%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (3,035 samples, 2.84%)</title><rect x="76.9269%" y="1157" width="2.8403%" height="15" fill="rgb(246,83,35)" fg:x="82201" fg:w="3035"/><text x="77.1769%" y="1167.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,035 samples, 2.84%)</title><rect x="76.9269%" y="1141" width="2.8403%" height="15" fill="rgb(220,136,24)" fg:x="82201" fg:w="3035"/><text x="77.1769%" y="1151.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,035 samples, 2.84%)</title><rect x="76.9269%" y="1125" width="2.8403%" height="15" fill="rgb(217,3,25)" fg:x="82201" fg:w="3035"/><text x="77.1769%" y="1135.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,035 samples, 2.84%)</title><rect x="76.9269%" y="1109" width="2.8403%" height="15" fill="rgb(239,24,14)" fg:x="82201" fg:w="3035"/><text x="77.1769%" y="1119.50">tr..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,200 samples, 2.06%)</title><rect x="77.7083%" y="1093" width="2.0588%" height="15" fill="rgb(244,16,53)" fg:x="83036" fg:w="2200"/><text x="77.9583%" y="1103.50">t..</text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (21 samples, 0.02%)</title><rect x="79.7672%" y="1157" width="0.0197%" height="15" fill="rgb(208,175,44)" fg:x="85236" fg:w="21"/><text x="80.0172%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (12 samples, 0.01%)</title><rect x="79.7906%" y="1157" width="0.0112%" height="15" fill="rgb(252,18,48)" fg:x="85261" fg:w="12"/><text x="80.0406%" y="1167.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="80.0741%" y="1013" width="0.0178%" height="15" fill="rgb(234,199,32)" fg:x="85564" fg:w="19"/><text x="80.3241%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (19 samples, 0.02%)</title><rect x="80.0741%" y="997" width="0.0178%" height="15" fill="rgb(225,77,54)" fg:x="85564" fg:w="19"/><text x="80.3241%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (19 samples, 0.02%)</title><rect x="80.0741%" y="981" width="0.0178%" height="15" fill="rgb(225,42,25)" fg:x="85564" fg:w="19"/><text x="80.3241%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (19 samples, 0.02%)</title><rect x="80.0741%" y="965" width="0.0178%" height="15" fill="rgb(242,227,46)" fg:x="85564" fg:w="19"/><text x="80.3241%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (12 samples, 0.01%)</title><rect x="80.1013%" y="1013" width="0.0112%" height="15" fill="rgb(246,197,35)" fg:x="85593" fg:w="12"/><text x="80.3513%" y="1023.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="80.1013%" y="997" width="0.0112%" height="15" fill="rgb(215,159,26)" fg:x="85593" fg:w="12"/><text x="80.3513%" y="1007.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="80.1022%" y="981" width="0.0103%" height="15" fill="rgb(212,194,50)" fg:x="85594" fg:w="11"/><text x="80.3522%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (179 samples, 0.17%)</title><rect x="80.1733%" y="997" width="0.1675%" height="15" fill="rgb(246,132,1)" fg:x="85670" fg:w="179"/><text x="80.4233%" y="1007.50"></text></g><g><title>core::mem::replace (179 samples, 0.17%)</title><rect x="80.1733%" y="981" width="0.1675%" height="15" fill="rgb(217,71,7)" fg:x="85670" fg:w="179"/><text x="80.4233%" y="991.50"></text></g><g><title>core::ptr::read (179 samples, 0.17%)</title><rect x="80.1733%" y="965" width="0.1675%" height="15" fill="rgb(252,59,32)" fg:x="85670" fg:w="179"/><text x="80.4233%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (292 samples, 0.27%)</title><rect x="80.1125%" y="1013" width="0.2733%" height="15" fill="rgb(253,204,25)" fg:x="85605" fg:w="292"/><text x="80.3625%" y="1023.50"></text></g><g><title>core::mem::drop (48 samples, 0.04%)</title><rect x="80.3408%" y="997" width="0.0449%" height="15" fill="rgb(232,21,16)" fg:x="85849" fg:w="48"/><text x="80.5908%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (48 samples, 0.04%)</title><rect x="80.3408%" y="981" width="0.0449%" height="15" fill="rgb(248,90,29)" fg:x="85849" fg:w="48"/><text x="80.5908%" y="991.50"></text></g><g><title>core::mem::drop (31 samples, 0.03%)</title><rect x="80.3858%" y="1013" width="0.0290%" height="15" fill="rgb(249,223,7)" fg:x="85897" fg:w="31"/><text x="80.6358%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (31 samples, 0.03%)</title><rect x="80.3858%" y="997" width="0.0290%" height="15" fill="rgb(231,119,42)" fg:x="85897" fg:w="31"/><text x="80.6358%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (30 samples, 0.03%)</title><rect x="80.3867%" y="981" width="0.0281%" height="15" fill="rgb(215,41,35)" fg:x="85898" fg:w="30"/><text x="80.6367%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="80.3867%" y="965" width="0.0281%" height="15" fill="rgb(220,44,45)" fg:x="85898" fg:w="30"/><text x="80.6367%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (29 samples, 0.03%)</title><rect x="80.3876%" y="949" width="0.0271%" height="15" fill="rgb(253,197,36)" fg:x="85899" fg:w="29"/><text x="80.6376%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (28 samples, 0.03%)</title><rect x="80.3886%" y="933" width="0.0262%" height="15" fill="rgb(245,225,54)" fg:x="85900" fg:w="28"/><text x="80.6386%" y="943.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (27 samples, 0.03%)</title><rect x="80.3895%" y="917" width="0.0253%" height="15" fill="rgb(239,94,37)" fg:x="85901" fg:w="27"/><text x="80.6395%" y="927.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="80.4148%" y="997" width="0.0150%" height="15" fill="rgb(242,217,10)" fg:x="85928" fg:w="16"/><text x="80.6648%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_unlock (11 samples, 0.01%)</title><rect x="80.4569%" y="933" width="0.0103%" height="15" fill="rgb(250,193,7)" fg:x="85973" fg:w="11"/><text x="80.7069%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (301 samples, 0.28%)</title><rect x="80.4148%" y="1013" width="0.2817%" height="15" fill="rgb(230,104,19)" fg:x="85928" fg:w="301"/><text x="80.6648%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (285 samples, 0.27%)</title><rect x="80.4297%" y="997" width="0.2667%" height="15" fill="rgb(230,181,4)" fg:x="85944" fg:w="285"/><text x="80.6797%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (285 samples, 0.27%)</title><rect x="80.4297%" y="981" width="0.2667%" height="15" fill="rgb(216,219,49)" fg:x="85944" fg:w="285"/><text x="80.6797%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (265 samples, 0.25%)</title><rect x="80.4485%" y="965" width="0.2480%" height="15" fill="rgb(254,144,0)" fg:x="85964" fg:w="265"/><text x="80.6985%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (256 samples, 0.24%)</title><rect x="80.4569%" y="949" width="0.2396%" height="15" fill="rgb(205,209,38)" fg:x="85973" fg:w="256"/><text x="80.7069%" y="959.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (245 samples, 0.23%)</title><rect x="80.4672%" y="933" width="0.2293%" height="15" fill="rgb(240,21,42)" fg:x="85984" fg:w="245"/><text x="80.7172%" y="943.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="80.7039%" y="965" width="0.0112%" height="15" fill="rgb(241,132,3)" fg:x="86237" fg:w="12"/><text x="80.9539%" y="975.50"></text></g><g><title>core::task::wake::Waker::will_wake (26 samples, 0.02%)</title><rect x="80.6965%" y="1013" width="0.0243%" height="15" fill="rgb(225,14,2)" fg:x="86229" fg:w="26"/><text x="80.9465%" y="1023.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (26 samples, 0.02%)</title><rect x="80.6965%" y="997" width="0.0243%" height="15" fill="rgb(210,141,35)" fg:x="86229" fg:w="26"/><text x="80.9465%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (18 samples, 0.02%)</title><rect x="80.7039%" y="981" width="0.0168%" height="15" fill="rgb(251,14,44)" fg:x="86237" fg:w="18"/><text x="80.9539%" y="991.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (16 samples, 0.01%)</title><rect x="80.7339%" y="981" width="0.0150%" height="15" fill="rgb(247,48,18)" fg:x="86269" fg:w="16"/><text x="80.9839%" y="991.50"></text></g><g><title>std::sync::poison::Flag::borrow (16 samples, 0.01%)</title><rect x="80.7339%" y="965" width="0.0150%" height="15" fill="rgb(225,0,40)" fg:x="86269" fg:w="16"/><text x="80.9839%" y="975.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="80.7367%" y="949" width="0.0122%" height="15" fill="rgb(221,31,33)" fg:x="86272" fg:w="13"/><text x="80.9867%" y="959.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="80.7367%" y="933" width="0.0122%" height="15" fill="rgb(237,42,40)" fg:x="86272" fg:w="13"/><text x="80.9867%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="80.7367%" y="917" width="0.0122%" height="15" fill="rgb(233,51,29)" fg:x="86272" fg:w="13"/><text x="80.9867%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="80.7367%" y="901" width="0.0122%" height="15" fill="rgb(226,58,20)" fg:x="86272" fg:w="13"/><text x="80.9867%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="80.7367%" y="885" width="0.0122%" height="15" fill="rgb(208,98,7)" fg:x="86272" fg:w="13"/><text x="80.9867%" y="895.50"></text></g><g><title>event_listener::Inner::lock (591 samples, 0.55%)</title><rect x="80.7208%" y="1013" width="0.5531%" height="15" fill="rgb(228,143,44)" fg:x="86255" fg:w="591"/><text x="80.9708%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (577 samples, 0.54%)</title><rect x="80.7339%" y="997" width="0.5400%" height="15" fill="rgb(246,55,38)" fg:x="86269" fg:w="577"/><text x="80.9839%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (561 samples, 0.53%)</title><rect x="80.7489%" y="981" width="0.5250%" height="15" fill="rgb(247,87,16)" fg:x="86285" fg:w="561"/><text x="80.9989%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (548 samples, 0.51%)</title><rect x="80.7610%" y="965" width="0.5128%" height="15" fill="rgb(234,129,42)" fg:x="86298" fg:w="548"/><text x="81.0110%" y="975.50"></text></g><g><title>__GI___pthread_mutex_lock (548 samples, 0.51%)</title><rect x="80.7610%" y="949" width="0.5128%" height="15" fill="rgb(220,82,16)" fg:x="86298" fg:w="548"/><text x="81.0110%" y="959.50"></text></g><g><title>__lll_lock_wait (49 samples, 0.05%)</title><rect x="81.2280%" y="933" width="0.0459%" height="15" fill="rgb(211,88,4)" fg:x="86797" fg:w="49"/><text x="81.4780%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,400 samples, 1.31%)</title><rect x="79.9908%" y="1029" width="1.3102%" height="15" fill="rgb(248,151,21)" fg:x="85475" fg:w="1400"/><text x="80.2408%" y="1039.50"></text></g><g><title>event_listener::List::remove (29 samples, 0.03%)</title><rect x="81.2739%" y="1013" width="0.0271%" height="15" fill="rgb(238,163,6)" fg:x="86846" fg:w="29"/><text x="81.5239%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (25 samples, 0.02%)</title><rect x="81.2776%" y="997" width="0.0234%" height="15" fill="rgb(209,183,11)" fg:x="86850" fg:w="25"/><text x="81.5276%" y="1007.50"></text></g><g><title>core::mem::replace (25 samples, 0.02%)</title><rect x="81.2776%" y="981" width="0.0234%" height="15" fill="rgb(219,37,20)" fg:x="86850" fg:w="25"/><text x="81.5276%" y="991.50"></text></g><g><title>core::ptr::read (25 samples, 0.02%)</title><rect x="81.2776%" y="965" width="0.0234%" height="15" fill="rgb(210,158,4)" fg:x="86850" fg:w="25"/><text x="81.5276%" y="975.50"></text></g><g><title>concurrent_queue::full_fence (60 samples, 0.06%)</title><rect x="81.4807%" y="981" width="0.0562%" height="15" fill="rgb(221,167,53)" fg:x="87067" fg:w="60"/><text x="81.7307%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (59 samples, 0.06%)</title><rect x="81.4816%" y="965" width="0.0552%" height="15" fill="rgb(237,151,45)" fg:x="87068" fg:w="59"/><text x="81.7316%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (59 samples, 0.06%)</title><rect x="81.4816%" y="949" width="0.0552%" height="15" fill="rgb(231,39,3)" fg:x="87068" fg:w="59"/><text x="81.7316%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (59 samples, 0.06%)</title><rect x="81.4816%" y="933" width="0.0552%" height="15" fill="rgb(212,167,28)" fg:x="87068" fg:w="59"/><text x="81.7316%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (179 samples, 0.17%)</title><rect x="81.5396%" y="981" width="0.1675%" height="15" fill="rgb(232,178,8)" fg:x="87130" fg:w="179"/><text x="81.7896%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (179 samples, 0.17%)</title><rect x="81.5396%" y="965" width="0.1675%" height="15" fill="rgb(225,151,20)" fg:x="87130" fg:w="179"/><text x="81.7896%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (353 samples, 0.33%)</title><rect x="81.7072%" y="981" width="0.3304%" height="15" fill="rgb(238,3,37)" fg:x="87309" fg:w="353"/><text x="81.9572%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (346 samples, 0.32%)</title><rect x="81.7137%" y="965" width="0.3238%" height="15" fill="rgb(251,147,42)" fg:x="87316" fg:w="346"/><text x="81.9637%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (785 samples, 0.73%)</title><rect x="81.3132%" y="1013" width="0.7346%" height="15" fill="rgb(208,173,10)" fg:x="86888" fg:w="785"/><text x="81.5632%" y="1023.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (730 samples, 0.68%)</title><rect x="81.3646%" y="997" width="0.6832%" height="15" fill="rgb(246,225,4)" fg:x="86943" fg:w="730"/><text x="81.6146%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (11 samples, 0.01%)</title><rect x="82.0375%" y="981" width="0.0103%" height="15" fill="rgb(248,102,6)" fg:x="87662" fg:w="11"/><text x="82.2875%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_store (11 samples, 0.01%)</title><rect x="82.0375%" y="965" width="0.0103%" height="15" fill="rgb(232,6,21)" fg:x="87662" fg:w="11"/><text x="82.2875%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (14 samples, 0.01%)</title><rect x="82.0581%" y="997" width="0.0131%" height="15" fill="rgb(221,179,22)" fg:x="87684" fg:w="14"/><text x="82.3081%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (13 samples, 0.01%)</title><rect x="82.0590%" y="981" width="0.0122%" height="15" fill="rgb(252,50,20)" fg:x="87685" fg:w="13"/><text x="82.3090%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="82.0590%" y="965" width="0.0122%" height="15" fill="rgb(222,56,38)" fg:x="87685" fg:w="13"/><text x="82.3090%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="82.0590%" y="949" width="0.0122%" height="15" fill="rgb(206,193,29)" fg:x="87685" fg:w="13"/><text x="82.3090%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="82.0590%" y="933" width="0.0122%" height="15" fill="rgb(239,192,45)" fg:x="87685" fg:w="13"/><text x="82.3090%" y="943.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="82.0609%" y="917" width="0.0103%" height="15" fill="rgb(254,18,36)" fg:x="87687" fg:w="11"/><text x="82.3109%" y="927.50"></text></g><g><title>event_listener::Inner::lock (16 samples, 0.01%)</title><rect x="82.0796%" y="997" width="0.0150%" height="15" fill="rgb(221,127,11)" fg:x="87707" fg:w="16"/><text x="82.3296%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="82.0796%" y="981" width="0.0150%" height="15" fill="rgb(234,146,35)" fg:x="87707" fg:w="16"/><text x="82.3296%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="82.0806%" y="965" width="0.0140%" height="15" fill="rgb(254,201,37)" fg:x="87708" fg:w="15"/><text x="82.3306%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="82.0806%" y="949" width="0.0140%" height="15" fill="rgb(211,202,23)" fg:x="87708" fg:w="15"/><text x="82.3306%" y="959.50"></text></g><g><title>__GI___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="82.0806%" y="933" width="0.0140%" height="15" fill="rgb(237,91,2)" fg:x="87708" fg:w="15"/><text x="82.3306%" y="943.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (13 samples, 0.01%)</title><rect x="82.1348%" y="821" width="0.0122%" height="15" fill="rgb(226,228,36)" fg:x="87766" fg:w="13"/><text x="82.3848%" y="831.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (13 samples, 0.01%)</title><rect x="82.1348%" y="805" width="0.0122%" height="15" fill="rgb(213,63,50)" fg:x="87766" fg:w="13"/><text x="82.3848%" y="815.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (13 samples, 0.01%)</title><rect x="82.1348%" y="789" width="0.0122%" height="15" fill="rgb(235,194,19)" fg:x="87766" fg:w="13"/><text x="82.3848%" y="799.50"></text></g><g><title>__pthread_cond_signal (13 samples, 0.01%)</title><rect x="82.1348%" y="773" width="0.0122%" height="15" fill="rgb(207,204,18)" fg:x="87766" fg:w="13"/><text x="82.3848%" y="783.50"></text></g><g><title>parking::Unparker::unpark (41 samples, 0.04%)</title><rect x="82.1199%" y="853" width="0.0384%" height="15" fill="rgb(248,8,7)" fg:x="87750" fg:w="41"/><text x="82.3699%" y="863.50"></text></g><g><title>parking::Inner::unpark (36 samples, 0.03%)</title><rect x="82.1245%" y="837" width="0.0337%" height="15" fill="rgb(223,145,47)" fg:x="87755" fg:w="36"/><text x="82.3745%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.01%)</title><rect x="82.1470%" y="821" width="0.0112%" height="15" fill="rgb(228,84,11)" fg:x="87779" fg:w="12"/><text x="82.3970%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="82.1470%" y="805" width="0.0112%" height="15" fill="rgb(218,76,45)" fg:x="87779" fg:w="12"/><text x="82.3970%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="82.1470%" y="789" width="0.0112%" height="15" fill="rgb(223,80,15)" fg:x="87779" fg:w="12"/><text x="82.3970%" y="799.50"></text></g><g><title>__GI___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="82.1470%" y="773" width="0.0112%" height="15" fill="rgb(219,218,33)" fg:x="87779" fg:w="12"/><text x="82.3970%" y="783.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (45 samples, 0.04%)</title><rect x="82.1180%" y="869" width="0.0421%" height="15" fill="rgb(208,51,11)" fg:x="87748" fg:w="45"/><text x="82.3680%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (50 samples, 0.05%)</title><rect x="82.1180%" y="901" width="0.0468%" height="15" fill="rgb(229,165,39)" fg:x="87748" fg:w="50"/><text x="82.3680%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (50 samples, 0.05%)</title><rect x="82.1180%" y="885" width="0.0468%" height="15" fill="rgb(241,100,24)" fg:x="87748" fg:w="50"/><text x="82.3680%" y="895.50"></text></g><g><title>async_executor::State::notify (76 samples, 0.07%)</title><rect x="82.1068%" y="917" width="0.0711%" height="15" fill="rgb(228,14,23)" fg:x="87736" fg:w="76"/><text x="82.3568%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="82.1648%" y="901" width="0.0131%" height="15" fill="rgb(247,116,52)" fg:x="87798" fg:w="14"/><text x="82.4148%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="82.1657%" y="885" width="0.0122%" height="15" fill="rgb(216,149,33)" fg:x="87799" fg:w="13"/><text x="82.4157%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="82.1657%" y="869" width="0.0122%" height="15" fill="rgb(238,142,29)" fg:x="87799" fg:w="13"/><text x="82.4157%" y="879.50"></text></g><g><title>__GI___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="82.1657%" y="853" width="0.0122%" height="15" fill="rgb(224,83,40)" fg:x="87799" fg:w="13"/><text x="82.4157%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (13 samples, 0.01%)</title><rect x="82.1826%" y="885" width="0.0122%" height="15" fill="rgb(234,165,11)" fg:x="87817" fg:w="13"/><text x="82.4326%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.01%)</title><rect x="82.1826%" y="869" width="0.0122%" height="15" fill="rgb(215,96,23)" fg:x="87817" fg:w="13"/><text x="82.4326%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (103 samples, 0.10%)</title><rect x="82.1068%" y="933" width="0.0964%" height="15" fill="rgb(233,179,26)" fg:x="87736" fg:w="103"/><text x="82.3568%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (27 samples, 0.03%)</title><rect x="82.1779%" y="917" width="0.0253%" height="15" fill="rgb(225,129,33)" fg:x="87812" fg:w="27"/><text x="82.4279%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (25 samples, 0.02%)</title><rect x="82.1798%" y="901" width="0.0234%" height="15" fill="rgb(237,49,13)" fg:x="87814" fg:w="25"/><text x="82.4298%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (21 samples, 0.02%)</title><rect x="82.2032%" y="933" width="0.0197%" height="15" fill="rgb(211,3,31)" fg:x="87839" fg:w="21"/><text x="82.4532%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.02%)</title><rect x="82.2032%" y="917" width="0.0197%" height="15" fill="rgb(216,152,19)" fg:x="87839" fg:w="21"/><text x="82.4532%" y="927.50"></text></g><g><title>event_listener::List::notify (148 samples, 0.14%)</title><rect x="82.0946%" y="997" width="0.1385%" height="15" fill="rgb(251,121,35)" fg:x="87723" fg:w="148"/><text x="82.3446%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (146 samples, 0.14%)</title><rect x="82.0965%" y="981" width="0.1366%" height="15" fill="rgb(210,217,47)" fg:x="87725" fg:w="146"/><text x="82.3465%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (146 samples, 0.14%)</title><rect x="82.0965%" y="965" width="0.1366%" height="15" fill="rgb(244,116,22)" fg:x="87725" fg:w="146"/><text x="82.3465%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (138 samples, 0.13%)</title><rect x="82.1040%" y="949" width="0.1291%" height="15" fill="rgb(228,17,21)" fg:x="87733" fg:w="138"/><text x="82.3540%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="82.2228%" y="933" width="0.0103%" height="15" fill="rgb(240,149,34)" fg:x="87860" fg:w="11"/><text x="82.4728%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="82.2228%" y="917" width="0.0103%" height="15" fill="rgb(208,125,47)" fg:x="87860" fg:w="11"/><text x="82.4728%" y="927.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,566 samples, 1.47%)</title><rect x="81.3010%" y="1029" width="1.4655%" height="15" fill="rgb(249,186,39)" fg:x="86875" fg:w="1566"/><text x="81.5510%" y="1039.50"></text></g><g><title>event_listener::Event::notify (768 samples, 0.72%)</title><rect x="82.0478%" y="1013" width="0.7187%" height="15" fill="rgb(240,220,33)" fg:x="87673" fg:w="768"/><text x="82.2978%" y="1023.50"></text></g><g><title>event_listener::full_fence (570 samples, 0.53%)</title><rect x="82.2331%" y="997" width="0.5334%" height="15" fill="rgb(243,110,23)" fg:x="87871" fg:w="570"/><text x="82.4831%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (569 samples, 0.53%)</title><rect x="82.2340%" y="981" width="0.5325%" height="15" fill="rgb(219,163,46)" fg:x="87872" fg:w="569"/><text x="82.4840%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (569 samples, 0.53%)</title><rect x="82.2340%" y="965" width="0.5325%" height="15" fill="rgb(216,126,30)" fg:x="87872" fg:w="569"/><text x="82.4840%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (17 samples, 0.02%)</title><rect x="82.7665%" y="1029" width="0.0159%" height="15" fill="rgb(208,139,11)" fg:x="88441" fg:w="17"/><text x="83.0165%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="82.7937%" y="981" width="0.0122%" height="15" fill="rgb(213,118,36)" fg:x="88470" fg:w="13"/><text x="83.0437%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (13 samples, 0.01%)</title><rect x="82.7937%" y="965" width="0.0122%" height="15" fill="rgb(226,43,17)" fg:x="88470" fg:w="13"/><text x="83.0437%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="82.7937%" y="949" width="0.0122%" height="15" fill="rgb(254,217,4)" fg:x="88470" fg:w="13"/><text x="83.0437%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="82.7937%" y="933" width="0.0122%" height="15" fill="rgb(210,134,47)" fg:x="88470" fg:w="13"/><text x="83.0437%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="82.7937%" y="917" width="0.0122%" height="15" fill="rgb(237,24,49)" fg:x="88470" fg:w="13"/><text x="83.0437%" y="927.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="82.7937%" y="901" width="0.0122%" height="15" fill="rgb(251,39,46)" fg:x="88470" fg:w="13"/><text x="83.0437%" y="911.50"></text></g><g><title>event_listener::Inner::lock (34 samples, 0.03%)</title><rect x="82.8058%" y="981" width="0.0318%" height="15" fill="rgb(251,220,3)" fg:x="88483" fg:w="34"/><text x="83.0558%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (34 samples, 0.03%)</title><rect x="82.8058%" y="965" width="0.0318%" height="15" fill="rgb(228,105,12)" fg:x="88483" fg:w="34"/><text x="83.0558%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (31 samples, 0.03%)</title><rect x="82.8086%" y="949" width="0.0290%" height="15" fill="rgb(215,196,1)" fg:x="88486" fg:w="31"/><text x="83.0586%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.03%)</title><rect x="82.8124%" y="933" width="0.0253%" height="15" fill="rgb(214,33,39)" fg:x="88490" fg:w="27"/><text x="83.0624%" y="943.50"></text></g><g><title>__GI___pthread_mutex_lock (27 samples, 0.03%)</title><rect x="82.8124%" y="917" width="0.0253%" height="15" fill="rgb(220,19,52)" fg:x="88490" fg:w="27"/><text x="83.0624%" y="927.50"></text></g><g><title>__lll_lock_wait (11 samples, 0.01%)</title><rect x="82.8274%" y="901" width="0.0103%" height="15" fill="rgb(221,78,38)" fg:x="88506" fg:w="11"/><text x="83.0774%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="82.7918%" y="997" width="0.0524%" height="15" fill="rgb(253,30,16)" fg:x="88468" fg:w="56"/><text x="83.0418%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (96 samples, 0.09%)</title><rect x="82.7824%" y="1029" width="0.0898%" height="15" fill="rgb(242,65,0)" fg:x="88458" fg:w="96"/><text x="83.0324%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (86 samples, 0.08%)</title><rect x="82.7918%" y="1013" width="0.0805%" height="15" fill="rgb(235,201,12)" fg:x="88468" fg:w="86"/><text x="83.0418%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (30 samples, 0.03%)</title><rect x="82.8442%" y="997" width="0.0281%" height="15" fill="rgb(233,161,9)" fg:x="88524" fg:w="30"/><text x="83.0942%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="82.8442%" y="981" width="0.0281%" height="15" fill="rgb(241,207,41)" fg:x="88524" fg:w="30"/><text x="83.0942%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (28 samples, 0.03%)</title><rect x="82.8461%" y="965" width="0.0262%" height="15" fill="rgb(212,69,46)" fg:x="88526" fg:w="28"/><text x="83.0961%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (28 samples, 0.03%)</title><rect x="82.8461%" y="949" width="0.0262%" height="15" fill="rgb(239,69,45)" fg:x="88526" fg:w="28"/><text x="83.0961%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="82.8741%" y="1013" width="0.0197%" height="15" fill="rgb(242,117,48)" fg:x="88556" fg:w="21"/><text x="83.1241%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.02%)</title><rect x="82.8741%" y="997" width="0.0197%" height="15" fill="rgb(228,41,36)" fg:x="88556" fg:w="21"/><text x="83.1241%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.02%)</title><rect x="82.8741%" y="981" width="0.0197%" height="15" fill="rgb(212,3,32)" fg:x="88556" fg:w="21"/><text x="83.1241%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (34 samples, 0.03%)</title><rect x="82.8938%" y="1013" width="0.0318%" height="15" fill="rgb(233,41,49)" fg:x="88577" fg:w="34"/><text x="83.1438%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (34 samples, 0.03%)</title><rect x="82.8938%" y="997" width="0.0318%" height="15" fill="rgb(252,170,49)" fg:x="88577" fg:w="34"/><text x="83.1438%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="82.8938%" y="981" width="0.0318%" height="15" fill="rgb(229,53,26)" fg:x="88577" fg:w="34"/><text x="83.1438%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (34 samples, 0.03%)</title><rect x="82.8938%" y="965" width="0.0318%" height="15" fill="rgb(217,157,12)" fg:x="88577" fg:w="34"/><text x="83.1438%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (33 samples, 0.03%)</title><rect x="82.8947%" y="949" width="0.0309%" height="15" fill="rgb(227,17,9)" fg:x="88578" fg:w="33"/><text x="83.1447%" y="959.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (32 samples, 0.03%)</title><rect x="82.8957%" y="933" width="0.0299%" height="15" fill="rgb(218,84,12)" fg:x="88579" fg:w="32"/><text x="83.1457%" y="943.50"></text></g><g><title>event_listener::Inner::lock (25 samples, 0.02%)</title><rect x="82.9266%" y="1013" width="0.0234%" height="15" fill="rgb(212,79,24)" fg:x="88612" fg:w="25"/><text x="83.1766%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.02%)</title><rect x="82.9266%" y="997" width="0.0234%" height="15" fill="rgb(217,222,37)" fg:x="88612" fg:w="25"/><text x="83.1766%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (25 samples, 0.02%)</title><rect x="82.9266%" y="981" width="0.0234%" height="15" fill="rgb(246,208,8)" fg:x="88612" fg:w="25"/><text x="83.1766%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (25 samples, 0.02%)</title><rect x="82.9266%" y="965" width="0.0234%" height="15" fill="rgb(244,133,10)" fg:x="88612" fg:w="25"/><text x="83.1766%" y="975.50"></text></g><g><title>__GI___pthread_mutex_lock (24 samples, 0.02%)</title><rect x="82.9275%" y="949" width="0.0225%" height="15" fill="rgb(209,219,41)" fg:x="88613" fg:w="24"/><text x="83.1775%" y="959.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,286 samples, 3.08%)</title><rect x="79.9010%" y="1045" width="3.0752%" height="15" fill="rgb(253,175,45)" fg:x="85379" fg:w="3286"/><text x="80.1510%" y="1055.50">&lt;as..</text></g><g><title>event_listener::Event::listen (111 samples, 0.10%)</title><rect x="82.8723%" y="1029" width="0.1039%" height="15" fill="rgb(235,100,37)" fg:x="88554" fg:w="111"/><text x="83.1223%" y="1039.50"></text></g><g><title>event_listener::full_fence (27 samples, 0.03%)</title><rect x="82.9509%" y="1013" width="0.0253%" height="15" fill="rgb(225,87,19)" fg:x="88638" fg:w="27"/><text x="83.2009%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (27 samples, 0.03%)</title><rect x="82.9509%" y="997" width="0.0253%" height="15" fill="rgb(217,152,17)" fg:x="88638" fg:w="27"/><text x="83.2009%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.03%)</title><rect x="82.9509%" y="981" width="0.0253%" height="15" fill="rgb(235,72,13)" fg:x="88638" fg:w="27"/><text x="83.2009%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (630 samples, 0.59%)</title><rect x="82.9827%" y="1045" width="0.5896%" height="15" fill="rgb(233,140,18)" fg:x="88672" fg:w="630"/><text x="83.2327%" y="1055.50"></text></g><g><title>__memmove_avx_unaligned_erms (181 samples, 0.17%)</title><rect x="83.5807%" y="1029" width="0.1694%" height="15" fill="rgb(207,212,28)" fg:x="89311" fg:w="181"/><text x="83.8307%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (620 samples, 0.58%)</title><rect x="83.7595%" y="997" width="0.5802%" height="15" fill="rgb(220,130,25)" fg:x="89502" fg:w="620"/><text x="84.0095%" y="1007.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="84.3631%" y="821" width="0.0131%" height="15" fill="rgb(205,55,34)" fg:x="90147" fg:w="14"/><text x="84.6131%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (69 samples, 0.06%)</title><rect x="84.3799%" y="821" width="0.0646%" height="15" fill="rgb(237,54,35)" fg:x="90165" fg:w="69"/><text x="84.6299%" y="831.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (54 samples, 0.05%)</title><rect x="84.3940%" y="805" width="0.0505%" height="15" fill="rgb(208,67,23)" fg:x="90180" fg:w="54"/><text x="84.6440%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (107 samples, 0.10%)</title><rect x="84.3631%" y="853" width="0.1001%" height="15" fill="rgb(206,207,50)" fg:x="90147" fg:w="107"/><text x="84.6131%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (107 samples, 0.10%)</title><rect x="84.3631%" y="837" width="0.1001%" height="15" fill="rgb(213,211,42)" fg:x="90147" fg:w="107"/><text x="84.6131%" y="847.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="84.4492%" y="821" width="0.0140%" height="15" fill="rgb(252,197,50)" fg:x="90239" fg:w="15"/><text x="84.6992%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (115 samples, 0.11%)</title><rect x="84.3631%" y="885" width="0.1076%" height="15" fill="rgb(251,211,41)" fg:x="90147" fg:w="115"/><text x="84.6131%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (115 samples, 0.11%)</title><rect x="84.3631%" y="869" width="0.1076%" height="15" fill="rgb(229,211,5)" fg:x="90147" fg:w="115"/><text x="84.6131%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (131 samples, 0.12%)</title><rect x="84.3518%" y="901" width="0.1226%" height="15" fill="rgb(239,36,31)" fg:x="90135" fg:w="131"/><text x="84.6018%" y="911.50"></text></g><g><title>rust_dealloc (146 samples, 0.14%)</title><rect x="84.3444%" y="917" width="0.1366%" height="15" fill="rgb(248,67,31)" fg:x="90127" fg:w="146"/><text x="84.5944%" y="927.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,951 samples, 4.63%)</title><rect x="79.8551%" y="1061" width="4.6333%" height="15" fill="rgb(249,55,44)" fg:x="85330" fg:w="4951"/><text x="80.1051%" y="1071.50">&lt;asyn..</text></g><g><title>core::option::Option&lt;T&gt;::map (979 samples, 0.92%)</title><rect x="83.5723%" y="1045" width="0.9162%" height="15" fill="rgb(216,82,12)" fg:x="89302" fg:w="979"/><text x="83.8223%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (789 samples, 0.74%)</title><rect x="83.7501%" y="1029" width="0.7384%" height="15" fill="rgb(242,174,1)" fg:x="89492" fg:w="789"/><text x="84.0001%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (789 samples, 0.74%)</title><rect x="83.7501%" y="1013" width="0.7384%" height="15" fill="rgb(208,120,29)" fg:x="89492" fg:w="789"/><text x="84.0001%" y="1023.50"></text></g><g><title>alloc::alloc::box_free (159 samples, 0.15%)</title><rect x="84.3397%" y="997" width="0.1488%" height="15" fill="rgb(221,105,43)" fg:x="90122" fg:w="159"/><text x="84.5897%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (159 samples, 0.15%)</title><rect x="84.3397%" y="981" width="0.1488%" height="15" fill="rgb(234,124,22)" fg:x="90122" fg:w="159"/><text x="84.5897%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (159 samples, 0.15%)</title><rect x="84.3397%" y="965" width="0.1488%" height="15" fill="rgb(212,23,30)" fg:x="90122" fg:w="159"/><text x="84.5897%" y="975.50"></text></g><g><title>__rg_dealloc (159 samples, 0.15%)</title><rect x="84.3397%" y="949" width="0.1488%" height="15" fill="rgb(219,122,53)" fg:x="90122" fg:w="159"/><text x="84.5897%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (159 samples, 0.15%)</title><rect x="84.3397%" y="933" width="0.1488%" height="15" fill="rgb(248,84,24)" fg:x="90122" fg:w="159"/><text x="84.5897%" y="943.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,295 samples, 4.96%)</title><rect x="79.8317%" y="1077" width="4.9553%" height="15" fill="rgb(245,115,18)" fg:x="85305" fg:w="5295"/><text x="80.0817%" y="1087.50">&lt;async..</text></g><g><title>__memmove_avx_unaligned_erms (319 samples, 0.30%)</title><rect x="84.4885%" y="1061" width="0.2985%" height="15" fill="rgb(227,176,51)" fg:x="90281" fg:w="319"/><text x="84.7385%" y="1071.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,674 samples, 5.31%)</title><rect x="79.8130%" y="1141" width="5.3099%" height="15" fill="rgb(229,63,42)" fg:x="85285" fg:w="5674"/><text x="80.0630%" y="1151.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,674 samples, 5.31%)</title><rect x="79.8130%" y="1125" width="5.3099%" height="15" fill="rgb(247,202,24)" fg:x="85285" fg:w="5674"/><text x="80.0630%" y="1135.50">&lt;tremo..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,674 samples, 5.31%)</title><rect x="79.8130%" y="1109" width="5.3099%" height="15" fill="rgb(244,173,20)" fg:x="85285" fg:w="5674"/><text x="80.0630%" y="1119.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,674 samples, 5.31%)</title><rect x="79.8130%" y="1093" width="5.3099%" height="15" fill="rgb(242,81,47)" fg:x="85285" fg:w="5674"/><text x="80.0630%" y="1103.50">&lt;tremo..</text></g><g><title>__memmove_avx_unaligned_erms (359 samples, 0.34%)</title><rect x="84.7870%" y="1077" width="0.3360%" height="15" fill="rgb(231,185,54)" fg:x="90600" fg:w="359"/><text x="85.0370%" y="1087.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="85.1988%" y="1061" width="0.0309%" height="15" fill="rgb(243,55,32)" fg:x="91040" fg:w="33"/><text x="85.4488%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.02%)</title><rect x="85.2315%" y="1013" width="0.0197%" height="15" fill="rgb(208,167,19)" fg:x="91075" fg:w="21"/><text x="85.4815%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.02%)</title><rect x="85.2315%" y="997" width="0.0197%" height="15" fill="rgb(231,72,35)" fg:x="91075" fg:w="21"/><text x="85.4815%" y="1007.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="85.2315%" y="1045" width="0.0206%" height="15" fill="rgb(250,173,51)" fg:x="91075" fg:w="22"/><text x="85.4815%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (22 samples, 0.02%)</title><rect x="85.2315%" y="1029" width="0.0206%" height="15" fill="rgb(209,5,22)" fg:x="91075" fg:w="22"/><text x="85.4815%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (35 samples, 0.03%)</title><rect x="85.2587%" y="1045" width="0.0328%" height="15" fill="rgb(250,174,19)" fg:x="91104" fg:w="35"/><text x="85.5087%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (34 samples, 0.03%)</title><rect x="85.2596%" y="1029" width="0.0318%" height="15" fill="rgb(217,3,49)" fg:x="91105" fg:w="34"/><text x="85.5096%" y="1039.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="85.2596%" y="1013" width="0.0318%" height="15" fill="rgb(218,225,5)" fg:x="91105" fg:w="34"/><text x="85.5096%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (33 samples, 0.03%)</title><rect x="85.2605%" y="997" width="0.0309%" height="15" fill="rgb(236,89,11)" fg:x="91106" fg:w="33"/><text x="85.5105%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (32 samples, 0.03%)</title><rect x="85.2615%" y="981" width="0.0299%" height="15" fill="rgb(206,33,28)" fg:x="91107" fg:w="32"/><text x="85.5115%" y="991.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (30 samples, 0.03%)</title><rect x="85.2633%" y="965" width="0.0281%" height="15" fill="rgb(241,56,42)" fg:x="91109" fg:w="30"/><text x="85.5133%" y="975.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (104 samples, 0.10%)</title><rect x="85.2297%" y="1061" width="0.0973%" height="15" fill="rgb(222,44,11)" fg:x="91073" fg:w="104"/><text x="85.4797%" y="1071.50"></text></g><g><title>event_listener::Inner::lock (38 samples, 0.04%)</title><rect x="85.2914%" y="1045" width="0.0356%" height="15" fill="rgb(234,111,20)" fg:x="91139" fg:w="38"/><text x="85.5414%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.03%)</title><rect x="85.2924%" y="1029" width="0.0346%" height="15" fill="rgb(237,77,6)" fg:x="91140" fg:w="37"/><text x="85.5424%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (36 samples, 0.03%)</title><rect x="85.2933%" y="1013" width="0.0337%" height="15" fill="rgb(235,111,23)" fg:x="91141" fg:w="36"/><text x="85.5433%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (35 samples, 0.03%)</title><rect x="85.2942%" y="997" width="0.0328%" height="15" fill="rgb(251,135,29)" fg:x="91142" fg:w="35"/><text x="85.5442%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_lock (35 samples, 0.03%)</title><rect x="85.2942%" y="981" width="0.0328%" height="15" fill="rgb(217,57,1)" fg:x="91142" fg:w="35"/><text x="85.5442%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (56 samples, 0.05%)</title><rect x="85.3270%" y="1061" width="0.0524%" height="15" fill="rgb(249,119,31)" fg:x="91177" fg:w="56"/><text x="85.5770%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (46 samples, 0.04%)</title><rect x="85.4075%" y="1045" width="0.0430%" height="15" fill="rgb(233,164,33)" fg:x="91263" fg:w="46"/><text x="85.6575%" y="1055.50"></text></g><g><title>__memmove_avx_unaligned_erms (312 samples, 0.29%)</title><rect x="85.5254%" y="1029" width="0.2920%" height="15" fill="rgb(250,217,43)" fg:x="91389" fg:w="312"/><text x="85.7754%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (27 samples, 0.03%)</title><rect x="85.9371%" y="1013" width="0.0253%" height="15" fill="rgb(232,154,50)" fg:x="91829" fg:w="27"/><text x="86.1871%" y="1023.50"></text></g><g><title>concurrent_queue::full_fence (55 samples, 0.05%)</title><rect x="85.9624%" y="1013" width="0.0515%" height="15" fill="rgb(227,190,8)" fg:x="91856" fg:w="55"/><text x="86.2124%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (50 samples, 0.05%)</title><rect x="85.9671%" y="997" width="0.0468%" height="15" fill="rgb(209,217,32)" fg:x="91861" fg:w="50"/><text x="86.2171%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (50 samples, 0.05%)</title><rect x="85.9671%" y="981" width="0.0468%" height="15" fill="rgb(243,203,50)" fg:x="91861" fg:w="50"/><text x="86.2171%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (50 samples, 0.05%)</title><rect x="85.9671%" y="965" width="0.0468%" height="15" fill="rgb(232,152,27)" fg:x="91861" fg:w="50"/><text x="86.2171%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (35 samples, 0.03%)</title><rect x="86.0139%" y="1013" width="0.0328%" height="15" fill="rgb(240,34,29)" fg:x="91911" fg:w="35"/><text x="86.2639%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (170 samples, 0.16%)</title><rect x="86.0466%" y="1013" width="0.1591%" height="15" fill="rgb(215,185,52)" fg:x="91946" fg:w="170"/><text x="86.2966%" y="1023.50"></text></g><g><title>core::ptr::write (170 samples, 0.16%)</title><rect x="86.0466%" y="997" width="0.1591%" height="15" fill="rgb(240,89,49)" fg:x="91946" fg:w="170"/><text x="86.2966%" y="1007.50"></text></g><g><title>__memmove_avx_unaligned_erms (166 samples, 0.16%)</title><rect x="86.0504%" y="981" width="0.1553%" height="15" fill="rgb(225,12,52)" fg:x="91950" fg:w="166"/><text x="86.3004%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (241 samples, 0.23%)</title><rect x="86.2057%" y="1013" width="0.2255%" height="15" fill="rgb(239,128,45)" fg:x="92116" fg:w="241"/><text x="86.4557%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (241 samples, 0.23%)</title><rect x="86.2057%" y="997" width="0.2255%" height="15" fill="rgb(211,78,47)" fg:x="92116" fg:w="241"/><text x="86.4557%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (398 samples, 0.37%)</title><rect x="86.4313%" y="1013" width="0.3725%" height="15" fill="rgb(232,31,21)" fg:x="92357" fg:w="398"/><text x="86.6813%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (396 samples, 0.37%)</title><rect x="86.4331%" y="997" width="0.3706%" height="15" fill="rgb(222,168,14)" fg:x="92359" fg:w="396"/><text x="86.6831%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,456 samples, 1.36%)</title><rect x="85.4505%" y="1045" width="1.3626%" height="15" fill="rgb(209,128,24)" fg:x="91309" fg:w="1456"/><text x="85.7005%" y="1055.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,064 samples, 1.00%)</title><rect x="85.8174%" y="1029" width="0.9957%" height="15" fill="rgb(249,35,13)" fg:x="91701" fg:w="1064"/><text x="86.0674%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (11 samples, 0.01%)</title><rect x="86.8468%" y="1029" width="0.0103%" height="15" fill="rgb(218,7,2)" fg:x="92801" fg:w="11"/><text x="87.0968%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="86.8468%" y="1013" width="0.0103%" height="15" fill="rgb(238,107,27)" fg:x="92801" fg:w="11"/><text x="87.0968%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="86.8468%" y="997" width="0.0103%" height="15" fill="rgb(217,88,38)" fg:x="92801" fg:w="11"/><text x="87.0968%" y="1007.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (14 samples, 0.01%)</title><rect x="86.8683%" y="853" width="0.0131%" height="15" fill="rgb(230,207,0)" fg:x="92824" fg:w="14"/><text x="87.1183%" y="863.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (14 samples, 0.01%)</title><rect x="86.8683%" y="837" width="0.0131%" height="15" fill="rgb(249,64,54)" fg:x="92824" fg:w="14"/><text x="87.1183%" y="847.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (14 samples, 0.01%)</title><rect x="86.8683%" y="821" width="0.0131%" height="15" fill="rgb(231,7,11)" fg:x="92824" fg:w="14"/><text x="87.1183%" y="831.50"></text></g><g><title>__pthread_cond_signal (14 samples, 0.01%)</title><rect x="86.8683%" y="805" width="0.0131%" height="15" fill="rgb(205,149,21)" fg:x="92824" fg:w="14"/><text x="87.1183%" y="815.50"></text></g><g><title>parking::Unparker::unpark (27 samples, 0.03%)</title><rect x="86.8618%" y="885" width="0.0253%" height="15" fill="rgb(215,126,34)" fg:x="92817" fg:w="27"/><text x="87.1118%" y="895.50"></text></g><g><title>parking::Inner::unpark (25 samples, 0.02%)</title><rect x="86.8636%" y="869" width="0.0234%" height="15" fill="rgb(241,132,45)" fg:x="92819" fg:w="25"/><text x="87.1136%" y="879.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (29 samples, 0.03%)</title><rect x="86.8608%" y="901" width="0.0271%" height="15" fill="rgb(252,69,32)" fg:x="92816" fg:w="29"/><text x="87.1108%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (35 samples, 0.03%)</title><rect x="86.8608%" y="933" width="0.0328%" height="15" fill="rgb(232,204,19)" fg:x="92816" fg:w="35"/><text x="87.1108%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (35 samples, 0.03%)</title><rect x="86.8608%" y="917" width="0.0328%" height="15" fill="rgb(249,15,47)" fg:x="92816" fg:w="35"/><text x="87.1108%" y="927.50"></text></g><g><title>async_executor::State::notify (40 samples, 0.04%)</title><rect x="86.8580%" y="949" width="0.0374%" height="15" fill="rgb(209,227,23)" fg:x="92813" fg:w="40"/><text x="87.1080%" y="959.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (50 samples, 0.05%)</title><rect x="86.8580%" y="965" width="0.0468%" height="15" fill="rgb(248,92,24)" fg:x="92813" fg:w="50"/><text x="87.1080%" y="975.50"></text></g><g><title>event_listener::List::notify (60 samples, 0.06%)</title><rect x="86.8571%" y="1029" width="0.0562%" height="15" fill="rgb(247,59,2)" fg:x="92812" fg:w="60"/><text x="87.1071%" y="1039.50"></text></g><g><title>core::task::wake::Waker::wake (59 samples, 0.06%)</title><rect x="86.8580%" y="1013" width="0.0552%" height="15" fill="rgb(221,30,5)" fg:x="92813" fg:w="59"/><text x="87.1080%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (59 samples, 0.06%)</title><rect x="86.8580%" y="997" width="0.0552%" height="15" fill="rgb(208,108,53)" fg:x="92813" fg:w="59"/><text x="87.1080%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (59 samples, 0.06%)</title><rect x="86.8580%" y="981" width="0.0552%" height="15" fill="rgb(211,183,26)" fg:x="92813" fg:w="59"/><text x="87.1080%" y="991.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,749 samples, 2.57%)</title><rect x="85.3794%" y="1061" width="2.5726%" height="15" fill="rgb(232,132,4)" fg:x="91233" fg:w="2749"/><text x="85.6294%" y="1071.50">as..</text></g><g><title>event_listener::Event::notify (1,217 samples, 1.14%)</title><rect x="86.8131%" y="1045" width="1.1389%" height="15" fill="rgb(253,128,37)" fg:x="92765" fg:w="1217"/><text x="87.0631%" y="1055.50"></text></g><g><title>event_listener::full_fence (1,110 samples, 1.04%)</title><rect x="86.9132%" y="1029" width="1.0388%" height="15" fill="rgb(221,58,24)" fg:x="92872" fg:w="1110"/><text x="87.1632%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,102 samples, 1.03%)</title><rect x="86.9207%" y="1013" width="1.0313%" height="15" fill="rgb(230,54,45)" fg:x="92880" fg:w="1102"/><text x="87.1707%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,102 samples, 1.03%)</title><rect x="86.9207%" y="997" width="1.0313%" height="15" fill="rgb(254,21,18)" fg:x="92880" fg:w="1102"/><text x="87.1707%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (386 samples, 0.36%)</title><rect x="87.9595%" y="1061" width="0.3612%" height="15" fill="rgb(221,108,0)" fg:x="93990" fg:w="386"/><text x="88.2095%" y="1071.50"></text></g><g><title>core::mem::replace (386 samples, 0.36%)</title><rect x="87.9595%" y="1045" width="0.3612%" height="15" fill="rgb(206,95,1)" fg:x="93990" fg:w="386"/><text x="88.2095%" y="1055.50"></text></g><g><title>core::ptr::read (383 samples, 0.36%)</title><rect x="87.9623%" y="1029" width="0.3584%" height="15" fill="rgb(237,52,5)" fg:x="93993" fg:w="383"/><text x="88.2123%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (358 samples, 0.34%)</title><rect x="87.9857%" y="1013" width="0.3350%" height="15" fill="rgb(218,150,34)" fg:x="94018" fg:w="358"/><text x="88.2357%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (390 samples, 0.36%)</title><rect x="88.3207%" y="1061" width="0.3650%" height="15" fill="rgb(235,194,28)" fg:x="94376" fg:w="390"/><text x="88.5707%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (380 samples, 0.36%)</title><rect x="88.3301%" y="1045" width="0.3556%" height="15" fill="rgb(245,92,18)" fg:x="94386" fg:w="380"/><text x="88.5801%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (54 samples, 0.05%)</title><rect x="88.6923%" y="1045" width="0.0505%" height="15" fill="rgb(253,203,53)" fg:x="94773" fg:w="54"/><text x="88.9423%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (54 samples, 0.05%)</title><rect x="88.6923%" y="1029" width="0.0505%" height="15" fill="rgb(249,185,47)" fg:x="94773" fg:w="54"/><text x="88.9423%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (54 samples, 0.05%)</title><rect x="88.6923%" y="1013" width="0.0505%" height="15" fill="rgb(252,194,52)" fg:x="94773" fg:w="54"/><text x="88.9423%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (54 samples, 0.05%)</title><rect x="88.7428%" y="1045" width="0.0505%" height="15" fill="rgb(210,53,36)" fg:x="94827" fg:w="54"/><text x="88.9928%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (51 samples, 0.05%)</title><rect x="88.7456%" y="1029" width="0.0477%" height="15" fill="rgb(237,37,25)" fg:x="94830" fg:w="51"/><text x="88.9956%" y="1039.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="88.7456%" y="1013" width="0.0477%" height="15" fill="rgb(242,116,27)" fg:x="94830" fg:w="51"/><text x="88.9956%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (51 samples, 0.05%)</title><rect x="88.7456%" y="997" width="0.0477%" height="15" fill="rgb(213,185,26)" fg:x="94830" fg:w="51"/><text x="88.9956%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (51 samples, 0.05%)</title><rect x="88.7456%" y="981" width="0.0477%" height="15" fill="rgb(225,204,8)" fg:x="94830" fg:w="51"/><text x="88.9956%" y="991.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (51 samples, 0.05%)</title><rect x="88.7456%" y="965" width="0.0477%" height="15" fill="rgb(254,111,37)" fg:x="94830" fg:w="51"/><text x="88.9956%" y="975.50"></text></g><g><title>event_listener::Inner::lock (30 samples, 0.03%)</title><rect x="88.7989%" y="1045" width="0.0281%" height="15" fill="rgb(242,35,9)" fg:x="94887" fg:w="30"/><text x="89.0489%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="88.7989%" y="1029" width="0.0281%" height="15" fill="rgb(232,138,49)" fg:x="94887" fg:w="30"/><text x="89.0489%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.03%)</title><rect x="88.8008%" y="1013" width="0.0262%" height="15" fill="rgb(247,56,4)" fg:x="94889" fg:w="28"/><text x="89.0508%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (28 samples, 0.03%)</title><rect x="88.8008%" y="997" width="0.0262%" height="15" fill="rgb(226,179,17)" fg:x="94889" fg:w="28"/><text x="89.0508%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_lock (27 samples, 0.03%)</title><rect x="88.8018%" y="981" width="0.0253%" height="15" fill="rgb(216,163,45)" fg:x="94890" fg:w="27"/><text x="89.0518%" y="991.50"></text></g><g><title>event_listener::Event::listen (170 samples, 0.16%)</title><rect x="88.6885%" y="1061" width="0.1591%" height="15" fill="rgb(211,157,3)" fg:x="94769" fg:w="170"/><text x="88.9385%" y="1071.50"></text></g><g><title>event_listener::full_fence (19 samples, 0.02%)</title><rect x="88.8298%" y="1045" width="0.0178%" height="15" fill="rgb(234,44,20)" fg:x="94920" fg:w="19"/><text x="89.0798%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.02%)</title><rect x="88.8308%" y="1029" width="0.0168%" height="15" fill="rgb(254,138,23)" fg:x="94921" fg:w="18"/><text x="89.0808%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="88.8308%" y="1013" width="0.0168%" height="15" fill="rgb(206,119,39)" fg:x="94921" fg:w="18"/><text x="89.0808%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (31 samples, 0.03%)</title><rect x="88.8616%" y="1045" width="0.0290%" height="15" fill="rgb(231,105,52)" fg:x="94954" fg:w="31"/><text x="89.1116%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (29 samples, 0.03%)</title><rect x="88.8635%" y="1029" width="0.0271%" height="15" fill="rgb(250,20,5)" fg:x="94956" fg:w="29"/><text x="89.1135%" y="1039.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="88.8635%" y="1013" width="0.0271%" height="15" fill="rgb(215,198,30)" fg:x="94956" fg:w="29"/><text x="89.1135%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (28 samples, 0.03%)</title><rect x="88.8645%" y="997" width="0.0262%" height="15" fill="rgb(246,142,8)" fg:x="94957" fg:w="28"/><text x="89.1145%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (27 samples, 0.03%)</title><rect x="88.8654%" y="981" width="0.0253%" height="15" fill="rgb(243,26,38)" fg:x="94958" fg:w="27"/><text x="89.1154%" y="991.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (27 samples, 0.03%)</title><rect x="88.8654%" y="965" width="0.0253%" height="15" fill="rgb(205,133,28)" fg:x="94958" fg:w="27"/><text x="89.1154%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.02%)</title><rect x="88.8907%" y="1045" width="0.0168%" height="15" fill="rgb(212,34,0)" fg:x="94985" fg:w="18"/><text x="89.1407%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="88.8907%" y="1029" width="0.0168%" height="15" fill="rgb(251,226,22)" fg:x="94985" fg:w="18"/><text x="89.1407%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (77 samples, 0.07%)</title><rect x="88.9084%" y="1045" width="0.0721%" height="15" fill="rgb(252,119,9)" fg:x="95004" fg:w="77"/><text x="89.1584%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (77 samples, 0.07%)</title><rect x="88.9084%" y="1029" width="0.0721%" height="15" fill="rgb(213,150,50)" fg:x="95004" fg:w="77"/><text x="89.1584%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (69 samples, 0.06%)</title><rect x="88.9159%" y="1013" width="0.0646%" height="15" fill="rgb(212,24,39)" fg:x="95012" fg:w="69"/><text x="89.1659%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (68 samples, 0.06%)</title><rect x="88.9169%" y="997" width="0.0636%" height="15" fill="rgb(213,46,39)" fg:x="95013" fg:w="68"/><text x="89.1669%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_lock (68 samples, 0.06%)</title><rect x="88.9169%" y="981" width="0.0636%" height="15" fill="rgb(239,106,12)" fg:x="95013" fg:w="68"/><text x="89.1669%" y="991.50"></text></g><g><title>__lll_lock_wait (39 samples, 0.04%)</title><rect x="88.9440%" y="965" width="0.0365%" height="15" fill="rgb(249,229,21)" fg:x="95042" fg:w="39"/><text x="89.1940%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (10,032 samples, 9.39%)</title><rect x="79.8130%" y="1157" width="9.3883%" height="15" fill="rgb(212,158,3)" fg:x="85285" fg:w="10032"/><text x="80.0630%" y="1167.50">tremor_runtim..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,358 samples, 4.08%)</title><rect x="85.1230%" y="1141" width="4.0784%" height="15" fill="rgb(253,26,48)" fg:x="90959" fg:w="4358"/><text x="85.3730%" y="1151.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (4,358 samples, 4.08%)</title><rect x="85.1230%" y="1125" width="4.0784%" height="15" fill="rgb(238,178,20)" fg:x="90959" fg:w="4358"/><text x="85.3730%" y="1135.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,358 samples, 4.08%)</title><rect x="85.1230%" y="1109" width="4.0784%" height="15" fill="rgb(208,86,15)" fg:x="90959" fg:w="4358"/><text x="85.3730%" y="1119.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (4,358 samples, 4.08%)</title><rect x="85.1230%" y="1093" width="4.0784%" height="15" fill="rgb(239,42,53)" fg:x="90959" fg:w="4358"/><text x="85.3730%" y="1103.50">trem..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4,358 samples, 4.08%)</title><rect x="85.1230%" y="1077" width="4.0784%" height="15" fill="rgb(245,226,8)" fg:x="90959" fg:w="4358"/><text x="85.3730%" y="1087.50">&lt;asy..</text></g><g><title>event_listener::Event::notify (378 samples, 0.35%)</title><rect x="88.8476%" y="1061" width="0.3537%" height="15" fill="rgb(216,176,32)" fg:x="94939" fg:w="378"/><text x="89.0976%" y="1071.50"></text></g><g><title>event_listener::full_fence (233 samples, 0.22%)</title><rect x="88.9833%" y="1045" width="0.2181%" height="15" fill="rgb(231,186,21)" fg:x="95084" fg:w="233"/><text x="89.2333%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (225 samples, 0.21%)</title><rect x="88.9908%" y="1029" width="0.2106%" height="15" fill="rgb(205,95,49)" fg:x="95092" fg:w="225"/><text x="89.2408%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (225 samples, 0.21%)</title><rect x="88.9908%" y="1013" width="0.2106%" height="15" fill="rgb(217,145,8)" fg:x="95092" fg:w="225"/><text x="89.2408%" y="1023.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (22 samples, 0.02%)</title><rect x="89.2014%" y="1157" width="0.0206%" height="15" fill="rgb(239,144,48)" fg:x="95317" fg:w="22"/><text x="89.4514%" y="1167.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (95 samples, 0.09%)</title><rect x="89.2219%" y="1157" width="0.0889%" height="15" fill="rgb(214,189,23)" fg:x="95339" fg:w="95"/><text x="89.4719%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="89.2987%" y="1141" width="0.0122%" height="15" fill="rgb(229,157,17)" fg:x="95421" fg:w="13"/><text x="89.5487%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="89.2987%" y="1125" width="0.0122%" height="15" fill="rgb(230,5,48)" fg:x="95421" fg:w="13"/><text x="89.5487%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="89.2987%" y="1109" width="0.0122%" height="15" fill="rgb(224,156,48)" fg:x="95421" fg:w="13"/><text x="89.5487%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="89.2987%" y="1093" width="0.0122%" height="15" fill="rgb(223,14,29)" fg:x="95421" fg:w="13"/><text x="89.5487%" y="1103.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="89.2987%" y="1077" width="0.0122%" height="15" fill="rgb(229,96,36)" fg:x="95421" fg:w="13"/><text x="89.5487%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="89.2987%" y="1061" width="0.0122%" height="15" fill="rgb(231,102,53)" fg:x="95421" fg:w="13"/><text x="89.5487%" y="1071.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (16 samples, 0.01%)</title><rect x="89.3127%" y="1157" width="0.0150%" height="15" fill="rgb(210,77,38)" fg:x="95436" fg:w="16"/><text x="89.5627%" y="1167.50"></text></g><g><title>[unknown] (88,503 samples, 82.82%)</title><rect x="6.5247%" y="1173" width="82.8245%" height="15" fill="rgb(235,131,6)" fg:x="6972" fg:w="88503"/><text x="6.7747%" y="1183.50">[unknown]</text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (23 samples, 0.02%)</title><rect x="89.3277%" y="1157" width="0.0215%" height="15" fill="rgb(252,55,38)" fg:x="95452" fg:w="23"/><text x="89.5777%" y="1167.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="89.5233%" y="581" width="0.0122%" height="15" fill="rgb(246,38,14)" fg:x="95661" fg:w="13"/><text x="89.7733%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="89.6187%" y="565" width="0.0159%" height="15" fill="rgb(242,27,5)" fg:x="95763" fg:w="17"/><text x="89.8687%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (37 samples, 0.03%)</title><rect x="89.7217%" y="469" width="0.0346%" height="15" fill="rgb(228,65,35)" fg:x="95873" fg:w="37"/><text x="89.9717%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (27 samples, 0.03%)</title><rect x="89.7310%" y="453" width="0.0253%" height="15" fill="rgb(245,93,11)" fg:x="95883" fg:w="27"/><text x="89.9810%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.02%)</title><rect x="89.7348%" y="437" width="0.0215%" height="15" fill="rgb(213,1,31)" fg:x="95887" fg:w="23"/><text x="89.9848%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="89.7563%" y="469" width="0.0187%" height="15" fill="rgb(237,205,14)" fg:x="95910" fg:w="20"/><text x="90.0063%" y="479.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="89.7750%" y="469" width="0.0159%" height="15" fill="rgb(232,118,45)" fg:x="95930" fg:w="17"/><text x="90.0250%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (185 samples, 0.17%)</title><rect x="89.6346%" y="533" width="0.1731%" height="15" fill="rgb(218,5,6)" fg:x="95780" fg:w="185"/><text x="89.8846%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (161 samples, 0.15%)</title><rect x="89.6571%" y="517" width="0.1507%" height="15" fill="rgb(251,87,51)" fg:x="95804" fg:w="161"/><text x="89.9071%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (126 samples, 0.12%)</title><rect x="89.6899%" y="501" width="0.1179%" height="15" fill="rgb(207,225,20)" fg:x="95839" fg:w="126"/><text x="89.9399%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (110 samples, 0.10%)</title><rect x="89.7048%" y="485" width="0.1029%" height="15" fill="rgb(222,78,54)" fg:x="95855" fg:w="110"/><text x="89.9548%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (18 samples, 0.02%)</title><rect x="89.7909%" y="469" width="0.0168%" height="15" fill="rgb(232,85,16)" fg:x="95947" fg:w="18"/><text x="90.0409%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (18 samples, 0.02%)</title><rect x="89.7909%" y="453" width="0.0168%" height="15" fill="rgb(244,25,33)" fg:x="95947" fg:w="18"/><text x="90.0409%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (17 samples, 0.02%)</title><rect x="89.7919%" y="437" width="0.0159%" height="15" fill="rgb(233,24,36)" fg:x="95948" fg:w="17"/><text x="90.0419%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.02%)</title><rect x="89.7919%" y="421" width="0.0159%" height="15" fill="rgb(253,49,54)" fg:x="95948" fg:w="17"/><text x="90.0419%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (200 samples, 0.19%)</title><rect x="89.6346%" y="565" width="0.1872%" height="15" fill="rgb(245,12,22)" fg:x="95780" fg:w="200"/><text x="89.8846%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (200 samples, 0.19%)</title><rect x="89.6346%" y="549" width="0.1872%" height="15" fill="rgb(253,141,28)" fg:x="95780" fg:w="200"/><text x="89.8846%" y="559.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="89.8078%" y="533" width="0.0140%" height="15" fill="rgb(225,207,27)" fg:x="95965" fg:w="15"/><text x="90.0578%" y="543.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (467 samples, 0.44%)</title><rect x="90.0052%" y="533" width="0.4370%" height="15" fill="rgb(220,84,2)" fg:x="96176" fg:w="467"/><text x="90.2552%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (320 samples, 0.30%)</title><rect x="90.1428%" y="517" width="0.2995%" height="15" fill="rgb(224,37,37)" fg:x="96323" fg:w="320"/><text x="90.3928%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (320 samples, 0.30%)</title><rect x="90.1428%" y="501" width="0.2995%" height="15" fill="rgb(220,143,18)" fg:x="96323" fg:w="320"/><text x="90.3928%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (662 samples, 0.62%)</title><rect x="89.8321%" y="549" width="0.6195%" height="15" fill="rgb(210,88,33)" fg:x="95991" fg:w="662"/><text x="90.0821%" y="559.50"></text></g><g><title>async_executor::steal (675 samples, 0.63%)</title><rect x="89.8237%" y="565" width="0.6317%" height="15" fill="rgb(219,87,51)" fg:x="95982" fg:w="675"/><text x="90.0737%" y="575.50"></text></g><g><title>concurrent_queue::full_fence (813 samples, 0.76%)</title><rect x="90.8999%" y="533" width="0.7608%" height="15" fill="rgb(211,7,35)" fg:x="97132" fg:w="813"/><text x="91.1499%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (803 samples, 0.75%)</title><rect x="90.9093%" y="517" width="0.7515%" height="15" fill="rgb(232,77,2)" fg:x="97142" fg:w="803"/><text x="91.1593%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (803 samples, 0.75%)</title><rect x="90.9093%" y="501" width="0.7515%" height="15" fill="rgb(249,94,25)" fg:x="97142" fg:w="803"/><text x="91.1593%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (803 samples, 0.75%)</title><rect x="90.9093%" y="485" width="0.7515%" height="15" fill="rgb(215,112,2)" fg:x="97142" fg:w="803"/><text x="91.1593%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,239 samples, 1.16%)</title><rect x="90.5836%" y="549" width="1.1595%" height="15" fill="rgb(226,115,48)" fg:x="96794" fg:w="1239"/><text x="90.8336%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (88 samples, 0.08%)</title><rect x="91.6607%" y="533" width="0.0824%" height="15" fill="rgb(249,196,10)" fg:x="97945" fg:w="88"/><text x="91.9107%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (80 samples, 0.07%)</title><rect x="91.6682%" y="517" width="0.0749%" height="15" fill="rgb(237,109,14)" fg:x="97953" fg:w="80"/><text x="91.9182%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (319 samples, 0.30%)</title><rect x="91.8039%" y="533" width="0.2985%" height="15" fill="rgb(217,103,53)" fg:x="98098" fg:w="319"/><text x="92.0539%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (314 samples, 0.29%)</title><rect x="91.8086%" y="517" width="0.2939%" height="15" fill="rgb(244,137,9)" fg:x="98103" fg:w="314"/><text x="92.0586%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (314 samples, 0.29%)</title><rect x="91.8086%" y="501" width="0.2939%" height="15" fill="rgb(227,201,3)" fg:x="98103" fg:w="314"/><text x="92.0586%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (314 samples, 0.29%)</title><rect x="91.8086%" y="485" width="0.2939%" height="15" fill="rgb(243,94,6)" fg:x="98103" fg:w="314"/><text x="92.0586%" y="495.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (28 samples, 0.03%)</title><rect x="92.1043%" y="533" width="0.0262%" height="15" fill="rgb(235,118,5)" fg:x="98419" fg:w="28"/><text x="92.3543%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (28 samples, 0.03%)</title><rect x="92.1043%" y="517" width="0.0262%" height="15" fill="rgb(247,10,30)" fg:x="98419" fg:w="28"/><text x="92.3543%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (28 samples, 0.03%)</title><rect x="92.1043%" y="501" width="0.0262%" height="15" fill="rgb(205,26,28)" fg:x="98419" fg:w="28"/><text x="92.3543%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (33 samples, 0.03%)</title><rect x="92.1371%" y="533" width="0.0309%" height="15" fill="rgb(206,99,35)" fg:x="98454" fg:w="33"/><text x="92.3871%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (33 samples, 0.03%)</title><rect x="92.1371%" y="517" width="0.0309%" height="15" fill="rgb(238,130,40)" fg:x="98454" fg:w="33"/><text x="92.3871%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (81 samples, 0.08%)</title><rect x="92.1680%" y="533" width="0.0758%" height="15" fill="rgb(224,126,31)" fg:x="98487" fg:w="81"/><text x="92.4180%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (81 samples, 0.08%)</title><rect x="92.1680%" y="517" width="0.0758%" height="15" fill="rgb(254,105,17)" fg:x="98487" fg:w="81"/><text x="92.4180%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (76 samples, 0.07%)</title><rect x="92.2438%" y="533" width="0.0711%" height="15" fill="rgb(216,87,36)" fg:x="98568" fg:w="76"/><text x="92.4938%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_or (76 samples, 0.07%)</title><rect x="92.2438%" y="517" width="0.0711%" height="15" fill="rgb(240,21,12)" fg:x="98568" fg:w="76"/><text x="92.4938%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,204 samples, 2.06%)</title><rect x="90.4554%" y="565" width="2.0626%" height="15" fill="rgb(245,192,34)" fg:x="96657" fg:w="2204"/><text x="90.7054%" y="575.50">c..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (828 samples, 0.77%)</title><rect x="91.7431%" y="549" width="0.7749%" height="15" fill="rgb(226,100,49)" fg:x="98033" fg:w="828"/><text x="91.9931%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (217 samples, 0.20%)</title><rect x="92.3149%" y="533" width="0.2031%" height="15" fill="rgb(245,188,27)" fg:x="98644" fg:w="217"/><text x="92.5649%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (217 samples, 0.20%)</title><rect x="92.3149%" y="517" width="0.2031%" height="15" fill="rgb(212,170,8)" fg:x="98644" fg:w="217"/><text x="92.5649%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (150 samples, 0.14%)</title><rect x="92.5414%" y="501" width="0.1404%" height="15" fill="rgb(217,113,29)" fg:x="98886" fg:w="150"/><text x="92.7914%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (150 samples, 0.14%)</title><rect x="92.5414%" y="485" width="0.1404%" height="15" fill="rgb(237,30,3)" fg:x="98886" fg:w="150"/><text x="92.7914%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (353 samples, 0.33%)</title><rect x="92.5180%" y="565" width="0.3304%" height="15" fill="rgb(227,19,28)" fg:x="98861" fg:w="353"/><text x="92.7680%" y="575.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (353 samples, 0.33%)</title><rect x="92.5180%" y="549" width="0.3304%" height="15" fill="rgb(239,172,45)" fg:x="98861" fg:w="353"/><text x="92.7680%" y="559.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (347 samples, 0.32%)</title><rect x="92.5236%" y="533" width="0.3247%" height="15" fill="rgb(254,55,39)" fg:x="98867" fg:w="347"/><text x="92.7736%" y="543.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (331 samples, 0.31%)</title><rect x="92.5386%" y="517" width="0.3098%" height="15" fill="rgb(249,208,12)" fg:x="98883" fg:w="331"/><text x="92.7886%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (178 samples, 0.17%)</title><rect x="92.6817%" y="501" width="0.1666%" height="15" fill="rgb(240,52,13)" fg:x="99036" fg:w="178"/><text x="92.9317%" y="511.50"></text></g><g><title>__GI___pthread_rwlock_unlock (178 samples, 0.17%)</title><rect x="92.6817%" y="485" width="0.1666%" height="15" fill="rgb(252,149,13)" fg:x="99036" fg:w="178"/><text x="92.9317%" y="495.50"></text></g><g><title>fastrand::Rng::gen_u64 (11 samples, 0.01%)</title><rect x="92.8811%" y="469" width="0.0103%" height="15" fill="rgb(232,81,48)" fg:x="99249" fg:w="11"/><text x="93.1311%" y="479.50"></text></g><g><title>fastrand::Rng::usize (22 samples, 0.02%)</title><rect x="92.8717%" y="501" width="0.0206%" height="15" fill="rgb(222,144,2)" fg:x="99239" fg:w="22"/><text x="93.1217%" y="511.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (17 samples, 0.02%)</title><rect x="92.8764%" y="485" width="0.0159%" height="15" fill="rgb(216,81,32)" fg:x="99244" fg:w="17"/><text x="93.1264%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.03%)</title><rect x="92.8624%" y="533" width="0.0309%" height="15" fill="rgb(244,78,51)" fg:x="99229" fg:w="33"/><text x="93.1124%" y="543.50"></text></g><g><title>fastrand::usize::{{closure}} (23 samples, 0.02%)</title><rect x="92.8717%" y="517" width="0.0215%" height="15" fill="rgb(217,66,21)" fg:x="99239" fg:w="23"/><text x="93.1217%" y="527.50"></text></g><g><title>fastrand::usize (46 samples, 0.04%)</title><rect x="92.8521%" y="565" width="0.0430%" height="15" fill="rgb(247,101,42)" fg:x="99218" fg:w="46"/><text x="93.1021%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (41 samples, 0.04%)</title><rect x="92.8567%" y="549" width="0.0384%" height="15" fill="rgb(227,81,39)" fg:x="99223" fg:w="41"/><text x="93.1067%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="92.8951%" y="549" width="0.0112%" height="15" fill="rgb(220,223,44)" fg:x="99264" fg:w="12"/><text x="93.1451%" y="559.50"></text></g><g><title>std::sync::poison::Flag::borrow (12 samples, 0.01%)</title><rect x="92.8951%" y="533" width="0.0112%" height="15" fill="rgb(205,218,2)" fg:x="99264" fg:w="12"/><text x="93.1451%" y="543.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (219 samples, 0.20%)</title><rect x="92.9260%" y="517" width="0.2049%" height="15" fill="rgb(212,207,28)" fg:x="99297" fg:w="219"/><text x="93.1760%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (3,936 samples, 3.68%)</title><rect x="89.5354%" y="581" width="3.6835%" height="15" fill="rgb(224,12,41)" fg:x="95674" fg:w="3936"/><text x="89.7854%" y="591.50">asyn..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (346 samples, 0.32%)</title><rect x="92.8951%" y="565" width="0.3238%" height="15" fill="rgb(216,118,12)" fg:x="99264" fg:w="346"/><text x="93.1451%" y="575.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (334 samples, 0.31%)</title><rect x="92.9063%" y="549" width="0.3126%" height="15" fill="rgb(252,97,46)" fg:x="99276" fg:w="334"/><text x="93.1563%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (326 samples, 0.31%)</title><rect x="92.9138%" y="533" width="0.3051%" height="15" fill="rgb(244,206,19)" fg:x="99284" fg:w="326"/><text x="93.1638%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (94 samples, 0.09%)</title><rect x="93.1309%" y="517" width="0.0880%" height="15" fill="rgb(231,84,31)" fg:x="99516" fg:w="94"/><text x="93.3809%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (94 samples, 0.09%)</title><rect x="93.1309%" y="501" width="0.0880%" height="15" fill="rgb(244,133,0)" fg:x="99516" fg:w="94"/><text x="93.3809%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (37 samples, 0.03%)</title><rect x="93.2255%" y="565" width="0.0346%" height="15" fill="rgb(223,15,50)" fg:x="99617" fg:w="37"/><text x="93.4755%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="93.2255%" y="549" width="0.0346%" height="15" fill="rgb(250,118,49)" fg:x="99617" fg:w="37"/><text x="93.4755%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (35 samples, 0.03%)</title><rect x="93.2273%" y="533" width="0.0328%" height="15" fill="rgb(248,25,38)" fg:x="99619" fg:w="35"/><text x="93.4773%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (35 samples, 0.03%)</title><rect x="93.2273%" y="517" width="0.0328%" height="15" fill="rgb(215,70,14)" fg:x="99619" fg:w="35"/><text x="93.4773%" y="527.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (35 samples, 0.03%)</title><rect x="93.2273%" y="501" width="0.0328%" height="15" fill="rgb(215,28,15)" fg:x="99619" fg:w="35"/><text x="93.4773%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (58 samples, 0.05%)</title><rect x="93.2601%" y="565" width="0.0543%" height="15" fill="rgb(243,6,28)" fg:x="99654" fg:w="58"/><text x="93.5101%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (58 samples, 0.05%)</title><rect x="93.2601%" y="549" width="0.0543%" height="15" fill="rgb(222,130,1)" fg:x="99654" fg:w="58"/><text x="93.5101%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (11 samples, 0.01%)</title><rect x="93.3247%" y="485" width="0.0103%" height="15" fill="rgb(236,166,44)" fg:x="99723" fg:w="11"/><text x="93.5747%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="93.3247%" y="469" width="0.0103%" height="15" fill="rgb(221,108,14)" fg:x="99723" fg:w="11"/><text x="93.5747%" y="479.50"></text></g><g><title>__libc_write (18 samples, 0.02%)</title><rect x="93.3359%" y="469" width="0.0168%" height="15" fill="rgb(252,3,45)" fg:x="99735" fg:w="18"/><text x="93.5859%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::notify (31 samples, 0.03%)</title><rect x="93.3247%" y="517" width="0.0290%" height="15" fill="rgb(237,68,30)" fg:x="99723" fg:w="31"/><text x="93.5747%" y="527.50"></text></g><g><title>polling::Poller::notify (31 samples, 0.03%)</title><rect x="93.3247%" y="501" width="0.0290%" height="15" fill="rgb(211,79,22)" fg:x="99723" fg:w="31"/><text x="93.5747%" y="511.50"></text></g><g><title>polling::epoll::Poller::notify (19 samples, 0.02%)</title><rect x="93.3359%" y="485" width="0.0178%" height="15" fill="rgb(252,185,21)" fg:x="99735" fg:w="19"/><text x="93.5859%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (108 samples, 0.10%)</title><rect x="93.3902%" y="485" width="0.1011%" height="15" fill="rgb(225,189,26)" fg:x="99793" fg:w="108"/><text x="93.6402%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (108 samples, 0.10%)</title><rect x="93.3902%" y="469" width="0.1011%" height="15" fill="rgb(241,30,40)" fg:x="99793" fg:w="108"/><text x="93.6402%" y="479.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (107 samples, 0.10%)</title><rect x="93.4912%" y="485" width="0.1001%" height="15" fill="rgb(235,215,44)" fg:x="99901" fg:w="107"/><text x="93.7412%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (107 samples, 0.10%)</title><rect x="93.4912%" y="469" width="0.1001%" height="15" fill="rgb(205,8,29)" fg:x="99901" fg:w="107"/><text x="93.7412%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (107 samples, 0.10%)</title><rect x="93.4912%" y="453" width="0.1001%" height="15" fill="rgb(241,137,42)" fg:x="99901" fg:w="107"/><text x="93.7412%" y="463.50"></text></g><g><title>__pthread_cond_signal (107 samples, 0.10%)</title><rect x="93.4912%" y="437" width="0.1001%" height="15" fill="rgb(237,155,2)" fg:x="99901" fg:w="107"/><text x="93.7412%" y="447.50"></text></g><g><title>parking::Unparker::unpark (351 samples, 0.33%)</title><rect x="93.3565%" y="517" width="0.3285%" height="15" fill="rgb(245,29,42)" fg:x="99757" fg:w="351"/><text x="93.6065%" y="527.50"></text></g><g><title>parking::Inner::unpark (326 samples, 0.31%)</title><rect x="93.3799%" y="501" width="0.3051%" height="15" fill="rgb(234,101,35)" fg:x="99782" fg:w="326"/><text x="93.6299%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (100 samples, 0.09%)</title><rect x="93.5914%" y="485" width="0.0936%" height="15" fill="rgb(228,64,37)" fg:x="100008" fg:w="100"/><text x="93.8414%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (100 samples, 0.09%)</title><rect x="93.5914%" y="469" width="0.0936%" height="15" fill="rgb(217,214,36)" fg:x="100008" fg:w="100"/><text x="93.8414%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (99 samples, 0.09%)</title><rect x="93.5923%" y="453" width="0.0926%" height="15" fill="rgb(243,70,3)" fg:x="100009" fg:w="99"/><text x="93.8423%" y="463.50"></text></g><g><title>__GI___pthread_mutex_lock (99 samples, 0.09%)</title><rect x="93.5923%" y="437" width="0.0926%" height="15" fill="rgb(253,158,52)" fg:x="100009" fg:w="99"/><text x="93.8423%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (402 samples, 0.38%)</title><rect x="93.3172%" y="533" width="0.3762%" height="15" fill="rgb(234,111,54)" fg:x="99715" fg:w="402"/><text x="93.5672%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (452 samples, 0.42%)</title><rect x="93.3144%" y="565" width="0.4230%" height="15" fill="rgb(217,70,32)" fg:x="99712" fg:w="452"/><text x="93.5644%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (450 samples, 0.42%)</title><rect x="93.3162%" y="549" width="0.4211%" height="15" fill="rgb(234,18,33)" fg:x="99714" fg:w="450"/><text x="93.5662%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (47 samples, 0.04%)</title><rect x="93.6934%" y="533" width="0.0440%" height="15" fill="rgb(234,12,49)" fg:x="100117" fg:w="47"/><text x="93.9434%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="93.6934%" y="517" width="0.0440%" height="15" fill="rgb(236,10,21)" fg:x="100117" fg:w="47"/><text x="93.9434%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (45 samples, 0.04%)</title><rect x="93.6953%" y="501" width="0.0421%" height="15" fill="rgb(248,182,45)" fg:x="100119" fg:w="45"/><text x="93.9453%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (45 samples, 0.04%)</title><rect x="93.6953%" y="485" width="0.0421%" height="15" fill="rgb(217,95,36)" fg:x="100119" fg:w="45"/><text x="93.9453%" y="495.50"></text></g><g><title>async_executor::State::notify (593 samples, 0.55%)</title><rect x="93.2189%" y="581" width="0.5550%" height="15" fill="rgb(212,110,31)" fg:x="99610" fg:w="593"/><text x="93.4689%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (39 samples, 0.04%)</title><rect x="93.7374%" y="565" width="0.0365%" height="15" fill="rgb(206,32,53)" fg:x="100164" fg:w="39"/><text x="93.9874%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (37 samples, 0.03%)</title><rect x="93.7392%" y="549" width="0.0346%" height="15" fill="rgb(246,141,37)" fg:x="100166" fg:w="37"/><text x="93.9892%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (35 samples, 0.03%)</title><rect x="93.7411%" y="533" width="0.0328%" height="15" fill="rgb(219,16,7)" fg:x="100168" fg:w="35"/><text x="93.9911%" y="543.50"></text></g><g><title>__GI___pthread_mutex_lock (35 samples, 0.03%)</title><rect x="93.7411%" y="517" width="0.0328%" height="15" fill="rgb(230,205,45)" fg:x="100168" fg:w="35"/><text x="93.9911%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (127 samples, 0.12%)</title><rect x="93.7898%" y="549" width="0.1189%" height="15" fill="rgb(231,43,49)" fg:x="100220" fg:w="127"/><text x="94.0398%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (126 samples, 0.12%)</title><rect x="93.7907%" y="533" width="0.1179%" height="15" fill="rgb(212,106,34)" fg:x="100221" fg:w="126"/><text x="94.0407%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (122 samples, 0.11%)</title><rect x="93.7945%" y="517" width="0.1142%" height="15" fill="rgb(206,83,17)" fg:x="100225" fg:w="122"/><text x="94.0445%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (122 samples, 0.11%)</title><rect x="93.7945%" y="501" width="0.1142%" height="15" fill="rgb(244,154,49)" fg:x="100225" fg:w="122"/><text x="94.0445%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (121 samples, 0.11%)</title><rect x="93.7954%" y="485" width="0.1132%" height="15" fill="rgb(244,149,49)" fg:x="100226" fg:w="121"/><text x="94.0454%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (121 samples, 0.11%)</title><rect x="93.7954%" y="469" width="0.1132%" height="15" fill="rgb(227,134,18)" fg:x="100226" fg:w="121"/><text x="94.0454%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (27 samples, 0.03%)</title><rect x="93.9086%" y="549" width="0.0253%" height="15" fill="rgb(237,116,36)" fg:x="100347" fg:w="27"/><text x="94.1586%" y="559.50"></text></g><g><title>async_executor::Sleepers::insert (181 samples, 0.17%)</title><rect x="93.7851%" y="565" width="0.1694%" height="15" fill="rgb(205,129,40)" fg:x="100215" fg:w="181"/><text x="94.0351%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.02%)</title><rect x="93.9339%" y="549" width="0.0206%" height="15" fill="rgb(236,178,4)" fg:x="100374" fg:w="22"/><text x="94.1839%" y="559.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="93.9367%" y="533" width="0.0178%" height="15" fill="rgb(251,76,53)" fg:x="100377" fg:w="19"/><text x="94.1867%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (68 samples, 0.06%)</title><rect x="93.9957%" y="549" width="0.0636%" height="15" fill="rgb(242,92,40)" fg:x="100440" fg:w="68"/><text x="94.2457%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (66 samples, 0.06%)</title><rect x="93.9975%" y="533" width="0.0618%" height="15" fill="rgb(209,45,30)" fg:x="100442" fg:w="66"/><text x="94.2475%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (66 samples, 0.06%)</title><rect x="93.9975%" y="517" width="0.0618%" height="15" fill="rgb(218,157,36)" fg:x="100442" fg:w="66"/><text x="94.2475%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (66 samples, 0.06%)</title><rect x="93.9975%" y="501" width="0.0618%" height="15" fill="rgb(222,186,16)" fg:x="100442" fg:w="66"/><text x="94.2475%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (66 samples, 0.06%)</title><rect x="93.9975%" y="485" width="0.0618%" height="15" fill="rgb(254,72,35)" fg:x="100442" fg:w="66"/><text x="94.2475%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (66 samples, 0.06%)</title><rect x="93.9975%" y="469" width="0.0618%" height="15" fill="rgb(224,25,35)" fg:x="100442" fg:w="66"/><text x="94.2475%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.02%)</title><rect x="94.0593%" y="549" width="0.0234%" height="15" fill="rgb(206,135,52)" fg:x="100508" fg:w="25"/><text x="94.3093%" y="559.50"></text></g><g><title>core::ptr::write (21 samples, 0.02%)</title><rect x="94.0630%" y="533" width="0.0197%" height="15" fill="rgb(229,174,47)" fg:x="100512" fg:w="21"/><text x="94.3130%" y="543.50"></text></g><g><title>async_executor::Sleepers::update (149 samples, 0.14%)</title><rect x="93.9592%" y="565" width="0.1394%" height="15" fill="rgb(242,184,21)" fg:x="100401" fg:w="149"/><text x="94.2092%" y="575.50"></text></g><g><title>core::task::wake::Waker::will_wake (17 samples, 0.02%)</title><rect x="94.0827%" y="549" width="0.0159%" height="15" fill="rgb(213,22,45)" fg:x="100533" fg:w="17"/><text x="94.3327%" y="559.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="94.0827%" y="533" width="0.0159%" height="15" fill="rgb(237,81,54)" fg:x="100533" fg:w="17"/><text x="94.3327%" y="543.50"></text></g><g><title>std::sync::poison::Flag::done (11 samples, 0.01%)</title><rect x="94.0986%" y="533" width="0.0103%" height="15" fill="rgb(248,177,18)" fg:x="100550" fg:w="11"/><text x="94.3486%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (212 samples, 0.20%)</title><rect x="94.0986%" y="565" width="0.1984%" height="15" fill="rgb(254,31,16)" fg:x="100550" fg:w="212"/><text x="94.3486%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (212 samples, 0.20%)</title><rect x="94.0986%" y="549" width="0.1984%" height="15" fill="rgb(235,20,31)" fg:x="100550" fg:w="212"/><text x="94.3486%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (201 samples, 0.19%)</title><rect x="94.1089%" y="533" width="0.1881%" height="15" fill="rgb(240,56,43)" fg:x="100561" fg:w="201"/><text x="94.3589%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (200 samples, 0.19%)</title><rect x="94.1098%" y="517" width="0.1872%" height="15" fill="rgb(237,197,51)" fg:x="100562" fg:w="200"/><text x="94.3598%" y="527.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (198 samples, 0.19%)</title><rect x="94.1117%" y="501" width="0.1853%" height="15" fill="rgb(241,162,44)" fg:x="100564" fg:w="198"/><text x="94.3617%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (148 samples, 0.14%)</title><rect x="94.2970%" y="565" width="0.1385%" height="15" fill="rgb(224,23,20)" fg:x="100762" fg:w="148"/><text x="94.5470%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (148 samples, 0.14%)</title><rect x="94.2970%" y="549" width="0.1385%" height="15" fill="rgb(250,109,34)" fg:x="100762" fg:w="148"/><text x="94.5470%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (102 samples, 0.10%)</title><rect x="94.4355%" y="565" width="0.0955%" height="15" fill="rgb(214,175,50)" fg:x="100910" fg:w="102"/><text x="94.6855%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_store (102 samples, 0.10%)</title><rect x="94.4355%" y="549" width="0.0955%" height="15" fill="rgb(213,182,5)" fg:x="100910" fg:w="102"/><text x="94.6855%" y="559.50"></text></g><g><title>std::sync::poison::Flag::get (14 samples, 0.01%)</title><rect x="94.5310%" y="517" width="0.0131%" height="15" fill="rgb(209,199,19)" fg:x="101012" fg:w="14"/><text x="94.7810%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (14 samples, 0.01%)</title><rect x="94.5310%" y="501" width="0.0131%" height="15" fill="rgb(236,224,42)" fg:x="101012" fg:w="14"/><text x="94.7810%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="94.5310%" y="485" width="0.0131%" height="15" fill="rgb(246,226,29)" fg:x="101012" fg:w="14"/><text x="94.7810%" y="495.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="94.5310%" y="549" width="0.0159%" height="15" fill="rgb(227,223,11)" fg:x="101012" fg:w="17"/><text x="94.7810%" y="559.50"></text></g><g><title>std::sync::poison::Flag::borrow (17 samples, 0.02%)</title><rect x="94.5310%" y="533" width="0.0159%" height="15" fill="rgb(219,7,51)" fg:x="101012" fg:w="17"/><text x="94.7810%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (1,478 samples, 1.38%)</title><rect x="93.7739%" y="581" width="1.3832%" height="15" fill="rgb(245,167,10)" fg:x="100203" fg:w="1478"/><text x="94.0239%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (669 samples, 0.63%)</title><rect x="94.5310%" y="565" width="0.6261%" height="15" fill="rgb(237,224,16)" fg:x="101012" fg:w="669"/><text x="94.7810%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (652 samples, 0.61%)</title><rect x="94.5469%" y="549" width="0.6102%" height="15" fill="rgb(226,132,13)" fg:x="101029" fg:w="652"/><text x="94.7969%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (591 samples, 0.55%)</title><rect x="94.6040%" y="533" width="0.5531%" height="15" fill="rgb(214,140,3)" fg:x="101090" fg:w="591"/><text x="94.8540%" y="543.50"></text></g><g><title>__GI___pthread_mutex_lock (591 samples, 0.55%)</title><rect x="94.6040%" y="517" width="0.5531%" height="15" fill="rgb(221,177,4)" fg:x="101090" fg:w="591"/><text x="94.8540%" y="527.50"></text></g><g><title>__lll_lock_wait (37 samples, 0.03%)</title><rect x="95.1224%" y="501" width="0.0346%" height="15" fill="rgb(238,139,3)" fg:x="101644" fg:w="37"/><text x="95.3724%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="95.1720%" y="549" width="0.0103%" height="15" fill="rgb(216,17,39)" fg:x="101697" fg:w="11"/><text x="95.4220%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (11 samples, 0.01%)</title><rect x="95.1720%" y="533" width="0.0103%" height="15" fill="rgb(238,120,9)" fg:x="101697" fg:w="11"/><text x="95.4220%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (11 samples, 0.01%)</title><rect x="95.1720%" y="517" width="0.0103%" height="15" fill="rgb(244,92,53)" fg:x="101697" fg:w="11"/><text x="95.4220%" y="527.50"></text></g><g><title>async_executor::Sleepers::remove (73 samples, 0.07%)</title><rect x="95.1645%" y="565" width="0.0683%" height="15" fill="rgb(224,148,33)" fg:x="101689" fg:w="73"/><text x="95.4145%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (44 samples, 0.04%)</title><rect x="95.1917%" y="549" width="0.0412%" height="15" fill="rgb(243,6,36)" fg:x="101718" fg:w="44"/><text x="95.4417%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (44 samples, 0.04%)</title><rect x="95.1917%" y="533" width="0.0412%" height="15" fill="rgb(230,102,11)" fg:x="101718" fg:w="44"/><text x="95.4417%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="95.1917%" y="517" width="0.0412%" height="15" fill="rgb(234,148,36)" fg:x="101718" fg:w="44"/><text x="95.4417%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (44 samples, 0.04%)</title><rect x="95.1917%" y="501" width="0.0412%" height="15" fill="rgb(251,153,25)" fg:x="101718" fg:w="44"/><text x="95.4417%" y="511.50"></text></g><g><title>core::mem::drop (40 samples, 0.04%)</title><rect x="95.1954%" y="485" width="0.0374%" height="15" fill="rgb(215,129,8)" fg:x="101722" fg:w="40"/><text x="95.4454%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (40 samples, 0.04%)</title><rect x="95.1954%" y="469" width="0.0374%" height="15" fill="rgb(224,128,35)" fg:x="101722" fg:w="40"/><text x="95.4454%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="95.1954%" y="453" width="0.0374%" height="15" fill="rgb(237,56,52)" fg:x="101722" fg:w="40"/><text x="95.4454%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (38 samples, 0.04%)</title><rect x="95.1973%" y="437" width="0.0356%" height="15" fill="rgb(234,213,19)" fg:x="101724" fg:w="38"/><text x="95.4473%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (38 samples, 0.04%)</title><rect x="95.1973%" y="421" width="0.0356%" height="15" fill="rgb(252,82,23)" fg:x="101724" fg:w="38"/><text x="95.4473%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (44 samples, 0.04%)</title><rect x="95.2328%" y="565" width="0.0412%" height="15" fill="rgb(254,201,21)" fg:x="101762" fg:w="44"/><text x="95.4828%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="95.2328%" y="549" width="0.0412%" height="15" fill="rgb(250,186,11)" fg:x="101762" fg:w="44"/><text x="95.4828%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (41 samples, 0.04%)</title><rect x="95.2356%" y="533" width="0.0384%" height="15" fill="rgb(211,174,5)" fg:x="101765" fg:w="41"/><text x="95.4856%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (41 samples, 0.04%)</title><rect x="95.2356%" y="517" width="0.0384%" height="15" fill="rgb(214,121,10)" fg:x="101765" fg:w="41"/><text x="95.4856%" y="527.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (38 samples, 0.04%)</title><rect x="95.2385%" y="501" width="0.0356%" height="15" fill="rgb(241,66,2)" fg:x="101768" fg:w="38"/><text x="95.4885%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (50 samples, 0.05%)</title><rect x="95.2740%" y="565" width="0.0468%" height="15" fill="rgb(220,167,19)" fg:x="101806" fg:w="50"/><text x="95.5240%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (50 samples, 0.05%)</title><rect x="95.2740%" y="549" width="0.0468%" height="15" fill="rgb(231,54,50)" fg:x="101806" fg:w="50"/><text x="95.5240%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (63 samples, 0.06%)</title><rect x="95.3208%" y="565" width="0.0590%" height="15" fill="rgb(239,217,53)" fg:x="101856" fg:w="63"/><text x="95.5708%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (63 samples, 0.06%)</title><rect x="95.3208%" y="549" width="0.0590%" height="15" fill="rgb(248,8,0)" fg:x="101856" fg:w="63"/><text x="95.5708%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,473 samples, 6.06%)</title><rect x="89.4344%" y="645" width="6.0577%" height="15" fill="rgb(229,118,37)" fg:x="95566" fg:w="6473"/><text x="89.6844%" y="655.50">&lt;core::f..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (6,470 samples, 6.05%)</title><rect x="89.4372%" y="629" width="6.0549%" height="15" fill="rgb(253,223,43)" fg:x="95569" fg:w="6470"/><text x="89.6872%" y="639.50">async_ex..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (6,465 samples, 6.05%)</title><rect x="89.4419%" y="613" width="6.0502%" height="15" fill="rgb(211,77,36)" fg:x="95574" fg:w="6465"/><text x="89.6919%" y="623.50">&lt;futures..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (6,454 samples, 6.04%)</title><rect x="89.4522%" y="597" width="6.0399%" height="15" fill="rgb(219,3,53)" fg:x="95585" fg:w="6454"/><text x="89.7022%" y="607.50">async_ex..</text></g><g><title>async_executor::Ticker::wake (358 samples, 0.34%)</title><rect x="95.1570%" y="581" width="0.3350%" height="15" fill="rgb(244,45,42)" fg:x="101681" fg:w="358"/><text x="95.4070%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (120 samples, 0.11%)</title><rect x="95.3798%" y="565" width="0.1123%" height="15" fill="rgb(225,95,27)" fg:x="101919" fg:w="120"/><text x="95.6298%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (115 samples, 0.11%)</title><rect x="95.3844%" y="549" width="0.1076%" height="15" fill="rgb(207,74,8)" fg:x="101924" fg:w="115"/><text x="95.6344%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (111 samples, 0.10%)</title><rect x="95.3882%" y="533" width="0.1039%" height="15" fill="rgb(243,63,36)" fg:x="101928" fg:w="111"/><text x="95.6382%" y="543.50"></text></g><g><title>__GI___pthread_mutex_lock (111 samples, 0.10%)</title><rect x="95.3882%" y="517" width="0.1039%" height="15" fill="rgb(211,180,12)" fg:x="101928" fg:w="111"/><text x="95.6382%" y="527.50"></text></g><g><title>__lll_lock_wait (22 samples, 0.02%)</title><rect x="95.4715%" y="501" width="0.0206%" height="15" fill="rgb(254,166,49)" fg:x="102017" fg:w="22"/><text x="95.7215%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,539 samples, 6.12%)</title><rect x="89.4157%" y="677" width="6.1195%" height="15" fill="rgb(205,19,0)" fg:x="95546" fg:w="6539"/><text x="89.6657%" y="687.50">&lt;core::f..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (6,534 samples, 6.11%)</title><rect x="89.4203%" y="661" width="6.1148%" height="15" fill="rgb(224,172,32)" fg:x="95551" fg:w="6534"/><text x="89.6703%" y="671.50">async_ex..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (45 samples, 0.04%)</title><rect x="95.4930%" y="645" width="0.0421%" height="15" fill="rgb(254,136,30)" fg:x="102040" fg:w="45"/><text x="95.7430%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (45 samples, 0.04%)</title><rect x="95.4930%" y="629" width="0.0421%" height="15" fill="rgb(246,19,35)" fg:x="102040" fg:w="45"/><text x="95.7430%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (45 samples, 0.04%)</title><rect x="95.6446%" y="549" width="0.0421%" height="15" fill="rgb(219,24,36)" fg:x="102202" fg:w="45"/><text x="95.8946%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (43 samples, 0.04%)</title><rect x="95.6465%" y="533" width="0.0402%" height="15" fill="rgb(251,55,1)" fg:x="102204" fg:w="43"/><text x="95.8965%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (55 samples, 0.05%)</title><rect x="95.6877%" y="533" width="0.0515%" height="15" fill="rgb(218,117,39)" fg:x="102248" fg:w="55"/><text x="95.9377%" y="543.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11 samples, 0.01%)</title><rect x="95.7438%" y="517" width="0.0103%" height="15" fill="rgb(248,169,11)" fg:x="102308" fg:w="11"/><text x="95.9938%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="95.7438%" y="501" width="0.0103%" height="15" fill="rgb(244,40,44)" fg:x="102308" fg:w="11"/><text x="95.9938%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (166 samples, 0.16%)</title><rect x="95.6006%" y="645" width="0.1553%" height="15" fill="rgb(234,62,37)" fg:x="102155" fg:w="166"/><text x="95.8506%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (166 samples, 0.16%)</title><rect x="95.6006%" y="629" width="0.1553%" height="15" fill="rgb(207,117,42)" fg:x="102155" fg:w="166"/><text x="95.8506%" y="639.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (164 samples, 0.15%)</title><rect x="95.6025%" y="613" width="0.1535%" height="15" fill="rgb(213,43,2)" fg:x="102157" fg:w="164"/><text x="95.8525%" y="623.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (126 samples, 0.12%)</title><rect x="95.6381%" y="597" width="0.1179%" height="15" fill="rgb(244,202,51)" fg:x="102195" fg:w="126"/><text x="95.8881%" y="607.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (126 samples, 0.12%)</title><rect x="95.6381%" y="581" width="0.1179%" height="15" fill="rgb(253,174,46)" fg:x="102195" fg:w="126"/><text x="95.8881%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (122 samples, 0.11%)</title><rect x="95.6418%" y="565" width="0.1142%" height="15" fill="rgb(251,23,1)" fg:x="102199" fg:w="122"/><text x="95.8918%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (74 samples, 0.07%)</title><rect x="95.6867%" y="549" width="0.0693%" height="15" fill="rgb(253,26,1)" fg:x="102247" fg:w="74"/><text x="95.9367%" y="559.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (14 samples, 0.01%)</title><rect x="95.7429%" y="533" width="0.0131%" height="15" fill="rgb(216,89,31)" fg:x="102307" fg:w="14"/><text x="95.9929%" y="543.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (38 samples, 0.04%)</title><rect x="95.7560%" y="645" width="0.0356%" height="15" fill="rgb(209,109,5)" fg:x="102321" fg:w="38"/><text x="96.0060%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (34 samples, 0.03%)</title><rect x="95.7597%" y="629" width="0.0318%" height="15" fill="rgb(229,63,13)" fg:x="102325" fg:w="34"/><text x="96.0097%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (34 samples, 0.03%)</title><rect x="95.7597%" y="613" width="0.0318%" height="15" fill="rgb(238,137,54)" fg:x="102325" fg:w="34"/><text x="96.0097%" y="623.50"></text></g><g><title>parking::Unparker::unpark (22 samples, 0.02%)</title><rect x="95.8074%" y="549" width="0.0206%" height="15" fill="rgb(228,1,9)" fg:x="102376" fg:w="22"/><text x="96.0574%" y="559.50"></text></g><g><title>parking::Inner::unpark (18 samples, 0.02%)</title><rect x="95.8112%" y="533" width="0.0168%" height="15" fill="rgb(249,120,48)" fg:x="102380" fg:w="18"/><text x="96.0612%" y="543.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (25 samples, 0.02%)</title><rect x="95.8056%" y="565" width="0.0234%" height="15" fill="rgb(209,72,36)" fg:x="102374" fg:w="25"/><text x="96.0556%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (28 samples, 0.03%)</title><rect x="95.8056%" y="597" width="0.0262%" height="15" fill="rgb(247,98,49)" fg:x="102374" fg:w="28"/><text x="96.0556%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (28 samples, 0.03%)</title><rect x="95.8056%" y="581" width="0.0262%" height="15" fill="rgb(233,75,36)" fg:x="102374" fg:w="28"/><text x="96.0556%" y="591.50"></text></g><g><title>async_executor::State::notify (42 samples, 0.04%)</title><rect x="95.7943%" y="613" width="0.0393%" height="15" fill="rgb(225,14,24)" fg:x="102362" fg:w="42"/><text x="96.0443%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (56 samples, 0.05%)</title><rect x="95.7943%" y="629" width="0.0524%" height="15" fill="rgb(237,193,20)" fg:x="102362" fg:w="56"/><text x="96.0443%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (14 samples, 0.01%)</title><rect x="95.8336%" y="613" width="0.0131%" height="15" fill="rgb(239,122,19)" fg:x="102404" fg:w="14"/><text x="96.0836%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (12 samples, 0.01%)</title><rect x="95.8355%" y="597" width="0.0112%" height="15" fill="rgb(231,220,10)" fg:x="102406" fg:w="12"/><text x="96.0855%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (58 samples, 0.05%)</title><rect x="95.7934%" y="645" width="0.0543%" height="15" fill="rgb(220,66,15)" fg:x="102361" fg:w="58"/><text x="96.0434%" y="655.50"></text></g><g><title>async_task::runnable::Runnable::run (505 samples, 0.47%)</title><rect x="95.5370%" y="677" width="0.4726%" height="15" fill="rgb(215,171,52)" fg:x="102087" fg:w="505"/><text x="95.7870%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (486 samples, 0.45%)</title><rect x="95.5548%" y="661" width="0.4548%" height="15" fill="rgb(241,169,50)" fg:x="102106" fg:w="486"/><text x="95.8048%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (173 samples, 0.16%)</title><rect x="95.8477%" y="645" width="0.1619%" height="15" fill="rgb(236,189,0)" fg:x="102419" fg:w="173"/><text x="96.0977%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (173 samples, 0.16%)</title><rect x="95.8477%" y="629" width="0.1619%" height="15" fill="rgb(217,147,20)" fg:x="102419" fg:w="173"/><text x="96.0977%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (7,076 samples, 6.62%)</title><rect x="89.3979%" y="741" width="6.6220%" height="15" fill="rgb(206,188,39)" fg:x="95527" fg:w="7076"/><text x="89.6479%" y="751.50">async_exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (7,068 samples, 6.61%)</title><rect x="89.4054%" y="725" width="6.6145%" height="15" fill="rgb(227,118,25)" fg:x="95535" fg:w="7068"/><text x="89.6554%" y="735.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,068 samples, 6.61%)</title><rect x="89.4054%" y="709" width="6.6145%" height="15" fill="rgb(248,171,40)" fg:x="95535" fg:w="7068"/><text x="89.6554%" y="719.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (7,064 samples, 6.61%)</title><rect x="89.4091%" y="693" width="6.6108%" height="15" fill="rgb(251,90,54)" fg:x="95539" fg:w="7064"/><text x="89.6591%" y="703.50">async_exe..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.01%)</title><rect x="96.0096%" y="677" width="0.0103%" height="15" fill="rgb(234,11,46)" fg:x="102592" fg:w="11"/><text x="96.2596%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.01%)</title><rect x="96.0096%" y="661" width="0.0103%" height="15" fill="rgb(229,134,13)" fg:x="102592" fg:w="11"/><text x="96.2596%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="96.1135%" y="469" width="0.0122%" height="15" fill="rgb(223,129,3)" fg:x="102703" fg:w="13"/><text x="96.3635%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.01%)</title><rect x="96.1135%" y="453" width="0.0122%" height="15" fill="rgb(221,124,13)" fg:x="102703" fg:w="13"/><text x="96.3635%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="96.1116%" y="533" width="0.0159%" height="15" fill="rgb(234,3,18)" fg:x="102701" fg:w="17"/><text x="96.3616%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (17 samples, 0.02%)</title><rect x="96.1116%" y="517" width="0.0159%" height="15" fill="rgb(249,199,20)" fg:x="102701" fg:w="17"/><text x="96.3616%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.02%)</title><rect x="96.1116%" y="501" width="0.0159%" height="15" fill="rgb(224,134,6)" fg:x="102701" fg:w="17"/><text x="96.3616%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.01%)</title><rect x="96.1135%" y="485" width="0.0140%" height="15" fill="rgb(254,83,26)" fg:x="102703" fg:w="15"/><text x="96.3635%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (40 samples, 0.04%)</title><rect x="96.1659%" y="501" width="0.0374%" height="15" fill="rgb(217,88,9)" fg:x="102759" fg:w="40"/><text x="96.4159%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (40 samples, 0.04%)</title><rect x="96.1659%" y="485" width="0.0374%" height="15" fill="rgb(225,73,2)" fg:x="102759" fg:w="40"/><text x="96.4159%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (40 samples, 0.04%)</title><rect x="96.1659%" y="469" width="0.0374%" height="15" fill="rgb(226,44,39)" fg:x="102759" fg:w="40"/><text x="96.4159%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (40 samples, 0.04%)</title><rect x="96.1659%" y="453" width="0.0374%" height="15" fill="rgb(228,53,17)" fg:x="102759" fg:w="40"/><text x="96.4159%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (151 samples, 0.14%)</title><rect x="96.1434%" y="517" width="0.1413%" height="15" fill="rgb(212,27,27)" fg:x="102735" fg:w="151"/><text x="96.3934%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (87 samples, 0.08%)</title><rect x="96.2033%" y="501" width="0.0814%" height="15" fill="rgb(241,50,6)" fg:x="102799" fg:w="87"/><text x="96.4533%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (87 samples, 0.08%)</title><rect x="96.2033%" y="485" width="0.0814%" height="15" fill="rgb(225,28,51)" fg:x="102799" fg:w="87"/><text x="96.4533%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (33 samples, 0.03%)</title><rect x="96.2931%" y="501" width="0.0309%" height="15" fill="rgb(215,33,16)" fg:x="102895" fg:w="33"/><text x="96.5431%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (32 samples, 0.03%)</title><rect x="96.2941%" y="485" width="0.0299%" height="15" fill="rgb(243,40,39)" fg:x="102896" fg:w="32"/><text x="96.5441%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (32 samples, 0.03%)</title><rect x="96.2941%" y="469" width="0.0299%" height="15" fill="rgb(225,11,42)" fg:x="102896" fg:w="32"/><text x="96.5441%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.03%)</title><rect x="96.2941%" y="453" width="0.0299%" height="15" fill="rgb(241,220,38)" fg:x="102896" fg:w="32"/><text x="96.5441%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (222 samples, 0.21%)</title><rect x="96.1275%" y="533" width="0.2078%" height="15" fill="rgb(244,52,35)" fg:x="102718" fg:w="222"/><text x="96.3775%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (54 samples, 0.05%)</title><rect x="96.2847%" y="517" width="0.0505%" height="15" fill="rgb(246,42,46)" fg:x="102886" fg:w="54"/><text x="96.5347%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (30 samples, 0.03%)</title><rect x="96.3381%" y="469" width="0.0281%" height="15" fill="rgb(205,184,13)" fg:x="102943" fg:w="30"/><text x="96.5881%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (30 samples, 0.03%)</title><rect x="96.3381%" y="453" width="0.0281%" height="15" fill="rgb(209,48,36)" fg:x="102943" fg:w="30"/><text x="96.5881%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (64 samples, 0.06%)</title><rect x="96.3353%" y="533" width="0.0599%" height="15" fill="rgb(244,34,51)" fg:x="102940" fg:w="64"/><text x="96.5853%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.06%)</title><rect x="96.3353%" y="517" width="0.0599%" height="15" fill="rgb(221,107,33)" fg:x="102940" fg:w="64"/><text x="96.5853%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (61 samples, 0.06%)</title><rect x="96.3381%" y="501" width="0.0571%" height="15" fill="rgb(224,203,12)" fg:x="102943" fg:w="61"/><text x="96.5881%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (61 samples, 0.06%)</title><rect x="96.3381%" y="485" width="0.0571%" height="15" fill="rgb(230,215,18)" fg:x="102943" fg:w="61"/><text x="96.5881%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (31 samples, 0.03%)</title><rect x="96.3661%" y="469" width="0.0290%" height="15" fill="rgb(206,185,35)" fg:x="102973" fg:w="31"/><text x="96.6161%" y="479.50"></text></g><g><title>__GI___pthread_rwlock_unlock (31 samples, 0.03%)</title><rect x="96.3661%" y="453" width="0.0290%" height="15" fill="rgb(228,140,34)" fg:x="102973" fg:w="31"/><text x="96.6161%" y="463.50"></text></g><g><title>fastrand::usize (11 samples, 0.01%)</title><rect x="96.3961%" y="533" width="0.0103%" height="15" fill="rgb(208,93,13)" fg:x="103005" fg:w="11"/><text x="96.6461%" y="543.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (34 samples, 0.03%)</title><rect x="96.4101%" y="485" width="0.0318%" height="15" fill="rgb(221,193,39)" fg:x="103020" fg:w="34"/><text x="96.6601%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (393 samples, 0.37%)</title><rect x="96.1088%" y="549" width="0.3678%" height="15" fill="rgb(241,132,34)" fg:x="102698" fg:w="393"/><text x="96.3588%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (75 samples, 0.07%)</title><rect x="96.4064%" y="533" width="0.0702%" height="15" fill="rgb(221,141,10)" fg:x="103016" fg:w="75"/><text x="96.6564%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (72 samples, 0.07%)</title><rect x="96.4092%" y="517" width="0.0674%" height="15" fill="rgb(226,90,31)" fg:x="103019" fg:w="72"/><text x="96.6592%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (72 samples, 0.07%)</title><rect x="96.4092%" y="501" width="0.0674%" height="15" fill="rgb(243,75,5)" fg:x="103019" fg:w="72"/><text x="96.6592%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (37 samples, 0.03%)</title><rect x="96.4419%" y="485" width="0.0346%" height="15" fill="rgb(227,156,21)" fg:x="103054" fg:w="37"/><text x="96.6919%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (37 samples, 0.03%)</title><rect x="96.4419%" y="469" width="0.0346%" height="15" fill="rgb(250,195,8)" fg:x="103054" fg:w="37"/><text x="96.6919%" y="479.50"></text></g><g><title>async_executor::Sleepers::update (16 samples, 0.01%)</title><rect x="96.4841%" y="533" width="0.0150%" height="15" fill="rgb(220,134,5)" fg:x="103099" fg:w="16"/><text x="96.7341%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (49 samples, 0.05%)</title><rect x="96.4990%" y="533" width="0.0459%" height="15" fill="rgb(246,106,34)" fg:x="103115" fg:w="49"/><text x="96.7490%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.05%)</title><rect x="96.4990%" y="517" width="0.0459%" height="15" fill="rgb(205,1,4)" fg:x="103115" fg:w="49"/><text x="96.7490%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (48 samples, 0.04%)</title><rect x="96.5000%" y="501" width="0.0449%" height="15" fill="rgb(224,151,29)" fg:x="103116" fg:w="48"/><text x="96.7500%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (42 samples, 0.04%)</title><rect x="96.5056%" y="485" width="0.0393%" height="15" fill="rgb(251,196,0)" fg:x="103122" fg:w="42"/><text x="96.7556%" y="495.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (39 samples, 0.04%)</title><rect x="96.5084%" y="469" width="0.0365%" height="15" fill="rgb(212,127,0)" fg:x="103125" fg:w="39"/><text x="96.7584%" y="479.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (565 samples, 0.53%)</title><rect x="96.0788%" y="661" width="0.5287%" height="15" fill="rgb(236,71,53)" fg:x="102666" fg:w="565"/><text x="96.3288%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (552 samples, 0.52%)</title><rect x="96.0910%" y="645" width="0.5166%" height="15" fill="rgb(227,99,0)" fg:x="102679" fg:w="552"/><text x="96.3410%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (551 samples, 0.52%)</title><rect x="96.0919%" y="629" width="0.5156%" height="15" fill="rgb(239,89,21)" fg:x="102680" fg:w="551"/><text x="96.3419%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (546 samples, 0.51%)</title><rect x="96.0966%" y="613" width="0.5110%" height="15" fill="rgb(243,122,19)" fg:x="102685" fg:w="546"/><text x="96.3466%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (543 samples, 0.51%)</title><rect x="96.0994%" y="597" width="0.5082%" height="15" fill="rgb(229,192,45)" fg:x="102688" fg:w="543"/><text x="96.3494%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (540 samples, 0.51%)</title><rect x="96.1022%" y="581" width="0.5054%" height="15" fill="rgb(235,165,35)" fg:x="102691" fg:w="540"/><text x="96.3522%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (535 samples, 0.50%)</title><rect x="96.1069%" y="565" width="0.5007%" height="15" fill="rgb(253,202,0)" fg:x="102696" fg:w="535"/><text x="96.3569%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (140 samples, 0.13%)</title><rect x="96.4766%" y="549" width="0.1310%" height="15" fill="rgb(235,51,20)" fg:x="103091" fg:w="140"/><text x="96.7266%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (67 samples, 0.06%)</title><rect x="96.5449%" y="533" width="0.0627%" height="15" fill="rgb(218,95,46)" fg:x="103164" fg:w="67"/><text x="96.7949%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (63 samples, 0.06%)</title><rect x="96.5486%" y="517" width="0.0590%" height="15" fill="rgb(212,81,10)" fg:x="103168" fg:w="63"/><text x="96.7986%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (63 samples, 0.06%)</title><rect x="96.5486%" y="501" width="0.0590%" height="15" fill="rgb(240,59,0)" fg:x="103168" fg:w="63"/><text x="96.7986%" y="511.50"></text></g><g><title>__GI___pthread_mutex_lock (63 samples, 0.06%)</title><rect x="96.5486%" y="485" width="0.0590%" height="15" fill="rgb(212,191,42)" fg:x="103168" fg:w="63"/><text x="96.7986%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18 samples, 0.02%)</title><rect x="96.7040%" y="597" width="0.0168%" height="15" fill="rgb(233,140,3)" fg:x="103334" fg:w="18"/><text x="96.9540%" y="607.50"></text></g><g><title>core::mem::replace (18 samples, 0.02%)</title><rect x="96.7040%" y="581" width="0.0168%" height="15" fill="rgb(215,69,23)" fg:x="103334" fg:w="18"/><text x="96.9540%" y="591.50"></text></g><g><title>core::ptr::read (16 samples, 0.01%)</title><rect x="96.7058%" y="565" width="0.0150%" height="15" fill="rgb(240,202,20)" fg:x="103336" fg:w="16"/><text x="96.9558%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (35 samples, 0.03%)</title><rect x="96.6946%" y="613" width="0.0328%" height="15" fill="rgb(209,146,50)" fg:x="103324" fg:w="35"/><text x="96.9446%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (35 samples, 0.03%)</title><rect x="96.7274%" y="613" width="0.0328%" height="15" fill="rgb(253,102,54)" fg:x="103359" fg:w="35"/><text x="96.9774%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (34 samples, 0.03%)</title><rect x="96.7283%" y="597" width="0.0318%" height="15" fill="rgb(250,173,47)" fg:x="103360" fg:w="34"/><text x="96.9783%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="96.7283%" y="581" width="0.0318%" height="15" fill="rgb(232,142,7)" fg:x="103360" fg:w="34"/><text x="96.9783%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (33 samples, 0.03%)</title><rect x="96.7292%" y="565" width="0.0309%" height="15" fill="rgb(230,157,47)" fg:x="103361" fg:w="33"/><text x="96.9792%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (32 samples, 0.03%)</title><rect x="96.7302%" y="549" width="0.0299%" height="15" fill="rgb(214,177,35)" fg:x="103362" fg:w="32"/><text x="96.9802%" y="559.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (29 samples, 0.03%)</title><rect x="96.7330%" y="533" width="0.0271%" height="15" fill="rgb(234,119,46)" fg:x="103365" fg:w="29"/><text x="96.9830%" y="543.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (317 samples, 0.30%)</title><rect x="96.6703%" y="629" width="0.2967%" height="15" fill="rgb(241,180,50)" fg:x="103298" fg:w="317"/><text x="96.9203%" y="639.50"></text></g><g><title>event_listener::Inner::lock (212 samples, 0.20%)</title><rect x="96.7685%" y="613" width="0.1984%" height="15" fill="rgb(221,54,25)" fg:x="103403" fg:w="212"/><text x="97.0185%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (211 samples, 0.20%)</title><rect x="96.7695%" y="597" width="0.1975%" height="15" fill="rgb(209,157,44)" fg:x="103404" fg:w="211"/><text x="97.0195%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (211 samples, 0.20%)</title><rect x="96.7695%" y="581" width="0.1975%" height="15" fill="rgb(246,115,41)" fg:x="103404" fg:w="211"/><text x="97.0195%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (178 samples, 0.17%)</title><rect x="96.8004%" y="565" width="0.1666%" height="15" fill="rgb(229,86,1)" fg:x="103437" fg:w="178"/><text x="97.0504%" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (178 samples, 0.17%)</title><rect x="96.8004%" y="549" width="0.1666%" height="15" fill="rgb(240,108,53)" fg:x="103437" fg:w="178"/><text x="97.0504%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,023 samples, 0.96%)</title><rect x="96.0742%" y="693" width="0.9574%" height="15" fill="rgb(227,134,2)" fg:x="102661" fg:w="1023"/><text x="96.3242%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,018 samples, 0.95%)</title><rect x="96.0788%" y="677" width="0.9527%" height="15" fill="rgb(213,129,25)" fg:x="102666" fg:w="1018"/><text x="96.3288%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (453 samples, 0.42%)</title><rect x="96.6076%" y="661" width="0.4239%" height="15" fill="rgb(226,35,21)" fg:x="103231" fg:w="453"/><text x="96.8576%" y="671.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (426 samples, 0.40%)</title><rect x="96.6329%" y="645" width="0.3987%" height="15" fill="rgb(208,129,26)" fg:x="103258" fg:w="426"/><text x="96.8829%" y="655.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (69 samples, 0.06%)</title><rect x="96.9669%" y="629" width="0.0646%" height="15" fill="rgb(224,83,6)" fg:x="103615" fg:w="69"/><text x="97.2169%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (69 samples, 0.06%)</title><rect x="96.9669%" y="613" width="0.0646%" height="15" fill="rgb(227,52,39)" fg:x="103615" fg:w="69"/><text x="97.2169%" y="623.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (33 samples, 0.03%)</title><rect x="97.0006%" y="597" width="0.0309%" height="15" fill="rgb(241,30,17)" fg:x="103651" fg:w="33"/><text x="97.2506%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (32 samples, 0.03%)</title><rect x="97.0016%" y="581" width="0.0299%" height="15" fill="rgb(246,186,42)" fg:x="103652" fg:w="32"/><text x="97.2516%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (32 samples, 0.03%)</title><rect x="97.0016%" y="565" width="0.0299%" height="15" fill="rgb(221,169,15)" fg:x="103652" fg:w="32"/><text x="97.2516%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.03%)</title><rect x="97.0016%" y="549" width="0.0299%" height="15" fill="rgb(235,108,21)" fg:x="103652" fg:w="32"/><text x="97.2516%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,194 samples, 7.67%)</title><rect x="89.3838%" y="773" width="7.6683%" height="15" fill="rgb(219,148,30)" fg:x="95512" fg:w="8194"/><text x="89.6338%" y="783.50">&lt;futures_l..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,184 samples, 7.66%)</title><rect x="89.3932%" y="757" width="7.6589%" height="15" fill="rgb(220,109,5)" fg:x="95522" fg:w="8184"/><text x="89.6432%" y="767.50">&lt;core::fut..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,103 samples, 1.03%)</title><rect x="96.0199%" y="741" width="1.0322%" height="15" fill="rgb(213,203,48)" fg:x="102603" fg:w="1103"/><text x="96.2699%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,069 samples, 1.00%)</title><rect x="96.0517%" y="725" width="1.0004%" height="15" fill="rgb(244,71,33)" fg:x="102637" fg:w="1069"/><text x="96.3017%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,066 samples, 1.00%)</title><rect x="96.0545%" y="709" width="0.9976%" height="15" fill="rgb(209,23,2)" fg:x="102640" fg:w="1066"/><text x="96.3045%" y="719.50"></text></g><g><title>async_executor::Runner::new (12 samples, 0.01%)</title><rect x="97.0409%" y="693" width="0.0112%" height="15" fill="rgb(219,97,7)" fg:x="103694" fg:w="12"/><text x="97.2909%" y="703.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (12 samples, 0.01%)</title><rect x="97.0409%" y="677" width="0.0112%" height="15" fill="rgb(216,161,23)" fg:x="103694" fg:w="12"/><text x="97.2909%" y="687.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="97.0418%" y="661" width="0.0103%" height="15" fill="rgb(207,45,42)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="97.0418%" y="645" width="0.0103%" height="15" fill="rgb(241,61,4)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="97.0418%" y="629" width="0.0103%" height="15" fill="rgb(236,170,1)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="97.0418%" y="613" width="0.0103%" height="15" fill="rgb(239,72,5)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="97.0418%" y="597" width="0.0103%" height="15" fill="rgb(214,13,50)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="97.0418%" y="581" width="0.0103%" height="15" fill="rgb(224,88,9)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="97.0418%" y="565" width="0.0103%" height="15" fill="rgb(238,192,34)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="575.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="97.0418%" y="549" width="0.0103%" height="15" fill="rgb(217,203,50)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="559.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="97.0418%" y="533" width="0.0103%" height="15" fill="rgb(241,123,32)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="97.0418%" y="517" width="0.0103%" height="15" fill="rgb(248,151,39)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="527.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="97.0418%" y="501" width="0.0103%" height="15" fill="rgb(208,89,6)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.0418%" y="485" width="0.0103%" height="15" fill="rgb(254,43,26)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.0418%" y="469" width="0.0103%" height="15" fill="rgb(216,158,13)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.0418%" y="453" width="0.0103%" height="15" fill="rgb(212,47,37)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.0418%" y="437" width="0.0103%" height="15" fill="rgb(254,16,10)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.0418%" y="421" width="0.0103%" height="15" fill="rgb(223,228,16)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="97.0418%" y="405" width="0.0103%" height="15" fill="rgb(249,108,50)" fg:x="103695" fg:w="11"/><text x="97.2918%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::get (23 samples, 0.02%)</title><rect x="97.0521%" y="773" width="0.0215%" height="15" fill="rgb(208,220,5)" fg:x="103706" fg:w="23"/><text x="97.3021%" y="783.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (23 samples, 0.02%)</title><rect x="97.0521%" y="757" width="0.0215%" height="15" fill="rgb(217,89,48)" fg:x="103706" fg:w="23"/><text x="97.3021%" y="767.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (23 samples, 0.02%)</title><rect x="97.0521%" y="741" width="0.0215%" height="15" fill="rgb(212,113,41)" fg:x="103706" fg:w="23"/><text x="97.3021%" y="751.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (23 samples, 0.02%)</title><rect x="97.0521%" y="725" width="0.0215%" height="15" fill="rgb(231,127,5)" fg:x="103706" fg:w="23"/><text x="97.3021%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (23 samples, 0.02%)</title><rect x="97.0521%" y="709" width="0.0215%" height="15" fill="rgb(217,141,17)" fg:x="103706" fg:w="23"/><text x="97.3021%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="97.0615%" y="693" width="0.0122%" height="15" fill="rgb(245,125,54)" fg:x="103716" fg:w="13"/><text x="97.3115%" y="703.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (12 samples, 0.01%)</title><rect x="97.0624%" y="677" width="0.0112%" height="15" fill="rgb(248,125,3)" fg:x="103717" fg:w="12"/><text x="97.3124%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="97.0624%" y="661" width="0.0112%" height="15" fill="rgb(236,119,51)" fg:x="103717" fg:w="12"/><text x="97.3124%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="97.0624%" y="645" width="0.0112%" height="15" fill="rgb(239,99,8)" fg:x="103717" fg:w="12"/><text x="97.3124%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (180 samples, 0.17%)</title><rect x="97.0736%" y="773" width="0.1685%" height="15" fill="rgb(224,228,4)" fg:x="103729" fg:w="180"/><text x="97.3236%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (180 samples, 0.17%)</title><rect x="97.0736%" y="757" width="0.1685%" height="15" fill="rgb(220,131,45)" fg:x="103729" fg:w="180"/><text x="97.3236%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (177 samples, 0.17%)</title><rect x="97.0764%" y="741" width="0.1656%" height="15" fill="rgb(215,62,5)" fg:x="103732" fg:w="177"/><text x="97.3264%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (174 samples, 0.16%)</title><rect x="97.0792%" y="725" width="0.1628%" height="15" fill="rgb(253,12,24)" fg:x="103735" fg:w="174"/><text x="97.3292%" y="735.50"></text></g><g><title>__GI___pthread_mutex_trylock (174 samples, 0.16%)</title><rect x="97.0792%" y="709" width="0.1628%" height="15" fill="rgb(248,120,50)" fg:x="103735" fg:w="174"/><text x="97.3292%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (28 samples, 0.03%)</title><rect x="97.2954%" y="581" width="0.0262%" height="15" fill="rgb(245,194,10)" fg:x="103966" fg:w="28"/><text x="97.5454%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (27 samples, 0.03%)</title><rect x="97.2964%" y="565" width="0.0253%" height="15" fill="rgb(241,149,38)" fg:x="103967" fg:w="27"/><text x="97.5464%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (27 samples, 0.03%)</title><rect x="97.2964%" y="549" width="0.0253%" height="15" fill="rgb(219,215,7)" fg:x="103967" fg:w="27"/><text x="97.5464%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (27 samples, 0.03%)</title><rect x="97.2964%" y="533" width="0.0253%" height="15" fill="rgb(208,120,31)" fg:x="103967" fg:w="27"/><text x="97.5464%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (27 samples, 0.03%)</title><rect x="97.2964%" y="517" width="0.0253%" height="15" fill="rgb(244,30,8)" fg:x="103967" fg:w="27"/><text x="97.5464%" y="527.50"></text></g><g><title>rust_dealloc (29 samples, 0.03%)</title><rect x="97.2954%" y="597" width="0.0271%" height="15" fill="rgb(238,35,44)" fg:x="103966" fg:w="29"/><text x="97.5454%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (36 samples, 0.03%)</title><rect x="97.2926%" y="693" width="0.0337%" height="15" fill="rgb(243,218,37)" fg:x="103963" fg:w="36"/><text x="97.5426%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (34 samples, 0.03%)</title><rect x="97.2945%" y="677" width="0.0318%" height="15" fill="rgb(218,169,10)" fg:x="103965" fg:w="34"/><text x="97.5445%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.03%)</title><rect x="97.2945%" y="661" width="0.0318%" height="15" fill="rgb(221,144,10)" fg:x="103965" fg:w="34"/><text x="97.5445%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.03%)</title><rect x="97.2945%" y="645" width="0.0318%" height="15" fill="rgb(226,41,38)" fg:x="103965" fg:w="34"/><text x="97.5445%" y="655.50"></text></g><g><title>__rg_dealloc (34 samples, 0.03%)</title><rect x="97.2945%" y="629" width="0.0318%" height="15" fill="rgb(228,3,1)" fg:x="103965" fg:w="34"/><text x="97.5445%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (33 samples, 0.03%)</title><rect x="97.2954%" y="613" width="0.0309%" height="15" fill="rgb(209,129,12)" fg:x="103966" fg:w="33"/><text x="97.5454%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="97.2870%" y="741" width="0.0449%" height="15" fill="rgb(213,136,33)" fg:x="103957" fg:w="48"/><text x="97.5370%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (46 samples, 0.04%)</title><rect x="97.2889%" y="725" width="0.0430%" height="15" fill="rgb(209,181,29)" fg:x="103959" fg:w="46"/><text x="97.5389%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (42 samples, 0.04%)</title><rect x="97.2926%" y="709" width="0.0393%" height="15" fill="rgb(234,173,18)" fg:x="103963" fg:w="42"/><text x="97.5426%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (15 samples, 0.01%)</title><rect x="97.3506%" y="709" width="0.0140%" height="15" fill="rgb(227,73,47)" fg:x="104025" fg:w="15"/><text x="97.6006%" y="719.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (11 samples, 0.01%)</title><rect x="97.3544%" y="693" width="0.0103%" height="15" fill="rgb(234,9,34)" fg:x="104029" fg:w="11"/><text x="97.6044%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="97.3544%" y="677" width="0.0103%" height="15" fill="rgb(235,172,15)" fg:x="104029" fg:w="11"/><text x="97.6044%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (17 samples, 0.02%)</title><rect x="97.3665%" y="677" width="0.0159%" height="15" fill="rgb(245,61,2)" fg:x="104042" fg:w="17"/><text x="97.6165%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (25 samples, 0.02%)</title><rect x="97.3656%" y="709" width="0.0234%" height="15" fill="rgb(238,39,47)" fg:x="104041" fg:w="25"/><text x="97.6156%" y="719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (25 samples, 0.02%)</title><rect x="97.3656%" y="693" width="0.0234%" height="15" fill="rgb(234,37,24)" fg:x="104041" fg:w="25"/><text x="97.6156%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="97.4077%" y="341" width="0.0140%" height="15" fill="rgb(248,223,24)" fg:x="104086" fg:w="15"/><text x="97.6577%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="97.4087%" y="325" width="0.0131%" height="15" fill="rgb(223,12,15)" fg:x="104087" fg:w="14"/><text x="97.6587%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (33 samples, 0.03%)</title><rect x="97.4021%" y="389" width="0.0309%" height="15" fill="rgb(249,6,3)" fg:x="104080" fg:w="33"/><text x="97.6521%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (33 samples, 0.03%)</title><rect x="97.4021%" y="373" width="0.0309%" height="15" fill="rgb(237,105,33)" fg:x="104080" fg:w="33"/><text x="97.6521%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="97.4040%" y="357" width="0.0290%" height="15" fill="rgb(252,208,35)" fg:x="104082" fg:w="31"/><text x="97.6540%" y="367.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="97.4218%" y="341" width="0.0112%" height="15" fill="rgb(215,181,35)" fg:x="104101" fg:w="12"/><text x="97.6718%" y="351.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="97.4218%" y="325" width="0.0112%" height="15" fill="rgb(246,212,3)" fg:x="104101" fg:w="12"/><text x="97.6718%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (43 samples, 0.04%)</title><rect x="97.4021%" y="405" width="0.0402%" height="15" fill="rgb(247,156,24)" fg:x="104080" fg:w="43"/><text x="97.6521%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (64 samples, 0.06%)</title><rect x="97.3928%" y="421" width="0.0599%" height="15" fill="rgb(248,9,31)" fg:x="104070" fg:w="64"/><text x="97.6428%" y="431.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (33 samples, 0.03%)</title><rect x="97.4723%" y="405" width="0.0309%" height="15" fill="rgb(234,26,45)" fg:x="104155" fg:w="33"/><text x="97.7223%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (400 samples, 0.37%)</title><rect x="97.3918%" y="453" width="0.3743%" height="15" fill="rgb(249,11,32)" fg:x="104069" fg:w="400"/><text x="97.6418%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (400 samples, 0.37%)</title><rect x="97.3918%" y="437" width="0.3743%" height="15" fill="rgb(249,162,33)" fg:x="104069" fg:w="400"/><text x="97.6418%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (335 samples, 0.31%)</title><rect x="97.4526%" y="421" width="0.3135%" height="15" fill="rgb(232,4,32)" fg:x="104134" fg:w="335"/><text x="97.7026%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (281 samples, 0.26%)</title><rect x="97.5032%" y="405" width="0.2630%" height="15" fill="rgb(212,5,45)" fg:x="104188" fg:w="281"/><text x="97.7532%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (281 samples, 0.26%)</title><rect x="97.5032%" y="389" width="0.2630%" height="15" fill="rgb(227,95,13)" fg:x="104188" fg:w="281"/><text x="97.7532%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (281 samples, 0.26%)</title><rect x="97.5032%" y="373" width="0.2630%" height="15" fill="rgb(223,205,10)" fg:x="104188" fg:w="281"/><text x="97.7532%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (470 samples, 0.44%)</title><rect x="97.3890%" y="501" width="0.4398%" height="15" fill="rgb(222,178,8)" fg:x="104066" fg:w="470"/><text x="97.6390%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (470 samples, 0.44%)</title><rect x="97.3890%" y="485" width="0.4398%" height="15" fill="rgb(216,13,22)" fg:x="104066" fg:w="470"/><text x="97.6390%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (470 samples, 0.44%)</title><rect x="97.3890%" y="469" width="0.4398%" height="15" fill="rgb(240,167,12)" fg:x="104066" fg:w="470"/><text x="97.6390%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (53 samples, 0.05%)</title><rect x="97.7793%" y="453" width="0.0496%" height="15" fill="rgb(235,68,35)" fg:x="104483" fg:w="53"/><text x="98.0293%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (53 samples, 0.05%)</title><rect x="97.7793%" y="437" width="0.0496%" height="15" fill="rgb(253,40,27)" fg:x="104483" fg:w="53"/><text x="98.0293%" y="447.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (471 samples, 0.44%)</title><rect x="97.3890%" y="693" width="0.4408%" height="15" fill="rgb(214,19,28)" fg:x="104066" fg:w="471"/><text x="97.6390%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (471 samples, 0.44%)</title><rect x="97.3890%" y="677" width="0.4408%" height="15" fill="rgb(210,167,45)" fg:x="104066" fg:w="471"/><text x="97.6390%" y="687.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (471 samples, 0.44%)</title><rect x="97.3890%" y="661" width="0.4408%" height="15" fill="rgb(232,97,40)" fg:x="104066" fg:w="471"/><text x="97.6390%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (471 samples, 0.44%)</title><rect x="97.3890%" y="645" width="0.4408%" height="15" fill="rgb(250,35,23)" fg:x="104066" fg:w="471"/><text x="97.6390%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (471 samples, 0.44%)</title><rect x="97.3890%" y="629" width="0.4408%" height="15" fill="rgb(248,47,53)" fg:x="104066" fg:w="471"/><text x="97.6390%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (471 samples, 0.44%)</title><rect x="97.3890%" y="613" width="0.4408%" height="15" fill="rgb(226,58,50)" fg:x="104066" fg:w="471"/><text x="97.6390%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (471 samples, 0.44%)</title><rect x="97.3890%" y="597" width="0.4408%" height="15" fill="rgb(217,105,26)" fg:x="104066" fg:w="471"/><text x="97.6390%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (471 samples, 0.44%)</title><rect x="97.3890%" y="581" width="0.4408%" height="15" fill="rgb(208,64,1)" fg:x="104066" fg:w="471"/><text x="97.6390%" y="591.50"></text></g><g><title>alloc::alloc::alloc (471 samples, 0.44%)</title><rect x="97.3890%" y="565" width="0.4408%" height="15" fill="rgb(214,80,1)" fg:x="104066" fg:w="471"/><text x="97.6390%" y="575.50"></text></g><g><title>__rg_alloc (471 samples, 0.44%)</title><rect x="97.3890%" y="549" width="0.4408%" height="15" fill="rgb(206,175,26)" fg:x="104066" fg:w="471"/><text x="97.6390%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (471 samples, 0.44%)</title><rect x="97.3890%" y="533" width="0.4408%" height="15" fill="rgb(235,156,37)" fg:x="104066" fg:w="471"/><text x="97.6390%" y="543.50"></text></g><g><title>rust_alloc (471 samples, 0.44%)</title><rect x="97.3890%" y="517" width="0.4408%" height="15" fill="rgb(213,100,9)" fg:x="104066" fg:w="471"/><text x="97.6390%" y="527.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (472 samples, 0.44%)</title><rect x="97.3890%" y="709" width="0.4417%" height="15" fill="rgb(241,15,13)" fg:x="104066" fg:w="472"/><text x="97.6390%" y="719.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (517 samples, 0.48%)</title><rect x="97.3478%" y="725" width="0.4838%" height="15" fill="rgb(205,97,43)" fg:x="104022" fg:w="517"/><text x="97.5978%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (527 samples, 0.49%)</title><rect x="97.3403%" y="741" width="0.4932%" height="15" fill="rgb(216,106,32)" fg:x="104014" fg:w="527"/><text x="97.5903%" y="751.50"></text></g><g><title>concurrent_queue::full_fence (22 samples, 0.02%)</title><rect x="97.8513%" y="693" width="0.0206%" height="15" fill="rgb(226,200,8)" fg:x="104560" fg:w="22"/><text x="98.1013%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (22 samples, 0.02%)</title><rect x="97.8513%" y="677" width="0.0206%" height="15" fill="rgb(244,54,29)" fg:x="104560" fg:w="22"/><text x="98.1013%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (22 samples, 0.02%)</title><rect x="97.8513%" y="661" width="0.0206%" height="15" fill="rgb(252,169,12)" fg:x="104560" fg:w="22"/><text x="98.1013%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="97.8513%" y="645" width="0.0206%" height="15" fill="rgb(231,199,11)" fg:x="104560" fg:w="22"/><text x="98.1013%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (44 samples, 0.04%)</title><rect x="97.8335%" y="741" width="0.0412%" height="15" fill="rgb(233,191,18)" fg:x="104541" fg:w="44"/><text x="98.0835%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (36 samples, 0.03%)</title><rect x="97.8410%" y="725" width="0.0337%" height="15" fill="rgb(215,83,47)" fg:x="104549" fg:w="36"/><text x="98.0910%" y="735.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (32 samples, 0.03%)</title><rect x="97.8448%" y="709" width="0.0299%" height="15" fill="rgb(251,67,19)" fg:x="104553" fg:w="32"/><text x="98.0948%" y="719.50"></text></g><g><title>core::mem::drop (84 samples, 0.08%)</title><rect x="97.8756%" y="741" width="0.0786%" height="15" fill="rgb(240,7,20)" fg:x="104586" fg:w="84"/><text x="98.1256%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (84 samples, 0.08%)</title><rect x="97.8756%" y="725" width="0.0786%" height="15" fill="rgb(210,150,26)" fg:x="104586" fg:w="84"/><text x="98.1256%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.08%)</title><rect x="97.8756%" y="709" width="0.0786%" height="15" fill="rgb(228,75,42)" fg:x="104586" fg:w="84"/><text x="98.1256%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (82 samples, 0.08%)</title><rect x="97.8775%" y="693" width="0.0767%" height="15" fill="rgb(237,134,48)" fg:x="104588" fg:w="82"/><text x="98.1275%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (82 samples, 0.08%)</title><rect x="97.8775%" y="677" width="0.0767%" height="15" fill="rgb(205,80,50)" fg:x="104588" fg:w="82"/><text x="98.1275%" y="687.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (79 samples, 0.07%)</title><rect x="97.8803%" y="661" width="0.0739%" height="15" fill="rgb(217,74,48)" fg:x="104591" fg:w="79"/><text x="98.1303%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.02%)</title><rect x="97.9589%" y="741" width="0.0178%" height="15" fill="rgb(205,82,50)" fg:x="104675" fg:w="19"/><text x="98.2089%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (16 samples, 0.01%)</title><rect x="97.9617%" y="725" width="0.0150%" height="15" fill="rgb(228,1,33)" fg:x="104678" fg:w="16"/><text x="98.2117%" y="735.50"></text></g><g><title>std::time::Instant::saturating_duration_since (15 samples, 0.01%)</title><rect x="97.9627%" y="709" width="0.0140%" height="15" fill="rgb(214,50,23)" fg:x="104679" fg:w="15"/><text x="98.2127%" y="719.50"></text></g><g><title>std::time::Instant::checked_duration_since (15 samples, 0.01%)</title><rect x="97.9627%" y="693" width="0.0140%" height="15" fill="rgb(210,62,9)" fg:x="104679" fg:w="15"/><text x="98.2127%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (15 samples, 0.01%)</title><rect x="97.9627%" y="677" width="0.0140%" height="15" fill="rgb(210,104,37)" fg:x="104679" fg:w="15"/><text x="98.2127%" y="687.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (11 samples, 0.01%)</title><rect x="97.9664%" y="661" width="0.0103%" height="15" fill="rgb(232,104,43)" fg:x="104683" fg:w="11"/><text x="98.2164%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.03%)</title><rect x="97.9786%" y="741" width="0.0290%" height="15" fill="rgb(244,52,6)" fg:x="104696" fg:w="31"/><text x="98.2286%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (31 samples, 0.03%)</title><rect x="97.9786%" y="725" width="0.0290%" height="15" fill="rgb(211,174,52)" fg:x="104696" fg:w="31"/><text x="98.2286%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (31 samples, 0.03%)</title><rect x="97.9786%" y="709" width="0.0290%" height="15" fill="rgb(229,48,4)" fg:x="104696" fg:w="31"/><text x="98.2286%" y="719.50"></text></g><g><title>__GI___pthread_mutex_lock (31 samples, 0.03%)</title><rect x="97.9786%" y="693" width="0.0290%" height="15" fill="rgb(205,155,16)" fg:x="104696" fg:w="31"/><text x="98.2286%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (843 samples, 0.79%)</title><rect x="97.2720%" y="757" width="0.7889%" height="15" fill="rgb(211,141,53)" fg:x="103941" fg:w="843"/><text x="97.5220%" y="767.50"></text></g><g><title>std::time::Instant::now (57 samples, 0.05%)</title><rect x="98.0076%" y="741" width="0.0533%" height="15" fill="rgb(240,148,11)" fg:x="104727" fg:w="57"/><text x="98.2576%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (57 samples, 0.05%)</title><rect x="98.0076%" y="725" width="0.0533%" height="15" fill="rgb(214,45,23)" fg:x="104727" fg:w="57"/><text x="98.2576%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (57 samples, 0.05%)</title><rect x="98.0076%" y="709" width="0.0533%" height="15" fill="rgb(248,74,26)" fg:x="104727" fg:w="57"/><text x="98.2576%" y="719.50"></text></g><g><title>__clock_gettime_2 (53 samples, 0.05%)</title><rect x="98.0113%" y="693" width="0.0496%" height="15" fill="rgb(218,121,16)" fg:x="104731" fg:w="53"/><text x="98.2613%" y="703.50"></text></g><g><title>__vdso_clock_gettime (48 samples, 0.04%)</title><rect x="98.0160%" y="677" width="0.0449%" height="15" fill="rgb(218,10,47)" fg:x="104736" fg:w="48"/><text x="98.2660%" y="687.50"></text></g><g><title>[[vdso]] (33 samples, 0.03%)</title><rect x="98.0301%" y="661" width="0.0309%" height="15" fill="rgb(227,99,14)" fg:x="104751" fg:w="33"/><text x="98.2801%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.01%)</title><rect x="98.0619%" y="757" width="0.0150%" height="15" fill="rgb(229,83,46)" fg:x="104785" fg:w="16"/><text x="98.3119%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.01%)</title><rect x="98.0628%" y="741" width="0.0140%" height="15" fill="rgb(228,25,1)" fg:x="104786" fg:w="15"/><text x="98.3128%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (42 samples, 0.04%)</title><rect x="98.0806%" y="741" width="0.0393%" height="15" fill="rgb(252,190,15)" fg:x="104805" fg:w="42"/><text x="98.3306%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="98.0806%" y="725" width="0.0393%" height="15" fill="rgb(213,103,51)" fg:x="104805" fg:w="42"/><text x="98.3306%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (41 samples, 0.04%)</title><rect x="98.0815%" y="709" width="0.0384%" height="15" fill="rgb(220,38,44)" fg:x="104806" fg:w="41"/><text x="98.3315%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (41 samples, 0.04%)</title><rect x="98.0815%" y="693" width="0.0384%" height="15" fill="rgb(210,45,26)" fg:x="104806" fg:w="41"/><text x="98.3315%" y="703.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (41 samples, 0.04%)</title><rect x="98.0815%" y="677" width="0.0384%" height="15" fill="rgb(205,95,48)" fg:x="104806" fg:w="41"/><text x="98.3315%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (38 samples, 0.04%)</title><rect x="98.1199%" y="741" width="0.0356%" height="15" fill="rgb(225,179,37)" fg:x="104847" fg:w="38"/><text x="98.3699%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (38 samples, 0.04%)</title><rect x="98.1199%" y="725" width="0.0356%" height="15" fill="rgb(230,209,3)" fg:x="104847" fg:w="38"/><text x="98.3699%" y="735.50"></text></g><g><title>__libc_read (65 samples, 0.06%)</title><rect x="98.1732%" y="725" width="0.0608%" height="15" fill="rgb(248,12,46)" fg:x="104904" fg:w="65"/><text x="98.4232%" y="735.50"></text></g><g><title>__pthread_enable_asynccancel (35 samples, 0.03%)</title><rect x="98.2013%" y="709" width="0.0328%" height="15" fill="rgb(234,18,0)" fg:x="104934" fg:w="35"/><text x="98.4513%" y="719.50"></text></g><g><title>__libc_disable_asynccancel (18 samples, 0.02%)</title><rect x="98.2940%" y="709" width="0.0168%" height="15" fill="rgb(238,197,14)" fg:x="105033" fg:w="18"/><text x="98.5440%" y="719.50"></text></g><g><title>epoll_wait (95 samples, 0.09%)</title><rect x="98.2341%" y="725" width="0.0889%" height="15" fill="rgb(251,162,48)" fg:x="104969" fg:w="95"/><text x="98.4841%" y="735.50"></text></g><g><title>__libc_enable_asynccancel (13 samples, 0.01%)</title><rect x="98.3108%" y="709" width="0.0122%" height="15" fill="rgb(237,73,42)" fg:x="105051" fg:w="13"/><text x="98.5608%" y="719.50"></text></g><g><title>__GI_epoll_ctl (34 samples, 0.03%)</title><rect x="98.3286%" y="693" width="0.0318%" height="15" fill="rgb(211,108,8)" fg:x="105070" fg:w="34"/><text x="98.5786%" y="703.50"></text></g><g><title>polling::epoll::Poller::ctl (42 samples, 0.04%)</title><rect x="98.3277%" y="709" width="0.0393%" height="15" fill="rgb(213,45,22)" fg:x="105069" fg:w="42"/><text x="98.5777%" y="719.50"></text></g><g><title>polling::epoll::Poller::modify (49 samples, 0.05%)</title><rect x="98.3239%" y="725" width="0.0459%" height="15" fill="rgb(252,154,5)" fg:x="105065" fg:w="49"/><text x="98.5739%" y="735.50"></text></g><g><title>polling::epoll::Poller::wait (244 samples, 0.23%)</title><rect x="98.1555%" y="741" width="0.2283%" height="15" fill="rgb(221,79,52)" fg:x="104885" fg:w="244"/><text x="98.4055%" y="751.50"></text></g><g><title>syscall (14 samples, 0.01%)</title><rect x="98.3707%" y="725" width="0.0131%" height="15" fill="rgb(229,220,36)" fg:x="105115" fg:w="14"/><text x="98.6207%" y="735.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,250 samples, 1.17%)</title><rect x="97.2421%" y="773" width="1.1698%" height="15" fill="rgb(211,17,16)" fg:x="103909" fg:w="1250"/><text x="97.4921%" y="783.50"></text></g><g><title>polling::Poller::wait (358 samples, 0.34%)</title><rect x="98.0769%" y="757" width="0.3350%" height="15" fill="rgb(222,55,31)" fg:x="104801" fg:w="358"/><text x="98.3269%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (30 samples, 0.03%)</title><rect x="98.3838%" y="741" width="0.0281%" height="15" fill="rgb(221,221,31)" fg:x="105129" fg:w="30"/><text x="98.6338%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (29 samples, 0.03%)</title><rect x="98.3847%" y="725" width="0.0271%" height="15" fill="rgb(227,168,26)" fg:x="105130" fg:w="29"/><text x="98.6347%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (28 samples, 0.03%)</title><rect x="98.3857%" y="709" width="0.0262%" height="15" fill="rgb(224,139,9)" fg:x="105131" fg:w="28"/><text x="98.6357%" y="719.50"></text></g><g><title>__GI___pthread_mutex_trylock (28 samples, 0.03%)</title><rect x="98.3857%" y="693" width="0.0262%" height="15" fill="rgb(254,172,0)" fg:x="105131" fg:w="28"/><text x="98.6357%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="98.4119%" y="773" width="0.0159%" height="15" fill="rgb(235,203,1)" fg:x="105159" fg:w="17"/><text x="98.6619%" y="783.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="98.4119%" y="757" width="0.0159%" height="15" fill="rgb(216,205,24)" fg:x="105159" fg:w="17"/><text x="98.6619%" y="767.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (17 samples, 0.02%)</title><rect x="98.4119%" y="741" width="0.0159%" height="15" fill="rgb(233,24,6)" fg:x="105159" fg:w="17"/><text x="98.6619%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (16 samples, 0.01%)</title><rect x="98.4128%" y="725" width="0.0150%" height="15" fill="rgb(244,110,9)" fg:x="105160" fg:w="16"/><text x="98.6628%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_store (16 samples, 0.01%)</title><rect x="98.4128%" y="709" width="0.0150%" height="15" fill="rgb(239,222,42)" fg:x="105160" fg:w="16"/><text x="98.6628%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::reactor::ReactorLock&gt; (21 samples, 0.02%)</title><rect x="98.4278%" y="773" width="0.0197%" height="15" fill="rgb(218,145,13)" fg:x="105176" fg:w="21"/><text x="98.6778%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="98.4278%" y="757" width="0.0197%" height="15" fill="rgb(207,69,11)" fg:x="105176" fg:w="21"/><text x="98.6778%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="98.4278%" y="741" width="0.0197%" height="15" fill="rgb(220,223,22)" fg:x="105176" fg:w="21"/><text x="98.6778%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (21 samples, 0.02%)</title><rect x="98.4278%" y="725" width="0.0197%" height="15" fill="rgb(245,102,5)" fg:x="105176" fg:w="21"/><text x="98.6778%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (21 samples, 0.02%)</title><rect x="98.4278%" y="709" width="0.0197%" height="15" fill="rgb(211,148,2)" fg:x="105176" fg:w="21"/><text x="98.6778%" y="719.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="98.4287%" y="693" width="0.0187%" height="15" fill="rgb(241,13,44)" fg:x="105177" fg:w="20"/><text x="98.6787%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (14 samples, 0.01%)</title><rect x="98.4493%" y="773" width="0.0131%" height="15" fill="rgb(219,137,21)" fg:x="105199" fg:w="14"/><text x="98.6993%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_store (14 samples, 0.01%)</title><rect x="98.4493%" y="757" width="0.0131%" height="15" fill="rgb(242,206,5)" fg:x="105199" fg:w="14"/><text x="98.6993%" y="767.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (53 samples, 0.05%)</title><rect x="98.4765%" y="741" width="0.0496%" height="15" fill="rgb(217,114,22)" fg:x="105228" fg:w="53"/><text x="98.7265%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (66 samples, 0.06%)</title><rect x="98.5270%" y="741" width="0.0618%" height="15" fill="rgb(253,206,42)" fg:x="105282" fg:w="66"/><text x="98.7770%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (66 samples, 0.06%)</title><rect x="98.5270%" y="725" width="0.0618%" height="15" fill="rgb(236,102,18)" fg:x="105282" fg:w="66"/><text x="98.7770%" y="735.50"></text></g><g><title>__condvar_dec_grefs (162 samples, 0.15%)</title><rect x="98.7245%" y="677" width="0.1516%" height="15" fill="rgb(208,59,49)" fg:x="105493" fg:w="162"/><text x="98.9745%" y="687.50"></text></g><g><title>__pthread_disable_asynccancel (49 samples, 0.05%)</title><rect x="99.0211%" y="661" width="0.0459%" height="15" fill="rgb(215,194,28)" fg:x="105810" fg:w="49"/><text x="99.2711%" y="671.50"></text></g><g><title>__futex_abstimed_wait_common64 (226 samples, 0.21%)</title><rect x="98.8761%" y="677" width="0.2115%" height="15" fill="rgb(243,207,11)" fg:x="105655" fg:w="226"/><text x="99.1261%" y="687.50"></text></g><g><title>__pthread_enable_asynccancel (22 samples, 0.02%)</title><rect x="99.0670%" y="661" width="0.0206%" height="15" fill="rgb(254,179,35)" fg:x="105859" fg:w="22"/><text x="99.3170%" y="671.50"></text></g><g><title>__pthread_mutex_cond_lock (30 samples, 0.03%)</title><rect x="99.0969%" y="677" width="0.0281%" height="15" fill="rgb(235,97,3)" fg:x="105891" fg:w="30"/><text x="99.3469%" y="687.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (585 samples, 0.55%)</title><rect x="98.5962%" y="709" width="0.5475%" height="15" fill="rgb(215,155,33)" fg:x="105356" fg:w="585"/><text x="98.8462%" y="719.50"></text></g><g><title>__pthread_cond_wait (585 samples, 0.55%)</title><rect x="98.5962%" y="693" width="0.5475%" height="15" fill="rgb(223,128,12)" fg:x="105356" fg:w="585"/><text x="98.8462%" y="703.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="99.1250%" y="677" width="0.0187%" height="15" fill="rgb(208,157,18)" fg:x="105921" fg:w="20"/><text x="99.3750%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (22 samples, 0.02%)</title><rect x="99.1446%" y="693" width="0.0206%" height="15" fill="rgb(249,70,54)" fg:x="105942" fg:w="22"/><text x="99.3946%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="99.1446%" y="677" width="0.0206%" height="15" fill="rgb(244,118,24)" fg:x="105942" fg:w="22"/><text x="99.3946%" y="687.50"></text></g><g><title>std::sync::condvar::Condvar::wait (617 samples, 0.58%)</title><rect x="98.5888%" y="741" width="0.5774%" height="15" fill="rgb(211,54,0)" fg:x="105348" fg:w="617"/><text x="98.8388%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (609 samples, 0.57%)</title><rect x="98.5962%" y="725" width="0.5699%" height="15" fill="rgb(245,137,45)" fg:x="105356" fg:w="609"/><text x="98.8462%" y="735.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (24 samples, 0.02%)</title><rect x="99.1437%" y="709" width="0.0225%" height="15" fill="rgb(232,154,31)" fg:x="105941" fg:w="24"/><text x="99.3937%" y="719.50"></text></g><g><title>parking::Parker::park (771 samples, 0.72%)</title><rect x="98.4699%" y="773" width="0.7215%" height="15" fill="rgb(253,6,39)" fg:x="105221" fg:w="771"/><text x="98.7199%" y="783.50"></text></g><g><title>parking::Inner::park (769 samples, 0.72%)</title><rect x="98.4718%" y="757" width="0.7197%" height="15" fill="rgb(234,183,24)" fg:x="105223" fg:w="769"/><text x="98.7218%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.03%)</title><rect x="99.1662%" y="741" width="0.0253%" height="15" fill="rgb(252,84,40)" fg:x="105965" fg:w="27"/><text x="99.4162%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (25 samples, 0.02%)</title><rect x="99.1680%" y="725" width="0.0234%" height="15" fill="rgb(224,65,2)" fg:x="105967" fg:w="25"/><text x="99.4180%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (24 samples, 0.02%)</title><rect x="99.1690%" y="709" width="0.0225%" height="15" fill="rgb(229,38,24)" fg:x="105968" fg:w="24"/><text x="99.4190%" y="719.50"></text></g><g><title>__GI___pthread_mutex_lock (24 samples, 0.02%)</title><rect x="99.1690%" y="693" width="0.0225%" height="15" fill="rgb(218,131,50)" fg:x="105968" fg:w="24"/><text x="99.4190%" y="703.50"></text></g><g><title>parking::Parker::park_timeout (155 samples, 0.15%)</title><rect x="99.1914%" y="773" width="0.1451%" height="15" fill="rgb(233,106,18)" fg:x="105992" fg:w="155"/><text x="99.4414%" y="783.50"></text></g><g><title>parking::Inner::park (148 samples, 0.14%)</title><rect x="99.1980%" y="757" width="0.1385%" height="15" fill="rgb(220,216,11)" fg:x="105999" fg:w="148"/><text x="99.4480%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (140 samples, 0.13%)</title><rect x="99.2055%" y="741" width="0.1310%" height="15" fill="rgb(251,100,45)" fg:x="106007" fg:w="140"/><text x="99.4555%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (140 samples, 0.13%)</title><rect x="99.2055%" y="725" width="0.1310%" height="15" fill="rgb(235,143,32)" fg:x="106007" fg:w="140"/><text x="99.4555%" y="735.50"></text></g><g><title>parking::pair (15 samples, 0.01%)</title><rect x="99.3365%" y="773" width="0.0140%" height="15" fill="rgb(248,124,34)" fg:x="106147" fg:w="15"/><text x="99.5865%" y="783.50"></text></g><g><title>parking::Parker::new (15 samples, 0.01%)</title><rect x="99.3365%" y="757" width="0.0140%" height="15" fill="rgb(225,221,4)" fg:x="106147" fg:w="15"/><text x="99.5865%" y="767.50"></text></g><g><title>std::panic::catch_unwind (10,727 samples, 10.04%)</title><rect x="89.3539%" y="1061" width="10.0387%" height="15" fill="rgb(242,27,43)" fg:x="95480" fg:w="10727"/><text x="89.6039%" y="1071.50">std::panic::cat..</text></g><g><title>std::panicking::try (10,727 samples, 10.04%)</title><rect x="89.3539%" y="1045" width="10.0387%" height="15" fill="rgb(227,54,8)" fg:x="95480" fg:w="10727"/><text x="89.6039%" y="1055.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (10,727 samples, 10.04%)</title><rect x="89.3539%" y="1029" width="10.0387%" height="15" fill="rgb(253,139,49)" fg:x="95480" fg:w="10727"/><text x="89.6039%" y="1039.50">std::panicking:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10,727 samples, 10.04%)</title><rect x="89.3539%" y="1013" width="10.0387%" height="15" fill="rgb(231,26,43)" fg:x="95480" fg:w="10727"/><text x="89.6039%" y="1023.50">&lt;core::panic::u..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (10,727 samples, 10.04%)</title><rect x="89.3539%" y="997" width="10.0387%" height="15" fill="rgb(207,121,39)" fg:x="95480" fg:w="10727"/><text x="89.6039%" y="1007.50">std::thread::Bu..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10,727 samples, 10.04%)</title><rect x="89.3539%" y="981" width="10.0387%" height="15" fill="rgb(223,101,35)" fg:x="95480" fg:w="10727"/><text x="89.6039%" y="991.50">std::sys_common..</text></g><g><title>core::ops::function::FnOnce::call_once (10,727 samples, 10.04%)</title><rect x="89.3539%" y="965" width="10.0387%" height="15" fill="rgb(232,87,23)" fg:x="95480" fg:w="10727"/><text x="89.6039%" y="975.50">core::ops::func..</text></g><g><title>async_global_executor::threading::thread_main_loop (10,727 samples, 10.04%)</title><rect x="89.3539%" y="949" width="10.0387%" height="15" fill="rgb(225,180,29)" fg:x="95480" fg:w="10727"/><text x="89.6039%" y="959.50">async_global_ex..</text></g><g><title>std::panic::catch_unwind (10,719 samples, 10.03%)</title><rect x="89.3614%" y="933" width="10.0313%" height="15" fill="rgb(225,25,17)" fg:x="95488" fg:w="10719"/><text x="89.6114%" y="943.50">std::panic::cat..</text></g><g><title>std::panicking::try (10,719 samples, 10.03%)</title><rect x="89.3614%" y="917" width="10.0313%" height="15" fill="rgb(223,8,52)" fg:x="95488" fg:w="10719"/><text x="89.6114%" y="927.50">std::panicking:..</text></g><g><title>std::panicking::try::do_call (10,719 samples, 10.03%)</title><rect x="89.3614%" y="901" width="10.0313%" height="15" fill="rgb(246,42,21)" fg:x="95488" fg:w="10719"/><text x="89.6114%" y="911.50">std::panicking:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (10,719 samples, 10.03%)</title><rect x="89.3614%" y="885" width="10.0313%" height="15" fill="rgb(205,64,43)" fg:x="95488" fg:w="10719"/><text x="89.6114%" y="895.50">async_global_ex..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,719 samples, 10.03%)</title><rect x="89.3614%" y="869" width="10.0313%" height="15" fill="rgb(221,160,13)" fg:x="95488" fg:w="10719"/><text x="89.6114%" y="879.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,719 samples, 10.03%)</title><rect x="89.3614%" y="853" width="10.0313%" height="15" fill="rgb(239,58,35)" fg:x="95488" fg:w="10719"/><text x="89.6114%" y="863.50">std::thread::lo..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (10,719 samples, 10.03%)</title><rect x="89.3614%" y="837" width="10.0313%" height="15" fill="rgb(251,26,40)" fg:x="95488" fg:w="10719"/><text x="89.6114%" y="847.50">async_global_ex..</text></g><g><title>async_global_executor::reactor::block_on (10,719 samples, 10.03%)</title><rect x="89.3614%" y="821" width="10.0313%" height="15" fill="rgb(247,0,4)" fg:x="95488" fg:w="10719"/><text x="89.6114%" y="831.50">async_global_ex..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (10,719 samples, 10.03%)</title><rect x="89.3614%" y="805" width="10.0313%" height="15" fill="rgb(218,130,10)" fg:x="95488" fg:w="10719"/><text x="89.6114%" y="815.50">async_global_ex..</text></g><g><title>async_io::driver::block_on (10,719 samples, 10.03%)</title><rect x="89.3614%" y="789" width="10.0313%" height="15" fill="rgb(239,32,7)" fg:x="95488" fg:w="10719"/><text x="89.6114%" y="799.50">async_io::drive..</text></g><g><title>std::time::Instant::now (42 samples, 0.04%)</title><rect x="99.3533%" y="773" width="0.0393%" height="15" fill="rgb(210,192,24)" fg:x="106165" fg:w="42"/><text x="99.6033%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (42 samples, 0.04%)</title><rect x="99.3533%" y="757" width="0.0393%" height="15" fill="rgb(226,212,17)" fg:x="106165" fg:w="42"/><text x="99.6033%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::now (42 samples, 0.04%)</title><rect x="99.3533%" y="741" width="0.0393%" height="15" fill="rgb(219,201,28)" fg:x="106165" fg:w="42"/><text x="99.6033%" y="751.50"></text></g><g><title>__clock_gettime_2 (37 samples, 0.03%)</title><rect x="99.3580%" y="725" width="0.0346%" height="15" fill="rgb(235,207,41)" fg:x="106170" fg:w="37"/><text x="99.6080%" y="735.50"></text></g><g><title>__vdso_clock_gettime (31 samples, 0.03%)</title><rect x="99.3636%" y="709" width="0.0290%" height="15" fill="rgb(241,95,54)" fg:x="106176" fg:w="31"/><text x="99.6136%" y="719.50"></text></g><g><title>[[vdso]] (20 samples, 0.02%)</title><rect x="99.3739%" y="693" width="0.0187%" height="15" fill="rgb(248,12,23)" fg:x="106187" fg:w="20"/><text x="99.6239%" y="703.50"></text></g><g><title>std::sys::unix::thread::guard::current (11 samples, 0.01%)</title><rect x="99.3926%" y="1061" width="0.0103%" height="15" fill="rgb(228,173,4)" fg:x="106207" fg:w="11"/><text x="99.6426%" y="1071.50"></text></g><g><title>__pthread_getattr_np (11 samples, 0.01%)</title><rect x="99.3926%" y="1045" width="0.0103%" height="15" fill="rgb(254,99,5)" fg:x="106207" fg:w="11"/><text x="99.6426%" y="1055.50"></text></g><g><title>__GI___clone (10,744 samples, 10.05%)</title><rect x="89.3492%" y="1173" width="10.0547%" height="15" fill="rgb(212,184,17)" fg:x="95475" fg:w="10744"/><text x="89.5992%" y="1183.50">__GI___clone</text></g><g><title>start_thread (10,740 samples, 10.05%)</title><rect x="89.3530%" y="1157" width="10.0509%" height="15" fill="rgb(252,174,1)" fg:x="95479" fg:w="10740"/><text x="89.6030%" y="1167.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10,739 samples, 10.05%)</title><rect x="89.3539%" y="1141" width="10.0500%" height="15" fill="rgb(241,118,51)" fg:x="95480" fg:w="10739"/><text x="89.6039%" y="1151.50">std::sys::unix:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10,739 samples, 10.05%)</title><rect x="89.3539%" y="1125" width="10.0500%" height="15" fill="rgb(227,94,47)" fg:x="95480" fg:w="10739"/><text x="89.6039%" y="1135.50">&lt;alloc::boxed::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10,739 samples, 10.05%)</title><rect x="89.3539%" y="1109" width="10.0500%" height="15" fill="rgb(229,104,2)" fg:x="95480" fg:w="10739"/><text x="89.6039%" y="1119.50">&lt;alloc::boxed::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (10,739 samples, 10.05%)</title><rect x="89.3539%" y="1093" width="10.0500%" height="15" fill="rgb(219,28,31)" fg:x="95480" fg:w="10739"/><text x="89.6039%" y="1103.50">core::ops::func..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (10,739 samples, 10.05%)</title><rect x="89.3539%" y="1077" width="10.0500%" height="15" fill="rgb(233,109,36)" fg:x="95480" fg:w="10739"/><text x="89.6039%" y="1087.50">std::thread::Bu..</text></g><g><title>__GI___pthread_rwlock_rdlock (12 samples, 0.01%)</title><rect x="99.4048%" y="1173" width="0.0112%" height="15" fill="rgb(246,88,11)" fg:x="106220" fg:w="12"/><text x="99.6548%" y="1183.50"></text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (13 samples, 0.01%)</title><rect x="99.4385%" y="1173" width="0.0122%" height="15" fill="rgb(209,212,17)" fg:x="106256" fg:w="13"/><text x="99.6885%" y="1183.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (16 samples, 0.01%)</title><rect x="99.4507%" y="1173" width="0.0150%" height="15" fill="rgb(243,59,29)" fg:x="106269" fg:w="16"/><text x="99.7007%" y="1183.50"></text></g><g><title>anon.5a8712262bf40cbf22773bec58d3bcb3.131.llvm.5488454698345189781 (12 samples, 0.01%)</title><rect x="99.4806%" y="1173" width="0.0112%" height="15" fill="rgb(244,205,48)" fg:x="106301" fg:w="12"/><text x="99.7306%" y="1183.50"></text></g><g><title>anon.794dfa6f8774b2dd349a38ea1de36418.12.llvm.17981255357264773552 (15 samples, 0.01%)</title><rect x="99.4965%" y="1173" width="0.0140%" height="15" fill="rgb(227,30,6)" fg:x="106318" fg:w="15"/><text x="99.7465%" y="1183.50"></text></g><g><title>anon.794dfa6f8774b2dd349a38ea1de36418.16.llvm.17981255357264773552 (20 samples, 0.02%)</title><rect x="99.5106%" y="1173" width="0.0187%" height="15" fill="rgb(220,205,48)" fg:x="106333" fg:w="20"/><text x="99.7606%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="99.5293%" y="1157" width="0.0168%" height="15" fill="rgb(250,94,14)" fg:x="106353" fg:w="18"/><text x="99.7793%" y="1167.50"></text></g><g><title>anon.8cbbe2c0282a10fd01090990b2493c21.14.llvm.10576288800194509280 (36 samples, 0.03%)</title><rect x="99.5293%" y="1173" width="0.0337%" height="15" fill="rgb(216,119,42)" fg:x="106353" fg:w="36"/><text x="99.7793%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="99.5461%" y="1157" width="0.0168%" height="15" fill="rgb(232,155,0)" fg:x="106371" fg:w="18"/><text x="99.7961%" y="1167.50"></text></g><g><title>anon.f94f00739c38b729b2c566a3d23fbe0c.4.llvm.16013060974345293444 (11 samples, 0.01%)</title><rect x="99.5648%" y="1173" width="0.0103%" height="15" fill="rgb(212,24,32)" fg:x="106391" fg:w="11"/><text x="99.8148%" y="1183.50"></text></g><g><title>async_executor::steal (62 samples, 0.06%)</title><rect x="99.5920%" y="1173" width="0.0580%" height="15" fill="rgb(216,69,20)" fg:x="106420" fg:w="62"/><text x="99.8420%" y="1183.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (29 samples, 0.03%)</title><rect x="99.6594%" y="1173" width="0.0271%" height="15" fill="rgb(229,73,31)" fg:x="106492" fg:w="29"/><text x="99.9094%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (32 samples, 0.03%)</title><rect x="99.6912%" y="1173" width="0.0299%" height="15" fill="rgb(224,219,20)" fg:x="106526" fg:w="32"/><text x="99.9412%" y="1183.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (20 samples, 0.02%)</title><rect x="99.7211%" y="1173" width="0.0187%" height="15" fill="rgb(215,146,41)" fg:x="106558" fg:w="20"/><text x="99.9711%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (34 samples, 0.03%)</title><rect x="99.7520%" y="1173" width="0.0318%" height="15" fill="rgb(244,71,31)" fg:x="106591" fg:w="34"/><text x="100.0020%" y="1183.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (21 samples, 0.02%)</title><rect x="99.7969%" y="1173" width="0.0197%" height="15" fill="rgb(224,24,11)" fg:x="106639" fg:w="21"/><text x="100.0469%" y="1183.50"></text></g><g><title>async-std/runti (106,641 samples, 99.80%)</title><rect x="0.0309%" y="1189" width="99.7988%" height="15" fill="rgb(229,76,15)" fg:x="33" fg:w="106641"/><text x="0.2809%" y="1199.50">async-std/runti</text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (43 samples, 0.04%)</title><rect x="99.8297%" y="933" width="0.0402%" height="15" fill="rgb(209,93,2)" fg:x="106674" fg:w="43"/><text x="100.0797%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (43 samples, 0.04%)</title><rect x="99.8297%" y="917" width="0.0402%" height="15" fill="rgb(216,200,50)" fg:x="106674" fg:w="43"/><text x="100.0797%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (43 samples, 0.04%)</title><rect x="99.8297%" y="901" width="0.0402%" height="15" fill="rgb(211,67,34)" fg:x="106674" fg:w="43"/><text x="100.0797%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (43 samples, 0.04%)</title><rect x="99.8297%" y="885" width="0.0402%" height="15" fill="rgb(225,87,47)" fg:x="106674" fg:w="43"/><text x="100.0797%" y="895.50"></text></g><g><title>__GI___pthread_mutex_lock (43 samples, 0.04%)</title><rect x="99.8297%" y="869" width="0.0402%" height="15" fill="rgb(217,185,16)" fg:x="106674" fg:w="43"/><text x="100.0797%" y="879.50"></text></g><g><title>__lll_lock_wait (43 samples, 0.04%)</title><rect x="99.8297%" y="853" width="0.0402%" height="15" fill="rgb(205,0,0)" fg:x="106674" fg:w="43"/><text x="100.0797%" y="863.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (44 samples, 0.04%)</title><rect x="99.8297%" y="949" width="0.0412%" height="15" fill="rgb(207,116,45)" fg:x="106674" fg:w="44"/><text x="100.0797%" y="959.50"></text></g><g><title>std::panic::catch_unwind (45 samples, 0.04%)</title><rect x="99.8297%" y="1061" width="0.0421%" height="15" fill="rgb(221,156,26)" fg:x="106674" fg:w="45"/><text x="100.0797%" y="1071.50"></text></g><g><title>std::panicking::try (45 samples, 0.04%)</title><rect x="99.8297%" y="1045" width="0.0421%" height="15" fill="rgb(213,140,4)" fg:x="106674" fg:w="45"/><text x="100.0797%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (45 samples, 0.04%)</title><rect x="99.8297%" y="1029" width="0.0421%" height="15" fill="rgb(231,224,15)" fg:x="106674" fg:w="45"/><text x="100.0797%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (45 samples, 0.04%)</title><rect x="99.8297%" y="1013" width="0.0421%" height="15" fill="rgb(244,76,20)" fg:x="106674" fg:w="45"/><text x="100.0797%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (45 samples, 0.04%)</title><rect x="99.8297%" y="997" width="0.0421%" height="15" fill="rgb(238,117,7)" fg:x="106674" fg:w="45"/><text x="100.0797%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (45 samples, 0.04%)</title><rect x="99.8297%" y="981" width="0.0421%" height="15" fill="rgb(235,1,10)" fg:x="106674" fg:w="45"/><text x="100.0797%" y="991.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (45 samples, 0.04%)</title><rect x="99.8297%" y="965" width="0.0421%" height="15" fill="rgb(216,165,6)" fg:x="106674" fg:w="45"/><text x="100.0797%" y="975.50"></text></g><g><title>tokio-runtime-w (50 samples, 0.05%)</title><rect x="99.8297%" y="1189" width="0.0468%" height="15" fill="rgb(246,91,35)" fg:x="106674" fg:w="50"/><text x="100.0797%" y="1199.50"></text></g><g><title>__GI___clone (50 samples, 0.05%)</title><rect x="99.8297%" y="1173" width="0.0468%" height="15" fill="rgb(228,96,24)" fg:x="106674" fg:w="50"/><text x="100.0797%" y="1183.50"></text></g><g><title>start_thread (50 samples, 0.05%)</title><rect x="99.8297%" y="1157" width="0.0468%" height="15" fill="rgb(254,217,53)" fg:x="106674" fg:w="50"/><text x="100.0797%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (50 samples, 0.05%)</title><rect x="99.8297%" y="1141" width="0.0468%" height="15" fill="rgb(209,60,0)" fg:x="106674" fg:w="50"/><text x="100.0797%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50 samples, 0.05%)</title><rect x="99.8297%" y="1125" width="0.0468%" height="15" fill="rgb(250,93,26)" fg:x="106674" fg:w="50"/><text x="100.0797%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50 samples, 0.05%)</title><rect x="99.8297%" y="1109" width="0.0468%" height="15" fill="rgb(211,9,40)" fg:x="106674" fg:w="50"/><text x="100.0797%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (50 samples, 0.05%)</title><rect x="99.8297%" y="1093" width="0.0468%" height="15" fill="rgb(242,57,20)" fg:x="106674" fg:w="50"/><text x="100.0797%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (50 samples, 0.05%)</title><rect x="99.8297%" y="1077" width="0.0468%" height="15" fill="rgb(248,85,48)" fg:x="106674" fg:w="50"/><text x="100.0797%" y="1087.50"></text></g><g><title>__GI___clone (119 samples, 0.11%)</title><rect x="99.8821%" y="1173" width="0.1114%" height="15" fill="rgb(212,117,2)" fg:x="106730" fg:w="119"/><text x="100.1321%" y="1183.50"></text></g><g><title>start_thread (11 samples, 0.01%)</title><rect x="99.9832%" y="1157" width="0.0103%" height="15" fill="rgb(243,19,3)" fg:x="106838" fg:w="11"/><text x="100.2332%" y="1167.50"></text></g><g><title>all (106,856 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(232,217,24)" fg:x="0" fg:w="106856"/><text x="0.2500%" y="1215.50"></text></g><g><title>tremor (132 samples, 0.12%)</title><rect x="99.8765%" y="1189" width="0.1235%" height="15" fill="rgb(224,175,40)" fg:x="106724" fg:w="132"/><text x="100.1265%" y="1199.50"></text></g></svg></svg>